openapi: 3.0.0
servers:
  - url: /api/v2
info:
  contact:
    email: syndicationadmin@hhs.gov
  description: <div class="swagger-ui-wrap extraFooter"><h3>Common Features / Behaviors</h3> <div class="features"> <ul> <li><strong>* "sort" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class="example">name</span><span class="description">sort results by name ascending</span></li> <li><span class="example">-name</span><span class="description">sort results by name descending</span></li> <li><span class="example">-name,id</span><span class="description">sort results by name descending and then by id ascending</span></li> <li><span class="example">id,-dateContentAuthored</span><span class="description">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href="http://www.ietf.org/rfc/rfc3339.txt">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: http://www.gnu.org/licenses/gpl.html
  termsOfService: http://www.hhs.gov/web/socialmedia/policies/tos.html#ready
  title: HHS Media Services API
  version: "2"
  x-apisguru-categories:
    - open_data
  x-logo:
    backgroundColor: "#185394"
    url: http://www.hhs.gov/sites/all/themes/project_h/css/images/hhs_logo.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 2.6.0
      format: openapi
      url: https://api.digitalmedia.hhs.gov/swagger
      version: "3.0"
  x-providerName: hhs.gov
tags:
  - description: Information about media
    name: media
  - description: Information about languages
    name: languages
  - description: Information about media types
    name: mediaTypes
  - description: Information about tags
    name: tags
  - description: Information about campaigns
    name: campaigns
  - description: Information about tags
    name: sources
  - description: Global Search
    name: resources
  - description: Get media from user generated lists.
    name: userMediaLists
paths:
  /resources.json:
    get:
      description: Global search
      parameters:
        - allowEmptyValue: false
          description: The search query supplied by the user
          explode: false
          in: query
          name: q
          required: true
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceWrapped"
                title: ArrayOfResources
                type: array
          description: "\"Returns the list of Resources matching the search query 'q'.<p>The search query 'q' is a Lucene query.<br>The syntax for a Lucene query can be found <a href=\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\">here</a>.\""
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Resources by search query
      tags:
        - resources
  /resources/campaigns.json:
    get:
      description: Media Listings for a specific campaign
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: "* Set of fields to sort the records by."
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignWrapped"
          description: Returns the list of Campaigns.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Campaigns
      tags:
        - campaigns
  "/resources/campaigns/{id}.json":
    get:
      description: Information about a specific campaign
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignWrapped"
          description: Returns the Campaign identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Campaign by ID
      tags:
        - campaigns
  "/resources/campaigns/{id}/media.json":
    get:
      description: Campaign Listings
      parameters:
        - description: The id of the campaign to find media items for
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaItemWrapped"
          description: Returns the list of MediaItems for the Campaign identified by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by Campaign ID
      tags:
        - campaigns
  "/resources/campaigns/{id}/syndicate.{format}":
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: "Method used to render an html request. Accepts one: [mv, list, feed]"
          explode: false
          in: query
          name: displayMethod
          required: false
          schema:
            format: ""
            type: string
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SyndicateMarshallerWrapped"
          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Campaign
      tags:
        - campaigns
  /resources/languages.json:
    get:
      description: Language Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LanguageWrapped"
                title: ArrayOfLanguages
                type: array
          description: Returns the list Languages.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Languages
      tags:
        - languages
  "/resources/languages/{id}.json":
    get:
      description: Information about a specific language
      parameters:
        - description: The id of the language to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LanguageWrapped"
                title: ArrayOfLanguages
                type: array
          description: Returns the Language identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Language by ID
      tags:
        - languages
  /resources/media.json:
    get:
      description: Media Items Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: "* Set of fields to sort the records by."
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: "* The ascending or descending order."
          explode: false
          in: query
          name: order
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items belonging to the specified media type[s].
          explode: false
          in: query
          name: mediaTypes
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items containing the provided name, case insensitive.
          explode: false
          in: query
          name: name
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Restrict filtering to media items in a specific collection.
          explode: false
          in: query
          name: collectionId
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Find all media items containing the partial name, case insensitive.
          explode: false
          in: query
          name: nameContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items containing the provided partial description, case insensitive.
          explode: false
          in: query
          name: descriptionContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which have the provided sourceUrl, case insensitive.
          explode: false
          in: query
          name: sourceUrl
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which contain the provided partial sourceUrl, case insensitive.
          explode: false
          in: query
          name: sourceUrlContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which have the provided customThumbnailUrl, case insensitive.
          explode: false
          in: query
          name: customThumbnailUrl
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which contain the provided partial customThumbnailUrl, case insensitive.
          explode: false
          in: query
          name: customThumbnailUrlContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored on the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateContentAuthored
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated on the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateContentUpdated
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items published on the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateContentPublished
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items reviewed on the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateContentReviewed
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items syndicated on the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateSyndicationCaptured
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated through the syndication system on the provided day, (RFC 3339, time ignored).
          explode: false
          in: query
          name: dateSyndicationUpdated
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored since the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentAuthoredSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored before the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentAuthoredBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: contentAuthoredInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated since the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentUpdatedSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated before the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentUpdatedBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: contentUpdatedInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated since the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentPublishedSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items published before the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentPublishedBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: contentPublishedInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items reviewed since the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentReviewedSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items reviewed before the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: contentReviewedBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: contentReviewedInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored since the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationCapturedSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored before the provided day (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationCapturedBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: syndicationCapturedInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated since the provided day, (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationUpdatedSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated before the provided day, (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationUpdatedBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: syndicationUpdatedInRange
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items visible since the provided day, (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationVisibleSinceDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items visible before the provided day, (RFC 3339, time ignored).
          explode: false
          in: query
          name: syndicationVisibleBeforeDate
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).
          explode: false
          in: query
          name: syndicationVisibleInRange
          required: false
          schema:
            format: date
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items written in the language specified by Id.
          explode: false
          in: query
          name: languageId
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - allowEmptyValue: false
          description: Find all media items written in the language specified by name, case insensitive.
          explode: false
          in: query
          name: languageName
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items written in the language specified by 639-2 isoCode , case insensitive.
          explode: false
          in: query
          name: languageIsoCode
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which match the provided hash, case insensitive.
          explode: false
          in: query
          name: hash
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items which match the provided partial hash, case insensitive.
          explode: false
          in: query
          name: hashContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by Id.
          explode: false
          in: query
          name: sourceId
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by name, case insensitive.
          explode: false
          in: query
          name: sourceName
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by partial name, case insensitive.
          explode: false
          in: query
          name: sourceNameContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by acronym, case insensitive.
          explode: false
          in: query
          name: sourceAcronym
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items that belong to the source specified by partial acronym, case insensitive.
          explode: false
          in: query
          name: sourceAcronymContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find only media items tagged with the specified tag Ids.
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find only media from within the supplied list of Ids.
          explode: false
          in: query
          name: restrictToSet
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Find all media items containing the createdBy value.
          explode: false
          in: query
          name: createdBy
          required: false
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems matching the specified query parameters.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems
      tags:
        - media
  /resources/media/featured.json:
    get:
      description: Get the list of featured content in the syndication system
      parameters:
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItem"
                title: ArrayOfMediaItems
                type: array
          description: Get the list of featured content in the syndication system
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get the list of featured content in the syndication system
      tags:
        - media
  "/resources/media/mostPopularMedia.{format}":
    get:
      description: Get the media with the highest ratings.
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems with the highest ratings.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by popularity
      tags:
        - media
  /resources/media/searchResults.json:
    get:
      description: Full search
      parameters:
        - allowEmptyValue: false
          description: The search query supplied by the user
          explode: false
          in: query
          name: q
          required: true
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The offset of the records set to return for pagination.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems matching the search query 'q'.<p>Please enter keyword or URL in search query 'q'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by search query
      tags:
        - media
  "/resources/media/{id}.json":
    get:
      description: Information about a specific media item
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItem by ID
      tags:
        - media
  "/resources/media/{id}/content":
    get:
      description: The actual media content (html, image, etc...)
      parameters:
        - description: The id of the media to show content for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The method that called this method
          explode: false
          in: query
          name: calledByBuild
          required: false
          schema:
            format: ""
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Returns the raw content (html, image, etc...) for the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get content for MediaItem
      tags:
        - media
  "/resources/media/{id}/embed.json":
    get:
      description: Get the javascript or iframe embed code for this item (to embed it on a web page).
      parameters:
        - description: The id of the media to get embed code for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: Currently supports 'iframe', defaults to 'javascript'.
          explode: false
          in: query
          name: flavor
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The width of the generated iframe.
          explode: false
          in: query
          name: width
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The height of the generated iframe.
          explode: false
          in: query
          name: height
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The name of the iframe element
          explode: false
          in: query
          name: iframeName
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Should a reference to the JQuery Library be omitted?
          explode: false
          in: query
          name: excludeJquery
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Should the div to insert content into be omitted?
          explode: false
          in: query
          name: excludeDiv
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Should the div to insert content into have a specific name?
          explode: false
          in: query
          name: divId
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: "Method used to render an html request. Accepts one: [mv, list, feed]"
          explode: false
          in: query
          name: displayMethod
          required: false
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Returns the javascript or iframe embed code for the MediaItem identified by 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get embed code for MediaItem
      tags:
        - media
  "/resources/media/{id}/preview.jpg":
    get:
      description: Get the jpg preview of the content item where applicable.
      parameters:
        - description: The id of the media to get a preview for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Returns the JPG preview, where applicable, for the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
        - media
  "/resources/media/{id}/relatedMedia.{format}":
    get:
      description: Get the media related to the current media item.
      parameters:
        - description: The id of the media item to get related media for
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems related to the MediaItem identified by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get related MediaItems by ID
      tags:
        - media
  "/resources/media/{id}/syndicate.{format}":
    get:
      description: Get syndicated content.
      parameters:
        - description: The id of the media to show embed code for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The css class to target for extraction.
          explode: false
          in: query
          name: cssClass
          required: false
          schema:
            default: syndicate
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Remove in-line styles from content.
          explode: false
          in: query
          name: stripStyles
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Remove script tags from content.
          explode: false
          in: query
          name: stripScripts
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Remove image tags from content.
          explode: false
          in: query
          name: stripImages
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Remove break tags from content.
          explode: false
          in: query
          name: stripBreaks
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Remove class attributes from content (except 'syndicate').
          explode: false
          in: query
          name: stripClasses
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: Set font size (in points) of p, div, and span tags.
          explode: false
          in: query
          name: font-size
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Accepts valid CSS float options, such as 'left' or 'right'. Will inject a style into the content before rendering.
          explode: false
          in: query
          name: imageFloat
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Accepts 4 CSV values representing pixel sizes of margin similar to CSS. Default format is 'north,east,south,west' - for example '0,10,10,0' would put a 10 pixel margin on the right and bottom sides of an image. Will inject a style into the content before rendering.
          explode: false
          in: query
          name: imageMargin
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: If content is a video, the embeded video will auto play when loaded.
          explode: false
          in: query
          name: autoplay
          required: false
          schema:
            default: true
            format: ""
            type: boolean
          style: form
        - allowEmptyValue: false
          description: If content is a video, related items will be shown at the end of playback.
          explode: false
          in: query
          name: rel
          required: false
          schema:
            default: false
            format: ""
            type: boolean
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SyndicateMarshallerWrapped"
          description: Returns the syndicated content for a given MediaItem in the specified 'format' (HTML or JSON).
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get syndicated content for MediaItem
      tags:
        - media
  "/resources/media/{id}/thumbnail.jpg":
    get:
      description: Get the jpg thumbnail of the content item where applicable.
      parameters:
        - description: The id of the media to get a thumbnail for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Returns the JPG thumbnail, where applicable, for the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get JPG thumbnail for MediaItem
      tags:
        - media
  "/resources/media/{id}/youtubeMetaData.json":
    get:
      description: Youtube meta-data for a video item.
      parameters:
        - description: The id of the video to show meta data for.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  callback:
                    type: string
                  meta:
                    $ref: "#/components/schemas/Meta"
                  results:
                    items:
                      $ref: "#/components/schemas/YoutubeMetadata"
                    type: array
                type: object
          description: Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Youtube metadata for MediaItem
      tags:
        - media
  "/resources/mediaTypes.{format}":
    get:
      description: Information about media types
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaTypeHolderWrapped"
                title: ArrayOfMediaTypes
                type: array
          description: Returns the list of available MediaTypes.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaTypes
      tags:
        - mediaTypes
  /resources/sources.json:
    get:
      description: Source Listings
      parameters:
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SourceWrapped"
                title: ArrayOfSources
                type: array
          description: Returns the list of Sources.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Sources
      tags:
        - sources
  "/resources/sources/{id}.json":
    get:
      description: Information about a specific source.
      parameters:
        - description: The id of the source to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SourceWrapped"
                title: ArrayOfSources
                type: array
          description: Returns the Source identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Source by ID
      tags:
        - sources
  "/resources/sources/{id}/syndicate.{format}":
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: "Method used to render an html request. Accepts one: [mv, list, feed]"
          explode: false
          in: query
          name: displayMethod
          required: false
          schema:
            format: ""
            type: string
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfSyndicatedItems
                type: array
          description: Renders the list of MediaItems associated with the Source identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Source
      tags:
        - sources
  "/resources/tags.{format}":
    get:
      description: List of Tags
      parameters:
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return tags[s] matching the supplied name
          explode: false
          in: query
          name: name
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Return tags which contain the supplied partial name.
          explode: false
          in: query
          name: nameContains
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: Return tags associated with the supplied media id.
          explode: false
          in: query
          name: mediaId
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return tags belonging to the supplied tag type id.
          explode: false
          in: query
          name: typeId
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return tags belonging to the supplied tag type name.
          explode: false
          in: query
          name: typeName
          required: false
          schema:
            format: ""
            type: string
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagMarshallerWrapped"
                title: ArrayOfTags
                type: array
          description: Returns the list of Tags matching the specified query parameters in the specified 'format'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Tags
      tags:
        - tags
  "/resources/tags/tagLanguages.{format}":
    get:
      description: List of Tag Languages
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagLanguageMarshallerWrapped"
                title: ArrayOfTagLanguages
                type: array
          description: Returns the list of TagLanguages
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get TagLanguages
      tags:
        - tags
  "/resources/tags/tagTypes.{format}":
    get:
      description: List of Types
      parameters:
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagTypeMarshallerWrapped"
                title: ArrayOfTagTypes
                type: array
          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  "/resources/tags/{id}.{format}":
    get:
      description: Information about a specific tag
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagMarshallerWrapped"
                title: ArrayOfTags
                type: array
          description: Returns the Tag identified by the 'id' in the specified 'format'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
        - tags
  "/resources/tags/{id}/media.{format}":
    get:
      description: MediaItem
      parameters:
        - description: The id of the tag to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems associated with the Tag identified by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  "/resources/tags/{id}/related.{format}":
    get:
      description: Information about related tags to a specific tag
      parameters:
        - description: The id of the tag to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: The name of the property to which sorting will be applied
          explode: false
          in: query
          name: sort
          required: false
          schema:
            format: ""
            type: string
          style: form
        - allowEmptyValue: false
          description: The maximum number of records to return
          explode: false
          in: query
          name: max
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - allowEmptyValue: false
          description: Return records starting at the offset index.
          explode: false
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagMarshallerWrapped"
                title: ArrayOfTags
                type: array
          description: Returns the list of Tags related to the Tag identified by the 'id' in the specified format.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get related Tags by ID
      tags:
        - tags
  "/resources/tags/{id}/syndicate.{format}":
    get:
      description: MediaItem
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: "Method used to render an html request. Accepts one: [mv, list, feed]"
          explode: false
          in: query
          name: displayMethod
          required: false
          schema:
            format: ""
            type: string
          style: form
        - description: Automatically added
          in: path
          name: format
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Renders the list of MediaItems associated with the Tag identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
        - tags
  "/resources/userMediaLists/{id}.json":
    get:
      description: Get a specific user media list.
      parameters:
        - description: The id of the record to look up
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - allowEmptyValue: false
          description: "Method used to render an html request. Accepts one: [mv, list, feed]"
          explode: false
          in: query
          name: displayMethod
          required: false
          schema:
            format: int64
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MediaItemWrapped"
                title: ArrayOfMediaItems
                type: array
          description: Get a specific user media list by 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get UserMediaList by ID
      tags:
        - userMediaLists
components:
  schemas:
    AlternateImage:
      properties:
        height:
          format: int32
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
        url:
          type: string
        width:
          format: int32
          type: integer
      type: object
    AlternateImageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/AlternateImage"
          type: array
      type: object
    Campaign:
      properties:
        contactEmail:
          type: string
        description:
          type: string
        endDate:
          format: date
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        startDate:
          format: date
          type: string
      type: object
    CampaignWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
      type: object
    Collection:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
      type: object
    CollectionWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Collection"
          type: array
      type: object
    ExtendedAttribute:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    ExtendedAttributeWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
      type: object
    Html:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
      type: object
    HtmlWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Html"
          type: array
      type: object
    Image:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        height:
          format: int32
          type: integer
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
        width:
          format: int32
          type: integer
      type: object
    ImageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Image"
          type: array
      type: object
    Infographic:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        height:
          format: int32
          type: integer
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
        width:
          format: int32
          type: integer
      type: object
    InfographicWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Infographic"
          type: array
      type: object
    Language:
      properties:
        id:
          format: int64
          type: integer
        isActive:
          type: boolean
        isoCode:
          type: string
        name:
          type: string
      type: object
    LanguageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Language"
          type: array
      type: object
    MediaItem:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
      type: object
    MediaItemWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/MediaItem"
          type: array
      type: object
    MediaTypeHolder:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    MediaTypeHolderWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/MediaTypeHolder"
          type: array
      type: object
    Message:
      properties:
        errorCode:
          type: string
        errorDetail:
          type: string
        errorMessage:
          type: string
        userMessage:
          type: string
      type: object
    MessageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Message"
          type: array
      type: object
    Meta:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/Message"
          type: array
        pagination:
          $ref: "#/components/schemas/Pagination"
        status:
          type: integer
      type: object
    MetaWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Meta"
          type: array
      type: object
    PDF:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
      type: object
    PDFWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/PDF"
          type: array
      type: object
    Pagination:
      properties:
        count:
          type: integer
        currentUrl:
          type: string
        max:
          type: integer
        nextUrl:
          type: string
        offset:
          type: integer
        pageNum:
          type: integer
        previousUrl:
          type: string
        sort:
          type: string
        total:
          type: integer
        totalPages:
          type: integer
      type: object
    PaginationWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Pagination"
          type: array
      type: object
    ResourceWrapped: {}
    Source:
      properties:
        acronym:
          type: string
        contactEmail:
          type: string
        id:
          format: int64
          type: integer
        largeLogoUrl:
          type: string
        name:
          type: string
        smallLogoUrl:
          type: string
        websiteUrl:
          type: string
      type: object
    SourceWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Source"
          type: array
      type: object
    SyndicateMarshaller:
      properties:
        content:
          type: string
        description:
          type: string
        id:
          type: integer
        mediaType:
          type: string
        name:
          type: string
        sourceUrl:
          type: string
      type: object
    SyndicateMarshallerWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/SyndicateMarshaller"
          type: array
      type: object
    TagLanguageMarshaller:
      properties:
        id:
          type: integer
        isActive:
          type: boolean
        isoCode:
          type: string
        name:
          type: string
      type: object
    TagLanguageMarshallerWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/TagLanguageMarshaller"
          type: array
      type: object
    TagMarshaller:
      properties:
        id:
          type: integer
        language:
          $ref: "#/components/schemas/TagLanguageMarshaller"
        name:
          type: string
        type:
          $ref: "#/components/schemas/TagTypeMarshaller"
      type: object
    TagMarshallerWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/TagMarshaller"
          type: array
      type: object
    TagTypeMarshaller:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    TagTypeMarshallerWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/TagTypeMarshaller"
          type: array
      type: object
    Tweet:
      properties:
        account:
          $ref: "#/components/schemas/TwitterAccount"
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        mediaUrl:
          type: string
        messageText:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
        tweetDate:
          format: date
          type: string
        tweetId:
          format: int32
          type: integer
        videoVariantUrl:
          type: string
      type: object
    TweetWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Tweet"
          type: array
      type: object
    TwitterAccount: {}
    Video:
      properties:
        campaigns:
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        createdBy:
          type: string
        customAttributionUrl:
          type: string
        customPreviewUrl:
          type: string
        customThumbnailUrl:
          type: string
        dateContentAuthored:
          format: date
          type: string
        dateContentPublished:
          format: date
          type: string
        dateContentReviewed:
          format: date
          type: string
        dateContentUpdated:
          format: date
          type: string
        dateSyndicationCaptured:
          format: date
          type: string
        dateSyndicationUpdated:
          format: date
          type: string
        dateSyndicationVisible:
          format: date
          type: string
        description:
          type: string
        extendedAttributes:
          items:
            $ref: "#/components/schemas/ExtendedAttribute"
          type: array
        externalGuid:
          type: string
        foreignSyndicationAPIUrl:
          type: string
        hash:
          type: string
        id:
          format: int64
          type: integer
        language:
          $ref: "#/components/schemas/Language"
        mediaType:
          type: string
        name:
          type: string
        source:
          $ref: "#/components/schemas/Source"
        sourceUrl:
          type: string
        targetUrl:
          type: string
      type: object
    VideoWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/Video"
          type: array
      type: object
    YoutubeMetadata:
      properties: {}
      type: object
    YoutubeMetadataWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        results:
          items:
            $ref: "#/components/schemas/YoutubeMetadata"
          type: array
      type: object
    test: {}
