openapi: 3.0.0
servers:
  - description: Production
    url: https://production.plaid.com
  - description: Development
    url: https://development.plaid.com
  - description: Sandbox
    url: https://sandbox.plaid.com
info:
  contact:
    name: Plaid Developer Team
    url: https://plaid.com
  description: The Plaid REST API. Please see https://plaid.com/docs/api for more details.
  termsOfService: https://plaid.com/legal/
  title: The Plaid API
  version: 2020-09-14_1.20.6
  x-apisguru-categories:
    - financial
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/plaid/plaid-openapi/master/2020-09-14.yml
      version: "3.0"
  x-providerName: plaid.com
security:
  - clientId: []
    plaidVersion: []
    secret: []
tags:
  - description: The Plaid API
    name: plaid
paths:
  /accounts/balance/get:
    post:
      description: The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaid’s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.
      externalDocs:
        url: /api/products/#accountsbalanceget
      operationId: accountsBalanceGet
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  access_token: string
                  client_id: string
                  options:
                    account_ids:
                      - string
                  secret: string
            schema:
              $ref: "#/components/schemas/AccountsBalanceGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        subtype: checking
                        type: depository
                      - account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
                        balances:
                          available: null
                          current: 410
                          iso_currency_code: USD
                          limit: 2000
                          unofficial_currency_code: null
                        mask: "3333"
                        name: Plaid Credit Card
                        official_name: Plaid Diamond 12.5% APR Interest Credit Card
                        subtype: credit card
                        type: credit
                      - account_id: Pp1Vpkl9w8sajvK6oEEKtr7vZxBnGpf7LxxLE
                        balances:
                          available: null
                          current: 65262
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "7777"
                        name: Plaid Student Loan
                        official_name: null
                        subtype: student
                        type: loan
                    item:
                      available_products:
                        - balance
                        - identity
                        - investments
                      billed_products:
                        - assets
                        - auth
                        - liabilities
                        - transactions
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_3
                      item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: qk5Bxes3gDfv4F2
              schema:
                $ref: "#/components/schemas/AccountsGetResponse"
          description: OK
      summary: Retrieve real-time balance data
      tags:
        - plaid
  /accounts/get:
    post:
      description: |-
        The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.

        This endpoint retrieves cached information, rather than extracting fresh information from the institution. As a result, balances returned may not be up-to-date; for realtime balance information, use `/accounts/balance/get` instead.
      externalDocs:
        url: /api/accounts/#accountsget
      operationId: accountsGet
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  access_token: string
                  client_id: string
                  options:
                    account_ids:
                      - string
                  secret: string
            schema:
              $ref: "#/components/schemas/AccountsGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        subtype: checking
                        type: depository
                      - account_id: 6PdjjRP6LmugpBy5NgQvUqpRXMWxzktg3rwrk
                        balances:
                          available: null
                          current: 23631.9805
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "6666"
                        name: Plaid 401k
                        official_name: null
                        subtype: 401k
                        type: investment
                      - account_id: XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58
                        balances:
                          available: null
                          current: 65262
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "7777"
                        name: Plaid Student Loan
                        official_name: null
                        subtype: student
                        type: loan
                    item:
                      available_products:
                        - balance
                        - identity
                        - payment_initiation
                        - transactions
                      billed_products:
                        - assets
                        - auth
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_117650
                      item_id: DWVAAPWq4RHGlEaNyGKRTAnPLaEmo8Cvq7na6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: bkVE1BHWMAZ9Rnr
              schema:
                $ref: "#/components/schemas/AccountsGetResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Retrieve accounts
      tags:
        - plaid
  /application/get:
    post:
      description: Allows financial institutions to retrieve information about Plaid clients for the purpose of building control-tower experiences
      operationId: applicationGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGetResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Retrieve information about a Plaid application
      tags:
        - plaid
  /asset_report/audit_copy/create:
    post:
      description: |-
        Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certainty™ program. An Audit Copy contains the same underlying data as the Asset Report.

        To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. You’ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
      externalDocs:
        url: /api/products/#asset_reportaudit_copycreate
      operationId: assetReportAuditCopyCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportAuditCopyCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    audit_copy_token: a-sandbox-3TAU2CWVYBDVRHUCAAAI27ULU4
                    request_id: Iam3b
              schema:
                $ref: "#/components/schemas/AssetReportAuditCopyCreateResponse"
          description: OK
      summary: Create Asset Report Audit Copy
      tags:
        - plaid
  /asset_report/audit_copy/get:
    post:
      description: "`/asset_report/audit_copy/get` allows auditors to get a copy of an Asset Report that was previously shared via the `/asset_report/audit_copy/create` endpoint.  The caller of `/asset_report/audit_copy/create` must provide the `audit_copy_token` to the auditor.  This token can then be used to call `/asset_report/audit_copy/create`."
      externalDocs:
        url: /none/
      operationId: assetReportAuditCopyGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportAuditCopyGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetReportGetResponse"
          description: OK
      summary: Retrieve an Asset Report Audit Copy
      tags:
        - plaid
  /asset_report/audit_copy/remove:
    post:
      description: The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
      externalDocs:
        url: /api/products/#asset_reportaudit_copyremove
      operationId: assetReportAuditCopyRemove
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportAuditCopyRemoveRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    removed: true
                    request_id: m8MDnv9okwxFNBV
              schema:
                $ref: "#/components/schemas/AssetReportAuditCopyRemoveResponse"
          description: OK
      summary: Remove Asset Report Audit Copy
      tags:
        - plaid
  /asset_report/create:
    post:
      description: |-
        The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.

        The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](https://plaid.com/docs/api/webhooks/#Assets-webhooks).

        The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
      externalDocs:
        url: /api/products/#asset_reportcreate
      operationId: assetReportCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    asset_report_id: 1f414183-220c-44f5-b0c8-bc0e6d4053bb
                    asset_report_token: assets-sandbox-6f12f5bb-22dd-4855-b918-f47ec439198a
                    request_id: Iam3b
              schema:
                $ref: "#/components/schemas/AssetReportCreateResponse"
          description: OK
      summary: Create an Asset Report
      tags:
        - plaid
  /asset_report/filter:
    post:
      description: |-
        By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Account Select view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.

        To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report's data.

        Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.

        Plaid will fire a [`PRODUCT_READY`](https://plaid.com/docs/api/webhooks) webhook once generation of the filtered Asset Report has completed.
      externalDocs:
        url: /api/products/#asset_reportfilter
      operationId: assetReportFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportFilterRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    asset_report_id: fdc09207-0cef-4d88-b5eb-0d970758ebd9
                    asset_report_token: assets-sandbox-bc410c6a-4653-4c75-985c-e757c3497c5c
                    request_id: qEg07
              schema:
                $ref: "#/components/schemas/AssetReportFilterResponse"
          description: OK
      summary: Filter Asset Report
      tags:
        - plaid
  /asset_report/get:
    post:
      description: |-
        The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](https://plaid.com/docs/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.

        By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.

        To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`.
      externalDocs:
        url: /api/products/#asset_reportget
      operationId: assetReportGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    report:
                      asset_report_id: bf3a0490-344c-4620-a219-2693162e4b1d
                      client_report_id: 123abc
                      date_generated: 2020-06-05T22:47:53Z
                      days_requested: 3
                      items:
                        - accounts:
                            - account_id: 3gE5gnRzNyfXpBK5wEEKcymJ5albGVUqg77gr
                              balances:
                                available: 200
                                current: 210
                                iso_currency_code: USD
                                limit: null
                                unofficial_currency_code: null
                              days_available: 3
                              historical_balances:
                                - current: 210
                                  date: 2020-06-04
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                                - current: 210
                                  date: 2020-06-03
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                                - current: 210
                                  date: 2020-06-02
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                              mask: "1111"
                              name: Plaid Saving
                              official_name: Plaid Silver Standard 0.1% Interest Saving
                              owners:
                                - addresses:
                                    - data:
                                        city: Malakoff
                                        country: US
                                        postal_code: "14236"
                                        region: NY
                                        street: 2992 Cameron Road
                                      primary: true
                                    - data:
                                        city: San Matias
                                        country: US
                                        postal_code: 93405-2255
                                        region: CA
                                        street: 2493 Leisure Lane
                                      primary: false
                                  emails:
                                    - data: accountholder0@example.com
                                      primary: true
                                      type: primary
                                    - data: accountholder1@example.com
                                      primary: false
                                      type: secondary
                                    - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                                      primary: false
                                      type: other
                                  names:
                                    - Alberta Bobbeth Charleson
                                  phone_numbers:
                                    - data: "1112223333"
                                      primary: false
                                      type: home
                                    - data: "1112224444"
                                      primary: false
                                      type: work
                                    - data: "1112225555"
                                      primary: false
                                      type: mobile
                              ownership_type: null
                              subtype: savings
                              transactions: []
                              type: depository
                            - account_id: BxBXxLj1m4HMXBm9WZJyUg9XLd4rKEhw8Pb1J
                              balances:
                                available: null
                                current: 56302.06
                                iso_currency_code: USD
                                limit: null
                                unofficial_currency_code: null
                              days_available: 3
                              historical_balances: []
                              mask: "8888"
                              name: Plaid Mortgage
                              official_name: null
                              owners:
                                - addresses:
                                    - data:
                                        city: Malakoff
                                        country: US
                                        postal_code: "14236"
                                        region: NY
                                        street: 2992 Cameron Road
                                      primary: true
                                    - data:
                                        city: San Matias
                                        country: US
                                        postal_code: 93405-2255
                                        region: CA
                                        street: 2493 Leisure Lane
                                      primary: false
                                  emails:
                                    - data: accountholder0@example.com
                                      primary: true
                                      type: primary
                                    - data: accountholder1@example.com
                                      primary: false
                                      type: secondary
                                    - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                                      primary: false
                                      type: other
                                  names:
                                    - Alberta Bobbeth Charleson
                                  phone_numbers:
                                    - data: "1112223333"
                                      primary: false
                                      type: home
                                    - data: "1112224444"
                                      primary: false
                                      type: work
                                    - data: "1112225555"
                                      primary: false
                                      type: mobile
                              ownership_type: null
                              subtype: mortgage
                              transactions: []
                              type: loan
                            - account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
                              balances:
                                available: null
                                current: 410
                                iso_currency_code: USD
                                limit: null
                                unofficial_currency_code: null
                              days_available: 3
                              historical_balances:
                                - current: 410
                                  date: 2020-06-04
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                                - current: 410
                                  date: 2020-06-03
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                                - current: 410
                                  date: 2020-06-02
                                  iso_currency_code: USD
                                  unofficial_currency_code: null
                              mask: "3333"
                              name: Plaid Credit Card
                              official_name: Plaid Diamond 12.5% APR Interest Credit Card
                              owners:
                                - addresses:
                                    - data:
                                        city: Malakoff
                                        country: US
                                        postal_code: "14236"
                                        region: NY
                                        street: 2992 Cameron Road
                                      primary: true
                                    - data:
                                        city: San Matias
                                        country: US
                                        postal_code: 93405-2255
                                        region: CA
                                        street: 2493 Leisure Lane
                                      primary: false
                                  emails:
                                    - data: accountholder0@example.com
                                      primary: true
                                      type: primary
                                    - data: accountholder1@example.com
                                      primary: false
                                      type: secondary
                                    - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                                      primary: false
                                      type: other
                                  names:
                                    - Alberta Bobbeth Charleson
                                  phone_numbers:
                                    - data: "1112223333"
                                      primary: false
                                      type: home
                                    - data: "1112224444"
                                      primary: false
                                      type: work
                                    - data: "1112225555"
                                      primary: false
                                      type: mobile
                              ownership_type: null
                              subtype: credit card
                              transactions: []
                              type: credit
                          date_last_updated: 2020-06-05T22:47:52Z
                          institution_id: ins_3
                          institution_name: Chase
                          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
                      user:
                        client_user_id: "123456789"
                        email: accountholder0@example.com
                        first_name: Alberta
                        last_name: Charleson
                        middle_name: Bobbeth
                        phone_number: 111-222-3333
                        ssn: 123-45-6789
                    request_id: eYupqX1mZkEuQRx
                    warnings: []
              schema:
                $ref: "#/components/schemas/AssetReportGetResponse"
          description: OK
      summary: Retrieve an Asset Report
      tags:
        - plaid
  /asset_report/pdf/get:
    post:
      description: |-
        The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](https://plaid.com/docs/api/webhooks) webhook to fire, indicating that the Report is ready to be retrieved.

        The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.

        [View a sample PDF Asset Report](https://plaid.com/documents/sample-asset-report.pdf).
      externalDocs:
        url: /api/products/#asset_reportpdfget
      operationId: assetReportPdfGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportPDFGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/AssetReportPDFGetResponse"
          description: A PDF of the Asset Report
      summary: Retrieve a PDF Asset Report
      tags:
        - plaid
  /asset_report/refresh:
    post:
      description: |-
        An Asset Report is an immutable snapshot of a user's assets. In order to "refresh" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.

        The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string ("") for any previously-populated fields you would like set as empty.
      externalDocs:
        url: /api/products/#asset_reportrefresh
      operationId: assetReportRefresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportRefreshRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    asset_report_id: c33ebe8b-6a63-4d74-a83d-d39791231ac0
                    asset_report_token: assets-sandbox-8218d5f8-6d6d-403d-92f5-13a9afaa4398
                    request_id: NBZaq
              schema:
                $ref: "#/components/schemas/AssetReportRefreshResponse"
          description: OK
      summary: Refresh an Asset Report
      tags:
        - plaid
  /asset_report/remove:
    post:
      description: |-
        The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.

        The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
      externalDocs:
        url: /api/products/#asset_reportremove
      operationId: assetReportRemove
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetReportRemoveRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    removed: true
                    request_id: I6zHN
              schema:
                $ref: "#/components/schemas/AssetReportRemoveResponse"
          description: OK
      summary: Delete an Asset Report
      tags:
        - plaid
  /auth/get:
    post:
      description: |-
        The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item's checking and savings accounts, along with high-level account data and balances when available.

        Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.

        Also note that `/auth/get` will not return data for any new accounts opened after the Item was created. To obtain data for new accounts, create a new Item.
      externalDocs:
        url: /api/products/#authget
      operationId: authGet
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: "#/components/schemas/AuthGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "9606"
                        name: Plaid Checking
                        official_name: Plaid Gold Checking
                        subtype: checking
                        type: depository
                    item:
                      available_products:
                        - balance
                        - identity
                        - payment_initiation
                        - transactions
                      billed_products:
                        - assets
                        - auth
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_117650
                      item_id: DWVAAPWq4RHGlEaNyGKRTAnPLaEmo8Cvq7na6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    numbers:
                      ach:
                        - account: "9900009606"
                          account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                          routing: "011401533"
                          wire_routing: "021000021"
                      bacs:
                        - account: "31926819"
                          account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                          sort_code: "601613"
                      eft:
                        - account: "111122223333"
                          account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                          branch: "01140"
                          institution: "021"
                      international:
                        - account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                          bic: NWBKGB21
                          iban: GB29NWBK60161331926819
                    request_id: m8MDnv9okwxFNBV
              schema:
                $ref: "#/components/schemas/AuthGetResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Default error
      summary: Retrieve auth data
      tags:
        - plaid
  /bank_transfer/balance/get:
    post:
      description: |-
        Use the `/bank_transfer/balance/get` endpoint to see the available balance in your bank transfer account. Debit transfers increase this balance once their status is posted. Credit transfers decrease this balance when they are created.

        The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.

        Note that this endpoint can only be used with FBO accounts, when using Bank Transfers in the Full Service configuration. It cannot be used on your own account when using Bank Transfers in the BTS Platform configuration.
      externalDocs:
        url: /api/products#bank_transferbalanceget
      operationId: bankTransferBalanceGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferBalanceGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    balance:
                      available: "1721.70"
                      transactable: "721.70"
                    origination_account_id: 11111111-1111-1111-1111-111111111111
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/BankTransferBalanceGetResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Get balance of your Bank Transfer account
      tags:
        - plaid
  /bank_transfer/cancel:
    post:
      description: Use the `/bank_transfer/cancel` endpoint to cancel a bank transfer.  A transfer is eligible for cancelation if the `cancellable` property returned by `/bank_transfer/get` is `true`.
      externalDocs:
        url: /api/products#bank_transfercancel
      operationId: bankTransferCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferCancelRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: saKrIBuEB9qJZno
              schema:
                $ref: "#/components/schemas/BankTransferCancelResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Cancel a bank transfer
      tags:
        - plaid
  /bank_transfer/create:
    post:
      description: Use the `/bank_transfer/create` endpoint to initiate a new bank transfer.
      externalDocs:
        url: /api/products#bank_transfercreate
      operationId: bankTransferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfer:
                      account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                      ach_class: ppd
                      amount: "12.34"
                      cancellable: true
                      created: 2020-08-06T17:27:15Z
                      custom_tag: my tag
                      description: Testing2
                      direction: outbound
                      failure_reason: null
                      id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                      iso_currency_code: USD
                      metadata:
                        key1: value1
                        key2: value2
                      network: ach
                      origination_account_id: 11111111-1111-1111-1111-111111111111
                      status: pending
                      type: credit
                      user:
                        email_address: plaid@plaid.com
                        legal_name: John Smith
                        routing_number: "111111111"
                    request_id: saKrIBuEB9qJZno
              schema:
                $ref: "#/components/schemas/BankTransferCreateResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Create a bank transfer
      tags:
        - plaid
  /bank_transfer/event/list:
    post:
      description: Use the `/bank_transfer/event/list` endpoint to get a list of bank transfer events based on specified filter criteria.
      externalDocs:
        url: /api/products#bank_transfereventlist
      operationId: bankTransferEventList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferEventListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfer_events:
                      - account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                        bank_transfer_amount: "12.34"
                        bank_transfer_id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                        bank_transfer_iso_currency_code: USD
                        bank_transfer_type: credit
                        direction: outbound
                        event_id: 1
                        event_type: receiver_pending
                        failure_reason: null
                        origination_account_id: null
                        receiver_details:
                          available_balance: positive
                        timestamp: 2020-08-06T17:27:15Z
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/BankTransferEventListResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: List bank transfer events
      tags:
        - plaid
  /bank_transfer/event/sync:
    post:
      description: "`/bank_transfer/event/sync` allows you to request up to the next 25 bank transfer events that happened after a specific `event_id`. Use the `/bank_transfer/event/sync` endpoint to guarantee you have seen all bank transfer events. "
      externalDocs:
        url: /api/products#bank_transfereventsync
      operationId: bankTransferEventSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferEventSyncRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfer_events:
                      - account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                        bank_transfer_amount: "12.34"
                        bank_transfer_id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                        bank_transfer_iso_currency_code: USD
                        bank_transfer_type: credit
                        direction: outbound
                        event_id: 1
                        event_type: pending
                        failure_reason: null
                        origination_account_id: null
                        receiver_details: null
                        timestamp: 2020-08-06T17:27:15Z
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/BankTransferEventSyncResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Sync bank transfer events
      tags:
        - plaid
  /bank_transfer/get:
    post:
      description: The `/bank_transfer/get` fetches information about the bank transfer corresponding to the given `bank_transfer_id`.
      externalDocs:
        url: /api/products#bank_transferget
      operationId: bankTransferGet
      parameters: []
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: "#/components/schemas/BankTransferGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfer:
                      account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                      ach_class: ppd
                      amount: "12.34"
                      cancellable: true
                      created: 2020-08-06T17:27:15Z
                      custom_tag: my tag
                      description: Testing2
                      direction: outbound
                      failure_reason:
                        ach_return_code: R13
                        description: Invalid ACH routing number
                      id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                      iso_currency_code: USD
                      metadata:
                        key1: value1
                        key2: value2
                      network: ach
                      origination_account_id: 11111111-1111-1111-1111-111111111111
                      status: pending
                      type: credit
                      user:
                        email_address: plaid@plaid.com
                        legal_name: John Smith
                        routing_number: "111111111"
                    request_id: saKrIBuEB9qJZno
              schema:
                $ref: "#/components/schemas/BankTransferGetResponse"
          description: OK
          headers: {}
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Retrieve a bank transfer
      tags:
        - plaid
  /bank_transfer/list:
    post:
      description: |
        Use the `/bank_transfer/list` endpoint to see a list of all your bank transfers and their statuses. Results are paginated; use the `count` and `offset` query parameters to retrieve the desired bank transfers.
      externalDocs:
        url: /api/products#bank_transferlist
      operationId: bankTransferList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfers:
                      - account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                        ach_class: ppd
                        amount: "12.34"
                        cancellable: true
                        created: 2020-08-06T17:27:15Z
                        custom_tag: my tag
                        description: Testing2
                        direction: outbound
                        failure_reason:
                          ach_return_code: R13
                          description: Invalid ACH routing number
                        id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                        iso_currency_code: USD
                        metadata:
                          key1: value1
                          key2: value2
                        network: ach
                        origination_account_id: 11111111-1111-1111-1111-111111111111
                        status: pending
                        type: credit
                        user:
                          email_address: plaid@plaid.com
                          legal_name: John Smith
                          routing_number: "111111111"
                    request_id: saKrIBuEB9qJZno
              schema:
                $ref: "#/components/schemas/BankTransferListResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: List bank transfers
      tags:
        - plaid
  /bank_transfer/migrate_account:
    post:
      description: As an alternative to adding Items via Link, you can also use the `/bank_transfer/migrate_account` endpoint to migrate known account and routing numbers to Plaid Items.  Note that Items created in this way are not compatible with endpoints for other products, such as `/accounts/balance/get`, and can only be used with Bank Transfer endpoints.  If you require access to other endpoints, create the Item through Link instead.  Access to `/bank_transfer/migrate_account` is not enabled by default; to obtain access, contact your Plaid Account Manager.
      externalDocs:
        url: /api/products#bank_transfermigrate_account
      operationId: bankTransferMigrateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankTransferMigrateAccountRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    access_token: access-sandbox-435beced-94e8-4df3-a181-1dde1cfa19f0
                    account_id: zvyDgbeeDluZ43AJP6m5fAxDlgoZXDuoy5gjN
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/BankTransferMigrateAccountResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Migrate account into Bank Transfers
      tags:
        - plaid
  /categories/get:
    post:
      description: Send a request to the `/categories/get`  endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
      externalDocs:
        url: /api/products/#categoriesget
      operationId: categoriesGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriesGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    categories:
                      - category_id: "10000000"
                        group: special
                        hierarchy:
                          - Bank Fees
                      - category_id: "10001000"
                        group: special
                        hierarchy:
                          - Bank Fees
                          - Overdraft
                      - category_id: "12001000"
                        group: place
                        hierarchy:
                          - Community
                          - Animal Shelter
                    request_id: ixTBLZGvhD4NnmB
              schema:
                $ref: "#/components/schemas/CategoriesGetResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      security: []
      summary: Get Categories
      tags:
        - plaid
  /deposit_switch/alt/create:
    post:
      description: This endpoint provides an alternative to `/deposit_switch/create` for customers who have not yet fully integrated with Plaid Exchange. Like `/deposit_switch/create`, it creates a deposit switch entity that will be persisted throughout the lifecycle of the switch.
      externalDocs:
        url: /api/products#deposit_switchaltcreate
      operationId: depositSwitchAltCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositSwitchAltCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    deposit_switch_id: c7jMwPPManIwy9rwMewWP7lpb4pKRbtrbMomp
                    request_id: lMjeOeu9X1VUh1F
              schema:
                $ref: "#/components/schemas/DepositSwitchAltCreateResponse"
          description: OK
      summary: Create a deposit switch without using Plaid Exchange
      tags:
        - plaid
  /deposit_switch/create:
    post:
      description: This endpoint creates a deposit switch entity that will be persisted throughout the lifecycle of the switch.
      externalDocs:
        url: /api/products#deposit_switchcreate
      operationId: depositSwitchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositSwitchCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    deposit_switch_id: c7jMwPPManIwy9rwMewWP7lpb4pKRbtrbMomp
                    request_id: lMjeOeu9X1VUh1F
              schema:
                $ref: "#/components/schemas/DepositSwitchCreateResponse"
          description: OK
      summary: Create a deposit switch
      tags:
        - plaid
  /deposit_switch/get:
    parameters: []
    post:
      description: This endpoint returns information related to how the user has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the user's direct deposit allocation preferences.
      externalDocs:
        url: /api/products#deposit_switchget
      operationId: depositSwitchGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositSwitchGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    account_has_multiple_allocations: true
                    amount_allocated: null
                    date_completed: 2019-11-01
                    date_created: 2019-11-01
                    deposit_switch_id: LjDyMfMkVpqLmEm1VR7bQikR3BX5hEMdRAkq1
                    employer_id: pqLmEm1VR7bQi11231
                    employer_name: COMPANY INC
                    institution_id: ins_1
                    institution_name: Bank of America
                    is_allocated_remainder: false
                    percent_allocated: 50
                    request_id: lMjeOeu9X1VUh1F
                    state: completed
                    switch_method: instant
                    target_account_id: bX5hEMdRAkq1QikR3BLjDyMfMkVpqLmEm1VR7
                    target_item_id: MdRAkq1QikR3BLjDyMfMkVpqLmEm1VR7bX5hE
              schema:
                $ref: "#/components/schemas/DepositSwitchGetResponse"
          description: OK
      summary: Retrieve a deposit switch
      tags:
        - plaid
  /deposit_switch/token/create:
    post:
      description: |
        In order for the end user to take action, you will need to create a public token representing the deposit switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
      externalDocs:
        url: /deposit-switch/reference#deposit_switchtokencreate
      operationId: depositSwitchTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositSwitchTokenCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    deposit_switch_token: deposit-switch-sandbox-3e5cacca-10a6-11ea-bcdb-6003089acac0
                    deposit_switch_token_expiration_time: 2019-12-31T12:01:37Z
                    request_id: 68MvHx4Ub5NYoXt
              schema:
                $ref: "#/components/schemas/DepositSwitchTokenCreateResponse"
          description: OK
      summary: Create a deposit switch token
      tags:
        - plaid
  /employers/search:
    post:
      description: |-
        `/employers/search` allows you the ability to search Plaid’s database of known employers, for use with Deposit Switch. You can use this endpoint to look up a user's employer in order to confirm that they are supported. Users with non-supported employers can then be routed out of the Deposit Switch flow.

        The data in the employer database is currently limited. As the Deposit Switch and Income products progress through their respective beta periods, more employers are being regularly added. Because the employer database is frequently updated, we recommend that you do not cache or store data from this endpoint for more than a day.
      externalDocs:
        url: /api/employers/#employerssearch
      operationId: employersSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployersSearchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    employers:
                      - address:
                          city: San Francisco
                          country: US
                          postal_code: "94103"
                          region: CA
                          street: 1098 Harrison St
                        confidence_score: 1
                        employer_id: emp_1
                        name: Plaid Inc.
                    request_id: ixTBLZGvhD4NnmB
              schema:
                $ref: "#/components/schemas/EmployersSearchResponse"
          description: OK
      summary: Search employer database
      tags:
        - plaid
  /identity/get:
    post:
      description: |-
        The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.

        Note: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
      externalDocs:
        url: /api/products/#identityget
      operationId: identityGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentityGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        owners:
                          - addresses:
                              - data:
                                  city: Malakoff
                                  country: US
                                  postal_code: "14236"
                                  region: NY
                                  street: 2992 Cameron Road
                                primary: true
                              - data:
                                  city: San Matias
                                  country: US
                                  postal_code: 93405-2255
                                  region: CA
                                  street: 2493 Leisure Lane
                                primary: false
                            emails:
                              - data: accountholder0@example.com
                                primary: true
                                type: primary
                              - data: accountholder1@example.com
                                primary: false
                                type: secondary
                              - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                                primary: false
                                type: other
                            names:
                              - Alberta Bobbeth Charleson
                            phone_numbers:
                              - data: "1112223333"
                                primary: false
                                type: home
                              - data: "1112224444"
                                primary: false
                                type: work
                              - data: "1112225555"
                                primary: false
                                type: mobile
                        subtype: checking
                        type: depository
                      - account_id: 3gE5gnRzNyfXpBK5wEEKcymJ5albGVUqg77gr
                        balances:
                          available: 200
                          current: 210
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "1111"
                        name: Plaid Saving
                        official_name: Plaid Silver Standard 0.1% Interest Saving
                        owners:
                          - addresses:
                              - data:
                                  city: Malakoff
                                  country: US
                                  postal_code: "14236"
                                  region: NY
                                  street: 2992 Cameron Road
                                primary: true
                              - data:
                                  city: San Matias
                                  country: US
                                  postal_code: 93405-2255
                                  region: CA
                                  street: 2493 Leisure Lane
                                primary: false
                            emails:
                              - data: accountholder0@example.com
                                primary: true
                                type: primary
                              - data: accountholder1@example.com
                                primary: false
                                type: secondary
                              - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                                primary: false
                                type: other
                            names:
                              - Alberta Bobbeth Charleson
                            phone_numbers:
                              - data: "1112223333"
                                primary: false
                                type: home
                              - data: "1112224444"
                                primary: false
                                type: work
                              - data: "1112225555"
                                primary: false
                                type: mobile
                        subtype: savings
                        type: depository
                    item:
                      available_products:
                        - balance
                        - investments
                      billed_products:
                        - assets
                        - auth
                        - identity
                        - liabilities
                        - transactions
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_3
                      item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: 3nARps6TOYtbACO
              schema:
                $ref: "#/components/schemas/IdentityGetResponse"
          description: OK
      summary: Retrieve identity data
      tags:
        - plaid
  /income/verification/create:
    post:
      description: "`/income/verification/create` begins the income verification process by returning an `income_verification_id`. You can then provide the `income_verification_id` to `/link/token/create` under the `income_verification` parameter in order to create a Link instance that will prompt the user to go through the income verification flow. Plaid will fire an `INCOME` webhook once the user completes the Payroll Income flow, or when the uploaded documents in the Document Income flow have finished processing. "
      externalDocs:
        url: /api/products/#incomeverificationcreate
      operationId: incomeVerificationCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeVerificationCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    income_verification_id: f2a826d7-25cf-483b-a124-c40beb64b732
                    request_id: lMjeOeu9X1VUh1F
              schema:
                $ref: "#/components/schemas/IncomeVerificationCreateResponse"
          description: OK
      summary: Create an income verification instance
      tags:
        - plaid
  /income/verification/documents/download:
    parameters: []
    post:
      description: |-
        `/income/verification/documents/download` provides the ability to download the source paystub PDF that the end user uploaded via Paystub Import.

        The response to `/income/verification/documents/download` is a ZIP file in binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.

        For Payroll Income, the most recent file available for download with the payroll provider will also be available from this endpoint.
      externalDocs:
        url: /api/products/#incomeverificationdocumentsdownload
      operationId: incomeVerificationDocumentsDownload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeVerificationDocumentsDownloadRequest"
        required: true
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: A ZIP file containing the source paystub(s) used as the basis for income verification.
      summary: Download the original documents used for income verification
      tags:
        - plaid
  /income/verification/paystubs/get:
    post:
      description: "`/income/verification/paystubs/get` returns the information collected from the paystubs that were used to verify an end user's income. It can be called once the status of the verification has been set to `VERIFICATION_STATUS_PROCESSING_COMPLETE`, as reported by the `INCOME: verification_status` webhook. Attempting to call the endpoint before verification has been completed will result in an error."
      externalDocs:
        url: /api/products/#incomeverificationpaystubsget
      operationId: incomeVerificationPaystubsGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeVerificationPaystubsGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    paystubs:
                      - account_id: null
                        employee:
                          address:
                            city: SAN FRANCISCO
                            country: US
                            postal_code: "94133"
                            region: CA
                            street: 2140 TAYLOR ST
                          name: ANNA CHARLESTON
                        employer:
                          name: PLAID INC
                        income_breakdown: []
                        pay_period_details:
                          check_amount: 1490.21
                          end_date: 2020-12-15
                          gross_earnings: 4500
                          pay_day: 2020-12-15
                          start_date: 2020-12-01
                        ytd_earnings:
                          gross_earnings: 59375
                          net_earnings: null
                    request_id: 2pxQ59buGdsHRef
              schema:
                $ref: "#/components/schemas/IncomeVerificationPaystubsGetResponse"
          description: OK
      summary: Retrieve information from the paystubs used for income verification
      tags:
        - plaid
  /income/verification/refresh:
    post:
      description: "`/income/verification/refresh` refreshes a given income verification."
      externalDocs:
        url: /api/products/#incomeverificationrefresh
      operationId: incomeVerificationRefresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeVerificationRefreshRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeVerificationRefreshResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Refresh an income verification
      tags:
        - plaid
  /income/verification/summary/get:
    post:
      description: "`/income/verification/summary/get` returns a verification summary for the income that was verified for an end user. It can be called once the status of the verification has been set to `VERIFICATION_STATUS_PROCESSING_COMPLETE`, as reported by the `INCOME: verification_status` webhook. Attempting to call the endpoint before verification has been completed will result in an error."
      externalDocs:
        url: /api/products/#incomeverificationsummaryget
      operationId: incomeVerificationSummaryGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeVerificationSummaryGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    income_summaries:
                      - employee_name:
                          value: ANNA CHARLESTON
                          verification_status: UNVERIFIED
                        employer_name:
                          value: PLAID INC
                          verification_status: UNVERIFIED
                        pay_frequency:
                          value: semimonthly
                          verification_status: UNVERIFIED
                        projected_wage:
                          value: 100000
                          verification_status: UNVERIFIED
                        verified_transaction:
                          account_id: ""
                          amount: 0
                          date: ""
                          description: ""
                          transaction_id: ""
                        ytd_gross_income:
                          value: 59375
                          verification_status: UNVERIFIED
                        ytd_net_income:
                          value: 66205.35
                          verification_status: UNVERIFIED
                    request_id: LhQf0THi8SH1yJm
              schema:
                $ref: "#/components/schemas/IncomeVerificationSummaryGetResponse"
          description: OK
      summary: Retrieve a summary of information derived from income verification
      tags:
        - plaid
  /institutions/get:
    post:
      description: |-
        Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.

        If there is no overlap between an institution’s enabled products and a client’s enabled products, then the institution will be filtered out from the response. As a result, the number of institutions returned may not match the count specified in the call.

        This data changes frequently. If you store it locally on your system, be sure to update it regularly.
      externalDocs:
        url: /api/institutions/#institutionsget
      operationId: institutionsGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstitutionsGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    institutions:
                      - country_codes:
                          - US
                        institution_id: ins_1
                        name: Bank of America
                        oauth: false
                        products:
                          - assets
                          - auth
                          - balance
                          - transactions
                          - identity
                          - liabilities
                        routing_numbers:
                          - "011000138"
                          - "011200365"
                          - "011400495"
                          - "011500010"
                          - "011900254"
                          - "021000322"
                          - "021200339"
                          - "026009593"
                          - "031202084"
                          - "051000017"
                          - "052001633"
                          - "053000196"
                          - "053904483"
                          - "054001204"
                          - "061000052"
                          - "063100277"
                          - "064000020"
                          - "071214579"
                          - "072000805"
                          - "073000176"
                          - "081000032"
                          - "081904808"
                          - "082000073"
                          - "101100045"
                          - "103000017"
                          - "107000327"
                          - "111000025"
                          - "121000358"
                          - "122101706"
                          - "122400724"
                          - "123103716"
                          - "125000024"
                          - "323070380"
                    request_id: tbFyCEqkU774ZGG
                    total: 11384
              schema:
                $ref: "#/components/schemas/InstitutionsGetResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Get details of all supported institutions
      tags:
        - plaid
  /institutions/get_by_id:
    post:
      description: Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
      externalDocs:
        url: /api/institutions/#institutionsget_by_id
      operationId: institutionsGetById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstitutionsGetByIdRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    institution:
                      country_codes:
                        - US
                      institution_id: ins_109512
                      name: Houndstooth Bank
                      oauth: false
                      products:
                        - auth
                        - balance
                        - identity
                        - transactions
                      routing_numbers:
                        - "110000000"
                      status:
                        auth:
                          breakdown:
                            error_institution: 0.08
                            error_plaid: 0.01
                            success: 0.91
                          last_status_change: 2019-02-15T15:53:00Z
                          status: HEALTHY
                        balance:
                          breakdown:
                            error_institution: 0.09
                            error_plaid: 0.02
                            success: 0.89
                          last_status_change: 2019-02-15T15:53:00Z
                          status: HEALTHY
                        identity:
                          breakdown:
                            error_institution: 0.5
                            error_plaid: 0.08
                            success: 0.42
                          last_status_change: 2019-02-15T15:50:00Z
                          status: DEGRADED
                        investments:
                          breakdown:
                            error_institution: 0.09
                            error_plaid: 0.02
                            success: 0.89
                          last_status_change: 2019-02-15T15:53:00Z
                          liabilities:
                            breakdown:
                              error_institution: 0.09
                              error_plaid: 0.02
                              success: 0.89
                            last_status_change: 2019-02-15T15:53:00Z
                            status: HEALTHY
                          status: HEALTHY
                        investments_updates:
                          breakdown:
                            error_institution: 0.03
                            error_plaid: 0.02
                            refresh_interval: NORMAL
                            success: 0.95
                          last_status_change: 2019-02-12T08:22:00Z
                          status: HEALTHY
                        item_logins:
                          breakdown:
                            error_institution: 0.09
                            error_plaid: 0.01
                            success: 0.9
                          last_status_change: 2019-02-15T15:53:00Z
                          status: HEALTHY
                        liabilities_updates:
                          breakdown:
                            error_institution: 0.03
                            error_plaid: 0.02
                            refresh_interval: NORMAL
                            success: 0.95
                          last_status_change: 2019-02-12T08:22:00Z
                          status: HEALTHY
                        logo: null
                        primary_color: "#004966"
                        transactions_updates:
                          breakdown:
                            error_institution: 0.03
                            error_plaid: 0.02
                            refresh_interval: NORMAL
                            success: 0.95
                          last_status_change: 2019-02-12T08:22:00Z
                          status: HEALTHY
                        url: https://plaid.com
                    request_id: m8MDnv9okwxFNBV
              schema:
                $ref: "#/components/schemas/InstitutionsGetByIdResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Get details of an institution
      tags:
        - plaid
  /institutions/search:
    post:
      description: Returns a JSON response containing details for institutions that match the query parameters, up to a maximum of ten institutions per query.
      externalDocs:
        url: /api/institutions/#institutionssearch
      operationId: institutionsSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstitutionsSearchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    institutions:
                      - country_codes:
                          - US
                        institution_id: ins_118923
                        name: Red Platypus Bank - Red Platypus Bank
                        oauth: false
                        products:
                          - assets
                          - auth
                          - balance
                          - transactions
                          - identity
                        routing_numbers: []
                    request_id: Ggmk0enW4smO2Tp
              schema:
                $ref: "#/components/schemas/InstitutionsSearchResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Search institutions
      tags:
        - plaid
  /investments/holdings/get:
    post:
      description: The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
      externalDocs:
        url: /api/products/#investmentsholdingsget
      operationId: investmentsHoldingsGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvestmentsHoldingsGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: 5Bvpj4QknlhVWk7GygpwfVKdd133GoCxB814g
                        balances:
                          available: 43200
                          current: 43200
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "4444"
                        name: Plaid Money Market
                        official_name: Plaid Platinum Standard 1.85% Interest Money Market
                        subtype: money market
                        type: depository
                      - account_id: JqMLm4rJwpF6gMPJwBqdh9ZjjPvvpDcb7kDK1
                        balances:
                          available: null
                          current: 320.76
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "5555"
                        name: Plaid IRA
                        official_name: null
                        subtype: ira
                        type: investment
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        balances:
                          available: null
                          current: 23631.9805
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "6666"
                        name: Plaid 401k
                        official_name: null
                        subtype: 401k
                        type: investment
                    holdings:
                      - account_id: JqMLm4rJwpF6gMPJwBqdh9ZjjPvvpDcb7kDK1
                        cost_basis: 1
                        institution_price: 1
                        institution_price_as_of: 2021-04-13
                        institution_value: 0.01
                        iso_currency_code: USD
                        quantity: 0.01
                        security_id: d6ePmbPxgWCWmMVv66q9iPV94n91vMtov5Are
                        unofficial_currency_code: null
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        cost_basis: 1.5
                        institution_price: 2.11
                        institution_price_as_of: null
                        institution_value: 2.11
                        iso_currency_code: USD
                        quantity: 1
                        security_id: KDwjlXj1Rqt58dVvmzRguxJybmyQL8FgeWWAy
                        unofficial_currency_code: null
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        cost_basis: 10
                        institution_price: 10.42
                        institution_price_as_of: null
                        institution_value: 20.84
                        iso_currency_code: USD
                        quantity: 2
                        security_id: NDVQrXQoqzt5v3bAe8qRt4A7mK7wvZCLEBBJk
                        unofficial_currency_code: null
                      - account_id: JqMLm4rJwpF6gMPJwBqdh9ZjjPvvpDcb7kDK1
                        cost_basis: 0.01
                        institution_price: 0.011
                        institution_price_as_of: null
                        institution_value: 110
                        iso_currency_code: USD
                        quantity: 10000
                        security_id: 8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb
                        unofficial_currency_code: null
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        cost_basis: 23
                        institution_price: 27
                        institution_price_as_of: null
                        institution_value: 636.309
                        iso_currency_code: USD
                        quantity: 23.567
                        security_id: JDdP7XPMklt5vwPmDN45t3KAoWAPmjtpaW7DP
                        unofficial_currency_code: null
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        cost_basis: 15
                        institution_price: 13.73
                        institution_price_as_of: null
                        institution_value: 1373.6865
                        iso_currency_code: USD
                        quantity: 100.05
                        security_id: nnmo8doZ4lfKNEDe3mPJipLGkaGw3jfPrpxoN
                        unofficial_currency_code: null
                      - account_id: k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm
                        cost_basis: 1
                        institution_price: 1
                        institution_price_as_of: null
                        institution_value: 12345.67
                        iso_currency_code: USD
                        quantity: 12345.67
                        security_id: d6ePmbPxgWCWmMVv66q9iPV94n91vMtov5Are
                        unofficial_currency_code: null
                    item:
                      available_products:
                        - balance
                        - identity
                        - liabilities
                        - transactions
                      billed_products:
                        - assets
                        - auth
                        - investments
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_3
                      item_id: 4z9LPae1nRHWy8pvg9jrsgbRP4ZNQvIdbLq7g
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: l68wb8zpS0hqmsJ
                    securities:
                      - close_price: 0.011
                        close_price_as_of: 2021-04-13
                        cusip: null
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: null
                        iso_currency_code: USD
                        name: Nflx Feb 01'18 $355 Call
                        proxy_security_id: null
                        security_id: 8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb
                        sedol: null
                        ticker_symbol: NFLX180201C00355000
                        type: derivative
                        unofficial_currency_code: null
                      - close_price: 27
                        close_price_as_of: null
                        cusip: "577130834"
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US5771308344
                        iso_currency_code: USD
                        name: Matthews Pacific Tiger Fund Insti Class
                        proxy_security_id: null
                        security_id: JDdP7XPMklt5vwPmDN45t3KAoWAPmjtpaW7DP
                        sedol: null
                        ticker_symbol: MIPTX
                        type: mutual fund
                        unofficial_currency_code: null
                      - close_price: 2.11
                        close_price_as_of: null
                        cusip: 00448Q201
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US00448Q2012
                        iso_currency_code: USD
                        name: Achillion Pharmaceuticals Inc.
                        proxy_security_id: null
                        security_id: KDwjlXj1Rqt58dVvmzRguxJybmyQL8FgeWWAy
                        sedol: null
                        ticker_symbol: ACHN
                        type: equity
                        unofficial_currency_code: null
                      - close_price: 10.42
                        close_price_as_of: null
                        cusip: "258620103"
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US2586201038
                        iso_currency_code: USD
                        name: DoubleLine Total Return Bond Fund
                        proxy_security_id: null
                        security_id: NDVQrXQoqzt5v3bAe8qRt4A7mK7wvZCLEBBJk
                        sedol: null
                        ticker_symbol: DBLTX
                        type: mutual fund
                        unofficial_currency_code: null
                      - close_price: 1
                        close_price_as_of: null
                        cusip: null
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: true
                        isin: null
                        iso_currency_code: USD
                        name: U S Dollar
                        proxy_security_id: null
                        security_id: d6ePmbPxgWCWmMVv66q9iPV94n91vMtov5Are
                        sedol: null
                        ticker_symbol: USD
                        type: cash
                        unofficial_currency_code: null
                      - close_price: 13.73
                        close_price_as_of: null
                        cusip: null
                        institution_id: ins_3
                        institution_security_id: NHX105509
                        is_cash_equivalent: false
                        isin: null
                        iso_currency_code: USD
                        name: NH PORTFOLIO 1055 (FIDELITY INDEX)
                        proxy_security_id: null
                        security_id: nnmo8doZ4lfKNEDe3mPJipLGkaGw3jfPrpxoN
                        sedol: null
                        ticker_symbol: NHX105509
                        type: etf
                        unofficial_currency_code: null
              schema:
                $ref: "#/components/schemas/InvestmentsHoldingsGetResponse"
          description: OK
      summary: Get Investment holdings
      tags:
        - plaid
  /investments/transactions/get:
    post:
      description: |-
        The `/investments/transactions/get` endpoint allows developers to retrieve user-authorized transaction data for investment accounts.

        Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.

        Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
      externalDocs:
        url: /api/products/#investmentstransactionsget
      operationId: investmentsTransactionsGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvestmentsTransactionsGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: 5e66Dl6jNatx3nXPGwZ7UkJed4z6KBcZA4Rbe
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        subtype: checking
                        type: depository
                      - account_id: KqZZMoZmBWHJlz7yKaZjHZb78VNpaxfVa7e5z
                        balances:
                          available: null
                          current: 320.76
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "5555"
                        name: Plaid IRA
                        official_name: null
                        subtype: ira
                        type: investment
                      - account_id: rz99ex9ZQotvnjXdgQLEsR81e3ArPgulVWjGj
                        balances:
                          available: null
                          current: 23631.9805
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "6666"
                        name: Plaid 401k
                        official_name: null
                        subtype: 401k
                        type: investment
                    investment_transactions:
                      - account_id: rz99ex9ZQotvnjXdgQLEsR81e3ArPgulVWjGj
                        amount: -8.72
                        cancel_transaction_id: null
                        date: 2020-05-29
                        fees: 0
                        investment_transaction_id: oq99Pz97joHQem4BNjXECev1E4B6L6sRzwANW
                        iso_currency_code: USD
                        name: INCOME DIV DIVIDEND RECEIVED
                        price: 0
                        quantity: 0
                        security_id: eW4jmnjd6AtjxXVrjmj6SX1dNEdZp3Cy8RnRQ
                        subtype: dividend
                        type: cash
                        unofficial_currency_code: null
                      - account_id: rz99ex9ZQotvnjXdgQLEsR81e3ArPgulVWjGj
                        amount: -1289.01
                        cancel_transaction_id: null
                        date: 2020-05-28
                        fees: 7.99
                        investment_transaction_id: pK99jB9e7mtwjA435GpVuMvmWQKVbVFLWme57
                        iso_currency_code: USD
                        name: SELL Matthews Pacific Tiger Fund Insti Class
                        price: 27.53
                        quantity: -47.74104242992852
                        security_id: JDdP7XPMklt5vwPmDN45t3KAoWAPmjtpaW7DP
                        subtype: sell
                        type: sell
                        unofficial_currency_code: null
                      - account_id: rz99ex9ZQotvnjXdgQLEsR81e3ArPgulVWjGj
                        amount: 7.7
                        cancel_transaction_id: null
                        date: 2020-05-27
                        fees: 7.99
                        investment_transaction_id: LKoo1ko93wtreBwM7yQnuQ3P5DNKbKSPRzBNv
                        iso_currency_code: USD
                        name: BUY DoubleLine Total Return Bond Fund
                        price: 10.42
                        quantity: 0.7388014749727547
                        security_id: NDVQrXQoqzt5v3bAe8qRt4A7mK7wvZCLEBBJk
                        subtype: buy
                        type: buy
                        unofficial_currency_code: null
                    item:
                      available_products:
                        - assets
                        - balance
                        - identity
                        - transactions
                      billed_products:
                        - auth
                        - investments
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_12
                      item_id: 8Mqq5rqQ7Pcxq9MGDv3JULZ6yzZDLMCwoxGDq
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: iv4q3ZlytOOthkv
                    securities:
                      - close_price: 27
                        close_price_as_of: null
                        cusip: "577130834"
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US5771308344
                        iso_currency_code: USD
                        name: Matthews Pacific Tiger Fund Insti Class
                        proxy_security_id: null
                        security_id: JDdP7XPMklt5vwPmDN45t3KAoWAPmjtpaW7DP
                        sedol: null
                        ticker_symbol: MIPTX
                        type: mutual fund
                        unofficial_currency_code: null
                      - close_price: 10.42
                        close_price_as_of: null
                        cusip: "258620103"
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US2586201038
                        iso_currency_code: USD
                        name: DoubleLine Total Return Bond Fund
                        proxy_security_id: null
                        security_id: NDVQrXQoqzt5v3bAe8qRt4A7mK7wvZCLEBBJk
                        sedol: null
                        ticker_symbol: DBLTX
                        type: mutual fund
                        unofficial_currency_code: null
                      - close_price: 34.73
                        close_price_as_of: null
                        cusip: 84470P109
                        institution_id: null
                        institution_security_id: null
                        is_cash_equivalent: false
                        isin: US84470P1093
                        iso_currency_code: USD
                        name: Southside Bancshares Inc.
                        proxy_security_id: null
                        security_id: eW4jmnjd6AtjxXVrjmj6SX1dNEdZp3Cy8RnRQ
                        sedol: null
                        ticker_symbol: SBSI
                        type: equity
                        unofficial_currency_code: null
                    total_investment_transactions: 3
              schema:
                $ref: "#/components/schemas/InvestmentsTransactionsGetResponse"
          description: OK
      summary: Get investment transactions
      tags:
        - plaid
  /item/access_token/invalidate:
    post:
      description: |
        By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.

        You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
      externalDocs:
        url: /api/tokens/#itemaccess_tokeninvalidate
      operationId: itemAccessTokenInvalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemAccessTokenInvalidateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    new_access_token: access-sandbox-8ab976e6-64bc-4b38-98f7-731e7a349970
                    request_id: m8MDnv9okwxFNBV
              schema:
                $ref: "#/components/schemas/ItemAccessTokenInvalidateResponse"
          description: OK
      summary: Invalidate access_token
      tags:
        - plaid
  /item/application/list:
    post:
      description: List a user’s connected applications
      operationId: itemApplicationList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemApplicationListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemApplicationListResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: List a user’s connected applications
      tags:
        - plaid
  /item/application/scopes/update:
    post:
      description: Enable consumers to update product access on selected accounts for an application.
      operationId: itemApplicationScopesUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemApplicationScopesUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemApplicationScopesUpdateResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Update the scopes of access for a particular application
      tags:
        - plaid
  /item/get:
    post:
      description: Returns information about the status of an Item.
      externalDocs:
        url: /api/items/#itemget
      operationId: itemGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    item:
                      available_products:
                        - balance
                        - auth
                      billed_products:
                        - identity
                        - transactions
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_109508
                      item_id: Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr
                      update_type: background
                      webhook: https://plaid.com/example/hook
                    request_id: m8MDnv9okwxFNBV
                    status:
                      last_webhook:
                        code_sent: DEFAULT_UPDATE
                        sent_at: 2019-02-15T15:53:00
                      transactions:
                        last_failed_update: 2019-01-22T04:32:00
                        last_successful_update: 2019-02-15T15:52:39
              schema:
                $ref: "#/components/schemas/ItemGetResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Retrieve an Item
      tags:
        - plaid
  /item/import:
    post:
      description: |-
        `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.

        Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
      operationId: itemImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemImportRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    access_token: access-sandbox-99ace160-3cf7-4e51-a083-403633425815
                    request_id: ewIBAn6RZirsk4W
              schema:
                $ref: "#/components/schemas/ItemImportResponse"
          description: OK
      summary: Import Item
      tags:
        - plaid
  /item/public_token/create:
    post:
      description: |-
        Note: As of July 2020, the `/item/public_token/create` endpoint is deprecated. Instead, use `/link/token/create` with an `access_token` to create a Link token for use with [update mode](https://plaid.com/docs/link/update-mode).

        If you need your user to take action to restore or resolve an error associated with an Item, generate a public token with the `/item/public_token/create` endpoint and then initialize Link with that `public_token`.

        A `public_token` is one-time use and expires after 30 minutes. You use a `public_token` to initialize Link in [update mode](https://plaid.com/docs/link/update-mode) for a particular Item. You can generate a `public_token` for an Item even if you did not use Link to create the Item originally.

        The `/item/public_token/create` endpoint is **not** used to create your initial `public_token`. If you have not already received an `access_token` for a specific Item, use Link to obtain your `public_token` instead. See the [Quickstart](https://plaid.com/docs/quickstart) for more information.
      externalDocs:
        url: /api/tokens/#itempublic_tokencreate
      operationId: itemCreatePublicToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemPublicTokenCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    public_token: public-sandbox-b0e2c4ee-a763-4df5-bfe9-46a46bce993d
                    request_id: Aim3b
              schema:
                $ref: "#/components/schemas/ItemPublicTokenCreateResponse"
          description: OK
      summary: Create public token
      tags:
        - plaid
  /item/public_token/exchange:
    post:
      description: |-
        Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.

        The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
      externalDocs:
        url: /api/tokens/#itempublic_tokenexchange
      operationId: itemPublicTokenExchange
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemPublicTokenExchangeRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    access_token: access-sandbox-de3ce8ef-33f8-452c-a685-8671031fc0f6
                    item_id: M5eVJqLnv3tbzdngLDp9FL5OlDNxlNhlE55op
                    request_id: Aim3b
              schema:
                $ref: "#/components/schemas/ItemPublicTokenExchangeResponse"
          description: OK
      summary: Exchange public token for an access token
      tags:
        - plaid
  /item/remove:
    post:
      description: |-
        The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.

        Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count. To increase your credential account in Development, contact Support.

        Also note that for certain OAuth-based institutions, an Item removed via `/item/remove` may still show as an active connection in the institution's OAuth permission manager.
      externalDocs:
        url: /api/items/#itemremove
      operationId: itemRemove
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRemoveRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: m8MDnv9okwxFNBV
              schema:
                $ref: "#/components/schemas/ItemRemoveResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Remove an Item
      tags:
        - plaid
  /item/webhook/update:
    post:
      description: The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](https://plaid.com/docs/api/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.
      externalDocs:
        url: /api/items/#itemwebhookupdate
      operationId: itemWebhookUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemWebhookUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    item:
                      available_products:
                        - balance
                        - identity
                        - payment_initiation
                        - transactions
                      billed_products:
                        - assets
                        - auth
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_117650
                      item_id: DWVAAPWq4RHGlEaNyGKRTAnPLaEmo8Cvq7na6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: vYK11LNTfRoAMbj
              schema:
                $ref: "#/components/schemas/ItemWebhookUpdateResponse"
          description: OK
      summary: Update Webhook URL
      tags:
        - plaid
  /liabilities/get:
    post:
      description: |-
        The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities data is available primarily for US financial institutions, with some limited coverage of Canadian institutions. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student` or `mortgage`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filters` parameter when [creating a Link token](https://plaid.com/docs/api/tokens/#linktokencreate).

        The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.

        Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
      externalDocs:
        url: /api/products/#liabilitiesget
      operationId: liabilitiesGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LiabilitiesGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                        balances:
                          available: 100
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        subtype: checking
                        type: depository
                      - account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
                        balances:
                          available: null
                          current: 410
                          iso_currency_code: USD
                          limit: 2000
                          unofficial_currency_code: null
                        mask: "3333"
                        name: Plaid Credit Card
                        official_name: Plaid Diamond 12.5% APR Interest Credit Card
                        subtype: credit card
                        type: credit
                      - account_id: Pp1Vpkl9w8sajvK6oEEKtr7vZxBnGpf7LxxLE
                        balances:
                          available: null
                          current: 65262
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "7777"
                        name: Plaid Student Loan
                        official_name: null
                        subtype: student
                        type: loan
                      - account_id: BxBXxLj1m4HMXBm9WZJyUg9XLd4rKEhw8Pb1J
                        balances:
                          available: null
                          current: 56302.06
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "8888"
                        name: Plaid Mortgage
                        official_name: null
                        subtype: mortgage
                        type: loan
                    item:
                      available_products:
                        - balance
                        - investments
                      billed_products:
                        - assets
                        - auth
                        - identity
                        - liabilities
                        - transactions
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_3
                      item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    liabilities:
                      credit:
                        - account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
                          aprs:
                            - apr_percentage: 15.24
                              apr_type: balance_transfer_apr
                              balance_subject_to_apr: 1562.32
                              interest_charge_amount: 130.22
                            - apr_percentage: 27.95
                              apr_type: cash_apr
                              balance_subject_to_apr: 56.22
                              interest_charge_amount: 14.81
                            - apr_percentage: 12.5
                              apr_type: purchase_apr
                              balance_subject_to_apr: 157.01
                              interest_charge_amount: 25.66
                            - apr_percentage: 0
                              apr_type: special
                              balance_subject_to_apr: 1000
                              interest_charge_amount: 0
                          is_overdue: false
                          last_payment_amount: 168.25
                          last_payment_date: 2019-05-22
                          last_statement_issue_date: 2019-05-28
                          minimum_payment_amount: 20
                          next_payment_due_date: 2020-05-28
                      mortgage:
                        - account_id: BxBXxLj1m4HMXBm9WZJyUg9XLd4rKEhw8Pb1J
                          account_number: "3120194154"
                          current_late_fee: 25
                          escrow_balance: 3141.54
                          has_pmi: true
                          has_prepayment_penalty: true
                          interest_rate:
                            percentage: 3.99
                            type: fixed
                          last_payment_amount: 3141.54
                          last_payment_date: 2019-08-01
                          loan_term: 30 year
                          loan_type_description: conventional
                          maturity_date: 2045-07-31
                          next_monthly_payment: 3141.54
                          next_payment_due_date: 2019-11-15
                          origination_date: 2015-08-01
                          origination_principal_amount: 425000
                          past_due_amount: 2304
                          property_address:
                            city: Malakoff
                            country: US
                            postal_code: "14236"
                            region: NY
                            street: 2992 Cameron Road
                          ytd_interest_paid: 12300.4
                          ytd_principal_paid: 12340.5
                      student:
                        - account_id: Pp1Vpkl9w8sajvK6oEEKtr7vZxBnGpf7LxxLE
                          account_number: "4277075694"
                          disbursement_dates:
                            - 2002-08-28
                          expected_payoff_date: 2032-07-28
                          guarantor: DEPT OF ED
                          interest_rate_percentage: 5.25
                          is_overdue: false
                          last_payment_amount: 138.05
                          last_payment_date: 2019-04-22
                          last_statement_issue_date: 2019-04-28
                          loan_name: Consolidation
                          loan_status:
                            end_date: 2032-07-28
                            type: repayment
                          minimum_payment_amount: 25
                          next_payment_due_date: 2019-05-28
                          origination_date: 2002-08-28
                          origination_principal_amount: 25000
                          outstanding_interest_amount: 6227.36
                          payment_reference_number: "4277075694"
                          pslf_status:
                            estimated_eligibility_date: 2021-01-01
                            payments_made: 200
                            payments_remaining: 160
                          repayment_plan:
                            description: Standard Repayment
                            type: standard
                          sequence_number: "1"
                          servicer_address:
                            city: San Matias
                            country: US
                            postal_code: "99415"
                            region: CA
                            street: 123 Relaxation Road
                          ytd_interest_paid: 280.55
                          ytd_principal_paid: 271.65
                    request_id: dTnnm60WgKGLnKL
              schema:
                $ref: "#/components/schemas/LiabilitiesGetResponse"
          description: OK
      summary: Retrieve Liabilities data
      tags:
        - plaid
  /link/token/create:
    post:
      description: |-
        The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.

        A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
      externalDocs:
        url: /api/tokens/#linktokencreate
      operationId: linkTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkTokenCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    expiration: 2020-03-27T12:56:34Z
                    link_token: link-production-840204-193734
                    request_id: XQVgFigpGHXkb0b
              schema:
                $ref: "#/components/schemas/LinkTokenCreateResponse"
          description: OK
      summary: Create Link Token
      tags:
        - plaid
  /link/token/get:
    post:
      description: |-
        The `/link/token/get` endpoint gets information about a previously-created `link_token` using the
        `/link/token/create` endpoint. It can be useful for debugging purposes.
      externalDocs:
        url: /api/tokens/#linktokenget
      operationId: linkTokenGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkTokenGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_at: 2020-12-02T21:14:54Z
                    expiration: 2020-12-03T01:14:54Z
                    link_token: link-sandbox-33792986-2b9c-4b80-b1f2-518caaac6183
                    metadata:
                      account_filters:
                        depository:
                          account_subtypes:
                            - checking
                            - savings
                      client_name: Insert Client name here
                      country_codes:
                        - US
                      initial_products:
                        - auth
                      language: en
                      redirect_uri: null
                      webhook: https://www.example.com/webhook
                    request_id: u0ydFs493XjyTYn
              schema:
                $ref: "#/components/schemas/LinkTokenGetResponse"
          description: OK
      summary: Get Link Token
      tags:
        - plaid
  /payment_initiation/payment/create:
    post:
      description: |-
        After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payments can be one-time or standing order (recurring) and can be denominated in either EUR or GBP.  If making domestic GBP-denominated payments, your recipient must have been created with BACS numbers. In general, EUR-denominated payments will be sent via SEPA Credit Transfer and GBP-denominated payments will be sent via the Faster Payments network, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer will typically arrive in one business day.

        Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments cannot be modified or canceled via the API. An end user can cancel or modify a standing order directly on their banking application or website, or by contacting the bank. Standing orders will follow the payment rules of the underlying rails (Faster Payments in UK). Payments can be sent Monday to Friday, excluding bank holidays. If the pre-arranged date falls on a weekend or bank holiday, the payment is made on the next working day. It is not possible to guarantee the exact time the payment will reach the recipient’s account, although at least 90% of standing order payments are sent by 6am.

        In the Development environment, payments must be below 5 GBP / EUR. For details on any payment limits in Production, contact your Plaid Account Manager.
      externalDocs:
        url: /api/products/#payment_initiationpaymentcreate
      operationId: paymentInitiationPaymentCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationPaymentCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    payment_id: payment-id-sandbox-feca8a7a-5591-4aef-9297-f3062bb735d3
                    request_id: 4ciYVmesrySiUAB
                    status: PAYMENT_STATUS_INPUT_NEEDED
              schema:
                $ref: "#/components/schemas/PaymentInitiationPaymentCreateResponse"
          description: OK
      summary: Create a payment
      tags:
        - plaid
  /payment_initiation/payment/get:
    post:
      description: The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
      externalDocs:
        url: /api/products/#payment_initiationpaymentget
      operationId: paymentInitiationPaymentGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationPaymentGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    amount:
                      currency: GBP
                      value: 100
                    bacs: null
                    iban: null
                    last_status_update: 2019-11-06T21:10:52Z
                    payment_expiration_time: 2019-11-06T21:25:52Z
                    payment_id: payment-id-sandbox-feca8a7a-5591-4aef-9297-f3062bb735d3
                    payment_token: payment-token-sandbox-c6a26505-42b4-46fe-8ecf-bf9edcafbebb
                    recipient_id: recipient-id-sandbox-9b6b4679-914b-445b-9450-efbdb80296f6
                    reference: Account Funding 99744
                    request_id: aEAQmewMzlVa1k6
                    status: PAYMENT_STATUS_INPUT_NEEDED
              schema:
                $ref: "#/components/schemas/PaymentInitiationPaymentGetResponse"
          description: OK
      summary: Get payment details
      tags:
        - plaid
  /payment_initiation/payment/list:
    post:
      description: The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
      externalDocs:
        url: /api/products/#payment_initiationpaymentlist
      operationId: paymentInitiationPaymentList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationPaymentListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    next_cursor: 2020-01-01T00:00:00Z
                    payments:
                      - amount:
                          currency: GBP
                          value: 100
                        bacs: null
                        iban: null
                        last_status_update: 2019-11-06T21:10:52Z
                        payment_id: payment-id-sandbox-feca8a7a-5591-4aef-9297-f3062bb735d3
                        recipient_id: recipient-id-sandbox-9b6b4679-914b-445b-9450-efbdb80296f6
                        reference: Account Funding 99744
                        status: PAYMENT_STATUS_INPUT_NEEDED
                    request_id: aEAQmewMzlVa1k6
              schema:
                $ref: "#/components/schemas/PaymentInitiationPaymentListResponse"
          description: OK
      summary: List payments
      tags:
        - plaid
  /payment_initiation/payment/token/create:
    post:
      deprecated: true
      description: |-
        The `/payment_initiation/payment/token/create` endpoint has been deprecated. New Plaid customers will be unable to use this endpoint, and existing customers are encouraged to migrate to the newer, `link_token`-based flow. The recommended flow is to provide the `payment_id` to `/link/token/create`, which returns a `link_token` used to initialize Link.

        The `/payment_initiation/payment/token/create` is used to create a `payment_token`, which can then be used in Link initialization to enter a payment initiation flow. You can only use a `payment_token` once. If this attempt fails, the end user aborts the flow, or the token expires, you will need to create a new payment token. Creating a new payment token does not require end user input.
      externalDocs:
        url: /link/maintain-legacy-integration/#creating-a-payment-token
      operationId: createPaymentToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationPaymentTokenCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    payment_token: payment-token-sandbox-feca8a7a-5591-4aef-9297-f3062bb735d3
                    payment_token_expiration_time: 2020-01-01T00:00:00Z
                    request_id: 4ciYVmesrySiUAB
              schema:
                $ref: "#/components/schemas/PaymentInitiationPaymentTokenCreateResponse"
          description: OK
      summary: Create payment token
      tags:
        - plaid
  /payment_initiation/recipient/create:
    post:
      description: |
        Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA).  For a standing order (recurring) payment, the recipient must be in the UK.

        The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.
      externalDocs:
        url: /api/products/#payment_initiationrecipientcreate
      operationId: paymentInitiationRecipientCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationRecipientCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    recipient_id: recipient-id-sandbox-9b6b4679-914b-445b-9450-efbdb80296f6
                    request_id: 4zlKapIkTm8p5KM
              schema:
                $ref: "#/components/schemas/PaymentInitiationRecipientCreateResponse"
          description: OK
      summary: Create payment recipient
      tags:
        - plaid
  /payment_initiation/recipient/get:
    post:
      description: Get details about a payment recipient you have previously created.
      externalDocs:
        url: /api/products/#payment_initiationrecipientget
      operationId: paymentInitiationRecipientGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationRecipientGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    address:
                      city: London
                      country: GB
                      postal_code: SE14 8JW
                      street:
                        - 96 Guild Street
                        - 9th Floor
                    iban: GB29NWBK60161331926819
                    name: Wonder Wallet
                    recipient_id: recipient-id-sandbox-9b6b4679-914b-445b-9450-efbdb80296f6
                    request_id: 4zlKapIkTm8p5KM
              schema:
                $ref: "#/components/schemas/PaymentInitiationRecipientGetResponse"
          description: OK
      summary: Get payment recipient
      tags:
        - plaid
  /payment_initiation/recipient/list:
    post:
      description: The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
      externalDocs:
        url: /api/products/#payment_initiationrecipientlist
      operationId: paymentInitiationRecipientList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInitiationRecipientListRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    recipients:
                      - address:
                          city: London
                          country: GB
                          postal_code: SE14 8JW
                          street:
                            - 96 Guild Street
                            - 9th Floor
                        iban: GB29NWBK60161331926819
                        name: Wonder Wallet
                        recipient_id: recipient-id-sandbox-9b6b4679-914b-445b-9450-efbdb80296f6
                    request_id: 4zlKapIkTm8p5KM
              schema:
                $ref: "#/components/schemas/PaymentInitiationRecipientListResponse"
          description: OK
      summary: List payment recipients
      tags:
        - plaid
  /processor/apex/processor_token/create:
    post:
      description: Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
      externalDocs:
        url: /none/
      operationId: processorApexProcessorTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorApexProcessorTokenCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessorTokenCreateResponse"
          description: OK
      summary: Create Apex bank account token
      tags:
        - plaid
  /processor/auth/get:
    post:
      description: The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that's associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
      externalDocs:
        url: /api/processors/#processorauthget
      operationId: processorAuthGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorAuthGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    account:
                      account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                      balances:
                        available: 100
                        current: 110
                        limit: null
                      mask: "0000"
                      name: Plaid Checking
                      official_name: Plaid Gold Checking
                      subtype: checking
                      type: depository
                    numbers:
                      ach:
                        account: "9900009606"
                        account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                        routing: "011401533"
                        wire_routing: "021000021"
                      bacs:
                        account: "31926819"
                        account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                        sort_code: "601613"
                      eft:
                        account: "111122223333"
                        account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                        branch: "01140"
                        institution: "021"
                      international:
                        account_id: vzeNDwK7KQIm4yEog683uElbp9GRLEFXGK98D
                        bic: NWBKGB21
                        iban: GB29NWBK60161331926819
                    request_id: 1zlMf
              schema:
                $ref: "#/components/schemas/ProcessorAuthGetResponse"
          description: success
      summary: Retrieve Auth data
      tags:
        - plaid
  /processor/balance/get:
    post:
      description: "The `/processor/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached. "
      externalDocs:
        url: /api/processors/#processorbalanceget
      operationId: processorBalanceGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorBalanceGetRequest"
        description: |-
          The `/processor/balance/get` endpoint returns the real-time balance for the account associated with a given `processor_token`.

          The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.

          Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of `null`.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    account:
                      account_id: QKKzevvp33HxPWpoqn6rI13BxW4awNSjnw4xv
                      balances:
                        available: 100
                        current: 110
                        iso_currency_code: USD
                        limit: null
                        unofficial_currency_code: null
                      mask: "0000"
                      name: Plaid Checking
                      official_name: Plaid Gold Checking
                      subtype: checking
                      type: depository
                    request_id: 1zlMf
              schema:
                $ref: "#/components/schemas/ProcessorBalanceGetResponse"
          description: OK
      summary: Retrieve Balance data
      tags:
        - plaid
  /processor/bank_transfer/create:
    post:
      description: Use the `/processor/bank_transfer/create` endpoint to initiate a new bank transfer as a processor
      externalDocs:
        url: /api/processors/#bank_transfercreate
      operationId: processorBankTransferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorBankTransferCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    bank_transfer:
                      account_id: 6qL6lWoQkAfNE3mB8Kk5tAnvpX81qefrvvl7B
                      ach_class: ppd
                      amount: "12.34"
                      cancellable: true
                      created: 2020-08-06T17:27:15Z
                      custom_tag: my tag
                      description: Testing2
                      direction: outbound
                      failure_reason: null
                      id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
                      iso_currency_code: USD
                      metadata:
                        key1: value1
                        key2: value2
                      network: ach
                      origination_account_id: 11111111-1111-1111-1111-111111111111
                      status: pending
                      type: credit
                      user:
                        email_address: plaid@plaid.com
                        legal_name: John Smith
                        routing_number: "111111111"
                    request_id: saKrIBuEB9qJZno
              schema:
                $ref: "#/components/schemas/ProcessorBankTransferCreateResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Create a bank transfer as a processor
      tags:
        - plaid
  /processor/identity/get:
    post:
      description: The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
      externalDocs:
        url: /api/processors/#processoridentityget
      operationId: processorIdentityGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorIdentityGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    account:
                      account_id: XMGPJy4q1gsQoKd5z9R3tK8kJ9EWL8SdkgKMq
                      balances:
                        available: 100
                        current: 110
                        iso_currency_code: USD
                        limit: null
                        unofficial_currency_code: null
                      mask: "0000"
                      name: Plaid Checking
                      official_name: Plaid Gold Standard 0% Interest Checking
                      owners:
                        - addresses:
                            - data:
                                city: Malakoff
                                country: US
                                postal_code: "14236"
                                region: NY
                                street: 2992 Cameron Road
                              primary: true
                            - data:
                                city: San Matias
                                country: US
                                postal_code: 93405-2255
                                region: CA
                                street: 2493 Leisure Lane
                              primary: false
                          emails:
                            - data: accountholder0@example.com
                              primary: true
                              type: primary
                            - data: accountholder1@example.com
                              primary: false
                              type: secondary
                            - data: extraordinarily.long.email.username.123456@reallylonghostname.com
                              primary: false
                              type: other
                          names:
                            - Alberta Bobbeth Charleson
                          phone_numbers:
                            - data: "1112223333"
                              primary: false
                              type: home
                            - data: "1112224444"
                              primary: false
                              type: work
                            - data: "1112225555"
                              primary: false
                              type: mobile1
                      subtype: checking
                      type: depository
                    request_id: eOPkBl6t33veI2J
              schema:
                $ref: "#/components/schemas/ProcessorIdentityGetResponse"
          description: OK
      summary: Retrieve Identity data
      tags:
        - plaid
  /processor/stripe/bank_account_token/create:
    post:
      description: Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations. For a detailed guide on integrating Stripe, see [Add Stripe to your app](https://plaid.com/docs/auth/partnerships/stripe/).
      externalDocs:
        url: /api/processors/#processorstripebank_account_tokencreate
      operationId: processorStripeBankAccountTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorStripeBankAccountTokenCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: xrQNYZ7Zoh6R7gV
                    stripe_bank_account_token: btok_5oEetfLzPklE1fwJZ7SG
              schema:
                $ref: "#/components/schemas/ProcessorStripeBankAccountTokenCreateResponse"
          description: OK
      summary: Create Stripe bank account token
      tags:
        - plaid
  /processor/token/create:
    post:
      description: Used to create a token suitable for sending to one of Plaid's partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.
      externalDocs:
        url: /api/processors/#processortokencreate
      operationId: processorTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessorTokenCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    processor_token: processor-sandbox-0asd1-a92nc
                    request_id: xrQNYZ7Zoh6R7gV
              schema:
                $ref: "#/components/schemas/ProcessorTokenCreateResponse"
          description: OK
      summary: Create processor token
      tags:
        - plaid
  /sandbox/bank_transfer/fire_webhook:
    post:
      description: Use the `/sandbox/bank_transfer/fire_webhook` endpoint to manually trigger a Bank Transfers webhook in the Sandbox environment.
      externalDocs:
        url: /api/sandbox/#sandboxbank_transferfire_webhook
      operationId: sandboxBankTransferFireWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxBankTransferFireWebhookRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/SandboxBankTransferFireWebhookResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Manually fire a Bank Transfer webhook
      tags:
        - plaid
  /sandbox/bank_transfer/simulate:
    post:
      description: Use the `/sandbox/bank_transfer/simulate` endpoint to simulate a bank transfer event in the Sandbox environment.  Note that while an event will be simulated and will appear when using endpoints such as `/bank_transfer/event/sync` or `/bank_transfer/event/list`, no transactions will actually take place and funds will not move between accounts, even within the Sandbox.
      externalDocs:
        url: /api/sandbox/#sandboxbank_transfersimulate
      operationId: sandboxBankTransferSimulate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxBankTransferSimulateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/SandboxBankTransferSimulateResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Simulate a bank transfer event in Sandbox
      tags:
        - plaid
  /sandbox/income/fire_webhook:
    post:
      description: Use the `/sandbox/income/fire_webhook` endpoint to manually trigger an Income webhook in the Sandbox environment.
      externalDocs:
        url: /api/sandbox/#sandboxincomefire_webhook
      operationId: sandboxIncomeFireWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxIncomeFireWebhookRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/SandboxIncomeFireWebhookResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Manually fire an Income webhook
      tags:
        - plaid
  /sandbox/item/fire_webhook:
    post:
      description: The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. Calling this endpoint triggers a Transactions `DEFAULT_UPDATE` webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
      externalDocs:
        url: /api/sandbox/#sandboxitemfire_webhook
      operationId: sandboxItemFireWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxItemFireWebhookRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: 1vwmF5TBQwiqfwP
                    webhook_fired: true
              schema:
                $ref: "#/components/schemas/SandboxItemFireWebhookResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Fire a test webhook
      tags:
        - plaid
  /sandbox/item/reset_login:
    post:
      description: |-
        `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link's [update mode](https://plaid.com/docs/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.


        In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
      externalDocs:
        url: /api/sandbox/#sandboxitemreset_login
      operationId: sandboxItemResetLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxItemResetLoginRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: m8MDnv9okwxFNBV
                    reset_login: true
              schema:
                $ref: "#/components/schemas/SandboxItemResetLoginResponse"
          description: OK
      summary: Force a Sandbox Item into an error state
      tags:
        - plaid
  /sandbox/item/set_verification_status:
    post:
      description: |-
        The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.

        Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).

        For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](https://plaid.com/docs/auth/coverage/testing#).
      externalDocs:
        url: /api/sandbox/#sandboxitemset_verification_status
      operationId: sandboxItemSetVerificationStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxItemSetVerificationStatusRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: 1vwmF5TBQwiqfwP
              schema:
                $ref: "#/components/schemas/SandboxItemSetVerificationStatusResponse"
          description: OK
      summary: Set verification status for Sandbox account
      tags:
        - plaid
  /sandbox/oauth/select_accounts:
    post:
      operationId: sandboxOauthSelectAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxOauthSelectAccountsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SandboxOauthSelectAccountsResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Save the selected accounts when connecting to the Platypus Oauth institution
      tags:
        - plaid
  /sandbox/processor_token/create:
    post:
      description: Use the `/sandbox/processor_token/create` endpoint to create a valid `processor_token` for an arbitrary institution ID and test credentials. The created `processor_token` corresponds to a new Sandbox Item. You can then use this `processor_token` with the `/processor/` API endpoints in Sandbox. You can also use `/sandbox/processor_token/create` with the [`user_custom` test username](https://plaid.com/docs/sandbox/user-custom) to generate a test account with custom data.
      externalDocs:
        url: /api/sandbox/#sandboxprocessor_tokencreate
      operationId: sandboxProcessorTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxProcessorTokenCreateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    processor_token: processor-sandbox-b0e2c4ee-a763-4df5-bfe9-46a46bce993d
                    request_id: Aim3b
              schema:
                $ref: "#/components/schemas/SandboxProcessorTokenCreateResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Create a test Item and processor token
      tags:
        - plaid
  /sandbox/public_token/create:
    post:
      description: Use the `/sandbox/public_token/create`  endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](https://plaid.com/docs/sandbox/user-custom) to generate a test account with custom data.
      externalDocs:
        url: /api/sandbox/#sandboxpublic_tokencreate
      operationId: sandboxPublicTokenCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SandboxPublicTokenCreateRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    public_token: public-sandbox-b0e2c4ee-a763-4df5-bfe9-46a46bce993d
                    request_id: Aim3b
              schema:
                $ref: "#/components/schemas/SandboxPublicTokenCreateResponse"
          description: success
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Create a test Item
      tags:
        - plaid
  /signal/decision/report:
    post:
      description: After calling `/signal/evaluate`, call `/signal/decision/report` to report whether the transaction was initiated. This endpoint will return an `INVALID_REQUEST` error if called a second time with a different value for `initiated`.
      externalDocs:
        url: /signal/reference#signaldecisionreport
      operationId: signalDecisionReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalDecisionReportRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/SignalDecisionReportResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Report whether you initiated an ACH transaction
      tags:
        - plaid
  /signal/evaluate:
    post:
      description: |-
        Use `/signal/evaluate` to evaluate a planned ACH transaction to get a return risk assessment (such as a risk score and risk tier) and additional risk signals.

        In order to obtain a valid score for an ACH transaction, Plaid must have an access token for the account, and the Item must be healthy (receiving product updates) or have recently been in a healthy state. If the transaction does not meet eligibility requirements, an error will be returned corresponding to the underlying cause.
      externalDocs:
        url: /signal/reference#signalevaluate
      operationId: signalEvaluate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalEvaluateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    core_attributes:
                      address_change_count_28d: 0
                      address_change_count_90d: 0
                      available_balance: 420.22
                      balance_last_updated: 2021-02-25 09:18:21.787082
                      current_balance: 476
                      days_since_first_plaid_connection: 510
                      days_with_negative_balance_count_90d: 0
                      email_change_count_28d: 0
                      email_change_count_90d: 0
                      is_savings_or_money_market_account: false
                      nsf_overdraft_transactions_count_30d: 1
                      nsf_overdraft_transactions_count_60d: 2
                      nsf_overdraft_transactions_count_7d: 1
                      nsf_overdraft_transactions_count_90d: 2
                      p10_eod_balance_30d: 320.44
                      p10_eod_balance_60d: 320.46
                      p10_eod_balance_90d: 320.23
                      p50_credit_transactions_amount_28d: 46.79
                      p50_debit_transactions_amount_28d: 75
                      p90_eod_balance_30d: 555.71
                      p90_eod_balance_60d: 449.96
                      p90_eod_balance_90d: 434.38
                      p95_credit_transactions_amount_28d: 155.95
                      p95_debit_transactions_amount_28d: 799.59
                      phone_change_count_28d: 0
                      phone_change_count_90d: 0
                      plaid_connections_count_30d: 7
                      plaid_connections_count_7d: 6
                      total_credit_transactions_amount_10d: 507.04
                      total_debit_transactions_amount_10d: 590.14
                      total_plaid_connections_count: 15
                      unauthorized_transactions_count_30d: 0
                      unauthorized_transactions_count_60d: 0
                      unauthorized_transactions_count_7d: 0
                      unauthorized_transactions_count_90d: 0
                    request_id: mdqfuVxeoza6mhu
                    scores:
                      bank_initiated_return_risk:
                        risk_tier: 7
                        score: 72
                      customer_initiated_return_risk:
                        risk_tier: 1
                        score: 9
              schema:
                $ref: "#/components/schemas/SignalEvaluateResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Evaluate a planned ACH transaction
      tags:
        - plaid
  /signal/return/report:
    post:
      description: Call the `/signal/return/report` endpoint to report a returned transaction that was previously sent to the `/signal/evaluate` endpoint. Your feedback will be used by the model to incorporate the latest risk trend in your portfolio.
      externalDocs:
        url: /signal/reference#signalreturnreport
      operationId: signalReturnReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalReturnReportRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: mdqfuVxeoza6mhu
              schema:
                $ref: "#/components/schemas/SignalReturnReportResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response.
      summary: Report a return for an ACH transaction
      tags:
        - plaid
  /transactions/get:
    post:
      description: |-
        The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (only those with account subtype `student`; coverage may be limited). For transaction history from investments accounts, use the [Investments endpoint](https://plaid.com/docs/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.

        Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Transactions are not immutable and can also be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  For more details, see [Pending and posted transactions](https://plaid.com/docs/transactions/transactions-data/#pending-and-posted-transactions).

        Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.

        Data returned by `/transactions/get` will be the data available for the Item as of the most recent successful check for new transactions. Plaid typically checks for new data multiple times a day, but these checks may occur less frequently, such as once a day, depending on the institution. An Item's `status.transactions.last_successful_update` field will show the timestamp of the most recent successful update. To force Plaid to check for new transactions, you can use the `/transactions/refresh` endpoint.

        Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn't. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
      externalDocs:
        url: /api/products/#transactionsget
      operationId: transactionsGet
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: "#/components/schemas/TransactionsGetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    accounts:
                      - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                        balances:
                          available: 110
                          current: 110
                          iso_currency_code: USD
                          limit: null
                          unofficial_currency_code: null
                        mask: "0000"
                        name: Plaid Checking
                        official_name: Plaid Gold Standard 0% Interest Checking
                        subtype: checking
                        type: depository
                    item:
                      available_products:
                        - balance
                        - identity
                        - investments
                      billed_products:
                        - assets
                        - auth
                        - liabilities
                        - transactions
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_3
                      item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: 45QSn
                    total_transactions: 1
                    transactions:
                      - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                        account_owner: null
                        amount: 2307.21
                        authorized_date: 2017-01-27
                        authorized_datetime: null
                        category:
                          - Shops
                          - Computers and Electronics
                        category_id: "19013000"
                        date: 2017-01-29
                        datetime: null
                        iso_currency_code: USD
                        location:
                          address: 300 Post St
                          city: San Francisco
                          country: US
                          lat: 40.740352
                          lon: -74.001761
                          postal_code: "94108"
                          region: CA
                          store_number: "1235"
                        merchant_name: Apple
                        name: Apple Store
                        payment_channel: in store
                        payment_meta:
                          by_order_of: null
                          payee: null
                          payer: null
                          payment_method: null
                          payment_processor: null
                          ppd_id: null
                          reason: null
                          reference_number: null
                        pending: false
                        pending_transaction_id: null
                        transaction_code: null
                        transaction_id: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
                        transaction_type: place
                        unofficial_currency_code: null
              schema:
                $ref: "#/components/schemas/TransactionsGetResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Get transaction data
      tags:
        - plaid
  /transactions/refresh:
    post:
      description: |-
        `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](https://plaid.com/docs/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.

        Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.
      externalDocs:
        url: /api/products/#transactionsrefresh
      operationId: transactionsRefresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionsRefreshRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    request_id: 1vwmF5TBQwiqfwP
              schema:
                $ref: "#/components/schemas/TransactionsRefreshResponse"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Error response
      summary: Refresh transaction data
      tags:
        - plaid
  /webhook_verification_key/get:
    post:
      description: |-
        Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.

        The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
      externalDocs:
        url: /api/webhooks/webhook-verification/#webhook_verification_keyget
      operationId: webhookVerificationKeyGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookVerificationKeyGetRequest"
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    key:
                      alg: ES256
                      created_at: 1560466150
                      crv: P-256
                      expired_at: null
                      kid: bfbd5111-8e33-4643-8ced-b2e642a72f3c
                      kty: EC
                      use: sig
                      x: hKXLGIjWvCBv-cP5euCTxl8g9GLG9zHo_3pO5NN1DwQ
                      y: shhexqPB7YffGn6fR6h2UhTSuCtPmfzQJ6ENVIoO4Ys
                    request_id: RZ6Omi1bzzwDaLo
              schema:
                $ref: "#/components/schemas/WebhookVerificationKeyGetResponse"
          description: OK
      summary: Get webhook verification key
      tags:
        - plaid
components:
  schemas:
    ACHClass:
      description: |-
        Specifies the use case of the transfer.  Required for transfers on an ACH network.

        `"arc"` - Accounts Receivable Entry

        `"cbr`" - Cross Border Entry

        `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

        `"cie"` - Customer Initiated Entry

        `"cor"` - Automated Notification of Change

        `"ctx"` - Corporate Trade Exchange

        `"iat"` - International

        `"mte"` - Machine Transfer Entry

        `"pbr"` - Cross Border Entry

        `"pop"` - Point-of-Purchase Entry

        `"pos"` - Point-of-Sale Entry

        `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

        `"rck"` - Re-presented Check Entry

        `"tel"` - Telephone-Initiated Entry

        `"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet
      enum:
        - arc
        - cbr
        - ccd
        - cie
        - cor
        - ctx
        - iat
        - mte
        - pbr
        - pop
        - pos
        - ppd
        - rck
        - tel
        - web
      title: ACHClass
      type: string
    APIClientID:
      description: Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
      title: ClientID
      type: string
    APISecret:
      description: Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
      title: APISecret
      type: string
    APR:
      additionalProperties: true
      description: Information about the APR on the account.
      properties:
        apr_percentage:
          description: |
            Annual Percentage Rate applied.
          type: number
        apr_type:
          description: The type of balance to which the APR applies.
          enum:
            - balance_transfer_apr
            - cash_apr
            - purchase_apr
            - special
          type: string
        balance_subject_to_apr:
          description: Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
          nullable: true
          type: number
        interest_charge_amount:
          description: Amount of money charged due to interest from last statement.
          nullable: true
          type: number
      required:
        - apr_percentage
        - apr_type
        - balance_subject_to_apr
        - interest_charge_amount
      title: APR
      type: object
    AccessToken:
      description: The access token associated with the Item data is being requested for.
      title: AccessToken
      type: string
    AccessTokenNullable:
      description: The access token associated with the Item data is being requested for.
      nullable: true
      type: string
    AccountAccess:
      description: Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered `new_accounts`.
      properties:
        authorized:
          default: true
          description: Allow the application to see this account (and associated details, including balance) in the list of accounts. If unset, defaults to `true`.
          nullable: true
          type: boolean
        unique_id:
          description: The unique account identifier for this account. This value must match that returned by the data access API for this account.
          type: string
      required:
        - unique_id
      type: object
    AccountAssets:
      allOf:
        - $ref: "#/components/schemas/AccountBase"
        - additionalProperties: true
          properties:
            days_available:
              description: The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Assets endpoints.
              type: number
            historical_balances:
              description: Calculated data about the historical balances on the account. Only returned by Assets endpoints.
              items:
                $ref: "#/components/schemas/HistoricalBalance"
              type: array
            owners:
              description: Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array.
              items:
                $ref: "#/components/schemas/Owner"
              type: array
            transactions:
              description: Transaction history associated with the account. Only returned by Assets endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead.
              items:
                $ref: "#/components/schemas/AssetReportTransaction"
              type: array
          required:
            - days_available
            - transactions
            - owners
            - historical_balances
          type: object
      title: AccountAssets
    AccountBalance:
      additionalProperties: true
      description: A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.
      properties:
        available:
          description: |-
            The amount of funds available to be withdrawn from the account, as determined by the financial institution.

            For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.

            For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.

            For `investment`-type accounts, the `available` balance is the total cash available to withdraw as presented by the institution.

            Note that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.

            Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.
          nullable: true
          type: number
        current:
          description: |-
            The total amount of funds in or owed by the account.

            For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.

            For `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.

            For `investment`-type accounts, the current balance is the total value of assets as presented by the institution.

            Note that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.
          nullable: true
          type: number
        iso_currency_code:
          description: The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.
          nullable: true
          type: string
        last_updated_datetime:
          description: |-
            Timestamp in ISO-8601 format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time that the balance for the given account has been updated

            This is currently only provided when the `min_last_updated_datetime` is passed when calling `/accounts/balance/get` for `ins_128026` (Capital One).
          format: date-time
          nullable: true
          type: string
        limit:
          description: |-
            For `credit`-type accounts, this represents the credit limit.

            For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.

            In North America, this field is typically only available for `credit`-type accounts.
          nullable: true
          type: number
        unofficial_currency_code:
          description: |-
            The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
          nullable: true
          type: string
      required:
        - available
        - current
        - limit
        - iso_currency_code
        - unofficial_currency_code
      title: AccountBalance
      type: object
    AccountBase:
      additionalProperties: true
      description: A single account at a financial institution.
      properties:
        account_id:
          description: |-
            Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.

            The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.

            If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.

            Like all Plaid identifiers, the `account_id` is case sensitive.
          type: string
        balances:
          $ref: "#/components/schemas/AccountBalance"
        mask:
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
          nullable: true
          type: string
        name:
          description: The name of the account, either assigned by the user or by the financial institution itself
          type: string
        official_name:
          description: The official name of the account as given by the financial institution
          nullable: true
          type: string
        subtype:
          $ref: "#/components/schemas/AccountSubtype"
        type:
          $ref: "#/components/schemas/AccountType"
        verification_status:
          description: "The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.


            `pending_automatic_verification`: The Item is pending automatic verification


            `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.


            `automatically_verified`: The Item has successfully been automatically verified\t


            `manually_verified`: The Item has successfully been manually verified


            `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.


            `verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.\t

            \t"
          enum:
            - pending_automatic_verification
            - pending_manual_verification
            - manually_verified
            - verification_expired
            - verification_failed
          type: string
      required:
        - account_id
        - balances
        - mask
        - name
        - official_name
        - type
        - subtype
      title: Account
      type: object
      x-examples:
        example-1: {}
    AccountFilter:
      description: Enumerates the account subtypes that the application wishes for the user to be able to select from. For more details refer to Plaid documentation on account filters.
      properties:
        credit:
          $ref: "#/components/schemas/AccountFilterSubtypes"
        depository:
          $ref: "#/components/schemas/AccountFilterSubtypes"
        investment:
          $ref: "#/components/schemas/AccountFilterSubtypes"
        loan:
          $ref: "#/components/schemas/AccountFilterSubtypes"
      type: object
    AccountFilterSubtypes:
      description: A list of account subtypes to be filtered.
      items:
        description: List of account subtypes.
        type: string
      type: array
    AccountFiltersResponse:
      additionalProperties: true
      description: |
        The `account_filters` specified in the original call to `/link/token/create`.
      properties:
        credit:
          $ref: "#/components/schemas/CreditFilter"
        depository:
          $ref: "#/components/schemas/DepositoryFilter"
        investment:
          $ref: "#/components/schemas/InvestmentFilter"
        loan:
          $ref: "#/components/schemas/LoanFilter"
      title: AccountFiltersResponse
      type: object
    AccountIdentity:
      allOf:
        - $ref: "#/components/schemas/AccountBase"
        - additionalProperties: true
          properties:
            owners:
              description: Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array.
              items:
                $ref: "#/components/schemas/Owner"
              type: array
          required:
            - owners
          type: object
      title: AccountIdentity
    AccountSelectionCardinality:
      description: |-
        The application requires that accounts be limited to a specific cardinality.
        `MULTI_SELECT`: indicates that the user should be allowed to pick multiple accounts.
        `SINGLE_SELECT`: indicates that the user should be allowed to pick only a single account.
        `ALL`: indicates that the user must share all of their accounts and should not be given the opportunity to de-select
      enum:
        - SINGLE_SELECT
        - MULTI_SELECT
        - ALL
      type: string
    AccountSubtype:
      description: See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
      enum:
        - 401a
        - 401k
        - 403B
        - 457b
        - "529"
        - brokerage
        - cash isa
        - education savings account
        - ebt
        - gic
        - health reimbursement arrangement
        - hsa
        - isa
        - ira
        - lif
        - life insurance
        - lira
        - lrif
        - lrsp
        - non-taxable brokerage account
        - other
        - other insurance
        - other annuity
        - prif
        - rdsp
        - resp
        - rlif
        - rrif
        - pension
        - profit sharing plan
        - retirement
        - roth
        - roth 401k
        - rrsp
        - sep ira
        - simple ira
        - sipp
        - stock plan
        - thrift savings plan
        - tfsa
        - trust
        - ugma
        - utma
        - variable annuity
        - credit card
        - paypal
        - cd
        - checking
        - savings
        - money market
        - prepaid
        - auto
        - business
        - commercial
        - construction
        - consumer
        - home
        - home equity
        - loan
        - mortgage
        - overdraft
        - line of credit
        - student
        - cash management
        - keogh
        - mutual fund
        - recurring
        - rewards
        - safe deposit
        - sarsep
        - null
      nullable: true
      title: AccountSubtype
      type: string
    AccountSubtypes:
      description: "An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema). "
      items:
        $ref: "#/components/schemas/AccountSubtype"
      title: AccountSubtypes
      type: array
    AccountType:
      description: |-
        `investment:` Investment account

        `credit:` Credit card

        `depository:` Depository account

        `loan:` Loan account

        `brokerage`: An investment account. Used for `/assets/` endpoints only; other endpoints use `investment`.

        `other:` Non-specified account type

        See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
      enum:
        - investment
        - credit
        - depository
        - loan
        - brokerage
        - other
      title: AccountType
      type: string
    AccountsBalanceGetRequest:
      description: AccountsBalanceGetRequest defines the request schema for `/accounts/balance/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/AccountsBalanceGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    AccountsBalanceGetRequestOptions:
      description: An optional object to filter `/accounts/balance/get` results.
      properties:
        account_ids:
          description: |-
            A list of `account_ids` to retrieve for the Item. The default value is `null`.

            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
          type: array
        min_last_updated_datetime:
          description: |-
            Timestamp in ISO-8601 format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.

            If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.

            This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.
          format: date-time
          type: string
      type: object
    AccountsGetRequest:
      description: AccountsGetRequest defines the request schema for `/accounts/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/AccountsGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
      x-examples:
        example-1: {}
    AccountsGetRequestOptions:
      description: An optional object to filter `/accounts/get` results.
      properties:
        account_ids:
          description: An array of `account_ids` to retrieve for the Account.
          items:
            type: string
          type: array
      type: object
    AccountsGetResponse:
      additionalProperties: true
      description: AccountsGetResponse defines the response schema for `/accounts/get` and `/accounts/balance/get`.
      properties:
        accounts:
          description: |-
            An array of financial institution accounts associated with the Item.
            If `/accounts/balance/get` was called, each account will include real-time balance information.
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - accounts
        - item
        - request_id
      type: object
    Address:
      additionalProperties: true
      description: A physical mailing address.
      properties:
        data:
          $ref: "#/components/schemas/AddressData"
        primary:
          description: When `true`, identifies the address as the primary address on an account.
          type: boolean
      required:
        - data
      title: Address
      type: object
    AddressData:
      additionalProperties: true
      description: Data about the components comprising an address.
      properties:
        city:
          description: The full city name
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
          type: string
        postal_code:
          description: The postal code
          nullable: true
          type: string
        region:
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
          type: string
        street:
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
          type: string
      required:
        - city
        - region
        - street
        - postal_code
        - country
      title: AddressData
      type: object
    AddressDataNullable:
      allOf:
        - $ref: "#/components/schemas/AddressData"
        - additionalProperties: true
          type: object
      nullable: true
    AddressNullable:
      allOf:
        - $ref: "#/components/schemas/Address"
        - additionalProperties: true
          type: object
      nullable: true
    Application:
      description: Metadata about the application
      properties:
        application_id:
          $ref: "#/components/schemas/ApplicationID"
        application_url:
          description: The URL for the application's website
          nullable: true
          type: string
        created_at:
          description: The date this application was linked in ISO8601 (YYYY-MM-DD) format in UTC.
          format: date
          type: string
        logo_url:
          description: A URL that links to the application logo image.
          nullable: true
          type: string
        name:
          description: The name of the application
          type: string
        reason_for_access:
          description: A string provided by the connected app stating why they use their respective enabled products.
          nullable: true
          type: string
      required:
        - application_id
        - created_at
        - name
        - logo_url
        - application_url
        - reason_for_access
      type: object
    ApplicationGetRequest:
      description: ApplicationGetResponse defines the schema for `/application/get`
      properties:
        application_id:
          $ref: "#/components/schemas/ApplicationID"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - client_id
        - secret
        - application_id
      type: object
    ApplicationGetResponse:
      description: The request ID associated with this call.
      properties:
        application:
          $ref: "#/components/schemas/Application"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
        - application
      type: object
    ApplicationID:
      description: This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
      title: ApplicationID
      type: string
    AssetReport:
      additionalProperties: true
      description: An object representing an Asset Report
      properties:
        asset_report_id:
          $ref: "#/components/schemas/AssetReportId"
        client_report_id:
          description: An identifier you determine and submit for the Asset Report.
          type: string
        date_generated:
          description: The date and time when the Asset Report was created, in ISO 8601 format (e.g. "2018-04-12T03:32:11Z").
          format: date-time
          type: string
        days_requested:
          description: The duration of transaction history you requested
          type: number
        items:
          description: Data returned by Plaid about each of the Items included in the Asset Report.
          items:
            $ref: "#/components/schemas/AssetReportItem"
          type: array
        user:
          $ref: "#/components/schemas/AssetReportUser"
      required:
        - asset_report_id
        - client_report_id
        - date_generated
        - days_requested
        - user
        - items
      title: AssetReport
      type: object
    AssetReportAuditCopyCreateRequest:
      description: AssetReportAuditCopyCreateRequest defines the request schema for `/asset_report/audit_copy/get`
      properties:
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        auditor_id:
          description: The `auditor_id` of the third party with whom you would like to share the Asset Report.
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
        - auditor_id
      type: object
    AssetReportAuditCopyCreateResponse:
      additionalProperties: true
      description: AssetReportAuditCopyCreateResponse defines the response schema for `/asset_report/audit_copy/get`
      properties:
        audit_copy_token:
          description: A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - audit_copy_token
        - request_id
      type: object
    AssetReportAuditCopyGetRequest:
      description: AssetReportAuditCopyGetRequest defines the request schema for `/asset_report/audit_copy/get`
      properties:
        audit_copy_token:
          description: The `audit_copy_token` granting access to the Audit Copy you would like to get.
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - audit_copy_token
      title: AssetReportAuditCopyGetRequest
      type: object
    AssetReportAuditCopyRemoveRequest:
      description: AssetReportAuditCopyRemoveRequest defines the request schema for `/asset_report/audit_copy/remove`
      properties:
        audit_copy_token:
          description: The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - audit_copy_token
      type: object
    AssetReportAuditCopyRemoveResponse:
      additionalProperties: true
      description: AssetReportAuditCopyRemoveResponse defines the response schema for `/asset_report/audit_copy/remove`
      properties:
        removed:
          description: "`true` if the Audit Copy was successfully removed."
          type: boolean
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - removed
        - request_id
      type: object
    AssetReportCreateRequest:
      description: AssetReportCreateRequest defines the request schema for `/asset_report/create`
      properties:
        access_tokens:
          description: An array of access tokens corresponding to the Items that will be included in the report. The `assets` product must have been initialized for the Items during link; the Assets product cannot be added after initialization.
          items:
            $ref: "#/components/schemas/AccessToken"
          maxItems: 99
          minItems: 1
          type: array
        client_id:
          $ref: "#/components/schemas/APIClientID"
        days_requested:
          description: The maximum integer number of days of history to include in the Asset Report. If using Fannie Mae Day 1 Certainty, `days_requested` must be at least 61 for new originations or at least 31 for refinancings.
          maximum: 730
          minimum: 0
          type: integer
        options:
          $ref: "#/components/schemas/AssetReportCreateRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_tokens
        - days_requested
      type: object
    AssetReportCreateRequestOptions:
      description: An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.
      properties:
        client_report_id:
          description: Client-generated identifier, which can be used by lenders to track loan applications.
          type: string
        user:
          $ref: "#/components/schemas/AssetReportUser"
        webhook:
          description: URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
          type: string
      type: object
    AssetReportCreateResponse:
      additionalProperties: true
      description: AssetReportCreateResponse defines the response schema for `/asset_report/create`
      properties:
        asset_report_id:
          $ref: "#/components/schemas/AssetReportId"
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - asset_report_token
        - asset_report_id
        - request_id
      type: object
    AssetReportFilterRequest:
      description: AssetReportFilterRequest defines the request schema for `/asset_report/filter`
      properties:
        account_ids_to_exclude:
          description: The accounts to exclude from the Asset Report, identified by `account_id`.
          items:
            type: string
          type: array
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
        - account_ids_to_exclude
      type: object
    AssetReportFilterResponse:
      additionalProperties: true
      description: AssetReportFilterResponse defines the response schema for `/asset_report/filter`
      properties:
        asset_report_id:
          $ref: "#/components/schemas/AssetReportId"
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - asset_report_token
        - asset_report_id
        - request_id
      type: object
    AssetReportGetRequest:
      description: AssetReportGetRequest defines the request schema for `/asset_report/get`
      properties:
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        include_insights:
          description: "`true` if you would like to retrieve the Asset Report with Insights, `false` otherwise. This field defaults to `false` if omitted."
          type: boolean
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
      type: object
    AssetReportGetResponse:
      additionalProperties: true
      description: AssetReportGetResponse defines the response schema for `/asset_report/get`
      properties:
        report:
          $ref: "#/components/schemas/AssetReport"
        request_id:
          $ref: "#/components/schemas/RequestID"
        warnings:
          description: If the Asset Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
          items:
            $ref: "#/components/schemas/Warning"
          type: array
      required:
        - report
        - warnings
        - request_id
      type: object
    AssetReportId:
      description: A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
      title: AssetReportId
      type: string
    AssetReportItem:
      additionalProperties: true
      description: A representation of an Item within an Asset Report.
      properties:
        accounts:
          description: Data about each of the accounts open on the Item.
          items:
            $ref: "#/components/schemas/AccountAssets"
          type: array
        date_last_updated:
          description: The date and time when this Item’s data was last retrieved from the financial institution, in ISO 8601 format.
          format: date-time
          type: string
        institution_id:
          description: The id of the financial institution associated with the Item.
          type: string
        institution_name:
          description: The full financial institution name associated with the Item.
          type: string
        item_id:
          $ref: "#/components/schemas/ItemId"
      required:
        - item_id
        - institution_name
        - institution_id
        - date_last_updated
        - accounts
      title: AssetReportItem
      type: object
    AssetReportPDFGetRequest:
      description: AssetReportPDFGetRequest defines the request schema for `/asset_report/pdf/get`
      properties:
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
      type: object
    AssetReportPDFGetResponse:
      format: binary
      type: string
    AssetReportRefreshAssetReportToken:
      description: The `asset_report_token` returned by the original call to `/asset_report/create`
      title: AssetReportRefreshAssetReportToken
      type: string
    AssetReportRefreshRequest:
      description: AssetReportRefreshRequest defines the request schema for `/asset_report/refresh`
      properties:
        asset_report_token:
          $ref: "#/components/schemas/AssetReportRefreshAssetReportToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        days_requested:
          description: The maximum number of days of history to include in the Asset Report. Must be an integer. If not specified, the value from the original call to `/asset_report/create` will be used.
          maximum: 730
          minimum: 0
          type: integer
        options:
          $ref: "#/components/schemas/AssetReportRefreshRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
      type: object
    AssetReportRefreshRequestOptions:
      description: An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
      properties:
        client_report_id:
          description: Client-generated identifier, which can be used by lenders to track loan applications.
          type: string
        user:
          $ref: "#/components/schemas/AssetReportUser"
        webhook:
          description: URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
          type: string
      type: object
    AssetReportRefreshResponse:
      additionalProperties: true
      description: AssetReportRefreshResponse defines the response schema for `/asset_report/refresh`
      properties:
        asset_report_id:
          $ref: "#/components/schemas/AssetReportId"
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - asset_report_id
        - asset_report_token
        - request_id
      type: object
    AssetReportRemoveRequest:
      description: AssetReportRemoveRequest defines the request schema for `/asset_report/remove`
      properties:
        asset_report_token:
          $ref: "#/components/schemas/AssetReportToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - asset_report_token
      type: object
    AssetReportRemoveResponse:
      additionalProperties: true
      description: AssetReportRemoveResponse defines the response schema for `/asset_report/remove`
      properties:
        removed:
          description: "`true` if the Asset Report was successfully removed."
          type: boolean
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - removed
        - request_id
      type: object
    AssetReportToken:
      description: A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
      title: AssetReportToken
      type: string
    AssetReportTransaction:
      allOf:
        - $ref: "#/components/schemas/TransactionBase"
        - additionalProperties: true
          properties:
            date_transacted:
              description: The date on which the transaction took place, in IS0 8601 format.
              nullable: true
              type: string
          required:
            - original_description
          type: object
      title: AssetReportTransaction
    AssetReportUser:
      additionalProperties: true
      description: The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.
      properties:
        client_user_id:
          description: An identifier you determine and submit for the user.
          nullable: true
          type: string
        email:
          description: The user's email address.
          nullable: true
          type: string
        first_name:
          description: The user's first name. Required for the Fannie Mae Day 1 Certainty™ program.
          nullable: true
          type: string
        last_name:
          description: The user's last name.  Required for the Fannie Mae Day 1 Certainty™ program.
          nullable: true
          type: string
        middle_name:
          description: The user's middle name
          nullable: true
          type: string
        phone_number:
          description: "The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\". Phone numbers provided in other formats will be parsed on a best-effort basis."
          nullable: true
          type: string
        ssn:
          description: |-
            The user's Social Security Number. Required for the Fannie Mae Day 1 Certainty™ program.

            Format: "ddd-dd-dddd"
          nullable: true
          type: string
      title: AssetReportUser
      type: object
    AssetsErrorWebhook:
      additionalProperties: true
      description: Fired when Asset Report generation has failed. The resulting `error` will have an `error_type` of `ASSET_REPORT_ERROR`.
      properties:
        asset_report_id:
          description: The ID associated with the Asset Report.
          type: string
        error:
          $ref: "#/components/schemas/Error"
        webhook_code:
          description: "`ERROR`"
          type: string
        webhook_type:
          description: "`ASSETS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - error
        - asset_report_id
      title: AssetsErrorWebhook
      type: object
      x-examples:
        example-1:
          asset_report_id: 47dfc92b-bba3-4583-809e-ce871b321f05
          error:
            display_message: null
            error_code: PRODUCT_NOT_ENABLED
            error_message: "the 'assets' product is not enabled for the following access tokens: access-sandbox-fb88b20c-7b74-4197-8d01-0ab122dad0bc. please ensure that 'assets' is included in the 'product' array when initializing Link and create the Item(s) again."
            error_type: ASSET_REPORT_ERROR
            request_id: m8MDnv9okwxFNBV
          webhook_code: ERROR
          webhook_type: ASSETS
    AssetsProductReadyWebhook:
      additionalProperties: true
      description: Fired when the Asset Report has been generated and `/asset_report/get` is ready to be called.  If you attempt to retrieve an Asset Report before this webhook has fired, you’ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
      properties:
        asset_report_id:
          description: The `asset_report_id` that can be provided to `/asset_report/get` to retrieve the Asset Report.
          type: string
        webhook_code:
          description: "`PRODUCT_READY`"
          type: string
        webhook_type:
          description: "`ASSETS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - asset_report_id
      title: AssetsProductReadyWebhook
      type: object
      x-examples:
        example-1:
          asset_report_id: 47dfc92b-bba3-4583-809e-ce871b321f05
          webhook_code: PRODUCT_READY
          webhook_type: ASSETS
    AuthGetNumbers:
      additionalProperties: true
      description: An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
      properties:
        ach:
          description: An array of ACH numbers identifying accounts.
          items:
            $ref: "#/components/schemas/NumbersACH"
          type: array
        bacs:
          description: An array of BACS numbers identifying accounts.
          items:
            $ref: "#/components/schemas/NumbersBACS"
          type: array
        eft:
          description: An array of EFT numbers identifying accounts.
          items:
            $ref: "#/components/schemas/NumbersEFT"
          type: array
        international:
          description: An array of IBAN numbers identifying accounts.
          items:
            $ref: "#/components/schemas/NumbersInternational"
          type: array
      required:
        - ach
        - eft
        - international
        - bacs
      type: object
    AuthGetRequest:
      description: AuthGetRequest defines the request schema for `/auth/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/AuthGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    AuthGetRequestOptions:
      description: An optional object to filter `/auth/get` results.
      properties:
        account_ids:
          description: |-
            A list of `account_ids` to retrieve for the Item.
            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
          type: array
      type: object
    AuthGetResponse:
      additionalProperties: true
      description: AuthGetResponse defines the response schema for `/auth/get`
      properties:
        accounts:
          description: The `accounts` for which numbers are being retrieved.
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        numbers:
          $ref: "#/components/schemas/AuthGetNumbers"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - accounts
        - numbers
        - item
        - request_id
      type: object
    AutomaticallyVerifiedWebhook:
      additionalProperties: true
      description: Fired when an Item is verified via automated micro-deposits. We recommend communicating to your users when this event is received to notify them that their account is verified and ready for use.
      properties:
        account_id:
          description: The `account_id` of the account associated with the webhook
          type: string
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`AUTOMATICALLY_VERIFIED`"
          type: string
        webhook_type:
          description: "`AUTH`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - account_id
        - item_id
      title: AutomaticallyVerifiedWebhook
      type: object
      x-examples:
        example-1:
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
          webhook_code: AUTOMATICALLY_VERIFIED
          webhook_type: AUTH
    BankInitiatedReturnRisk:
      description: 'The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: "R01", "R02", "R03", "R04", "R06", “R08”,  "R09", "R13", "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.'
      properties:
        risk_tier:
          $ref: "#/components/schemas/BankInitiatedRiskTier"
        score:
          $ref: "#/components/schemas/SignalScore"
      required:
        - risk_tier
        - score
      title: BankInitiatedReturnRisk
      type: object
    BankInitiatedRiskTier:
      description: |
        In the `bank_initiated_return_risk` object, there are eight risk tiers corresponding to the scores:
          1: Predicted bank-initiated return incidence rate between 0.0% - 0.5%
          2: Predicted bank-initiated return incidence rate between 0.5% - 1.5%
          3: Predicted bank-initiated return incidence rate between 1.5% - 3%
          4: Predicted bank-initiated return incidence rate between 3% - 5%
          5: Predicted bank-initiated return incidence rate between 5% - 10%
          6: Predicted bank-initiated return incidence rate between 10% - 15%
          7: Predicted bank-initiated return incidence rate between 15% and 50%
          8: Predicted bank-initiated return incidence rate greater than 50%
      maximum: 8
      minimum: 1
      type: integer
    BankTransfer:
      additionalProperties: true
      description: Represents a bank transfer within the Bank Transfers API.
      properties:
        account_id:
          description: The account ID that should be credited/debited for this bank transfer.
          type: string
        ach_class:
          $ref: "#/components/schemas/ACHClass"
        amount:
          description: The amount of the transfer (decimal string with two digits of precision e.g. “10.00”).
          type: string
        cancellable:
          description: When `true`, you can still cancel this bank transfer.
          type: boolean
        created:
          description: The datetime when this bank transfer was created. This will be of the form `2006-01-02T15:04:05Z`
          format: date-time
          type: string
        custom_tag:
          description: A string containing the custom tag provided by the client in the create request. Will be null if not provided.
          nullable: true
          type: string
        description:
          description: The description of the transfer.
          type: string
        direction:
          $ref: "#/components/schemas/BankTransferDirection"
        failure_reason:
          $ref: "#/components/schemas/BankTransferFailure"
        id:
          $ref: "#/components/schemas/BankTransferID"
        iso_currency_code:
          description: The currency of the transfer amount, e.g. "USD"
          type: string
        metadata:
          $ref: "#/components/schemas/BankTransferMetadata"
        network:
          $ref: "#/components/schemas/BankTransferNetwork"
        origination_account_id:
          description: Plaid’s unique identifier for the origination account that was used for this transfer.
          type: string
        status:
          $ref: "#/components/schemas/BankTransferStatus"
        type:
          $ref: "#/components/schemas/BankTransferType"
        user:
          $ref: "#/components/schemas/BankTransferUser"
      required:
        - id
        - ach_class
        - account_id
        - type
        - user
        - amount
        - iso_currency_code
        - description
        - created
        - status
        - network
        - cancellable
        - failure_reason
        - custom_tag
        - metadata
        - origination_account_id
        - direction
      title: BankTransfer
      type: object
    BankTransferAccessToken:
      description: The Plaid `access_token` for the account that will be debited or credited.
      type: string
    BankTransferBalance:
      additionalProperties: true
      properties:
        available:
          description: The total available balance - the sum of all successful debit transfer amounts minus all credit transfer amounts.
          type: string
        transactable:
          description: The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.
          type: string
      required:
        - available
        - transactable
      title: BankTransferBalance
      type: object
    BankTransferBalanceGetRequest:
      description: BankTransferBalanceGetRequest defines the request schema for `/bank_transfer/balance/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        origination_account_id:
          description: If multiple origination accounts are available, `origination_account_id` must be used to specify the account for which balance will be returned.
          nullable: true
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      title: BankTransferBalanceGetRequest
      type: object
    BankTransferBalanceGetResponse:
      additionalProperties: true
      description: BankTransferBalanceGetResponse defines the response schema for `/bank_transfer/balance/get`
      properties:
        balance:
          $ref: "#/components/schemas/BankTransferBalance"
        origination_account_id:
          description: The ID of the origination account that this balance belongs to.
          nullable: true
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - balance
        - origination_account_id
        - request_id
      title: BankTransferBalanceGetResponse
      type: object
    BankTransferCancelRequest:
      description: BankTransferCancelRequest defines the request schema for `/bank_transfer/cancel`
      properties:
        bank_transfer_id:
          $ref: "#/components/schemas/BankTransferID"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - bank_transfer_id
      title: BankTransferCancelRequest
      type: object
    BankTransferCancelResponse:
      additionalProperties: true
      description: BankTransferCancelResponse defines the response schema for `/bank_transfer/cancel`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: BankTransferCancelResponse
      type: object
    BankTransferCreateRequest:
      description: BankTransferCreateRequest defines the request schema for `/bank_transfer/create`
      properties:
        access_token:
          $ref: "#/components/schemas/BankTransferAccessToken"
        account_id:
          description: The Plaid `account_id` for the account that will be debited or credited.
          type: string
        ach_class:
          $ref: "#/components/schemas/ACHClass"
        amount:
          description: The transfer amount (decimal string with two digits of precision e.g. "10.00").
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        custom_tag:
          description: An arbitrary string provided by the client for storage with the bank transfer. Will be returned in all `BankTransfer` objects. May be up to 100 characters.
          maxLength: 100
          nullable: true
          type: string
        description:
          description: The transfer description. Maximum of 10 characters.
          maxLength: 10
          type: string
        idempotency_key:
          description: |-
            A random key provided by the client, per unique bank transfer. Maximum of 50 characters.

            The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
          maxLength: 50
          type: string
        iso_currency_code:
          description: The currency of the transfer amount – should be set to "USD".
          type: string
        metadata:
          $ref: "#/components/schemas/BankTransferMetadata"
        network:
          $ref: "#/components/schemas/BankTransferNetwork"
        origination_account_id:
          description: Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.
          nullable: true
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
        type:
          $ref: "#/components/schemas/BankTransferType"
        user:
          $ref: "#/components/schemas/BankTransferUser"
      required:
        - idempotency_key
        - access_token
        - account_id
        - type
        - network
        - amount
        - iso_currency_code
        - description
        - user
      title: BankTransferCreateRequest
      type: object
    BankTransferCreateResponse:
      additionalProperties: true
      description: BankTransferCreateResponse defines the response schema for `/bank_transfer/create`
      properties:
        bank_transfer:
          $ref: "#/components/schemas/BankTransfer"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfer
        - request_id
      title: BankTransferCreateResponse
      type: object
    BankTransferDirection:
      description: "Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account."
      enum:
        - outbound
        - inbound
        - null
      nullable: true
      title: BankTransferDirection
      type: string
    BankTransferEvent:
      additionalProperties: true
      description: Represents an event in the Bank Transfers API.
      properties:
        account_id:
          description: The account ID associated with the bank transfer.
          type: string
        bank_transfer_amount:
          description: The bank transfer amount.
          type: string
        bank_transfer_id:
          $ref: "#/components/schemas/BankTransferID"
        bank_transfer_iso_currency_code:
          description: The currency of the bank transfer amount.
          type: string
        bank_transfer_type:
          $ref: "#/components/schemas/BankTransferType"
        direction:
          $ref: "#/components/schemas/BankTransferDirection"
        event_id:
          description: Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
          minimum: 0
          type: integer
        event_type:
          $ref: "#/components/schemas/BankTransferEventType"
        failure_reason:
          $ref: "#/components/schemas/BankTransferFailure"
        origination_account_id:
          description: The ID of the origination account that this balance belongs to.
          nullable: true
          type: string
        receiver_details:
          $ref: "#/components/schemas/BankTransferReceiverDetails"
        timestamp:
          description: The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
          format: date-time
          type: string
      required:
        - event_id
        - timestamp
        - event_type
        - account_id
        - bank_transfer_id
        - origination_account_id
        - bank_transfer_type
        - bank_transfer_amount
        - bank_transfer_iso_currency_code
        - failure_reason
        - direction
        - receiver_details
      title: BankTransferEvent
      type: object
    BankTransferEventListRequest:
      description: BankTransferEventListRequest defines the request schema for `/bank_transfer/event/list`
      properties:
        account_id:
          description: The account ID to get events for all transactions to/from an account.
          nullable: true
          type: string
        bank_transfer_id:
          description: Plaid’s unique identifier for a bank transfer.
          nullable: true
          title: BankTransferID
          type: string
        bank_transfer_type:
          description: The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
          enum:
            - debit
            - credit
            - null
          nullable: true
          title: BankTransferType
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        count:
          default: 25
          description: The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
          maximum: 25
          minimum: 1
          nullable: true
          type: integer
        direction:
          description: |-
            Indicates the direction of the transfer: `outbound`: for API-initiated transfers
            `inbound`: for payments received by the FBO account.
          enum:
            - inbound
            - outbound
            - null
          nullable: true
          title: BankTransferDirection
          type: string
        end_date:
          description: The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          format: date-time
          nullable: true
          type: string
        event_types:
          description: Filter events by event type.
          items:
            $ref: "#/components/schemas/BankTransferEventType"
          type: array
        offset:
          default: 0
          description: The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
          minimum: 0
          nullable: true
          type: integer
        origination_account_id:
          description: The origination account ID to get events for transfers from a specific origination account.
          nullable: true
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
        start_date:
          description: The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          format: date-time
          nullable: true
          type: string
      title: BankTransferEventListRequest
      type: object
    BankTransferEventListResponse:
      additionalProperties: true
      description: BankTransferEventListResponse defines the response schema for `/bank_transfer/event/list`
      properties:
        bank_transfer_events:
          items:
            $ref: "#/components/schemas/BankTransferEvent"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfer_events
        - request_id
      title: BankTransferEventListResponse
      type: object
    BankTransferEventSyncRequest:
      description: BankTransferEventSyncRequest defines the request schema for `/bank_transfer/event/sync`
      properties:
        after_id:
          description: The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.
          minimum: 0
          type: integer
        client_id:
          $ref: "#/components/schemas/APIClientID"
        count:
          default: 25
          description: The maximum number of bank transfer events to return.
          maximum: 25
          minimum: 1
          nullable: true
          type: integer
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - after_id
      title: BankTransferEventSyncRequest
      type: object
    BankTransferEventSyncResponse:
      additionalProperties: true
      description: BankTransferEventSyncResponse defines the response schema for `/bank_transfer/event/sync`
      properties:
        bank_transfer_events:
          items:
            $ref: "#/components/schemas/BankTransferEvent"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfer_events
        - request_id
      title: BankTransferEventSyncResponse
      type: object
    BankTransferEventType:
      description: |-
        The type of event that this bank transfer represents.

        `pending`: A new transfer was created; it is in the pending state.

        `cancelled`: The transfer was cancelled by the client.

        `failed`: The transfer failed, no funds were moved.

        `posted`: The transfer has been successfully submitted to the payment network.

        `reversed`: A posted transfer was reversed.

        `receiver_pending`: The matching transfer was found as a pending transaction in the receiver's account

        `receiver_posted`: The matching transfer was found as a posted transaction in the receiver's account
      enum:
        - pending
        - cancelled
        - failed
        - posted
        - reversed
        - receiver_pending
        - receiver_posted
      title: BankTransferEventType
      type: string
    BankTransferFailure:
      additionalProperties: true
      description: The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
      nullable: true
      properties:
        ach_return_code:
          description: The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `reversed`. For a full listing of ACH return codes, see [Bank Transfers errors](https://plaid.com/docs/errors/bank-transfers/#ach-return-codes).
          nullable: true
          type: string
        description:
          description: A human-readable description of the reason for the failure or reversal.
          type: string
      title: BankTransferFailure
      type: object
    BankTransferGetRequest:
      description: BankTransferGetRequest defines the request schema for `/bank_transfer/get`
      properties:
        bank_transfer_id:
          $ref: "#/components/schemas/BankTransferID"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - bank_transfer_id
      title: BankTransferGetRequest
      type: object
    BankTransferGetResponse:
      additionalProperties: true
      description: BankTransferGetResponse defines the response schema for `/bank_transfer/get`
      properties:
        bank_transfer:
          $ref: "#/components/schemas/BankTransfer"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfer
        - request_id
      title: BankTransferGetResponse
      type: object
    BankTransferID:
      description: Plaid’s unique identifier for a bank transfer.
      title: BankTransferID
      type: string
    BankTransferListRequest:
      description: BankTransferListRequest defines the request schema for `/bank_transfer/list`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        count:
          default: 25
          description: The maximum number of bank transfers to return.
          maximum: 25
          minimum: 1
          type: integer
        direction:
          $ref: "#/components/schemas/BankTransferDirection"
        end_date:
          description: The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          format: date-time
          nullable: true
          type: string
        offset:
          default: 0
          description: The number of bank transfers to skip before returning results.
          minimum: 0
          type: integer
        origination_account_id:
          description: Filter bank transfers to only those originated through the specified origination account.
          nullable: true
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
        start_date:
          description: The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          format: date-time
          nullable: true
          type: string
      title: BankTransferListRequest
      type: object
    BankTransferListResponse:
      additionalProperties: true
      description: BankTransferListResponse defines the response schema for `/bank_transfer/list`
      properties:
        bank_transfers:
          items:
            $ref: "#/components/schemas/BankTransfer"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfers
        - request_id
      title: BankTransferListResponse
      type: object
    BankTransferMetadata:
      additionalProperties:
        type: string
      description: |
        The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
        - The JSON values must be Strings (no nested JSON objects allowed)
        - Only ASCII characters may be used
        - Maximum of 50 key/value pairs
        - Maximum key length of 40 characters
        - Maximum value length of 500 characters
      maxProperties: 50
      nullable: true
      title: BankTransferMetadata
      type: object
    BankTransferMigrateAccountRequest:
      description: BankTransferMigrateAccountRequest defines the request schema for `/bank_transfer/migrate_account`
      properties:
        account_number:
          description: The user's account number.
          type: string
        account_type:
          description: The type of the bank account (`checking` or `savings`).
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        routing_number:
          description: The user's routing number.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - account_number
        - routing_number
        - account_type
      title: BankTransferMigrateAccountRequest
      type: object
    BankTransferMigrateAccountResponse:
      additionalProperties: true
      description: BankTransferMigrateAccountResponse defines the response schema for `/bank_transfer/migrate_account`
      properties:
        access_token:
          description: The Plaid `access_token` for the newly created Item.
          type: string
        account_id:
          description: The Plaid `account_id` for the newly created Item.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - access_token
        - account_id
        - request_id
      title: BankTransferMigrateAccountResponse
      type: object
    BankTransferNetwork:
      description: The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.
      enum:
        - ach
        - same-day-ach
        - wire
      title: BankTransferNetwork
      type: string
    BankTransferReceiverDetails:
      additionalProperties: true
      description: The receiver details if the type of this event is `reciever_pending` or `reciever_posted`. Null value otherwise.
      nullable: true
      properties:
        available_balance:
          description: The sign of the available balance for the receiver bank account associated with the receiver event at the time the matching transaction was found. Can be `positive`, `negative`, or null if the balance was not available at the time.
          enum:
            - positive
            - negative
            - null
          nullable: true
          type: string
      required:
        - available_balance
      title: BankTransferReceiverDetails
      type: object
    BankTransferStatus:
      description: The status of the transfer.
      enum:
        - pending
        - posted
        - cancelled
        - failed
        - reversed
      title: BankTransferStatus
      type: string
    BankTransferType:
      description: The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
      enum:
        - debit
        - credit
      title: BankTransferType
      type: string
    BankTransferUser:
      additionalProperties: true
      description: The legal name and other information for the account holder.
      properties:
        email_address:
          description: The account holder’s email.
          nullable: true
          type: string
        legal_name:
          description: The account holder’s full legal name. If the transfer description is `ccd`, this should be the business name of the account holder.
          type: string
        routing_number:
          description: The account holder's routing number. This field is only used for response data. Do not provide this field when making requests.
          readOnly: true
          type: string
      required:
        - legal_name
      title: BankTransferUser
      type: object
    BankTransfersEventsUpdateWebhook:
      additionalProperties: true
      description: Fired when new bank transfer events are available. Receiving this webhook indicates you should fetch the new events from `/bank_transfer/event/sync`.
      properties:
        webhook_code:
          description: "`BANK_TRANSFERS_EVENTS_UPDATE`"
          type: string
        webhook_type:
          description: "`BANK_TRANSFERS`"
          type: string
      required:
        - webhook_type
        - webhook_code
      title: BankTransfersEventsUpdateWebhook
      type: object
      x-examples:
        example-1:
          webhook_code: BANK_TRANSFERS_EVENTS_UPDATE
          webhook_type: BANK_TRANSFERS
    CategoriesGetRequest:
      description: CategoriesGetRequest defines the request schema for `/categories/get`
      type: object
    CategoriesGetResponse:
      additionalProperties: true
      description: CategoriesGetResponse defines the response schema for `/categories/get`
      properties:
        categories:
          description: An array of all of the transaction categories used by Plaid.
          items:
            $ref: "#/components/schemas/Category"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - categories
        - request_id
      type: object
    Category:
      additionalProperties: true
      description: Information describing a transaction category
      properties:
        category_id:
          description: An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
          type: string
        group:
          description: "`place` for physical transactions or `special` for other transactions such as bank charges."
          type: string
        hierarchy:
          description: A hierarchical array of the categories to which this `category_id` belongs.
          items:
            type: string
          type: array
      required:
        - category_id
        - group
        - hierarchy
      title: Category
      type: object
    Cause:
      additionalProperties: true
      description: An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
      required:
        - item_id
        - error
      title: Cause
      type: object
    ConnectedApplication:
      description: Describes the connected application for a particular end user.
      properties:
        application_id:
          $ref: "#/components/schemas/ApplicationID"
        application_url:
          description: The URL for the application's website
          nullable: true
          type: string
        created_at:
          description: The date this application was linked in ISO8601 (YYYY-MM-DD) format in UTC.
          type: string
        logo:
          deprecated: true
          description: A URL that links to the application logo image (will be deprecated in the future, please use logo_url).
          nullable: true
          type: string
        logo_url:
          description: A URL that links to the application logo image.
          nullable: true
          type: string
        name:
          description: The name of the application
          type: string
        product_data_types:
          description: (Deprecated) A list of enums representing the data collected and products enabled for this connected application.
          items:
            enum:
              - ACCOUNT_BALANCE
              - ACCOUNT_USER_INFO
              - ACCOUNT_TRANSACTIONS
            type: string
          type: array
        reason_for_access:
          description: A string provided by the connected app stating why they use their respective enabled products.
          nullable: true
          type: string
        requested_scopes:
          $ref: "#/components/schemas/RequestedScopes"
        scopes:
          $ref: "#/components/schemas/ScopesNullable"
      required:
        - application_id
        - name
        - created_at
        - logo
        - logo_url
        - application_url
        - reason_for_access
        - product_data_types
      type: object
    CountryCode:
      description: ISO-3166-1 alpha-2 country code standard.
      enum:
        - US
        - GB
        - ES
        - NL
        - FR
        - IE
        - CA
      title: CountryCode
      type: string
    CreditAccount:
      description: "A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities."
      properties:
        credit card:
          description: Bank-issued credit card
          type: string
        paypal:
          description: PayPal-issued credit card
          type: string
      required:
        - credit card
        - paypal
      title: CreditAccount
      type: string
    CreditCardLiability:
      additionalProperties: true
      description: An object representing a credit card account.
      properties:
        account_id:
          description: The ID of the account that this liability belongs to.
          nullable: true
          type: string
        aprs:
          description: The various interest rates that apply to the account.
          items:
            $ref: "#/components/schemas/APR"
          type: array
        is_overdue:
          description: true if a payment is currently overdue. Availability for this field is limited.
          nullable: true
          type: boolean
        last_payment_amount:
          description: The amount of the last payment.
          type: number
        last_payment_date:
          description: The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD). Availability for this field is limited.
          format: date
          type: string
        last_statement_issue_date:
          description: The date of the last statement. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          type: string
        minimum_payment_amount:
          description: The minimum payment due for the next billing cycle.
          type: number
        next_payment_due_date:
          description: The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
      required:
        - account_id
        - aprs
        - is_overdue
        - last_payment_amount
        - last_payment_date
        - last_statement_issue_date
        - minimum_payment_amount
        - next_payment_due_date
      title: CreditCardLiability
      type: object
    CreditFilter:
      additionalProperties: true
      description: A filter to apply to `credit`-type accounts
      properties:
        account_subtypes:
          $ref: "#/components/schemas/AccountSubtypes"
      required:
        - account_subtypes
      title: CreditFilter
      type: object
    CustomerInitiatedReturnRisk:
      description: 'The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: “R05”, "R07", "R10", "R11", "R29". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.'
      properties:
        risk_tier:
          $ref: "#/components/schemas/CustomerInitiatedRiskTier"
        score:
          $ref: "#/components/schemas/SignalScore"
      required:
        - risk_tier
        - score
      title: CustomerInitiatedReturnRisk
      type: object
    CustomerInitiatedRiskTier:
      description: |
        A tier corresponding to the projected likelihood that the transaction, if initiated, will be subject to a return.

        In the `customer_initiated_return_risk` object, there are five risk tiers corresponding to the scores:
          1: Predicted customer-initiated return incidence rate between 0.00% - 0.02%
          2: Predicted customer-initiated return incidence rate between 0.02% - 0.05%
          3: Predicted customer-initiated return incidence rate between 0.05% - 0.1%
          4: Predicted customer-initiated return incidence rate between 0.1% - 0.5%
          5: Predicted customer-initiated return incidence rate greater than 0.5%
      maximum: 5
      minimum: 1
      type: integer
    DefaultUpdateWebhook:
      additionalProperties: true
      description: |
        Fired when new transaction data is available for an Item. Plaid will typically check for new transaction data several times a day.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          description: The `item_id` of the Item the webhook relates to.
          type: string
        new_transactions:
          description: The number of new transactions detected since the last time this webhook was fired.
          title: DefaultUpdateWebhook
          type: number
        webhook_code:
          description: "`DEFAULT_UPDATE`"
          type: string
        webhook_type:
          description: "`TRANSACTIONS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - new_transactions
        - item_id
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_transactions: 3
          webhook_code: DEFAULT_UPDATE
          webhook_type: TRANSACTIONS
    DepositSwitchAddressData:
      additionalProperties: true
      description: The user's address.
      properties:
        city:
          description: The full city name
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code
          type: string
        postal_code:
          description: The postal code
          type: string
        region:
          description: |-
            The region or state
            Example: `"NC"`
          type: string
        street:
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
          type: string
      required:
        - street
        - city
        - region
        - postal_code
        - country
      title: DepositSwitchAddressData
      type: object
    DepositSwitchAltCreateRequest:
      description: DepositSwitchAltCreateRequest defines the request schema for `/deposit_switch/alt/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        country_code:
          description: ISO-3166-1 alpha-2 country code standard.
          enum:
            - US
            - CA
          nullable: true
          title: CountryCode
          type: string
        options:
          $ref: "#/components/schemas/DepositSwitchCreateRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
        target_account:
          $ref: "#/components/schemas/DepositSwitchTargetAccount"
        target_user:
          $ref: "#/components/schemas/DepositSwitchTargetUser"
      required:
        - target_account
        - target_user
      title: DepositSwitchAltCreateRequest
      type: object
    DepositSwitchAltCreateResponse:
      additionalProperties: true
      description: DepositSwitchAltCreateResponse defines the response schema for `/deposit_switch/alt/create`
      properties:
        deposit_switch_id:
          description: ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - deposit_switch_id
        - request_id
      title: DepositSwitchAltCreateResponse
      type: object
    DepositSwitchCreateRequest:
      description: DepositSwitchCreateRequest defines the request schema for `/deposit_switch/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        country_code:
          description: ISO-3166-1 alpha-2 country code standard.
          enum:
            - US
            - CA
          nullable: true
          title: CountryCode
          type: string
        options:
          $ref: "#/components/schemas/DepositSwitchCreateRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
        target_access_token:
          description: "Access token for the target Item, typically provided in the Import Item response. "
          type: string
        target_account_id:
          description: Plaid Account ID that specifies the target bank account. This account will become the recipient for a user's direct deposit.
          type: string
      required:
        - target_access_token
        - target_account_id
      type: object
    DepositSwitchCreateRequestOptions:
      description: Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
      properties:
        transaction_item_access_tokens:
          description: An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.
          items:
            $ref: "#/components/schemas/AccessToken"
          maxItems: 99
          minItems: 1
          type: array
        webhook:
          description: |
            The URL registered to receive webhooks when the status of a deposit switch request has changed.
          nullable: true
          type: string
      title: DepositSwitchCreateRequestOptions
      type: object
      x-private-visibility: false
    DepositSwitchCreateResponse:
      additionalProperties: true
      description: DepositSwitchCreateResponse defines the response schema for `/deposit_switch/create`
      properties:
        deposit_switch_id:
          description: ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - deposit_switch_id
        - request_id
      type: object
    DepositSwitchGetRequest:
      description: DepositSwitchGetRequest defines the request schema for `/deposit_switch/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        deposit_switch_id:
          description: The ID of the deposit switch
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - deposit_switch_id
      title: DepositSwitchGetRequest
      type: object
      x-examples: {}
    DepositSwitchGetResponse:
      additionalProperties: true
      description: DepositSwitchGetResponse defines the response schema for `/deposit_switch/get`
      properties:
        account_has_multiple_allocations:
          description: When `true`, user’s direct deposit goes to multiple banks. When false, user’s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.
          nullable: true
          type: boolean
        amount_allocated:
          description: The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.
          nullable: true
          type: number
        date_completed:
          description: ISO8601 date the deposit switch was completed. Always `null` if the deposit switch has not been completed.
          format: date
          nullable: true
          type: string
        date_created:
          description: ISO8601 date the deposit switch was created.
          format: date
          type: string
        deposit_switch_id:
          description: The ID of the deposit switch.
          type: string
        employer_id:
          description: The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
          nullable: true
          type: string
        employer_name:
          description: The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
          nullable: true
          type: string
        institution_id:
          description: The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
          nullable: true
          type: string
        institution_name:
          description: The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
          nullable: true
          type: string
        is_allocated_remainder:
          description: When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, user’s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.
          nullable: true
          type: boolean
        percent_allocated:
          description: The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.
          nullable: true
          type: number
        request_id:
          $ref: "#/components/schemas/RequestID"
        state:
          description: |-
            
            The state, or status, of the deposit switch.

            - `initialized` – The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

            - `processing` – The deposit switch request has been submitted and is being processed.

            - `completed` – The user's employer has fulfilled the deposit switch request.

            - `error` – There was an error processing the deposit switch request.
          enum:
            - initialized
            - processing
            - completed
            - error
          type: string
        switch_method:
          description: |-
            The method used to make the deposit switch.

            - `instant` – User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.

            - `mail` – User requested that Plaid contact their employer by mail to make the direct deposit switch.

            - `pdf` – User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.'
          enum:
            - instant
            - mail
            - pdf
            - null
          nullable: true
          type: string
        target_account_id:
          description: The ID of the bank account the direct deposit was switched to.
          nullable: true
          type: string
        target_item_id:
          description: The ID of the Item the direct deposit was switched to.
          nullable: true
          type: string
      required:
        - deposit_switch_id
        - target_account_id
        - target_item_id
        - state
        - account_has_multiple_allocations
        - is_allocated_remainder
        - percent_allocated
        - amount_allocated
        - date_created
        - date_completed
        - request_id
      title: DepositSwitchGetResponse
      type: object
    DepositSwitchStateUpdateWebhook:
      description: Fired when the status of a deposit switch request has changed.
      properties:
        deposit_switch_id:
          description: The ID of the deposit switch.
          type: string
        state:
          description: |-
            
            The state, or status, of the deposit switch.

            `initialized`: The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

            `processing`: The deposit switch request has been submitted and is being processed.

            `completed`: The user's employer has fulfilled and completed the deposit switch request.

            `error`: There was an error processing the deposit switch request.

            For more information, see the [Deposit Switch API reference](/docs/api/products#deposit_switchget).
          type: string
        webhook_code:
          description: '`"SWITCH_STATE_UPDATE"`'
          type: string
        webhook_type:
          description: '`"DEPOSIT_SWITCH"`'
          type: string
      title: DepositSwitchStateUpdateWebhook
      type: object
      x-examples:
        example-1:
          deposit_switch_id: f6f5132f-853b-421c-8c41-d24f93ebc39f
          state: completed
          webhook_code: SWITCH_STATE_UPDATE
          webhook_type: DEPOSIT_SWITCH
    DepositSwitchTargetAccount:
      additionalProperties: true
      properties:
        account_name:
          description: The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking.
          type: string
        account_number:
          description: Account number for deposit switch destination
          type: string
        account_subtype:
          description: The account subtype of the account, either `checking` or `savings`.
          enum:
            - checking
            - savings
          type: string
        routing_number:
          description: Routing number for deposit switch destination
          type: string
      required:
        - account_number
        - routing_number
        - account_name
        - account_subtype
      title: DepositSwitchTargetAccount
      type: object
    DepositSwitchTargetUser:
      additionalProperties: true
      properties:
        address:
          $ref: "#/components/schemas/DepositSwitchAddressData"
        email:
          description: The email address of the user.
          type: string
        family_name:
          description: The family name (last name) of the user.
          type: string
        given_name:
          description: The given name (first name) of the user.
          type: string
        phone:
          description: The phone number of the user. The endpoint can accept a variety of phone number formats, including E.164.
          type: string
        tax_payer_id:
          description: The taxpayer ID of the user, generally their SSN, EIN, or TIN.
          type: string
      required:
        - given_name
        - family_name
        - phone
        - email
      title: DepositSwitchTargetUser
      type: object
    DepositSwitchTokenCreateRequest:
      description: DepositSwitchTokenCreateRequest defines the request schema for `/deposit_switch/token/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        deposit_switch_id:
          description: The ID of the deposit switch
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - deposit_switch_id
      type: object
    DepositSwitchTokenCreateResponse:
      additionalProperties: true
      description: DepositSwitchTokenCreateResponse defines the response schema for `/deposit_switch/token/create`
      properties:
        deposit_switch_token:
          description: Deposit switch token, used to initialize Link for the Deposit Switch product
          type: string
        deposit_switch_token_expiration_time:
          description: Expiration time of the token, in ISO 8601 format
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - deposit_switch_token
        - deposit_switch_token_expiration_time
        - request_id
      type: object
    DepositoryAccount:
      description: "An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth, Balance, Transactions, Identity, Payment Initiation, and Assets."
      properties:
        cash management:
          description: A cash management account, typically a cash account at a brokerage
          type: string
        cd:
          description: Certificate of deposit account
          type: string
        checking:
          description: Checking account
          type: string
        ebt:
          description: An Electronic Benefit Transfer (EBT) account, used by certain public assistance programs to distribute funds (US only)
          type: string
        hsa:
          description: Health Savings Account (US only) that can only hold cash
          type: string
        money market:
          description: Money market account
          type: string
        paypal:
          description: PayPal depository account
          type: string
        prepaid:
          description: Prepaid debit card
          type: string
        savings:
          description: Savings account
          type: string
      required:
        - checking
        - savings
        - hsa
        - cd
        - money market
        - paypal
        - prepaid
        - cash management
        - ebt
      title: DepositoryAccount
      type: string
    DepositoryFilter:
      additionalProperties: true
      description: A filter to apply to `depository`-type accounts
      properties:
        account_subtypes:
          $ref: "#/components/schemas/AccountSubtypes"
      required:
        - account_subtypes
      title: DepositoryFilter
      type: object
    Email:
      additionalProperties: true
      description: An object representing an email address
      properties:
        data:
          description: The email address.
          type: string
        primary:
          description: When `true`, identifies the email address as the primary email on an account.
          type: boolean
        type:
          description: The type of email account as described by the financial institution.
          enum:
            - primary
            - secondary
            - other
          type: string
      required:
        - data
        - primary
        - type
      title: Email
      type: object
    Employee:
      additionalProperties: true
      description: Data about the employee.
      properties:
        address:
          $ref: "#/components/schemas/AddressDataNullable"
        name:
          description: The name of the employee.
          nullable: true
          type: string
      required:
        - name
        - address
      title: Employee
      type: object
    EmployeeIncomeSummaryFieldString:
      allOf:
        - $ref: "#/components/schemas/IncomeSummaryFieldString"
        - additionalProperties: true
          description: The name of the employee, as reported on the paystub.
          type: object
    Employer:
      additionalProperties: true
      description: Data about the employer.
      properties:
        address:
          $ref: "#/components/schemas/AddressDataNullable"
        confidence_score:
          description: A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).
          type: number
        employer_id:
          description: Plaid's unique identifier for the employer.
          type: string
        name:
          description: The name of the employer
          type: string
      required:
        - employer_id
        - name
        - address
        - confidence_score
      title: Employer
      type: object
    EmployerIncomeSummaryFieldString:
      allOf:
        - $ref: "#/components/schemas/IncomeSummaryFieldString"
        - additionalProperties: true
          description: The name of the employer, as reported on the paystub.
          type: object
    EmployersSearchRequest:
      description: EmployersSearchRequest defines the request schema for `/employers/search`.
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        products:
          description: The Plaid products the returned employers should support. Currently, this field must be set to `"deposit_switch"`.
          items:
            type: string
          type: array
        query:
          description: The employer name to be searched for.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - query
        - products
      title: EmployersSearchRequest
      type: object
    EmployersSearchResponse:
      additionalProperties: true
      description: EmployersSearchResponse defines the response schema for `/employers/search`.
      properties:
        employers:
          description: A list of employers matching the search criteria.
          items:
            $ref: "#/components/schemas/Employer"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - employers
        - request_id
      title: EmployersSearchResponse
      type: object
    Error:
      additionalProperties: true
      description: We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred.
      nullable: true
      properties:
        causes:
          description: |-
            In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.

            `causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`.
          items: {}
          type: array
        display_message:
          description: |-
            A user-friendly representation of the error code. `null` if the error is not related to user action.

            This may change over time and is not safe for programmatic use.
          nullable: true
          type: string
        documentation_url:
          description: The URL of a Plaid documentation page with more information about the error
          type: string
        error_code:
          description: The particular error code. Safe for programmatic use.
          type: string
        error_message:
          description: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
          type: string
        error_type:
          description: A broad categorization of the error. Safe for programatic use.
          enum:
            - INVALID_REQUEST
            - INVALID_RESULT
            - INVALID_INPUT
            - INSTITUTION_ERROR
            - RATE_LIMIT_EXCEEDED
            - API_ERROR
            - ITEM_ERROR
            - ASSET_REPORT_ERROR
            - RECAPTCHA_ERROR
            - OAUTH_ERROR
            - PAYMENT_ERROR
            - BANK_TRANSFER_ERROR
          type: string
        request_id:
          description: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.
          type: string
        status:
          description: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.
          nullable: true
          type: number
        suggested_action:
          description: Suggested steps for resolving the error
          type: string
      required:
        - error_type
        - error_code
        - error_message
        - display_message
      title: Error
      type: object
    ExternalPaymentOptions:
      additionalProperties: true
      description: Additional payment options
      nullable: true
      properties:
        bacs:
          $ref: "#/components/schemas/PaymentInitiationOptionalRestrictionBacs"
        emi_account_id:
          description: The EMI (E-Money Institution) account that this payment is associated with, if any. This EMI account is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
          minLength: 1
          nullable: true
          type: string
        iban:
          description: The International Bank Account Number (IBAN) for the payer's account. If provided, the end user will be able to send payments only from the specified bank account.
          maxLength: 34
          minLength: 15
          nullable: true
          type: string
        request_refund_details:
          description: When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.
          nullable: true
          type: boolean
      title: PaymentOptions
      type: object
    ExternalPaymentRefundDetails:
      nullable: true
      properties:
        bacs:
          $ref: "#/components/schemas/RecipientBACSNullable"
        iban:
          description: The International Bank Account Number (IBAN) for the account.
          nullable: true
          type: string
        name:
          description: The name of the account holder.
          type: string
      required:
        - name
        - iban
        - bacs
      title: ExternalPaymentRefundDetails
      type: object
    ExternalPaymentScheduleBase:
      additionalProperties: true
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      nullable: true
      properties:
        adjusted_start_date:
          description: The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in ISO 8601 format (YYYY-MM-DD). If the start date did not require adjustment, this field will be `null`.
          format: date
          nullable: true
          type: string
        end_date:
          description: |-
            A date in ISO 8601 format (YYYY-MM-DD). Standing order payments will end on the last `interval_execution_day` on or before the `end_date`.
            If the only `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.
          format: date
          nullable: true
          type: string
        interval:
          $ref: "#/components/schemas/PaymentScheduleInterval"
        interval_execution_day:
          description: |-
            The day of the interval on which to schedule the payment.

            If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).

            If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.
          type: integer
        start_date:
          description: |-
            A date in ISO 8601 format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.

            If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.
          format: date
          type: string
      title: ExternalPaymentScheduleBase
      type: object
    ExternalPaymentScheduleGet:
      allOf:
        - $ref: "#/components/schemas/ExternalPaymentScheduleBase"
        - type: object
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      nullable: true
      required:
        - adjusted_start_date
        - end_date
        - interval
        - interval_execution_day
        - start_date
      title: ExternalPaymentScheduleGet
    ExternalPaymentScheduleRequest:
      additionalProperties: true
      allOf:
        - $ref: "#/components/schemas/ExternalPaymentScheduleBase"
        - type: object
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      required:
        - start_date
        - interval
        - interval_execution_day
      title: ExternalPaymentScheduleRequest
    HealthIncident:
      additionalProperties: true
      properties:
        end_date:
          description: The end date of the incident, in ISO 8601 format, e.g. `"2020-10-30T15:26:48Z"`.
          format: date-time
          type: string
        incident_updates:
          description: Updates on the health incident.
          items:
            $ref: "#/components/schemas/IncidentUpdate"
          type: array
        start_date:
          description: The start date of the incident, in ISO 8601 format, e.g. `"2020-10-30T15:26:48Z"`.
          format: date-time
          type: string
        title:
          description: The title of the incident
          type: string
      required:
        - start_date
        - title
        - incident_updates
      title: HealthIncident
      type: object
    HistoricalBalance:
      additionalProperties: true
      description: An object representing a balance held by an account in the past
      properties:
        current:
          description: |-
            The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.

            If the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting.
          type: number
        date:
          description: The date of the calculated historical balance, in an ISO 8601 format (YYYY-MM-DD)
          format: date
          type: string
        iso_currency_code:
          description: The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
          type: string
        unofficial_currency_code:
          description: |-
            The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
          type: string
      required:
        - date
        - current
        - iso_currency_code
        - unofficial_currency_code
      title: HistoricalBalance
      type: object
    HistoricalUpdateWebhook:
      additionalProperties: true
      description: Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        new_transactions:
          description: The number of new, unfetched transactions available
          type: number
        webhook_code:
          description: "`HISTORICAL_UPDATE`"
          type: string
        webhook_type:
          description: "`TRANSACTIONS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - new_transactions
        - item_id
      title: HistoricalUpdateWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_transactions: 231
          webhook_code: HISTORICAL_UPDATE
          webhook_type: TRANSACTIONS
    Holding:
      additionalProperties: true
      description: A securities holding at an institution.
      properties:
        account_id:
          description: The Plaid `account_id` associated with the holding.
          type: string
        cost_basis:
          description: The cost basis of the holding.
          nullable: true
          type: number
        institution_price:
          description: The last price given by the institution for this security.
          type: number
        institution_price_as_of:
          description: The date at which `institution_price` was current.
          format: date
          nullable: true
          type: string
        institution_value:
          description: The value of the holding, as reported by the institution.
          type: number
        iso_currency_code:
          description: The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
          type: string
        quantity:
          description: The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.
          type: number
        security_id:
          description: The Plaid `security_id` associated with the holding.
          type: string
        unofficial_currency_code:
          description: |
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
          type: string
      required:
        - account_id
        - security_id
        - institution_price
        - institution_price_as_of
        - institution_value
        - cost_basis
        - quantity
        - iso_currency_code
        - unofficial_currency_code
      title: Holding
      type: object
    HoldingsDefaultUpdateWebhook:
      additionalProperties: true
      description: Fired when new or updated holdings have been detected on an investment account. The webhook typically fires once per day, after market close, in response to any newly added holdings or price changes to existing holdings.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        new_holdings:
          description: The number of new holdings reported since the last time this webhook was fired.
          type: number
        updated_holdings:
          description: The number of updated holdings reported since the last time this webhook was fired.
          type: number
        webhook_code:
          description: "`DEFAULT_UPDATE`"
          type: string
        webhook_type:
          description: "`HOLDINGS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - new_holdings
        - updated_holdings
      title: HoldingsDefaultUpdateWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_holdings: 19
          updated_holdings: 0
          webhook_code: DEFAULT_UPDATE
          webhook_type: HOLDINGS
    IdentityGetRequest:
      description: IdentityGetRequest defines the request schema for `/identity/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/IdentityGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    IdentityGetRequestOptions:
      description: An optional object to filter `/identity/get` results.
      properties:
        account_ids:
          description: |-
            A list of `account_ids` to retrieve for the Item.
            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
          type: array
      type: object
    IdentityGetResponse:
      additionalProperties: true
      description: IdentityGetResponse defines the response schema for `/identity/get`
      properties:
        accounts:
          description: The accounts for which Identity data has been requested
          items:
            $ref: "#/components/schemas/AccountIdentity"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - accounts
        - item
        - request_id
      type: object
    IncidentUpdate:
      additionalProperties: true
      properties:
        description:
          description: The content of the update.
          type: string
        status:
          description: The status of the incident.
          enum:
            - INVESTIGATING
            - IDENTIFIED
            - SCHEDULED
            - RESOLVED
            - UNKNOWN
          type: string
        updated_date:
          description: The date when the update was published, in ISO 8601 format, e.g. `"2020-10-30T15:26:48Z"`.
          format: date-time
          type: string
      title: IncidentUpdate
      type: object
    IncomeBreakdown:
      additionalProperties: true
      properties:
        hours:
          description: The number of hours logged for this income for this pay period.
          nullable: true
          type: number
        rate:
          description: The hourly rate at which the income is paid.
          nullable: true
          type: number
        total:
          description: The total pay for this pay period.
          nullable: true
          type: number
        type:
          description: |-
            The type of income. Possible values include:
              `"regular"`: regular income
              `"overtime"`: overtime income
               `"bonus"`: bonus income
          enum:
            - bonus
            - overtime
            - regular
            - null
          nullable: true
          type: string
      required:
        - type
        - rate
        - hours
        - total
      title: IncomeBreakdown
      type: object
    IncomeSummary:
      additionalProperties: true
      description: The verified fields from a paystub verification. All fields are provided as reported on the paystub.
      properties:
        employee_name:
          $ref: "#/components/schemas/EmployeeIncomeSummaryFieldString"
        employer_name:
          $ref: "#/components/schemas/EmployerIncomeSummaryFieldString"
        pay_frequency:
          $ref: "#/components/schemas/PayFrequency"
        projected_wage:
          $ref: "#/components/schemas/ProjectedIncomeSummaryFieldNumber"
        verified_transaction:
          $ref: "#/components/schemas/TransactionData"
        ytd_gross_income:
          $ref: "#/components/schemas/YTDGrossIncomeSummaryFieldNumber"
        ytd_net_income:
          $ref: "#/components/schemas/YTDNetIncomeSummaryFieldNumber"
      required:
        - employer_name
        - employee_name
        - ytd_gross_income
        - ytd_net_income
        - pay_frequency
        - projected_wage
        - verified_transaction
      title: IncomeSummary
      type: object
    IncomeSummaryFieldNumber:
      additionalProperties: true
      nullable: true
      properties:
        value:
          description: The value of the field.
          type: number
        verification_status:
          $ref: "#/components/schemas/VerificationStatus"
      required:
        - value
        - verification_status
      title: IncomeSummaryFieldNumber
      type: object
    IncomeSummaryFieldString:
      additionalProperties: true
      nullable: true
      properties:
        value:
          description: The value of the field.
          type: string
        verification_status:
          $ref: "#/components/schemas/VerificationStatus"
      required:
        - value
        - verification_status
      title: IncomeSummaryFieldString
      type: object
    IncomeVerificationCreateRequest:
      description: IncomeVerificationCreateRequest defines the request schema for `/income/verification/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
        webhook:
          description: The URL endpoint to which Plaid should send webhooks related to the progress of the income verification process.
          type: string
      required:
        - webhook
      title: IncomeVerificationCreateRequest
      type: object
    IncomeVerificationCreateResponse:
      additionalProperties: true
      description: IncomeVerificationCreateResponse defines the response schema for `/income/verification/create`.
      properties:
        income_verification_id:
          description: ID of the verification. This ID is persisted throughout the lifetime of the verification.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - income_verification_id
        - request_id
      title: IncomeVerificationCreateResponse
      type: object
    IncomeVerificationDocumentsDownloadRequest:
      description: IncomeVerificationDocumentsDownloadRequest defines the request schema for `/income/verification/documents/download`.
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        income_verification_id:
          description: The ID of the verification.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - income_verification_id
      title: IncomeVerificationDocumentsDownloadRequest
      type: object
    IncomeVerificationDocumentsDownloadResponse:
      additionalProperties: true
      description: IncomeVerificationDocumentsDownloadResponse defines the response schema for `/income/verification/documents/download`.
      properties:
        id:
          type: string
      required:
        - id
      title: IncomeVerificationDocumentsDownloadResponse
      type: object
    IncomeVerificationPaystubsGetRequest:
      description: IncomeVerificationPaystubsGetRequest defines the request schema for `/income/verification/paystubs/get`.
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        income_verification_id:
          description: The ID of the verification for which to get paystub information.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - income_verification_id
      title: IncomeVerificationPaystubsGetRequest
      type: object
    IncomeVerificationPaystubsGetResponse:
      additionalProperties: true
      description: IncomeVerificationPaystubsGetResponse defines the response schema for `/income/verification/paystubs/get`.
      properties:
        paystubs:
          items:
            $ref: "#/components/schemas/Paystub"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - paystubs
        - request_id
      title: IncomeVerificationPaystubsGetResponse
      type: object
    IncomeVerificationRefreshRequest:
      description: IncomeVerificationRefreshRequest defines the request schema for `/income/verification/refresh`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        income_verification_id:
          description: The ID of the verification.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - income_verification_id
      type: object
    IncomeVerificationRefreshResponse:
      description: IncomeVerificationRequestResponse defines the response schema for `/income/verification/refresh`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
        verification_refresh_status:
          $ref: "#/components/schemas/VerificationRefreshStatus"
      required:
        - request_id
        - verification_refresh_status
      type: object
    IncomeVerificationStatusWebhook:
      additionalProperties: true
      description: Fired when the status of an income verification instance has changed. It will typically take several minutes for this webhook to fire after the end user has uploaded their documents in the Document Income flow.
      properties:
        income_verification_id:
          description: The `income_verification_id` of the verification instance whose status is being reported.
          type: string
        verification_status:
          description: |-
            `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed.

            `VERIFICATION_STATUS_UPLOAD_ERROR`: An upload error occurred when the end user attempted to upload their verification documentation.

            `VERIFICATION_STATUS_INVALID_TYPE`: The end user attempted to upload verification documentation in an unsupported file format.

            `VERIFICATION_STATUS_DOCUMENT_REJECTED`: The documentation uploaded by the end user was recognized as a supported file format, but not recognized as a valid paystub.

            `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
          type: string
        webhook_code:
          description: "`income_verification`"
          type: string
        webhook_type:
          description: '`"INCOME"`'
          type: string
      required:
        - webhook_type
        - webhook_code
        - income_verification_id
        - verification_status
      title: IncomeVerificationStatusWebhook
      type: object
      x-examples:
        example-1:
          income_verification_id: f6f5132f-853b-421c-8c41-d24f93ebc39f
          verification_status: VERIFICATION_STATUS_PROCESSING_COMPLETE
          webhook_code: income_verification
          webhook_type: INCOME
    IncomeVerificationSummaryGetRequest:
      description: IncomeVerificationSummaryGetRequest defines the request schema for `/income/verification/summary/get`.
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        income_verification_id:
          description: The ID of the verification.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - income_verification_id
      title: IncomeVerificationSummaryGetRequest
      type: object
    IncomeVerificationSummaryGetResponse:
      additionalProperties: true
      description: IncomeVerificationSummaryGetResponse defines the response schema for `/income/verification/summary/get`.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        income_summaries:
          description: A list of income summaries.
          items:
            $ref: "#/components/schemas/IncomeSummary"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - income_summaries
        - request_id
      title: IncomeVerificationSummaryGetResponse
      type: object
    IncomeVerificationWebhookStatus:
      additionalProperties: true
      properties:
        id:
          type: string
      required:
        - id
      title: IncomeVerificationWebhookStatus
      type: object
    InflowModel:
      additionalProperties: true
      description: The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.
      properties:
        income_amount:
          description: Amount of income per month. This value is required if `type` is `monthly-income`.
          type: number
        payment_day_of_month:
          description: Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the income transaction will appear. The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
          type: number
        statement_day_of_month:
          description: Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the balance is calculated for the next payment. The name of the income transaction. This field is required if `type` is `monthly-balance-payment` or `monthly-interest-only-payment`.
          type: string
        transaction_name:
          description: The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
          type: string
        type:
          description: |-
            Inflow model. One of the following:

            `none`: No income
            `monthly-income`: Income occurs once per month `monthly-balance-payment`: Pays off the balance on a liability account at the given statement day of month
            `monthly-interest-only-payment`: Makes an interest-only payment on a liability account at the given statement day of month. Note that account types supported by Liabilities will accrue interest in the Sandbox. The types are account type `credit` with subtype `credit` or `paypal`, and account type `loan` with subtype `student` or `mortgage`.
          type: string
      required:
        - type
        - income_amount
        - payment_day_of_month
        - transaction_name
        - statement_day_of_month
      title: InflowModel
      type: object
    InitialUpdateWebhook:
      additionalProperties: true
      description: Fired when an Item's initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item.
      properties:
        error:
          description: The error code associated with the webhook.
          nullable: true
          type: string
        item_id:
          $ref: "#/components/schemas/ItemId"
        new_transactions:
          description: The number of new, unfetched transactions available.
          type: number
        webhook_code:
          description: "`INITIAL_UPDATE`"
          type: string
        webhook_type:
          description: "`TRANSACTIONS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - new_transactions
        - item_id
      title: InitialUpdateWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_transactions: 19
          webhook_code: INITIAL_UPDATE
          webhook_type: TRANSACTIONS
    Institution:
      additionalProperties: true
      description: Details relating to a specific financial institution
      properties:
        country_codes:
          description: A list of the country codes supported by the institution.
          items:
            $ref: "#/components/schemas/CountryCode"
          type: array
        institution_id:
          description: Unique identifier for the institution
          type: string
        logo:
          description: Base64 encoded representation of the institution's logo
          nullable: true
          type: string
        name:
          description: The official name of the institution
          type: string
        oauth:
          description: Indicates that the institution has an OAuth login flow. This is primarily relevant to institutions with European country codes.
          type: boolean
        payment_initiation_metadata:
          $ref: "#/components/schemas/PaymentInitiationMetadata"
        primary_color:
          description: Hexadecimal representation of the primary color used by the institution
          nullable: true
          type: string
        products:
          description: A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/).
          items:
            $ref: "#/components/schemas/Products"
          type: array
        routing_numbers:
          description: A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.
          items:
            type: string
          nullable: true
          type: array
        status:
          $ref: "#/components/schemas/InstitutionStatus"
        url:
          description: The URL for the institution's website
          nullable: true
          type: string
      required:
        - institution_id
        - name
        - products
        - country_codes
        - routing_numbers
        - oauth
      title: Institution
      type: object
    InstitutionStatus:
      additionalProperties: true
      description: |
        The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.

        Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
      properties:
        auth:
          $ref: "#/components/schemas/ProductStatus"
        balance:
          $ref: "#/components/schemas/ProductStatus"
        health_incidents:
          description: Details of recent health incidents associated with the institution.
          items:
            $ref: "#/components/schemas/HealthIncident"
          nullable: true
          type: array
        identity:
          $ref: "#/components/schemas/ProductStatus"
        investments:
          $ref: "#/components/schemas/ProductStatus"
        investments_updates:
          $ref: "#/components/schemas/ProductStatus"
        item_logins:
          $ref: "#/components/schemas/ProductStatus"
        liabilities:
          $ref: "#/components/schemas/ProductStatus"
        liabilities_updates:
          $ref: "#/components/schemas/ProductStatus"
        transactions_updates:
          $ref: "#/components/schemas/ProductStatus"
      required:
        - item_logins
        - transactions_updates
        - auth
        - balance
        - identity
        - investments_updates
      title: InstitutionStatus
      type: object
      x-examples:
        example-1:
          status:
            auth:
              breakdown:
                error_institution: 0.08
                error_plaid: 0.01
                success: 0.91
              last_status_change: 2019-02-15T15:53:00Z
              status: HEALTHY
            balance:
              breakdown:
                error_institution: 0.09
                error_plaid: 0.02
                success: 0.89
              last_status_change: 2019-02-15T15:53:00Z
              status: HEALTHY
            identity:
              breakdown:
                error_institution: 0.5
                error_plaid: 0.08
                success: 0.42
              last_status_change: 2019-02-15T15:50:00Z
              status: DEGRADED
            investments:
              breakdown:
                error_institution: 0.09
                error_plaid: 0.02
                success: 0.89
              last_status_change: 2019-02-15T15:53:00Z
              status: HEALTHY
            investments_updates:
              breakdown:
                error_institution: 0.03
                error_plaid: 0.02
                refresh_interval: NORMAL
                success: 0.95
              last_status_change: 2019-02-12T08:22:00Z
              status: HEALTHY
            item_logins:
              breakdown:
                error_institution: 0.09
                error_plaid: 0.01
                success: 0.9
              last_status_change: 2019-02-15T15:53:00Z
              status: HEALTHY
            liabilities:
              breakdown:
                error_institution: 0.09
                error_plaid: 0.02
                success: 0.89
              last_status_change: 2019-02-15T15:53:00Z
              status: HEALTHY
            liabilities_updates:
              breakdown:
                error_institution: 0.03
                error_plaid: 0.02
                refresh_interval: NORMAL
                success: 0.95
              last_status_change: 2019-02-12T08:22:00Z
              status: HEALTHY
            transactions_updates:
              breakdown:
                error_institution: 0.03
                error_plaid: 0.02
                refresh_interval: NORMAL
                success: 0.95
              last_status_change: 2019-02-12T08:22:00Z
              status: HEALTHY
    InstitutionsGetByIdRequest:
      description: InstitutionsGetByIdRequest defines the request schema for `/institutions/get_by_id`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        country_codes:
          description: |
            Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
          items:
            $ref: "#/components/schemas/CountryCode"
          type: array
        institution_id:
          description: The ID of the institution to get details about
          type: string
        options:
          $ref: "#/components/schemas/InstitutionsGetByIdRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - institution_id
        - country_codes
      type: object
    InstitutionsGetByIdRequestOptions:
      description: Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.
      properties:
        include_optional_metadata:
          default: false
          description: |-
            When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.

            Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
          type: boolean
        include_payment_initiation_metadata:
          default: false
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
          type: boolean
        include_status:
          default: false
          description: If `true`, the response will include status information about the institution. Default value is `false`.
          type: boolean
      type: object
    InstitutionsGetByIdResponse:
      additionalProperties: true
      description: InstitutionsGetByIdResponse defines the response schema for `/institutions/get_by_id`
      properties:
        institution:
          $ref: "#/components/schemas/Institution"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - institution
        - request_id
      type: object
    InstitutionsGetRequest:
      description: InstitutionsGetRequest defines the request schema for `/institutions/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        count:
          description: The total number of Institutions to return.
          maximum: 500
          type: integer
        country_codes:
          description: |
            Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
          items:
            $ref: "#/components/schemas/CountryCode"
          minItems: 1
          type: array
        offset:
          description: The number of Institutions to skip.
          type: integer
        options:
          $ref: "#/components/schemas/InstitutionsGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - count
        - offset
        - country_codes
      type: object
    InstitutionsGetRequestOptions:
      description: An optional object to filter `/institutions/get` results.
      properties:
        include_optional_metadata:
          description: |-
            When `true`, return the institution's homepage URL, logo and primary brand color.

            Note that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
          type: boolean
        include_payment_initiation_metadata:
          default: false
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
          type: boolean
        oauth:
          description: Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes.
          type: boolean
        products:
          description: "Filter the Institutions based on which products they support. "
          items:
            $ref: "#/components/schemas/Products"
          type: array
        routing_numbers:
          description: Specify an array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array.
          items:
            type: string
          type: array
      type: object
    InstitutionsGetResponse:
      additionalProperties: true
      description: InstitutionsGetResponse defines the response schema for `/institutions/get`
      properties:
        institutions:
          description: A list of Plaid Institution
          items:
            $ref: "#/components/schemas/Institution"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
        total:
          description: The total number of institutions available via this endpoint
          type: integer
      required:
        - institutions
        - total
        - request_id
      type: object
    InstitutionsSearchAccountFilter:
      additionalProperties: true
      properties:
        credit:
          items:
            $ref: "#/components/schemas/AccountSubtype"
          type: array
        depository:
          items:
            $ref: "#/components/schemas/AccountSubtype"
          type: array
        investment:
          items:
            $ref: "#/components/schemas/AccountSubtype"
          type: array
        loan:
          items:
            $ref: "#/components/schemas/AccountSubtype"
          type: array
      title: InstitutionsSearchAccountFilter
      type: object
    InstitutionsSearchPaymentInitiationOptions:
      additionalProperties: true
      description: Additional options that will be used to filter institutions by various Payment Initiation configurations.
      nullable: true
      properties:
        payment_id:
          description: A unique ID identifying the payment
          type: string
      type: object
    InstitutionsSearchRequest:
      description: InstitutionsSearchRequest defines the request schema for `/institutions/search`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        country_codes:
          description: |
            Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
          items:
            $ref: "#/components/schemas/CountryCode"
          type: array
        options:
          $ref: "#/components/schemas/InstitutionsSearchRequestOptions"
        products:
          description: Filter the Institutions based on whether they support all products listed in `products`. Provide `null` to get institutions regardless of supported products. Note that when `auth` is specified as a product, if you are enabled for Instant Match or Automated Micro-deposits, institutions that support those products will be returned even if `auth` is not present in their product array.
          items:
            $ref: "#/components/schemas/Products"
          minItems: 1
          type: array
        query:
          description: The search query. Institutions with names matching the query are returned
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - query
        - products
        - country_codes
      type: object
    InstitutionsSearchRequestOptions:
      description: An optional object to filter `/institutions/search` results.
      properties:
        include_optional_metadata:
          description: When true, return the institution's homepage URL, logo and primary brand color.
          type: boolean
        include_payment_initiation_metadata:
          default: false
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
          type: boolean
        oauth:
          description: Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes
          type: boolean
        payment_initiation:
          $ref: "#/components/schemas/InstitutionsSearchPaymentInitiationOptions"
      type: object
    InstitutionsSearchResponse:
      additionalProperties: true
      description: InstitutionsSearchResponse defines the response schema for `/institutions/search`
      properties:
        institutions:
          description: An array of institutions matching the search criteria
          items:
            $ref: "#/components/schemas/Institution"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - institutions
        - request_id
      type: object
    InvestmentAccountSubtype:
      description: "An investment account. Supported products for `investment` accounts are: Balance and Investments."
      properties:
        "529":
          description: |
            Tax-advantaged college savings and prepaid tuition 529 plans (US)
          type: string
        401a:
          description: Employer-sponsored money-purchase 401(a) retirement plan (US)
          type: string
        401k:
          description: Standard 401(k) retirement account (US)
          type: string
        403b:
          description: 403(b) retirement savings account for non-profits and schools (US)
          type: string
        457b:
          description: Tax-advantaged deferred-compensation 457(b) retirement plan for governments and non-profits (US)
          type: string
        brokerage:
          description: Standard brokerage account
          type: string
        cash isa:
          description: Individual Savings Account (ISA) that pays interest tax-free (UK)
          type: string
        education savings account:
          description: Tax-advantaged Coverdell Education Savings Account (ESA) (US)
          type: string
        fixed annuity:
          description: Fixed annuity
          type: string
        gic:
          description: Guaranteed Investment Certificate (Canada)
          type: string
        health reimbursement arrangement:
          description: Tax-advantaged Health Reimbursement Arrangement (HRA) benefit plan (US)
          type: string
        hsa:
          description: |
            Non-cash tax-advantaged medical Health Savings Account (HSA) (US)
          type: string
        ira:
          description: Traditional Invididual Retirement Account (IRA) (US)
          type: string
        isa:
          description: Non-cash Individual Savings Account (ISA) (UK)
          type: string
        keogh:
          description: Keogh self-employed retirement plan (US)
          type: string
        lif:
          description: |
            Life Income Fund (LIF) retirement account (Canada)
          type: string
        life insurance:
          description: Life insurance account
          type: string
        lira:
          description: Locked-in Retirement Account (LIRA) (Canada)
          type: string
        lrif:
          description: Locked-in Retirement Income Fund (LRIF) (Canada)
          type: string
        lrsp:
          description: Locked-in Retirement Savings Plan (Canada)
          type: string
        mutual fund:
          description: Mutual fund account
          type: string
        non-taxable brokerage account:
          description: A non-taxable brokerage account that is not covered by a more specific subtype
          type: string
        other:
          description: An account whose type could not be determined
          type: string
        other annuity:
          description: An annuity account not covered by other subtypes
          type: string
        other insurance:
          description: An insurance account not covered by other subtypes
          type: string
        pension:
          description: Standard pension account
          type: string
        prif:
          description: Prescribed Registered Retirement Income Fund (Canada)
          type: string
        profit sharing plan:
          description: Plan that gives employees share of company profits
          type: string
        qshr:
          description: Qualifying share account
          type: string
        rdsp:
          description: Registered Disability Savings Plan (RSDP) (Canada)
          type: string
        resp:
          description: Registered Education Savings Plan (Canada)
          type: string
        retirement:
          description: Retirement account not covered by other subtypes
          type: string
        rlif:
          description: Restricted Life Income Fund (RLIF) (Canada)
          type: string
        roth:
          description: Roth IRA (US)
          type: string
        roth 401k:
          description: Employer-sponsored Roth 401(k) plan (US)
          type: string
        rrif:
          description: Registered Retirement Income Fund (RRIF) (Canada)
          type: string
        rrsp:
          description: Registered Retirement Savings Plan (Canadian, similar to US 401(k))
          type: string
        sarsep:
          description: Salary Reduction Simplified Employee Pension Plan (SARSEP), discontinued retirement plan (US)
          type: string
        sep ira:
          description: Simplified Employee Pension IRA (SEP IRA), retirement plan for small businesses and self-employed (US)
          type: string
        simple ira:
          description: Savings Incentive Match Plan for Employees IRA, retirement plan for small businesses (US)
          type: string
        sipp:
          description: Self-Invested Personal Pension (SIPP) (UK)
          type: string
        stock plan:
          description: Standard stock plan account
          type: string
        tfsa:
          description: Tax-Free Savings Account (TFSA), a retirement plan similar to a Roth IRA (Canada)
          type: string
        trust:
          description: Account representing funds or assets held by a trustee for the benefit of a beneficiary. Includes both revocable and irrevocable trusts.
          type: string
        ugma:
          description: "'Uniform Gift to Minors Act' (brokerage account for minors, US)"
          type: string
        utma:
          description: |
            'Uniform Transfers to Minors Act' (brokerage account for minors, US)
          type: string
        variable annuity:
          description: Tax-deferred capital accumulation annuity contract
          type: string
      required:
        - "529"
        - 401a
        - 401k
        - 403b
        - 457b
        - brokerage
        - cash isa
        - education savings account
        - fixed annuity
        - gic
        - health reimbursement arrangement
        - hsa
        - ira
        - isa
        - keogh
        - lif
        - life insurance
        - lira
        - lrif
        - lrsp
        - mutual fund
        - non-taxable brokerage account
        - other
        - other annuity
        - other insurance
        - pension
        - prif
        - profit sharing plan
        - qshr
        - rdsp
        - resp
        - retirement
        - rlif
        - roth
        - roth 401k
        - rrif
        - rrsp
        - sarsep
        - sep ira
        - simple ira
        - sipp
        - stock plan
        - tfsa
        - trust
        - ugma
        - utma
      title: InvestmentAccountSubtype
      type: string
    InvestmentFilter:
      additionalProperties: true
      description: A filter to apply to `investment`-type accounts
      properties:
        account_subtypes:
          $ref: "#/components/schemas/AccountSubtypes"
      required:
        - account_subtypes
      title: InvestmentFilter
      type: object
    InvestmentHoldingsGetRequestOptions:
      description: An optional object to filter `/investments/holdings/get` results. If provided, must not be `null`.
      properties:
        account_ids:
          description: An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
          type: array
      type: object
    InvestmentTransaction:
      additionalProperties: true
      description: A transaction within an investment account.
      properties:
        account_id:
          description: The `account_id` of the account against which this transaction posted.
          type: string
        amount:
          description: The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.
          type: number
        cancel_transaction_id:
          deprecated: true
          description: A legacy field formerly used internally by Plaid to identify certain canceled transactions.
          nullable: true
          type: string
        date:
          description: The ISO-8601 posting date for the transaction, or transacted date for pending transactions.
          format: date
          type: string
        fees:
          description: The combined value of all fees applied to this transaction
          nullable: true
          type: number
        investment_transaction_id:
          description: The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.
          type: string
        iso_currency_code:
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
          type: string
        name:
          description: The institution’s description of the transaction.
          type: string
        price:
          description: The price of the security at which this transaction occurred.
          type: number
        quantity:
          description: The number of units of the security involved in this transaction.
          type: number
        security_id:
          description: The `security_id` to which this transaction is related.
          nullable: true
          type: string
        subtype:
          description: For descriptions of possible transaction subtypes, see [Investment transaction subtypes schema](https://plaid.com/docs/api/accounts/#investment-transaction-subtypes-schema).
          enum:
            - account fee
            - assignment
            - buy
            - buy to cover
            - contribution
            - deposit
            - distribution
            - dividend
            - dividend reinvestment
            - exercise
            - expire
            - fund fee
            - interest
            - interest receivable
            - interest reinvestment
            - legal fee
            - loan payment
            - long-term capital gain
            - long-term capital gain reinvestment
            - management fee
            - margin expense
            - merger
            - miscellaneous fee
            - non-qualified dividend
            - non-resident tax
            - pending credit
            - pending debit
            - qualified dividend
            - rebalance
            - return of principal
            - sell
            - sell short
            - short-term capital gain
            - short-term capital gain reinvestment
            - spin off
            - split
            - stock distribution
            - tax
            - tax withheld
            - transfer
            - transfer fee
            - trust fee
            - unqualified gain
            - withdrawal
          type: string
        type:
          description: |-
            Value is one of the following:
            `buy`: Buying an investment
            `sell`: Selling an investment
            `cancel`: A cancellation of a pending transaction
            `cash`: Activity that modifies a cash position
            `fee`: A fee on the account
            `transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
          enum:
            - buy
            - sell
            - cancel
            - cash
            - fee
            - transfer
          type: string
        unofficial_currency_code:
          description: |-
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
          type: string
      required:
        - investment_transaction_id
        - account_id
        - security_id
        - date
        - name
        - quantity
        - amount
        - price
        - fees
        - type
        - subtype
        - iso_currency_code
        - unofficial_currency_code
      title: InvestmentTransaction
      type: object
    InvestmentsDefaultUpdateWebhook:
      additionalProperties: true
      description: Fired when new or canceled transactions have been detected on an investment account.
      properties:
        canceled_investments_transactions:
          description: The number of canceled transactions reported since the last time this webhook was fired.
          type: number
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        new_investments_transactions:
          description: The number of new transactions reported since the last time this webhook was fired.
          type: number
        webhook_code:
          description: "`DEFAULT_UPDATE`"
          type: string
        webhook_type:
          description: "`INVESTMENTS_TRANSACTIONS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - new_investments_transactions
        - canceled_investments_transactions
      title: TransactionsUpdateInvestmentsWebhook
      type: object
      x-examples:
        example-1:
          canceled_investments_transactions: 0
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_investments_transactions: 16
          webhook_code: DEFAULT_UPDATE
          webhook_type: INVESTMENTS_TRANSACTIONS
    InvestmentsHoldingsGetRequest:
      description: InvestmentsHoldingsGetRequest defines the request schema for `/investments/holdings/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/InvestmentHoldingsGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    InvestmentsHoldingsGetResponse:
      additionalProperties: true
      description: InvestmentsHoldingsGetResponse defines the response schema for `/investments/holdings/get`
      properties:
        accounts:
          description: The accounts associated with the Item
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        holdings:
          description: "The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. "
          items:
            $ref: "#/components/schemas/Holding"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
        securities:
          description: "Objects describing the securities held in the accounts associated with the Item. "
          items:
            $ref: "#/components/schemas/Security"
          type: array
      required:
        - accounts
        - holdings
        - securities
        - item
        - request_id
      type: object
    InvestmentsTransactionsGetRequest:
      description: InvestmentsTransactionsGetRequest defines the request schema for `/investments/transactions/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        end_date:
          description: The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
        options:
          $ref: "#/components/schemas/InvestmentsTransactionsGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
        start_date:
          description: The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
      required:
        - access_token
        - start_date
        - end_date
      type: object
    InvestmentsTransactionsGetRequestOptions:
      description: An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`.
      properties:
        account_ids:
          description: An array of `account_ids` to retrieve for the Item.
          items:
            type: string
          type: array
        count:
          default: 100
          description: |
            The number of transactions to fetch.
          maximum: 500
          minimum: 1
          type: integer
        offset:
          default: 0
          description: The number of transactions to skip when fetching transaction history
          minimum: 0
          type: integer
      type: object
    InvestmentsTransactionsGetResponse:
      additionalProperties: true
      description: InvestmentsTransactionsGetResponse defines the response schema for `/investments/transactions/get`
      properties:
        accounts:
          description: The accounts for which transaction history is being fetched.
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        investment_transactions:
          description: The transactions being fetched
          items:
            $ref: "#/components/schemas/InvestmentTransaction"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
        securities:
          description: All securities for which there is a corresponding transaction being fetched.
          items:
            $ref: "#/components/schemas/Security"
          type: array
        total_investment_transactions:
          description: The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.'
          type: integer
      required:
        - item
        - accounts
        - securities
        - investment_transactions
        - total_investment_transactions
        - request_id
      type: object
    Item:
      additionalProperties: true
      description: Metadata about the Item.
      properties:
        available_products:
          description: A list of products available for the Item that have not yet been accessed.
          items:
            $ref: "#/components/schemas/Products"
          type: array
        billed_products:
          description: |
            A list of products that have been billed for the Item. Note - `billed_products` is populated in all environments but only requests in Production are billed.
          items:
            $ref: "#/components/schemas/Products"
          type: array
        consent_expiration_time:
          description: |
            The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.

            Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.
          format: date-time
          nullable: true
          type: string
        error:
          $ref: "#/components/schemas/Error"
        institution_id:
          description: The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
          nullable: true
          type: string
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        update_type:
          description: |-
            Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.

            `background` - Item can be updated in the background

            `user_present_required` - Item requires user interaction to be updated
          enum:
            - background
            - user_present_required
          type: string
        webhook:
          description: The URL registered to receive webhooks for the Item.
          nullable: true
          type: string
      required:
        - item_id
        - webhook
        - error
        - available_products
        - billed_products
        - consent_expiration_time
        - update_type
      type: object
    ItemAccessTokenInvalidateRequest:
      description: ItemAccessTokenInvalidateRequest defines the request schema for `/item/access_token/invalidate`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    ItemAccessTokenInvalidateResponse:
      additionalProperties: true
      description: ItemAccessTokenInvalidateResponse defines the response schema for `/item/access_token/invalidate`
      properties:
        new_access_token:
          $ref: "#/components/schemas/AccessToken"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - new_access_token
        - request_id
      type: object
    ItemApplicationListRequest:
      description: Request to list connected applications for a user.
      properties:
        access_token:
          $ref: "#/components/schemas/AccessTokenNullable"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      type: object
    ItemApplicationListResponse:
      description: Describes the connected application for a particular end user.
      properties:
        applications:
          description: A list of connected applications.
          items:
            $ref: "#/components/schemas/ConnectedApplication"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - applications
      type: object
    ItemApplicationListUserAuth:
      description: User authentication parameters, for clients making a request without an `access_token`. This is only allowed for select clients and will not be supported in the future. Most clients should call /item/import to obtain an access token before making a request.
      properties:
        fi_username_hash:
          description: Account username hashed by FI.
          nullable: true
          type: string
        user_id:
          description: Account username.
          nullable: true
          type: string
      type: object
    ItemApplicationScopesUpdateRequest:
      description: ItemApplicationScopesUpdateRequest defines the request schema for `/item/application/scopes/update`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        application_id:
          $ref: "#/components/schemas/ApplicationID"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        scopes:
          $ref: "#/components/schemas/Scopes"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - application_id
        - access_token
        - scopes
      type: object
    ItemApplicationScopesUpdateResponse:
      description: ItemApplicationScopesUpdateResponse defines the response schema for `/item/application/scopes/update`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      type: object
    ItemErrorWebhook:
      additionalProperties: true
      description: Fired when an error is encountered with an Item. The error can be resolved by having the user go through Link’s update mode.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`ERROR`"
          type: string
        webhook_type:
          description: "`ITEM`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - error
      title: ItemErrorWebhook
      type: object
      x-examples:
        example-1:
          error:
            display_message: null
            error_code: ITEM_LOGIN_REQUIRED
            error_message: the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state
            error_type: ITEM_ERROR
            status: 400
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          webhook_code: ERROR
          webhook_type: ITEM
    ItemGetRequest:
      description: ItemGetRequest defines the request schema for `/item/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    ItemGetResponse:
      additionalProperties: true
      description: ItemGetResponse defines the response schema for `/item/get` and `/item/webhook/update`
      properties:
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
        status:
          $ref: "#/components/schemas/ItemStatusNullable"
      required:
        - item
        - request_id
      type: object
    ItemId:
      description: The `item_id` of the Item associated with this webhook, warning, or error
      title: ItemId
      type: string
    ItemImportRequest:
      description: ItemImportRequest defines the request schema for `/item/import`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/ItemImportRequestOptions"
        products:
          description: Array of product strings
          items:
            $ref: "#/components/schemas/Products"
          minItems: 1
          type: array
        secret:
          $ref: "#/components/schemas/APISecret"
        user_auth:
          $ref: "#/components/schemas/ItemImportRequestUserAuth"
      required:
        - products
        - user_auth
      type: object
    ItemImportRequestOptions:
      description: An optional object to configure `/item/import` request.
      properties:
        webhook:
          description: |
            Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail.
          type: string
      type: object
    ItemImportRequestUserAuth:
      description: Object of user ID and auth token pair, permitting Plaid to aggregate a user’s accounts
      properties:
        auth_token:
          description: Authorization token Plaid will use to aggregate this user’s accounts
          type: string
        user_id:
          description: Opaque user identifier
          type: string
      required:
        - user_id
        - auth_token
      type: object
    ItemImportResponse:
      additionalProperties: true
      description: ItemImportResponse defines the response schema for `/item/import`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - access_token
        - request_id
      type: object
    ItemProductReadyWebhook:
      additionalProperties: true
      description: Fired once Plaid calculates income from an Item.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`PRODUCT_READY`"
          type: string
        webhook_type:
          description: "`INCOME`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
      title: ItemProductReadyWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          webhook_code: PRODUCT_READY
          webhook_type: INCOME
    ItemPublicTokenCreateRequest:
      description: ItemPublicTokenCreateRequest defines the request schema for `/item/public_token/create`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    ItemPublicTokenCreateResponse:
      additionalProperties: true
      description: ItemPublicTokenCreateResponse defines the response schema for `/item/public_token/create`
      properties:
        expiration:
          format: date-time
          type: string
        public_token:
          description: A `public_token` for the particular Item corresponding to the specified `access_token`
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - public_token
        - request_id
      type: object
    ItemPublicTokenExchangeRequest:
      description: ItemPublicTokenExchangeRequest defines the request schema for `/item/public_token/exchange`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        public_token:
          description: Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - public_token
      type: object
    ItemPublicTokenExchangeResponse:
      additionalProperties: true
      description: ItemPublicTokenExchangeResponse defines the response schema for `/item/public_token/exchange`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        item_id:
          description: The `item_id` value of the Item associated with the returned `access_token`
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - access_token
        - item_id
        - request_id
      type: object
    ItemRemoveRequest:
      description: ItemRemoveRequest defines the request schema for `/item/remove`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    ItemRemoveResponse:
      additionalProperties: true
      description: ItemRemoveResponse defines the response schema for `/item/remove`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      type: object
    ItemStatus:
      additionalProperties: true
      description: An object with information about the status of the Item.
      nullable: true
      properties:
        investments:
          $ref: "#/components/schemas/ItemStatusInvestments"
        last_webhook:
          $ref: "#/components/schemas/ItemStatusLastWebhook"
        transactions:
          $ref: "#/components/schemas/ItemStatusTransactions"
      title: ItemStatus
      type: object
      x-examples:
        example-1: {}
    ItemStatusInvestments:
      additionalProperties: true
      description: Information about the last successful and failed investments update for the Item.
      nullable: true
      properties:
        last_failed_update:
          description: ISO 8601 timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
          format: date-time
          nullable: true
          type: string
        last_successful_update:
          description: ISO 8601 timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
          format: date-time
          nullable: true
          type: string
      type: object
    ItemStatusLastWebhook:
      additionalProperties: true
      description: Information about the last webhook fired for the Item.
      nullable: true
      properties:
        code_sent:
          description: The last webhook code sent.
          nullable: true
          type: string
        sent_at:
          description: ISO 8601 timestamp of when the webhook was fired.
          format: date-time
          nullable: true
          type: string
      type: object
    ItemStatusNullable:
      allOf:
        - $ref: "#/components/schemas/ItemStatus"
        - additionalProperties: true
          type: object
      nullable: true
    ItemStatusTransactions:
      additionalProperties: true
      description: Information about the last successful and failed transactions update for the Item.
      nullable: true
      properties:
        last_failed_update:
          description: ISO 8601 timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
          format: date-time
          nullable: true
          type: string
        last_successful_update:
          description: ISO 8601 timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
          format: date-time
          nullable: true
          type: string
      type: object
    ItemWebhookUpdateRequest:
      description: ItemWebhookUpdateRequest defines the request schema for `/item/webhook/update`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
        webhook:
          description: The new webhook URL to associate with the Item.
          type: string
      required:
        - access_token
        - webhook
      type: object
    ItemWebhookUpdateResponse:
      additionalProperties: true
      description: ItemWebhookUpdateResponse defines the response schema for `/item/webhook/update`
      properties:
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - item
        - request_id
      type: object
    JWKPublicKey:
      additionalProperties: true
      description: A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks
      properties:
        alg:
          description: The alg member identifies the cryptographic algorithm family used with the key.
          type: string
        created_at:
          type: integer
        crv:
          description: The crv member identifies the cryptographic curve used with the key.
          type: string
        expired_at:
          nullable: true
          type: integer
        kid:
          description: The kid (Key ID) member can be used to match a specific key. This can be used, for instance, to choose among a set of keys within the JWK during key rollover.
          type: string
        kty:
          description: The kty (key type) parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC.
          type: string
        use:
          description: The use (public key use) parameter identifies the intended use of the public key.
          type: string
        x:
          description: The x member contains the x coordinate for the elliptic curve point.
          type: string
        y:
          description: The y member contains the y coordinate for the elliptic curve point.
          type: string
      required:
        - alg
        - kid
        - kty
        - crv
        - x
        - y
        - use
        - created_at
        - expired_at
      type: object
    JWTHeader:
      additionalProperties: true
      description: A JWT Header, used for webhook validation
      properties:
        id:
          type: string
      required:
        - id
      title: JWTHeader
      type: object
    LiabilitiesDefaultUpdateWebhook:
      description: The webhook of type `LIABILITIES` and code `DEFAULT_UPDATE` will be fired when new or updated liabilities have been detected on a liabilities item.
      properties:
        account_ids_with_new_liabilities:
          description: An array of `account_id`'s for accounts that contain new liabilities.
          items:
            type: string
          type: array
        account_ids_with_updated_liabilities:
          additionalProperties:
            items:
              type: string
            type: array
          description: |
            An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.

            Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["past_amount_due"] }`
          type: object
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`DEFAULT_UPDATE`"
          type: string
        webhook_type:
          description: "`LIABILITIES`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - error
        - account_ids_with_new_liabilities
        - account_ids_with_updated_liabilities
      title: LiabilitiesDefaultUpdateWebhook
      type: object
      x-examples:
        example-1:
          account_ids_with_new_liabilities:
            - XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58
            - BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
          account_ids_with_updated_liabilities:
            XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58:
              - past_amount_due
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          webhook_code: DEFAULT_UPDATE
          webhook_type: LIABILITIES
    LiabilitiesGetRequest:
      description: LiabilitiesGetRequest defines the request schema for `/liabilities/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/LiabilitiesGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    LiabilitiesGetRequestOptions:
      description: An optional object to filter `/liabilities/get` results. If provided, `options` cannot be null.
      properties:
        account_ids:
          description: |-
            A list of accounts to retrieve for the Item.

            An error will be returned if a provided `account_id` is not associated with the Item
          items:
            type: string
          type: array
      type: object
    LiabilitiesGetResponse:
      additionalProperties: true
      description: LiabilitiesGetResponse defines the response schema for `/liabilities/get`
      properties:
        accounts:
          description: An array of accounts associated with the Item
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        liabilities:
          $ref: "#/components/schemas/LiabilitiesObject"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - accounts
        - item
        - liabilities
        - request_id
      type: object
    LiabilitiesObject:
      additionalProperties: true
      description: An object containing liability accounts
      properties:
        credit:
          description: The credit accounts returned.
          items:
            $ref: "#/components/schemas/CreditCardLiability"
          nullable: true
          type: array
        mortgage:
          description: The mortgage accounts returned.
          items:
            $ref: "#/components/schemas/MortgageLiability"
          nullable: true
          type: array
        student:
          description: The student loan accounts returned.
          items:
            $ref: "#/components/schemas/StudentLoan"
          nullable: true
          type: array
      required:
        - credit
        - mortgage
        - student
      title: LiabilitiesObject
      type: object
    LiabilityOverride:
      additionalProperties: true
      description: Used to configure Sandbox test data for the Liabilities product
      properties:
        balance_transfer_apr:
          description: The balance transfer APR percentage value. Can only be set if `type` is `credit`. Can only be set if `type` is `credit`.
          type: number
        cash_apr:
          description: The cash APR percentage value. Can only be set if `type` is `credit`.
          type: number
        expected_payoff_date:
          description: Override the `expected_payoff_date` field. Can only be set if `type` is `student`.
          format: date
          type: string
        guarantor:
          description: Override the `guarantor` field. Can only be set if `type` is `student`.
          type: string
        interest_capitalization_grace_period_months:
          description: If set, interest capitalization begins at the given number of months after loan origination. By default interest is never capitalized. Can only be set if `type` is `student`.
          type: number
        is_federal:
          description: Override the `is_federal` field. Can only be set if `type` is `student`.
          type: boolean
        is_overdue:
          description: Override the `is_overdue` field
          type: boolean
        last_payment_amount:
          description: Override the `last_payment_amount` field. Can only be set if `type` is `credit`.
          type: number
        loan_name:
          description: Override the `loan_name` field. Can only be set if `type` is `student`.
          type: string
        loan_status:
          $ref: "#/components/schemas/StudentLoanStatus"
        minimum_payment_amount:
          description: Override the `minimum_payment_amount` field. Can only be set if `type` is `credit` or `student`.
          type: number
        nominal_apr:
          description: The interest rate on the loan as a percentage. Can only be set if `type` is `student`.
          type: number
        origination_date:
          description: The date on which the loan was initially lent, in ISO 8601 (YYYY-MM-DD) format. Can only be set if `type` is `student`.
          format: date
          type: string
        payment_reference_number:
          description: Override the `payment_reference_number` field. Can only be set if `type` is `student`.
          type: string
        principal:
          description: The original loan principal. Can only be set if `type` is `student`.
          type: number
        pslf_status:
          $ref: "#/components/schemas/PSLFStatus"
        purchase_apr:
          description: The purchase APR percentage value. For simplicity, this is the only interest rate used to calculate interest charges. Can only be set if `type` is `credit`.
          type: number
        repayment_model:
          $ref: "#/components/schemas/StudentLoanRepaymentModel"
        repayment_plan_description:
          description: Override the `repayment_plan.description` field. Can only be set if `type` is `student`.
          type: string
        repayment_plan_type:
          description: 'Override the `repayment_plan.type` field. Can only be set if `type` is `student`. Possible values are: `"extended graduated"`, `"extended standard"`, `"graduated"`, `"income-contingent repayment"`, `"income-based repayment"`, `"interest only"`, `"other"`, `"pay as you earn"`, `"revised pay as you earn"`, or `"standard"`.'
          type: string
        sequence_number:
          description: Override the `sequence_number` field. Can only be set if `type` is `student`.
          type: string
        servicer_address:
          $ref: "#/components/schemas/Address"
        special_apr:
          description: The special APR percentage value. Can only be set if `type` is `credit`.
          type: number
        type:
          description: The type of the liability object, either `credit` or `student`. Mortgages are not currently supported in the custom Sandbox.
          type: string
      required:
        - type
        - purchase_apr
        - cash_apr
        - balance_transfer_apr
        - special_apr
        - last_payment_amount
        - minimum_payment_amount
        - is_overdue
        - origination_date
        - principal
        - nominal_apr
        - interest_capitalization_grace_period_months
        - repayment_model
        - expected_payoff_date
        - guarantor
        - is_federal
        - loan_name
        - loan_status
        - payment_reference_number
        - pslf_status
        - repayment_plan_description
        - repayment_plan_type
        - sequence_number
        - servicer_address
      title: LiabilityOverride
      type: object
    LinkTokenAccountFilters:
      additionalProperties: true
      description: |
        By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema).

        For institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window.
      properties:
        credit:
          $ref: "#/components/schemas/CreditFilter"
        depository:
          $ref: "#/components/schemas/DepositoryFilter"
        investment:
          $ref: "#/components/schemas/InvestmentFilter"
        loan:
          $ref: "#/components/schemas/LoanFilter"
      type: object
    LinkTokenCreateRequest:
      description: LinkTokenCreateRequest defines the request schema for `/link/token/create`
      properties:
        access_token:
          description: The `access_token` associated with the Item to update, used when updating or modifying an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link as part of the Payment Initiation (UK and Europe) flow.
          type: string
        account_filters:
          $ref: "#/components/schemas/LinkTokenAccountFilters"
        android_package_name:
          description: "The name of your app's Android package. Required if using the `link_token` to initialize Link on Android. When creating a `link_token` for initializing Link on other platforms, this field must be left blank. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api). "
          type: string
        auth:
          $ref: "#/components/schemas/LinkTokenCreateRequestAuth"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        client_name:
          description: The name of your application, as it should be displayed in Link. Maximum length of 30 characters.
          type: string
        country_codes:
          description: |-
            Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown.  Supported country codes are: `US`, `CA`, `ES`, `FR`, `GB`, `IE`, `NL`. Example value: `['US', 'CA']`.

            If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. To gain access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.

            If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`. If both `country_codes` and a Link customization are used, the value in `country_codes` may override the value in the customization.

            If using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`.
          items:
            $ref: "#/components/schemas/CountryCode"
          minItems: 1
          type: array
        deposit_switch:
          $ref: "#/components/schemas/LinkTokenCreateRequestDepositSwitch"
        eu_config:
          $ref: "#/components/schemas/LinkTokenEUConfig"
        income_verification:
          $ref: "#/components/schemas/LinkTokenCreateRequestIncomeVerification"
        institution_id:
          description: Used for certain Europe-only configurations, as well as certain legacy use cases in other regions.
          type: string
        language:
          description: |-
            The language that Link should be displayed in.

            Supported languages are:
            - English (`'en'`)
            - French (`'fr'`)
            - Spanish (`'es'`)
            - Dutch (`'nl'`)

            When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.
          type: string
        link_customization_name:
          description: The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.
          type: string
        payment_initiation:
          $ref: "#/components/schemas/LinkTokenCreateRequestPaymentInitiation"
        products:
          description: |-
            List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted; required otherwise. Valid products are:

            `transactions`, `auth`, `identity`, `assets`, `investments`, `liabilities`, `payment_initiation`, `deposit_switch`, `income_verification`

            Example: `['auth', 'transactions']`

            `balance` is *not* a valid value, the Balance product does not require explicit initalization and will automatically be initialized when any other product is initialized.

            Only institutions that support *all* requested products will be shown in Link; to maximize the number of institutions listed, it is recommended to initialize Link with the minimal product set required for your use case. Additional products can be added after Link initialization by calling the relevant endpoints. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/best-practices/#choosing-when-to-initialize-products).

            Note that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.

            In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.
          items:
            $ref: "#/components/schemas/Products"
          type: array
        redirect_uri:
          description: A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. If `android_package_name` is specified, this field should be left blank.  Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api).
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
        user:
          $ref: "#/components/schemas/LinkTokenCreateRequestUser"
        webhook:
          description: The destination URL to which any webhooks should be sent.
          type: string
      required:
        - client_name
        - language
        - country_codes
        - user
      type: object
    LinkTokenCreateRequestAccountSubtypes:
      description: |
        By default, Link will only display account types that are compatible with all products supplied in the `products` parameter of `/link/token/create`. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link.

        For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema).

        For institutions using OAuth, the filter will not affect the list of institutions or accounts shown by the bank in the OAuth window.
      properties:
        credit:
          additionalProperties: true
          description: A filter to apply to `credit`-type accounts
          properties:
            account_subtypes:
              $ref: "#/components/schemas/AccountSubtypes"
          type: object
        depository:
          additionalProperties: true
          description: A filter to apply to `depository`-type accounts
          properties:
            account_subtypes:
              $ref: "#/components/schemas/AccountSubtypes"
          type: object
        investment:
          additionalProperties: true
          description: A filter to apply to `investment`-type accounts
          properties:
            account_subtypes:
              $ref: "#/components/schemas/AccountSubtypes"
          type: object
        loan:
          additionalProperties: true
          description: A filter to apply to `loan`-type accounts
          properties:
            account_subtypes:
              $ref: "#/components/schemas/AccountSubtypes"
          type: object
      type: object
    LinkTokenCreateRequestAuth:
      description: Specifies options for initializing Link for use with the Auth product. This field is currently only required if using the Flexible Auth product (currently in closed beta).
      properties:
        flow_type:
          description: The optional Auth flow to use. Currently only used to enable Flexible Auth.
          enum:
            - FLEXIBLE_AUTH
          type: string
      required:
        - flow_type
      type: object
    LinkTokenCreateRequestDepositSwitch:
      description: Specifies options for initializing Link for use with the Deposit Switch (beta) product. This field is required if `deposit_switch` is included in the `products` array.
      properties:
        deposit_switch_id:
          description: The `deposit_switch_id` provided by the `/deposit_switch/create` endpoint.
          type: string
      required:
        - deposit_switch_id
      type: object
    LinkTokenCreateRequestIncomeVerification:
      description: Specifies options for initializing Link for use with the Income (beta) product. This field is required if `income_verification` is included in the `products` array.
      properties:
        asset_report_id:
          description: The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped.
          type: string
        income_verification_id:
          description: The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.
          type: string
      required:
        - income_verification_id
      title: LinkTokenCreateRequestIncomeVerification
      type: object
    LinkTokenCreateRequestPaymentInitiation:
      description: Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if `payment_initiation` is included in the `products` array.
      properties:
        payment_id:
          description: The `payment_id` provided by the `/payment_initiation/payment/create` endpoint.
          minLength: 1
          type: string
      required:
        - payment_id
      type: object
    LinkTokenCreateRequestUser:
      description: An object specifying information about the end user who will be linking their account.
      properties:
        client_user_id:
          description: A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
          type: string
        date_of_birth:
          description: To be provided in the format "yyyy-mm-dd". This field is optional and will support not-yet-implemented functionality for new products.
          format: date-time
          type: string
        email_address:
          description: The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#enabling-the-returning-user-experience).
          type: string
        email_address_verified_time:
          description: |-
            The date and time the email address was verified in ISO 8601 format (`YYYY-MM-DDThh:mm:ssZ`). This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user).

             Only pass a verification time for an email address that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

             Example: `2020-01-01T00:00:00Z`
          format: date-time
          type: string
        legal_name:
          description: The user's full legal name. This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user) to associate Items to the user.
          type: string
        phone_number:
          description: The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user).
          type: string
        phone_number_verified_time:
          description: |
            The date and time the phone number was verified in ISO 8601 format (`YYYY-MM-DDThh:mm:ssZ`). This field is optional, but required to enable any [returning user experience](https://plaid.com/docs/link/returning-user).

             Only pass a verification time for a phone number that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

             Example: `2020-01-01T00:00:00Z`
          format: date-time
          type: string
        ssn:
          description: To be provided in the format "ddd-dd-dddd". This field is optional and will support not-yet-implemented functionality for new products.
          type: string
      required:
        - client_user_id
      type: object
    LinkTokenCreateResponse:
      additionalProperties: true
      description: LinkTokenCreateResponse defines the response schema for `/link/token/create`
      properties:
        expiration:
          description: The expiration date for the `link_token`, in ISO 8601 format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.
          format: date-time
          type: string
        link_token:
          description: A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - link_token
        - expiration
        - request_id
      type: object
    LinkTokenEUConfig:
      description: Configuration parameters for EU flows
      properties:
        headless:
          description: If `true`, open Link without an initial UI. Defaults to `false`.
          type: boolean
      type: object
    LinkTokenGetMetadataResponse:
      additionalProperties: true
      description: An object specifying the arguments originally provided to the `/link/token/create` call.
      properties:
        account_filters:
          $ref: "#/components/schemas/AccountFiltersResponse"
        client_name:
          description: The `client_name` specified in the `/link/token/create` call.
          nullable: true
          type: string
        country_codes:
          description: The `country_codes` specified in the `/link/token/create` call.
          items:
            $ref: "#/components/schemas/CountryCode"
          type: array
        initial_products:
          description: The `products` specified in the `/link/token/create` call.
          items:
            $ref: "#/components/schemas/Products"
          type: array
        language:
          description: The `language` specified in the `/link/token/create` call.
          nullable: true
          type: string
        redirect_uri:
          description: The `redirect_uri` specified in the `/link/token/create` call.
          nullable: true
          type: string
        webhook:
          description: The `webhook` specified in the `/link/token/create` call.
          nullable: true
          type: string
      required:
        - initial_products
        - webhook
        - country_codes
        - language
        - redirect_uri
        - client_name
      type: object
    LinkTokenGetRequest:
      description: LinkTokenGetRequest defines the request schema for `/link/token/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        link_token:
          description: A `link_token` from a previous invocation of `/link/token/create`
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - link_token
      type: object
    LinkTokenGetResponse:
      additionalProperties: true
      description: LinkTokenGetResponse defines the response schema for `/link/token/get`
      properties:
        created_at:
          description: The creation timestamp for the `link_token`, in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        expiration:
          description: The expiration timestamp for the `link_token`, in ISO 8601 format.
          format: date-time
          nullable: true
          type: string
        link_token:
          description: A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
          type: string
        metadata:
          $ref: "#/components/schemas/LinkTokenGetMetadataResponse"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - link_token
        - created_at
        - expiration
        - metadata
        - request_id
      type: object
    LoanAccount:
      description: "A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions."
      properties:
        auto:
          description: Auto loan
          type: string
        business:
          description: Business loan
          type: string
        commercial:
          description: Commercial loan
          type: string
        construction:
          description: Construction loan
          type: string
        consumer:
          description: Consumer loan
          type: string
        home equity:
          description: Home Equity Line of Credit (HELOC)
          type: string
        line of credit:
          description: Pre-approved line of credit
          type: string
        loan:
          description: General loan
          type: string
        mortgage:
          description: Mortgage loan
          type: string
        other:
          description: Other loan type or unknown loan type
          type: string
        overdraft:
          description: Pre-approved overdraft account, usually tied to a checking account
          type: string
        student:
          description: Student loan
          type: string
      required:
        - auto
        - business
        - commercial
        - construction
        - consumer
        - home equity
        - loan
        - mortgage
        - overdraft
        - line of credit
        - student
        - other
      title: LoanAccount
      type: string
    LoanFilter:
      additionalProperties: true
      description: A filter to apply to `loan`-type accounts
      properties:
        account_subtypes:
          $ref: "#/components/schemas/AccountSubtypes"
      required:
        - account_subtypes
      title: LoanFilter
      type: object
    Location:
      additionalProperties: true
      description: A representation of where a transaction took place
      properties:
        address:
          description: The street address where the transaction occurred.
          nullable: true
          type: string
        city:
          description: The city where the transaction occurred.
          nullable: true
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code where the transaction occurred.
          nullable: true
          type: string
        lat:
          description: The latitude where the transaction occurred.
          nullable: true
          type: number
        lon:
          description: The longitude where the transaction occurred.
          nullable: true
          type: number
        postal_code:
          description: The postal code where the transaction occurred.
          nullable: true
          type: string
        region:
          description: The region or state where the transaction occurred.
          nullable: true
          type: string
        store_number:
          description: The merchant defined store number where the transaction occurred.
          nullable: true
          type: string
      required:
        - address
        - city
        - region
        - postal_code
        - country
        - lat
        - lon
        - store_number
      title: Transaction Location
      type: object
    MFA:
      additionalProperties: true
      description: Specifies the multi-factor authentication settings to use with this test account
      properties:
        question_rounds:
          description: "Number of rounds of questions. Required if value of `type` is `questions`. "
          type: number
        questions_per_round:
          description: Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2.
          type: number
        selection_rounds:
          description: Number of rounds of selections, used if `type` is `selections`. Defaults to 1.
          type: number
        selections_per_question:
          description: |
            Number of available answers per question, used if `type` is `selection`. Defaults to 2.
          type: number
        type:
          description: |-
            Possible values are `device`, `selections`, or `questions`.

            If value is `device`, the MFA answer is `1234`.

            If value is `selections`, the MFA answer is always the first option.

            If value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`.
          type: string
      required:
        - type
        - question_rounds
        - questions_per_round
        - selection_rounds
        - selections_per_question
      title: MFA
      type: object
    Meta:
      additionalProperties: true
      description: Allows specifying the metadata of the test account
      properties:
        limit:
          description: The account's limit
          type: number
        name:
          description: The account's name
          type: string
        official_name:
          description: The account's official name
          type: string
      required:
        - name
        - official_name
        - limit
      title: Meta
      type: object
    MortgageInterestRate:
      additionalProperties: true
      description: Object containing metadata about the interest rate for the mortgage.
      properties:
        percentage:
          description: Percentage value (interest rate of current mortgage, not APR) of interest payable on a loan.
          nullable: true
          type: number
        type:
          description: The type of interest charged (fixed or variable).
          nullable: true
          type: string
      required:
        - percentage
        - type
      title: MortgageInterestRate
      type: object
    MortgageLiability:
      additionalProperties: true
      description: Contains details about a mortgage account.
      properties:
        account_id:
          description: The ID of the account that this liability belongs to.
          type: string
        account_number:
          description: The account number of the loan.
          type: string
        current_late_fee:
          description: The current outstanding amount charged for late payment.
          nullable: true
          type: number
        escrow_balance:
          description: Total amount held in escrow to pay taxes and insurance on behalf of the borrower.
          nullable: true
          type: number
        has_pmi:
          description: Indicates whether the borrower has private mortgage insurance in effect.
          nullable: true
          type: boolean
        has_prepayment_penalty:
          description: Indicates whether the borrower will pay a penalty for early payoff of mortgage.
          nullable: true
          type: boolean
        interest_rate:
          $ref: "#/components/schemas/MortgageInterestRate"
        last_payment_amount:
          description: The amount of the last payment.
          nullable: true
          type: number
        last_payment_date:
          description: The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        loan_term:
          description: Full duration of mortgage as at origination (e.g. `10 year`).
          nullable: true
          type: string
        loan_type_description:
          description: Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.
          nullable: true
          type: string
        maturity_date:
          description: Original date on which mortgage is due in full. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        next_monthly_payment:
          description: The amount of the next payment.
          nullable: true
          type: number
        next_payment_due_date:
          description: The due date for the next payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        origination_date:
          description: The date on which the loan was initially lent. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        origination_principal_amount:
          description: The original principal balance of the mortgage.
          nullable: true
          type: number
        past_due_amount:
          description: Amount of loan (principal + interest) past due for payment.
          nullable: true
          type: number
        property_address:
          $ref: "#/components/schemas/MortgagePropertyAddress"
        ytd_interest_paid:
          description: The year to date (YTD) interest paid.
          nullable: true
          type: number
        ytd_principal_paid:
          description: The YTD principal paid.
          nullable: true
          type: number
      required:
        - account_id
        - account_number
        - current_late_fee
        - escrow_balance
        - has_pmi
        - has_prepayment_penalty
        - interest_rate
        - last_payment_amount
        - last_payment_date
        - loan_type_description
        - loan_term
        - maturity_date
        - next_monthly_payment
        - next_payment_due_date
        - origination_date
        - origination_principal_amount
        - past_due_amount
        - property_address
        - ytd_interest_paid
        - ytd_principal_paid
      title: MortgageLiability
      type: object
    MortgagePropertyAddress:
      additionalProperties: true
      description: Object containing fields describing property address.
      properties:
        city:
          description: The city name.
          nullable: true
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code.
          nullable: true
          type: string
        postal_code:
          description: The five or nine digit postal code.
          nullable: true
          type: string
        region:
          description: The region or state (example "NC").
          nullable: true
          type: string
        street:
          description: The full street address (example "564 Main Street, Apt 15").
          nullable: true
          type: string
      required:
        - city
        - country
        - postal_code
        - region
        - street
      title: MortgagePropertyAddress
      type: object
    Numbers:
      additionalProperties: true
      description: Account and bank identifier number data used to configure the test account. All values are optional.
      properties:
        account:
          description: Will be used for the account number.
          type: string
        ach_routing:
          description: Must be a valid ACH routing number.
          type: string
        ach_wire_routing:
          description: Must be a valid wire transfer routing number.
          type: string
        bacs_sort_code:
          description: BACS sort code
          type: string
        eft_branch:
          description: EFT branch number. Must be specified alongside `eft_institution`.
          type: string
        eft_institution:
          description: EFT institution number. Must be specified alongside `eft_branch`.
          type: string
        international_bic:
          description: Bank identifier code (BIC). Must be specified alongside `international_iban`.
          type: string
        international_iban:
          description: International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`.
          type: string
      title: Numbers
      type: object
    NumbersACH:
      additionalProperties: true
      description: Identifying information for transferring money to or from a US account via ACH or wire transfer.
      properties:
        account:
          description: |-
            The ACH account number for the account.

            Note that when using OAuth with Chase Bank (`ins_56`), Chase will issue "tokenized" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the mask field will continue to reflect the actual account number, rather than the tokenized account number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals.
          type: string
        account_id:
          description: The Plaid account ID associated with the account numbers
          type: string
        routing:
          description: The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field.
          type: string
        wire_routing:
          description: The wire transfer routing number for the account, if available
          nullable: true
          type: string
      required:
        - account_id
        - account
        - routing
        - wire_routing
      title: NumbersACH
      type: object
    NumbersACHNullable:
      allOf:
        - $ref: "#/components/schemas/NumbersACH"
        - additionalProperties: true
          type: object
      nullable: true
    NumbersBACS:
      additionalProperties: true
      description: Identifying information for transferring money to or from a UK bank account via BACS.
      properties:
        account:
          description: The BACS account number for the account
          type: string
        account_id:
          description: The Plaid account ID associated with the account numbers
          type: string
        sort_code:
          description: The BACS sort code for the account
          type: string
      required:
        - account_id
        - account
        - sort_code
      title: NumbersBACS
      type: object
    NumbersBACSNullable:
      allOf:
        - $ref: "#/components/schemas/NumbersBACS"
        - additionalProperties: true
          type: object
      nullable: true
    NumbersEFT:
      additionalProperties: true
      description: Identifying information for transferring money to or from a Canadian bank account via EFT.
      properties:
        account:
          description: The EFT account number for the account
          type: string
        account_id:
          description: The Plaid account ID associated with the account numbers
          type: string
        branch:
          description: The EFT branch number for the account
          type: string
        institution:
          description: The EFT institution number for the account
          type: string
      required:
        - account_id
        - account
        - institution
        - branch
      title: NumbersEFT
      type: object
    NumbersEFTNullable:
      allOf:
        - $ref: "#/components/schemas/NumbersEFT"
        - additionalProperties: true
          type: object
      nullable: true
    NumbersInternational:
      additionalProperties: true
      description: Identifying information for transferring money to or from an international bank account via wire transfer.
      properties:
        account_id:
          description: The Plaid account ID associated with the account numbers
          type: string
        bic:
          description: The Bank Identifier Code (BIC) for the account
          type: string
        iban:
          description: The International Bank Account Number (IBAN) for the account
          type: string
      required:
        - account_id
        - iban
        - bic
      title: NumbersInternational
      type: object
    NumbersInternationalNullable:
      allOf:
        - $ref: "#/components/schemas/NumbersInternational"
        - additionalProperties: true
          type: object
      nullable: true
    OverrideAccountType:
      description: |-
        `investment:` Investment account

        `credit:` Credit card

        `depository:` Depository account

        `loan:` Loan account

        `other:` Non-specified account type

        See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
      enum:
        - investment
        - credit
        - depository
        - loan
        - other
      title: OverrideAccountType
      type: string
    OverrideAccounts:
      additionalProperties: true
      description: Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
      properties:
        currency:
          description: ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
          type: string
        force_available_balance:
          description: If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.
          type: number
        identity:
          $ref: "#/components/schemas/OwnerOverride"
        inflow_model:
          $ref: "#/components/schemas/InflowModel"
        liability:
          $ref: "#/components/schemas/LiabilityOverride"
        meta:
          $ref: "#/components/schemas/Meta"
        numbers:
          $ref: "#/components/schemas/Numbers"
        starting_balance:
          description: |
            If provided, the account will start with this amount as the current balance.
          type: number
        subtype:
          $ref: "#/components/schemas/AccountSubtype"
        transactions:
          description: Specify the list of transactions on the account.
          items:
            $ref: "#/components/schemas/TransactionOverride"
          type: array
        type:
          $ref: "#/components/schemas/OverrideAccountType"
      required:
        - type
        - subtype
        - starting_balance
        - force_available_balance
        - currency
        - meta
        - numbers
        - transactions
        - identity
        - liability
        - inflow_model
      title: OverrideAccounts
      type: object
    Owner:
      additionalProperties: true
      description: Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty.
      properties:
        addresses:
          description: Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: "#/components/schemas/Address"
          type: array
        emails:
          description: A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: "#/components/schemas/Email"
          type: array
        names:
          description: |-
            A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. If the name of a business is reported, please contact Plaid Support. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.

            If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.
          items:
            type: string
          type: array
        phone_numbers:
          description: A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
      required:
        - names
        - phone_numbers
        - emails
        - addresses
      title: Owner
      type: object
    OwnerOverride:
      additionalProperties: true
      description: Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.
      properties:
        addresses:
          description: Data about the various addresses associated with the account.
          items:
            $ref: "#/components/schemas/Address"
          type: array
        emails:
          description: A list of email addresses associated with the account.
          items:
            $ref: "#/components/schemas/Email"
          type: array
        names:
          description: A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item.
          items:
            type: string
          type: array
        phone_numbers:
          description: A list of phone numbers associated with the account.
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
      required:
        - names
        - phone_numbers
        - emails
        - addresses
      title: OwnerOverride
      type: object
    PSLFStatus:
      additionalProperties: true
      description: "Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is Fedloan (`ins_116527`). "
      properties:
        estimated_eligibility_date:
          description: The estimated date borrower will have completed 120 qualifying monthly payments. Returned in ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        payments_made:
          description: The number of qualifying payments that have been made.
          nullable: true
          type: number
        payments_remaining:
          description: The number of qualifying payments remaining.
          nullable: true
          type: number
      required:
        - estimated_eligibility_date
        - payments_made
        - payments_remaining
      title: PSLFStatus
      type: object
    PayFrequency:
      additionalProperties: true
      nullable: true
      properties:
        value:
          description: The frequency of the pay period.
          enum:
            - monthly
            - semimonthly
            - weekly
            - biweekly
            - unknown
            - "null"
          type: string
        verification_status:
          $ref: "#/components/schemas/VerificationStatus"
      required:
        - value
        - verification_status
      title: PayFrequency
      type: object
    PayPeriodDetails:
      additionalProperties: true
      description: Details about the pay period.
      properties:
        check_amount:
          description: The net amount of the paycheck.
          nullable: true
          type: number
        end_date:
          description: 'The pay period end date, in ISO 8601 format: "yyyy-mm-dd".'
          format: date
          nullable: true
          type: string
        gross_earnings:
          description: Total earnings before tax.
          nullable: true
          type: number
        pay_day:
          description: The date on which the paystub was issued, in ISO 8601 format ("yyyy-mm-dd").
          format: date
          nullable: true
          type: string
        start_date:
          description: 'The pay period start date, in ISO 8601 format: "yyyy-mm-dd".'
          format: date
          nullable: true
          type: string
      required:
        - start_date
        - end_date
        - pay_day
        - gross_earnings
        - check_amount
      title: PayPeriodDetails
      type: object
    PaymentAmount:
      additionalProperties: true
      description: The amount and currency of a payment
      properties:
        currency:
          description: The ISO-4217 currency code of the payment. For standing orders, `"GBP"` must be used.
          enum:
            - GBP
            - EUR
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
          type: number
      required:
        - currency
        - value
      title: PaymentAmount
      type: object
    PaymentInitiationAddress:
      additionalProperties: true
      description: The optional address of the payment recipient. This object is not currently required to make payments from UK institutions and should not be populated, though may be necessary for future European expansion.
      nullable: true
      properties:
        city:
          description: The city where the recipient is located. Maximum of 35 characters.
          maxLength: 35
          minLength: 1
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code where the recipient is located.
          maxLength: 2
          minLength: 2
          type: string
        postal_code:
          description: The postal code where the recipient is located. Maximum of 16 characters.
          maxLength: 16
          minLength: 1
          type: string
        street:
          description: An array of length 1-2 representing the street address where the recipient is located. Maximum of 70 characters.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
        - street
        - city
        - postal_code
        - country
      title: PaymentInitiationAddress
      type: object
    PaymentInitiationMetadata:
      additionalProperties: true
      description: Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.
      nullable: true
      properties:
        maximum_payment_amount:
          additionalProperties:
            type: string
          description: |
            A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the insitution.

            Example: `{"GBP": "10000"}`
          type: object
        standing_order_metadata:
          $ref: "#/components/schemas/PaymentInitiationStandingOrderMetadata"
        supports_international_payments:
          description: Indicates whether the institution supports payments from a different country.
          type: boolean
        supports_refund_details:
          description: Indicates whether the institution supports returning refund details when initiating a payment.
          type: boolean
      required:
        - supports_international_payments
        - maximum_payment_amount
        - supports_refund_details
        - standing_order_metadata
      title: PaymentInitiationMetadata
      type: object
    PaymentInitiationOptionalRestrictionBacs:
      allOf:
        - $ref: "#/components/schemas/RecipientBACS"
        - additionalProperties: true
          description: An optional object used to restrict the accounts used for payments. If provided, the end user will be able to send payments only from the specified bank account.
          type: object
      nullable: true
    PaymentInitiationPayment:
      additionalProperties: true
      description: PaymentInitiationPayment defines a payment initiation payment
      properties:
        adjusted_reference:
          description: The value of the reference sent to the bank after adjustment to pass bank validation rules.
          nullable: true
          type: string
        amount:
          $ref: "#/components/schemas/PaymentAmount"
        bacs:
          $ref: "#/components/schemas/SenderBACSNullable"
        emi_account_id:
          description: The EMI (E-Money Institution) account that this payment is associated with, if any. This EMI account is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
          minLength: 1
          nullable: true
          type: string
        iban:
          description: The International Bank Account Number (IBAN) for the sender, if specified in the `/payment_initiation/payment/create` call.
          nullable: true
          type: string
        last_status_update:
          description: The date and time of the last time the `status` was updated, in IS0 8601 format
          format: date-time
          type: string
        payment_id:
          description: The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
          type: string
        recipient_id:
          description: The ID of the recipient
          type: string
        reference:
          description: A reference for the payment.
          type: string
        refund_details:
          $ref: "#/components/schemas/ExternalPaymentRefundDetails"
        schedule:
          $ref: "#/components/schemas/ExternalPaymentScheduleGet"
        status:
          description: |-
            The status of the payment.

            `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

            `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

            `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

            `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

            `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

            `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

            `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

            `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
          enum:
            - PAYMENT_STATUS_INPUT_NEEDED
            - PAYMENT_STATUS_PROCESSING
            - PAYMENT_STATUS_INITIATED
            - PAYMENT_STATUS_COMPLETED
            - PAYMENT_STATUS_INSUFFICIENT_FUNDS
            - PAYMENT_STATUS_FAILED
            - PAYMENT_STATUS_BLOCKED
            - PAYMENT_STATUS_UNKNOWN
          type: string
      required:
        - payment_id
        - amount
        - status
        - recipient_id
        - reference
        - last_status_update
        - schedule
        - bacs
        - iban
      type: object
    PaymentInitiationPaymentCreateRequest:
      description: PaymentInitiationPaymentCreateRequest defines the request schema for `/payment_initiation/payment/create`
      properties:
        amount:
          $ref: "#/components/schemas/PaymentAmount"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        options:
          $ref: "#/components/schemas/ExternalPaymentOptions"
        recipient_id:
          description: The ID of the recipient the payment is for.
          minLength: 1
          type: string
        reference:
          description: A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).
          maxLength: 18
          minLength: 1
          type: string
        schedule:
          $ref: "#/components/schemas/ExternalPaymentScheduleRequest"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - recipient_id
        - reference
        - amount
      type: object
    PaymentInitiationPaymentCreateResponse:
      additionalProperties: true
      description: PaymentInitiationPaymentCreateResponse defines the response schema for `/payment_initiation/payment/create`
      properties:
        payment_id:
          description: A unique ID identifying the payment
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
        status:
          description: |-
            For a payment returned by this endpoint, there is only one possible value:

            `PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment
          enum:
            - PAYMENT_STATUS_INPUT_NEEDED
          type: string
      required:
        - payment_id
        - status
        - request_id
      type: object
    PaymentInitiationPaymentGetRequest:
      description: PaymentInitiationPaymentGetRequest defines the request schema for `/payment_initiation/payment/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        payment_id:
          description: The `payment_id` returned from `/payment_initiation/payment/create`.
          minLength: 1
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - payment_id
      type: object
    PaymentInitiationPaymentGetResponse:
      additionalProperties: true
      allOf:
        - $ref: "#/components/schemas/PaymentInitiationPayment"
        - properties:
            request_id:
              $ref: "#/components/schemas/RequestID"
          type: object
      description: PaymentInitiationPaymentGetResponse defines the response schema for `/payment_initation/payment/get`
      required:
        - request_id
        - payment_id
        - amount
        - status
        - recipient_id
        - reference
        - last_status_update
        - bacs
        - iban
    PaymentInitiationPaymentListRequest:
      description: PaymentInitiationPaymentListRequest defines the request schema for `/payment_initiation/payment/list`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        count:
          default: 10
          description: The maximum number of payments to return. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).
          nullable: true
          type: integer
        cursor:
          description: A string in RFC 3339 format (i.e. "2019-12-06T22:35:49Z"). Only payments created before the cursor will be returned.
          nullable: true
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      type: object
    PaymentInitiationPaymentListResponse:
      additionalProperties: true
      description: PaymentInitiationPaymentListResponse defines the response schema for `/payment_initiation/payment/list`
      properties:
        next_cursor:
          description: The value that, when used as the optional `cursor` parameter to `/payment_initiation/payment/list`, will return the next unreturned payment as its first payment.
          format: date-time
          nullable: true
          type: string
        payments:
          description: An array of payments that have been created, associated with the given `client_id`.
          items:
            $ref: "#/components/schemas/PaymentInitiationPayment"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - payments
        - next_cursor
        - request_id
      type: object
    PaymentInitiationPaymentTokenCreateRequest:
      description: PaymentInitiationPaymentTokenCreateRequest defines the request schema for `/payment_initiation/payment/token/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        payment_id:
          description: The `payment_id` returned from `/payment_initiation/payment/create`.
          minLength: 1
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - payment_id
      type: object
    PaymentInitiationPaymentTokenCreateResponse:
      additionalProperties: true
      description: PaymentInitiationPaymentTokenCreateResponse defines the response schema for `/payment_initiation/payment/token/create`
      properties:
        payment_token:
          description: A `payment_token` that can be provided to Link initialization to enter the payment initiation flow
          type: string
        payment_token_expiration_time:
          description: The date and time at which the token will expire, in ISO 8601 format. A `payment_token` expires after 15 minutes.
          format: date-time
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - payment_token
        - payment_token_expiration_time
        - request_id
      type: object
    PaymentInitiationRecipient:
      additionalProperties: true
      description: PaymentInitiationRecipient defines a payment initiation recipient
      properties:
        address:
          $ref: "#/components/schemas/PaymentInitiationAddress"
        bacs:
          $ref: "#/components/schemas/RecipientBACSNullable"
        emi_recipient_id:
          description: The EMI (E-Money Institution) recipient that this recipient is associated with, if any. This EMI recipient is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
          nullable: true
          type: string
        iban:
          description: The International Bank Account Number (IBAN) for the recipient.
          nullable: true
          type: string
        name:
          description: The name of the recipient.
          type: string
        recipient_id:
          description: The ID of the recipient.
          type: string
      required:
        - recipient_id
        - name
        - iban
        - bacs
      title: PaymentInitiationRecipient
      type: object
    PaymentInitiationRecipientCreateRequest:
      description: PaymentInitiationRecipientCreateRequest defines the request schema for `/payment_initiation/recipient/create`
      properties:
        address:
          $ref: "#/components/schemas/PaymentInitiationAddress"
        bacs:
          $ref: "#/components/schemas/RecipientBACSNullable"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        iban:
          description: The International Bank Account Number (IBAN) for the recipient. If BACS data is not provided, an IBAN is required.
          maxLength: 34
          minLength: 15
          nullable: true
          type: string
        name:
          description: The name of the recipient
          minLength: 1
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - name
      type: object
    PaymentInitiationRecipientCreateResponse:
      additionalProperties: true
      description: PaymentInitiationRecipientCreateResponse defines the response schema for `/payment_initation/recipient/create`
      properties:
        recipient_id:
          description: A unique ID identifying the recipient
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - recipient_id
        - request_id
      type: object
    PaymentInitiationRecipientGetRequest:
      description: PaymentInitiationRecipientGetRequest defines the request schema for `/payment_initiation/recipient/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        recipient_id:
          description: The ID of the recipient
          minLength: 1
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - recipient_id
      type: object
    PaymentInitiationRecipientGetResponse:
      additionalProperties: true
      allOf:
        - $ref: "#/components/schemas/PaymentInitiationRecipient"
        - properties:
            request_id:
              $ref: "#/components/schemas/RequestID"
          type: object
      description: PaymentInitiationRecipientGetResponse defines the response schema for `/payment_initiation/recipient/get`
      required:
        - recipient_id
        - name
        - request_id
        - iban
        - bacs
    PaymentInitiationRecipientListRequest:
      description: PaymentInitiationRecipientListRequest defines the request schema for `/payment_initiation/recipient/list`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      type: object
    PaymentInitiationRecipientListResponse:
      additionalProperties: true
      description: PaymentInitiationRecipientListResponse defines the response schema for `/payment_initiation/recipient/list`
      properties:
        recipients:
          description: An array of payment recipients created for Payment Initiation
          items:
            $ref: "#/components/schemas/PaymentInitiationRecipient"
          type: array
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - recipients
        - request_id
      type: object
    PaymentInitiationStandingOrderMetadata:
      additionalProperties: true
      description: Metadata specifically related to valid Payment Initiation standing order configurations for the institution.
      nullable: true
      properties:
        supports_standing_order_end_date:
          description: Indicates whether the institution supports closed-ended standing orders by providing an end date.
          type: boolean
        supports_standing_order_negative_execution_days:
          description: This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month.
          type: boolean
        valid_standing_order_intervals:
          description: A list of the valid standing order intervals supported by the institution.
          items:
            $ref: "#/components/schemas/PaymentScheduleInterval"
          type: array
      required:
        - supports_standing_order_end_date
        - supports_standing_order_negative_execution_days
        - valid_standing_order_intervals
      title: PaymentInitiationStandingOrderMetadata
      type: object
    PaymentMeta:
      additionalProperties: true
      description: |-
        Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.

        If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
      properties:
        by_order_of:
          description: The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
          nullable: true
          type: string
        payee:
          description: For transfers, the party that is receiving the transaction.
          nullable: true
          type: string
        payer:
          description: For transfers, the party that is paying the transaction.
          nullable: true
          type: string
        payment_method:
          description: The type of transfer, e.g. 'ACH'
          nullable: true
          type: string
        payment_processor:
          description: The name of the payment processor
          nullable: true
          type: string
        ppd_id:
          description: The ACH PPD ID for the payer.
          nullable: true
          type: string
        reason:
          description: The payer-supplied description of the transfer.
          nullable: true
          type: string
        reference_number:
          description: The transaction reference number supplied by the financial institution.
          nullable: true
          type: string
      required:
        - reference_number
        - ppd_id
        - payee
        - by_order_of
        - payer
        - payment_method
        - payment_processor
        - reason
      title: PaymentMeta
      type: object
    PaymentScheduleInterval:
      description: The frequency interval of the payment.
      enum:
        - WEEKLY
        - MONTHLY
      minLength: 1
      title: PaymentScheduleInterval
      type: string
    PaymentStatusUpdateWebhook:
      additionalProperties: true
      description: Fired when the status of a payment has changed.
      properties:
        adjusted_reference:
          description: The value of the reference sent to the bank after adjustment to pass bank validation rules.
          nullable: true
          type: string
        adjusted_start_date:
          description: The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in ISO 8601 format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
          format: date
          nullable: true
          type: string
        error:
          $ref: "#/components/schemas/Error"
        new_payment_status:
          description: |-
            The new status of the payment.

            `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

            `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

            `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

            `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

            `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

            `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

            `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

            `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
          enum:
            - PAYMENT_STATUS_INPUT_NEEDED
            - PAYMENT_STATUS_PROCESSING
            - PAYMENT_STATUS_INITIATED
            - PAYMENT_STATUS_COMPLETED
            - PAYMENT_STATUS_INSUFFICIENT_FUNDS
            - PAYMENT_STATUS_FAILED
            - PAYMENT_STATUS_BLOCKED
            - PAYMENT_STATUS_UNKNOWN
          type: string
        old_payment_status:
          description: |-
            The previous status of the payment.

            `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

            `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

            `PAYMENT_STATUS_INITIATED`: The payment has been successfully initiated and is considered complete.

            `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

            `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

            `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.

            `PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.

            `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
          enum:
            - PAYMENT_STATUS_INPUT_NEEDED
            - PAYMENT_STATUS_PROCESSING
            - PAYMENT_STATUS_INITIATED
            - PAYMENT_STATUS_COMPLETED
            - PAYMENT_STATUS_INSUFFICIENT_FUNDS
            - PAYMENT_STATUS_FAILED
            - PAYMENT_STATUS_BLOCKED
            - PAYMENT_STATUS_UNKNOWN
          type: string
        original_reference:
          description: The original value of the reference when creating the payment.
          nullable: true
          type: string
        original_start_date:
          description: The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
          format: date
          nullable: true
          type: string
        payment_id:
          description: The `payment_id` for the payment being updated
          type: string
        timestamp:
          description: The timestamp of the update, in ISO 8601 format, e.g. `"2017-09-14T14:42:19.350Z"`
          format: date-time
          type: string
        webhook_code:
          description: "`PAYMENT_STATUS_UPDATE`"
          type: string
        webhook_type:
          description: "`PAYMENT_INITIATION`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - payment_id
        - new_payment_status
        - old_payment_status
        - original_reference
        - original_start_date
        - adjusted_start_date
        - timestamp
      title: PaymentStatusUpdateWebhook
      type: object
      x-examples:
        example-1:
          adjusted_reference: Account Funding 99
          adjusted_start_date: 2017-09-15
          error: null
          new_payment_status: PAYMENT_STATUS_INITIATED
          old_payment_status: PAYMENT_STATUS_PROCESSING
          original_reference: Account Funding 99744
          original_start_date: 2017-09-14
          payment_id: payment-id-production-2ba30780-d549-4335-b1fe-c2a938aa39d2
          timestamp: 2017-09-14T14:42:19.350Z
          webhook_code: PAYMENT_STATUS_UPDATE
          webhook_type: PAYMENT_INITIATION
    Paystub:
      additionalProperties: true
      description: An object representing data extracted from the end user's paystub.
      properties:
        account_id:
          description: The account identifier for the account associated with this paystub.
          nullable: true
          type: string
        employee:
          $ref: "#/components/schemas/Employee"
        employer:
          $ref: "#/components/schemas/PaystubEmployer"
        income_breakdown:
          $ref: "#/components/schemas/IncomeBreakdown"
        pay_period_details:
          $ref: "#/components/schemas/PayPeriodDetails"
        ytd_earnings:
          allOf:
            - $ref: "#/components/schemas/PaystubYTDDetails"
      required:
        - employer
        - employee
        - pay_period_details
        - income_breakdown
        - ytd_earnings
      title: Paystub
      type: object
    PaystubDeduction:
      additionalProperties: true
      properties:
        is_pretax:
          description: "`true` if the deduction is pre-tax; `false` otherwise."
          nullable: true
          type: boolean
        total:
          description: The amount of the deduction.
          nullable: true
          type: number
        type:
          description: 'The description of the deduction, as provided on the paystub. For example: `"401(k)"`, `"FICA MED TAX"`.'
          nullable: true
          type: string
      required:
        - type
        - is_pretax
        - total
      title: PaystubDeduction
      type: object
    PaystubEmployer:
      additionalProperties: true
      properties:
        name:
          description: The name of the employer on the paystub.
          nullable: true
          type: string
      required:
        - name
      title: Employer
      type: object
    PaystubYTDDetails:
      additionalProperties: true
      description: The amount of income earned year to date, as based on paystub data.
      properties:
        gross_earnings:
          description: Year-to-date gross earnings.
          type: number
        net_earnings:
          description: Year-to-date net (take home) earnings.
          type: number
      required:
        - gross_earnings
        - net_earnings
      title: PaystubYTDDetails
      type: object
    PendingExpirationWebhook:
      additionalProperties: true
      description: Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode.
      properties:
        consent_expiration_time:
          description: The date and time at which the Item's access consent will expire, in ISO 8601 format
          format: date-time
          type: string
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`PENDING_EXPIRATION`"
          type: string
        webhook_type:
          description: "`ITEM`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - consent_expiration_time
      title: PendingExpirationWebhook
      type: object
      x-examples:
        example-1:
          consent_expiration_time: 2020-01-15T13:25:17.766Z
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          webhook_code: PENDING_EXPIRATION
          webhook_type: ITEM
    PhoneNumber:
      additionalProperties: true
      description: A phone number
      properties:
        data:
          description: The phone number.
          type: string
        primary:
          description: When `true`, identifies the phone number as the primary number on an account.
          type: boolean
        type:
          description: The type of phone number.
          enum:
            - home
            - work
            - office
            - mobile
            - mobile1
            - other
          type: string
      required:
        - data
        - primary
        - type
      title: PhoneNumber
      type: object
    ProcessorApexProcessorTokenCreateRequest:
      description: ProcessorApexProcessorTokenCreateRequest defines the request schema for `/processor/apex/processor_token/create`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        account_id:
          description: The `account_id` value obtained from the `onSuccess` callback in Link
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
        - account_id
      type: object
    ProcessorAuthGetRequest:
      description: ProcessorAuthGetRequest defines the request schema for `/processor/auth/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        processor_token:
          $ref: "#/components/schemas/ProcessorToken"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - processor_token
      type: object
    ProcessorAuthGetResponse:
      additionalProperties: true
      description: ProcessorAuthGetResponse defines the response schema for `/processor/auth/get`
      properties:
        account:
          $ref: "#/components/schemas/AccountBase"
        numbers:
          $ref: "#/components/schemas/ProcessorNumber"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
        - numbers
        - account
      type: object
    ProcessorBalanceGetRequest:
      description: ProcessorBalanceGetRequest defines the request schema for `/processor/balance/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        processor_token:
          $ref: "#/components/schemas/ProcessorToken"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - processor_token
      type: object
    ProcessorBalanceGetResponse:
      additionalProperties: true
      description: ProcessorBalanceGetResponse defines the response schema for `/processor/balance/get`
      properties:
        account:
          $ref: "#/components/schemas/AccountBase"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - account
        - request_id
      type: object
    ProcessorBankTransferCreateRequest:
      description: ProcessorBankTransferCreateRequest defines the request schema for `/processor/bank_transfer/create`
      properties:
        ach_class:
          $ref: "#/components/schemas/ACHClass"
        amount:
          description: The transfer amount (decimal string with two digits of precision e.g. "10.00").
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        custom_tag:
          description: An arbitrary string provided by the client for storage with the bank transfer. Will be returned in all `BankTransfer` objects. May be up to 100 characters.
          maxLength: 100
          nullable: true
          type: string
        description:
          description: The transfer description. Maximum of 10 characters.
          maxLength: 10
          type: string
        idempotency_key:
          description: |-
            A random key provided by the client, per unique bank transfer. Maximum of 50 characters.

            The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
          maxLength: 50
          type: string
        iso_currency_code:
          description: The currency of the transfer amount – should be set to "USD".
          type: string
        metadata:
          $ref: "#/components/schemas/BankTransferMetadata"
        network:
          $ref: "#/components/schemas/BankTransferNetwork"
        origination_account_id:
          description: Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.
          nullable: true
          type: string
        processor_token:
          $ref: "#/components/schemas/ProcessorToken"
        secret:
          $ref: "#/components/schemas/APISecret"
        type:
          $ref: "#/components/schemas/BankTransferType"
        user:
          $ref: "#/components/schemas/BankTransferUser"
      required:
        - idempotency_key
        - processor_token
        - type
        - network
        - amount
        - iso_currency_code
        - description
        - user
      title: ProcessorBankTransferCreateRequest
      type: object
    ProcessorBankTransferCreateResponse:
      additionalProperties: true
      description: ProcessorBankTransferCreateResponse defines the response schema for `/processor/bank_transfer/create`
      properties:
        bank_transfer:
          $ref: "#/components/schemas/BankTransfer"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - bank_transfer
        - request_id
      title: ProcessorBankTransferCreateResponse
      type: object
    ProcessorIdentityGetRequest:
      description: ProcessorIdentityGetRequest defines the request schema for `/processor/identity/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        processor_token:
          $ref: "#/components/schemas/ProcessorToken"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - processor_token
      type: object
    ProcessorIdentityGetResponse:
      additionalProperties: true
      description: ProcessorIdentityGetResponse defines the response schema for `/processor/identity/get`
      properties:
        account:
          $ref: "#/components/schemas/AccountIdentity"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - account
        - request_id
      type: object
    ProcessorNumber:
      additionalProperties: true
      description: An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.
      properties:
        ach:
          $ref: "#/components/schemas/NumbersACHNullable"
        bacs:
          $ref: "#/components/schemas/NumbersBACSNullable"
        eft:
          $ref: "#/components/schemas/NumbersEFTNullable"
        international:
          $ref: "#/components/schemas/NumbersInternationalNullable"
      type: object
    ProcessorStripeBankAccountTokenCreateRequest:
      description: ProcessorStripeBankAccountTokenCreateRequest defines the request schema for `/processor/stripe/bank_account/create`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        account_id:
          description: The `account_id` value obtained from the `onSuccess` callback in Link
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
        - account_id
      type: object
    ProcessorStripeBankAccountTokenCreateResponse:
      additionalProperties: true
      description: ProcessorStripeBankAccountTokenCreateResponse defines the response schema for `/processor/stripe/bank_account/create`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
        stripe_bank_account_token:
          description: A token that can be sent to Stripe for use in making API calls to Plaid
          type: string
      required:
        - stripe_bank_account_token
        - request_id
      type: object
    ProcessorToken:
      description: "The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`"
      title: ProcessorToken
      type: string
    ProcessorTokenCreateRequest:
      description: ProcessorTokenCreateRequest defines the request schema for `/processor/token/create`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        account_id:
          description: The `account_id` value obtained from the `onSuccess` callback in Link
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        processor:
          description: The processor you are integrating with.
          enum:
            - achq
            - alpaca
            - astra
            - check
            - checkbook
            - circle
            - drivewealth
            - dwolla
            - galileo
            - lithic
            - modern_treasury
            - moov
            - ocrolus
            - prime_trust
            - rize
            - sila_money
            - sbv_api
            - unit
            - vesta
            - vopay
            - wyre
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
        - account_id
        - processor
      type: object
    ProcessorTokenCreateResponse:
      additionalProperties: true
      description: ProcessorTokenCreateResponse defines the response schema for `/processor/token/create` and `/processor/apex/processor_token/create`
      properties:
        processor_token:
          description: The `processor_token` that can then be used by the Plaid partner to make API requests
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - processor_token
        - request_id
      type: object
    ProductAccess:
      additionalProperties: true
      description: The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
      properties:
        auth:
          default: true
          description: Allow access to account number details. If unset, defaults to `true`.
          nullable: true
          type: boolean
        identity:
          default: true
          description: Allow access to the Identity product (name, email, phone, address). If unset, defaults to `true`.
          nullable: true
          type: boolean
        statements:
          default: true
          description: Allow access to statements. If unset, defaults to `true`.
          nullable: true
          type: boolean
        transactions:
          default: true
          description: Allow access to transaction details. If unset, defaults to `true`.
          nullable: true
          type: boolean
      type: object
    ProductStatus:
      additionalProperties: true
      description: A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
      properties:
        breakdown:
          $ref: "#/components/schemas/ProductStatusBreakdown"
        last_status_change:
          description: ISO 8601 formatted timestamp of the last status change for the institution.
          format: date-time
          type: string
        status:
          description: |-
            `HEALTHY`: the majority of requests are successful
            `DEGRADED`: only some requests are successful
            `DOWN`: all requests are failing
          enum:
            - HEALTHY
            - DEGRADED
            - DOWN
          type: string
      required:
        - status
        - last_status_change
        - breakdown
      title: ProductStatus
      type: object
    ProductStatusBreakdown:
      additionalProperties: true
      description: A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1.
      properties:
        error_institution:
          description: The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal.
          type: number
        error_plaid:
          description: |
            The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
          type: number
        refresh_interval:
          description: The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.
          enum:
            - NORMAL
            - DELAYED
            - STOPPED
          type: string
        success:
          description: The percentage of login attempts that are successful, expressed as a decimal.
          type: number
      required:
        - success
        - error_plaid
        - error_institution
      title: StatusBreakdown
      type: object
    Products:
      description: A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.
      enum:
        - assets
        - auth
        - balance
        - identity
        - investments
        - liabilities
        - payment_initiation
        - transactions
        - credit_details
        - income
        - income_verification
        - deposit_switch
        - standing_orders
      title: Products
      type: string
    ProjectedIncomeSummaryFieldNumber:
      allOf:
        - $ref: "#/components/schemas/IncomeSummaryFieldNumber"
        - additionalProperties: true
          description: The employee's estimated annual salary, as derived from information reported on the paystub.
          type: object
    Recaptcha_RequiredError:
      additionalProperties: true
      description: The request was flagged by Plaid's fraud system, and requires additional verification to ensure they are not a bot.
      properties:
        common_causes:
          description: Plaid's fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.
          type: string
        display_message:
          type: string
        error_code:
          description: RECAPTCHA_REQUIRED
          type: string
        error_type:
          description: RECAPTCHA_ERROR
          type: string
        http_code:
          description: "400"
          type: string
        link_user_experience:
          description: Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user's request is resubmitted and they are directed to the next Item creation step.
          type: string
        troubleshooting_steps:
          description: |-
            Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.

            If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`
          type: string
      required:
        - error_type
        - error_code
        - display_message
        - http_code
        - link_user_experience
        - common_causes
        - troubleshooting_steps
      title: Recaptcha_RequiredError
      type: object
      x-examples:
        example-1:
          display_message: null
          error_code: RECAPTCHA_REQUIRED
          error_message: This request requires additional verification. Please resubmit the request after completing the challenge
          error_type: RECAPTCHA_ERROR
          http_code: 400
          request_id: HNTDNrA8F1shFEW
    RecipientBACS:
      additionalProperties: true
      description: An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
      nullable: true
      properties:
        account:
          description: The account number of the account. Maximum of 10 characters.
          maxLength: 10
          minLength: 1
          type: string
        sort_code:
          description: The 6-character sort code of the account.
          maxLength: 6
          minLength: 6
          type: string
      title: RecipientBACS
      type: object
    RecipientBACSNullable:
      allOf:
        - $ref: "#/components/schemas/RecipientBACS"
        - additionalProperties: true
          description: The account number and sort code of the recipient's account.
          type: object
      nullable: true
    RequestID:
      description: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
      title: RequestID
      type: string
    RequestedScopes:
      description: Scope of required and optional account features or content from a ConnectedApplication.
      properties:
        account_filters:
          $ref: "#/components/schemas/AccountFilter"
        account_selection_cardinality:
          $ref: "#/components/schemas/AccountSelectionCardinality"
        optional_product_access:
          $ref: "#/components/schemas/ProductAccess"
        required_product_access:
          $ref: "#/components/schemas/ProductAccess"
      required:
        - required_product_access
        - optional_product_access
        - account_selection_cardinality
      type: object
    SandboxBankTransferFireWebhookRequest:
      description: SandboxBankTransferFireWebhookRequest defines the request schema for `/sandbox/bank_transfer/fire_webhook`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
        webhook:
          description: The URL to which the webhook should be sent.
          type: string
      required:
        - webhook
      title: SandboxBankTransferFireWebhookRequest
      type: object
    SandboxBankTransferFireWebhookResponse:
      description: SandboxBankTransferFireWebhookResponse defines the response schema for `/sandbox/bank_transfer/fire_webhook`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: SandboxBankTransferFireWebhookResponse
      type: object
    SandboxBankTransferSimulateRequest:
      description: SandboxBankTransferSimulateRequest defines the request schema for `/sandbox/bank_transfer/simulate`
      properties:
        bank_transfer_id:
          $ref: "#/components/schemas/BankTransferID"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        event_type:
          description: |
            The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.

            An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:

            `pending` --> `failed`

            `pending` --> `posted`

            `posted` --> `reversed`
          type: string
        failure_reason:
          $ref: "#/components/schemas/BankTransferFailure"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - bank_transfer_id
        - event_type
      title: SandboxBankTransferSimulateRequest
      type: object
    SandboxBankTransferSimulateResponse:
      additionalProperties: true
      description: SandboxBankTransferSimulateResponse defines the response schema for `/sandbox/bank_transfer/simulate`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: SandboxBankTransferSimulateResponse
      type: object
    SandboxIncomeFireWebhookRequest:
      description: SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        income_verification_id:
          description: The ID of the verification.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
        verification_status:
          description: |-
            `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed.

            `VERIFICATION_STATUS_DOCUMENT_REJECTED`: The documentation uploaded by the end user was recognized as a supported file format, but not recognized as a valid paystub.

            `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
          enum:
            - VERIFICATION_STATUS_PROCESSING_COMPLETE
            - VERIFICATION_STATUS_DOCUMENT_REJECTED
            - VERIFICATION_STATUS_PROCESSING_FAILED
          type: string
        webhook:
          description: The URL to which the webhook should be sent.
          type: string
      required:
        - income_verification_id
        - webhook
        - verification_status
      title: SandboxIncomeFireWebhookRequest
      type: object
    SandboxIncomeFireWebhookResponse:
      description: SandboxIncomeFireWebhookResponse defines the response schema for `/sandbox/income/fire_webhook`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: SandboxIncomeFireWebhookResponse
      type: object
    SandboxItemFireWebhookRequest:
      description: SandboxItemFireWebhookRequest defines the request schema for `/sandbox/item/fire_webhook`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
        webhook_code:
          description: |-
            The following values for `webhook_code` are supported:

            * `DEFAULT_UPDATE`
          enum:
            - DEFAULT_UPDATE
          type: string
      required:
        - access_token
        - webhook_code
      type: object
    SandboxItemFireWebhookResponse:
      additionalProperties: true
      description: SandboxItemFireWebhookResponse defines the response schema for `/sandbox/item/fire_webhook`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
        webhook_fired:
          description: Value is `true`  if the test` webhook_code`  was successfully fired.
          type: boolean
      required:
        - webhook_fired
        - request_id
      type: object
    SandboxItemResetLoginRequest:
      description: SandboxItemResetLoginRequest defines the request schema for `/sandbox/item/reset_login`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    SandboxItemResetLoginResponse:
      additionalProperties: true
      description: SandboxItemResetLoginResponse defines the response schema for `/sandbox/item/reset_login`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
        reset_login:
          description: "`true` if the call succeeded"
          type: boolean
      required:
        - reset_login
        - request_id
      type: object
    SandboxItemSetVerificationStatusRequest:
      description: SandboxItemSetVerificationStatusRequest defines the request schema for `/sandbox/item/set_verification_status`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        account_id:
          description: The `account_id` of the account whose verification status is to be modified
          type: string
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
        verification_status:
          description: The verification status to set the account to.
          enum:
            - automatically_verified
            - verification_expired
          type: string
      required:
        - access_token
        - account_id
        - verification_status
      type: object
    SandboxItemSetVerificationStatusResponse:
      additionalProperties: true
      description: SandboxItemSetVerificationStatusResponse defines the response schema for `/sandbox/item/set_verification_status`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      type: object
    SandboxOauthSelectAccountsRequest:
      description: Defines the request schema for `sandbox/oauth/select_accounts`
      properties:
        accounts:
          items:
            type: string
          type: array
        oauth_state_id:
          type: string
      required:
        - oauth_state_id
        - accounts
      title: SandboxOauthSelectAccountsRequest
      type: object
    SandboxOauthSelectAccountsResponse:
      description: Defines the response schema for `/sandbox/oauth/select_accounts`
      title: SandboxOauthSelectAccountsResponse
      type: object
    SandboxOverridePassword:
      default: pass_good
      description: Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.
      nullable: true
      type: string
    SandboxOverrideUsername:
      default: user_good
      description: Test username to use for the creation of the Sandbox Item. Default value is `user_good`.
      nullable: true
      type: string
    SandboxProcessorTokenCreateRequest:
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        institution_id:
          description: The ID of the institution the Item will be associated with
          type: string
        options:
          $ref: "#/components/schemas/SandboxProcessorTokenCreateRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - institution_id
      type: object
    SandboxProcessorTokenCreateRequestOptions:
      description: An optional set of options to be used when configuring the Item. If specified, must not be `null`.
      properties:
        override_password:
          $ref: "#/components/schemas/SandboxOverridePassword"
        override_username:
          $ref: "#/components/schemas/SandboxOverrideUsername"
      type: object
    SandboxProcessorTokenCreateResponse:
      additionalProperties: true
      description: ""
      properties:
        processor_token:
          description: A processor token that can be used to call the `/processor/` endpoints.
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - processor_token
        - request_id
      type: object
    SandboxPublicTokenCreateRequest:
      description: SandboxPublicTokenCreateRequest defines the request schema for `/sandbox/public_token/create`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        initial_products:
          description: The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.
          items:
            $ref: "#/components/schemas/Products"
          minItems: 1
          type: array
        institution_id:
          description: The ID of the institution the Item will be associated with
          type: string
        options:
          $ref: "#/components/schemas/SandboxPublicTokenCreateRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - institution_id
        - initial_products
      type: object
    SandboxPublicTokenCreateRequestOptions:
      description: An optional set of options to be used when configuring the Item. If specified, must not be `null`.
      properties:
        override_password:
          $ref: "#/components/schemas/SandboxOverridePassword"
        override_username:
          $ref: "#/components/schemas/SandboxOverrideUsername"
        transactions:
          $ref: "#/components/schemas/SandboxPublicTokenCreateRequestOptionsTransactions"
        webhook:
          description: Specify a webhook to associate with the new Item.
          type: string
      type: object
    SandboxPublicTokenCreateRequestOptionsTransactions:
      description: SandboxPublicTokenCreateRequestOptionsTransactions is an optional set of parameters corresponding to transactions options.
      properties:
        end_date:
          description: The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
        start_date:
          description: The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
      title: SandboxPublicTokenCreateRequestOptionsTransactions
      type: object
    SandboxPublicTokenCreateResponse:
      additionalProperties: true
      description: SandboxPublicTokenCreateResponse defines the response schema for `/sandbox/public_token/create`
      properties:
        public_token:
          description: A public token that can be exchanged for an access token using `/item/public_token/exchange`
          type: string
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - public_token
        - request_id
      type: object
    Scopes:
      description: The scopes object
      properties:
        accounts:
          items:
            $ref: "#/components/schemas/AccountAccess"
          type: array
        new_accounts:
          default: true
          description: Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.
          nullable: true
          type: boolean
        product_access:
          $ref: "#/components/schemas/ProductAccess"
      type: object
    ScopesNullable:
      allOf:
        - $ref: "#/components/schemas/Scopes"
        - additionalProperties: true
          type: object
      nullable: true
    Security:
      additionalProperties: true
      description: Contains details about a security
      properties:
        close_price:
          description: Price of the security at the close of the previous trading session. `null` for non-public securities. If the security is a foreign currency or a cryptocurrency this field will be updated daily and will be priced in USD.
          nullable: true
          type: number
        close_price_as_of:
          description: Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
          format: date
          nullable: true
          type: string
        cusip:
          description: 9-character CUSIP, an identifier assigned to North American securities.
          nullable: true
          type: string
        institution_id:
          description: If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
          nullable: true
          type: string
        institution_security_id:
          description: An identifier given to the security by the institution
          nullable: true
          type: string
        is_cash_equivalent:
          description: Indicates that a security is a highly liquid asset and can be treated like cash.
          nullable: true
          type: boolean
        isin:
          description: 12-character ISIN, a globally unique securities identifier.
          nullable: true
          type: string
        iso_currency_code:
          description: The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
          type: string
        name:
          description: A descriptive name for the security, suitable for display.
          nullable: true
          type: string
        proxy_security_id:
          description: In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
          nullable: true
          type: string
        security_id:
          description: A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive.
          type: string
        sedol:
          description: 7-character SEDOL, an identifier assigned to securities in the UK.
          nullable: true
          type: string
        ticker_symbol:
          description: The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.
          nullable: true
          type: string
        type:
          description: |-
            The security type of the holding. Valid security types are:

            `cash`: Cash, currency, and money market funds

            `derivative`: Options, warrants, and other derivative instruments

            `equity`: Domestic and foreign equities

            `etf`: Multi-asset exchange-traded investment funds

            `fixed income`: Bonds and certificates of deposit (CDs)

            `loan`: Loans and loan receivables.

            `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors.

            `other`: Unknown or other investment types
          nullable: true
          type: string
        unofficial_currency_code:
          description: |-
            The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
          type: string
      required:
        - cusip
        - sedol
        - isin
        - institution_security_id
        - institution_id
        - proxy_security_id
        - name
        - ticker_symbol
        - is_cash_equivalent
        - close_price
        - close_price_as_of
        - iso_currency_code
        - unofficial_currency_code
        - security_id
        - type
      title: Security
      type: object
    SenderBACSNullable:
      allOf:
        - $ref: "#/components/schemas/RecipientBACS"
        - additionalProperties: true
          description: The account number and sort code of the sender's account, if specified in the `/payment_initiation/payment/create` call.
          type: object
      nullable: true
    ServicerAddressData:
      additionalProperties: true
      description: The address of the student loan servicer. This is generally the remittance address to which payments should be sent.
      properties:
        city:
          description: The full city name
          nullable: true
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
          type: string
        postal_code:
          description: The postal code
          nullable: true
          type: string
        region:
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
          type: string
        street:
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
          nullable: true
          type: string
      required:
        - city
        - region
        - street
        - postal_code
        - country
      title: ServicerAddressData
      type: object
    SignalAddressData:
      additionalProperties: true
      description: Data about the components comprising an address.
      nullable: true
      properties:
        city:
          description: The full city name
          type: string
        country:
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
          type: string
        postal_code:
          description: The postal code
          nullable: true
          type: string
        region:
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
          type: string
        street:
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
          type: string
      title: AddressData
      type: object
    SignalDecisionReportRequest:
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        client_transaction_id:
          description: Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
          type: string
        initiated:
          description: "`true` if the ACH transaction was initiated, `false` otherwise."
          type: boolean
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - client_transaction_id
        - initiated
      title: SignalDecisionReportRequest
      type: object
    SignalDecisionReportResponse:
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: SignalDecisionReportResponse
      type: object
    SignalDevice:
      description: Details about the end user's device
      properties:
        ip_address:
          description: The IP address of the device that initiated the transaction
          nullable: true
          type: string
        user_agent:
          description: The user agent of the device that initiated the transaction (e.g. "Mozilla/5.0")
          nullable: true
          type: string
      title: SignalEvaluateDevice
      type: object
    SignalEvaluateCoreAttributes:
      description: The core attributes object contains additional data that can be used to assess the ACH return risk, such as past ACH return events, balance/transaction history, the Item’s connection history in the Plaid network, and identity change history.
      properties:
        address_change_count_28d:
          description: The number of times the account's addresses on file have changed over the past 28 days
          nullable: true
          type: integer
        address_change_count_90d:
          description: The number of times the account's addresses on file have changed over the past 90 days
          nullable: true
          type: integer
        available_balance:
          description: Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
          nullable: true
          type: number
        balance_last_updated:
          description: Timestamp in ISO-8601 format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.
          format: date-time
          nullable: true
          type: string
        current_balance:
          description: Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.
          nullable: true
          type: number
        days_since_first_plaid_connection:
          description: The number of days since the first time the Item was connected to an application via Plaid
          nullable: true
          type: integer
        days_with_negative_balance_count_90d:
          description: The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance
          nullable: true
          type: integer
        email_change_count_28d:
          description: The number of times the account's email addresses on file have changed over the past 28 days
          nullable: true
          type: integer
        email_change_count_90d:
          description: The number of times the account's email addresses on file have changed over the past 90 days
          nullable: true
          type: integer
        is_savings_or_money_market_account:
          description: Indicates if the ACH transaction funding account is a savings/money market account
          type: boolean
        nsf_overdraft_transactions_count_30d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.
          type: integer
        nsf_overdraft_transactions_count_60d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.
          type: integer
        nsf_overdraft_transactions_count_7d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.
          type: integer
        nsf_overdraft_transactions_count_90d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.
          type: integer
        p10_eod_balance_30d:
          description: The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
          nullable: true
          type: number
        p10_eod_balance_60d:
          description: The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
          nullable: true
          type: number
        p10_eod_balance_90d:
          description: The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
          nullable: true
          type: number
        p50_credit_transactions_amount_28d:
          description: The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
          type: number
        p50_debit_transactions_amount_28d:
          description: The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
          type: number
        p90_eod_balance_30d:
          description: The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
          nullable: true
          type: number
        p90_eod_balance_60d:
          description: The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
          nullable: true
          type: number
        p90_eod_balance_90d:
          description: The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
          nullable: true
          type: number
        p95_credit_transactions_amount_28d:
          description: The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
          type: number
        p95_debit_transactions_amount_28d:
          description: The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
          type: number
        phone_change_count_28d:
          description: The number of times the account's phone numbers on file have changed over the past 28 days
          nullable: true
          type: integer
        phone_change_count_90d:
          description: The number of times the account's phone numbers on file have changed over the past 90 days
          nullable: true
          type: integer
        plaid_connections_count_30d:
          description: The number of times the Item has been connected to applications via Plaid over the past 30 days
          nullable: true
          type: integer
        plaid_connections_count_7d:
          description: The number of times the Item has been connected to applications via Plaid over the past 7 days
          nullable: true
          type: integer
        total_credit_transactions_amount_10d:
          description: The total credit (inflow) transaction amount over the past 10 days from the account that will be debited
          type: number
        total_debit_transactions_amount_10d:
          description: The total debit (outflow) transaction amount over the past 10 days from the account that will be debited
          type: number
        total_plaid_connections_count:
          description: The total number of times the Item has been connected to applications via Plaid
          nullable: true
          type: integer
        unauthorized_transactions_count_30d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.
          type: integer
        unauthorized_transactions_count_60d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.
          type: integer
        unauthorized_transactions_count_7d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.
          type: integer
        unauthorized_transactions_count_90d:
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.
          type: integer
      title: SignalEvaluateCoreAttributes
      type: object
    SignalEvaluateRequest:
      additionalProperties: true
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        account_id:
          description: The `account_id` of the account whose verification status is to be modified
          type: string
        amount:
          description: The transaction amount, in USD (e.g. `102.05`)
          type: number
        client_id:
          $ref: "#/components/schemas/APIClientID"
        client_transaction_id:
          description: The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
          maxLength: 36
          type: string
        client_user_id:
          description: A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. The max length for this field is 36 characters.
          maxLength: 36
          type: string
        device:
          $ref: "#/components/schemas/SignalDevice"
        secret:
          $ref: "#/components/schemas/APISecret"
        user:
          $ref: "#/components/schemas/SignalUser"
      required:
        - access_token
        - account_id
        - client_transaction_id
        - amount
      title: SignalEvaluateRequest
      type: object
    SignalEvaluateResponse:
      additionalProperties: true
      properties:
        core_attributes:
          $ref: "#/components/schemas/SignalEvaluateCoreAttributes"
        request_id:
          $ref: "#/components/schemas/RequestID"
        scores:
          $ref: "#/components/schemas/SignalScores"
      required:
        - request_id
        - scores
        - core_attributes
      title: SignalEvaluateResponse
      type: object
    SignalPersonName:
      description: The user's legal name
      nullable: true
      properties:
        family_name:
          description: The user's family name / surname
          nullable: true
          type: string
        given_name:
          description: The user's given name. If the user has a one-word name, it should be provided in this field.
          nullable: true
          type: string
        middle_name:
          description: The user's middle name
          nullable: true
          type: string
        prefix:
          description: The user's name prefix (e.g. "Mr.")
          nullable: true
          type: string
        suffix:
          description: The user's name suffix (e.g. "II")
          nullable: true
          type: string
      title: SignalPersonName
      type: object
    SignalReturnReportRequest:
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        client_transaction_id:
          description: Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
          type: string
        return_code:
          description: Must be a valid ACH return code (e.g. "R01")
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - client_transaction_id
        - return_code
      title: SignalReturnReportRequest
      type: object
    SignalReturnReportResponse:
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      title: SignalReturnReportResponse
      type: object
    SignalScore:
      description: "A score from 0-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood."
      maximum: 100
      minimum: 0
      type: integer
    SignalScores:
      additionalProperties: true
      properties:
        bank_initiated_return_risk:
          $ref: "#/components/schemas/BankInitiatedReturnRisk"
        customer_initiated_return_risk:
          $ref: "#/components/schemas/CustomerInitiatedReturnRisk"
      title: SignalEvaluateScores
      type: object
    SignalUser:
      description: Details about the end user initiating the transaction (i.e., the account holder).
      properties:
        address:
          $ref: "#/components/schemas/SignalAddressData"
        email_address:
          description: The user's email address.
          nullable: true
          type: string
        name:
          $ref: "#/components/schemas/SignalPersonName"
        phone_number:
          description: "The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\""
          nullable: true
          type: string
      title: SignalUser
      type: object
    StandaloneAccountType:
      additionalProperties: true
      description: The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
      properties:
        credit:
          $ref: "#/components/schemas/CreditAccount"
        depository:
          $ref: "#/components/schemas/DepositoryAccount"
        investment:
          $ref: "#/components/schemas/InvestmentAccountSubtype"
        loan:
          $ref: "#/components/schemas/LoanAccount"
        other:
          description: "Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets."
          type: string
      required:
        - depository
        - credit
        - loan
        - investment
        - other
      title: StandaloneAccountType
      type: object
    StandaloneCurrencyCodeList:
      additionalProperties: true
      description: The following currency codes are supported by Plaid.
      properties:
        iso_currency_code:
          description: Plaid supports all ISO 4217 currency codes.
          type: string
        unofficial_currency_code:
          $ref: "#/components/schemas/UnofficialCurrencyCodeList"
      required:
        - iso_currency_code
        - unofficial_currency_code
      title: StandaloneCurrencyCodeList
      type: object
    StandaloneInvestmentTransactionSubtype:
      additionalProperties: true
      description: Valid subtypes for Investment transaction subtypes. Note that transactions representing inflow of cash will appear as negative amounts, outflow of cash will appear as positive amounts.
      properties:
        account fee:
          description: Fees paid for account maintenance
          type: string
        assignment:
          description: Assignment of short option holding
          type: string
        buy:
          description: Purchase to open or increase a position
          type: string
        buy to cover:
          description: Purchase to close a short position
          type: string
        contribution:
          description: Inflow of assets into a tax-advantaged account
          type: string
        deposit:
          description: Inflow of cash into an account
          type: string
        distribution:
          description: Outflow of assets from a tax-advantaged account
          type: string
        dividend:
          description: Inflow of cash from a dividend
          type: string
        dividend reinvestment:
          description: Purchase using proceeds from a cash dividend
          type: string
        exercise:
          description: Exercise of an option or warrant contract
          type: string
        expire:
          description: |
            Expiration of an option or warrant contract
          type: string
        fund fee:
          description: Fees paid for administration of a mutual fund or other pooled investment vehicle
          type: string
        interest:
          description: Inflow of cash from interest
          type: string
        interest receivable:
          description: Inflow of cash from interest receivable
          type: string
        interest reinvestment:
          description: Purchase using proceeds from a cash interest payment
          type: string
        legal fee:
          description: Fees paid for legal charges or services
          type: string
        loan payment:
          description: Inflow of cash related to payment on a loan
          type: string
        long-term capital gain:
          description: Long-term capital gain received as cash
          type: string
        long-term capital gain reinvestment:
          description: Purchase using long-term capital gain cash proceeds
          type: string
        management fee:
          description: Fees paid for investment management of a mutual fund or other pooled investment vehicle
          type: string
        margin expense:
          description: Fees paid for maintaining margin debt
          type: string
        merger:
          description: Stock exchanged at a pre-defined ratio as part of a merger between companies
          type: string
        miscellaneous fee:
          description: Fee associated with various account or holding actions
          type: string
        non-qualified dividend:
          description: Inflow of cash from a non-qualified dividend
          type: string
        non-resident tax:
          description: Taxes paid on behalf of the investor for non-residency in investment jurisdiction
          type: string
        pending credit:
          description: Pending inflow of cash
          type: string
        pending debit:
          description: Pending outflow of cash
          type: string
        qualified dividend:
          description: Inflow of cash from a qualified dividend
          type: string
        rebalance:
          description: Rebalancing transaction (buy or sell) with no net impact to value in the account
          type: string
        return of principal:
          description: Repayment of loan principal
          type: string
        sell:
          description: Sell to close or decrease an existing holding
          type: string
        sell short:
          description: Sell to open a short position
          type: string
        short-term capital gain:
          description: Short-term capital gain received as cash
          type: string
        short-term capital gain reinvestment:
          description: Purchase using short-term capital gain cash proceeds
          type: string
        spin off:
          description: Inflow of stock from spin-off transaction of an existing holding
          type: string
        split:
          description: Inflow of stock from a forward split of an existing holding
          type: string
        stock distribution:
          description: Inflow of stock from a distribution
          type: string
        tax:
          description: Taxes paid on behalf of the investor
          type: string
        tax withheld:
          description: Taxes withheld on behalf of the customer
          type: string
        transfer:
          description: Movement of assets into or out of an account
          type: string
        transfer fee:
          description: Fees incurred for transfer of a holding or account
          type: string
        trust fee:
          description: Fees related to adminstration of a trust account
          type: string
        unqualified gain:
          description: Unqualified capital gain received as cash
          type: string
        withdrawal:
          description: Outflow of cash from an account
          type: string
      title: StandaloneInvestmentTransactionSubtype
      type: object
    StandaloneInvestmentTransactionType:
      additionalProperties: true
      description: Valid values for investment transaction types
      properties:
        buy:
          description: Buying an investment
          type: string
        cancel:
          description: A cancellation of a pending transaction
          type: string
        cash:
          description: Activity that modifies a cash position
          type: string
        fee:
          description: Fees on the account, e.g. commission, bookkeeping, options-related.
          type: string
        sell:
          description: Selling an investment
          type: string
        transfer:
          description: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
          type: string
      required:
        - buy
        - sell
        - cancel
        - cash
        - fee
        - transfer
      title: StandaloneInvestmentTransactionType
      type: object
    StudentLoan:
      additionalProperties: true
      description: Contains details about a student loan account
      properties:
        account_id:
          description: The ID of the account that this liability belongs to.
          nullable: true
          type: string
        account_number:
          description: The account number of the loan. For some institutions, this may be a masked version of the number (e.g., the last 4 digits instead of the entire number).
          nullable: true
          type: string
        disbursement_dates:
          description: The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          items:
            format: date
            type: string
          nullable: true
          type: array
        expected_payoff_date:
          description: The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        guarantor:
          description: The guarantor of the student loan.
          nullable: true
          type: string
        interest_rate_percentage:
          description: The interest rate on the loan as a percentage.
          type: number
        is_overdue:
          description: "`true` if a payment is currently overdue. Availability for this field is limited."
          nullable: true
          type: boolean
        last_payment_amount:
          description: The amount of the last payment.
          nullable: true
          type: number
        last_payment_date:
          description: The date of the last payment. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        last_statement_issue_date:
          description: The date of the last statement. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        loan_name:
          description: The type of loan, e.g., "Consolidation Loans".
          nullable: true
          type: string
        loan_status:
          $ref: "#/components/schemas/StudentLoanStatus"
        minimum_payment_amount:
          description: |-
            The minimum payment due for the next billing cycle. There are some exceptions:
            Some institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (`ins_116950`), Nelnet (`ins_116528`), EdFinancial Services (`ins_116304`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`).
            Firstmark (`ins_116295` ) will display as $0 if there is an autopay program in effect.
          nullable: true
          type: number
        next_payment_due_date:
          description: The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        origination_date:
          description: |
            The date on which the loan was initially lent. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        origination_principal_amount:
          description: The original principal balance of the loan.
          nullable: true
          type: number
        outstanding_interest_amount:
          description: The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.
          nullable: true
          type: number
        payment_reference_number:
          description: The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match a`ccount_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.
          nullable: true
          type: string
        pslf_status:
          $ref: "#/components/schemas/PSLFStatus"
        repayment_plan:
          $ref: "#/components/schemas/StudentRepaymentPlan"
        sequence_number:
          description: The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.
          nullable: true
          type: string
        servicer_address:
          $ref: "#/components/schemas/ServicerAddressData"
        ytd_interest_paid:
          description: The year to date (YTD) interest paid. Availability for this field is limited.
          nullable: true
          type: number
        ytd_principal_paid:
          description: The year to date (YTD) principal paid. Availability for this field is limited.
          nullable: true
          type: number
      required:
        - account_id
        - account_number
        - disbursement_dates
        - expected_payoff_date
        - guarantor
        - interest_rate_percentage
        - is_overdue
        - last_payment_amount
        - last_payment_date
        - last_statement_issue_date
        - loan_name
        - loan_status
        - minimum_payment_amount
        - next_payment_due_date
        - origination_date
        - origination_principal_amount
        - outstanding_interest_amount
        - payment_reference_number
        - pslf_status
        - repayment_plan
        - sequence_number
        - servicer_address
        - ytd_interest_paid
        - ytd_principal_paid
      title: StudentLoan
      type: object
    StudentLoanRepaymentModel:
      additionalProperties: true
      description: Student loan repayment information used to configure Sandbox test data for the Liabilities product
      properties:
        non_repayment_months:
          description: Configures the number of months before repayment starts.
          type: number
        repayment_months:
          description: Configures the number of months of repayments before the loan is paid off.
          type: number
        type:
          description: The only currently supported value for this field is `standard`.
          type: string
      required:
        - type
        - non_repayment_months
        - repayment_months
      title: StudentLoanRepaymentModel
      type: object
    StudentLoanStatus:
      additionalProperties: true
      description: An object representing the status of the student loan
      properties:
        end_date:
          description: |
            The date until which the loan will be in its current status. Dates are returned in an ISO 8601 format (YYYY-MM-DD).
          format: date
          nullable: true
          type: string
        type:
          description: The status type of the student loan
          enum:
            - cancelled
            - charged off
            - claim
            - consolidated
            - deferment
            - delinquent
            - discharged
            - extension
            - forbearance
            - in grace
            - in military
            - in school
            - not fully disbursed
            - other
            - paid in full
            - refunded
            - repayment
            - transferred
          nullable: true
          type: string
      required:
        - end_date
        - type
      title: StudentLoanStatus
      type: object
    StudentRepaymentPlan:
      additionalProperties: true
      description: An object representing the repayment plan for the student loan
      properties:
        description:
          description: The description of the repayment plan as provided by the servicer.
          nullable: true
          type: string
        type:
          description: The type of the repayment plan.
          enum:
            - extended graduated
            - extended standard
            - graduated
            - income-contingent repayment
            - income-based repayment
            - interest-only
            - other
            - pay as you earn
            - revised pay as you earn
            - standard
            - null
          nullable: true
          type: string
      required:
        - description
        - type
      title: StudentRepaymentPlan
      type: object
    Transaction:
      allOf:
        - $ref: "#/components/schemas/TransactionBase"
        - additionalProperties: true
          properties:
            authorized_date:
              description: The date that the transaction was authorized. Dates are returned in an ISO 8601 format ( `YYYY-MM-DD` ).
              format: date
              nullable: true
              type: string
            authorized_datetime:
              description: |-
                Date and time when a transaction was authorized in ISO 8601 format ( `YYYY-MM-DDTHH:mm:ssZ` ).

                This field is only populated for UK institutions. For institutions in other countries, will be `null`.
              format: date-time
              nullable: true
              type: string
            datetime:
              description: |-
                Date and time when a transaction was posted in ISO 8601 format ( `YYYY-MM-DDTHH:mm:ssZ` ).

                This field is only populated for UK institutions. For institutions in other countries, will be `null`.
              format: date-time
              nullable: true
              type: string
            merchant_name:
              description: The merchant name, as extracted by Plaid from the `name` field.
              nullable: true
              type: string
            payment_channel:
              description: |
                The channel used to make a payment.
                `online:` transactions that took place online.

                `in store:` transactions that were made at a physical location.

                `other:` transactions that relate to banks, e.g. fees or deposits.

                This field replaces the `transaction_type` field.
              enum:
                - online
                - in store
                - other
              type: string
            transaction_code:
              $ref: "#/components/schemas/TransactionCode"
          required:
            - account_owner
            - pending_transaction_id
            - payment_channel
            - payment_meta
            - name
            - merchant_name
            - location
            - authorized_date
            - authorized_datetime
            - datetime
            - category_id
            - category
            - transaction_code
          type: object
      description: A representation of a transaction
      title: Transaction
      x-examples: {}
    TransactionBase:
      additionalProperties: true
      description: A representation of a transaction
      properties:
        account_id:
          description: The ID of the account in which this transaction occurred.
          type: string
        account_owner:
          description: The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
          nullable: true
          type: string
        amount:
          description: The settled value of the transaction, denominated in the account's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
          type: number
        category:
          description: |-
            A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).

            If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
          items:
            type: string
          nullable: true
          type: array
        category_id:
          description: |-
            The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).

            If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
          nullable: true
          type: string
        date:
          description: For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an ISO 8601 format ( `YYYY-MM-DD` ).
          format: date
          type: string
        iso_currency_code:
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
          type: string
        location:
          $ref: "#/components/schemas/Location"
        name:
          description: |-
            The merchant name or transaction description.

            If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
          type: string
        original_description:
          description: The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`.
          nullable: true
          type: string
        payment_meta:
          $ref: "#/components/schemas/PaymentMeta"
        pending:
          description: When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
          type: boolean
        pending_transaction_id:
          description: The ID of a posted transaction's associated pending transaction, where applicable.
          nullable: true
          type: string
        transaction_id:
          description: The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
          type: string
        transaction_type:
          deprecated: true
          description: |
            Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.

            `digital:` transactions that took place online.

            `place:` transactions that were made at a physical location.

            `special:` transactions that relate to banks, e.g. fees or deposits.

            `unresolved:` transactions that do not fit into the other three types.
          enum:
            - digital
            - place
            - special
            - unresolved
          type: string
        unofficial_currency_code:
          description: |-
            The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
          type: string
      required:
        - transaction_id
        - pending
        - date
        - unofficial_currency_code
        - iso_currency_code
        - amount
        - account_id
      title: TransactionBase
      type: object
      x-examples: {}
    TransactionCode:
      description: |-
        An identifier classifying the transaction type.

        This field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.

        `adjustment:` Bank adjustment

        `atm:` Cash deposit or withdrawal via an automated teller machine

        `bank charge:` Charge or fee levied by the institution

        `bill payment`: Payment of a bill

        `cash:` Cash deposit or withdrawal

        `cashback:` Cash withdrawal while making a debit card purchase

        `cheque:` Document ordering the payment of money to another person or organization

        `direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval

        `interest:` Interest earned or incurred

        `purchase:` Purchase made with a debit or credit card

        `standing order:` Payment instructed by the account holder to a third party at a regular interval

        `transfer:` Transfer of money between accounts
      enum:
        - adjustment
        - atm
        - bank charge
        - bill payment
        - cash
        - cashback
        - cheque
        - direct debit
        - interest
        - purchase
        - standing order
        - transfer
        - null
      nullable: true
      title: transaction_code
      type: string
    TransactionData:
      additionalProperties: true
      description: Information about the matched direct deposit transaction used to verify a user's payroll information.
      nullable: true
      properties:
        account_id:
          description: A unique identifier for the end user's account.
          type: string
        amount:
          description: The amount of the transaction.
          type: number
        date:
          description: The date of the transaction, in ISO 8601 format ("yyyy-mm-dd").
          format: date
          type: string
        description:
          description: The description of the transaction.
          type: string
        transaction_id:
          description: A unique identifier for the transaction.
          type: string
      required:
        - description
        - amount
        - date
        - account_id
        - transaction_id
      title: TransactionData
      type: object
    TransactionOverride:
      additionalProperties: true
      description: Data to populate as test transaction data. If not specified, random transactions will be generated instead.
      properties:
        amount:
          description: The transaction amount. Can be negative.
          type: number
        currency:
          description: The ISO-4217 format currency code for the transaction.
          type: string
        date_posted:
          description: The date the transaction posted, in ISO8601 (YYYY-MM-DD) format
          format: date
          type: string
        date_transacted:
          description: The date of the transaction, in ISO8601 (YYYY-MM-DD) format. Transaction dates in the past or present will result in posted transactions; transaction dates in the future will result in pending transactions. Transactions in Sandbox will move from pending to posted once their transaction date has been reached.
          format: date
          type: string
        description:
          description: The transaction description.
          type: string
      required:
        - date_transacted
        - date_posted
        - amount
        - description
      title: TransactionOverride
      type: object
    TransactionsGetRequest:
      description: TransactionsGetRequest defines the request schema for `/transactions/get`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        end_date:
          description: The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
        options:
          $ref: "#/components/schemas/TransactionsGetRequestOptions"
        secret:
          $ref: "#/components/schemas/APISecret"
        start_date:
          description: The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
          format: date
          type: string
      required:
        - access_token
        - start_date
        - end_date
      type: object
    TransactionsGetRequestOptions:
      description: An optional object to be used with the request. If specified, `options` must not be `null`.
      properties:
        account_ids:
          description: |-
            A list of `account_ids` to retrieve for the Item

            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
          type: array
        count:
          default: 100
          description: The number of transactions to fetch.
          exclusiveMinimum: false
          maximum: 500
          minimum: 1
          type: integer
        include_original_description:
          default: false
          description: Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager.
          nullable: true
          type: boolean
        offset:
          default: 0
          description: The number of transactions to skip. The default value is 0.
          minimum: 0
          type: integer
      type: object
    TransactionsGetResponse:
      additionalProperties: true
      description: TransactionsGetResponse defines the response schema for `/transactions/get`
      properties:
        accounts:
          description: An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.
          items:
            $ref: "#/components/schemas/AccountBase"
          type: array
        item:
          $ref: "#/components/schemas/Item"
        request_id:
          $ref: "#/components/schemas/RequestID"
        total_transactions:
          description: The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
          type: integer
        transactions:
          description: An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
          items:
            $ref: "#/components/schemas/Transaction"
          type: array
      required:
        - accounts
        - transactions
        - total_transactions
        - item
        - request_id
      type: object
    TransactionsRefreshRequest:
      description: TransactionsRefreshRequest defines the request schema for `/transactions/refresh`
      properties:
        access_token:
          $ref: "#/components/schemas/AccessToken"
        client_id:
          $ref: "#/components/schemas/APIClientID"
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - access_token
      type: object
    TransactionsRefreshResponse:
      description: TransactionsRefreshResponse defines the response schema for `/transactions/refresh`
      properties:
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - request_id
      type: object
    TransactionsRemovedWebhook:
      additionalProperties: true
      description: Fired when transaction(s) for an Item are deleted. The deleted transaction IDs are included in the webhook payload. Plaid will typically check for deleted transaction data several times a day.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        removed_transactions:
          description: An array of `transaction_ids` corresponding to the removed transactions
          items:
            type: string
          type: array
        webhook_code:
          description: "`TRANSACTIONS_REMOVED`"
          type: string
        webhook_type:
          description: "`TRANSACTIONS`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - removed_transactions
        - item_id
      title: TransactionsRemovedWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          removed_transactions:
            - yBVBEwrPyJs8GvR77N7QTxnGg6wG74H7dEDN6
            - kgygNvAVPzSX9KkddNdWHaVGRVex1MHm3k9no
          webhook_code: TRANSACTIONS_REMOVED
          webhook_type: TRANSACTIONS
    UnofficialCurrencyCodeList:
      description: List of unofficial currency codes
      properties:
        ADA:
          description: Cardano
          type: string
        BAT:
          description: Basic Attention Token
          type: string
        BCH:
          description: Bitcoin Cash
          type: string
        BNB:
          description: Binance Coin
          type: string
        BTC:
          description: Bitcoin
          type: string
        BTG:
          description: Bitcoin Gold
          type: string
        CNH:
          description: Chinese Yuan (offshore)
          type: string
        DASH:
          description: Dash
          type: string
        DOGE:
          description: Dogecoin
          type: string
        ETC:
          description: Ethereum Classic
          type: string
        ETH:
          description: Ethereum
          type: string
        GBX:
          description: Pence sterling, i.e. British penny
          type: string
        LSK:
          description: Lisk
          type: string
        NEO:
          description: Neo
          type: string
        OMG:
          description: OmiseGO
          type: string
        QTUM:
          description: Qtum
          type: string
        USDT:
          description: TehterUS
          type: string
        XLM:
          description: Stellar Lumen
          type: string
        XMR:
          description: Monero
          type: string
        XRP:
          description: Ripple
          type: string
        ZEC:
          description: Zcash
          type: string
        ZRX:
          description: 0x
          type: string
      required:
        - ADA
        - BAT
        - BCH
        - BNB
        - BTC
        - BTG
        - CNH
        - DASH
        - DOGE
        - ETC
        - ETH
        - GBX
        - LSK
        - NEO
        - OMG
        - QTUM
        - USDT
        - XLM
        - XMR
        - XRP
        - ZEC
        - ZRX
      title: UnofficialCurrencyCodeList
      type: string
    UserCustomPassword:
      additionalProperties: true
      description: Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history.
      properties:
        force_error:
          description: |-
            An error code to force on Item creation. Possible values are:

            `"INSTITUTION_NOT_RESPONDING"`
            `"INSTITUTION_NO_LONGER_SUPPORTED"`
            `"INVALID_CREDENTIALS"`
            `"INVALID_MFA"`
            `"ITEM_LOCKED"`
            `"ITEM_LOGIN_REQUIRED"`
            `"ITEM_NOT_SUPPORTED"`
            `"INVALID_LINK_TOKEN"`
            `"MFA_NOT_SUPPORTED"`
            `"NO_ACCOUNTS"`
            `"PLAID_ERROR"`
            `"PRODUCTS_NOT_SUPPORTED"`
            `"USER_SETUP_REQUIRED"`
          type: string
        mfa:
          $ref: "#/components/schemas/MFA"
        override_accounts:
          description: An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data.
          items:
            $ref: "#/components/schemas/OverrideAccounts"
          type: array
        recaptcha:
          description: You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link.
          type: string
        seed:
          description: |-
            A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.

            Note that transactions data is generated relative to the Item's creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.
          type: string
        version:
          description: The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite.
          nullable: true
          type: string
      required:
        - seed
        - override_accounts
        - mfa
        - recaptcha
        - force_error
      title: UserCustomPassword
      type: object
      x-examples: {}
    UserPermissionRevokedWebhook:
      additionalProperties: true
      description: The `USER_PERMISSION_REVOKED` webhook is fired to when an end user has used the [my.plaid.com portal](https://my.plaid.com) to revoke the permission that they previously granted to access an Item. Once access to an Item has been revoked, it cannot be restored. If the user subsequently returns to your application, a new Item must be created for the user.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`USER_PERMISSION_REVOKED`"
          type: string
        webhook_type:
          description: "`ITEM`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
      title: UserPermissionRevokedWebhook
      type: object
      x-examples:
        example-1:
          error:
            error_code: USER_PERMISSION_REVOKED
            error_message: the holder of this account has revoked their permission for your application to access it
            error_type: ITEM_ERROR
            status: 400
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          webhook_code: USER_PERMISSION_REVOKED
          webhook_type: ITEM
    VerificationExpiredWebhook:
      additionalProperties: true
      description: Fired when an Item was not verified via automated micro-deposits after ten days since the automated micro-deposit was made.
      properties:
        account_id:
          description: The `account_id` of the account associated with the webhook
          type: string
        item_id:
          $ref: "#/components/schemas/ItemId"
        webhook_code:
          description: "`VERIFICATION_EXPIRED`"
          type: string
        webhook_type:
          description: "`AUTH`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - account_id
      title: VerificationExpiredWebhook
      type: object
      x-examples:
        example-1:
          account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
          webhook_code: VERIFICATION_EXPIRED
          webhook_type: AUTH
    VerificationRefreshStatus:
      description: |-
        The verification refresh status. One of the following:

        `"VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.
      enum:
        - VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED
      title: VerificationRefreshStatus
      type: string
    VerificationStatus:
      description: |-
        The verification status. One of the following:

        `"VERIFIED"`: The information was successfully verified.

        `"UNVERIFIED"`: The verification has not yet been performed.

        `"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.

        "`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.

        `"UNKNOWN"`: The verification status is unknown.
      enum:
        - VERIFIED
        - UNVERIFIED
        - NEEDS_INFO
        - UNABLE_TO_VERIFY
        - UNKNOWN
      title: VerificationStatus
      type: string
    Warning:
      additionalProperties: true
      description: It is possible for an Asset Report to be returned with missing account owner information. In such cases, the Asset Report will contain warning data in the response, indicating why obtaining the owner information failed.
      properties:
        cause:
          $ref: "#/components/schemas/Cause"
        warning_code:
          description: The warning code identifies a specific kind of warning. Currently, the only possible warning code is `OWNERS_UNAVAILABLE`, which indicates that account-owner information is not available.
          enum:
            - OWNERS_UNAVAILABLE
          type: string
        warning_type:
          description: The warning type, which will always be `ASSET_REPORT_WARNING`
          type: string
      required:
        - warning_type
        - warning_code
        - cause
      title: Warning
      type: object
      x-examples:
        example-1:
          cause:
            display_message: null
            error_code: PRODUCTS_NOT_SUPPORTED
            error_message: "The following products are not supported by this institution: Identity"
            error_type: ITEM_ERROR
            http_code: 400
            request_id: s32PXYOyplhGTHd
          warning_code: OWNERS_UNAVAILABLE
          warning_type: ASSET_REPORT_WARNING
    WebhookUpdateAcknowledgedWebhook:
      additionalProperties: true
      description: Fired when an Item's webhook is updated. This will be sent to the newly specified webhook.
      properties:
        error:
          $ref: "#/components/schemas/Error"
        item_id:
          $ref: "#/components/schemas/ItemId"
        new_webhook_url:
          description: The new webhook URL
          type: string
        webhook_code:
          description: "`WEBHOOK_UPDATE_ACKNOWLEDGED`"
          type: string
        webhook_type:
          description: "`ITEM`"
          type: string
      required:
        - webhook_type
        - webhook_code
        - item_id
        - new_webhook_url
      title: WebhookUpdateAcknowledgedWebhook
      type: object
      x-examples:
        example-1:
          error: null
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          new_webhook_url: https://plaid.com/example/webhook
          webhook_code: WEBHOOK_UPDATE_ACKNOWLEDGED
          webhook_type: ITEM
    WebhookVerificationKeyGetRequest:
      description: WebhookVerificationKeyGetRequest defines the request schema for `/webhook_verification_key/get`
      properties:
        client_id:
          $ref: "#/components/schemas/APIClientID"
        key_id:
          description: The key ID ( `kid` ) from the JWT header.
          type: string
        secret:
          $ref: "#/components/schemas/APISecret"
      required:
        - key_id
      type: object
    WebhookVerificationKeyGetResponse:
      additionalProperties: true
      description: WebhookVerificationKeyGetResponse defines the response schema for `/webhook_verification_key/get`
      properties:
        key:
          $ref: "#/components/schemas/JWKPublicKey"
        request_id:
          $ref: "#/components/schemas/RequestID"
      required:
        - key
        - request_id
      type: object
    YTDGrossIncomeSummaryFieldNumber:
      allOf:
        - $ref: "#/components/schemas/IncomeSummaryFieldNumber"
        - additionalProperties: true
          description: Year-to-date pre-tax earnings, as reported on the paystub.
          type: object
    YTDNetIncomeSummaryFieldNumber:
      allOf:
        - $ref: "#/components/schemas/IncomeSummaryFieldNumber"
        - additionalProperties: true
          description: Year-to-date earnings after any tax withholdings, benefit payments or deductions, as reported on the paystub.
          type: object
  securitySchemes:
    clientId:
      in: header
      name: PLAID-CLIENT-ID
      type: apiKey
    plaidVersion:
      in: header
      name: Plaid-Version
      type: apiKey
    secret:
      in: header
      name: PLAID-SECRET
      type: apiKey
