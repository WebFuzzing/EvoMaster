openapi: 3.0.0
servers:
  - url: https://mybusiness.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google My Business API provides an interface for managing business location information on Google.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google My Business API
  version: v4
  x-apisguru-categories:
    - analytics
    - media
    - location
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://developers.google.com/my-business/samples/mybusiness_google_rest_v4p9.json
      version: v1
  x-providerName: googleapis.com
  x-serviceName: my-business
externalDocs:
  url: https://developers.google.com/my-business/
tags:
  - name: accounts
  - name: attributes
  - name: categories
  - name: chains
  - name: googleLocations
paths:
  /v4/accounts:
    get:
      description: Lists all of the accounts for the authenticated user. This includes all accounts that the user owns, as well as any accounts for which the user has management rights.
      operationId: mybusiness.accounts.list
      parameters:
        - description: A filter constraining the accounts to return. The response includes only entries that match the filter. If `filter` is empty, then no constraints are applied and all accounts (paginated) are retrieved for the requested account. For example, a request with the filter `type=USER_GROUP` will only return user groups.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource name of the account for which the list of directly accessible accounts is to be retrieved. This only makes sense for Organizations and User Groups. If empty, will return `ListAccounts` for the authenticated user.
          in: query
          name: name
          schema:
            type: string
        - description: How many accounts to fetch per page. Default is 20, minimum is 2, and maximum page size is 20.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of accounts is retrieved. The `pageToken` is returned when a call to `accounts.list` returns more results than can fit into the requested page size.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccountsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an account with the specified name and type under the given parent. - Personal accounts and Organizations cannot be created. - User Groups cannot be created with a Personal account as primary owner. - Location Groups cannot be created with a primary owner of a Personal account if the Personal account is in an Organization. - Location Groups cannot own Location Groups. "
      operationId: mybusiness.accounts.create
      parameters:
        - description: The resource name of the account which will be the primary owner of the account being created. It should be of the form `accounts/{account_id}/`.
          in: query
          name: primaryOwner
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      tags:
        - accounts
  /v4/attributes:
    get:
      description: Returns the list of available attributes that would be available for a location with the given primary category and country.
      operationId: mybusiness.attributes.list
      parameters:
        - description: The primary category stable ID to find available attributes.
          in: query
          name: categoryId
          schema:
            type: string
        - description: The ISO 3166-1 alpha-2 country code to find available attributes.
          in: query
          name: country
          schema:
            type: string
        - description: The BCP 47 code of language to get attribute display names in. If this language is not available, they will be provided in English.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Resource name of the location to look up available attributes.
          in: query
          name: name
          schema:
            type: string
        - description: How many attributes to include per page. Default is 200, minimum is 1.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of attribute metadata is retrieved. The `pageToken` is returned when a call to `attributes.list` returns more results than can fit into the requested page size.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAttributeMetadataResponse"
          description: Successful response
      tags:
        - attributes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v4/categories:
    get:
      description: Returns a list of business categories. Search will match the category name but not the category ID. *Note:* Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').
      operationId: mybusiness.categories.list
      parameters:
        - description: The BCP 47 code of language. If the language is not available, it will default to English.
          in: query
          name: languageCode
          schema:
            type: string
        - description: How many categories to fetch per page. Default is 100, minimum is 1, and maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of categories will be fetched.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ISO 3166-1 alpha-2 country code.
          in: query
          name: regionCode
          schema:
            type: string
        - description: Optional filter string from user.
          in: query
          name: searchTerm
          schema:
            type: string
        - description: Optional. Specifies which parts to the Category resource should be returned in the response.
          in: query
          name: view
          schema:
            enum:
              - CATEGORY_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBusinessCategoriesResponse"
          description: Successful response
      tags:
        - categories
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v4/categories:batchGet:
    get:
      description: Returns a list of business categories for the provided language and GConcept ids.
      operationId: mybusiness.categories.batchGet
      parameters:
        - description: Required. At least one name must be set. The GConcept ids the localized category names should be returned for.
          explode: true
          in: query
          name: categoryIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Required. The BCP 47 code of language that the category names should be returned in.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. The ISO 3166-1 alpha-2 country code used to infer non-standard language.
          in: query
          name: regionCode
          schema:
            type: string
        - description: Required. Specifies which parts to the Category resource should be returned in the response.
          in: query
          name: view
          schema:
            enum:
              - CATEGORY_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetBusinessCategoriesResponse"
          description: Successful response
      tags:
        - categories
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v4/chains:search:
    get:
      description: Searches the chain based on chain name.
      operationId: mybusiness.chains.search
      parameters:
        - description: 'Search for a chain by its name. Exact/partial/fuzzy/related queries are supported. Examples: "walmart", "wal-mart", "walmmmart", "沃尔玛"'
          in: query
          name: chainDisplayName
          schema:
            type: string
        - description: The maximum number of matched chains to return from this query. The default is 10. The maximum possible value is 500.
          in: query
          name: resultCount
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchChainsResponse"
          description: Successful response
      tags:
        - chains
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v4/googleLocations:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Search all of the possible locations that are a match to the specified request.
      operationId: mybusiness.googleLocations.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchGoogleLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchGoogleLocationsResponse"
          description: Successful response
      tags:
        - googleLocations
  "/v4/{name}":
    delete:
      description: Deletes a specific question written by the current user.
      operationId: mybusiness.accounts.locations.questions.delete
      parameters:
        - description: The name of the question to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
    get:
      description: Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.
      operationId: mybusiness.chains.get
      parameters:
        - description: The chain's resource name, in the format `chains/{chain_place_id}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chain"
          description: Successful response
      tags:
        - chains
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a specific question written by the current user.
      operationId: mybusiness.accounts.locations.questions.patch
      parameters:
        - description: The name of the question to update.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The specific fields to update. If no mask is specified, then this is treated as a full update and all editable fields are set to the values passed in.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
          description: Successful response
      tags:
        - accounts
    put:
      description: "Sets the pubsub notification settings for the account informing Business Profile which topic to send pubsub notifications for: - New reviews for locations administered by the account. - Updated reviews for locations administered by the account. - New `GoogleUpdates` for locations administered by the account. An account will only have one notification settings resource, and only one pubsub topic can be set."
      operationId: mybusiness.accounts.updateNotifications
      parameters:
        - description: The notification settings resource name.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notifications"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}/localPosts:reportInsights":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns insights for a set of local posts associated with a single listing. Which metrics and how they are reported are options specified in the request proto. *Note:* Insight reports are limited to 100 `local_post_names` per call.
      operationId: mybusiness.accounts.locations.localPosts.reportInsights
      parameters:
        - description: Required. The name of the location for which to fetch insights.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportLocalPostInsightsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportLocalPostInsightsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}/locations:batchGet":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets all of the specified locations in the given account.
      operationId: mybusiness.accounts.locations.batchGet
      parameters:
        - description: The name of the account from which to fetch locations.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetLocationsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}/locations:batchGetReviews":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns the paginated list of reviews for all specified locations. This operation is only valid if the specified locations are verified. *Note:* Reviews are limited to a batch size of 200 `location_names` per call.
      operationId: mybusiness.accounts.locations.batchGetReviews
      parameters:
        - description: The name of the account from which to retrieve a list of reviews across multiple locations.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetReviewsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetReviewsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}/locations:reportInsights":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns a report containing insights on one or more metrics by location. *Note:* Insight reports are limited to a batch size of 10 `location_names` per call.
      operationId: mybusiness.accounts.locations.reportInsights
      parameters:
        - description: The account resource name.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportLocationInsightsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportLocationInsightsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}/reply":
    delete:
      description: Deletes the response to the specified review. This operation is only valid if the specified location is verified.
      operationId: mybusiness.accounts.locations.reviews.deleteReply
      parameters:
        - description: The name of the review reply to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the reply to the specified review. A reply is created if one does not exist. This operation is only valid if the specified location is verified.
      operationId: mybusiness.accounts.locations.reviews.updateReply
      parameters:
        - description: The name of the review to respond to.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewReply"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewReply"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:accept":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Accepts the specified invitation.
      operationId: mybusiness.accounts.invitations.accept
      parameters:
        - description: The name of the invitation that is being accepted.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInvitationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:associate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Associates a location to a place ID. Any previous association is overwritten. This operation is only valid if the location is unverified. The association must be valid, that is, it appears in the list of `FindMatchingLocations`.
      operationId: mybusiness.accounts.locations.associate
      parameters:
        - description: The resource name of the location to associate.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateLocationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:clearAssociation":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Clears an association between a location and its place ID. This operation is only valid if the location is unverified.
      operationId: mybusiness.accounts.locations.clearAssociation
      parameters:
        - description: The resource name of the location to disassociate.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearLocationAssociationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:complete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Completes a `PENDING` verification. It is only necessary for non `AUTO` verification methods. `AUTO` verification request is instantly `VERIFIED` upon creation.
      operationId: mybusiness.accounts.locations.verifications.complete
      parameters:
        - description: Resource name of the verification to complete.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteVerificationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompleteVerificationResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:decline":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Declines the specified invitation.
      operationId: mybusiness.accounts.invitations.decline
      parameters:
        - description: The name of the account invitation that is being declined.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeclineInvitationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:fetchVerificationOptions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reports all eligible verification options for a location in a specific language.
      operationId: mybusiness.accounts.locations.fetchVerificationOptions
      parameters:
        - description: Resource name of the location to verify.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchVerificationOptionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchVerificationOptionsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:findMatches":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Finds all of the possible locations that are a match to the specified location. This operation is only valid if the location is unverified.
      operationId: mybusiness.accounts.locations.findMatches
      parameters:
        - description: The resource name of the location to find matches for.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FindMatchingLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindMatchingLocationsResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:generateAccountNumber":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generates an account number for this account. The account number is not provisioned when an account is created. Use this request to create an account number when it is required.
      operationId: mybusiness.accounts.generateAccountNumber
      parameters:
        - description: The name of the account to generate an account number for.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateAccountNumberRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:getGoogleUpdated":
    get:
      description: Returns the Google updated Lodging of a specific location.
      operationId: mybusiness.accounts.locations.lodging.getGoogleUpdated
      parameters:
        - description: "Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The specific fields to return. If no mask is specified, then it returns the full Lodging (same as "*"). Repeated field items cannot be individually specified.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGoogleUpdatedLodgingResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{name}:googleUpdated":
    get:
      description: Gets the Google-updated version of the specified location. Returns `NOT_FOUND` if the location does not exist.
      operationId: mybusiness.accounts.locations.getGoogleUpdated
      parameters:
        - description: The name of the location to fetch.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleUpdatedLocation"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{name}:recommendGoogleLocations":
    get:
      description: List all the GoogleLocations that have been recommended to the specified Business Profile account. Recommendations are provided for personal accounts and location groups only, requests for all other account types will result in an error. The recommendations for location groups are based on the locations in that group. The recommendations for personal accounts are based on all of the locations that the user has access to on Business Profile (which includes locations they can access through location groups), and is a superset of all recommendations generated for the user.
      operationId: mybusiness.accounts.listRecommendGoogleLocations
      parameters:
        - description: Name of the account resource to fetch recommended Google locations for.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: How many locations to fetch per page. Default is 25, minimum is 1, and maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of locations is retrieved.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRecommendedGoogleLocationsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{name}:report":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Report a GoogleLocation.
      operationId: mybusiness.googleLocations.report
      parameters:
        - description: Resource name of a [GoogleLocation], in the format `googleLocations/{googleLocationId}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportGoogleLocationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - googleLocations
  "/v4/{name}:transfer":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Moves a location from an account that the user owns to another account that the same user administers. The user must be an owner of the account the location is currently associated with and must also be at least a manager of the destination account. Returns the Location with its new resource name.
      operationId: mybusiness.accounts.locations.transfer
      parameters:
        - description: The name of the location to transfer.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferLocationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
          description: Successful response
      tags:
        - accounts
  "/v4/{name}:verify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts the verification process for a location.
      operationId: mybusiness.accounts.locations.verify
      parameters:
        - description: Resource name of the location to verify.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyLocationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyLocationResponse"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/admins":
    get:
      description: Lists all of the admins for the specified location.
      operationId: mybusiness.accounts.locations.admins.list
      parameters:
        - description: The name of the location to list admins of.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationAdminsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Invites the specified user to become an administrator for the specified location. The invitee must accept the invitation in order to be granted access to the location. See AcceptInvitation to programmatically accept an invitation.
      operationId: mybusiness.accounts.locations.admins.create
      parameters:
        - description: The resource name of the location this admin is created for.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Admin"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/answers":
    get:
      description: Returns the paginated list of answers for a specified question.
      operationId: mybusiness.accounts.locations.questions.answers.list
      parameters:
        - description: The name of the question to fetch answers for.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The order to return the answers. Valid options include 'update_time desc' and 'upvote_count desc', which will return the answers sorted descendingly by the requested field. The default sort order is 'update_time desc'.
          in: query
          name: orderBy
          schema:
            type: string
        - description: How many answers to fetch per page. The default and maximum `page_size` values are 10.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of answers is retrieved.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAnswersResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/answers:delete":
    delete:
      description: Deletes the answer written by the current user to a question.
      operationId: mybusiness.accounts.locations.questions.answers.delete
      parameters:
        - description: The name of the question to delete an answer for.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/answers:upsert":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an answer or updates the existing answer written by the user for the specified question. A user can only create one answer per question.
      operationId: mybusiness.accounts.locations.questions.answers.upsert
      parameters:
        - description: The name of the question to write an answer for.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertAnswerRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/insuranceNetworks":
    get:
      description: Returns a list of all insurance networks supported by Google.
      operationId: mybusiness.accounts.locations.insuranceNetworks.list
      parameters:
        - description: "Required. The name of the location whose insurance networks will be listed. The name is in the form: accounts/{account_id}/locations/{location_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The BCP 47 code for the language. If a language code is not provided, it defaults to English. Right now only 'en' is supported.
          in: query
          name: languageCode
          schema:
            type: string
        - description: How many insurance networks to return per page. The default value is 5000. Maximum page size is 10000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, returns the next page of insurance networks.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInsuranceNetworksResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/invitations":
    get:
      description: Lists pending invitations for the specified account.
      operationId: mybusiness.accounts.invitations.list
      parameters:
        - description: The name of the account from which the list of invitations is being retrieved.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Specifies which target types should appear in the response.
          in: query
          name: targetType
          schema:
            enum:
              - ALL
              - ACCOUNTS_ONLY
              - LOCATIONS_ONLY
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInvitationsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/localPosts":
    get:
      description: Returns a list of local posts associated with a location.
      operationId: mybusiness.accounts.locations.localPosts.list
      parameters:
        - description: The name of the location whose local posts will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: How many local posts to return per page. Default of 20. The minimum is 1, and maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, returns the next page of local posts.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocalPostsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new local post associated with the specified location, and returns it.
      operationId: mybusiness.accounts.locations.localPosts.create
      parameters:
        - description: The name of the location in which to create this local post.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalPost"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalPost"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/locations":
    get:
      description: Lists the locations for the specified account.
      operationId: mybusiness.accounts.locations.list
      parameters:
        - description: The name of the account to fetch locations from. If the Account is of AccountType PERSONAL, only Locations that are directly owned by the Account are returned, otherwise it will return all accessible locations from the Account, either directly or indirectly.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter constraining the locations to return. The response includes only entries that match the filter. If `filter` is empty, then constraints are applied and all locations (paginated) are retrieved for the requested account. For more information about valid fields and example usage, see [Work with Location Data Guide](https://developers.google.com/my-business/content/location-data#filter_results_when_you_list_locations).
          in: query
          name: filter
          schema:
            type: string
        - description: The BCP 47 code of language to get display location properties in. If this language is not available, they will be provided in the language of the location. If neither is available, they will be provided in English. Deprecated. After August 15th, 2020, this field will no longer be applied. Instead, the language of the location will always be used.
          in: query
          name: languageCode
          schema:
            type: string
        - description: 'Sorting order for the request. Multiple fields should be comma-separated, following SQL syntax. The default sorting order is ascending. To specify descending order, a suffix " desc" should be added. Valid fields to order_by are location_name and store_code. For example: "location_name, store_code desc" or "location_name" or "store_code desc"'
          in: query
          name: orderBy
          schema:
            type: string
        - description: How many locations to fetch per page. Default is 100, minimum is 1, and maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, it fetches the next `page` of locations. The page token is returned by previous calls to `ListLocations` when there were more locations than could fit in the requested page size.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new location owned by the specified account, and returns it.
      operationId: mybusiness.accounts.locations.create
      parameters:
        - description: The name of the account in which to create this location.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A unique request ID for the server to detect duplicated requests. We recommend using UUIDs. Max length is 50 characters.
          in: query
          name: requestId
          schema:
            type: string
        - description: If true, the request is validated without actually creating the location.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/media":
    get:
      description: Returns a list of media items associated with a location.
      operationId: mybusiness.accounts.locations.media.list
      parameters:
        - description: The name of the location whose media items will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: How many media items to return per page. The default value is 100, which is also the maximum supported number of media items able to be added to a location with the Google My Business API. Maximum page size is 2500.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, returns the next page of media items.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMediaItemsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new media item for the location.
      operationId: mybusiness.accounts.locations.media.create
      parameters:
        - description: The resource name of the location where this media item will be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MediaItem"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaItem"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/media/customers":
    get:
      description: Returns a list of media items associated with a location that have been contributed by customers.
      operationId: mybusiness.accounts.locations.media.customers.list
      parameters:
        - description: The name of the location whose customer media items will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: How many media items to return per page. The default value is 100, the maximum supported page size is 200.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, returns the next page of media items.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomerMediaItemsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/media:startUpload":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generates a `MediaItemDataRef` for media item uploading.
      operationId: mybusiness.accounts.locations.media.startUpload
      parameters:
        - description: The resource name of the location this media item is to be added to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartUploadMediaItemDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaItemDataRef"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/questions":
    get:
      description: Returns the paginated list of questions and some of its answers for a specified location.
      operationId: mybusiness.accounts.locations.questions.list
      parameters:
        - description: The name of the location to fetch questions for.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: How many answers to fetch per question. The default and maximum `answers_per_question` values are 10.
          in: query
          name: answersPerQuestion
          schema:
            type: integer
        - description: A filter constraining the questions to return. The only filter currently supported is "ignore_answered=true"
          in: query
          name: filter
          schema:
            type: string
        - description: The order to return the questions. Valid options include 'update_time desc' and 'upvote_count desc', which will return the questions sorted descendingly by the requested field. The default sort order is 'update_time desc'.
          in: query
          name: orderBy
          schema:
            type: string
        - description: How many questions to fetch per page. The default and maximum `page_size` values are 10.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, the next page of questions is retrieved.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQuestionsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a question for the specified location.
      operationId: mybusiness.accounts.locations.questions.create
      parameters:
        - description: The name of the location to write a question for.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
          description: Successful response
      tags:
        - accounts
  "/v4/{parent}/reviews":
    get:
      description: Returns the paginated list of reviews for the specified location. This operation is only valid if the specified location is verified.
      operationId: mybusiness.accounts.locations.reviews.list
      parameters:
        - description: The name of the location to fetch reviews for.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`.
          in: query
          name: orderBy
          schema:
            type: string
        - description: How many reviews to fetch per page. The maximum `page_size` is 50.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, it fetches the next page of reviews.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReviewsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v4/{parent}/verifications":
    get:
      description: List verifications of a location, ordered by create time.
      operationId: mybusiness.accounts.locations.verifications.list
      parameters:
        - description: Resource name of the location that verification requests belong to.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: How many verification to include per page. If not set, return all.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: If specified, returns the next page of verifications.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVerificationsResponse"
          description: Successful response
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AcceptInvitationRequest:
      description: Request message for AccessControl.AcceptInvitation.
      properties: {}
      type: object
    Accessibility:
      description: Physical adaptations made to the property in consideration of varying levels of human physical ability.
      properties:
        mobilityAccessible:
          description: Mobility accessible. Throughout the property there are physical adaptations to ease the stay of a person in a wheelchair, such as auto-opening doors, wide elevators, wide bathrooms or ramps.
          type: boolean
        mobilityAccessibleElevator:
          description: Mobility accessible elevator. A lift that transports people from one level to another and is built to accommodate a wheelchair-using passenger owing to the width of its doors and placement of call buttons.
          type: boolean
        mobilityAccessibleElevatorException:
          description: Mobility accessible elevator exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleException:
          description: Mobility accessible exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleParking:
          description: Mobility accessible parking. The presence of a marked, designated area of prescribed size in which only registered, labeled vehicles transporting a person with physical challenges may park.
          type: boolean
        mobilityAccessibleParkingException:
          description: Mobility accessible parking exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessiblePool:
          description: Mobility accessible pool. A swimming pool equipped with a mechanical chair that can be lowered and raised for the purpose of moving physically challenged guests into and out of the pool. May be powered by electricity or water. Also known as pool lift.
          type: boolean
        mobilityAccessiblePoolException:
          description: Mobility accessible pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Account:
      description: An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).
      properties:
        accountName:
          description: The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.
          type: string
        accountNumber:
          description: Account reference number if provisioned.
          type: string
        name:
          description: The resource name, in the format `accounts/{account_id}`.
          type: string
        organizationInfo:
          $ref: "#/components/schemas/OrganizationInfo"
          description: Additional info for an organization. This is populated only for an organization account.
        permissionLevel:
          description: Output only. Specifies the PermissionLevel the caller has for this account.
          enum:
            - PERMISSION_LEVEL_UNSPECIFIED
            - OWNER_LEVEL
            - MEMBER_LEVEL
          type: string
        role:
          description: Output only. Specifies the AccountRole the caller has for this account.
          enum:
            - ACCOUNT_ROLE_UNSPECIFIED
            - OWNER
            - CO_OWNER
            - MANAGER
            - COMMUNITY_MANAGER
          type: string
        state:
          $ref: "#/components/schemas/AccountState"
          description: Output only. Indicates the AccountState of this account.
        type:
          description: Output only. Specifies the AccountType of this account.
          enum:
            - ACCOUNT_TYPE_UNSPECIFIED
            - PERSONAL
            - LOCATION_GROUP
            - USER_GROUP
            - ORGANIZATION
          type: string
      type: object
    AccountState:
      description: Indicates status of the account, such as whether the account has been verified by Google.
      properties:
        status:
          description: If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.
          enum:
            - ACCOUNT_STATUS_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - VERIFICATION_REQUESTED
          type: string
      type: object
    Activities:
      description: Amenities and features related to leisure and play.
      properties:
        beachAccess:
          description: Beach access. The hotel property is in close proximity to a beach and offers a way to get to that beach. This can include a route to the beach such as stairs down if hotel is on a bluff, or a short trail. Not the same as beachfront (with beach access, the hotel's proximity is close to but not right on the beach).
          type: boolean
        beachAccessException:
          description: Beach access exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        beachFront:
          description: Breach front. The hotel property is physically located on the beach alongside an ocean, sea, gulf, or bay. It is not on a lake, river, stream, or pond. The hotel is not separated from the beach by a public road allowing vehicular, pedestrian, or bicycle traffic.
          type: boolean
        beachFrontException:
          description: Beach front exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        bicycleRental:
          description: Bicycle rental. The hotel owns bicycles that it permits guests to borrow and use. Can be free or for a fee.
          type: boolean
        bicycleRentalException:
          description: Bicycle rental exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        boutiqueStores:
          description: Boutique stores. There are stores selling clothing, jewelry, art and decor either on hotel premises or very close by. Does not refer to the hotel gift shop or convenience store.
          type: boolean
        boutiqueStoresException:
          description: Boutique stores exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        casino:
          description: Casino. A space designated for gambling and gaming featuring croupier-run table and card games, as well as electronic slot machines. May be on hotel premises or located nearby.
          type: boolean
        casinoException:
          description: Casino exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeBicycleRental:
          description: Free bicycle rental. The hotel owns bicycles that it permits guests to borrow and use for free.
          type: boolean
        freeBicycleRentalException:
          description: Free bicycle rental exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeWatercraftRental:
          description: Free watercraft rental. The hotel owns watercraft that it permits guests to borrow and use for free.
          type: boolean
        freeWatercraftRentalException:
          description: Free Watercraft rental exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        gameRoom:
          description: Game room. There is a room at the hotel containing electronic machines for play such as pinball, prize machines, driving simulators, and other items commonly found at a family fun center or arcade. May also include non-electronic games like pool, foosball, darts, and more. May or may not be designed for children. Also known as arcade, fun room, or family fun center.
          type: boolean
        gameRoomException:
          description: Game room exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        golf:
          description: Golf. There is a golf course on hotel grounds or there is a nearby, independently run golf course that allows use by hotel guests. Can be free or for a fee.
          type: boolean
        golfException:
          description: Golf exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        horsebackRiding:
          description: Horseback riding. The hotel has a horse barn onsite or an affiliation with a nearby barn to allow for guests to sit astride a horse and direct it to walk, trot, cantor, gallop and/or jump. Can be in a riding ring, on designated paths, or in the wilderness. May or may not involve instruction.
          type: boolean
        horsebackRidingException:
          description: Horseback riding exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        nightclub:
          description: Nightclub. There is a room at the hotel with a bar, a dance floor, and seating where designated staffers play dance music. There may also be a designated area for the performance of live music, singing and comedy acts.
          type: boolean
        nightclubException:
          description: Nightclub exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        privateBeach:
          description: Private beach. The beach which is in close proximity to the hotel is open only to guests.
          type: boolean
        privateBeachException:
          description: Private beach exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        scuba:
          description: Scuba. The provision for guests to dive under naturally occurring water fitted with a self-contained underwater breathing apparatus (SCUBA) for the purpose of exploring underwater life. Apparatus consists of a tank providing oxygen to the diver through a mask. Requires certification of the diver and supervision. The hotel may have the activity at its own waterfront or have an affiliation with a nearby facility. Required equipment is most often supplied to guests. Can be free or for a fee. Not snorkeling. Not done in a swimming pool.
          type: boolean
        scubaException:
          description: Scuba exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        snorkeling:
          description: Snorkeling. The provision for guests to participate in a recreational water activity in which swimmers wear a diving mask, a simple, shaped breathing tube and flippers/swim fins for the purpose of exploring below the surface of an ocean, gulf or lake. Does not usually require user certification or professional supervision. Equipment may or may not be available for rent or purchase. Not scuba diving.
          type: boolean
        snorkelingException:
          description: Snorkeling exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tennis:
          description: Tennis. The hotel has the requisite court(s) on site or has an affiliation with a nearby facility for the purpose of providing guests with the opportunity to play a two-sided court-based game in which players use a stringed racquet to hit a ball across a net to the side of the opposing player. The court can be indoors or outdoors. Instructors, racquets and balls may or may not be provided.
          type: boolean
        tennisException:
          description: Tennis exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        waterSkiing:
          description: Water skiing. The provision of giving guests the opportunity to be pulled across naturally occurring water while standing on skis and holding a tow rope attached to a motorboat. Can occur on hotel premises or at a nearby waterfront. Most often performed in a lake or ocean.
          type: boolean
        waterSkiingException:
          description: Water skiing exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        watercraftRental:
          description: Watercraft rental. The hotel owns water vessels that it permits guests to borrow and use. Can be free or for a fee. Watercraft may include boats, pedal boats, rowboats, sailboats, powerboats, canoes, kayaks, or personal watercraft (such as a Jet Ski).
          type: boolean
        watercraftRentalException:
          description: Watercraft rental exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    AdWordsLocationExtensions:
      description: Additional information that is surfaced in AdWords.
      properties:
        adPhone:
          description: An alternate phone number to display on AdWords location extensions instead of the location's primary phone number.
          type: string
      type: object
    AddressInput:
      description: Input for ADDRESS verification.
      properties:
        mailerContactName:
          description: Contact name the mail should be sent to.
          type: string
      type: object
    AddressVerificationData:
      description: Display data for verifications through postcard.
      properties:
        address:
          $ref: "#/components/schemas/PostalAddress"
          description: Address that a postcard can be sent to.
        businessName:
          description: Merchant's business name.
          type: string
      type: object
    Admin:
      description: An administrator of an Account or a Location.
      properties:
        adminName:
          description: The name of the admin. When making the initial invitation, this is the invitee's email address. On `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names.
          type: string
        name:
          description: "The resource name. For account admins, this is in the form: `accounts/{account_id}/admins/{admin_id}` For location admins, this is in the form: `accounts/{account_id}/locations/{location_id}/admins/{admin_id}`"
          type: string
        pendingInvitation:
          description: Output only. Indicates whether this admin has a pending invitation for the specified resource.
          type: boolean
        role:
          description: Specifies the AdminRole that this admin uses with the specified Account or Location resource.
          enum:
            - ADMIN_ROLE_UNSPECIFIED
            - OWNER
            - CO_OWNER
            - MANAGER
            - COMMUNITY_MANAGER
          type: string
      type: object
    Answer:
      description: Represents an answer to a question
      properties:
        author:
          $ref: "#/components/schemas/Author"
          description: Output only. The author of the answer.
        createTime:
          description: Output only. The timestamp for when the answer was written.
          format: google-datetime
          type: string
        name:
          description: Output only. The unique name for the answer accounts/*/locations/*/questions/*/answers/*
          type: string
        text:
          description: The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.
          type: string
        updateTime:
          description: Output only. The timestamp for when the answer was last modified.
          format: google-datetime
          type: string
        upvoteCount:
          description: Output only. The number of upvotes for the answer.
          format: int32
          type: integer
      type: object
    AssociateLocationRequest:
      description: Request message for Locations.AssociateLocationRequest.
      properties:
        placeId:
          description: The association to establish. If not set, it indicates no match.
          type: string
      type: object
    Attribute:
      description: A location attribute. Attributes provide additional information about a location. The attributes that can be set on a location may vary based on the properties of that location (for example, category). Available attributes are determined by Google and may be added and removed without API changes.
      properties:
        attributeId:
          description: The ID of the attribute. Attribute IDs are provided by Google.
          type: string
        repeatedEnumValue:
          $ref: "#/components/schemas/RepeatedEnumAttributeValue"
          description: When the attribute value type is REPEATED_ENUM, this contains the attribute value, and the other values fields must be empty.
        urlValues:
          description: When the attribute value type is URL, this field contains the value(s) for this attribute, and the other values fields must be empty.
          items:
            $ref: "#/components/schemas/UrlAttributeValue"
          type: array
        valueType:
          description: Output only. The type of value that this attribute contains. This should be used to determine how to interpret the value.
          enum:
            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED
            - BOOL
            - ENUM
            - URL
            - REPEATED_ENUM
          type: string
        values:
          description: The values for this attribute. The type of the values supplied must match that expected for that attribute; see [AttributeValueType](/my-business/reference/rest/v4/AttributeValueType). This is a repeated field where multiple attribute values may be provided. Attribute types only support one value.
          items: {}
          type: array
      type: object
    AttributeMetadata:
      description: Metadata for an attribute. Contains display information for the attribute, including a localized name and a heading for grouping related attributes together.
      properties:
        attributeId:
          description: The ID of the attribute.
          type: string
        displayName:
          description: The localized display name for the attribute, if available; otherwise, the English display name.
          type: string
        groupDisplayName:
          description: The localized display name of the group that contains this attribute, if available; otherwise, the English group name. Related attributes are collected into a group and should be displayed together under the heading given here.
          type: string
        isDeprecated:
          description: If true, the attribute is deprecated and should no longer be used. If deprecated, updating this attribute will not result in an error, but updates will not be saved. At some point after being deprecated, the attribute will be removed entirely and it will become an error.
          type: boolean
        isRepeatable:
          description: If true, the attribute supports multiple values. If false, only a single value should be provided.
          type: boolean
        valueMetadata:
          description: For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided.
          items:
            $ref: "#/components/schemas/AttributeValueMetadata"
          type: array
        valueType:
          description: The value type for the attribute. Values set and retrieved should be expected to be of this type.
          enum:
            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED
            - BOOL
            - ENUM
            - URL
            - REPEATED_ENUM
          type: string
      type: object
    AttributeValueMetadata:
      description: Metadata for supported attribute values.
      properties:
        displayName:
          description: The display name for this value, localized where available; otherwise, in English. The value display name is intended to be used in context with the attribute display name. For example, for a "WiFi" enum attribute, this could contain "Paid" to represent paid Wi-Fi.
          type: string
        value:
          description: The attribute value.
      type: object
    Attribution:
      description: Attribution information for customer media items, such as the contributor's name and profile picture.
      properties:
        profileName:
          description: The user name to attribute the media item to.
          type: string
        profilePhotoUrl:
          description: URL of the attributed user's profile photo thumbnail.
          type: string
        profileUrl:
          description: The URL of the attributed user's Google Maps profile page.
          type: string
        takedownUrl:
          description: The URL of the takedown page, where the media item can be reported if it is inappropriate.
          type: string
      type: object
    Author:
      description: Represents the author of a question or answer
      properties:
        displayName:
          description: The display name of the user
          type: string
        profilePhotoUrl:
          description: The profile photo URL of the user.
          type: string
        type:
          description: The type of user the author is.
          enum:
            - AUTHOR_TYPE_UNSPECIFIED
            - REGULAR_USER
            - LOCAL_GUIDE
            - MERCHANT
          type: string
      type: object
    BasicMetricsRequest:
      description: A request for basic metric insights.
      properties:
        metricRequests:
          description: A collection of metrics to return values for including the options for how the data should be returned.
          items:
            $ref: "#/components/schemas/MetricRequest"
          type: array
        timeRange:
          $ref: "#/components/schemas/TimeRange"
          description: The range to gather metrics for. The maximum range is 18 months from the request date. In some cases, the data may still be missing for days close to the request date. Missing data will be specified in the `metricValues` in the response.
      type: object
    BatchGetBusinessCategoriesResponse:
      description: Response message for BusinessCategories.BatchGetBusinessCategories.
      properties:
        categories:
          description: Categories that match the GConcept ids provided in the request. They will not come in the same order as category ids in the request.
          items:
            $ref: "#/components/schemas/Category"
          type: array
      type: object
    BatchGetLocationsRequest:
      description: Request message for Locations.BatchGetLocations.
      properties:
        locationNames:
          description: A collection of locations to fetch, specified by their names.
          items:
            type: string
          type: array
      type: object
    BatchGetLocationsResponse:
      description: Response message for Locations.BatchGetLocations.
      properties:
        locations:
          description: A collection of locations.
          items:
            $ref: "#/components/schemas/Location"
          type: array
      type: object
    BatchGetReviewsRequest:
      description: Request message for Reviews.BatchGetReviews.
      properties:
        ignoreRatingOnlyReviews:
          description: Whether to ignore rating-only reviews.
          type: boolean
        locationNames:
          description: A collection of locations to fetch reviews for, specified by their names.
          items:
            type: string
          type: array
        orderBy:
          description: Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.
          type: string
        pageSize:
          description: How many reviews to fetch per page. The default value is 200.
          format: int32
          type: integer
        pageToken:
          description: If specified, it fetches the next page of reviews.
          type: string
      type: object
    BatchGetReviewsResponse:
      description: Response message for Reviews.BatchGetReviews.
      properties:
        locationReviews:
          description: Reviews with location information.
          items:
            $ref: "#/components/schemas/LocationReview"
          type: array
        nextPageToken:
          description: If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent calls. If there are no more reviews, this field will not be present in the response.
          type: string
      type: object
    Business:
      description: Features of the property of specific interest to the business traveler.
      properties:
        businessCenter:
          description: Business center. A designated room at the hotel with one or more desks and equipped with guest-use computers, printers, fax machines and/or photocopiers. May or may not be open 24/7. May or may not require a key to access. Not a meeting room or conference room.
          type: boolean
        businessCenterException:
          description: Business center exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        meetingRooms:
          description: Meeting rooms. Rooms at the hotel designated for business-related gatherings. Rooms are usually equipped with tables or desks, office chairs and audio/visual facilities to allow for presentations and conference calls. Also known as conference rooms.
          type: boolean
        meetingRoomsCount:
          description: Meeting rooms count. The number of meeting rooms at the property.
          format: int32
          type: integer
        meetingRoomsCountException:
          description: Meeting rooms count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        meetingRoomsException:
          description: Meeting rooms exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    BusinessHours:
      description: Represents the time periods that this location is open for business. Holds a collection of TimePeriod instances.
      properties:
        periods:
          description: A collection of times that this location is open for business. Each period represents a range of hours when the location is open during the week.
          items:
            $ref: "#/components/schemas/TimePeriod"
          type: array
      type: object
    CallToAction:
      description: An action that is performed when the user clicks through the post
      properties:
        actionType:
          description: The type of action that will be performed.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - BOOK
            - ORDER
            - SHOP
            - LEARN_MORE
            - SIGN_UP
            - GET_OFFER
            - CALL
          type: string
        url:
          description: The URL the user will be directed to upon clicking. This field should be left unset for Call CTA.
          type: string
      type: object
    CaloriesFact:
      description: This message denotes calories information with an upper bound and lower bound range. Lower amount must be specified. Both lower and upper amounts are non-negative numbers.
      properties:
        lowerAmount:
          description: Required. Lower amount of calories
          format: int32
          type: integer
        unit:
          description: Required. Unit of the given calories information.
          enum:
            - ENERGY_UNIT_UNSPECIFIED
            - CALORIE
            - JOULE
          type: string
        upperAmount:
          description: Optional. Upper amount of calories
          format: int32
          type: integer
      type: object
    Category:
      description: A category describing what this business is (not what it does). For a list of valid category IDs, and the mappings to their human-readable names, see [categories.list](https://developers.google.com/my-business/reference/rest/v4/categories/list).
      properties:
        categoryId:
          description: "@OutputOnly. A stable ID (provided by Google) for this category. The `category_id` must be specified when modifying the category (when creating or updating a location)."
          type: string
        displayName:
          description: "@OutputOnly. The human-readable name of the category. This is set when reading the location. When modifying the location, `category_id` must be set."
          type: string
        moreHoursTypes:
          description: Output only. More hours types that are available for this business category.
          items:
            $ref: "#/components/schemas/MoreHoursType"
          readOnly: true
          type: array
        serviceTypes:
          description: "@OutputOnly. A list of all the service types that are available for this business category."
          items:
            $ref: "#/components/schemas/ServiceType"
          type: array
      type: object
    Chain:
      description: A chain is a brand that your business's locations can be affiliated with.
      properties:
        chainNames:
          description: Names of the chain.
          items:
            $ref: "#/components/schemas/ChainName"
          type: array
        locationCount:
          description: Number of locations that are part of this chain.
          format: int32
          type: integer
        name:
          description: The chain's resource name, in the format `chains/{chain_place_id}`.
          type: string
        websites:
          description: Websites of the chain.
          items:
            $ref: "#/components/schemas/ChainUrl"
          type: array
      type: object
    ChainName:
      description: Name to be used when displaying the chain.
      properties:
        displayName:
          description: The display name for this chain.
          type: string
        languageCode:
          description: The BCP 47 code of language of the name.
          type: string
      type: object
    ChainUrl:
      description: Url to be used when displaying the chain.
      properties:
        url:
          description: The url for this chain.
          type: string
      type: object
    ClearLocationAssociationRequest:
      description: Request message for Locations.ClearLocationAssociationRequest.
      properties: {}
      type: object
    CompleteVerificationRequest:
      description: Request message for Verifications.CompleteVerificationAction.
      properties:
        pin:
          description: PIN code received by the merchant to complete the verification.
          type: string
      type: object
    CompleteVerificationResponse:
      description: Response message for Verifications.CompleteVerificationAction.
      properties:
        verification:
          $ref: "#/components/schemas/Verification"
          description: The completed verification.
      type: object
    Connectivity:
      description: The ways in which the property provides guests with the ability to access the internet.
      properties:
        freeWifi:
          description: Free wifi. The hotel offers guests wifi for free.
          type: boolean
        freeWifiException:
          description: Free wifi exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        publicAreaWifiAvailable:
          description: Public area wifi available. Guests have the ability to wirelessly connect to the internet in the areas of the hotel accessible to anyone. Can be free or for a fee.
          type: boolean
        publicAreaWifiAvailableException:
          description: Public area wifi available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        publicInternetTerminal:
          description: Public internet terminal. An area of the hotel supplied with computers and designated for the purpose of providing guests with the ability to access the internet.
          type: boolean
        publicInternetTerminalException:
          description: Public internet terminal exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        wifiAvailable:
          description: Wifi available. The hotel provides the ability for guests to wirelessly connect to the internet. Can be in the public areas of the hotel and/or in the guest rooms. Can be free or for a fee.
          type: boolean
        wifiAvailableException:
          description: Wifi available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DeclineInvitationRequest:
      description: Request message for AccessControl.DeclineInvitation.
      properties: {}
      type: object
    DimensionalMetricValue:
      description: A value for a single metric with a given time dimension.
      properties:
        metricOption:
          description: The option that requested this dimensional value.
          enum:
            - METRIC_OPTION_UNSPECIFIED
            - AGGREGATED_TOTAL
            - AGGREGATED_DAILY
            - BREAKDOWN_DAY_OF_WEEK
            - BREAKDOWN_HOUR_OF_DAY
          type: string
        timeDimension:
          $ref: "#/components/schemas/TimeDimension"
          description: The dimension for the value.
        value:
          description: The value. If no value is set, then the requested data is missing.
          format: int64
          type: string
      type: object
    Dimensions:
      description: Dimensions of the media item.
      properties:
        heightPixels:
          description: Height of the media item, in pixels.
          format: int32
          type: integer
        widthPixels:
          description: Width of the media item, in pixels.
          format: int32
          type: integer
      type: object
    DrivingDirectionMetricsRequest:
      description: A request for driving direction insights.
      properties:
        languageCode:
          description: The BCP 47 code for the language. If a language code is not provided, it defaults to English.
          type: string
        numDays:
          description: The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90.
          enum:
            - SEVEN
            - THIRTY
            - NINETY
          type: string
      type: object
    Duplicate:
      description: Information about the location that this location duplicates.
      properties:
        access:
          description: Indicates whether the user has access to the location it duplicates.
          enum:
            - ACCESS_UNSPECIFIED
            - ACCESS_UNKNOWN
            - ALLOWED
            - INSUFFICIENT
          type: string
        locationName:
          description: The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted.
          type: string
        placeId:
          description: The place ID of the location that this duplicates.
          type: string
      type: object
    EmailInput:
      description: Input for EMAIL verification.
      properties:
        emailAddress:
          description: Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.
          type: string
      type: object
    EmailVerificationData:
      description: Display data for verifications through email.
      properties:
        domainName:
          description: Domain name in the email address. e.g. "gmail.com" in foo@gmail.com
          type: string
        isUserNameEditable:
          description: Whether client is allowed to provide a different user name.
          type: boolean
        userName:
          description: User name in the email address. e.g. "foo" in foo@gmail.com
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
      properties: {}
      type: object
    EnhancedCleaning:
      description: Enhanced cleaning measures implemented by the hotel during COVID-19.
      properties:
        commercialGradeDisinfectantCleaning:
          description: Commercial-grade disinfectant used to clean the property.
          type: boolean
        commercialGradeDisinfectantCleaningException:
          description: Commercial grade disinfectant cleaning exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        commonAreasEnhancedCleaning:
          description: Enhanced cleaning of common areas.
          type: boolean
        commonAreasEnhancedCleaningException:
          description: Common areas enhanced cleaning exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        employeesTrainedCleaningProcedures:
          description: Employees trained in COVID-19 cleaning procedures.
          type: boolean
        employeesTrainedCleaningProceduresException:
          description: Employees trained cleaning procedures exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        employeesTrainedThoroughHandWashing:
          description: Employees trained in thorough hand-washing.
          type: boolean
        employeesTrainedThoroughHandWashingException:
          description: Employees trained thorough hand washing exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        employeesWearProtectiveEquipment:
          description: Employees wear masks, face shields, and/or gloves.
          type: boolean
        employeesWearProtectiveEquipmentException:
          description: Employees wear protective equipment exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        guestRoomsEnhancedCleaning:
          description: Enhanced cleaning of guest rooms.
          type: boolean
        guestRoomsEnhancedCleaningException:
          description: Guest rooms enhanced cleaning exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Families:
      description: Services and amenities for families and young guests.
      properties:
        babysitting:
          description: Babysitting. Child care that is offered by hotel staffers or coordinated by hotel staffers with local child care professionals. Can be free or for a fee.
          type: boolean
        babysittingException:
          description: Babysitting exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kidsActivities:
          description: Kids activities. Recreational options such as sports, films, crafts and games designed for the enjoyment of children and offered at the hotel. May or may not be supervised. May or may not be at a designated time or place. Cab be free or for a fee.
          type: boolean
        kidsActivitiesException:
          description: Kids activities exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kidsClub:
          description: Kids club. An organized program of group activities held at the hotel and designed for the enjoyment of children. Facilitated by hotel staff (or staff procured by the hotel) in an area(s) designated for the purpose of entertaining children without their parents. May include games, outings, water sports, team sports, arts and crafts, and films. Usually has set hours. Can be free or for a fee. Also known as Kids Camp or Kids program.
          type: boolean
        kidsClubException:
          description: Kids club exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    FetchVerificationOptionsRequest:
      description: Request message for Verifications.FetchVerificationOptions.
      properties:
        context:
          $ref: "#/components/schemas/ServiceBusinessContext"
          description: Extra context information for the verification of service businesses. Required for the locations whose business type is CUSTOMER_LOCATION_ONLY. INVALID_ARGUMENT will be thrown if it is set for other business types of locations.
        languageCode:
          description: The BCP 47 language code representing the language that is to be used for the verification process. Available options vary by language.
          type: string
      type: object
    FetchVerificationOptionsResponse:
      description: Response message for Verifications.FetchVerificationOptions.
      properties:
        options:
          description: The available verification options.
          items:
            $ref: "#/components/schemas/VerificationOption"
          type: array
      type: object
    FindMatchingLocationsRequest:
      description: Request message for Locations.FindMatchingLocations.
      properties:
        languageCode:
          description: The preferred language for the matching location (in BCP-47 format).
          type: string
        maxCacheDuration:
          description: Deprecated. This field is ignored for all requests.
          format: google-duration
          type: string
        numResults:
          description: The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
          format: int32
          type: integer
      type: object
    FindMatchingLocationsResponse:
      description: Response message for Locations.FindMatchingLocations.
      properties:
        matchTime:
          description: When the matching algorithm was last executed for this location.
          format: google-datetime
          type: string
        matchedLocations:
          description: A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position.
          items:
            $ref: "#/components/schemas/MatchedLocation"
          type: array
      type: object
    FollowersMetadata:
      description: Follower metadata for a location.
      properties:
        count:
          description: Total number of followers for the location.
          format: uint64
          type: string
        name:
          description: The resource name for this. accounts/{account_id}/locations/{location_id}/followers/metadata
          type: string
      type: object
    FoodAndDrink:
      description: Meals, snacks, and beverages available at the property.
      properties:
        bar:
          description: Bar. A designated room, lounge or area of an on-site restaurant with seating at a counter behind which a hotel staffer takes the guest's order and provides the requested alcoholic drink. Can be indoors or outdoors. Also known as Pub.
          type: boolean
        barException:
          description: Bar exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        breakfastAvailable:
          description: Breakfast available. The morning meal is offered to all guests. Can be free or for a fee.
          type: boolean
        breakfastAvailableException:
          description: Breakfast available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        breakfastBuffet:
          description: Breakfast buffet. Breakfast meal service where guests serve themselves from a variety of dishes/foods that are put out on a table.
          type: boolean
        breakfastBuffetException:
          description: Breakfast buffet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        buffet:
          description: Buffet. A type of meal where guests serve themselves from a variety of dishes/foods that are put out on a table. Includes lunch and/or dinner meals. A breakfast-only buffet is not sufficient.
          type: boolean
        buffetException:
          description: Buffet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        dinnerBuffet:
          description: Dinner buffet. Dinner meal service where guests serve themselves from a variety of dishes/foods that are put out on a table.
          type: boolean
        dinnerBuffetException:
          description: Dinner buffet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeBreakfast:
          description: Free breakfast. Breakfast is offered for free to all guests. Does not apply if limited to certain room packages.
          type: boolean
        freeBreakfastException:
          description: Free breakfast exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        restaurant:
          description: Restaurant. A business onsite at the hotel that is open to the public as well as guests, and offers meals and beverages to consume at tables or counters. May or may not include table service. Also known as cafe, buffet, eatery. A "breakfast room" where the hotel serves breakfast only to guests (not the general public) does not count as a restaurant.
          type: boolean
        restaurantException:
          description: Restaurant exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        restaurantsCount:
          description: Restaurants count. The number of restaurants at the hotel.
          format: int32
          type: integer
        restaurantsCountException:
          description: Restaurants count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        roomService:
          description: Room service. A hotel staffer delivers meals prepared onsite to a guest's room as per their request. May or may not be available during specific hours. Services should be available to all guests (not based on rate/room booked/reward program, etc).
          type: boolean
        roomServiceException:
          description: Room service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tableService:
          description: Table service. A restaurant in which a staff member is assigned to a guest's table to take their order, deliver and clear away food, and deliver the bill, if applicable. Also known as sit-down restaurant.
          type: boolean
        tableServiceException:
          description: Table service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        twentyFourHourRoomService:
          description: 24hr room service. Room service is available 24 hours a day.
          type: boolean
        twentyFourHourRoomServiceException:
          description: 24hr room service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        vendingMachine:
          description: Vending machine. A glass-fronted mechanized cabinet displaying and dispensing snacks and beverages for purchase by coins, paper money and/or credit cards.
          type: boolean
        vendingMachineException:
          description: Vending machine exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    FoodMenu:
      description: Menu of a business that serves food dishes.
      properties:
        cuisines:
          description: Optional. Cuisine information for the food menu. It is highly recommended to provide this field.
          items:
            enum:
              - CUISINE_UNSPECIFIED
              - AMERICAN
              - ASIAN
              - BRAZILIAN
              - BREAK_FAST
              - BRUNCH
              - CHICKEN
              - CHINESE
              - FAMILY
              - FAST_FOOD
              - FRENCH
              - GREEK
              - GERMAN
              - HAMBURGER
              - INDIAN
              - INDONESIAN
              - ITALIAN
              - JAPANESE
              - KOREAN
              - LATIN_AMERICAN
              - MEDITERRANEAN
              - MEXICAN
              - PAKISTANI
              - PIZZA
              - SEAFOOD
              - SPANISH
              - SUSHI
              - THAI
              - TURKISH
              - VEGETARIAN
              - VIETNAMESE
              - OTHER_CUISINE
            type: string
          type: array
        labels:
          description: Required. Language-tagged labels for the menu. E.g. "menu", "lunch special". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
        sections:
          description: Required. Sections of the menu.
          items:
            $ref: "#/components/schemas/FoodMenuSection"
          type: array
        sourceUrl:
          description: Optional. Source URL of menu if there is a webpage to go to.
          type: string
      type: object
    FoodMenuItem:
      description: Item of a Section. It can be the dish itself, or can contain multiple FoodMenuItemOption.
      properties:
        attributes:
          $ref: "#/components/schemas/FoodMenuItemAttributes"
          description: Required. Detailed attributes of the item. When item options are specified, this is considered as the base attributes and populate to each options.
        labels:
          description: Required. Language tagged labels for this menu item. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
        options:
          description: Optional. This is for an item that comes in multiple different options, and users are required to make choices. E.g. "regular" vs. "large" pizza. When options are specified, labels and attributes at item level will automatically become the first option's labels and attributes. Clients only need to specify other additional food options in this field.
          items:
            $ref: "#/components/schemas/FoodMenuItemOption"
          type: array
      type: object
    FoodMenuItemAttributes:
      description: Attributes of a food item/dish.
      properties:
        allergen:
          description: Optional. Allergens associated with the food dish. It is highly recommended to provide this field.
          items:
            enum:
              - ALLERGEN_UNSPECIFIED
              - DAIRY
              - EGG
              - FISH
              - PEANUT
              - SHELLFISH
              - SOY
              - TREE_NUT
              - WHEAT
            type: string
          type: array
        dietaryRestriction:
          description: Optional. Dietary information of the food dish. It is highly recommended to provide this field.
          items:
            enum:
              - DIETARY_RESTRICTION_UNSPECIFIED
              - HALAL
              - KOSHER
              - ORGANIC
              - VEGAN
              - VEGETARIAN
            type: string
          type: array
        ingredients:
          description: Optional. Ingredients of the food dish option.
          items:
            $ref: "#/components/schemas/Ingredient"
          type: array
        mediaKeys:
          description: Optional. The media keys of the media associated with the dish. Only photo media is supported. When there are multiple photos associated, the first photo is considered as the preferred photo.
          items:
            type: string
          type: array
        nutritionFacts:
          $ref: "#/components/schemas/NutritionFacts"
          description: Optional. Nutrition facts of the food dish option. It is highly recommended to provide this field.
        portionSize:
          $ref: "#/components/schemas/PortionSize"
          description: Optional. Size of the order, represented in units of items. (e.g. 4 "skewers", 6 "pieces")
        preparationMethods:
          description: Optional. Methods on how the food dish option is prepared.
          items:
            enum:
              - PREPARATION_METHOD_UNSPECIFIED
              - BAKED
              - BARBECUED
              - BASTED
              - BLANCHED
              - BOILED
              - BRAISED
              - CODDLED
              - FERMENTED
              - FRIED
              - GRILLED
              - KNEADED
              - MARINATED
              - PAN_FRIED
              - PICKLED
              - PRESSURE_COOKED
              - ROASTED
              - SAUTEED
              - SEARED
              - SIMMERED
              - SMOKED
              - STEAMED
              - STEEPED
              - STIR_FRIED
              - OTHER_METHOD
            type: string
          type: array
        price:
          $ref: "#/components/schemas/Money"
          description: Required. Price of the food dish.
        servesNumPeople:
          description: Optional. Number of people can be served by this food dish option.
          format: int32
          type: integer
        spiciness:
          description: Optional. Spiciness level of the food dish.
          enum:
            - SPICINESS_UNSPECIFIED
            - MILD
            - MEDIUM
            - HOT
          type: string
      type: object
    FoodMenuItemOption:
      description: Option of an Item. It requires an explicit user selection.
      properties:
        attributes:
          $ref: "#/components/schemas/FoodMenuItemAttributes"
          description: Required. Detailed attributes of the item option. Individual unspecified attributes will be inherited from the item-level attibutes as the base.
        labels:
          description: 'Required. Language tagged labels for this menu item option. E.g.: "beef pad thai", "veggie pad thai", "small pizza", "large pizza". Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.'
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
      type: object
    FoodMenuSection:
      description: Section of a menu. It can contain multiple items/dishes.
      properties:
        items:
          description: Required. Items of the section. Each Section must have at least an item.
          items:
            $ref: "#/components/schemas/FoodMenuItem"
          type: array
        labels:
          description: Required. Language tagged labels for this menu section. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
      type: object
    FoodMenus:
      description: Menus of a business that serve food dishes.
      properties:
        menus:
          description: Optional. A collection of food menus.
          items:
            $ref: "#/components/schemas/FoodMenu"
          type: array
        name:
          description: "Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/foodMenus`"
          type: string
      type: object
    FreeFormServiceItem:
      description: Represents a free-form service offered by the merchant. These are services that are not exposed as part of our structure service data. The merchant manually enters the names for of such services via a geomerchant surface.
      properties:
        categoryId:
          description: Required. The `category_id` and `service_type_id` should match the possible combinations provided in the `Category` message.
          type: string
        label:
          $ref: "#/components/schemas/Label"
          description: Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. This field should only be set if the input is a custom service item. Standardized service types should be updated via service_type_id.
      type: object
    GenerateAccountNumberRequest:
      description: Request message for Accounts.GenerateAccountNumber.
      properties: {}
      type: object
    GetGoogleUpdatedLodgingResponse:
      description: Response message for LodgingService.GetGoogleUpdatedLodging
      properties:
        diffMask:
          description: Required. The fields in the Lodging that have been updated by Google. Repeated field items are not individually specified.
          format: google-fieldmask
          type: string
        lodging:
          $ref: "#/components/schemas/Lodging"
          description: Required. The Google updated Lodging.
      type: object
    GoogleLocation:
      description: Represents a Location that is present on Google. This can be a location that has been claimed by the user, someone else, or could be unclaimed.
      properties:
        location:
          $ref: "#/components/schemas/Location"
          description: The sparsely populated Location information. This field can be re-used in CreateLocation if it is not currently claimed by a user.
        name:
          description: Resource name of this GoogleLocation, in the format `googleLocations/{googleLocationId}`.
          type: string
        requestAdminRightsUrl:
          description: A URL that will redirect the user to the request admin rights UI. This field is only present if the location has already been claimed by any user, including the current user.
          type: string
      type: object
    GoogleUpdatedLocation:
      description: Represents a location that was modified by Google.
      properties:
        diffMask:
          description: The fields that Google updated.
          format: google-fieldmask
          type: string
        location:
          $ref: "#/components/schemas/Location"
          description: The Google-updated version of this location.
      type: object
    GuestUnitFeatures:
      description: Features and available amenities in the guest unit.
      properties:
        bungalowOrVilla:
          description: Bungalow or villa. An independent structure that is part of a hotel or resort that is rented to one party for a vacation stay. The hotel or resort may be completely comprised of bungalows or villas, or they may be one of several guestroom options. Guests in the bungalows or villas most often have the same, if not more, amenities and services offered to guests in other guestroom types.
          type: boolean
        bungalowOrVillaException:
          description: Bungalow or villa exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        connectingUnitAvailable:
          description: Connecting unit available. A guestroom type that features access to an adjacent guestroom for the purpose of booking both rooms. Most often used by families who need more than one room to accommodate the number of people in their group.
          type: boolean
        connectingUnitAvailableException:
          description: Connecting unit available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        executiveFloor:
          description: Executive floor. A floor of the hotel where the guestrooms are only bookable by members of the hotel's frequent guest membership program. Benefits of this room class include access to a designated lounge which may or may not feature free breakfast, cocktails or other perks specific to members of the program.
          type: boolean
        executiveFloorException:
          description: Executive floor exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        maxAdultOccupantsCount:
          description: Max adult occupants count. The total number of adult guests allowed to stay overnight in the guestroom.
          format: int32
          type: integer
        maxAdultOccupantsCountException:
          description: Max adult occupants count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        maxChildOccupantsCount:
          description: Max child occupants count. The total number of children allowed to stay overnight in the room.
          format: int32
          type: integer
        maxChildOccupantsCountException:
          description: Max child occupants count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        maxOccupantsCount:
          description: Max occupants count. The total number of guests allowed to stay overnight in the guestroom.
          format: int32
          type: integer
        maxOccupantsCountException:
          description: Max occupants count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        privateHome:
          description: Private home. A privately owned home (house, townhouse, apartment, cabin, bungalow etc) that may or not serve as the owner's residence, but is rented out in its entirety or by the room(s) to paying guest(s) for vacation stays. Not for lease-based, long-term residency.
          type: boolean
        privateHomeException:
          description: Private home exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        suite:
          description: Suite. A guestroom category that implies both a bedroom area and a separate living area. There may or may not be full walls and doors separating the two areas, but regardless, they are very distinct. Does not mean a couch or chair in a bedroom.
          type: boolean
        suiteException:
          description: Suite exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tier:
          description: Tier. Classification of the unit based on available features/amenities. A non-standard tier is only permitted if at least one other unit type falls under the standard tier.
          enum:
            - UNIT_TIER_UNSPECIFIED
            - STANDARD_UNIT
            - DELUXE_UNIT
          type: string
        tierException:
          description: Tier exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        totalLivingAreas:
          $ref: "#/components/schemas/LivingArea"
          description: Features available in the living areas in the guest unit.
        views:
          $ref: "#/components/schemas/ViewsFromUnit"
          description: Views available from the guest unit itself.
      type: object
    GuestUnitType:
      description: A specific type of unit primarily defined by its features.
      properties:
        codes:
          description: Required. Unit or room code identifiers for a single GuestUnitType. Each code must be unique within a Lodging instance.
          items:
            type: string
          type: array
        features:
          $ref: "#/components/schemas/GuestUnitFeatures"
          description: Features and available amenities of the GuestUnitType.
        label:
          description: Required. Short, English label or name of the GuestUnitType. Target <50 chars.
          type: string
      type: object
    HealthAndSafety:
      description: Health and safety measures implemented by the hotel during COVID-19.
      properties:
        enhancedCleaning:
          $ref: "#/components/schemas/EnhancedCleaning"
          description: Enhanced cleaning measures implemented by the hotel during COVID-19.
        increasedFoodSafety:
          $ref: "#/components/schemas/IncreasedFoodSafety"
          description: Increased food safety measures implemented by the hotel during COVID-19.
        minimizedContact:
          $ref: "#/components/schemas/MinimizedContact"
          description: Minimized contact measures implemented by the hotel during COVID-19.
        personalProtection:
          $ref: "#/components/schemas/PersonalProtection"
          description: Personal protection measures implemented by the hotel during COVID-19.
        physicalDistancing:
          $ref: "#/components/schemas/PhysicalDistancing"
          description: Physical distancing measures implemented by the hotel during COVID-19.
      type: object
    HealthProviderAttributes:
      description: The Health provider attributes linked with this location.
      properties:
        insuranceNetworks:
          description: Optional. A list of insurance networks accpected by this location.
          items:
            $ref: "#/components/schemas/InsuranceNetwork"
          type: array
        name:
          description: "Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/healthProviderAttributes`"
          type: string
      type: object
    Housekeeping:
      description: Conveniences provided in guest units to facilitate an easier, more comfortable stay.
      properties:
        dailyHousekeeping:
          description: Daily housekeeping. Guest units are cleaned by hotel staff daily during guest's stay.
          type: boolean
        dailyHousekeepingException:
          description: Daily housekeeping exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        housekeepingAvailable:
          description: Housekeeping available. Guest units are cleaned by hotel staff during guest's stay. Schedule may vary from daily, weekly, or specific days of the week.
          type: boolean
        housekeepingAvailableException:
          description: Housekeeping available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        turndownService:
          description: Turndown service. Hotel staff enters guest units to prepare the bed for sleep use. May or may not include some light housekeeping. May or may not include an evening snack or candy. Also known as evening service.
          type: boolean
        turndownServiceException:
          description: Turndown service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    IncreasedFoodSafety:
      description: Increased food safety measures implemented by the hotel during COVID-19.
      properties:
        diningAreasAdditionalSanitation:
          description: Additional sanitation in dining areas.
          type: boolean
        diningAreasAdditionalSanitationException:
          description: Dining areas additional sanitation exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        disposableFlatware:
          description: Disposable flatware.
          type: boolean
        disposableFlatwareException:
          description: Disposable flatware exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        foodPreparationAndServingAdditionalSafety:
          description: Additional safety measures during food prep and serving.
          type: boolean
        foodPreparationAndServingAdditionalSafetyException:
          description: Food preparation and serving additional safety exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        individualPackagedMeals:
          description: Individually-packaged meals.
          type: boolean
        individualPackagedMealsException:
          description: Individual packaged meals exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        singleUseFoodMenus:
          description: Single-use menus.
          type: boolean
        singleUseFoodMenusException:
          description: Single use food menus exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Ingredient:
      description: This message denotes an ingredient information of a food dish.
      properties:
        labels:
          description: Required. Labels to describe ingredient. Display names should be 140 characters or less, with descriptions 1,000 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
      type: object
    InsuranceNetwork:
      description: "A single insurance network. Next id: 5"
      properties:
        networkId:
          description: Required. The id of this insurance network generated by Google.
          type: string
        networkNames:
          additionalProperties:
            type: string
          description: Output only. A map of network display names in requested languages where the language is the key and localized display name is the value. The display name in English is set by default.
          readOnly: true
          type: object
        payerNames:
          additionalProperties:
            type: string
          description: Output only. A map of payer display names in requested languages where the language is the key and localized display name is the value. The display name in English is set by default.
          readOnly: true
          type: object
        state:
          description: Output only. The state of this insurance network.
          enum:
            - NETWORK_STATE_UNSPECIFIED
            - ACCEPTED
            - PENDING_ADD
            - PENDING_DELETE
            - NOT_ACCEPTED
          readOnly: true
          type: string
      type: object
    Invitation:
      description: Output only. Represents a pending invitation.
      properties:
        name:
          description: The resource name for the invitation.
          type: string
        role:
          description: The invited role on the account.
          enum:
            - ADMIN_ROLE_UNSPECIFIED
            - OWNER
            - CO_OWNER
            - MANAGER
            - COMMUNITY_MANAGER
          type: string
        targetAccount:
          $ref: "#/components/schemas/Account"
          description: The sparsely populated account this invitation is for.
        targetLocation:
          $ref: "#/components/schemas/TargetLocation"
          description: The target location this invitation is for.
      type: object
    Item:
      description: A single list item. Each variation of an item in the price list should have its own Item with its own price data.
      properties:
        itemId:
          description: Required. ID for the item. Price list, section, and item IDs cannot be duplicated within this Location.
          type: string
        labels:
          description: Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/Label"
          type: array
        price:
          $ref: "#/components/schemas/Money"
          description: Optional. Price of the item.
      type: object
    Label:
      description: Label to be used when displaying the price list, section, or item.
      properties:
        description:
          description: Optional. Description of the price list, section, or item.
          type: string
        displayName:
          description: Required. Display name for the price list, section, or item.
          type: string
        languageCode:
          description: Optional. The BCP-47 language code that these strings apply for. Only one set of labels may be set per language.
          type: string
      type: object
    LanguagesSpoken:
      description: Languages spoken by at least one staff member.
      properties:
        arabicSpoken:
          description: Arabic. At least one staff member speaks Arabic.
          type: boolean
        arabicSpokenException:
          description: Arabic exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        cantoneseSpoken:
          description: Cantonese. At least one staff member speaks Cantonese.
          type: boolean
        cantoneseSpokenException:
          description: Cantonese exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        dutchSpoken:
          description: Dutch. At least one staff member speaks Dutch.
          type: boolean
        dutchSpokenException:
          description: Dutch exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        englishSpoken:
          description: English. At least one staff member speaks English.
          type: boolean
        englishSpokenException:
          description: English exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        filipinoSpoken:
          description: Filipino. At least one staff member speaks Filipino.
          type: boolean
        filipinoSpokenException:
          description: Filipino exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        frenchSpoken:
          description: French. At least one staff member speaks French.
          type: boolean
        frenchSpokenException:
          description: French exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        germanSpoken:
          description: German. At least one staff member speaks German.
          type: boolean
        germanSpokenException:
          description: German exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hindiSpoken:
          description: Hindi. At least one staff member speaks Hindi.
          type: boolean
        hindiSpokenException:
          description: Hindi exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        indonesianSpoken:
          description: Indonesian. At least one staff member speaks Indonesian.
          type: boolean
        indonesianSpokenException:
          description: Indonesian exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        italianSpoken:
          description: Italian. At least one staff member speaks Italian.
          type: boolean
        italianSpokenException:
          description: Italian exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        japaneseSpoken:
          description: Japanese. At least one staff member speaks Japanese.
          type: boolean
        japaneseSpokenException:
          description: Japanese exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        koreanSpoken:
          description: Korean. At least one staff member speaks Korean.
          type: boolean
        koreanSpokenException:
          description: Korean exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mandarinSpoken:
          description: Mandarin. At least one staff member speaks Mandarin.
          type: boolean
        mandarinSpokenException:
          description: Mandarin exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        portugueseSpoken:
          description: Portuguese. At least one staff member speaks Portuguese.
          type: boolean
        portugueseSpokenException:
          description: Portuguese exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        russianSpoken:
          description: Russian. At least one staff member speaks Russian.
          type: boolean
        russianSpokenException:
          description: Russian exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        spanishSpoken:
          description: Spanish. At least one staff member speaks Spanish.
          type: boolean
        spanishSpokenException:
          description: Spanish exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        vietnameseSpoken:
          description: Vietnamese. At least one staff member speaks Vietnamese.
          type: boolean
        vietnameseSpokenException:
          description: Vietnamese exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LatLng:
      description: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges.
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
          type: number
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
      type: object
    ListAccountAdminsResponse:
      description: Response message for AccessControl.ListAccountAdmins.
      properties:
        admins:
          description: A collection of Admin instances.
          items:
            $ref: "#/components/schemas/Admin"
          type: array
      type: object
    ListAccountsResponse:
      description: Response message for Accounts.ListAccounts.
      properties:
        accounts:
          description: A collection of accounts to which the user has access. The personal account of the user doing the query will always be the first item of the result, unless it is filtered out.
          items:
            $ref: "#/components/schemas/Account"
          type: array
        nextPageToken:
          description: If the number of accounts exceeds the requested page size, this field is populated with a token to fetch the next page of accounts on a subsequent call to `accounts.list`. If there are no more accounts, this field is not present in the response.
          type: string
      type: object
    ListAnswersResponse:
      description: Response message for QuestionsAndAnswers.ListAnswers
      properties:
        answers:
          description: The requested answers.
          items:
            $ref: "#/components/schemas/Answer"
          type: array
        nextPageToken:
          description: If the number of answers exceeds the requested max page size, this field is populated with a token to fetch the next page of answers on a subsequent call. If there are no more answers, this field is not present in the response.
          type: string
        totalSize:
          description: The total number of answers posted for this question across all pages.
          format: int32
          type: integer
      type: object
    ListAttributeMetadataResponse:
      description: Response message for Locations.ListAttributeMetadata.
      properties:
        attributes:
          description: A collection of attribute metadata for the available attributes.
          items:
            $ref: "#/components/schemas/AttributeMetadata"
          type: array
        nextPageToken:
          description: If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.
          type: string
      type: object
    ListBusinessCategoriesResponse:
      properties:
        categories:
          description: The categories. Categories are BASIC view. They don't contain any ServiceType information.
          items:
            $ref: "#/components/schemas/Category"
          type: array
        nextPageToken:
          description: If the number of categories exceeded the requested page size, this field will be populated with a token to fetch the next page of categories on a subsequent call to `ListBusinessCategories`.
          type: string
        totalCategoryCount:
          description: The total number of categories for the request parameters.
          format: int32
          type: integer
      type: object
    ListCustomerMediaItemsResponse:
      description: Response message for Media.ListCustomerMediaItems.
      properties:
        mediaItems:
          description: The returned list of media items.
          items:
            $ref: "#/components/schemas/MediaItem"
          type: array
        nextPageToken:
          description: If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListCustomerMediaItems.
          type: string
        totalMediaItemCount:
          description: The total number of media items for this location, irrespective of pagination. This number is approximate, particularly when there are multiple pages of results.
          format: int32
          type: integer
      type: object
    ListInsuranceNetworksResponse:
      description: Response message for InsuranceNetworkService.ListInsuranceNetworks
      properties:
        networks:
          description: A list of insurance networks that are supported by Google.
          items:
            $ref: "#/components/schemas/InsuranceNetwork"
          type: array
        nextPageToken:
          description: If there are more insurance networks than the requested page size, then this field is populated with a token to fetch the next page of insurance networks on a subsequent call to ListInsuranceNetworks.
          type: string
      type: object
    ListInvitationsResponse:
      description: Response message for AccessControl.ListInvitations.
      properties:
        invitations:
          description: A collection of location invitations that are pending for the account. The number of invitations listed here cannot exceed 1000.
          items:
            $ref: "#/components/schemas/Invitation"
          type: array
      type: object
    ListLocalPostsResponse:
      description: Response message for ListLocalPosts
      properties:
        localPosts:
          description: The returned list of local posts.
          items:
            $ref: "#/components/schemas/LocalPost"
          type: array
        nextPageToken:
          description: If there are more local posts than the requested page size, then this field is populated with a token to fetch the next page of local posts on a subsequent call to `ListLocalPosts`.
          type: string
      type: object
    ListLocationAdminsResponse:
      description: Response message for AccessControl.ListLocationAdmins.
      properties:
        admins:
          description: A collection of Admin instances.
          items:
            $ref: "#/components/schemas/Admin"
          type: array
      type: object
    ListLocationsResponse:
      description: Response message for Locations.ListLocations.
      properties:
        locations:
          description: The locations.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: If the number of locations exceeded the requested page size, this field is populated with a token to fetch the next page of locations on a subsequent call to `ListLocations`. If there are no more locations, this field is not present in the response.
          type: string
        totalSize:
          description: The approximate number of Locations in the list irrespective of pagination.
          format: int32
          type: integer
      type: object
    ListMediaItemsResponse:
      description: Response message for Media.ListMediaItems.
      properties:
        mediaItems:
          description: The returned list of media items.
          items:
            $ref: "#/components/schemas/MediaItem"
          type: array
        nextPageToken:
          description: If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListMediaItems.
          type: string
        totalMediaItemCount:
          description: The total number of media items for this location, irrespective of pagination.
          format: int32
          type: integer
      type: object
    ListQuestionsResponse:
      description: Response message for QuestionsAndAnswers.ListQuestions
      properties:
        nextPageToken:
          description: If the number of questions exceeds the requested max page size, this field is populated with a token to fetch the next page of questions on a subsequent call. If there are no more questions, this field is not present in the response.
          type: string
        questions:
          description: The requested questions,
          items:
            $ref: "#/components/schemas/Question"
          type: array
        totalSize:
          description: The total number of questions posted for this location across all pages.
          format: int32
          type: integer
      type: object
    ListRecommendedGoogleLocationsResponse:
      description: Response message for GoogleLocations.ListRecommendedGoogleLocations. It also contains some locations that have been claimed by other Business Profile users since the last time they were recommended to this Business Profile account.
      properties:
        googleLocations:
          description: The locations recommended to a Business Profile account. Each of these represents a GoogleLocation that is present on Maps. The locations are sorted in decreasing order of relevance to the Business Profile account.
          items:
            $ref: "#/components/schemas/GoogleLocation"
          type: array
        nextPageToken:
          description: During pagination, if there are more locations available to be fetched in the next page, this field is populated with a token to fetch the next page of locations in a subsequent call. If there are no more locations to be fetched, this field is not present in the response.
          type: string
        totalSize:
          description: The total number of recommended locations for this Business Profile account, irrespective of pagination.
          format: int32
          type: integer
      type: object
    ListReviewsResponse:
      description: Response message for Reviews.ListReviews.
      properties:
        averageRating:
          description: The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating.
          format: double
          type: number
        nextPageToken:
          description: If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response.
          type: string
        reviews:
          description: The reviews.
          items:
            $ref: "#/components/schemas/Review"
          type: array
        totalReviewCount:
          description: The total number of reviews for this location.
          format: int32
          type: integer
      type: object
    ListVerificationsResponse:
      description: Response message for Verifications.ListVerifications.
      properties:
        nextPageToken:
          description: If the number of verifications exceeded the requested page size, this field will be populated with a token to fetch the next page of verification on a subsequent call. If there are no more attributes, this field will not be present in the response.
          type: string
        verifications:
          description: List of the verifications.
          items:
            $ref: "#/components/schemas/Verification"
          type: array
      type: object
    LivingArea:
      description: An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit.
      properties:
        accessibility:
          $ref: "#/components/schemas/LivingAreaAccessibility"
          description: Accessibility features of the living area.
        eating:
          $ref: "#/components/schemas/LivingAreaEating"
          description: Information about eating features in the living area.
        features:
          $ref: "#/components/schemas/LivingAreaFeatures"
          description: Features in the living area.
        layout:
          $ref: "#/components/schemas/LivingAreaLayout"
          description: Information about the layout of the living area.
        sleeping:
          $ref: "#/components/schemas/LivingAreaSleeping"
          description: Information about sleeping features in the living area.
      type: object
    LivingAreaAccessibility:
      description: Accessibility features of the living area.
      properties:
        adaCompliantUnit:
          description: ADA compliant unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues, as determined by legislative policy. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.
          type: boolean
        adaCompliantUnitException:
          description: ADA compliant unit exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hearingAccessibleDoorbell:
          description: Hearing-accessible doorbell. A visual indicator(s) of a knock or ring at the door.
          type: boolean
        hearingAccessibleDoorbellException:
          description: Hearing-accessible doorbell exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hearingAccessibleFireAlarm:
          description: Hearing-accessible fire alarm. A device that gives warning of a fire through flashing lights.
          type: boolean
        hearingAccessibleFireAlarmException:
          description: Hearing-accessible fire alarm exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hearingAccessibleUnit:
          description: Hearing-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with auditory issues.
          type: boolean
        hearingAccessibleUnitException:
          description: Hearing-accessible unit exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleBathtub:
          description: Mobility-accessible bathtub. A bathtub that accomodates the physically challenged with additional railings or hand grips, a transfer seat or lift, and/or a door to enable walking into the tub.
          type: boolean
        mobilityAccessibleBathtubException:
          description: Mobility-accessible bathtub exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleShower:
          description: Mobility-accessible shower. A shower with an enlarged door or access point to accommodate a wheelchair or a waterproof seat for the physically challenged.
          type: boolean
        mobilityAccessibleShowerException:
          description: Mobility-accessible shower exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleToilet:
          description: Mobility-accessible toilet. A toilet with a higher seat, grab bars, and/or a larger area around it to accommodate the physically challenged.
          type: boolean
        mobilityAccessibleToiletException:
          description: Mobility-accessible toilet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobilityAccessibleUnit:
          description: Mobility-accessible unit. A guestroom designed to accommodate the physical challenges of a guest with mobility and/or auditory and/or visual issues. Usually features enlarged doorways, roll-in showers with seats, bathroom grab bars, and communication equipment for the hearing and sight challenged.
          type: boolean
        mobilityAccessibleUnitException:
          description: Mobility-accessible unit exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LivingAreaEating:
      description: Information about eating features in the living area.
      properties:
        coffeeMaker:
          description: Coffee maker. An electric appliance that brews coffee by heating and forcing water through ground coffee.
          type: boolean
        coffeeMakerException:
          description: Coffee maker exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        cookware:
          description: Cookware. Kitchen pots, pans and utensils used in connection with the preparation of food.
          type: boolean
        cookwareException:
          description: Cookware exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        dishwasher:
          description: Dishwasher. A counter-height electrical cabinet containing racks for dirty dishware, cookware and cutlery, and a dispenser for soap built into the pull-down door. The cabinet is attached to the plumbing system to facilitate the automatic cleaning of its contents.
          type: boolean
        dishwasherException:
          description: Dishwasher exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        indoorGrill:
          description: Indoor grill. Metal grates built into an indoor cooktop on which food is cooked over an open flame or electric heat source.
          type: boolean
        indoorGrillException:
          description: Indoor grill exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kettle:
          description: Kettle. A covered container with a handle and a spout used for boiling water.
          type: boolean
        kettleException:
          description: Kettle exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kitchenAvailable:
          description: Kitchen available. An area of the guestroom designated for the preparation and storage of food via the presence of a refrigerator, cook top, oven and sink, as well as cutlery, dishes and cookware. Usually includes small appliances such a coffee maker and a microwave. May or may not include an automatic dishwasher.
          type: boolean
        kitchenAvailableException:
          description: Kitchen available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        microwave:
          description: Microwave. An electric oven that quickly cooks and heats food by microwave energy. Smaller than a standing or wall mounted oven. Usually placed on a kitchen counter, a shelf or tabletop or mounted above a cooktop.
          type: boolean
        microwaveException:
          description: Microwave exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        minibar:
          description: Minibar. A small refrigerated cabinet in the guestroom containing bottles/cans of soft drinks, mini bottles of alcohol, and snacks. The items are most commonly available for a fee.
          type: boolean
        minibarException:
          description: Minibar exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        outdoorGrill:
          description: Outdoor grill. Metal grates on which food is cooked over an open flame or electric heat source. Part of an outdoor apparatus that supports the grates. Also known as barbecue grill or barbecue.
          type: boolean
        outdoorGrillException:
          description: Outdoor grill exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        oven:
          description: Oven. A temperature controlled, heated metal cabinet powered by gas or electricity in which food is placed for the purpose of cooking or reheating.
          type: boolean
        ovenException:
          description: Oven exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        refrigerator:
          description: Refrigerator. A large, climate-controlled electrical cabinet with vertical doors. Built for the purpose of chilling and storing perishable foods.
          type: boolean
        refrigeratorException:
          description: Refrigerator exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        sink:
          description: Sink. A basin with a faucet attached to a water source and used for the purpose of washing and rinsing.
          type: boolean
        sinkException:
          description: Sink exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        snackbar:
          description: Snackbar. A small cabinet in the guestroom containing snacks. The items are most commonly available for a fee.
          type: boolean
        snackbarException:
          description: Snackbar exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        stove:
          description: Stove. A kitchen appliance powered by gas or electricity for the purpose of creating a flame or hot surface on which pots of food can be cooked. Also known as cooktop or hob.
          type: boolean
        stoveException:
          description: Stove exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        teaStation:
          description: Tea station. A small area with the supplies needed to heat water and make tea.
          type: boolean
        teaStationException:
          description: Tea station exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        toaster:
          description: Toaster. A small, temperature controlled electric appliance with rectangular slots at the top that are lined with heated coils for the purpose of browning slices of bread products.
          type: boolean
        toasterException:
          description: Toaster exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LivingAreaFeatures:
      description: Features in the living area.
      properties:
        airConditioning:
          description: Air conditioning. An electrical machine used to cool the temperature of the guestroom.
          type: boolean
        airConditioningException:
          description: Air conditioning exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        bathtub:
          description: Bathtub. A fixed plumbing feature set on the floor and consisting of a large container that accommodates the body of an adult for the purpose of seated bathing. Includes knobs or fixtures to control the temperature of the water, a faucet through which the water flows, and a drain that can be closed for filling and opened for draining.
          type: boolean
        bathtubException:
          description: Bathtub exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        bidet:
          description: Bidet. A plumbing fixture attached to a toilet or a low, fixed sink designed for the purpose of washing after toilet use.
          type: boolean
        bidetException:
          description: Bidet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        dryer:
          description: Dryer. An electrical machine designed to dry clothing.
          type: boolean
        dryerException:
          description: Dryer exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        electronicRoomKey:
          description: Electronic room key. A card coded by the check-in computer that is read by the lock on the hotel guestroom door to allow for entry.
          type: boolean
        electronicRoomKeyException:
          description: Electronic room key exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        fireplace:
          description: Fireplace. A framed opening (aka hearth) at the base of a chimney in which logs or an electrical fire feature are burned to provide a relaxing ambiance or to heat the room. Often made of bricks or stone.
          type: boolean
        fireplaceException:
          description: Fireplace exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hairdryer:
          description: Hairdryer. A handheld electric appliance that blows temperature-controlled air for the purpose of drying wet hair. Can be mounted to a bathroom wall or a freestanding device stored in the guestroom's bathroom or closet.
          type: boolean
        hairdryerException:
          description: Hairdryer exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        heating:
          description: Heating. An electrical machine used to warm the temperature of the guestroom.
          type: boolean
        heatingException:
          description: Heating exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        inunitSafe:
          description: In-unit safe. A strong fireproof cabinet with a programmable lock, used for the protected storage of valuables in a guestroom. Often built into a closet.
          type: boolean
        inunitSafeException:
          description: In-unit safe exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        inunitWifiAvailable:
          description: In-unit Wifi available. Guests can wirelessly connect to the Internet in the guestroom. Can be free or for a fee.
          type: boolean
        inunitWifiAvailableException:
          description: In-unit Wifi available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        ironingEquipment:
          description: Ironing equipment. A device, usually with a flat metal base, that is heated to smooth, finish, or press clothes and a flat, padded, cloth-covered surface on which the clothes are worked.
          type: boolean
        ironingEquipmentException:
          description: Ironing equipment exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        payPerViewMovies:
          description: Pay per view movies. Televisions with channels that offer films that can be viewed for a fee, and have an interface to allow the viewer to accept the terms and approve payment.
          type: boolean
        payPerViewMoviesException:
          description: Pay per view movies exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        privateBathroom:
          description: Private bathroom. A bathroom designated for the express use of the guests staying in a specific guestroom.
          type: boolean
        privateBathroomException:
          description: Private bathroom exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        shower:
          description: Shower. A fixed plumbing fixture for standing bathing that features a tall spray spout or faucet through which water flows, a knob or knobs that control the water's temperature, and a drain in the floor.
          type: boolean
        showerException:
          description: Shower exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        toilet:
          description: Toilet. A fixed bathroom feature connected to a sewer or septic system and consisting of a water-flushed bowl with a seat, as well as a device that elicites the water-flushing action. Used for the process and disposal of human waste.
          type: boolean
        toiletException:
          description: Toilet exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tv:
          description: TV. A television is available in the guestroom.
          type: boolean
        tvCasting:
          description: TV casting. A television equipped with a device through which the video entertainment accessed on a personal computer, phone or tablet can be wirelessly delivered to and viewed on the guestroom's television.
          type: boolean
        tvCastingException:
          description: TV exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tvException:
          description: TV exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        tvStreaming:
          description: TV streaming. Televisions that embed a range of web-based apps to allow for watching media from those apps.
          type: boolean
        tvStreamingException:
          description: TV streaming exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        universalPowerAdapters:
          description: Universal power adapters. A power supply for electronic devices which plugs into a wall for the purpose of converting AC to a single DC voltage. Also know as AC adapter or charger.
          type: boolean
        universalPowerAdaptersException:
          description: Universal power adapters exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        washer:
          description: Washer. An electrical machine connected to a running water source designed to launder clothing.
          type: boolean
        washerException:
          description: Washer exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LivingAreaLayout:
      description: Information about the layout of the living area.
      properties:
        balcony:
          description: Balcony. An outdoor platform attached to a building and surrounded by a short wall, fence or other safety railing. The balcony is accessed through a door in a guestroom or suite and is for use by the guest staying in that room. May or may not include seating or outdoor furniture. Is not located on the ground floor. Also lanai.
          type: boolean
        balconyException:
          description: Balcony exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        livingAreaSqMeters:
          description: Living area sq meters. The measurement in meters of the area of a guestroom's living space.
          format: float
          type: number
        livingAreaSqMetersException:
          description: Living area sq meters exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        loft:
          description: Loft. A three-walled upper area accessed by stairs or a ladder that overlooks the lower area of a room.
          type: boolean
        loftException:
          description: Loft exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        nonSmoking:
          description: Non smoking. A guestroom in which the smoking of cigarettes, cigars and pipes is prohibited.
          type: boolean
        nonSmokingException:
          description: Non smoking exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        patio:
          description: Patio. A paved, outdoor area with seating attached to and accessed through a ground-floor guestroom for use by the occupants of the guestroom.
          type: boolean
        patioException:
          description: Patio exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        stairs:
          description: Stairs. There are steps leading from one level or story to another in the unit.
          type: boolean
        stairsException:
          description: Stairs exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LivingAreaSleeping:
      description: Information about sleeping features in the living area.
      properties:
        bedsCount:
          description: Beds count. The number of permanent beds present in a guestroom. Does not include rollaway beds, cribs or sofabeds.
          format: int32
          type: integer
        bedsCountException:
          description: Beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        bunkBedsCount:
          description: Bunk beds count. The number of furniture pieces in which one framed mattress is fixed directly above another by means of a physical frame. This allows one person(s) to sleep in the bottom bunk and one person(s) to sleep in the top bunk. Also known as double decker bed.
          format: int32
          type: integer
        bunkBedsCountException:
          description: Bunk beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        cribsCount:
          description: Cribs count. The number of small beds for an infant or toddler that the guestroom can obtain. The bed is surrounded by a high railing to prevent the child from falling or climbing out of the bed
          format: int32
          type: integer
        cribsCountException:
          description: Cribs count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        doubleBedsCount:
          description: Double beds count. The number of medium beds measuring 53"W x 75"L (135cm x 191cm). Also known as full size bed.
          format: int32
          type: integer
        doubleBedsCountException:
          description: Double beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        featherPillows:
          description: Feather pillows. The option for guests to obtain bed pillows that are stuffed with the feathers and down of ducks or geese.
          type: boolean
        featherPillowsException:
          description: Feather pillows exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hypoallergenicBedding:
          description: Hypoallergenic bedding. Bedding such as linens, pillows, mattress covers and/or mattresses that are made of materials known to be resistant to allergens such as mold, dust and dander.
          type: boolean
        hypoallergenicBeddingException:
          description: Hypoallergenic bedding exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kingBedsCount:
          description: King beds count. The number of large beds measuring 76"W x 80"L (193cm x 102cm). Most often meant to accompany two people. Includes California king and super king.
          format: int32
          type: integer
        kingBedsCountException:
          description: King beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        memoryFoamPillows:
          description: Memory foam pillows. The option for guests to obtain bed pillows that are stuffed with a man-made foam that responds to body heat by conforming to the body closely, and then recovers its shape when the pillow cools down.
          type: boolean
        memoryFoamPillowsException:
          description: Memory foam pillows exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        otherBedsCount:
          description: Other beds count. The number of beds that are not standard mattress and boxspring setups such as Japanese tatami mats, trundle beds, air mattresses and cots.
          format: int32
          type: integer
        otherBedsCountException:
          description: Other beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        queenBedsCount:
          description: Queen beds count. The number of medium-large beds measuring 60"W x 80"L (152cm x 102cm).
          format: int32
          type: integer
        queenBedsCountException:
          description: Queen beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        rollAwayBedsCount:
          description: Roll away beds count. The number of mattresses on wheeled frames that can be folded in half and rolled away for easy storage that the guestroom can obtain upon request.
          format: int32
          type: integer
        rollAwayBedsCountException:
          description: Roll away beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        singleOrTwinBedsCount:
          description: Single or twin count beds. The number of smaller beds measuring 38"W x 75"L (97cm x 191cm) that can accommodate one adult.
          format: int32
          type: integer
        singleOrTwinBedsCountException:
          description: Single or twin beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        sofaBedsCount:
          description: Sofa beds count. The number of specially designed sofas that can be made to serve as a bed by lowering its hinged upholstered back to horizontal position or by pulling out a concealed mattress.
          format: int32
          type: integer
        sofaBedsCountException:
          description: Sofa beds count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        syntheticPillows:
          description: Synthetic pillows. The option for guests to obtain bed pillows stuffed with polyester material crafted to reproduce the feel of a pillow stuffed with down and feathers.
          type: boolean
        syntheticPillowsException:
          description: Synthetic pillows exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    LocalPost:
      description: Represents a [local post](https://support.google.com/business/answer/7662907) for a location.
      properties:
        alertType:
          description: The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts.
          enum:
            - ALERT_TYPE_UNSPECIFIED
            - COVID_19
          type: string
        callToAction:
          $ref: "#/components/schemas/CallToAction"
          description: The URL that users are sent to when clicking through the promotion. Ignored for topic type `OFFER`.
        createTime:
          description: Output only. Time of the creation of the post.
          format: google-datetime
          type: string
        event:
          $ref: "#/components/schemas/LocalPostEvent"
          description: Event information. Required for topic types `EVENT` and `OFFER`.
        languageCode:
          description: The language of the local post.
          type: string
        media:
          description: The media associated with the post. source_url is the only supported data field for a LocalPost MediaItem.
          items:
            $ref: "#/components/schemas/MediaItem"
          type: array
        name:
          description: "Output only. Google identifier for this local post in the form: `accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id}`"
          type: string
        offer:
          $ref: "#/components/schemas/LocalPostOffer"
          description: Additional data for offer posts. This should only be set when the topic_type is OFFER.
        searchUrl:
          description: Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc.
          type: string
        state:
          description: Output only. The state of the post, indicating what part of its lifecycle it is in.
          enum:
            - LOCAL_POST_STATE_UNSPECIFIED
            - REJECTED
            - LIVE
            - PROCESSING
          type: string
        summary:
          description: Description/body of the local post.
          type: string
        topicType:
          description: "Required. The topic type of the post: standard, event, offer, or alert."
          enum:
            - LOCAL_POST_TOPIC_TYPE_UNSPECIFIED
            - STANDARD
            - EVENT
            - OFFER
            - ALERT
          type: string
        updateTime:
          description: Output only. Time of the last modification of the post made by the user.
          format: google-datetime
          type: string
      type: object
    LocalPostEvent:
      description: All the information pertaining to an event featured in a local post.
      properties:
        schedule:
          $ref: "#/components/schemas/TimeInterval"
          description: Event start and end date/time.
        title:
          description: Name of the event.
          type: string
      type: object
    LocalPostMetrics:
      description: All the metrics requested for a Local Post.
      properties:
        localPostName:
          type: string
        metricValues:
          description: A list of values for the requested metrics.
          items:
            $ref: "#/components/schemas/MetricValue"
          type: array
      type: object
    LocalPostOffer:
      description: Specific fields for offer posts.
      properties:
        couponCode:
          description: Optional. Offer code that is usable in store or online.
          type: string
        redeemOnlineUrl:
          description: Optional. Online link to redeem offer.
          type: string
        termsConditions:
          description: Optional. Offer terms and conditions.
          type: string
      type: object
    Location:
      description: A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.
      properties:
        adWordsLocationExtensions:
          $ref: "#/components/schemas/AdWordsLocationExtensions"
          description: Additional information that is surfaced in AdWords.
        additionalCategories:
          description: Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.
          items:
            $ref: "#/components/schemas/Category"
          type: array
        additionalPhones:
          description: Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.
          items:
            type: string
          type: array
        address:
          $ref: "#/components/schemas/PostalAddress"
          description: A precise, accurate address to describe your business location. PO boxes or mailboxes located at remote locations are not acceptable. At this time, you can specify a maximum of five `address_lines` values in the address.
        attributes:
          description: Attributes for this location.
          items:
            $ref: "#/components/schemas/Attribute"
          type: array
        labels:
          description: A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label).
          items:
            type: string
          type: array
        languageCode:
          description: The language of the location. Set during creation and not updateable.
          type: string
        latlng:
          $ref: "#/components/schemas/LatLng"
          description: User-provided latitude and longitude. When creating a location, this field is ignored if the provided address geocodes successfully. This field is only returned on get requests if the user-provided `latlng` value was accepted during create, or the `latlng` value was updated through the Business Profile website. This field cannot be updated.
        locationKey:
          $ref: "#/components/schemas/LocationKey"
          description: A collection of keys that link this business to other Google properties, such as a Google+ page and Google Maps Places.
        locationName:
          description: Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, "Chase ATM in Duane Reade").
          type: string
        locationState:
          $ref: "#/components/schemas/LocationState"
          description: Output only. A set of booleans that reflects the [state of a location.](https://support.google.com/business/answer/3480862)
        metadata:
          $ref: "#/components/schemas/Metadata"
          description: Output Only. Additional non-user-editable information.
        moreHours:
          description: More hours for a business's different departments or specific customers.
          items:
            $ref: "#/components/schemas/MoreHours"
          type: array
        name:
          description: "Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}` In the context of matches, this field will not be populated."
          type: string
        openInfo:
          $ref: "#/components/schemas/OpenInfo"
          description: A flag that indicates whether the location is currently open for business.
        priceLists:
          description: Price list information for this location.
          items:
            $ref: "#/components/schemas/PriceList"
          type: array
        primaryCategory:
          $ref: "#/components/schemas/Category"
          description: Category that best describes the core business this location engages in.
        primaryPhone:
          description: A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.
          type: string
        profile:
          $ref: "#/components/schemas/Profile"
          description: Describes your business in your own voice and shares with users the unique story of your business and offerings.
        regularHours:
          $ref: "#/components/schemas/BusinessHours"
          description: Operating hours for the business.
        relationshipData:
          $ref: "#/components/schemas/RelationshipData"
          description: All locations and chain related to this one.
        serviceArea:
          $ref: "#/components/schemas/ServiceAreaBusiness"
          description: Service area businesses provide their service at the customer's location. If this business is a service area business, this field describes the area(s) serviced by the business.
        specialHours:
          $ref: "#/components/schemas/SpecialHours"
          description: Special hours for the business. This typically includes holiday hours, and other times outside of regular operating hours. These override regular business hours.
        storeCode:
          description: External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records.
          type: string
        websiteUrl:
          description: A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.
          type: string
      type: object
    LocationAssociation:
      description: How the media item is associated with its location.
      properties:
        category:
          description: The category that this location photo belongs to.
          enum:
            - CATEGORY_UNSPECIFIED
            - COVER
            - PROFILE
            - LOGO
            - EXTERIOR
            - INTERIOR
            - PRODUCT
            - AT_WORK
            - FOOD_AND_DRINK
            - MENU
            - COMMON_AREA
            - ROOMS
            - TEAMS
            - ADDITIONAL
          type: string
        priceListItemId:
          description: The ID of a price list item that this location photo is associated with.
          type: string
      type: object
    LocationDrivingDirectionMetrics:
      description: A location indexed with the regions that people usually come from. This is captured by counting how many driving-direction requests to this location are from each region.
      properties:
        locationName:
          description: The location resource name this metric value belongs to.
          type: string
        timeZone:
          description: Time zone (IANA timezone IDs, for example, 'Europe/London') of the location.
          type: string
        topDirectionSources:
          description: Driving-direction requests by source region. By convention, these are sorted by count with at most 10 results.
          items:
            $ref: "#/components/schemas/TopDirectionSources"
          type: array
      type: object
    LocationKey:
      description: Alternate/surrogate key references for a location.
      properties:
        explicitNoPlaceId:
          description: Output only. A value of true indicates that an unset place ID is deliberate, which is different from no association being made yet.
          type: boolean
        placeId:
          description: If this location has been verified and is connected to/appears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. If this location is unverified, this field may be populated if the location has been associated with a place that appears on Google Maps. This field can be set during Create calls, but not for Update. The additional `explicit_no_place_id` bool qualifies whether an unset place ID is deliberate or not.
          type: string
        plusPageId:
          description: Output only. If this location has a Google+ page associated with it, this is populated with the Google+ page ID for this location.
          type: string
        requestId:
          description: Output only. The `request_id` used to create this location. May be empty if this location was created outside of the Google My Business API or Business Profile Locations.
          type: string
      type: object
    LocationMetrics:
      description: A series of Metrics and BreakdownMetrics associated with a Location over some time range.
      properties:
        locationName:
          description: The location resource name these values belong to.
          type: string
        metricValues:
          description: A list of values for the requested metrics.
          items:
            $ref: "#/components/schemas/MetricValue"
          type: array
        timeZone:
          description: IANA timezone for the location.
          type: string
      type: object
    LocationReview:
      description: Represents a review with location information.
      properties:
        name:
          description: Location resource name.
          type: string
        review:
          $ref: "#/components/schemas/Review"
          description: A review for the location.
      type: object
    LocationState:
      description: Contains a set of booleans that reflect the [state of a Location.](https://support.google.com/business/answer/3480862)
      properties:
        canDelete:
          description: Output only. Indicates whether the location can be deleted using the Google My Business API.
          type: boolean
        canHaveFoodMenus:
          description: Output only. Indicates if the listing is eligible for food menu.
          readOnly: true
          type: boolean
        canModifyServiceList:
          description: Output only. Indicates if the listing can modify a ServiceList.
          readOnly: true
          type: boolean
        canOperateHealthData:
          description: Output only. Indicates whether the location can operate on Health data.
          readOnly: true
          type: boolean
        canOperateLodgingData:
          description: Output only. Indicates whether the location can operate on Lodging data.
          readOnly: true
          type: boolean
        canUpdate:
          description: Output only. Indicates whether the location can be updated.
          type: boolean
        hasPendingEdits:
          description: Output only. Indicates whether any of this Location's properties are in the edit pending state.
          type: boolean
        hasPendingVerification:
          description: Output only. Indicates whether the location has pending verification requests.
          type: boolean
        isDisabled:
          description: Output only. Indicates whether the location is disabled.
          type: boolean
        isDisconnected:
          description: Output only. Indicates whether the location is disconnected from a place on Google Maps.
          type: boolean
        isDuplicate:
          description: Output only. Indicates whether the location is a duplicate of another location.
          type: boolean
        isGoogleUpdated:
          description: Output only. Indicates whether the place ID associated with this location has updates.
          type: boolean
        isLocalPostApiDisabled:
          description: Output only. Indicates whether [accounts.locations.localPosts](/my-business/reference/rest/v4/accounts.locations.localPosts) is disabled for this location.
          type: boolean
        isPendingReview:
          description: Output only. Indicates whether the review of the location is pending.
          type: boolean
        isPublished:
          description: Output only. Indicates whether the location is published.
          type: boolean
        isSuspended:
          description: Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145).
          type: boolean
        isVerified:
          description: Output only. Indicates whether the location is verified.
          type: boolean
        needsReverification:
          description: Output only. Indicates whether the location requires reverification.
          type: boolean
      type: object
    Lodging:
      description: Lodging of a location that provides accomodations.
      properties:
        accessibility:
          $ref: "#/components/schemas/Accessibility"
          description: Physical adaptations made to the property in consideration of varying levels of human physical ability.
        activities:
          $ref: "#/components/schemas/Activities"
          description: Amenities and features related to leisure and play.
        allUnits:
          $ref: "#/components/schemas/GuestUnitFeatures"
          description: All units on the property have at least these attributes.
        business:
          $ref: "#/components/schemas/Business"
          description: Features of the property of specific interest to the business traveler.
        commonLivingArea:
          $ref: "#/components/schemas/LivingArea"
          description: Features of the shared living areas available in this Lodging.
        connectivity:
          $ref: "#/components/schemas/Connectivity"
          description: The ways in which the property provides guests with the ability to access the internet.
        families:
          $ref: "#/components/schemas/Families"
          description: Services and amenities for families and young guests.
        foodAndDrink:
          $ref: "#/components/schemas/FoodAndDrink"
          description: Meals, snacks, and beverages available at the property.
        guestUnits:
          description: Individual GuestUnitTypes that are available in this Lodging.
          items:
            $ref: "#/components/schemas/GuestUnitType"
          type: array
        healthAndSafety:
          $ref: "#/components/schemas/HealthAndSafety"
          description: Health and safety measures implemented by the hotel during COVID-19.
        housekeeping:
          $ref: "#/components/schemas/Housekeeping"
          description: Conveniences provided in guest units to facilitate an easier, more comfortable stay.
        metadata:
          $ref: "#/components/schemas/LodgingMetadata"
          description: Required. Metadata for the lodging.
        name:
          description: "Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`"
          type: string
        parking:
          $ref: "#/components/schemas/Parking"
          description: Parking options at the property.
        pets:
          $ref: "#/components/schemas/Pets"
          description: Policies regarding guest-owned animals.
        policies:
          $ref: "#/components/schemas/Policies"
          description: Property rules that impact guests.
        pools:
          $ref: "#/components/schemas/Pools"
          description: Swimming pool or recreational water facilities available at the hotel.
        property:
          $ref: "#/components/schemas/Property"
          description: General factual information about the property's physical structure and important dates.
        services:
          $ref: "#/components/schemas/Services"
          description: Conveniences or help provided by the property to facilitate an easier, more comfortable stay.
        someUnits:
          $ref: "#/components/schemas/GuestUnitFeatures"
          description: Some units on the property have as much as these attributes.
        transportation:
          $ref: "#/components/schemas/Transportation"
          description: Vehicles or vehicular services facilitated or owned by the property.
        wellness:
          $ref: "#/components/schemas/Wellness"
          description: Guest facilities at the property to promote or maintain health, beauty, and fitness.
      type: object
    LodgingMetadata:
      description: Metadata for the Lodging.
      properties:
        updateTime:
          description: Required. The latest time at which the Lodging data is asserted to be true in the real world. This is not necessarily the time at which the request is made.
          format: google-datetime
          type: string
      type: object
    MatchedLocation:
      description: Represents a possible match to a location.
      properties:
        isExactMatch:
          description: Is this an exact match?
          type: boolean
        location:
          $ref: "#/components/schemas/Location"
          description: "The sparsely populated location that is a potential match. Unpopulated fields include, but may not be limited to: name (the matched location cannot be retrieved via `GetLocation` nor `BatchGetLocations`); `store_code`; `service_area` coverage area details; `labels`; `ad_words_location_extensions`; `photos`"
      type: object
    MediaInsights:
      description: Insights and statistics for the media item.
      properties:
        viewCount:
          description: Output only. The number of times the media item has been viewed.
          format: int64
          type: string
      type: object
    MediaItem:
      description: A single media item.
      properties:
        attribution:
          $ref: "#/components/schemas/Attribution"
          description: Output only. Attribution information for customer media items. You must display this attribution as provided to your users and must not delete or alter the attribution.
        createTime:
          description: Output only. Creation time of this media item.
          format: google-datetime
          type: string
        dataRef:
          $ref: "#/components/schemas/MediaItemDataRef"
          description: Input only. A reference to media item binary data as obtained by the `StartUploadMediaItemData` method. When creating a media item, either sourceUrl or dataRef must be set.
        description:
          description: Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.
          type: string
        dimensions:
          $ref: "#/components/schemas/Dimensions"
          description: Output only. The dimensions (width and height) in pixels.
        googleUrl:
          description: Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.
          type: string
        insights:
          $ref: "#/components/schemas/MediaInsights"
          description: Output only. Statistics for this media item.
        locationAssociation:
          $ref: "#/components/schemas/LocationAssociation"
          description: Required when calling `CreatePhoto`. Describes how this media item is connected to its location. Must be either a category (for example, EXTERIOR) or the ID of a price list item. This is required when adding new media to a location with `CreateMediaItem`. For other types of media, for example, photos on local posts, this will not be present.
        mediaFormat:
          description: The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.
          enum:
            - MEDIA_FORMAT_UNSPECIFIED
            - PHOTO
            - VIDEO
          type: string
        name:
          description: The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`
          type: string
        sourceUrl:
          description: A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.
          type: string
        thumbnailUrl:
          description: Output only. Where provided, the URL of a thumbnail image for this media item.
          type: string
      type: object
    MediaItemDataRef:
      description: Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.
      properties:
        resourceName:
          description: "The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: `curl -X POST -T{path_to_file} \"http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media\"` For CreateMediaItem calls, set this as the `MediaItem` `data_ref`."
          type: string
      type: object
    MenuLabel:
      description: Label to be used when displaying the menu and its various sub-components.
      properties:
        description:
          description: Optional. Supplementary information of the component.
          type: string
        displayName:
          description: Required. Display name of the component.
          type: string
        languageCode:
          description: Optional. The BCP 47 code of language. If the language is not available, it will default to English.
          type: string
      type: object
    Metadata:
      description: Additional non-user-editable information about the location.
      properties:
        duplicate:
          $ref: "#/components/schemas/Duplicate"
          description: "Information about the location that this location duplicates. Only present when `location_state.is_duplicate` is true. Deprecated: We are no longer supporting detailed information for duplicates."
        mapsUrl:
          description: A link to the location on Maps.
          type: string
        newReviewUrl:
          description: A link to the page on Google Search where a customer can leave a review for the location.
          type: string
      type: object
    MetricRequest:
      description: A request to return values for one metric and the options for how those values should be returned.
      properties:
        metric:
          description: The requested metric.
          enum:
            - METRIC_UNSPECIFIED
            - ALL
            - QUERIES_DIRECT
            - QUERIES_INDIRECT
            - QUERIES_CHAIN
            - VIEWS_MAPS
            - VIEWS_SEARCH
            - ACTIONS_WEBSITE
            - ACTIONS_PHONE
            - ACTIONS_DRIVING_DIRECTIONS
            - PHOTOS_VIEWS_MERCHANT
            - PHOTOS_VIEWS_CUSTOMERS
            - PHOTOS_COUNT_MERCHANT
            - PHOTOS_COUNT_CUSTOMERS
            - LOCAL_POST_VIEWS_SEARCH
            - LOCAL_POST_ACTIONS_CALL_TO_ACTION
          type: string
        options:
          description: How the values should appear when returned.
          items:
            enum:
              - METRIC_OPTION_UNSPECIFIED
              - AGGREGATED_TOTAL
              - AGGREGATED_DAILY
              - BREAKDOWN_DAY_OF_WEEK
              - BREAKDOWN_HOUR_OF_DAY
            type: string
          type: array
      type: object
    MetricValue:
      description: A value for a single Metric from a starting time.
      properties:
        dimensionalValues:
          description: Dimensional values for this metric.
          items:
            $ref: "#/components/schemas/DimensionalMetricValue"
          type: array
        metric:
          description: The metric for which the value applies.
          enum:
            - METRIC_UNSPECIFIED
            - ALL
            - QUERIES_DIRECT
            - QUERIES_INDIRECT
            - QUERIES_CHAIN
            - VIEWS_MAPS
            - VIEWS_SEARCH
            - ACTIONS_WEBSITE
            - ACTIONS_PHONE
            - ACTIONS_DRIVING_DIRECTIONS
            - PHOTOS_VIEWS_MERCHANT
            - PHOTOS_VIEWS_CUSTOMERS
            - PHOTOS_COUNT_MERCHANT
            - PHOTOS_COUNT_CUSTOMERS
            - LOCAL_POST_VIEWS_SEARCH
            - LOCAL_POST_ACTIONS_CALL_TO_ACTION
          type: string
        totalValue:
          $ref: "#/components/schemas/DimensionalMetricValue"
          description: The total aggregated value for this metric. Set for the AGGREGATED_TOTAL option.
      type: object
    MinimizedContact:
      description: Minimized contact measures implemented by the hotel during COVID-19.
      properties:
        contactlessCheckinCheckout:
          description: No-contact check-in and check-out.
          type: boolean
        contactlessCheckinCheckoutException:
          description: Contactless check-in check-out exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        digitalGuestRoomKeys:
          description: Keyless mobile entry to guest rooms.
          type: boolean
        digitalGuestRoomKeysException:
          description: Digital guest room keys exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        housekeepingScheduledRequestOnly:
          description: Housekeeping scheduled by request only.
          type: boolean
        housekeepingScheduledRequestOnlyException:
          description: Housekeeping scheduled request only exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        noHighTouchItemsCommonAreas:
          description: High-touch items, such as magazines, removed from common areas.
          type: boolean
        noHighTouchItemsCommonAreasException:
          description: No high touch items common areas exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        noHighTouchItemsGuestRooms:
          description: High-touch items, such as decorative pillows, removed from guest rooms.
          type: boolean
        noHighTouchItemsGuestRoomsException:
          description: No high touch items guest rooms exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        plasticKeycardsDisinfected:
          description: Plastic key cards are disinfected or discarded.
          type: boolean
        plasticKeycardsDisinfectedException:
          description: Plastic keycards disinfected exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        roomBookingsBuffer:
          description: Buffer maintained between room bookings.
          type: boolean
        roomBookingsBufferException:
          description: Room bookings buffer exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    MoreHours:
      description: The time periods during which a location is open for certain types of business.
      properties:
        hoursTypeId:
          description: Required. Type of hours. Clients should call {#link businessCategories:BatchGet} to get supported hours types for categories of their locations.
          type: string
        periods:
          description: Required. A collection of times that this location is open. Each period represents a range of hours when the location is open during the week.
          items:
            $ref: "#/components/schemas/TimePeriod"
          type: array
      type: object
    MoreHoursType:
      description: More hours types that a business can offers, in addition to its regular hours.
      properties:
        displayName:
          description: Output only. The human-readable English display name for the hours type.
          readOnly: true
          type: string
        hoursTypeId:
          description: Output only. A stable ID provided by Google for this hours type.
          readOnly: true
          type: string
        localizedDisplayName:
          description: Output only. The human-readable localized display name for the hours type.
          readOnly: true
          type: string
      type: object
    Notifications:
      description: A Google Cloud Pub/Sub topic where notifications can be published when a location is updated or has a new review. There will be only one notification settings resource per-account.
      properties:
        name:
          description: Output only. The notifications resource name.
          type: string
        notificationTypes:
          description: The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications.
          items:
            enum:
              - NOTIFICATION_TYPE_UNSPECIFIED
              - GOOGLE_UPDATE
              - NEW_REVIEW
              - UPDATED_REVIEW
              - NEW_CUSTOMER_MEDIA
              - NEW_QUESTION
              - UPDATED_QUESTION
              - NEW_ANSWER
              - UPDATED_ANSWER
              - UPDATED_LOCATION_STATE
            type: string
          type: array
        topicName:
          description: The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic.
          type: string
      type: object
    NutritionFact:
      description: This message denotes nutrition information with an upper bound and lower bound range and can be represented by mass unit. Lower amount must be specified. Both lower and upper amounts are non-negative numbers.
      properties:
        lowerAmount:
          description: Required. Lower amount of nutrition
          format: double
          type: number
        unit:
          description: Required. Unit of the given nutrition information.
          enum:
            - MASS_UNIT_UNSPECIFIED
            - GRAM
            - MILLIGRAM
          type: string
        upperAmount:
          description: Optional. Upper amount of nutrition
          format: double
          type: number
      type: object
    NutritionFacts:
      description: This message represents nutrition facts for a food dish.
      properties:
        calories:
          $ref: "#/components/schemas/CaloriesFact"
          description: Optional. Calories of the dish.
        cholesterol:
          $ref: "#/components/schemas/NutritionFact"
          description: Optional. Cholesterol information for a given food dish.
        protein:
          $ref: "#/components/schemas/NutritionFact"
          description: Optional. Protein information for a given food dish.
        sodium:
          $ref: "#/components/schemas/NutritionFact"
          description: Optional. Sodium information for a given food dish.
        totalCarbohydrate:
          $ref: "#/components/schemas/NutritionFact"
          description: Optional. Carbohydrate information for a given food dish.
        totalFat:
          $ref: "#/components/schemas/NutritionFact"
          description: Optional. Fat information for a given food dish.
      type: object
    OpenInfo:
      description: Information related to the opening state of the business.
      properties:
        canReopen:
          description: Output only. Indicates whether this business is eligible for re-open.
          type: boolean
        openingDate:
          $ref: "#/components/schemas/Date"
          description: The date on which the location first opened. If the exact day is not known, month and year only can be provided. The date must be in the past or be no more than one year in the future.
        status:
          description: Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.
          enum:
            - OPEN_FOR_BUSINESS_UNSPECIFIED
            - OPEN
            - CLOSED_PERMANENTLY
            - CLOSED_TEMPORARILY
          type: string
      type: object
    OrganizationInfo:
      description: Additional Info stored for an organization.
      properties:
        phoneNumber:
          description: The contact number for the organization.
          type: string
        postalAddress:
          $ref: "#/components/schemas/PostalAddress"
          description: The postal address for the account.
        registeredDomain:
          description: The registered domain for the account.
          type: string
      type: object
    Parking:
      description: Parking options at the property.
      properties:
        electricCarChargingStations:
          description: Electric car charging stations. Electric power stations, usually located outdoors, into which guests plug their electric cars to receive a charge.
          type: boolean
        electricCarChargingStationsException:
          description: Electric car charging stations exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeParking:
          description: Free parking. The hotel allows the cars of guests to be parked for free. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Parking may be performed by the guest or by hotel staff. Free parking must be available to all guests (limited conditions does not apply).
          type: boolean
        freeParkingException:
          description: Free parking exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeSelfParking:
          description: Free self parking. Guests park their own cars for free. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply.
          type: boolean
        freeSelfParkingException:
          description: Free self parking exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeValetParking:
          description: Free valet parking. Hotel staff member parks the cars of guests. Parking with this service is free.
          type: boolean
        freeValetParkingException:
          description: Free valet parking exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        parkingAvailable:
          description: Parking available. The hotel allows the cars of guests to be parked. Can be free or for a fee. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Parking may be performed by the guest or by hotel staff.
          type: boolean
        parkingAvailableException:
          description: Parking available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        selfParkingAvailable:
          description: Self parking available. Guests park their own cars. Parking facility may be an outdoor lot or an indoor garage, but must be onsite. Nearby parking does not apply. Can be free or for a fee.
          type: boolean
        selfParkingAvailableException:
          description: Self parking available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        valetParkingAvailable:
          description: Valet parking available. Hotel staff member parks the cars of guests. Parking with this service can be free or for a fee.
          type: boolean
        valetParkingAvailableException:
          description: Valet parking available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    PaymentOptions:
      description: Forms of payment accepted at the property.
      properties:
        cash:
          description: Cash. The hotel accepts payment by paper/coin currency.
          type: boolean
        cashException:
          description: Cash exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        cheque:
          description: Cheque. The hotel accepts a printed document issued by the guest's bank in the guest's name as a form of payment.
          type: boolean
        chequeException:
          description: Cheque exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        creditCard:
          description: Credit card. The hotel accepts payment by a card issued by a bank or credit card company. Also known as charge card, debit card, bank card, or charge plate.
          type: boolean
        creditCardException:
          description: Credit card exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        debitCard:
          description: Debit card. The hotel accepts a bank-issued card that immediately deducts the charged funds from the guest's bank account upon processing.
          type: boolean
        debitCardException:
          description: Debit card exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        mobileNfc:
          description: Mobile nfc. The hotel has the compatible computer hardware terminal that reads and charges a payment app on the guest's smartphone without requiring the two devices to make physical contact. Also known as Apple Pay, Google Pay, Samsung Pay.
          type: boolean
        mobileNfcException:
          description: Mobile nfc exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    PersonalProtection:
      description: Personal protection measures implemented by the hotel during COVID-19.
      properties:
        commonAreasOfferSanitizingItems:
          description: Hand-sanitizer and/or sanitizing wipes are offered in common areas.
          type: boolean
        commonAreasOfferSanitizingItemsException:
          description: Common areas offer sanitizing items exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        faceMaskRequired:
          description: Masks required on the property.
          type: boolean
        faceMaskRequiredException:
          description: Face mask required exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        guestRoomHygieneKitsAvailable:
          description: In-room hygiene kits with masks, hand sanitizer, and/or antibacterial wipes.
          type: boolean
        guestRoomHygieneKitsAvailableException:
          description: Guest room hygiene kits available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        protectiveEquipmentAvailable:
          description: Masks and/or gloves available for guests.
          type: boolean
        protectiveEquipmentAvailableException:
          description: Protective equipment available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Pets:
      description: Policies regarding guest-owned animals.
      properties:
        catsAllowed:
          description: Cats allowed. Domesticated felines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.
          type: boolean
        catsAllowedException:
          description: Cats allowed exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        dogsAllowed:
          description: Dogs allowed. Domesticated canines are permitted at the property and allowed to stay in the guest room of their owner. May or may not require a fee.
          type: boolean
        dogsAllowedException:
          description: Dogs allowed exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        petsAllowed:
          description: Pets allowed. Household animals are allowed at the property and in the specific guest room of their owner. May or may not include dogs, cats, reptiles and/or fish. May or may not require a fee. Service animals are not considered to be pets, so not governed by this policy.
          type: boolean
        petsAllowedException:
          description: Pets allowed exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        petsAllowedFree:
          description: Pets allowed free. Household animals are allowed at the property and in the specific guest room of their owner for free. May or may not include dogs, cats, reptiles, and/or fish.
          type: boolean
        petsAllowedFreeException:
          description: Pets allowed free exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    PhoneInput:
      description: Input for PHONE_CALL/SMS verification.
      properties:
        phoneNumber:
          description: The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options.
          type: string
      type: object
    PhoneVerificationData:
      description: Display Data for verifications through phone, e.g. phone call, sms.
      properties:
        phoneNumber:
          description: Phone number that the PIN will be sent to.
          type: string
      type: object
    PhysicalDistancing:
      description: Physical distancing measures implemented by the hotel during COVID-19.
      properties:
        commonAreasPhysicalDistancingArranged:
          description: Common areas arranged to maintain physical distancing.
          type: boolean
        commonAreasPhysicalDistancingArrangedException:
          description: Common areas physical distancing arranged exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        physicalDistancingRequired:
          description: Physical distancing required.
          type: boolean
        physicalDistancingRequiredException:
          description: Physical distancing required exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        safetyDividers:
          description: Safety dividers at front desk and other locations.
          type: boolean
        safetyDividersException:
          description: Safety dividers exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        sharedAreasLimitedOccupancy:
          description: Guest occupancy limited within shared facilities.
          type: boolean
        sharedAreasLimitedOccupancyException:
          description: Shared areas limited occupancy exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        wellnessAreasHavePrivateSpaces:
          description: Private spaces designated in spa and wellness areas.
          type: boolean
        wellnessAreasHavePrivateSpacesException:
          description: Wellness areas have private spaces exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    PlaceInfo:
      description: Defines an area that's represented by a place ID.
      properties:
        name:
          description: The localized name of the place. For example, `Scottsdale, AZ`.
          type: string
        placeId:
          description: The ID of the place. Must correspond to a [region.] (https://developers.google.com/places/web-service/supported_types#table3)
          type: string
      type: object
    Places:
      description: Defines the union of areas represented by a set of places.
      properties:
        placeInfos:
          description: The areas represented by place IDs. Limited to a maximum of 20 places.
          items:
            $ref: "#/components/schemas/PlaceInfo"
          type: array
      type: object
    PointRadius:
      description: A radius around a particular point (latitude/longitude).
      properties:
        latlng:
          $ref: "#/components/schemas/LatLng"
          description: The latitude/longitude that specifies the center of an area defined by the radius.
        radiusKm:
          description: The distance in kilometers of the area around the point.
          format: float
          type: number
      type: object
    Policies:
      description: Property rules that impact guests.
      properties:
        allInclusiveAvailable:
          description: All inclusive available. The hotel offers a rate option that includes the cost of the room, meals, activities, and other amenities that might otherwise be charged separately.
          type: boolean
        allInclusiveAvailableException:
          description: All inclusive available exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        allInclusiveOnly:
          description: All inclusive only. The only rate option offered by the hotel is a rate that includes the cost of the room, meals, activities and other amenities that might otherwise be charged separately.
          type: boolean
        allInclusiveOnlyException:
          description: All inclusive only exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        checkinTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Check-in time. The time of the day at which the hotel begins providing guests access to their unit at the beginning of their stay.
        checkinTimeException:
          description: Check-in time exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        checkoutTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Check-out time. The time of the day on the last day of a guest's reserved stay at which the guest must vacate their room and settle their bill. Some hotels may offer late or early check out for a fee.
        checkoutTimeException:
          description: Check-out time exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        kidsStayFree:
          description: Kids stay free. The children of guests are allowed to stay in the room/suite of a parent or adult without an additional fee. The policy may or may not stipulate a limit of the child's age or the overall number of children allowed.
          type: boolean
        kidsStayFreeException:
          description: Kids stay free exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        maxChildAge:
          description: Max child age. The hotel allows children up to a certain age to stay in the room/suite of a parent or adult without an additional fee.
          format: int32
          type: integer
        maxChildAgeException:
          description: Max child age exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        maxKidsStayFreeCount:
          description: Max kids stay free count. The hotel allows a specific, defined number of children to stay in the room/suite of a parent or adult without an additional fee.
          format: int32
          type: integer
        maxKidsStayFreeCountException:
          description: Max kids stay free count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        paymentOptions:
          $ref: "#/components/schemas/PaymentOptions"
          description: Forms of payment accepted at the property.
        smokeFreeProperty:
          description: Smoke free property. Smoking is not allowed inside the building, on balconies, or in outside spaces. Hotels that offer a designated area for guests to smoke are not considered smoke-free properties.
          type: boolean
        smokeFreePropertyException:
          description: Smoke free property exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Pools:
      description: Swimming pool or recreational water facilities available at the hotel.
      properties:
        adultPool:
          description: Adult pool. A pool restricted for use by adults only. Can be indoors or outdoors.
          type: boolean
        adultPoolException:
          description: Adult pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        hotTub:
          description: Hot tub. A man-made pool containing bubbling water maintained at a higher temperature and circulated by aerating jets for the purpose of soaking, relaxation and hydrotherapy. Can be indoors or outdoors. Not used for active swimming. Also known as Jacuzzi. Hot tub must be in a common area where all guests can access it. Does not apply to room-specific hot tubs that are only accessible to guest occupying that room.
          type: boolean
        hotTubException:
          description: Hot tub exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        indoorPool:
          description: Indoor pool. A pool located inside the hotel and available for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.
          type: boolean
        indoorPoolException:
          description: Indoor pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        indoorPoolsCount:
          description: Indoor pools count. The sum of all indoor pools at the hotel.
          format: int32
          type: integer
        indoorPoolsCountException:
          description: Indoor pools count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        lazyRiver:
          description: Lazy river. A man-made pool or several interconnected recreational pools built to mimic the shape and current of a winding river where guests float in the water on inflated rubber tubes. Can be indoors or outdoors.
          type: boolean
        lazyRiverException:
          description: Lazy river exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        lifeguard:
          description: Lifeguard. A trained member of the hotel staff stationed by the hotel's indoor or outdoor swimming area and responsible for the safety of swimming guests.
          type: boolean
        lifeguardException:
          description: Lifeguard exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        outdoorPool:
          description: Outdoor pool. A pool located outside on the grounds of the hotel and available for guests to use for swimming, soaking or recreation. Use may or may not be restricted to adults and/or children.
          type: boolean
        outdoorPoolException:
          description: Outdoor pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        outdoorPoolsCount:
          description: Outdoor pools count. The sum of all outdoor pools at the hotel.
          format: int32
          type: integer
        outdoorPoolsCountException:
          description: Outdoor pools count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        pool:
          description: Pool. The presence of a pool, either indoors or outdoors, for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.
          type: boolean
        poolException:
          description: Pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        poolsCount:
          description: Pools count. The sum of all pools at the hotel.
          format: int32
          type: integer
        poolsCountException:
          description: Pools count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        wadingPool:
          description: Wading pool. A shallow pool designed for small children to play in. Can be indoors or outdoors. Also known as kiddie pool.
          type: boolean
        wadingPoolException:
          description: Wading pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        waterPark:
          description: Water park. An aquatic recreation area with a large pool or series of pools that has features such as a water slide or tube, wavepool, fountains, rope swings, and/or obstacle course. Can be indoors or outdoors. Also known as adventure pool.
          type: boolean
        waterParkException:
          description: Water park exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        waterslide:
          description: Waterslide. A continuously wetted chute positioned by an indoor or outdoor pool which people slide down into the water.
          type: boolean
        waterslideException:
          description: Waterslide exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        wavePool:
          description: Wave pool. A large indoor or outdoor pool with a machine that produces water currents to mimic the ocean's crests.
          type: boolean
        wavePoolException:
          description: Wave pool exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    PortionSize:
      description: Serving portion size of a food dish.
      properties:
        quantity:
          description: Required. Number of the portion.
          format: int32
          type: integer
        unit:
          description: Required. The repeated name_info field is for the unit in multiple languages.
          items:
            $ref: "#/components/schemas/MenuLabel"
          type: array
      type: object
    PostalAddress:
      description: "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478"
      properties:
        addressLines:
          description: Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
          items:
            type: string
          type: array
        administrativeArea:
          description: Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
          type: string
        languageCode:
          description: "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
          type: string
        locality:
          description: "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
          type: string
        organization:
          description: Optional. The name of the organization at the address.
          type: string
        postalCode:
          description: Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
          type: string
        recipients:
          description: Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
          items:
            type: string
          type: array
        regionCode:
          description: 'Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.'
          type: string
        revision:
          description: The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
          format: int32
          type: integer
        sortingCode:
          description: Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
          type: string
        sublocality:
          description: Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
          type: string
      type: object
    PriceList:
      description: A list of item price information. Price lists are structured as one or more price lists, each containing one or more sections with one or more items. For example, food price lists may represent breakfast/lunch/dinner menus, with sections for burgers/steak/seafood.
      properties:
        labels:
          description: Required. Language-tagged labels for the price list.
          items:
            $ref: "#/components/schemas/Label"
          type: array
        priceListId:
          description: Required. ID for the price list. Price list, section, and item IDs cannot be duplicated within this Location.
          type: string
        sections:
          description: Required. Sections for this price list. Each price list must contain at least one section.
          items:
            $ref: "#/components/schemas/Section"
          type: array
        sourceUrl:
          description: Optional source URL of where the price list was retrieved from. For example, this could be the URL of the page that was automatically scraped to populate the menu information.
          type: string
      type: object
    Profile:
      description: All information pertaining to the location's profile.
      properties:
        description:
          description: Description of the location in your own voice, not editable by anyone else.
          type: string
      type: object
    Property:
      description: General factual information about the property's physical structure and important dates.
      properties:
        builtYear:
          description: Built year. The year that construction of the property was completed.
          format: int32
          type: integer
        builtYearException:
          description: Built year exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        floorsCount:
          description: Floors count. The number of stories the building has from the ground floor to the top floor that are accessible to guests.
          format: int32
          type: integer
        floorsCountException:
          description: Floors count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        lastRenovatedYear:
          description: "Last renovated year. The year when the most recent renovation of the property was completed. Renovation may include all or any combination of the following: the units, the public spaces, the exterior, or the interior."
          format: int32
          type: integer
        lastRenovatedYearException:
          description: Last renovated year exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        roomsCount:
          description: Rooms count. The total number of rooms and suites bookable by guests for an overnight stay. Does not include event space, public spaces, conference rooms, fitness rooms, business centers, spa, salon, restaurants/bars, or shops.
          format: int32
          type: integer
        roomsCountException:
          description: Rooms count exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Question:
      description: Represents a single question and some of its answers.
      properties:
        author:
          $ref: "#/components/schemas/Author"
          description: Output only. The author of the question.
        createTime:
          description: Output only. The timestamp for when the question was written.
          format: google-datetime
          type: string
        name:
          description: Output only. The unique name for the question. accounts/*/locations/*/questions/*
          type: string
        text:
          description: The text of the question. It should contain at least three words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters.
          type: string
        topAnswers:
          description: Output only. A list of answers to the question, sorted by upvotes. This may not be a complete list of answers depending on the request parameters (answers_per_question)
          items:
            $ref: "#/components/schemas/Answer"
          type: array
        totalAnswerCount:
          description: Output only. The total number of answers posted for this question.
          format: int32
          type: integer
        updateTime:
          description: Output only. The timestamp for when the question was last modified.
          format: google-datetime
          type: string
        upvoteCount:
          description: Output only. The number of upvotes for the question.
          format: int32
          type: integer
      type: object
    RegionCount:
      description: A region with its associated request count.
      properties:
        count:
          description: Number of driving-direction requests from this region.
          format: int64
          type: string
        label:
          description: Human-readable label for the region.
          type: string
        latlng:
          $ref: "#/components/schemas/LatLng"
          description: Center of region.
      type: object
    RelationshipData:
      description: Information of all parent and children locations related to this one.
      properties:
        parentChain:
          description: The resource name of the Chain that this location is member of. How to find Chain ID
          type: string
      type: object
    RepeatedEnumAttributeValue:
      description: "Values for an attribute with a `value_type` of REPEATED_ENUM. This consists of two lists of value IDs: those that are set (true) and those that are unset (false). Values absent are considered unknown. At least one value must be specified."
      properties:
        setValues:
          description: Enum values that are set.
          items:
            type: string
          type: array
        unsetValues:
          description: Enum values that are unset.
          items:
            type: string
          type: array
      type: object
    ReportGoogleLocationRequest:
      description: Request message for reporting a GoogleLocation.
      properties:
        locationGroupName:
          description: Optional. The resource name of the location group that this Google Location is being reported for, in the format `accounts/{account_id}`.
          type: string
        reportReasonBadLocation:
          description: The reason for which the user is reporting this location when the issue is with the location itself.
          enum:
            - BAD_LOCATION_REASON_UNSPECIFIED
            - NOT_A_LOCATION
            - PERMANENTLY_CLOSED
            - DOES_NOT_EXIST
            - SPAM
            - NOT_A_BUSINESS
            - MOVED
            - DUPLICATE
          type: string
        reportReasonBadRecommendation:
          description: The reason for which the user is reporting this location when the issue is with the recommendation. This report is useful if the location has been recommended to the Business Profile account.
          enum:
            - BAD_RECOMMENDATION_REASON_UNSPECIFIED
            - NOT_A_STORE_FRONT
            - NOT_PART_OF_SUGGESTED_CHAIN
            - IRRELEVANT
          type: string
        reportReasonElaboration:
          description: Optional. A text entry for elaborating on the reason for which the user is reporting this location. The maximum length is 512 characters.
          type: string
        reportReasonLanguageCode:
          description: Optional. The BCP 47 code of language used in `report_reason_elaboration`.
          type: string
      type: object
    ReportLocalPostInsightsRequest:
      description: Request message for Insights.ReportLocalPostInsights
      properties:
        basicRequest:
          $ref: "#/components/schemas/BasicMetricsRequest"
          description: A request to include basic metric insights in the report. This request applies to all posts requested.
        localPostNames:
          description: Required. The list of posts for which to fetch insights data. All posts have to belong to the location whose name is specified in the `name` field.
          items:
            type: string
          type: array
      type: object
    ReportLocalPostInsightsResponse:
      description: Response message for Insights.ReportLocalPostInsights
      properties:
        localPostMetrics:
          description: One entry per requested post corresponding to this location.
          items:
            $ref: "#/components/schemas/LocalPostMetrics"
          type: array
        name:
          type: string
        timeZone:
          description: Time zone (IANA timezone IDs, eg, 'Europe/London') of the location.
          type: string
      type: object
    ReportLocationInsightsRequest:
      description: Request message for Insights.ReportLocationInsights.
      properties:
        basicRequest:
          $ref: "#/components/schemas/BasicMetricsRequest"
          description: A request to include basic metric insights in the report.
        drivingDirectionsRequest:
          $ref: "#/components/schemas/DrivingDirectionMetricsRequest"
          description: A request to include insights about driving-direction requests in the report.
        locationNames:
          description: A collection of locations to fetch insights for, specified by their names.
          items:
            type: string
          type: array
      type: object
    ReportLocationInsightsResponse:
      description: Response message for `Insights.ReportLocationInsights`.
      properties:
        locationDrivingDirectionMetrics:
          description: A collection of values for driving direction-related metrics.
          items:
            $ref: "#/components/schemas/LocationDrivingDirectionMetrics"
          type: array
        locationMetrics:
          description: A collection of metric values by location.
          items:
            $ref: "#/components/schemas/LocationMetrics"
          type: array
      type: object
    Review:
      description: Output only. Represents a review for a location.
      properties:
        comment:
          description: The body of the review as plain text with markups.
          type: string
        createTime:
          description: The timestamp for when the review was written.
          format: google-datetime
          type: string
        name:
          description: The resource name. For Review it is of the form `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`
          type: string
        reviewId:
          description: The encrypted unique identifier.
          type: string
        reviewReply:
          $ref: "#/components/schemas/ReviewReply"
          description: The owner/manager of this location's reply to this review.
        reviewer:
          $ref: "#/components/schemas/Reviewer"
          description: The author of the review.
        starRating:
          description: The star rating of the review.
          enum:
            - STAR_RATING_UNSPECIFIED
            - ONE
            - TWO
            - THREE
            - FOUR
            - FIVE
          type: string
        updateTime:
          description: The timestamp for when the review was last modified.
          format: google-datetime
          type: string
      type: object
    ReviewReply:
      description: Represents the location owner/manager's reply to a review.
      properties:
        comment:
          description: The body of the reply as plain text with markups. The maximum length is 4096 bytes.
          type: string
        updateTime:
          description: Output only. The timestamp for when the reply was last modified.
          format: google-datetime
          type: string
      type: object
    Reviewer:
      description: Represents the author of the review.
      properties:
        displayName:
          description: The name of the reviewer. Only populated with the reviewer's real name if `is_anonymous` is false.
          type: string
        isAnonymous:
          description: Indicates whether the reviewer has opted to remain anonymous.
          type: boolean
        profilePhotoUrl:
          description: The profile photo link of the reviewer. Only populated if `is_anonymous` is false.
          type: string
      type: object
    SearchChainsResponse:
      description: Response message for Locations.SearchChains.
      properties:
        chains:
          description: Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches, this field will be empty. Results are listed in order of relevance.
          items:
            $ref: "#/components/schemas/Chain"
          type: array
      type: object
    SearchGoogleLocationsRequest:
      description: Request message for GoogleLocations.SearchGoogleLocations.
      properties:
        location:
          $ref: "#/components/schemas/Location"
          description: Location to search for. If provided, will find locations which match the provided location details.
        query:
          description: Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches.
          type: string
        resultCount:
          description: The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
          format: int32
          type: integer
      type: object
    SearchGoogleLocationsResponse:
      description: Response message for GoogleLocations.SearchGoogleLocations.
      properties:
        googleLocations:
          description: A collection of GoogleLocations that are potential matches to the specified request, listed in order from most to least accuracy.
          items:
            $ref: "#/components/schemas/GoogleLocation"
          type: array
      type: object
    Section:
      description: A section of the price list containing one or more items.
      properties:
        items:
          description: Items that are contained within this section of the price list.
          items:
            $ref: "#/components/schemas/Item"
          type: array
        labels:
          description: Required. Language-tagged labels for the section. We recommend that section names and descriptions be 140 characters or less. At least one set of labels is required.
          items:
            $ref: "#/components/schemas/Label"
          type: array
        sectionId:
          description: Required. ID for the section. Price list, section, and item IDs cannot be duplicated within this Location.
          type: string
        sectionType:
          description: Optional. Type of the current price list section. Default value is FOOD.
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - FOOD
            - SERVICES
          type: string
      type: object
    ServiceAreaBusiness:
      description: Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).
      properties:
        businessType:
          description: Indicates the type of the service area business.
          enum:
            - BUSINESS_TYPE_UNSPECIFIED
            - CUSTOMER_LOCATION_ONLY
            - CUSTOMER_AND_BUSINESS_LOCATION
          type: string
        places:
          $ref: "#/components/schemas/Places"
          description: The area that this business serves defined through a set of places.
        radius:
          $ref: "#/components/schemas/PointRadius"
          description: Output only. The area that this business serves centered around a point.
      type: object
    ServiceBusinessContext:
      description: Additional data for service business verification.
      properties:
        address:
          $ref: "#/components/schemas/PostalAddress"
          description: The verification address of the location. It is used to either enable more verification options or send a postcard.
      type: object
    ServiceItem:
      description: A message that describes a single service item. It is used to describe the type of service that the merchant provides. For example, haircut can be a service.
      properties:
        freeFormServiceItem:
          $ref: "#/components/schemas/FreeFormServiceItem"
          description: This field will be set case of free-form services data.
        isOffered:
          description: Optional. This field decides whether or not the input service is offered by the merchant.
          type: boolean
        price:
          $ref: "#/components/schemas/Money"
          description: Optional. Represents the monetary price of the service item. We recommend that currency_code and units should be set when including a price.
        structuredServiceItem:
          $ref: "#/components/schemas/StructuredServiceItem"
          description: This field will be set case of structured services data.
      type: object
    ServiceList:
      description: A service list containing one or more service items.
      properties:
        name:
          description: "Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/serviceList`"
          type: string
        serviceItems:
          description: Service items that are contained within this service list. Duplicated service items will be removed automatically.
          items:
            $ref: "#/components/schemas/ServiceItem"
          type: array
      type: object
    ServiceType:
      description: A message describing a service type that the business offers.
      properties:
        displayName:
          description: Output only. The human-readable display name for the service type.
          readOnly: true
          type: string
        serviceTypeId:
          description: Output only. A stable ID (provided by Google) for this service type.
          readOnly: true
          type: string
      type: object
    Services:
      description: Conveniences or help provided by the property to facilitate an easier, more comfortable stay.
      properties:
        baggageStorage:
          description: Baggage storage. A provision for guests to leave their bags at the hotel when they arrive for their stay before the official check-in time. May or may not apply for guests who wish to leave their bags after check-out and before departing the locale. Also known as bag dropoff.
          type: boolean
        baggageStorageException:
          description: Baggage storage exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        concierge:
          description: Concierge. Hotel staff member(s) responsible for facilitating an easy, comfortable stay through making reservations for meals, sourcing theater tickets, arranging tours, finding a doctor, making recommendations, and answering questions.
          type: boolean
        conciergeException:
          description: Concierge exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        convenienceStore:
          description: Convenience store. A shop at the hotel primarily selling snacks, drinks, non-prescription medicines, health and beauty aids, magazines and newspapers.
          type: boolean
        convenienceStoreException:
          description: Convenience store exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        currencyExchange:
          description: Currency exchange. A staff member or automated machine tasked with the transaction of providing the native currency of the hotel's locale in exchange for the foreign currency provided by a guest.
          type: boolean
        currencyExchangeException:
          description: Currency exchange exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        elevator:
          description: Elevator. A passenger elevator that transports guests from one story to another. Also known as lift.
          type: boolean
        elevatorException:
          description: Elevator exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        frontDesk:
          description: Front desk. A counter or desk in the lobby or the immediate interior of the hotel where a member of the staff greets guests and processes the information related to their stay (including check-in and check-out). May or may not be manned and open 24/7.
          type: boolean
        frontDeskException:
          description: Front desk exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        fullServiceLaundry:
          description: Full service laundry. Laundry and dry cleaning facilitated and handled by the hotel on behalf of the guest. Does not include the provision for guests to do their own laundry in on-site machines.
          type: boolean
        fullServiceLaundryException:
          description: Full service laundry exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        giftShop:
          description: Gift shop. An on-site store primarily selling souvenirs, mementos and other gift items. May or may not also sell sundries, magazines and newspapers, clothing, or snacks.
          type: boolean
        giftShopException:
          description: Gift shop exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        languagesSpoken:
          $ref: "#/components/schemas/LanguagesSpoken"
          description: Languages spoken by at least one staff member.
        selfServiceLaundry:
          description: Self service laundry. On-site clothes washers and dryers accessible to guests for the purpose of washing and drying their own clothes. May or may not require payment to use the machines.
          type: boolean
        selfServiceLaundryException:
          description: Self service laundry exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        socialHour:
          description: Social hour. A reception with complimentary soft drinks, tea, coffee, wine and/or cocktails in the afternoon or evening. Can be hosted by hotel staff or guests may serve themselves. Also known as wine hour. The availability of coffee/tea in the lobby throughout the day does not constitute a social or wine hour.
          type: boolean
        socialHourException:
          description: Social hour exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        twentyFourHourFrontDesk:
          description: 24hr front desk. Front desk is staffed 24 hours a day.
          type: boolean
        twentyFourHourFrontDeskException:
          description: 24hr front desk exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        wakeUpCalls:
          description: Wake up calls. By direction of the guest, a hotel staff member will phone the guest unit at the requested hour. Also known as morning call.
          type: boolean
        wakeUpCallsException:
          description: Wake up calls exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    SpecialHourPeriod:
      description: "Represents a single time period when a location's operational hours differ from its normal business hours. A special hour period must represent a range of less than 24 hours. The `open_time` and `start_date` must predate the `close_time` and `end_date`. The `close_time` and `end_date` can extend to 11:59 a.m. on the day after the specified `start_date`. For example, the following inputs are valid: start_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=11:59 The following inputs are not valid: start_date=2015-11-23, open_time=13:00, close_time=11:59 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=12:00 start_date=2015-11-23, end_date=2015-11-25, open_time=08:00, close_time=18:00"
      properties:
        closeTime:
          description: The wall time on `end_date` when a location closes, expressed in 24hr ISO 8601 extended format. (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field. Must be specified if `is_closed` is false.
          type: string
        endDate:
          $ref: "#/components/schemas/Date"
          description: The calendar date this special hour period ends on. If `end_date` field is not set, default to the date specified in `start_date`. If set, this field must be equal to or at most 1 day after `start_date`.
        isClosed:
          description: If true, `end_date`, `open_time`, and `close_time` are ignored, and the date specified in `start_date` is treated as the location being closed for the entire day.
          type: boolean
        openTime:
          description: The wall time on `start_date` when a location opens, expressed in 24hr ISO 8601 extended format. (hh:mm) Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field. Must be specified if `is_closed` is false.
          type: string
        startDate:
          $ref: "#/components/schemas/Date"
          description: The calendar date this special hour period starts on.
      type: object
    SpecialHours:
      description: Represents a set of time periods when a location's operational hours differ from its normal business hours.
      properties:
        specialHourPeriods:
          description: A list of exceptions to the business's regular hours.
          items:
            $ref: "#/components/schemas/SpecialHourPeriod"
          type: array
      type: object
    StartUploadMediaItemDataRequest:
      description: Request message for Media.StartUploadMediaItemData.
      properties: {}
      type: object
    StructuredServiceItem:
      description: "Represents a structured service offered by the merchant. For eg: toilet_installation."
      properties:
        description:
          description: Optional. Description of structured service item. The character limit is 300.
          type: string
        serviceTypeId:
          description: Required. The `service_type_id` field is a Google provided unique ID that can be found in `ServiceTypeMetadata`. This information is provided by BatchGetBusinessCategories rpc service.
          type: string
      type: object
    TargetLocation:
      description: Represents a target location for a pending invitation.
      properties:
        locationAddress:
          description: The address of the location to which the user is invited.
          type: string
        locationName:
          description: The name of the location to which the user is invited.
          type: string
      type: object
    TimeDimension:
      description: The dimension for which data is divided over.
      properties:
        dayOfWeek:
          description: The day of the week ("MONDAY" to "SUNDAY") this value corresponds to. Set for BREAKDOWN_DAY_OF_WEEK option.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        timeOfDay:
          $ref: "#/components/schemas/TimeOfDay"
          description: The hour of the day (0 to 23) this value corresponds to. Set for BREAKDOWN_HOUR_OF_DAY option.
        timeRange:
          $ref: "#/components/schemas/TimeRange"
          description: The range of time this value covers. Set for AGGREGATED_TOTAL and AGGREGATED_DAILY options.
      type: object
    TimeInterval:
      description: An interval of time, inclusive. It must contain all fields to be valid.
      properties:
        endDate:
          $ref: "#/components/schemas/Date"
          description: The end date of this period.
        endTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: The end time of this period.
        startDate:
          $ref: "#/components/schemas/Date"
          description: The start date of this period.
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: The start time of this period.
      type: object
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
    TimePeriod:
      description: Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.
      properties:
        closeDay:
          description: Indicates the day of the week this period ends on.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        closeTime:
          description: Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
          type: string
        openDay:
          description: Indicates the day of the week this period starts on.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        openTime:
          description: Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
          type: string
      type: object
    TimeRange:
      description: A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time, end_time)).
      properties:
        endTime:
          description: Epoch timestamp for the end of the range (exclusive).
          format: google-datetime
          type: string
        startTime:
          description: Epoch timestamp for the start of the range (inclusive).
          format: google-datetime
          type: string
      type: object
    TopDirectionSources:
      description: Top regions where driving-direction requests originated from.
      properties:
        dayCount:
          description: The number of days data is aggregated over.
          format: int32
          type: integer
        regionCounts:
          description: Regions sorted in descending order by count.
          items:
            $ref: "#/components/schemas/RegionCount"
          type: array
      type: object
    TransferLocationRequest:
      description: Request message for Locations.TransferLocation.
      properties:
        toAccount:
          description: Name of the account resource to transfer the location to (for example, "accounts/8675309").
          type: string
      type: object
    Transportation:
      description: Vehicles or vehicular services facilitated or owned by the property.
      properties:
        airportShuttle:
          description: Airport shuttle. The hotel provides guests with a chauffeured van or bus to and from the airport. Can be free or for a fee. Guests may share the vehicle with other guests unknown to them. Applies if the hotel has a third-party shuttle service (office/desk etc.) within the hotel. As long as hotel provides this service, it doesn't matter if it's directly with them or a third party they work with. Does not apply if guest has to coordinate with an entity outside/other than the hotel.
          type: boolean
        airportShuttleException:
          description: Airport shuttle exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        carRentalOnProperty:
          description: Car rental on property. A branch of a rental car company with a processing desk in the hotel. Available cars for rent may be awaiting at the hotel or in a nearby lot.
          type: boolean
        carRentalOnPropertyException:
          description: Car rental on property exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeAirportShuttle:
          description: Free airport shuttle. Airport shuttle is free to guests. Must be free to all guests without any conditions.
          type: boolean
        freeAirportShuttleException:
          description: Free airport shuttle exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freePrivateCarService:
          description: Free private car service. Private chauffeured car service is free to guests.
          type: boolean
        freePrivateCarServiceException:
          description: Free private car service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        localShuttle:
          description: Local shuttle. A car, van or bus provided by the hotel to transport guests to destinations within a specified range of distance around the hotel. Usually shopping and/or convention centers, downtown districts, or beaches. Can be free or for a fee.
          type: boolean
        localShuttleException:
          description: Local shuttle exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        privateCarService:
          description: Private car service. Hotel provides a private chauffeured car to transport guests to destinations. Passengers in the car are either alone or are known to one another and have requested the car together. Service can be free or for a fee and travel distance is usually limited to a specific range. Not a taxi.
          type: boolean
        privateCarServiceException:
          description: Private car service exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        transfer:
          description: Transfer. Hotel provides a shuttle service or car service to take guests to and from the nearest airport or train station. Can be free or for a fee. Guests may share the vehicle with other guests unknown to them.
          type: boolean
        transferException:
          description: Transfer exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    UpsertAnswerRequest:
      description: Request message for QuestionsAndAnswers.UpsertAnswer
      properties:
        answer:
          $ref: "#/components/schemas/Answer"
          description: The new answer.
      type: object
    UrlAttributeValue:
      description: Values for an attribute with a `value_type` of URL.
      properties:
        url:
          description: The URL.
          type: string
      type: object
    Verification:
      description: A verification represents a verification attempt on a location.
      properties:
        createTime:
          description: The timestamp when the verification is requested.
          format: google-datetime
          type: string
        method:
          description: The method of the verification.
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
          type: string
        name:
          description: Resource name of the verification.
          type: string
        state:
          description: The state of the verification.
          enum:
            - VERIFICATION_STATE_UNSPECIFIED
            - PENDING
            - COMPLETED
            - FAILED
          type: string
      type: object
    VerificationOption:
      description: The verification option represents how to verify the location (indicated by verification method) and where the verification will be sent to (indicated by display data).
      properties:
        addressData:
          $ref: "#/components/schemas/AddressVerificationData"
          description: Set only if the method is MAIL.
        emailData:
          $ref: "#/components/schemas/EmailVerificationData"
          description: Set only if the method is EMAIL.
        phoneData:
          $ref: "#/components/schemas/PhoneVerificationData"
          description: Set only if the method is PHONE_CALL or SMS.
        verificationMethod:
          description: Method to verify the location.
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
          type: string
      type: object
    VerifyLocationRequest:
      description: Request message for Verifications.VerifyLocation.
      properties:
        addressInput:
          $ref: "#/components/schemas/AddressInput"
          description: The input for ADDRESS method.
        context:
          $ref: "#/components/schemas/ServiceBusinessContext"
          description: Extra context information for the verification of service businesses. Required for the locations whose business type is CUSTOMER_LOCATION_ONLY. For ADDRESS verification, the address will be used to send out postcard. For other methods, it should be the same as the one that is passed to FetchVerificationOptions. INVALID_ARGUMENT will be thrown if it is set for other types of business locations.
        emailInput:
          $ref: "#/components/schemas/EmailInput"
          description: The input for EMAIL method.
        languageCode:
          description: The BCP 47 language code representing the language that is to be used for the verification process.
          type: string
        method:
          description: Verification method.
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
          type: string
        phoneInput:
          $ref: "#/components/schemas/PhoneInput"
          description: The input for PHONE_CALL/SMS method
      type: object
    VerifyLocationResponse:
      description: Response message for Verifications.VerifyLocation.
      properties:
        verification:
          $ref: "#/components/schemas/Verification"
          description: The created verification request.
      type: object
    ViewsFromUnit:
      description: Views available from the guest unit itself.
      properties:
        beachView:
          description: Beach view. A guestroom that features a window through which guests can see the beach.
          type: boolean
        beachViewException:
          description: Beach view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        cityView:
          description: City view. A guestroom that features a window through which guests can see the buildings, parks and/or streets of the city.
          type: boolean
        cityViewException:
          description: City view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        gardenView:
          description: Garden view. A guestroom that features a window through which guests can see a garden.
          type: boolean
        gardenViewException:
          description: Garden view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        lakeView:
          description: Lake view.
          type: boolean
        lakeViewException:
          description: Lake view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        landmarkView:
          description: Landmark view. A guestroom that features a window through which guests can see a landmark such as the countryside, a golf course, the forest, a park, a rain forst, a mountain or a slope.
          type: boolean
        landmarkViewException:
          description: Landmark view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        oceanView:
          description: Ocean view. A guestroom that features a window through which guests can see the ocean.
          type: boolean
        oceanViewException:
          description: Ocean view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        poolView:
          description: Pool view. A guestroom that features a window through which guests can see the hotel's swimming pool.
          type: boolean
        poolViewException:
          description: Pool view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        valleyView:
          description: Valley view. A guestroom that features a window through which guests can see over a valley.
          type: boolean
        valleyViewException:
          description: Valley view exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
    Wellness:
      description: Guest facilities at the property to promote or maintain health, beauty, and fitness.
      properties:
        doctorOnCall:
          description: Doctor on call. The hotel has a contract with a medical professional who provides services to hotel guests should they fall ill during their stay. The doctor may or may not have an on-site office or be at the hotel at all times.
          type: boolean
        doctorOnCallException:
          description: Doctor on call exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        ellipticalMachine:
          description: Elliptical machine. An electric, stationary fitness machine with pedals that simulates climbing, walking or running and provides a user-controlled range of speeds and tensions. May not have arm-controlled levers to work out the upper body as well. Commonly found in a gym, fitness room, health center, or health club.
          type: boolean
        ellipticalMachineException:
          description: Elliptical machine exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        fitnessCenter:
          description: Fitness center. A room or building at the hotel containing equipment to promote physical activity, such as treadmills, elliptical machines, stationary bikes, weight machines, free weights, and/or stretching mats. Use of the fitness center can be free or for a fee. May or may not be staffed. May or may not offer instructor-led classes in various styles of physical conditioning. May or may not be open 24/7. May or may not include locker rooms and showers. Also known as health club, gym, fitness room, health center.
          type: boolean
        fitnessCenterException:
          description: Fitness center exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeFitnessCenter:
          description: Free fitness center. Guests may use the fitness center for free.
          type: boolean
        freeFitnessCenterException:
          description: Free fitness center exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        freeWeights:
          description: Free weights. Individual handheld fitness equipment of varied weights used for upper body strength training or bodybuilding. Also known as barbells, dumbbells, or kettlebells. Often stored on a rack with the weights arranged from light to heavy. Commonly found in a gym, fitness room, health center, or health club.
          type: boolean
        freeWeightsException:
          description: Free weights exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        massage:
          description: Massage. A service provided by a trained massage therapist involving the physical manipulation of a guest's muscles in order to achieve relaxation or pain relief.
          type: boolean
        massageException:
          description: Massage exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        salon:
          description: Salon. A room at the hotel where professionals provide hair styling services such as shampooing, blow drying, hair dos, hair cutting and hair coloring. Also known as hairdresser or beauty salon.
          type: boolean
        salonException:
          description: Salon exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        sauna:
          description: Sauna. A wood-paneled room heated to a high temperature where guests sit on built-in wood benches for the purpose of perspiring and relaxing their muscles. Can be dry or slightly wet heat. Not a steam room.
          type: boolean
        saunaException:
          description: Sauna exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        spa:
          description: Spa. A designated area, room or building at the hotel offering health and beauty treatment through such means as steam baths, exercise equipment, and massage. May also offer facials, nail care, and hair care. Services are usually available by appointment and for an additional fee. Does not apply if hotel only offers a steam room; must offer other beauty and/or health treatments as well.
          type: boolean
        spaException:
          description: Spa exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        treadmill:
          description: Treadmill. An electric stationary fitness machine that simulates a moving path to promote walking or running within a range of user-controlled speeds and inclines. Also known as running machine. Commonly found in a gym, fitness room, health center, or health club.
          type: boolean
        treadmillException:
          description: Treadmill exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
        weightMachine:
          description: Weight machine. Non-electronic fitness equipment designed for the user to target the exertion of different muscles. Usually incorporates a padded seat, a stack of flat weights and various bars and pulleys. May be designed for toning a specific part of the body or may involve different user-controlled settings, hardware and pulleys so as to provide an overall workout in one machine. Commonly found in a gym, fitness center, fitness room, or health club.
          type: boolean
        weightMachineException:
          description: Weight machine exception.
          enum:
            - EXCEPTION_UNSPECIFIED
            - UNDER_CONSTRUCTION
            - DEPENDENT_ON_SEASON
            - DEPENDENT_ON_DAY_OF_WEEK
          type: string
      type: object
