openapi: 3.0.0
servers:
  - url: https://area120tables.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Area120 Tables API
  version: v1alpha1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://area120tables.googleapis.com/$discovery/rest?version=v1alpha1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: area120tables
externalDocs:
  url: https://support.google.com/area120-tables/answer/10011390
tags:
  - name: tables
  - name: workspaces
paths:
  /v1alpha1/tables:
    get:
      description: Lists tables for the user.
      operationId: area120tables.tables.list
      parameters:
        - description: Optional. Sorting order for the list of tables on createTime/updateTime.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTablesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha1/workspaces:
    get:
      description: Lists workspaces for the user.
      operationId: area120tables.workspaces.list
      parameters:
        - description: The maximum number of workspaces to return. The service may return fewer than this value. If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are coerced to 25.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - workspaces
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha1/{name}":
    delete:
      description: Deletes a row.
      operationId: area120tables.tables.rows.delete
      parameters:
        - description: "Required. The name of the row to delete. Format: tables/{table}/rows/{row}"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
    get:
      description: Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
      operationId: area120tables.workspaces.get
      parameters:
        - description: "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Column key to use for values in the row. Defaults to user entered name.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - COLUMN_ID_VIEW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - workspaces
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a row.
      operationId: area120tables.tables.rows.patch
      parameters:
        - description: The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The list of fields to update.
          in: query
          name: updateMask
          schema:
            type: string
        - description: Optional. Column key to use for values in the row. Defaults to user entered name.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - COLUMN_ID_VIEW
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Row"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Row"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
  "/v1alpha1/{parent}/rows":
    get:
      description: Lists rows in a table. Returns NOT_FOUND if the table does not exist.
      operationId: area120tables.tables.rows.list
      parameters:
        - description: "Required. The parent table. Format: tables/{table}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter to only include resources matching the requirements. For more information, see [Filtering list results](https://support.google.com/area120-tables/answer/10503371).
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Sorting order for the list of rows on createTime/updateTime.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of rows to return. The service may return fewer than this value. If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRows` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Column key to use for values in the row. Defaults to user entered name.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - COLUMN_ID_VIEW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRowsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a row.
      operationId: area120tables.tables.rows.create
      parameters:
        - description: "Required. The parent table where this row will be created. Format: tables/{table}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Column key to use for values in the row. Defaults to user entered name.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - COLUMN_ID_VIEW
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Row"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Row"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
  "/v1alpha1/{parent}/rows:batchCreate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates multiple rows.
      operationId: area120tables.tables.rows.batchCreate
      parameters:
        - description: "Required. The parent table where the rows will be created. Format: tables/{table}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchCreateRowsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchCreateRowsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
  "/v1alpha1/{parent}/rows:batchDelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes multiple rows.
      operationId: area120tables.tables.rows.batchDelete
      parameters:
        - description: "Required. The parent table shared by all rows being deleted. Format: tables/{table}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteRowsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
  "/v1alpha1/{parent}/rows:batchUpdate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates multiple rows.
      operationId: area120tables.tables.rows.batchUpdate
      parameters:
        - description: "Required. The parent table shared by all rows being updated. Format: tables/{table}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchUpdateRowsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchUpdateRowsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      tags:
        - tables
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    BatchCreateRowsRequest:
      description: Request message for TablesService.BatchCreateRows.
      properties:
        requests:
          description: Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch.
          items:
            $ref: "#/components/schemas/CreateRowRequest"
          type: array
      type: object
    BatchCreateRowsResponse:
      description: Response message for TablesService.BatchCreateRows.
      properties:
        rows:
          description: The created rows.
          items:
            $ref: "#/components/schemas/Row"
          type: array
      type: object
    BatchDeleteRowsRequest:
      description: Request message for TablesService.BatchDeleteRows
      properties:
        names:
          description: "Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"
          items:
            type: string
          type: array
      type: object
    BatchUpdateRowsRequest:
      description: Request message for TablesService.BatchUpdateRows.
      properties:
        requests:
          description: Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch.
          items:
            $ref: "#/components/schemas/UpdateRowRequest"
          type: array
      type: object
    BatchUpdateRowsResponse:
      description: Response message for TablesService.BatchUpdateRows.
      properties:
        rows:
          description: The updated rows.
          items:
            $ref: "#/components/schemas/Row"
          type: array
      type: object
    ColumnDescription:
      description: Details on a column in the table.
      properties:
        dataType:
          description: Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.
          type: string
        dateDetails:
          $ref: "#/components/schemas/DateDetails"
          description: Optional. Additional details about a date column.
        id:
          description: Internal id for a column.
          type: string
        labels:
          description: Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.
          items:
            $ref: "#/components/schemas/LabeledItem"
          type: array
        lookupDetails:
          $ref: "#/components/schemas/LookupDetails"
          description: Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column.
        multipleValuesDisallowed:
          description: Optional. Indicates whether or not multiple values are allowed for array types where such a restriction is possible.
          type: boolean
        name:
          description: column name
          type: string
        readonly:
          description: Optional. Indicates that values for the column cannot be set by the user.
          type: boolean
        relationshipDetails:
          $ref: "#/components/schemas/RelationshipDetails"
          description: Optional. Additional details about a relationship column. Specified when data_type is relationship.
      type: object
    CreateRowRequest:
      description: Request message for TablesService.CreateRow.
      properties:
        parent:
          description: "Required. The parent table where this row will be created. Format: tables/{table}"
          type: string
        row:
          $ref: "#/components/schemas/Row"
          description: Required. The row to create.
        view:
          description: Optional. Column key to use for values in the row. Defaults to user entered name.
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
          type: string
      type: object
    DateDetails:
      description: Details about a date column.
      properties:
        hasTime:
          description: Whether the date column includes time.
          type: boolean
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    LabeledItem:
      description: A single item in a labeled column.
      properties:
        id:
          description: Internal id associated with the item.
          type: string
        name:
          description: Display string as entered by user.
          type: string
      type: object
    ListRowsResponse:
      description: Response message for TablesService.ListRows.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
          type: string
        rows:
          description: The rows from the specified table.
          items:
            $ref: "#/components/schemas/Row"
          type: array
      type: object
    ListTablesResponse:
      description: Response message for TablesService.ListTables.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
          type: string
        tables:
          description: The list of tables.
          items:
            $ref: "#/components/schemas/Table"
          type: array
      type: object
    ListWorkspacesResponse:
      description: Response message for TablesService.ListWorkspaces.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
          type: string
        workspaces:
          description: The list of workspaces.
          items:
            $ref: "#/components/schemas/Workspace"
          type: array
      type: object
    LookupDetails:
      description: Details about a lookup column whose value comes from the associated relationship.
      properties:
        relationshipColumn:
          description: The name of the relationship column associated with the lookup.
          type: string
        relationshipColumnId:
          description: The id of the relationship column.
          type: string
      type: object
    RelationshipDetails:
      description: Details about a relationship column.
      properties:
        linkedTable:
          description: The name of the table this relationship is linked to.
          type: string
      type: object
    Row:
      description: A single row in a table.
      properties:
        createTime:
          description: Time when the row was created.
          format: google-datetime
          type: string
        name:
          description: The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.
          type: string
        updateTime:
          description: Time when the row was last updated.
          format: google-datetime
          type: string
        values:
          additionalProperties: {}
          description: The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.
          type: object
      type: object
    SavedView:
      description: "A saved view of a table. NextId: 3"
      properties:
        id:
          description: Internal id associated with the saved view.
          type: string
        name:
          description: Display name of the saved view.
          type: string
      type: object
    Table:
      description: "A single table. NextId: 8"
      properties:
        columns:
          description: List of columns in this table. Order of columns matches the display order.
          items:
            $ref: "#/components/schemas/ColumnDescription"
          type: array
        createTime:
          description: Time when the table was created.
          format: google-datetime
          type: string
        displayName:
          description: The human readable title of the table.
          type: string
        name:
          description: The resource name of the table. Table names have the form `tables/{table}`.
          type: string
        savedViews:
          description: Saved views for this table.
          items:
            $ref: "#/components/schemas/SavedView"
          type: array
        timeZone:
          description: The time zone of the table. IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
        updateTime:
          description: Time when the table was last updated excluding updates to individual rows
          format: google-datetime
          type: string
      type: object
    UpdateRowRequest:
      description: Request message for TablesService.UpdateRow.
      properties:
        row:
          $ref: "#/components/schemas/Row"
          description: Required. The row to update.
        updateMask:
          description: The list of fields to update.
          format: google-fieldmask
          type: string
        view:
          description: Optional. Column key to use for values in the row. Defaults to user entered name.
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
          type: string
      type: object
    Workspace:
      description: A single workspace.
      properties:
        createTime:
          description: Time when the workspace was created.
          format: google-datetime
          type: string
        displayName:
          description: The human readable title of the workspace.
          type: string
        name:
          description: The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`.
          type: string
        tables:
          description: The list of tables in the workspace.
          items:
            $ref: "#/components/schemas/Table"
          type: array
        updateTime:
          description: Time when the workspace was last updated.
          format: google-datetime
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete only the specific Google Drive files you use with this app
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/spreadsheets: See, edit, create, and delete all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/tables: See, edit, create, and delete your tables in Tables by Area 120
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete only the specific Google Drive files you use with this app
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/spreadsheets: See, edit, create, and delete all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/tables: See, edit, create, and delete your tables in Tables by Area 120
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
