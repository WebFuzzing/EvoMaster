openapi: 3.0.0
servers:
  - url: https://games.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Play Game Services
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://games.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: games
externalDocs:
  url: https://developers.google.com/games/
tags:
  - name: achievementDefinitions
  - name: achievements
  - name: applications
  - name: events
  - name: leaderboards
  - name: metagame
  - name: players
  - name: revisions
  - name: scores
  - name: snapshots
  - name: stats
paths:
  /games/v1/achievements:
    get:
      description: Lists all the achievement definitions for your application.
      operationId: games.achievementDefinitions.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementDefinitionsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievementDefinitions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/achievements/updateMultiple:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates multiple achievements for the currently authenticated player.
      operationId: games.achievements.updateMultiple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AchievementUpdateMultipleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementUpdateMultipleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/games/v1/achievements/{achievementId}/increment":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Increments the steps of the achievement with the given ID for the currently authenticated player.
      operationId: games.achievements.increment
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
        - description: The number of steps to increment.
          in: query
          name: stepsToIncrement
          required: true
          schema:
            type: integer
        - description: A randomly generated numeric ID for each request specified by the caller. This number is used at the server to ensure that the request is handled correctly across retries.
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementIncrementResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/games/v1/achievements/{achievementId}/reveal":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the state of the achievement with the given ID to `REVEALED` for the currently authenticated player.
      operationId: games.achievements.reveal
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementRevealResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/games/v1/achievements/{achievementId}/setStepsAtLeast":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the steps for the currently authenticated player towards unlocking an achievement. If the steps parameter is less than the current number of steps that the player already gained for the achievement, the achievement is not modified.
      operationId: games.achievements.setStepsAtLeast
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
        - description: The minimum value to set the steps to.
          in: query
          name: steps
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementSetStepsAtLeastResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  "/games/v1/achievements/{achievementId}/unlock":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Unlocks this achievement for the currently authenticated player.
      operationId: games.achievements.unlock
      parameters:
        - description: The ID of the achievement used by this method.
          in: path
          name: achievementId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementUnlockResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
  /games/v1/applications/getEndPoint:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns a URL for the requested end point type.
      operationId: games.applications.getEndPoint
      parameters:
        - description: The application ID from the Google Play developer console.
          in: query
          name: applicationId
          schema:
            type: string
        - description: Type of endpoint being requested.
          in: query
          name: endPointType
          schema:
            enum:
              - END_POINT_TYPE_UNSPECIFIED
              - PROFILE_CREATION
              - PROFILE_SETTINGS
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EndPoint"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
  /games/v1/applications/played:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Indicate that the currently authenticated user is playing your application.
      operationId: games.applications.played
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
  "/games/v1/applications/{applicationId}":
    get:
      description: Retrieves the metadata of the application with the given ID. If the requested application is not available for the specified `platformType`, the returned response will not include any instance data.
      operationId: games.applications.get
      parameters:
        - description: The application ID from the Google Play developer console.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: Restrict application details returned to the specific platform.
          in: query
          name: platformType
          schema:
            enum:
              - PLATFORM_TYPE_UNSPECIFIED
              - ANDROID
              - IOS
              - WEB_APP
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/applications/{applicationId}/verify":
    get:
      description: Verifies the auth token provided with this request is for the application with the specified ID, and returns the ID of the player it was granted for.
      operationId: games.applications.verify
      parameters:
        - description: The application ID from the Google Play developer console.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationVerifyResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - applications
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/eventDefinitions:
    get:
      description: Returns a list of the event definitions in this application.
      operationId: games.events.listDefinitions
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of event definitions to return in the response, used for paging. For any response, the actual number of event definitions to return may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDefinitionListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/events:
    get:
      description: Returns a list showing the current progress on events in this application for the currently authenticated user.
      operationId: games.events.listByPlayer
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of events to return in the response, used for paging. For any response, the actual number of events to return may be less than the specified maxResults.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerEventListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Records a batch of changes to the number of times events have occurred for the currently authenticated user of this application.
      operationId: games.events.record
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventRecordRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventUpdateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - events
  /games/v1/leaderboards:
    get:
      description: Lists all the leaderboard metadata for your application.
      operationId: games.leaderboards.list
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of leaderboards to return in the response. For any response, the actual number of leaderboards returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaderboardListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - leaderboards
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/leaderboards/scores:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submits multiple scores to leaderboards.
      operationId: games.scores.submitMultiple
      parameters:
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerScoreSubmissionList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerScoreListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
  "/games/v1/leaderboards/{leaderboardId}":
    get:
      description: Retrieves the metadata of the leaderboard with the given ID.
      operationId: games.leaderboards.get
      parameters:
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leaderboard"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - leaderboards
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/leaderboards/{leaderboardId}/scores":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submits a score to the specified leaderboard.
      operationId: games.scores.submit
      parameters:
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The score you're submitting. The submitted score is ignored if it is worse than a previously submitted score, where worse depends on the leaderboard sort order. The meaning of the score value depends on the leaderboard format type. For fixed-point, the score represents the raw value. For time, the score represents elapsed time in milliseconds. For currency, the score represents a value in micro units.
          in: query
          name: score
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: Additional information about the score you're submitting. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          in: query
          name: scoreTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerScoreResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
  "/games/v1/leaderboards/{leaderboardId}/scores/{collection}":
    get:
      description: Lists the scores in a leaderboard, starting from the top.
      operationId: games.scores.list
      parameters:
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The collection of scores you're requesting.
          in: path
          name: collection
          required: true
          schema:
            enum:
              - SCORE_COLLECTION_UNSPECIFIED
              - PUBLIC
              - SOCIAL
              - FRIENDS
            type: string
        - description: The time span for the scores and ranks you're requesting.
          in: query
          name: timeSpan
          required: true
          schema:
            enum:
              - SCORE_TIME_SPAN_UNSPECIFIED
              - ALL_TIME
              - WEEKLY
              - DAILY
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaderboardScores"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/leaderboards/{leaderboardId}/window/{collection}":
    get:
      description: Lists the scores in a leaderboard around (and including) a player's score.
      operationId: games.scores.listWindow
      parameters:
        - description: The ID of the leaderboard.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The collection of scores you're requesting.
          in: path
          name: collection
          required: true
          schema:
            enum:
              - SCORE_COLLECTION_UNSPECIFIED
              - PUBLIC
              - SOCIAL
              - FRIENDS
            type: string
        - description: The time span for the scores and ranks you're requesting.
          in: query
          name: timeSpan
          required: true
          schema:
            enum:
              - SCORE_TIME_SPAN_UNSPECIFIED
              - ALL_TIME
              - WEEKLY
              - DAILY
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The preferred number of scores to return above the player's score. More scores may be returned if the player is at the bottom of the leaderboard; fewer may be returned if the player is at the top. Must be less than or equal to maxResults.
          in: query
          name: resultsAbove
          schema:
            type: integer
        - description: True if the top scores should be returned when the player is not in the leaderboard. Defaults to true.
          in: query
          name: returnTopIfAbsent
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaderboardScores"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/metagameConfig:
    get:
      description: Return the metagame configuration data for the calling application.
      operationId: games.metagame.getMetagameConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetagameConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - metagame
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/me/players/{collection}":
    get:
      description: Get the collection of players for the currently authenticated user.
      operationId: games.players.list
      parameters:
        - description: Collection of players being retrieved
          in: path
          name: collection
          required: true
          schema:
            enum:
              - CONNECTED
              - VISIBLE
              - FRIENDS_ALL
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of player resources to return in the response, used for paging. For any response, the actual number of player resources returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - players
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/players/me/scopedIds:
    get:
      description: Retrieves scoped player identifiers for currently authenticated user.
      operationId: games.players.getScopedPlayerIds
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScopedPlayerIds"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - players
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/{playerId}":
    get:
      description: Retrieves the Player resource with the given ID. To retrieve the player for the currently authenticated user, set `playerId` to `me`.
      operationId: games.players.get
      parameters:
        - description: A player ID. A value of `me` may be used in place of the authenticated player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: Consistency token of the player id. The call returns a 'not found' result when the token is present and invalid. Empty value is ignored. See also GlobalPlayerIdConsistencyTokenProto
          in: query
          name: playerIdConsistencyToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - players
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/{playerId}/achievements":
    get:
      description: Lists the progress for all your application's achievements for the currently authenticated player.
      operationId: games.achievements.list
      parameters:
        - description: A player ID. A value of `me` may be used in place of the authenticated player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Tells the server to return only achievements with the specified state. If this parameter isn't specified, all achievements are returned.
          in: query
          name: state
          schema:
            enum:
              - ALL
              - HIDDEN
              - REVEALED
              - UNLOCKED
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerAchievementListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - achievements
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/{playerId}/categories/{collection}":
    get:
      description: List play data aggregated per category for the player corresponding to `playerId`.
      operationId: games.metagame.listCategoriesByPlayer
      parameters:
        - description: A player ID. A value of `me` may be used in place of the authenticated player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The collection of categories for which data will be returned.
          in: path
          name: collection
          required: true
          schema:
            enum:
              - COLLECTION_UNSPECIFIED
              - ALL
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of category resources to return in the response, used for paging. For any response, the actual number of category resources returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - metagame
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}":
    get:
      description: "Get high scores, and optionally ranks, in leaderboards for the currently authenticated player. For a specific time span, `leaderboardId` can be set to `ALL` to retrieve data for all leaderboards in a given time span. `NOTE: You cannot ask for 'ALL' leaderboards and 'ALL' timeSpans in the same request; only one parameter may be set to 'ALL'."
      operationId: games.scores.get
      parameters:
        - description: A player ID. A value of `me` may be used in place of the authenticated player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The ID of the leaderboard. Can be set to 'ALL' to retrieve data for all leaderboards for this application.
          in: path
          name: leaderboardId
          required: true
          schema:
            type: string
        - description: The time span for the scores and ranks you're requesting.
          in: path
          name: timeSpan
          required: true
          schema:
            enum:
              - SCORE_TIME_SPAN_UNSPECIFIED
              - ALL
              - ALL_TIME
              - WEEKLY
              - DAILY
            type: string
        - description: The types of ranks to return. If the parameter is omitted, no ranks will be returned.
          in: query
          name: includeRankType
          schema:
            enum:
              - INCLUDE_RANK_TYPE_UNSPECIFIED
              - ALL
              - PUBLIC
              - SOCIAL
              - FRIENDS
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerLeaderboardScoreListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - scores
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/players/{playerId}/snapshots":
    get:
      description: Retrieves a list of snapshots created by your application for the player corresponding to the player ID.
      operationId: games.snapshots.list
      parameters:
        - description: A player ID. A value of `me` may be used in place of the authenticated player's ID.
          in: path
          name: playerId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
        - description: The maximum number of snapshot resources to return in the response, used for paging. For any response, the actual number of snapshot resources returned may be less than the specified `maxResults`.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/revisions/check:
    get:
      description: Checks whether the games client is out of date.
      operationId: games.revisions.check
      parameters:
        - description: "The revision of the client SDK used by your application. Format: `[PLATFORM_TYPE]:[VERSION_NUMBER]`. Possible values of `PLATFORM_TYPE` are: * `ANDROID` - Client is running the Android SDK. * `IOS` - Client is running the iOS SDK. * `WEB_APP` - Client is running as a Web App."
          in: query
          name: clientRevision
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionCheckResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - revisions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/games/v1/snapshots/{snapshotId}":
    get:
      description: Retrieves the metadata for a given snapshot ID.
      operationId: games.snapshots.get
      parameters:
        - description: The ID of the snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
        - description: The preferred language to use for strings returned by this method.
          in: query
          name: language
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Snapshot"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /games/v1/stats:
    get:
      description: Returns engagement and spend statistics in this application for the currently authenticated user.
      operationId: games.stats.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/games
          Oauth2c:
            - https://www.googleapis.com/auth/games
      tags:
        - stats
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AchievementDefinition:
      description: An achievement definition object.
      properties:
        achievementType:
          description: The type of the achievement.
          enum:
            - ACHIEVEMENT_TYPE_UNSPECIFIED
            - STANDARD
            - INCREMENTAL
          type: string
        description:
          description: The description of the achievement.
          type: string
        experiencePoints:
          description: Experience points which will be earned when unlocking this achievement.
          format: int64
          type: string
        formattedTotalSteps:
          description: The total steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        initialState:
          description: The initial state of the achievement.
          enum:
            - INITIAL_ACHIEVEMENT_STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
          type: string
        isRevealedIconUrlDefault:
          description: Indicates whether the revealed icon image being returned is a default image, or is provided by the game.
          type: boolean
        isUnlockedIconUrlDefault:
          description: Indicates whether the unlocked icon image being returned is a default image, or is game-provided.
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinition`.
          type: string
        name:
          description: The name of the achievement.
          type: string
        revealedIconUrl:
          description: The image URL for the revealed achievement icon.
          type: string
        totalSteps:
          description: The total steps for an incremental achievement.
          format: int32
          type: integer
        unlockedIconUrl:
          description: The image URL for the unlocked achievement icon.
          type: string
      type: object
    AchievementDefinitionsListResponse:
      description: A list of achievement definition objects.
      properties:
        items:
          description: The achievement definitions.
          items:
            $ref: "#/components/schemas/AchievementDefinition"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinitionsListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    AchievementIncrementResponse:
      description: An achievement increment response
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementIncrementResponse`.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the number of steps required to unlock.
          type: boolean
      type: object
    AchievementRevealResponse:
      description: An achievement reveal response
      properties:
        currentState:
          description: The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.
          enum:
            - REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED
            - REVEALED
            - UNLOCKED
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.
          type: string
      type: object
    AchievementSetStepsAtLeastResponse:
      description: An achievement set steps at least response.
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementSetStepsAtLeastResponse`.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the number of steps required to unlock.
          type: boolean
      type: object
    AchievementUnlockResponse:
      description: An achievement unlock response
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUnlockResponse`.
          type: string
        newlyUnlocked:
          description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
          type: boolean
      type: object
    AchievementUpdateMultipleRequest:
      description: A list of achievement update requests.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`.
          type: string
        updates:
          description: The individual achievement update requests.
          items:
            $ref: "#/components/schemas/AchievementUpdateRequest"
          type: array
      type: object
    AchievementUpdateMultipleResponse:
      description: Response message for UpdateMultipleAchievements rpc.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`.
          type: string
        updatedAchievements:
          description: The updated state of the achievements.
          items:
            $ref: "#/components/schemas/AchievementUpdateResponse"
          type: array
      type: object
    AchievementUpdateRequest:
      description: A request to update an achievement.
      properties:
        achievementId:
          description: The achievement this update is being applied to.
          type: string
        incrementPayload:
          $ref: "#/components/schemas/GamesAchievementIncrement"
          description: The payload if an update of type `INCREMENT` was requested for the achievement.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`.
          type: string
        setStepsAtLeastPayload:
          $ref: "#/components/schemas/GamesAchievementSetStepsAtLeast"
          description: The payload if an update of type `SET_STEPS_AT_LEAST` was requested for the achievement.
        updateType:
          description: The type of update being applied.
          enum:
            - ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED
            - REVEAL
            - UNLOCK
            - INCREMENT
            - SET_STEPS_AT_LEAST
          type: string
      type: object
    AchievementUpdateResponse:
      description: An updated achievement.
      properties:
        achievementId:
          description: The achievement this update is was applied to.
          type: string
        currentState:
          description: The current state of the achievement.
          enum:
            - UPDATED_ACHIEVEMENT_STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
          type: string
        currentSteps:
          description: The current steps recorded for this achievement if it is incremental.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`.
          type: string
        newlyUnlocked:
          description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
          type: boolean
        updateOccurred:
          description: Whether the requested updates actually affected the achievement.
          type: boolean
      type: object
    Application:
      description: The Application resource.
      properties:
        achievement_count:
          description: The number of achievements visible to the currently authenticated player.
          format: int32
          type: integer
        assets:
          description: The assets of the application.
          items:
            $ref: "#/components/schemas/ImageAsset"
          type: array
        author:
          description: The author of the application.
          type: string
        category:
          $ref: "#/components/schemas/ApplicationCategory"
          description: The category of the application.
        description:
          description: The description of the application.
          type: string
        enabledFeatures:
          description: A list of features that have been enabled for the application.
          items:
            enum:
              - APPLICATION_FEATURE_UNSPECIFIED
              - SNAPSHOTS
            type: string
          type: array
        id:
          description: The ID of the application.
          type: string
        instances:
          description: The instances of the application.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#application`.
          type: string
        lastUpdatedTimestamp:
          description: The last updated timestamp of the application.
          format: int64
          type: string
        leaderboard_count:
          description: The number of leaderboards visible to the currently authenticated player.
          format: int32
          type: integer
        name:
          description: The name of the application.
          type: string
        themeColor:
          description: A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. "E0E0E0").
          type: string
      type: object
    ApplicationCategory:
      description: An application category object.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationCategory`.
          type: string
        primary:
          description: The primary category.
          type: string
        secondary:
          description: The secondary category.
          type: string
      type: object
    ApplicationVerifyResponse:
      description: A third party application verification response resource.
      properties:
        alternate_player_id:
          description: An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`.
          type: string
        player_id:
          description: The ID of the player that was issued the auth token used in this request.
          type: string
      type: object
    Category:
      description: Data related to individual game categories.
      properties:
        category:
          description: The category name.
          type: string
        experiencePoints:
          description: Experience points earned in this category.
          format: int64
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#category`.
          type: string
      type: object
    CategoryListResponse:
      description: A third party list metagame categories response.
      properties:
        items:
          description: The list of categories with usage data.
          items:
            $ref: "#/components/schemas/Category"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#categoryListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    EndPoint:
      description: Container for a URL end point of the requested type.
      properties:
        url:
          description: A URL suitable for loading in a web browser for the requested endpoint.
          type: string
      type: object
    EventBatchRecordFailure:
      description: A batch update failure resource.
      properties:
        failureCause:
          description: The cause for the update failure.
          enum:
            - EVENT_FAILURE_CAUSE_UNSPECIFIED
            - TOO_LARGE
            - TIME_PERIOD_EXPIRED
            - TIME_PERIOD_SHORT
            - TIME_PERIOD_LONG
            - ALREADY_UPDATED
            - RECORD_RATE_HIGH
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`.
          type: string
        range:
          $ref: "#/components/schemas/EventPeriodRange"
          description: The time range which was rejected; empty for a request-wide failure.
      type: object
    EventChild:
      description: An event child relationship resource.
      properties:
        childId:
          description: The ID of the child event.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.
          type: string
      type: object
    EventDefinition:
      description: An event definition resource.
      properties:
        childEvents:
          description: A list of events that are a child of this event.
          items:
            $ref: "#/components/schemas/EventChild"
          type: array
        description:
          description: Description of what this event represents.
          type: string
        displayName:
          description: The name to display for the event.
          type: string
        id:
          description: The ID of the event.
          type: string
        imageUrl:
          description: The base URL for the image that represents the event.
          type: string
        isDefaultImageUrl:
          description: Indicates whether the icon image being returned is a default image, or is game-provided.
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.
          type: string
        visibility:
          description: The visibility of event being tracked in this definition.
          enum:
            - EVENT_VISIBILITY_UNSPECIFIED
            - REVEALED
            - HIDDEN
          type: string
      type: object
    EventDefinitionListResponse:
      description: A ListDefinitions response.
      properties:
        items:
          description: The event definitions.
          items:
            $ref: "#/components/schemas/EventDefinition"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    EventPeriodRange:
      description: An event period time range.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`.
          type: string
        periodEndMillis:
          description: The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).
          format: int64
          type: string
        periodStartMillis:
          description: The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).
          format: int64
          type: string
      type: object
    EventPeriodUpdate:
      description: An event period update resource.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.
          type: string
        timePeriod:
          $ref: "#/components/schemas/EventPeriodRange"
          description: The time period being covered by this update.
        updates:
          description: The updates being made for this time period.
          items:
            $ref: "#/components/schemas/EventUpdateRequest"
          type: array
      type: object
    EventRecordFailure:
      description: An event update failure resource.
      properties:
        eventId:
          description: The ID of the event that was not updated.
          type: string
        failureCause:
          description: The cause for the update failure.
          enum:
            - EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED
            - NOT_FOUND
            - INVALID_UPDATE_VALUE
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.
          type: string
      type: object
    EventRecordRequest:
      description: An event period update resource.
      properties:
        currentTimeMillis:
          description: The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).
          format: int64
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.
          type: string
        requestId:
          description: The request ID used to identify this attempt to record events.
          format: int64
          type: string
        timePeriods:
          description: A list of the time period updates being made in this request.
          items:
            $ref: "#/components/schemas/EventPeriodUpdate"
          type: array
      type: object
    EventUpdateRequest:
      description: An event period update resource.
      properties:
        definitionId:
          description: The ID of the event being modified in this update.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.
          type: string
        updateCount:
          description: The number of times this event occurred in this time period.
          format: int64
          type: string
      type: object
    EventUpdateResponse:
      description: An event period update resource.
      properties:
        batchFailures:
          description: Any batch-wide failures which occurred applying updates.
          items:
            $ref: "#/components/schemas/EventBatchRecordFailure"
          type: array
        eventFailures:
          description: Any failures updating a particular event.
          items:
            $ref: "#/components/schemas/EventRecordFailure"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`.
          type: string
        playerEvents:
          description: The current status of any updated events
          items:
            $ref: "#/components/schemas/PlayerEvent"
          type: array
      type: object
    GamesAchievementIncrement:
      description: The payload to request to increment an achievement.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`.
          type: string
        requestId:
          description: The requestId associated with an increment to an achievement.
          format: int64
          type: string
        steps:
          description: The number of steps to be incremented.
          format: int32
          type: integer
      type: object
    GamesAchievementSetStepsAtLeast:
      description: The payload to request to increment an achievement.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`.
          type: string
        steps:
          description: The minimum number of steps for the achievement to be set to.
          format: int32
          type: integer
      type: object
    ImageAsset:
      description: An image asset object.
      properties:
        height:
          description: The height of the asset.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#imageAsset`.
          type: string
        name:
          description: The name of the asset.
          type: string
        url:
          description: The URL of the asset.
          type: string
        width:
          description: The width of the asset.
          format: int32
          type: integer
      type: object
    Instance:
      description: The Instance resource.
      properties:
        acquisitionUri:
          description: URI which shows where a user can acquire this instance.
          type: string
        androidInstance:
          $ref: "#/components/schemas/InstanceAndroidDetails"
          description: Platform dependent details for Android.
        iosInstance:
          $ref: "#/components/schemas/InstanceIosDetails"
          description: Platform dependent details for iOS.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.
          type: string
        name:
          description: Localized display name.
          type: string
        platformType:
          description: The platform type.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - WEB_APP
          type: string
        realtimePlay:
          description: Flag to show if this game instance supports realtime play.
          type: boolean
        turnBasedPlay:
          description: Flag to show if this game instance supports turn based play.
          type: boolean
        webInstance:
          $ref: "#/components/schemas/InstanceWebDetails"
          description: Platform dependent details for Web.
      type: object
    InstanceAndroidDetails:
      description: The Android instance details resource.
      properties:
        enablePiracyCheck:
          description: Flag indicating whether the anti-piracy check is enabled.
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceAndroidDetails`.
          type: string
        packageName:
          description: Android package name which maps to Google Play URL.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    InstanceIosDetails:
      description: The iOS details resource.
      properties:
        bundleIdentifier:
          description: Bundle identifier.
          type: string
        itunesAppId:
          description: iTunes App ID.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceIosDetails`.
          type: string
        preferredForIpad:
          description: Indicates that this instance is the default for new installations on iPad devices.
          type: boolean
        preferredForIphone:
          description: Indicates that this instance is the default for new installations on iPhone devices.
          type: boolean
        supportIpad:
          description: Flag to indicate if this instance supports iPad.
          type: boolean
        supportIphone:
          description: Flag to indicate if this instance supports iPhone.
          type: boolean
      type: object
    InstanceWebDetails:
      description: The Web details resource.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceWebDetails`.
          type: string
        launchUrl:
          description: Launch URL for the game.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    Leaderboard:
      description: The Leaderboard resource.
      properties:
        iconUrl:
          description: The icon for the leaderboard.
          type: string
        id:
          description: The leaderboard ID.
          type: string
        isIconUrlDefault:
          description: Indicates whether the icon image being returned is a default image, or is game-provided.
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`.
          type: string
        name:
          description: The name of the leaderboard.
          type: string
        order:
          description: How scores are ordered.
          enum:
            - SCORE_ORDER_UNSPECIFIED
            - LARGER_IS_BETTER
            - SMALLER_IS_BETTER
          type: string
      type: object
    LeaderboardEntry:
      description: The Leaderboard Entry resource.
      properties:
        formattedScore:
          description: The localized string for the numerical value of this score.
          type: string
        formattedScoreRank:
          description: The localized string for the rank of this score for this leaderboard.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.
          type: string
        player:
          $ref: "#/components/schemas/Player"
          description: The player who holds this score.
        scoreRank:
          description: The rank of this score for this leaderboard.
          format: int64
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        timeSpan:
          description: The time span of this high score.
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
          type: string
        writeTimestampMillis:
          description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
          format: int64
          type: string
      type: object
    LeaderboardListResponse:
      description: A list of leaderboard objects.
      properties:
        items:
          description: The leaderboards.
          items:
            $ref: "#/components/schemas/Leaderboard"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    LeaderboardScoreRank:
      description: A score rank in a leaderboard.
      properties:
        formattedNumScores:
          description: The number of scores in the leaderboard as a string.
          type: string
        formattedRank:
          description: The rank in the leaderboard as a string.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScoreRank`.
          type: string
        numScores:
          description: The number of scores in the leaderboard.
          format: int64
          type: string
        rank:
          description: The rank in the leaderboard.
          format: int64
          type: string
      type: object
    LeaderboardScores:
      description: A ListScores response.
      properties:
        items:
          description: The scores in the leaderboard.
          items:
            $ref: "#/components/schemas/LeaderboardEntry"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        numScores:
          description: The total number of scores in the leaderboard.
          format: int64
          type: string
        playerScore:
          $ref: "#/components/schemas/LeaderboardEntry"
          description: The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the `scoreRank`and `formattedScoreRank` values will not be present.
        prevPageToken:
          description: The pagination token for the previous page of results.
          type: string
      type: object
    MetagameConfig:
      description: The metagame config resource
      properties:
        currentVersion:
          description: Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.
          type: string
        playerLevels:
          description: The list of player levels.
          items:
            $ref: "#/components/schemas/PlayerLevel"
          type: array
      type: object
    Player:
      description: A Player resource.
      properties:
        avatarImageUrl:
          description: The base URL for the image that represents the player.
          type: string
        bannerUrlLandscape:
          description: The url to the landscape mode player banner image.
          type: string
        bannerUrlPortrait:
          description: The url to the portrait mode player banner image.
          type: string
        displayName:
          description: The name to display for the player.
          type: string
        experienceInfo:
          $ref: "#/components/schemas/PlayerExperienceInfo"
          description: An object to represent Play Game experience information for the player.
        friendStatus:
          description: The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.
          enum:
            - FRIEND_STATUS_UNSPECIFIED
            - NO_RELATIONSHIP
            - FRIEND
          type: string
        gamePlayerId:
          description: Per-application unique player identifier.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#player`
          type: string
        name:
          description: A representation of the individual components of the name.
          properties:
            familyName:
              description: The family name of this player. In some places, this is known as the last name.
              type: string
            givenName:
              description: The given name of this player. In some places, this is known as the first name.
              type: string
          type: object
        originalPlayerId:
          description: The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.
          type: string
        playerId:
          description: The ID of the player.
          type: string
        profileSettings:
          $ref: "#/components/schemas/ProfileSettings"
          description: The player's profile settings. Controls whether or not the player's profile is visible to other players.
        title:
          description: The player's title rewarded for their game activities.
          type: string
      type: object
    PlayerAchievement:
      description: An achievement object.
      properties:
        achievementState:
          description: The state of the achievement.
          enum:
            - STATE_UNSPECIFIED
            - HIDDEN
            - REVEALED
            - UNLOCKED
          type: string
        currentSteps:
          description: The current steps for an incremental achievement.
          format: int32
          type: integer
        experiencePoints:
          description: Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
          format: int64
          type: string
        formattedCurrentStepsString:
          description: The current steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.
          type: string
        lastUpdatedTimestamp:
          description: The timestamp of the last modification to this achievement's state.
          format: int64
          type: string
      type: object
    PlayerAchievementListResponse:
      description: A list of achievement objects.
      properties:
        items:
          description: The achievements.
          items:
            $ref: "#/components/schemas/PlayerAchievement"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievementListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerEvent:
      description: An event status resource.
      properties:
        definitionId:
          description: The ID of the event definition.
          type: string
        formattedNumEvents:
          description: The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`.
          type: string
        numEvents:
          description: The current number of times this event has occurred.
          format: int64
          type: string
        playerId:
          description: The ID of the player.
          type: string
      type: object
    PlayerEventListResponse:
      description: A ListByPlayer response.
      properties:
        items:
          description: The player events.
          items:
            $ref: "#/components/schemas/PlayerEvent"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEventListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    PlayerExperienceInfo:
      description: 1P/3P metadata about the player's experience.
      properties:
        currentExperiencePoints:
          description: The current number of experience points for the player.
          format: int64
          type: string
        currentLevel:
          $ref: "#/components/schemas/PlayerLevel"
          description: The current level of the player.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.
          type: string
        lastLevelUpTimestampMillis:
          description: The timestamp when the player was leveled up, in millis since Unix epoch UTC.
          format: int64
          type: string
        nextLevel:
          $ref: "#/components/schemas/PlayerLevel"
          description: The next level of the player. If the current level is the maximum level, this should be same as the current level.
      type: object
    PlayerLeaderboardScore:
      description: A player leaderboard score object.
      properties:
        friendsRank:
          $ref: "#/components/schemas/LeaderboardScoreRank"
          description: The rank of the score in the friends collection for this leaderboard.
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`.
          type: string
        leaderboard_id:
          description: The ID of the leaderboard this score is in.
          type: string
        publicRank:
          $ref: "#/components/schemas/LeaderboardScoreRank"
          description: The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly.
        scoreString:
          description: The formatted value of this score.
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        socialRank:
          $ref: "#/components/schemas/LeaderboardScoreRank"
          description: The social rank of the score in this leaderboard.
        timeSpan:
          description: The time span of this score.
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
          type: string
        writeTimestamp:
          description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
          format: int64
          type: string
      type: object
    PlayerLeaderboardScoreListResponse:
      description: A list of player leaderboard scores.
      properties:
        items:
          description: The leaderboard scores.
          items:
            $ref: "#/components/schemas/PlayerLeaderboardScore"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        player:
          $ref: "#/components/schemas/Player"
          description: The Player resources for the owner of this score.
      type: object
    PlayerLevel:
      description: 1P/3P metadata about a user's level.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.
          type: string
        level:
          description: The level for the user.
          format: int32
          type: integer
        maxExperiencePoints:
          description: The maximum experience points for this level.
          format: int64
          type: string
        minExperiencePoints:
          description: The minimum experience points for this level.
          format: int64
          type: string
      type: object
    PlayerListResponse:
      description: A third party player list response.
      properties:
        items:
          description: The players.
          items:
            $ref: "#/components/schemas/Player"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerScore:
      description: A player score.
      properties:
        formattedScore:
          description: The formatted score for this player score.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScore`.
          type: string
        score:
          description: The numerical value for this player score.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        timeSpan:
          description: The time span for this player score.
          enum:
            - SCORE_TIME_SPAN_UNSPECIFIED
            - ALL_TIME
            - WEEKLY
            - DAILY
          type: string
      type: object
    PlayerScoreListResponse:
      description: A list of score submission statuses.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreListResponse`.
          type: string
        submittedScores:
          description: The score submissions statuses.
          items:
            $ref: "#/components/schemas/PlayerScoreResponse"
          type: array
      type: object
    PlayerScoreResponse:
      description: A list of leaderboard entry resources.
      properties:
        beatenScoreTimeSpans:
          description: The time spans where the submitted score is better than the existing score for that time span.
          items:
            enum:
              - SCORE_TIME_SPAN_UNSPECIFIED
              - ALL_TIME
              - WEEKLY
              - DAILY
            type: string
          type: array
        formattedScore:
          description: The formatted value of the submitted score.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`.
          type: string
        leaderboardId:
          description: The leaderboard ID that this score was submitted to.
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        unbeatenScores:
          description: The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.
          items:
            $ref: "#/components/schemas/PlayerScore"
          type: array
      type: object
    PlayerScoreSubmissionList:
      description: A list of score submission requests.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreSubmissionList`.
          type: string
        scores:
          description: The score submissions.
          items:
            $ref: "#/components/schemas/ScoreSubmission"
          type: array
      type: object
    ProfileSettings:
      description: Profile settings
      properties:
        friendsListVisibility:
          enum:
            - FRIENDS_LIST_VISIBILITY_UNSPECIFIED
            - VISIBLE
            - REQUEST_REQUIRED
            - UNAVAILABLE
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.
          type: string
        profileVisible:
          description: Whether the player's profile is visible to the currently signed in player.
          type: boolean
      type: object
    RevisionCheckResponse:
      description: A third party checking a revision response.
      properties:
        apiVersion:
          description: The version of the API this client revision should use when calling API methods.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.
          type: string
        revisionStatus:
          description: The result of the revision check.
          enum:
            - REVISION_STATUS_UNSPECIFIED
            - OK
            - DEPRECATED
            - INVALID
          type: string
      type: object
    ScopedPlayerIds:
      description: Scoped player identifiers.
      properties:
        developerPlayerKey:
          description: Identifier of the player across all games of the given developer. Every player has the same developer_player_key in all games of one developer. Developer player key changes for the game if the game is transferred to another developer. Note that game_player_id will stay unchanged.
          type: string
        gamePlayerId:
          description: Game-scoped player identifier. This is the same id that is returned in GetPlayer game_player_id field.
          type: string
      type: object
    ScoreSubmission:
      description: A request to submit a score to leaderboards.
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#scoreSubmission`.
          type: string
        leaderboardId:
          description: The leaderboard this score is being submitted to.
          type: string
        score:
          description: The new score being submitted.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        signature:
          description: Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
      type: object
    Snapshot:
      description: An snapshot object.
      properties:
        coverImage:
          $ref: "#/components/schemas/SnapshotImage"
          description: The cover image of this snapshot. May be absent if there is no image.
        description:
          description: The description of this snapshot.
          type: string
        driveId:
          description: The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller.
          type: string
        durationMillis:
          description: The duration associated with this snapshot, in millis.
          format: int64
          type: string
        id:
          description: The ID of the snapshot.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshot`.
          type: string
        lastModifiedMillis:
          description: The timestamp (in millis since Unix epoch) of the last modification to this snapshot.
          format: int64
          type: string
        progressValue:
          description: The progress value (64-bit integer set by developer) associated with this snapshot.
          format: int64
          type: string
        title:
          description: The title of this snapshot.
          type: string
        type:
          description: The type of this snapshot.
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - SAVE_GAME
          type: string
        uniqueName:
          description: The unique name provided when the snapshot was created.
          type: string
      type: object
    SnapshotImage:
      description: An image of a snapshot.
      properties:
        height:
          description: The height of the image.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotImage`.
          type: string
        mime_type:
          description: The MIME type of the image.
          type: string
        url:
          description: The URL of the image. This URL may be invalidated at any time and should not be cached.
          type: string
        width:
          description: The width of the image.
          format: int32
          type: integer
      type: object
    SnapshotListResponse:
      description: A third party list snapshots response.
      properties:
        items:
          description: The snapshots.
          items:
            $ref: "#/components/schemas/Snapshot"
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results. If there are no more results, the token is omitted.
          type: string
      type: object
    StatsResponse:
      description: A third party stats resource.
      properties:
        avg_session_length_minutes:
          description: Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
          format: float
          type: number
        churn_probability:
          description: The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.
          format: float
          type: number
        days_since_last_played:
          description: Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
          format: int32
          type: integer
        high_spender_probability:
          description: The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
          format: float
          type: number
        kind:
          description: Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.
          type: string
        num_purchases:
          description: Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
          format: int32
          type: integer
        num_sessions:
          description: The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
          format: int32
          type: integer
        num_sessions_percentile:
          description: The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
          format: float
          type: number
        spend_percentile:
          description: The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
          format: float
          type: number
        spend_probability:
          description: The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
          format: float
          type: number
        total_spend_next_28_days:
          description: The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
          format: float
          type: number
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive.appdata: See, create, and delete its own configuration data in your Google Drive
            https://www.googleapis.com/auth/games: Create, edit, and delete your Google Play Games activity
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive.appdata: See, create, and delete its own configuration data in your Google Drive
            https://www.googleapis.com/auth/games: Create, edit, and delete your Google Play Games activity
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
