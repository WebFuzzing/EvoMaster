openapi: 3.0.0
servers:
  - url: https://pubsublite.googleapis.com/
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Pub/Sub Lite API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://pubsublite.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: pubsublite
externalDocs:
  url: https://cloud.google.com/pubsub/lite/docs
tags:
  - name: admin
  - name: cursor
  - name: topicStats
paths:
  "/v1/admin/{name}":
    delete:
      description: Deletes the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.delete
      parameters:
        - description: Required. The name of the topic to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    get:
      description: Returns the topic configuration.
      operationId: pubsublite.admin.projects.locations.topics.get
      parameters:
        - description: Required. The name of the topic whose configuration to return.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates properties of the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.patch
      parameters:
        - description: "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. A mask specifying the topic fields to change.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Topic"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/admin/{name}/operations":
    get:
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: pubsublite.admin.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/admin/{name}/partitions":
    get:
      description: Returns the partition information for the requested topic.
      operationId: pubsublite.admin.projects.locations.topics.getPartitions
      parameters:
        - description: Required. The topic whose partition information to return.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicPartitions"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/admin/{name}/subscriptions":
    get:
      description: Lists the subscriptions attached to the specified topic.
      operationId: pubsublite.admin.projects.locations.topics.subscriptions.list
      parameters:
        - description: Required. The name of the topic whose subscriptions to list.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the given topic will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListTopicSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopicSubscriptions` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTopicSubscriptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/admin/{name}/topics":
    get:
      description: Lists the topics attached to the specified reservation.
      operationId: pubsublite.admin.projects.locations.reservations.topics.list
      parameters:
        - description: "Required. The name of the reservation whose topics to list. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the given reservation will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListReservationTopics` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReservationTopics` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReservationTopicsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/admin/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: pubsublite.admin.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/admin/{name}:seek":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Performs an out-of-band seek for a subscription to a specified target, which may be timestamps or named positions within the message backlog. Seek translates these targets to cursors for each partition and orchestrates subscribers to start consuming messages from these seek cursors. If an operation is returned, the seek has been registered and subscribers will eventually receive messages from the seek cursors (i.e. eventual consistency), as long as they are using a minimum supported client library version and not a system that tracks cursors independently of Pub/Sub Lite (e.g. Apache Beam, Dataflow, Spark). The seek operation will fail for unsupported clients. If clients would like to know when subscribers react to the seek (or not), they can poll the operation. The seek operation will succeed and complete once subscribers are ready to receive messages from the seek cursors for all partitions of the topic. This means that the seek operation will not complete until all subscribers come online. If the previous seek operation has not yet completed, it will be aborted and the new invocation of seek will supersede it.
      operationId: pubsublite.admin.projects.locations.subscriptions.seek
      parameters:
        - description: Required. The name of the subscription to seek.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SeekSubscriptionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/admin/{parent}/reservations":
    get:
      description: Returns the list of reservations for the given project.
      operationId: pubsublite.admin.projects.locations.reservations.list
      parameters:
        - description: Required. The parent whose reservations are to be listed. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of reservations to return. The service may return fewer than this value. If unset or zero, all reservations for the parent will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListReservations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReservations` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReservationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new reservation.
      operationId: pubsublite.admin.projects.locations.reservations.create
      parameters:
        - description: Required. The parent location in which to create the reservation. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The ID to use for the reservation, which will become the final component of the reservation's name. This value is structured like: `my-reservation-name`."
          in: query
          name: reservationId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/admin/{parent}/subscriptions":
    get:
      description: Returns the list of subscriptions for the given project.
      operationId: pubsublite.admin.projects.locations.subscriptions.list
      parameters:
        - description: Required. The parent whose subscriptions are to be listed. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the parent will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new subscription.
      operationId: pubsublite.admin.projects.locations.subscriptions.create
      parameters:
        - description: Required. The parent location in which to create the subscription. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: If true, the newly created subscription will only receive messages published after the subscription was created. Otherwise, the entire message backlog will be received on the subscription. Defaults to false.
          in: query
          name: skipBacklog
          schema:
            type: boolean
        - description: "Required. The ID to use for the subscription, which will become the final component of the subscription's name. This value is structured like: `my-sub-name`."
          in: query
          name: subscriptionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/admin/{parent}/topics":
    get:
      description: Returns the list of topics for the given project.
      operationId: pubsublite.admin.projects.locations.topics.list
      parameters:
        - description: Required. The parent whose topics are to be listed. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the parent will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListTopics` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopics` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTopicsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new topic.
      operationId: pubsublite.admin.projects.locations.topics.create
      parameters:
        - description: Required. The parent location in which to create the topic. Structured like `projects/{project_number}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The ID to use for the topic, which will become the final component of the topic's name. This value is structured like: `my-topic-name`."
          in: query
          name: topicId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Topic"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - admin
  "/v1/cursor/{parent}/cursors":
    get:
      description: Returns all committed cursor information for a subscription.
      operationId: pubsublite.cursor.projects.locations.subscriptions.cursors.list
      parameters:
        - description: Required. The subscription for which to retrieve cursors. Structured like `projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of cursors to return. The service may return fewer than this value. If unset or zero, all cursors for the parent will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListPartitionCursors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPartitionCursors` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartitionCursorsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - cursor
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/cursor/{subscription}:commitCursor":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the committed cursor.
      operationId: pubsublite.cursor.projects.locations.subscriptions.commitCursor
      parameters:
        - description: The subscription for which to update the cursor.
          in: path
          name: subscription
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommitCursorRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommitCursorResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - cursor
  "/v1/topicStats/{topic}:computeHeadCursor":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Compute the head cursor for the partition. The head cursor's offset is guaranteed to be less than or equal to all messages which have not yet been acknowledged as published, and greater than the offset of any message whose publish has already been acknowledged. It is zero if there have never been messages in the partition.
      operationId: pubsublite.topicStats.projects.locations.topics.computeHeadCursor
      parameters:
        - description: Required. The topic for which we should compute the head cursor.
          in: path
          name: topic
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComputeHeadCursorRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputeHeadCursorResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - topicStats
  "/v1/topicStats/{topic}:computeMessageStats":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Compute statistics about a range of messages in a given topic and partition.
      operationId: pubsublite.topicStats.projects.locations.topics.computeMessageStats
      parameters:
        - description: Required. The topic for which we should compute message stats.
          in: path
          name: topic
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComputeMessageStatsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputeMessageStatsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - topicStats
  "/v1/topicStats/{topic}:computeTimeCursor":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Compute the corresponding cursor for a publish or event time in a topic partition.
      operationId: pubsublite.topicStats.projects.locations.topics.computeTimeCursor
      parameters:
        - description: Required. The topic for which we should compute the cursor.
          in: path
          name: topic
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComputeTimeCursorRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputeTimeCursorResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - topicStats
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    Capacity:
      description: The throughput capacity configuration for each partition.
      properties:
        publishMibPerSec:
          description: Publish throughput capacity per partition in MiB/s. Must be >= 4 and <= 16.
          format: int32
          type: integer
        subscribeMibPerSec:
          description: Subscribe throughput capacity per partition in MiB/s. Must be >= 4 and <= 32.
          format: int32
          type: integer
      type: object
    CommitCursorRequest:
      description: Request for CommitCursor.
      properties:
        cursor:
          $ref: "#/components/schemas/Cursor"
          description: The new value for the committed cursor.
        partition:
          description: The partition for which to update the cursor. Partitions are zero indexed, so `partition` must be in the range [0, topic.num_partitions).
          format: int64
          type: string
      type: object
    CommitCursorResponse:
      description: Response for CommitCursor.
      properties: {}
      type: object
    ComputeHeadCursorRequest:
      description: Compute the current head cursor for a partition.
      properties:
        partition:
          description: Required. The partition for which we should compute the head cursor.
          format: int64
          type: string
      type: object
    ComputeHeadCursorResponse:
      description: Response containing the head cursor for the requested topic and partition.
      properties:
        headCursor:
          $ref: "#/components/schemas/Cursor"
          description: The head cursor.
      type: object
    ComputeMessageStatsRequest:
      description: Compute statistics about a range of messages in a given topic and partition.
      properties:
        endCursor:
          $ref: "#/components/schemas/Cursor"
          description: The exclusive end of the range. The range is empty if end_cursor <= start_cursor. Specifying a start_cursor before the first message and an end_cursor after the last message will retrieve all messages.
        partition:
          description: Required. The partition for which we should compute message stats.
          format: int64
          type: string
        startCursor:
          $ref: "#/components/schemas/Cursor"
          description: The inclusive start of the range.
      type: object
    ComputeMessageStatsResponse:
      description: Response containing stats for messages in the requested topic and partition.
      properties:
        messageBytes:
          description: The number of quota bytes accounted to these messages.
          format: int64
          type: string
        messageCount:
          description: The count of messages.
          format: int64
          type: string
        minimumEventTime:
          description: The minimum event timestamp across these messages. For the purposes of this computation, if a message does not have an event time, we use the publish time. The timestamp will be unset if there are no messages.
          format: google-datetime
          type: string
        minimumPublishTime:
          description: The minimum publish timestamp across these messages. Note that publish timestamps within a partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no messages.
          format: google-datetime
          type: string
      type: object
    ComputeTimeCursorRequest:
      description: Compute the corresponding cursor for a publish or event time in a topic partition.
      properties:
        partition:
          description: Required. The partition for which we should compute the cursor.
          format: int64
          type: string
        target:
          $ref: "#/components/schemas/TimeTarget"
          description: Required. The target publish or event time. Specifying a future time will return an unset cursor.
      type: object
    ComputeTimeCursorResponse:
      description: Response containing the cursor corresponding to a publish or event time in a topic partition.
      properties:
        cursor:
          $ref: "#/components/schemas/Cursor"
          description: If present, the cursor references the first message with time greater than or equal to the specified target time. If such a message cannot be found, the cursor will be unset (i.e. `cursor` is not present).
      type: object
    Cursor:
      description: A cursor that describes the position of a message within a topic partition.
      properties:
        offset:
          description: The offset of a message within a topic partition. Must be greater than or equal 0.
          format: int64
          type: string
      type: object
    DeliveryConfig:
      description: The settings for a subscription's message delivery.
      properties:
        deliveryRequirement:
          description: The DeliveryRequirement for this subscription.
          enum:
            - DELIVERY_REQUIREMENT_UNSPECIFIED
            - DELIVER_IMMEDIATELY
            - DELIVER_AFTER_STORED
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListPartitionCursorsResponse:
      description: Response for ListPartitionCursors
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        partitionCursors:
          description: The partition cursors from this request.
          items:
            $ref: "#/components/schemas/PartitionCursor"
          type: array
      type: object
    ListReservationTopicsResponse:
      description: Response for ListReservationTopics.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.
          type: string
        topics:
          description: The names of topics attached to the reservation. The order of the topics is unspecified.
          items:
            type: string
          type: array
      type: object
    ListReservationsResponse:
      description: Response for ListReservations.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.
          type: string
        reservations:
          description: The list of reservation in the requested parent. The order of the reservations is unspecified.
          items:
            $ref: "#/components/schemas/Reservation"
          type: array
      type: object
    ListSubscriptionsResponse:
      description: Response for ListSubscriptions.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.
          type: string
        subscriptions:
          description: The list of subscriptions in the requested parent. The order of the subscriptions is unspecified.
          items:
            $ref: "#/components/schemas/Subscription"
          type: array
      type: object
    ListTopicSubscriptionsResponse:
      description: Response for ListTopicSubscriptions.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.
          type: string
        subscriptions:
          description: The names of subscriptions attached to the topic. The order of the subscriptions is unspecified.
          items:
            type: string
          type: array
      type: object
    ListTopicsResponse:
      description: Response for ListTopics.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.
          type: string
        topics:
          description: The list of topic in the requested parent. The order of the topics is unspecified.
          items:
            $ref: "#/components/schemas/Topic"
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Metadata for long running operations.
      properties:
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: The time the operation finished running. Not set if the operation has not completed.
          format: google-datetime
          type: string
        target:
          description: "Resource path for the target of the operation. For example, targets of seeks are subscription resources, structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}"
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
      type: object
    PartitionConfig:
      description: The settings for a topic's partitions.
      properties:
        capacity:
          $ref: "#/components/schemas/Capacity"
          description: The capacity configuration.
        count:
          description: The number of partitions in the topic. Must be at least 1. Once a topic has been created the number of partitions can be increased but not decreased. Message ordering is not guaranteed across a topic resize. For more information see https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity
          format: int64
          type: string
        scale:
          description: "DEPRECATED: Use capacity instead which can express a superset of configurations. Every partition in the topic is allocated throughput equivalent to `scale` times the standard partition throughput (4 MiB/s). This is also reflected in the cost of this topic; a topic with `scale` of 2 and count of 10 is charged for 20 partitions. This value must be in the range [1,4]."
          format: int32
          type: integer
      type: object
    PartitionCursor:
      description: A pair of a Cursor and the partition it is for.
      properties:
        cursor:
          $ref: "#/components/schemas/Cursor"
          description: The value of the cursor.
        partition:
          description: The partition this is for.
          format: int64
          type: string
      type: object
    Reservation:
      description: Metadata about a reservation resource.
      properties:
        name:
          description: "The name of the reservation. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}"
          type: string
        throughputCapacity:
          description: The reserved throughput capacity. Every unit of throughput capacity is equivalent to 1 MiB/s of published messages or 2 MiB/s of subscribed messages. Any topics which are declared as using capacity from a Reservation will consume resources from this reservation instead of being charged individually.
          format: int64
          type: string
      type: object
    ReservationConfig:
      description: The settings for this topic's Reservation usage.
      properties:
        throughputReservation:
          description: "The Reservation to use for this topic's throughput capacity. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}"
          type: string
      type: object
    RetentionConfig:
      description: The settings for a topic's message retention.
      properties:
        perPartitionBytes:
          description: The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic's partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`.
          format: int64
          type: string
        period:
          description: How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`.
          format: google-duration
          type: string
      type: object
    SeekSubscriptionRequest:
      description: Request for SeekSubscription.
      properties:
        namedTarget:
          description: Seek to a named position with respect to the message backlog.
          enum:
            - NAMED_TARGET_UNSPECIFIED
            - TAIL
            - HEAD
          type: string
        timeTarget:
          $ref: "#/components/schemas/TimeTarget"
          description: Seek to the first message whose publish or event time is greater than or equal to the specified query time. If no such message can be located, will seek to the end of the message backlog.
      type: object
    SeekSubscriptionResponse:
      description: Response for SeekSubscription long running operation.
      properties: {}
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Subscription:
      description: Metadata about a subscription resource.
      properties:
        deliveryConfig:
          $ref: "#/components/schemas/DeliveryConfig"
          description: The settings for this subscription's message delivery.
        name:
          description: "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}"
          type: string
        topic:
          description: "The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}"
          type: string
      type: object
    TimeTarget:
      description: A target publish or event time. Can be used for seeking to or retrieving the corresponding cursor.
      properties:
        eventTime:
          description: Request the cursor of the first message with event time greater than or equal to `event_time`. If messages are missing an event time, the publish time is used as a fallback. As event times are user supplied, subsequent messages may have event times less than `event_time` and should be filtered by the client, if necessary.
          format: google-datetime
          type: string
        publishTime:
          description: Request the cursor of the first message with publish time greater than or equal to `publish_time`. All messages thereafter are guaranteed to have publish times >= `publish_time`.
          format: google-datetime
          type: string
      type: object
    Topic:
      description: Metadata about a topic resource.
      properties:
        name:
          description: "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}"
          type: string
        partitionConfig:
          $ref: "#/components/schemas/PartitionConfig"
          description: The settings for this topic's partitions.
        reservationConfig:
          $ref: "#/components/schemas/ReservationConfig"
          description: The settings for this topic's Reservation usage.
        retentionConfig:
          $ref: "#/components/schemas/RetentionConfig"
          description: The settings for this topic's message retention.
      type: object
    TopicPartitions:
      description: Response for GetTopicPartitions.
      properties:
        partitionCount:
          description: The number of partitions in the topic.
          format: int64
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
