openapi: 3.0.0
servers:
  - url: https://mybusinessplaceactions.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The My Business Place Actions API provides an interface for managing place action links of a location on Google.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: My Business Place Actions API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://mybusinessplaceactions.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: mybusinessplaceactions
externalDocs:
  url: https://developers.google.com/my-business/
tags:
  - name: locations
  - name: placeActionTypeMetadata
paths:
  /v1/placeActionTypeMetadata:
    get:
      description: Returns the list of available place action types for a location or country.
      operationId: mybusinessplaceactions.placeActionTypeMetadata.list
      parameters:
        - description: "Optional. A filter constraining the place action types to return metadata for. The response includes entries that match the filter. We support only the following filters: 1. location=XYZ where XYZ is a string indicating the resource name of a location, in the format `locations/{location_id}`. 2. region_code=XYZ where XYZ is a Unicode CLDR region code to find available action types. If no filter is provided, all place action types are returned."
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The IETF BCP-47 code of language to get display names in. If this language is not available, they will be provided in English.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. How many action types to include per page. Default is 10, minimum is 1.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. If specified, the next page of place action type metadata is retrieved. The `pageToken` is returned when a call to `placeActionTypeMetadata.list` returns more results than can fit into the requested page size.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlaceActionTypeMetadataResponse"
          description: Successful response
      tags:
        - placeActionTypeMetadata
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{name}":
    delete:
      description: Deletes a place action link from the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.delete
      parameters:
        - description: Required. The resource name of the place action link to remove from the location.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - locations
    get:
      description: Gets the specified place action link.
      operationId: mybusinessplaceactions.locations.placeActionLinks.get
      parameters:
        - description: Required. The name of the place action link to fetch.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceActionLink"
          description: Successful response
      tags:
        - locations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified place action link and returns it.
      operationId: mybusinessplaceactions.locations.placeActionLinks.patch
      parameters:
        - description: Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. The specific fields to update. The only editable fields are `uri`, `place_action_type` and `is_preferred`. If the updated link already exists at the same location with the same `place_action_type` and `uri`, fails with an `ALREADY_EXISTS` error.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceActionLink"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceActionLink"
          description: Successful response
      tags:
        - locations
  "/v1/{parent}/placeActionLinks":
    get:
      description: Lists the place action links for the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.list
      parameters:
        - description: Required. The name of the location whose place action links will be listed. `locations/{location_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. A filter constraining the place action links to return. The response includes entries that match the filter. We support only the following filter: 1. place_action_type=XYZ where XYZ is a valid PlaceActionType."
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. How many place action links to return per page. Default of 10. The minimum is 1.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. If specified, returns the next page of place action links.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlaceActionLinksResponse"
          description: Successful response
      tags:
        - locations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a place action link associated with the specified location, and returns it. The request is considered duplicate if the `parent`, `place_action_link.uri` and `place_action_link.place_action_type` are the same as a previous request.
      operationId: mybusinessplaceactions.locations.placeActionLinks.create
      parameters:
        - description: Required. The resource name of the location where to create this place action link. `locations/{location_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceActionLink"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaceActionLink"
          description: Successful response
      tags:
        - locations
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ListPlaceActionLinksResponse:
      description: Response message for PlaceActions.ListPlaceActionLinks.
      properties:
        nextPageToken:
          description: If there are more place action links than the requested page size, then this field is populated with a token to fetch the next page of results.
          type: string
        placeActionLinks:
          description: The returned list of place action links.
          items:
            $ref: "#/components/schemas/PlaceActionLink"
          type: array
      type: object
    ListPlaceActionTypeMetadataResponse:
      description: Response message for PlaceActions.ListPlaceActionTypeMetadata.
      properties:
        nextPageToken:
          description: If the number of action types exceeded the requested page size, this field will be populated with a token to fetch the next page on a subsequent call to `placeActionTypeMetadata.list`. If there are no more results, this field will not be present in the response.
          type: string
        placeActionTypeMetadata:
          description: A collection of metadata for the available place action types.
          items:
            $ref: "#/components/schemas/PlaceActionTypeMetadata"
          type: array
      type: object
    PlaceActionLink:
      description: Represents a place action link and its attributes.
      properties:
        createTime:
          description: Output only. The time when the place action link was created.
          format: google-datetime
          readOnly: true
          type: string
        isEditable:
          description: Output only. Indicates whether this link can be edited by the client.
          readOnly: true
          type: boolean
        isPreferred:
          description: Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.
          type: boolean
        name:
          description: Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.
          type: string
        placeActionType:
          description: Required. The type of place action that can be performed using this link.
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          type: string
        providerType:
          description: Output only. Specifies the provider type.
          enum:
            - PROVIDER_TYPE_UNSPECIFIED
            - MERCHANT
            - AGGREGATOR_3P
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the place action link was last modified.
          format: google-datetime
          readOnly: true
          type: string
        uri:
          description: Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).
          type: string
      type: object
    PlaceActionTypeMetadata:
      description: Metadata for supported place action types.
      properties:
        displayName:
          description: The localized display name for the attribute, if available; otherwise, the English display name.
          type: string
        placeActionType:
          description: The place action type.
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          type: string
      type: object
