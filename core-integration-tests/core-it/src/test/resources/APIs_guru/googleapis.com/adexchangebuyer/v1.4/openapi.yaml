openapi: 3.0.0
servers:
  - url: https://www.googleapis.com/adexchangebuyer/v1.4
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Ad Exchange Buyer API
  version: v1.4
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/adexchangebuyer/v1.4/rest
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: adexchangebuyer
externalDocs:
  url: https://developers.google.com/ad-exchange/buyer-rest
tags:
  - name: accounts
  - name: billingInfo
  - name: budget
  - name: creatives
  - name: marketplacedeals
  - name: marketplacenotes
  - name: marketplaceprivateauction
  - name: performanceReport
  - name: pretargetingConfig
  - name: products
  - name: proposals
  - name: pubprofiles
paths:
  /accounts:
    get:
      description: Retrieves the authenticated user's list of accounts.
      operationId: adexchangebuyer.accounts.list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/accounts/{id}":
    get:
      description: Gets one account by ID.
      operationId: adexchangebuyer.accounts.get
      parameters:
        - description: The account id
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an existing account. This method supports patch semantics.
      operationId: adexchangebuyer.accounts.patch
      parameters:
        - description: The account id
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Confirmation for erasing bidder and cookie matching urls.
          in: query
          name: confirmUnsafeAccountChange
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - accounts
    put:
      description: Updates an existing account.
      operationId: adexchangebuyer.accounts.update
      parameters:
        - description: The account id
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Confirmation for erasing bidder and cookie matching urls.
          in: query
          name: confirmUnsafeAccountChange
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - accounts
  /billinginfo:
    get:
      description: Retrieves a list of billing information for all accounts of the authenticated user.
      operationId: adexchangebuyer.billingInfo.list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfoList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - billingInfo
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/billinginfo/{accountId}":
    get:
      description: Returns the billing information for one account specified by account ID.
      operationId: adexchangebuyer.billingInfo.get
      parameters:
        - description: The account id.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - billingInfo
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/billinginfo/{accountId}/{billingId}":
    get:
      description: Returns the budget information for the adgroup specified by the accountId and billingId.
      operationId: adexchangebuyer.budget.get
      parameters:
        - description: The account id to get the budget information for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The billing id to get the budget information for.
          in: path
          name: billingId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - budget
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. This method supports patch semantics.
      operationId: adexchangebuyer.budget.patch
      parameters:
        - description: The account id associated with the budget being updated.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The billing id associated with the budget being updated.
          in: path
          name: billingId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Budget"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - budget
    put:
      description: Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request.
      operationId: adexchangebuyer.budget.update
      parameters:
        - description: The account id associated with the budget being updated.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The billing id associated with the budget being updated.
          in: path
          name: billingId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Budget"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - budget
  /creatives:
    get:
      description: Retrieves a list of the authenticated user's active creatives. A creative will be available 30-40 minutes after submission.
      operationId: adexchangebuyer.creatives.list
      parameters:
        - description: When specified, only creatives for the given account ids are returned.
          explode: true
          in: query
          name: accountId
          schema:
            items:
              type: integer
            type: array
          style: form
        - description: When specified, only creatives for the given buyer creative ids are returned.
          explode: true
          in: query
          name: buyerCreativeId
          schema:
            items:
              type: string
            type: array
          style: form
        - description: When specified, only creatives having the given deals status are returned.
          in: query
          name: dealsStatusFilter
          schema:
            enum:
              - approved
              - conditionally_approved
              - disapproved
              - not_checked
            type: string
        - description: Maximum number of entries returned on one result page. If not set, the default is 100. Optional.
          in: query
          name: maxResults
          schema:
            maximum: 1000
            minimum: 1
            type: integer
        - description: When specified, only creatives having the given open auction status are returned.
          in: query
          name: openAuctionStatusFilter
          schema:
            enum:
              - approved
              - conditionally_approved
              - disapproved
              - not_checked
            type: string
        - description: A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response. Optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreativesList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submit a new creative.
      operationId: adexchangebuyer.creatives.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Creative"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Creative"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
  "/creatives/{accountId}/{buyerCreativeId}":
    get:
      description: Gets the status for a single creative. A creative will be available 30-40 minutes after submission.
      operationId: adexchangebuyer.creatives.get
      parameters:
        - description: The id for the account that will serve this creative.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
        - description: The buyer-specific id for this creative.
          in: path
          name: buyerCreativeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Creative"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/creatives/{accountId}/{buyerCreativeId}/addDeal/{dealId}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Add a deal id association for the creative.
      operationId: adexchangebuyer.creatives.addDeal
      parameters:
        - description: The id for the account that will serve this creative.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
        - description: The buyer-specific id for this creative.
          in: path
          name: buyerCreativeId
          required: true
          schema:
            type: string
        - description: The id of the deal id to associate with this creative.
          in: path
          name: dealId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
  "/creatives/{accountId}/{buyerCreativeId}/listDeals":
    get:
      description: Lists the external deal ids associated with the creative.
      operationId: adexchangebuyer.creatives.listDeals
      parameters:
        - description: The id for the account that will serve this creative.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
        - description: The buyer-specific id for this creative.
          in: path
          name: buyerCreativeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreativeDealIds"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/creatives/{accountId}/{buyerCreativeId}/removeDeal/{dealId}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Remove a deal id associated with the creative.
      operationId: adexchangebuyer.creatives.removeDeal
      parameters:
        - description: The id for the account that will serve this creative.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
        - description: The buyer-specific id for this creative.
          in: path
          name: buyerCreativeId
          required: true
          schema:
            type: string
        - description: The id of the deal id to disassociate with this creative.
          in: path
          name: dealId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - creatives
  /performancereport:
    get:
      description: Retrieves the authenticated user's list of performance metrics.
      operationId: adexchangebuyer.performanceReport.list
      parameters:
        - description: The account id to get the reports.
          in: query
          name: accountId
          required: true
          schema:
            type: string
        - description: The end time of the report in ISO 8601 timestamp format using UTC.
          in: query
          name: endDateTime
          required: true
          schema:
            type: string
        - description: The start time of the report in ISO 8601 timestamp format using UTC.
          in: query
          name: startDateTime
          required: true
          schema:
            type: string
        - description: Maximum number of entries returned on one result page. If not set, the default is 100. Optional.
          in: query
          name: maxResults
          schema:
            maximum: 1000
            minimum: 1
            type: integer
        - description: A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response. Optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerformanceReportList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - performanceReport
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/pretargetingconfigs/{accountId}":
    get:
      description: Retrieves a list of the authenticated user's pretargeting configurations.
      operationId: adexchangebuyer.pretargetingConfig.list
      parameters:
        - description: The account id to get the pretargeting configs for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PretargetingConfigList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Inserts a new pretargeting configuration.
      operationId: adexchangebuyer.pretargetingConfig.insert
      parameters:
        - description: The account id to insert the pretargeting config for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PretargetingConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PretargetingConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
  "/pretargetingconfigs/{accountId}/{configId}":
    delete:
      description: Deletes an existing pretargeting config.
      operationId: adexchangebuyer.pretargetingConfig.delete
      parameters:
        - description: The account id to delete the pretargeting config for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The specific id of the configuration to delete.
          in: path
          name: configId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
    get:
      description: Gets a specific pretargeting configuration
      operationId: adexchangebuyer.pretargetingConfig.get
      parameters:
        - description: The account id to get the pretargeting config for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The specific id of the configuration to retrieve.
          in: path
          name: configId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PretargetingConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an existing pretargeting config. This method supports patch semantics.
      operationId: adexchangebuyer.pretargetingConfig.patch
      parameters:
        - description: The account id to update the pretargeting config for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The specific id of the configuration to update.
          in: path
          name: configId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PretargetingConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PretargetingConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
    put:
      description: Updates an existing pretargeting config.
      operationId: adexchangebuyer.pretargetingConfig.update
      parameters:
        - description: The account id to update the pretargeting config for.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The specific id of the configuration to update.
          in: path
          name: configId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PretargetingConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PretargetingConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pretargetingConfig
  "/privateauction/{privateAuctionId}/updateproposal":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Update a given private auction proposal
      operationId: adexchangebuyer.marketplaceprivateauction.updateproposal
      parameters:
        - description: The private auction id to be updated.
          in: path
          name: privateAuctionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePrivateAuctionProposalRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplaceprivateauction
  /products/search:
    get:
      description: Gets the requested product.
      operationId: adexchangebuyer.products.search
      parameters:
        - description: The pql query used to query for products.
          in: query
          name: pqlQuery
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOffersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/products/{productId}":
    get:
      description: Gets the requested product by id.
      operationId: adexchangebuyer.products.get
      parameters:
        - description: The id for the product to get the head revision for.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /proposals/insert:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Create the given list of proposals
      operationId: adexchangebuyer.proposals.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrdersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrdersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
  /proposals/search:
    get:
      description: Search for proposals using pql query
      operationId: adexchangebuyer.proposals.search
      parameters:
        - description: Query string to retrieve specific proposals.
          in: query
          name: pqlQuery
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrdersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/proposals/{proposalId}":
    get:
      description: Get a proposal given its id
      operationId: adexchangebuyer.proposals.get
      parameters:
        - description: Id of the proposal to retrieve.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposal"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/proposals/{proposalId}/deals":
    get:
      description: List all the deals for a given proposal
      operationId: adexchangebuyer.marketplacedeals.list
      parameters:
        - description: The proposalId to get deals for. To search across all proposals specify order_id = '-' as part of the URL.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
        - description: Query string to retrieve specific deals.
          in: query
          name: pqlQuery
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderDealsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacedeals
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/proposals/{proposalId}/deals/delete":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Delete the specified deals from the proposal
      operationId: adexchangebuyer.marketplacedeals.delete
      parameters:
        - description: The proposalId to delete deals from.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteOrderDealsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteOrderDealsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacedeals
  "/proposals/{proposalId}/deals/insert":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Add new deals for the specified proposal
      operationId: adexchangebuyer.marketplacedeals.insert
      parameters:
        - description: proposalId for which deals need to be added.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrderDealsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrderDealsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacedeals
  "/proposals/{proposalId}/deals/update":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Replaces all the deals in the proposal with the passed in deals
      operationId: adexchangebuyer.marketplacedeals.update
      parameters:
        - description: The proposalId to edit deals on.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditAllOrderDealsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditAllOrderDealsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacedeals
  "/proposals/{proposalId}/notes":
    get:
      description: Get all the notes associated with a proposal
      operationId: adexchangebuyer.marketplacenotes.list
      parameters:
        - description: The proposalId to get notes for. To search across all proposals specify order_id = '-' as part of the URL.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
        - description: Query string to retrieve specific notes. To search the text contents of notes, please use syntax like "WHERE note.note = "foo" or "WHERE note.note LIKE "%bar%"
          in: query
          name: pqlQuery
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderNotesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacenotes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/proposals/{proposalId}/notes/insert":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Add notes to the proposal
      operationId: adexchangebuyer.marketplacenotes.insert
      parameters:
        - description: The proposalId to add notes for.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrderNotesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrderNotesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - marketplacenotes
  "/proposals/{proposalId}/setupcomplete":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Update the given proposal to indicate that setup has been completed.
      operationId: adexchangebuyer.proposals.setupcomplete
      parameters:
        - description: The proposal id for which the setup is complete
          in: path
          name: proposalId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
  "/proposals/{proposalId}/{revisionNumber}/{updateAction}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Update the given proposal. This method supports patch semantics.
      operationId: adexchangebuyer.proposals.patch
      parameters:
        - description: The proposal id to update.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
        - description: The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.
          in: path
          name: revisionNumber
          required: true
          schema:
            type: string
        - description: The proposed action to take on the proposal. This field is required and it must be set when updating a proposal.
          in: path
          name: updateAction
          required: true
          schema:
            enum:
              - accept
              - cancel
              - propose
              - proposeAndAccept
              - unknownAction
              - updateNonTerms
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proposal"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposal"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
    put:
      description: Update the given proposal
      operationId: adexchangebuyer.proposals.update
      parameters:
        - description: The proposal id to update.
          in: path
          name: proposalId
          required: true
          schema:
            type: string
        - description: The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.
          in: path
          name: revisionNumber
          required: true
          schema:
            type: string
        - description: The proposed action to take on the proposal. This field is required and it must be set when updating a proposal.
          in: path
          name: updateAction
          required: true
          schema:
            enum:
              - accept
              - cancel
              - propose
              - proposeAndAccept
              - unknownAction
              - updateNonTerms
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proposal"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proposal"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - proposals
  "/publisher/{accountId}/profiles":
    get:
      description: Gets the requested publisher profile(s) by publisher accountId.
      operationId: adexchangebuyer.pubprofiles.list
      parameters:
        - description: The accountId of the publisher to get profiles for.
          in: path
          name: accountId
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPublisherProfilesByAccountIdResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      tags:
        - pubprofiles
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        enum:
          - json
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  schemas:
    Account:
      description: Configuration data for an Ad Exchange buyer account.
      properties:
        applyPretargetingToNonGuaranteedDeals:
          description: When this is false, bid requests that include a deal ID for a private auction or preferred deal are always sent to your bidder. When true, all active pretargeting configs will be applied to private auctions and preferred deals. Programmatic Guaranteed deals (when enabled) are always sent to your bidder.
          type: boolean
        bidderLocation:
          description: Your bidder locations that have distinct URLs.
          items:
            properties:
              bidProtocol:
                description: |-
                  The protocol that the bidder endpoint is using. OpenRTB protocols with prefix PROTOCOL_OPENRTB_PROTOBUF use proto buffer, otherwise use JSON.  Allowed values:  
                  - PROTOCOL_ADX 
                  - PROTOCOL_OPENRTB_2_2 
                  - PROTOCOL_OPENRTB_2_3 
                  - PROTOCOL_OPENRTB_2_4 
                  - PROTOCOL_OPENRTB_2_5 
                  - PROTOCOL_OPENRTB_PROTOBUF_2_3 
                  - PROTOCOL_OPENRTB_PROTOBUF_2_4 
                  - PROTOCOL_OPENRTB_PROTOBUF_2_5
                type: string
              maximumQps:
                description: The maximum queries per second the Ad Exchange will send.
                format: int32
                type: integer
              region:
                description: |-
                  The geographical region the Ad Exchange should send requests from. Only used by some quota systems, but always setting the value is recommended. Allowed values:  
                  - ASIA 
                  - EUROPE 
                  - US_EAST 
                  - US_WEST
                type: string
              url:
                description: The URL to which the Ad Exchange will send bid requests.
                type: string
            type: object
          type: array
        cookieMatchingNid:
          description: The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.
          type: string
        cookieMatchingUrl:
          description: The base URL used in cookie match requests.
          type: string
        id:
          description: Account id.
          format: int32
          type: integer
        kind:
          default: adexchangebuyer#account
          description: Resource type.
          type: string
        maximumActiveCreatives:
          description: The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.
          format: int32
          type: integer
        maximumTotalQps:
          description: The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.
          format: int32
          type: integer
        numberActiveCreatives:
          description: The number of creatives that this account inserted or bid with in the last 30 days.
          format: int32
          type: integer
      type: object
    AccountsList:
      description: An account feed lists Ad Exchange buyer accounts that the user has access to. Each entry in the feed corresponds to a single buyer account.
      properties:
        items:
          description: A list of accounts.
          items:
            $ref: "#/components/schemas/Account"
          type: array
        kind:
          default: adexchangebuyer#accountsList
          description: Resource type.
          type: string
      type: object
    AddOrderDealsRequest:
      properties:
        deals:
          description: The list of deals to add
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
        proposalRevisionNumber:
          description: The last known proposal revision number.
          format: int64
          type: string
        updateAction:
          description: Indicates an optional action to take on the proposal
          type: string
      type: object
    AddOrderDealsResponse:
      properties:
        deals:
          description: List of deals added (in the same proposal as passed in the request)
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
        proposalRevisionNumber:
          description: The updated revision number for the proposal.
          format: int64
          type: string
      type: object
    AddOrderNotesRequest:
      properties:
        notes:
          description: The list of notes to add.
          items:
            $ref: "#/components/schemas/MarketplaceNote"
          type: array
      type: object
    AddOrderNotesResponse:
      properties:
        notes:
          items:
            $ref: "#/components/schemas/MarketplaceNote"
          type: array
      type: object
    BillingInfo:
      description: The configuration data for an Ad Exchange billing info.
      properties:
        accountId:
          description: Account id.
          format: int32
          type: integer
        accountName:
          description: Account name.
          type: string
        billingId:
          description: A list of adgroup IDs associated with this particular account. These IDs may show up as part of a realtime bidding BidRequest, which indicates a bid request for this account.
          items:
            type: string
          type: array
        kind:
          default: adexchangebuyer#billingInfo
          description: Resource type.
          type: string
      type: object
    BillingInfoList:
      description: A billing info feed lists Billing Info the Ad Exchange buyer account has access to. Each entry in the feed corresponds to a single billing info.
      properties:
        items:
          description: A list of billing info relevant for your account.
          items:
            $ref: "#/components/schemas/BillingInfo"
          type: array
        kind:
          default: adexchangebuyer#billingInfoList
          description: Resource type.
          type: string
      type: object
    Budget:
      description: The configuration data for Ad Exchange RTB - Budget API.
      properties:
        accountId:
          description: The id of the account. This is required for get and update requests.
          format: int64
          type: string
        billingId:
          description: The billing id to determine which adgroup to provide budget information for. This is required for get and update requests.
          format: int64
          type: string
        budgetAmount:
          description: The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.
          format: int64
          type: string
        currencyCode:
          description: The currency code for the buyer. This cannot be altered here.
          type: string
        id:
          description: The unique id that describes this item.
          type: string
        kind:
          default: adexchangebuyer#budget
          description: The kind of the resource, i.e. "adexchangebuyer#budget".
          type: string
      type: object
    Buyer:
      properties:
        accountId:
          description: Adx account id of the buyer.
          type: string
      type: object
    ContactInformation:
      properties:
        email:
          description: Email address of the contact.
          type: string
        name:
          description: The name of the contact.
          type: string
      type: object
    CreateOrdersRequest:
      properties:
        proposals:
          description: The list of proposals to create.
          items:
            $ref: "#/components/schemas/Proposal"
          type: array
        webPropertyCode:
          description: Web property id of the seller creating these orders
          type: string
      type: object
    CreateOrdersResponse:
      properties:
        proposals:
          description: The list of proposals successfully created.
          items:
            $ref: "#/components/schemas/Proposal"
          type: array
      type: object
    Creative:
      description: A creative and its classification data.
      properties:
        HTMLSnippet:
          description: The HTML snippet that displays the ad when inserted in the web page. If set, videoURL, videoVastXML, and nativeAd should not be set.
          type: string
        accountId:
          description: Account id.
          format: int32
          type: integer
        adChoicesDestinationUrl:
          description: The link to the Ad Preferences page. This is only supported for native ads.
          type: string
        adTechnologyProviders:
          properties:
            detectedProviderIds:
              description: The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the `BidRequest.adslot.consented_providers_settings.consented_providers` field on the  Authorized Buyers Real-Time Bidding protocol or the `BidRequest.user.ext.consented_providers_settings.consented_providers` field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the "Third-party Ad Technology Vendors" section of Authorized Buyers Program Guidelines.
              items:
                format: int64
                type: string
              type: array
            hasUnidentifiedProvider:
              description: Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the "Third-party Ad Technology Vendors" section of Authorized Buyers Program Guidelines.
              type: boolean
          type: object
        advertiserId:
          description: Detected advertiser id, if any. Read-only. This field should not be set in requests.
          items:
            format: int64
            type: string
          type: array
        advertiserName:
          description: The name of the company being advertised in the creative. A list of advertisers is provided in the advertisers.txt file.
          type: string
        agencyId:
          description: The agency id for this creative.
          format: int64
          type: string
        apiUploadTimestamp:
          description: The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).
          format: date-time
          type: string
        attribute:
          description: List of buyer selectable attributes for the ads that may be shown from this snippet. Each attribute is represented by an integer as defined in  buyer-declarable-creative-attributes.txt.
          items:
            format: int32
            type: integer
          type: array
        buyerCreativeId:
          description: A buyer-specific id identifying the creative in this ad.
          type: string
        clickThroughUrl:
          description: The set of destination urls for the snippet.
          items:
            type: string
          type: array
        corrections:
          description: Shows any corrections that were applied to this creative. Read-only. This field should not be set in requests.
          items:
            properties:
              contexts:
                description: All known serving contexts containing serving status information.
                items:
                  properties:
                    auctionType:
                      description: Only set when contextType=AUCTION_TYPE. Represents the auction types this correction applies to.
                      items:
                        type: string
                      type: array
                    contextType:
                      description: The type of context (e.g., location, platform, auction type, SSL-ness).
                      type: string
                    geoCriteriaId:
                      description: Only set when contextType=LOCATION. Represents the geo criterias this correction applies to.
                      items:
                        format: int32
                        type: integer
                      type: array
                    platform:
                      description: Only set when contextType=PLATFORM. Represents the platforms this correction applies to.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              details:
                description: Additional details about the correction.
                items:
                  type: string
                type: array
              reason:
                description: The type of correction that was applied to the creative.
                type: string
            type: object
          type: array
        creativeStatusIdentityType:
          description: Creative status identity type that the creative item applies to. Ad Exchange real-time bidding is migrating to the sizeless creative verification. Originally, Ad Exchange assigned creative verification status to a unique combination of a buyer creative ID and creative dimensions. Post-migration, a single verification status will be assigned at the buyer creative ID level. This field allows to distinguish whether a given creative status applies to a unique combination of a buyer creative ID and creative dimensions, or to a buyer creative ID as a whole.
          type: string
        dealsStatus:
          description: Top-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly.
          type: string
        detectedDomains:
          description: Detected domains for this creative. Read-only. This field should not be set in requests.
          items:
            type: string
          type: array
        filteringReasons:
          description: The filtering reasons for the creative. Read-only. This field should not be set in requests.
          properties:
            date:
              description: The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.
              type: string
            reasons:
              description: The filtering reasons.
              items:
                properties:
                  filteringCount:
                    description: The number of times the creative was filtered for the status. The count is aggregated across all publishers on the exchange.
                    format: int64
                    type: string
                  filteringStatus:
                    description: The filtering status code as defined in  creative-status-codes.txt.
                    format: int32
                    type: integer
                type: object
              type: array
          type: object
        height:
          description: Ad height.
          format: int32
          type: integer
        impressionTrackingUrl:
          description: The set of urls to be called to record an impression.
          items:
            type: string
          type: array
        kind:
          default: adexchangebuyer#creative
          description: Resource type.
          type: string
        languages:
          description: Detected languages for this creative. Read-only. This field should not be set in requests.
          items:
            type: string
          type: array
        nativeAd:
          description: If nativeAd is set, HTMLSnippet, videoVastXML, and the videoURL outside of nativeAd should not be set. (The videoURL inside nativeAd can be set.)
          properties:
            advertiser:
              type: string
            appIcon:
              description: The app icon, for app download ads.
              properties:
                height:
                  format: int32
                  type: integer
                url:
                  type: string
                width:
                  format: int32
                  type: integer
              type: object
            body:
              description: A long description of the ad.
              type: string
            callToAction:
              description: A label for the button that the user is supposed to click.
              type: string
            clickLinkUrl:
              description: The URL that the browser/SDK will load when the user clicks the ad.
              type: string
            clickTrackingUrl:
              description: The URL to use for click tracking.
              type: string
            headline:
              description: A short title for the ad.
              type: string
            image:
              description: A large image.
              properties:
                height:
                  format: int32
                  type: integer
                url:
                  type: string
                width:
                  format: int32
                  type: integer
              type: object
            impressionTrackingUrl:
              description: The URLs are called when the impression is rendered.
              items:
                type: string
              type: array
            logo:
              description: A smaller image, for the advertiser logo.
              properties:
                height:
                  format: int32
                  type: integer
                url:
                  type: string
                width:
                  format: int32
                  type: integer
              type: object
            price:
              description: The price of the promoted app including the currency info.
              type: string
            starRating:
              description: The app rating in the app store. Must be in the range [0-5].
              format: double
              type: number
            videoURL:
              description: The URL of the XML VAST for a native ad. Note this is a separate field from resource.video_url.
              type: string
          type: object
        openAuctionStatus:
          description: Top-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly.
          type: string
        productCategories:
          description: Detected product categories, if any. Each category is represented by an integer as defined in  ad-product-categories.txt. Read-only. This field should not be set in requests.
          items:
            format: int32
            type: integer
          type: array
        restrictedCategories:
          description: All restricted categories for the ads that may be shown from this snippet. Each category is represented by an integer as defined in the  ad-restricted-categories.txt.
          items:
            format: int32
            type: integer
          type: array
        sensitiveCategories:
          description: Detected sensitive categories, if any. Each category is represented by an integer as defined in  ad-sensitive-categories.txt. Read-only. This field should not be set in requests.
          items:
            format: int32
            type: integer
          type: array
        servingRestrictions:
          description: The granular status of this ad in specific contexts. A context here relates to where something ultimately serves (for example, a physical location, a platform, an HTTPS vs HTTP request, or the type of auction). Read-only. This field should not be set in requests. See the examples in the Creatives guide for more details.
          items:
            properties:
              contexts:
                description: All known contexts/restrictions.
                items:
                  properties:
                    auctionType:
                      description: Only set when contextType=AUCTION_TYPE. Represents the auction types this restriction applies to.
                      items:
                        type: string
                      type: array
                    contextType:
                      description: The type of context (e.g., location, platform, auction type, SSL-ness).
                      type: string
                    geoCriteriaId:
                      description: Only set when contextType=LOCATION. Represents the geo criterias this restriction applies to. Impressions are considered to match a context if either the user location or publisher location matches a given geoCriteriaId.
                      items:
                        format: int32
                        type: integer
                      type: array
                    platform:
                      description: Only set when contextType=PLATFORM. Represents the platforms this restriction applies to.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              disapprovalReasons:
                description: The reasons for disapproval within this restriction, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED or CONDITIONALLY_APPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue.
                items:
                  properties:
                    details:
                      description: Additional details about the reason for disapproval.
                      items:
                        type: string
                      type: array
                    reason:
                      description: The categorized reason for disapproval.
                      type: string
                  type: object
                type: array
              reason:
                description: Why the creative is ineligible to serve in this context (e.g., it has been explicitly disapproved or is pending review).
                type: string
            type: object
          type: array
        vendorType:
          description: List of vendor types for the ads that may be shown from this snippet. Each vendor type is represented by an integer as defined in vendors.txt.
          items:
            format: int32
            type: integer
          type: array
        version:
          description: The version for this creative. Read-only. This field should not be set in requests.
          format: int32
          type: integer
        videoURL:
          description: The URL to fetch a video ad. If set, HTMLSnippet, videoVastXML, and nativeAd should not be set. Note, this is different from resource.native_ad.video_url above.
          type: string
        videoVastXML:
          description: The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. If set, HTMLSnippet, videoURL, and nativeAd and should not be set.
          type: string
        width:
          description: Ad width.
          format: int32
          type: integer
      type: object
    CreativeDealIds:
      description: The external deal ids associated with a creative.
      properties:
        dealStatuses:
          description: A list of external deal ids and ARC approval status.
          items:
            properties:
              arcStatus:
                description: ARC approval status.
                type: string
              dealId:
                description: External deal ID.
                format: int64
                type: string
              webPropertyId:
                description: Publisher ID.
                format: int32
                type: integer
            type: object
          type: array
        kind:
          default: adexchangebuyer#creativeDealIds
          description: Resource type.
          type: string
      type: object
    CreativesList:
      description: The creatives feed lists the active creatives for the Ad Exchange buyer accounts that the user has access to. Each entry in the feed corresponds to a single creative.
      properties:
        items:
          description: A list of creatives.
          items:
            $ref: "#/components/schemas/Creative"
          type: array
        kind:
          default: adexchangebuyer#creativesList
          description: Resource type.
          type: string
        nextPageToken:
          description: Continuation token used to page through creatives. To retrieve the next page of results, set the next request's "pageToken" value to this.
          type: string
      type: object
    DealServingMetadata:
      properties:
        alcoholAdsAllowed:
          description: True if alcohol ads are allowed for this deal (read-only). This field is only populated when querying for finalized orders using the method GetFinalizedOrderDeals
          type: boolean
        dealPauseStatus:
          $ref: "#/components/schemas/DealServingMetadataDealPauseStatus"
          description: Tracks which parties (if any) have paused a deal. (readonly, except via PauseResumeOrderDeals action)
      type: object
    DealServingMetadataDealPauseStatus:
      description: Tracks which parties (if any) have paused a deal. The deal is considered paused if has_buyer_paused || has_seller_paused. Each of the has_buyer_paused or the has_seller_paused bits can be set independently.
      properties:
        buyerPauseReason:
          type: string
        firstPausedBy:
          description: If the deal is paused, records which party paused the deal first.
          type: string
        hasBuyerPaused:
          type: boolean
        hasSellerPaused:
          type: boolean
        sellerPauseReason:
          type: string
      type: object
    DealTerms:
      properties:
        brandingType:
          description: Visibility of the URL in bid requests.
          type: string
        crossListedExternalDealIdType:
          description: Indicates that this ExternalDealId exists under at least two different AdxInventoryDeals. Currently, the only case that the same ExternalDealId will exist is programmatic cross sell case.
          type: string
        description:
          description: Description for the proposed terms of the deal.
          type: string
        estimatedGrossSpend:
          $ref: "#/components/schemas/Price"
          description: Non-binding estimate of the estimated gross spend for this deal Can be set by buyer or seller.
        estimatedImpressionsPerDay:
          description: Non-binding estimate of the impressions served per day Can be set by buyer or seller.
          format: int64
          type: string
        guaranteedFixedPriceTerms:
          $ref: "#/components/schemas/DealTermsGuaranteedFixedPriceTerms"
          description: The terms for guaranteed fixed price deals.
        nonGuaranteedAuctionTerms:
          $ref: "#/components/schemas/DealTermsNonGuaranteedAuctionTerms"
          description: The terms for non-guaranteed auction deals.
        nonGuaranteedFixedPriceTerms:
          $ref: "#/components/schemas/DealTermsNonGuaranteedFixedPriceTerms"
          description: The terms for non-guaranteed fixed price deals.
        rubiconNonGuaranteedTerms:
          $ref: "#/components/schemas/DealTermsRubiconNonGuaranteedTerms"
          description: The terms for rubicon non-guaranteed deals.
        sellerTimeZone:
          description: For deals with Cost Per Day billing, defines the timezone used to mark the boundaries of a day (buyer-readonly)
          type: string
      type: object
    DealTermsGuaranteedFixedPriceTerms:
      properties:
        billingInfo:
          $ref: "#/components/schemas/DealTermsGuaranteedFixedPriceTermsBillingInfo"
          description: External billing info for this Deal. This field is relevant when external billing info such as price has a different currency code than DFP/AdX.
        fixedPrices:
          description: Fixed price for the specified buyer.
          items:
            $ref: "#/components/schemas/PricePerBuyer"
          type: array
        guaranteedImpressions:
          description: Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.
          format: int64
          type: string
        guaranteedLooks:
          description: Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.
          format: int64
          type: string
        minimumDailyLooks:
          description: Count of minimum daily looks for a CPD deal. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.
          format: int64
          type: string
      type: object
    DealTermsGuaranteedFixedPriceTermsBillingInfo:
      properties:
        currencyConversionTimeMs:
          description: The timestamp (in ms since epoch) when the original reservation price for the deal was first converted to DFP currency. This is used to convert the contracted price into buyer's currency without discrepancy.
          format: int64
          type: string
        dfpLineItemId:
          description: The DFP line item id associated with this deal. For features like CPD, buyers can retrieve the DFP line item for billing reconciliation.
          format: int64
          type: string
        originalContractedQuantity:
          description: The original contracted quantity (# impressions) for this deal. To ensure delivery, sometimes the publisher will book the deal with a impression buffer, such that guaranteed_looks is greater than the contracted quantity. However clients are billed using the original contracted quantity.
          format: int64
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: The original reservation price for the deal, if the currency code is different from the one used in negotiation.
      type: object
    DealTermsNonGuaranteedAuctionTerms:
      properties:
        autoOptimizePrivateAuction:
          description: True if open auction buyers are allowed to compete with invited buyers in this private auction (buyer-readonly).
          type: boolean
        reservePricePerBuyers:
          description: Reserve price for the specified buyer.
          items:
            $ref: "#/components/schemas/PricePerBuyer"
          type: array
      type: object
    DealTermsNonGuaranteedFixedPriceTerms:
      properties:
        fixedPrices:
          description: Fixed price for the specified buyer.
          items:
            $ref: "#/components/schemas/PricePerBuyer"
          type: array
      type: object
    DealTermsRubiconNonGuaranteedTerms:
      properties:
        priorityPrice:
          $ref: "#/components/schemas/Price"
          description: Optional price for Rubicon priority access in the auction.
        standardPrice:
          $ref: "#/components/schemas/Price"
          description: Optional price for Rubicon standard access in the auction.
      type: object
    DeleteOrderDealsRequest:
      properties:
        dealIds:
          description: List of deals to delete for a given proposal
          items:
            type: string
          type: array
        proposalRevisionNumber:
          description: The last known proposal revision number.
          format: int64
          type: string
        updateAction:
          description: Indicates an optional action to take on the proposal
          type: string
      type: object
    DeleteOrderDealsResponse:
      properties:
        deals:
          description: List of deals deleted (in the same proposal as passed in the request)
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
        proposalRevisionNumber:
          description: The updated revision number for the proposal.
          format: int64
          type: string
      type: object
    DeliveryControl:
      properties:
        creativeBlockingLevel:
          type: string
        deliveryRateType:
          type: string
        frequencyCaps:
          items:
            $ref: "#/components/schemas/DeliveryControlFrequencyCap"
          type: array
      type: object
    DeliveryControlFrequencyCap:
      properties:
        maxImpressions:
          format: int32
          type: integer
        numTimeUnits:
          format: int32
          type: integer
        timeUnitType:
          type: string
      type: object
    Dimension:
      description: "This message carries publisher provided breakdown. E.g. {dimension_type: 'COUNTRY', [{dimension_value: {id: 1, name: 'US'}}, {dimension_value: {id: 2, name: 'UK'}}]}"
      properties:
        dimensionType:
          type: string
        dimensionValues:
          items:
            $ref: "#/components/schemas/DimensionDimensionValue"
          type: array
      type: object
    DimensionDimensionValue:
      description: Value of the dimension.
      properties:
        id:
          description: Id of the dimension.
          format: int32
          type: integer
        name:
          description: Name of the dimension mainly for debugging purposes, except for the case of CREATIVE_SIZE. For CREATIVE_SIZE, strings are used instead of ids.
          type: string
        percentage:
          description: "Percent of total impressions for a dimension type. e.g. {dimension_type: 'GENDER', [{dimension_value: {id: 1, name: 'MALE', percentage: 60}}]} Gender MALE is 60% of all impressions which have gender."
          format: int32
          type: integer
      type: object
    EditAllOrderDealsRequest:
      properties:
        deals:
          description: "List of deals to edit. Service may perform 3 different operations based on comparison of deals in this list vs deals already persisted in database: 1. Add new deal to proposal If a deal in this list does not exist in the proposal, the service will create a new deal and add it to the proposal. Validation will follow AddOrderDealsRequest. 2. Update existing deal in the proposal If a deal in this list already exist in the proposal, the service will update that existing deal to this new deal in the request. Validation will follow UpdateOrderDealsRequest. 3. Delete deals from the proposal (just need the id) If a existing deal in the proposal is not present in this list, the service will delete that deal from the proposal. Validation will follow DeleteOrderDealsRequest."
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
        proposal:
          $ref: "#/components/schemas/Proposal"
          description: If specified, also updates the proposal in the batch transaction. This is useful when the proposal and the deals need to be updated in one transaction.
        proposalRevisionNumber:
          description: The last known revision number for the proposal.
          format: int64
          type: string
        updateAction:
          description: Indicates an optional action to take on the proposal
          type: string
      type: object
    EditAllOrderDealsResponse:
      properties:
        deals:
          description: List of all deals in the proposal after edit.
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
        orderRevisionNumber:
          description: The latest revision number after the update has been applied.
          format: int64
          type: string
      type: object
    GetOffersResponse:
      properties:
        products:
          description: The returned list of products.
          items:
            $ref: "#/components/schemas/Product"
          type: array
      type: object
    GetOrderDealsResponse:
      properties:
        deals:
          description: List of deals for the proposal
          items:
            $ref: "#/components/schemas/MarketplaceDeal"
          type: array
      type: object
    GetOrderNotesResponse:
      properties:
        notes:
          description: The list of matching notes. The notes for a proposal are ordered from oldest to newest. If the notes span multiple proposals, they will be grouped by proposal, with the notes for the most recently modified proposal appearing first.
          items:
            $ref: "#/components/schemas/MarketplaceNote"
          type: array
      type: object
    GetOrdersResponse:
      properties:
        proposals:
          description: The list of matching proposals.
          items:
            $ref: "#/components/schemas/Proposal"
          type: array
      type: object
    GetPublisherProfilesByAccountIdResponse:
      properties:
        profiles:
          description: Profiles for the requested publisher
          items:
            $ref: "#/components/schemas/PublisherProfileApiProto"
          type: array
      type: object
    MarketplaceDeal:
      description: A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.
      properties:
        buyerPrivateData:
          $ref: "#/components/schemas/PrivateData"
          description: Buyer private data (hidden from seller).
        creationTimeMs:
          description: The time (ms since epoch) of the deal creation. (readonly)
          format: int64
          type: string
        creativePreApprovalPolicy:
          description: Specifies the creative pre-approval policy (buyer-readonly)
          type: string
        creativeSafeFrameCompatibility:
          description: Specifies whether the creative is safeFrame compatible (buyer-readonly)
          type: string
        dealId:
          description: A unique deal-id for the deal (readonly).
          type: string
        dealServingMetadata:
          $ref: "#/components/schemas/DealServingMetadata"
          description: Metadata about the serving status of this deal (readonly, writes via custom actions)
        deliveryControl:
          $ref: "#/components/schemas/DeliveryControl"
          description: The set of fields around delivery control that are interesting for a buyer to see but are non-negotiable. These are set by the publisher. This message is assigned an id of 100 since some day we would want to model this as a protobuf extension.
        externalDealId:
          description: The external deal id assigned to this deal once the deal is finalized. This is the deal-id that shows up in serving/reporting etc. (readonly)
          type: string
        flightEndTimeMs:
          description: Proposed flight end time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
          format: int64
          type: string
        flightStartTimeMs:
          description: Proposed flight start time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
          format: int64
          type: string
        inventoryDescription:
          description: Description for the deal terms. (buyer-readonly)
          type: string
        isRfpTemplate:
          description: Indicates whether the current deal is a RFP template. RFP template is created by buyer and not based on seller created products.
          type: boolean
        isSetupComplete:
          description: True, if the buyside inventory setup is complete for this deal. (readonly, except via OrderSetupCompleted action)
          type: boolean
        kind:
          default: adexchangebuyer#marketplaceDeal
          description: 'Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#marketplaceDeal".'
          type: string
        lastUpdateTimeMs:
          description: The time (ms since epoch) when the deal was last updated. (readonly)
          format: int64
          type: string
        makegoodRequestedReason:
          type: string
        name:
          description: The name of the deal. (updatable)
          type: string
        productId:
          description: The product-id from which this deal was created. (readonly, except on create)
          type: string
        productRevisionNumber:
          description: The revision number of the product that the deal was created from (readonly, except on create)
          format: int64
          type: string
        programmaticCreativeSource:
          description: Specifies the creative source for programmatic deals, PUBLISHER means creative is provided by seller and ADVERTISR means creative is provided by buyer. (buyer-readonly)
          type: string
        proposalId:
          type: string
        sellerContacts:
          description: Optional Seller contact information for the deal (buyer-readonly)
          items:
            $ref: "#/components/schemas/ContactInformation"
          type: array
        sharedTargetings:
          description: The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together. (updatable)
          items:
            $ref: "#/components/schemas/SharedTargeting"
          type: array
        syndicationProduct:
          description: The syndication product associated with the deal. (readonly, except on create)
          type: string
        terms:
          $ref: "#/components/schemas/DealTerms"
          description: The negotiable terms of the deal. (updatable)
        webPropertyCode:
          type: string
      type: object
    MarketplaceDealParty:
      properties:
        buyer:
          $ref: "#/components/schemas/Buyer"
          description: The buyer/seller associated with the deal. One of buyer/seller is specified for a deal-party.
        seller:
          $ref: "#/components/schemas/Seller"
          description: The buyer/seller associated with the deal. One of buyer/seller is specified for a deal party.
      type: object
    MarketplaceLabel:
      properties:
        accountId:
          description: The accountId of the party that created the label.
          type: string
        createTimeMs:
          description: The creation time (in ms since epoch) for the label.
          format: int64
          type: string
        deprecatedMarketplaceDealParty:
          $ref: "#/components/schemas/MarketplaceDealParty"
          description: Information about the party that created the label.
        label:
          description: The label to use.
          type: string
      type: object
    MarketplaceNote:
      description: A proposal is associated with a bunch of notes which may optionally be associated with a deal and/or revision number.
      properties:
        creatorRole:
          description: The role of the person (buyer/seller) creating the note. (readonly)
          type: string
        dealId:
          description: Notes can optionally be associated with a deal. (readonly, except on create)
          type: string
        kind:
          default: adexchangebuyer#marketplaceNote
          description: 'Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#marketplaceNote".'
          type: string
        note:
          description: The actual note to attach. (readonly, except on create)
          type: string
        noteId:
          description: The unique id for the note. (readonly)
          type: string
        proposalId:
          description: The proposalId that a note is attached to. (readonly)
          type: string
        proposalRevisionNumber:
          description: If the note is associated with a proposal revision number, then store that here. (readonly, except on create)
          format: int64
          type: string
        timestampMs:
          description: The timestamp (ms since epoch) that this note was created. (readonly)
          format: int64
          type: string
      type: object
    MobileApplication:
      properties:
        appStore:
          type: string
        externalAppId:
          type: string
      type: object
    PerformanceReport:
      description: The configuration data for an Ad Exchange performance report list.
      properties:
        bidRate:
          description: The number of bid responses with an ad.
          format: double
          type: number
        bidRequestRate:
          description: The number of bid requests sent to your bidder.
          format: double
          type: number
        calloutStatusRate:
          description: Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.
          items: {}
          type: array
        cookieMatcherStatusRate:
          description: Average QPS for cookie matcher operations.
          items: {}
          type: array
        creativeStatusRate:
          description: Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.
          items: {}
          type: array
        filteredBidRate:
          description: The number of bid responses that were filtered due to a policy violation or other errors.
          format: double
          type: number
        hostedMatchStatusRate:
          description: Average QPS for hosted match operations.
          items: {}
          type: array
        inventoryMatchRate:
          description: The number of potential queries based on your pretargeting settings.
          format: double
          type: number
        kind:
          default: adexchangebuyer#performanceReport
          description: Resource type.
          type: string
        latency50thPercentile:
          description: The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
          format: double
          type: number
        latency85thPercentile:
          description: The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
          format: double
          type: number
        latency95thPercentile:
          description: The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
          format: double
          type: number
        noQuotaInRegion:
          description: Rate of various quota account statuses per quota check.
          format: double
          type: number
        outOfQuota:
          description: Rate of various quota account statuses per quota check.
          format: double
          type: number
        pixelMatchRequests:
          description: Average QPS for pixel match requests from clients.
          format: double
          type: number
        pixelMatchResponses:
          description: Average QPS for pixel match responses from clients.
          format: double
          type: number
        quotaConfiguredLimit:
          description: The configured quota limits for this account.
          format: double
          type: number
        quotaThrottledLimit:
          description: The throttled quota limits for this account.
          format: double
          type: number
        region:
          description: The trading location of this data.
          type: string
        successfulRequestRate:
          description: The number of properly formed bid responses received by our servers within the deadline.
          format: double
          type: number
        timestamp:
          description: The unix timestamp of the starting time of this performance data.
          format: int64
          type: string
        unsuccessfulRequestRate:
          description: The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.
          format: double
          type: number
      type: object
    PerformanceReportList:
      description: The configuration data for an Ad Exchange performance report list.
      properties:
        kind:
          default: adexchangebuyer#performanceReportList
          description: Resource type.
          type: string
        performanceReport:
          description: A list of performance reports relevant for the account.
          items:
            $ref: "#/components/schemas/PerformanceReport"
          type: array
      type: object
    PretargetingConfig:
      properties:
        billingId:
          description: The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
          format: int64
          type: string
        configId:
          description: The config id; generated automatically. Leave this field blank for insert requests.
          format: int64
          type: string
        configName:
          description: The name of the config. Must be unique. Required for all requests.
          type: string
        creativeType:
          description: List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
          items:
            type: string
          type: array
        dimensions:
          description: Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
          items:
            properties:
              height:
                description: Height in pixels.
                format: int64
                type: string
              width:
                description: Width in pixels.
                format: int64
                type: string
            type: object
          type: array
        excludedContentLabels:
          description: Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        excludedGeoCriteriaIds:
          description: Requests containing any of these geo criteria ids will not match.
          items:
            format: int64
            type: string
          type: array
        excludedPlacements:
          description: Requests containing any of these placements will not match.
          items:
            properties:
              token:
                description: The value of the placement. Interpretation depends on the placement type, e.g. URL for a site placement, channel name for a channel placement, app id for a mobile app placement.
                type: string
              type:
                description: The type of the placement.
                type: string
            type: object
          type: array
        excludedUserLists:
          description: Requests containing any of these users list ids will not match.
          items:
            format: int64
            type: string
          type: array
        excludedVerticals:
          description: Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        geoCriteriaIds:
          description: Requests containing any of these geo criteria ids will match.
          items:
            format: int64
            type: string
          type: array
        isActive:
          description: Whether this config is active. Required for all requests.
          type: boolean
        kind:
          default: adexchangebuyer#pretargetingConfig
          description: The kind of the resource, i.e. "adexchangebuyer#pretargetingConfig".
          type: string
        languages:
          description: Request containing any of these language codes will match.
          items:
            type: string
          type: array
        maximumQps:
          description: The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed).
          format: int64
          type: string
        minimumViewabilityDecile:
          description: Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored.
          format: int32
          type: integer
        mobileCarriers:
          description: Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        mobileDevices:
          description: Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        mobileOperatingSystemVersions:
          description: Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        placements:
          description: Requests containing any of these placements will match.
          items:
            properties:
              token:
                description: The value of the placement. Interpretation depends on the placement type, e.g. URL for a site placement, channel name for a channel placement, app id for a mobile app placement.
                type: string
              type:
                description: The type of the placement.
                type: string
            type: object
          type: array
        platforms:
          description: Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
          items:
            type: string
          type: array
        supportedCreativeAttributes:
          description: Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        userIdentifierDataRequired:
          description: Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA.
          items:
            type: string
          type: array
        userLists:
          description: Requests containing any of these user list ids will match.
          items:
            format: int64
            type: string
          type: array
        vendorTypes:
          description: Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
          items:
            format: int64
            type: string
          type: array
        verticals:
          description: Requests containing any of these vertical ids will match.
          items:
            format: int64
            type: string
          type: array
        videoPlayerSizes:
          description: Video requests satisfying any of these player size constraints will match.
          items:
            properties:
              aspectRatio:
                description: The type of aspect ratio. Leave this field blank to match all aspect ratios.
                type: string
              minHeight:
                description: The minimum player height in pixels. Leave this field blank to match any player height.
                format: int64
                type: string
              minWidth:
                description: The minimum player width in pixels. Leave this field blank to match any player width.
                format: int64
                type: string
            type: object
          type: array
      type: object
    PretargetingConfigList:
      properties:
        items:
          description: A list of pretargeting configs
          items:
            $ref: "#/components/schemas/PretargetingConfig"
          type: array
        kind:
          default: adexchangebuyer#pretargetingConfigList
          description: Resource type.
          type: string
      type: object
    Price:
      properties:
        amountMicros:
          description: The price value in micros.
          format: double
          type: number
        currencyCode:
          description: The currency code for the price.
          type: string
        expectedCpmMicros:
          description: In case of CPD deals, the expected CPM in micros.
          format: double
          type: number
        pricingType:
          description: The pricing type for the deal/product.
          type: string
      type: object
    PricePerBuyer:
      description: Used to specify pricing rules for buyers. Each PricePerBuyer in a product can become [0,1] deals. To check if there is a PricePerBuyer for a particular buyer we look for the most specific matching rule - we first look for a rule matching the buyer and otherwise look for a matching rule where no buyer is set.
      properties:
        auctionTier:
          description: Optional access type for this buyer.
          type: string
        billedBuyer:
          $ref: "#/components/schemas/Buyer"
          description: Reference to the buyer that will get billed.
        buyer:
          $ref: "#/components/schemas/Buyer"
          description: The buyer who will pay this price. If unset, all buyers can pay this price (if the advertisers match, and there's no more specific rule matching the buyer).
        price:
          $ref: "#/components/schemas/Price"
          description: The specified price
      type: object
    PrivateData:
      properties:
        referenceId:
          type: string
        referencePayload:
          format: byte
          type: string
      type: object
    Product:
      description: |-
        A product is segment of inventory that a seller wishes to sell. It is associated with certain terms and targeting information which helps buyer know more about the inventory. Each field in a product can have one of the following setting:

        (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
      properties:
        billedBuyer:
          $ref: "#/components/schemas/Buyer"
          description: The billed buyer corresponding to the buyer that created the offer. (readonly, except on create)
        buyer:
          $ref: "#/components/schemas/Buyer"
          description: The buyer that created the offer if this is a buyer initiated offer (readonly, except on create)
        creationTimeMs:
          description: Creation time in ms. since epoch (readonly)
          format: int64
          type: string
        creatorContacts:
          description: Optional contact information for the creator of this product. (buyer-readonly)
          items:
            $ref: "#/components/schemas/ContactInformation"
          type: array
        creatorRole:
          description: The role that created the offer. Set to BUYER for buyer initiated offers.
          type: string
        deliveryControl:
          $ref: "#/components/schemas/DeliveryControl"
          description: The set of fields around delivery control that are interesting for a buyer to see but are non-negotiable. These are set by the publisher. This message is assigned an id of 100 since some day we would want to model this as a protobuf extension.
        flightEndTimeMs:
          description: The proposed end time for the deal (ms since epoch) (buyer-readonly)
          format: int64
          type: string
        flightStartTimeMs:
          description: Inventory availability dates. (times are in ms since epoch) The granularity is generally in the order of seconds. (buyer-readonly)
          format: int64
          type: string
        hasCreatorSignedOff:
          description: If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
          type: boolean
        inventorySource:
          description: What exchange will provide this inventory (readonly, except on create).
          type: string
        kind:
          default: adexchangebuyer#product
          description: 'Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#product".'
          type: string
        labels:
          description: Optional List of labels for the product (optional, buyer-readonly).
          items:
            $ref: "#/components/schemas/MarketplaceLabel"
          type: array
        lastUpdateTimeMs:
          description: Time of last update in ms. since epoch (readonly)
          format: int64
          type: string
        legacyOfferId:
          description: Optional legacy offer id if this offer is a preferred deal offer.
          type: string
        marketplacePublisherProfileId:
          description: Marketplace publisher profile Id. This Id differs from the regular publisher_profile_id in that 1. This is a new id, the old Id will be deprecated in 2017. 2. This id uniquely identifies a publisher profile by itself.
          type: string
        name:
          description: The name for this product as set by the seller. (buyer-readonly)
          type: string
        privateAuctionId:
          description: Optional private auction id if this offer is a private auction offer.
          type: string
        productId:
          description: The unique id for the product (readonly)
          type: string
        publisherProfileId:
          description: Id of the publisher profile for a given seller. A (seller.account_id, publisher_profile_id) pair uniquely identifies a publisher profile. Buyers can call the PublisherProfiles::List endpoint to get a list of publisher profiles for a given seller.
          type: string
        publisherProvidedForecast:
          $ref: "#/components/schemas/PublisherProvidedForecast"
          description: Publisher self-provided forecast information.
        revisionNumber:
          description: The revision number of the product. (readonly)
          format: int64
          type: string
        seller:
          $ref: "#/components/schemas/Seller"
          description: Information about the seller that created this product (readonly, except on create)
        sharedTargetings:
          description: Targeting that is shared between the buyer and the seller. Each targeting criteria has a specified key and for each key there is a list of inclusion value or exclusion values. (buyer-readonly)
          items:
            $ref: "#/components/schemas/SharedTargeting"
          type: array
        state:
          description: The state of the product. (buyer-readonly)
          type: string
        syndicationProduct:
          description: The syndication product associated with the deal. (readonly, except on create)
          type: string
        terms:
          $ref: "#/components/schemas/DealTerms"
          description: The negotiable terms of the deal (buyer-readonly)
        webPropertyCode:
          description: The web property code for the seller. This field is meant to be copied over as is when creating deals.
          type: string
      type: object
    Proposal:
      description: |-
        Represents a proposal in the marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Each field in a proposal can have one of the following setting:

        (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
      properties:
        billedBuyer:
          $ref: "#/components/schemas/Buyer"
          description: Reference to the buyer that will get billed for this proposal. (readonly)
        buyer:
          $ref: "#/components/schemas/Buyer"
          description: Reference to the buyer on the proposal. (readonly, except on create)
        buyerContacts:
          description: Optional contact information of the buyer. (seller-readonly)
          items:
            $ref: "#/components/schemas/ContactInformation"
          type: array
        buyerPrivateData:
          $ref: "#/components/schemas/PrivateData"
          description: Private data for buyer. (hidden from seller).
        dbmAdvertiserIds:
          description: IDs of DBM advertisers permission to this proposal.
          items:
            type: string
          type: array
        hasBuyerSignedOff:
          description: When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)
          type: boolean
        hasSellerSignedOff:
          description: When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)
          type: boolean
        inventorySource:
          description: What exchange will provide this inventory (readonly, except on create).
          type: string
        isRenegotiating:
          description: True if the proposal is being renegotiated (readonly).
          type: boolean
        isSetupComplete:
          description: True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag.
          type: boolean
        kind:
          default: adexchangebuyer#proposal
          description: 'Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#proposal".'
          type: string
        labels:
          description: List of labels associated with the proposal. (readonly)
          items:
            $ref: "#/components/schemas/MarketplaceLabel"
          type: array
        lastUpdaterOrCommentorRole:
          description: The role of the last user that either updated the proposal or left a comment. (readonly)
          type: string
        name:
          description: The name for the proposal (updatable)
          type: string
        negotiationId:
          description: Optional negotiation id if this proposal is a preferred deal proposal.
          type: string
        originatorRole:
          description: Indicates whether the buyer/seller created the proposal.(readonly)
          type: string
        privateAuctionId:
          description: Optional private auction id if this proposal is a private auction proposal.
          type: string
        proposalId:
          description: The unique id of the proposal. (readonly).
          type: string
        proposalState:
          description: The current state of the proposal. (readonly)
          type: string
        revisionNumber:
          description: The revision number for the proposal (readonly).
          format: int64
          type: string
        revisionTimeMs:
          description: The time (ms since epoch) when the proposal was last revised (readonly).
          format: int64
          type: string
        seller:
          $ref: "#/components/schemas/Seller"
          description: Reference to the seller on the proposal. (readonly, except on create)
        sellerContacts:
          description: Optional contact information of the seller (buyer-readonly).
          items:
            $ref: "#/components/schemas/ContactInformation"
          type: array
      type: object
    PublisherProfileApiProto:
      properties:
        audience:
          description: Publisher provided info on its audience.
          type: string
        buyerPitchStatement:
          description: A pitch statement for the buyer
          type: string
        directContact:
          description: Direct contact for the publisher profile.
          type: string
        exchange:
          description: Exchange where this publisher profile is from. E.g. AdX, Rubicon etc...
          type: string
        forecastInventory:
          type: string
        googlePlusLink:
          description: Link to publisher's Google+ page.
          type: string
        isParent:
          description: True, if this is the parent profile, which represents all domains owned by the publisher.
          type: boolean
        isPublished:
          description: True, if this profile is published. Deprecated for state.
          type: boolean
        kind:
          default: adexchangebuyer#publisherProfileApiProto
          description: 'Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#publisherProfileApiProto".'
          type: string
        logoUrl:
          description: The url to the logo for the publisher.
          type: string
        mediaKitLink:
          description: The url for additional marketing and sales materials.
          type: string
        name:
          type: string
        overview:
          description: Publisher provided overview.
          type: string
        profileId:
          description: The pair of (seller.account_id, profile_id) uniquely identifies a publisher profile for a given publisher.
          format: int32
          type: integer
        programmaticContact:
          description: Programmatic contact for the publisher profile.
          type: string
        publisherAppIds:
          description: The list of app IDs represented in this publisher profile. Empty if this is a parent profile. Deprecated in favor of publisher_app.
          items:
            format: int64
            type: string
          type: array
        publisherApps:
          description: The list of apps represented in this publisher profile. Empty if this is a parent profile.
          items:
            $ref: "#/components/schemas/MobileApplication"
          type: array
        publisherDomains:
          description: The list of domains represented in this publisher profile. Empty if this is a parent profile.
          items:
            type: string
          type: array
        publisherProfileId:
          description: Unique Id for publisher profile.
          type: string
        publisherProvidedForecast:
          $ref: "#/components/schemas/PublisherProvidedForecast"
          description: Publisher provided forecasting information.
        rateCardInfoLink:
          description: Link to publisher rate card
          type: string
        samplePageLink:
          description: Link for a sample content page.
          type: string
        seller:
          $ref: "#/components/schemas/Seller"
          description: Seller of the publisher profile.
        state:
          description: State of the publisher profile.
          type: string
        topHeadlines:
          description: Publisher provided key metrics and rankings.
          items:
            type: string
          type: array
      type: object
    PublisherProvidedForecast:
      description: This message carries publisher provided forecasting information.
      properties:
        dimensions:
          description: Publisher provided dimensions. E.g. geo, sizes etc...
          items:
            $ref: "#/components/schemas/Dimension"
          type: array
        weeklyImpressions:
          description: Publisher provided weekly impressions.
          format: int64
          type: string
        weeklyUniques:
          description: Publisher provided weekly uniques.
          format: int64
          type: string
      type: object
    Seller:
      properties:
        accountId:
          description: The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.
          type: string
        subAccountId:
          description: Optional sub-account id for the seller.
          type: string
      type: object
    SharedTargeting:
      properties:
        exclusions:
          description: The list of values to exclude from targeting. Each value is AND'd together.
          items:
            $ref: "#/components/schemas/TargetingValue"
          type: array
        inclusions:
          description: The list of value to include as part of the targeting. Each value is OR'd together.
          items:
            $ref: "#/components/schemas/TargetingValue"
          type: array
        key:
          description: The key representing the shared targeting criterion.
          type: string
      type: object
    TargetingValue:
      properties:
        creativeSizeValue:
          $ref: "#/components/schemas/TargetingValueCreativeSize"
          description: The creative size value to exclude/include.
        dayPartTargetingValue:
          $ref: "#/components/schemas/TargetingValueDayPartTargeting"
          description: The daypart targeting to include / exclude. Filled in when the key is GOOG_DAYPART_TARGETING.
        demogAgeCriteriaValue:
          $ref: "#/components/schemas/TargetingValueDemogAgeCriteria"
        demogGenderCriteriaValue:
          $ref: "#/components/schemas/TargetingValueDemogGenderCriteria"
        longValue:
          description: The long value to exclude/include.
          format: int64
          type: string
        requestPlatformTargetingValue:
          $ref: "#/components/schemas/TargetingValueRequestPlatformTargeting"
        stringValue:
          description: The string value to exclude/include.
          type: string
      type: object
    TargetingValueCreativeSize:
      description: "Next Id: 7"
      properties:
        allowedFormats:
          description: The formats allowed by the publisher.
          items:
            type: string
          type: array
        companionSizes:
          description: For video size type, the list of companion sizes.
          items:
            $ref: "#/components/schemas/TargetingValueSize"
          type: array
        creativeSizeType:
          description: The Creative size type.
          type: string
        nativeTemplate:
          description: The native template for native ad.
          type: string
        size:
          $ref: "#/components/schemas/TargetingValueSize"
          description: For regular or video creative size type, specifies the size of the creative.
        skippableAdType:
          description: The skippable ad type for video size.
          type: string
      type: object
    TargetingValueDayPartTargeting:
      properties:
        dayParts:
          items:
            $ref: "#/components/schemas/TargetingValueDayPartTargetingDayPart"
          type: array
        timeZoneType:
          type: string
      type: object
    TargetingValueDayPartTargetingDayPart:
      properties:
        dayOfWeek:
          type: string
        endHour:
          format: int32
          type: integer
        endMinute:
          format: int32
          type: integer
        startHour:
          format: int32
          type: integer
        startMinute:
          format: int32
          type: integer
      type: object
    TargetingValueDemogAgeCriteria:
      properties:
        demogAgeCriteriaIds:
          items:
            type: string
          type: array
      type: object
    TargetingValueDemogGenderCriteria:
      properties:
        demogGenderCriteriaIds:
          items:
            type: string
          type: array
      type: object
    TargetingValueRequestPlatformTargeting:
      properties:
        requestPlatforms:
          items:
            type: string
          type: array
      type: object
    TargetingValueSize:
      properties:
        height:
          description: The height of the creative.
          format: int32
          type: integer
        width:
          description: The width of the creative.
          format: int32
          type: integer
      type: object
    UpdatePrivateAuctionProposalRequest:
      properties:
        externalDealId:
          description: The externalDealId of the deal to be updated.
          type: string
        note:
          $ref: "#/components/schemas/MarketplaceNote"
          description: Optional note to be added.
        proposalRevisionNumber:
          description: The current revision number of the proposal to be updated.
          format: int64
          type: string
        updateAction:
          description: The proposed action on the private auction proposal.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/adexchange.buyer: Manage your Ad Exchange buyer account configuration
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/adexchange.buyer: Manage your Ad Exchange buyer account configuration
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
