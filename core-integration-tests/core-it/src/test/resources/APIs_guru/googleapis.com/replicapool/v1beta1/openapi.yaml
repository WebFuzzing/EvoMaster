openapi: 3.0.0
servers:
  - url: https://www.googleapis.com/replicapool/v1beta1/projects
info:
  contact:
    name: Google
    url: https://google.com
  description: The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Replica Pool
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - backend
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/replicapool/v1beta1/rest
      version: v1
  x-providerName: googleapis.com
  x-serviceName: replicapool
externalDocs:
  url: https://developers.google.com/compute/docs/replica-pool/
tags:
  - name: pools
  - name: replicas
paths:
  "/{projectName}/zones/{zone}/pools":
    get:
      description: List all replica pools.
      operationId: replicapool.pools.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: "Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default: 50)"
          in: query
          name: maxResults
          schema:
            default: 500
            maximum: 1000
            minimum: 0
            type: integer
        - description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PoolsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool.readonly
      tags:
        - pools
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Inserts a new replica pool.
      operationId: replicapool.pools.insert
      parameters:
        - description: The project ID for this replica pool.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pool"
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Pool"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - pools
  "/{projectName}/zones/{zone}/pools/{poolName}":
    get:
      description: Gets information about a single replica pool.
      operationId: replicapool.pools.get
      parameters:
        - description: The project ID for this replica pool.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The name of the replica pool for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Pool"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool.readonly
      tags:
        - pools
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes a replica pool.
      operationId: replicapool.pools.delete
      parameters:
        - description: The project ID for this replica pool.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The name of the replica pool for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PoolsDeleteRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - pools
  "/{projectName}/zones/{zone}/pools/{poolName}/replicas":
    get:
      description: Lists all replicas in a pool.
      operationId: replicapool.replicas.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone where the replica pool lives.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The replica pool name for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
        - description: "Maximum count of results to be returned. Acceptable values are 0 to 100, inclusive. (Default: 50)"
          in: query
          name: maxResults
          schema:
            default: 500
            maximum: 1000
            minimum: 0
            type: integer
        - description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReplicasListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool.readonly
      tags:
        - replicas
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{projectName}/zones/{zone}/pools/{poolName}/replicas/{replicaName}":
    get:
      description: Gets information about a specific replica.
      operationId: replicapool.replicas.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone where the replica lives.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The replica pool name for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
        - description: The name of the replica for this request.
          in: path
          name: replicaName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Replica"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool.readonly
      tags:
        - replicas
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes a replica from the pool.
      operationId: replicapool.replicas.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone where the replica lives.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The replica pool name for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
        - description: The name of the replica for this request.
          in: path
          name: replicaName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplicasDeleteRequest"
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Replica"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - replicas
  "/{projectName}/zones/{zone}/pools/{poolName}/replicas/{replicaName}/restart":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Restarts a replica in a pool.
      operationId: replicapool.replicas.restart
      parameters:
        - description: The project ID for this request.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone where the replica lives.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The replica pool name for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
        - description: The name of the replica for this request.
          in: path
          name: replicaName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Replica"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - replicas
  "/{projectName}/zones/{zone}/pools/{poolName}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Resize a pool. This is an asynchronous operation, and multiple overlapping resize requests can be made. Replica Pools will use the information from the last resize request.
      operationId: replicapool.pools.resize
      parameters:
        - description: The project ID for this replica pool.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The name of the replica pool for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
        - description: The desired number of replicas to resize to. If this number is larger than the existing number of replicas, new replicas will be added. If the number is smaller, then existing replicas will be deleted.
          in: query
          name: numReplicas
          schema:
            type: integer
      responses:
        "200":
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Pool"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - pools
  "/{projectName}/zones/{zone}/pools/{poolName}/updateTemplate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Update the template used by the pool.
      operationId: replicapool.pools.updatetemplate
      parameters:
        - description: The project ID for this replica pool.
          in: path
          name: projectName
          required: true
          schema:
            type: string
        - description: The zone for this replica pool.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The name of the replica pool for this request.
          in: path
          name: poolName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Template"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/replicapool
          Oauth2c:
            - https://www.googleapis.com/auth/replicapool
      tags:
        - pools
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  schemas:
    AccessConfig:
      description: A Compute Engine network accessConfig. Identical to the accessConfig on corresponding Compute Engine resource.
      properties:
        name:
          description: Name of this access configuration.
          type: string
        natIp:
          description: An external IP address associated with this instance.
          type: string
        type:
          description: Type of this access configuration file. Currently only ONE_TO_ONE_NAT is supported.
          type: string
      type: object
    Action:
      description: An action that gets executed during initialization of the replicas.
      properties:
        commands:
          description: A list of commands to run, one per line. If any command fails, the whole action is considered a failure and no further actions are run. This also marks the virtual machine or replica as a failure.
          items:
            type: string
          type: array
        envVariables:
          description: A list of environment variables to use for the commands in this action.
          items:
            $ref: "#/components/schemas/EnvVariable"
          type: array
        timeoutMilliSeconds:
          description: If an action's commands on a particular replica do not finish in the specified timeoutMilliSeconds, the replica is considered to be in a FAILING state. No efforts are made to stop any processes that were spawned or created as the result of running the action's commands. The default is the max allowed value, 1 hour (i.e. 3600000 milliseconds).
          format: int32
          type: integer
      type: object
    DiskAttachment:
      description: Specifies how to attach a disk to a Replica.
      properties:
        deviceName:
          description: The device name of this disk.
          type: string
        index:
          description: A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, this is assigned by the server.
          format: uint32
          type: integer
      type: object
    EnvVariable:
      description: An environment variable to set for an action.
      properties:
        hidden:
          description: Deprecated, do not use.
          type: boolean
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the variable.
          type: string
      type: object
    ExistingDisk:
      description: A pre-existing persistent disk that will be attached to every Replica in the Pool in READ_ONLY mode.
      properties:
        attachment:
          $ref: "#/components/schemas/DiskAttachment"
          description: How the disk will be attached to the Replica.
        source:
          description: The name of the Persistent Disk resource. The Persistent Disk resource must be in the same zone as the Pool.
          type: string
      type: object
    HealthCheck:
      properties:
        checkIntervalSec:
          description: How often (in seconds) to make HTTP requests for this healthcheck. The default value is 5 seconds.
          format: int32
          type: integer
        description:
          description: The description for this health check.
          type: string
        healthyThreshold:
          description: The number of consecutive health check requests that need to succeed before the replica is considered healthy again. The default value is 2.
          format: int32
          type: integer
        host:
          description: The value of the host header in the HTTP health check request. If left empty (default value), the localhost IP 127.0.0.1 will be used.
          type: string
        name:
          description: The name of this health check.
          type: string
        path:
          description: The localhost request path to send this health check, in the format /path/to/use. For example, /healthcheck.
          type: string
        port:
          description: The TCP port for the health check requests.
          format: int32
          type: integer
        timeoutSec:
          description: How long (in seconds) to wait before a timeout failure for this healthcheck. The default value is 5 seconds.
          format: int32
          type: integer
        unhealthyThreshold:
          description: The number of consecutive health check requests that need to fail in order to consider the replica unhealthy. The default value is 2.
          format: int32
          type: integer
      type: object
    Label:
      description: A label to apply to this replica pool.
      properties:
        key:
          description: The key for this label.
          type: string
        value:
          description: The value of this label.
          type: string
      type: object
    Metadata:
      description: A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.
      properties:
        fingerPrint:
          description: The fingerprint of the metadata. Required for updating the metadata entries for this instance.
          type: string
        items:
          description: A list of metadata items.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
      type: object
    MetadataItem:
      description: A Compute Engine metadata item, defined as a key:value pair. Identical to the metadata on the corresponding Compute Engine resource.
      properties:
        key:
          description: A metadata key.
          type: string
        value:
          description: A metadata value.
          type: string
      type: object
    NetworkInterface:
      description: A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding Compute Engine resource.
      properties:
        accessConfigs:
          description: An array of configurations for this interface. This specifies how this interface is configured to interact with other network services.
          items:
            $ref: "#/components/schemas/AccessConfig"
          type: array
        network:
          description: Name the Network resource to which this interface applies.
          type: string
        networkIp:
          description: An optional IPV4 internal network address to assign to the instance for this network interface.
          type: string
      type: object
    NewDisk:
      description: A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
      properties:
        attachment:
          $ref: "#/components/schemas/DiskAttachment"
          description: How the disk will be attached to the Replica.
        autoDelete:
          description: If true, then this disk will be deleted when the instance is deleted. The default value is true.
          type: boolean
        boot:
          description: If true, indicates that this is the root persistent disk.
          type: boolean
        initializeParams:
          $ref: "#/components/schemas/NewDiskInitializeParams"
          description: Create the new disk using these parameters. The name of the disk will be <instance_name>-<four_random_charactersgt;.
      type: object
    NewDiskInitializeParams:
      description: Initialization parameters for creating a new disk.
      properties:
        diskSizeGb:
          description: The size of the created disk in gigabytes.
          format: int64
          type: string
        diskType:
          description: Name of the disk type resource describing which disk type to use to create the disk. For example 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'
          type: string
        sourceImage:
          description: |-
            The name or fully-qualified URL of a source image to use to create this disk. If you provide a name of the source image, Replica Pool will look for an image with that name in your project. If you are specifying an image provided by Compute Engine, you will need to provide the full URL with the correct project, such as:
            http://www.googleapis.com/compute/v1/projects/debian-cloud/ global/images/debian-wheezy-7-vYYYYMMDD
          type: string
      type: object
    Pool:
      properties:
        autoRestart:
          description: Whether replicas in this pool should be restarted if they experience a failure. The default value is true.
          type: boolean
        baseInstanceName:
          description: |-
            The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.

            If this is not specified by the user, a random base instance name is generated by the service.
          type: string
        currentNumReplicas:
          description: "[Output Only] The current number of replicas in the pool."
          format: int32
          type: integer
        description:
          description: An optional description of the replica pool.
          type: string
        healthChecks:
          description: Deprecated. Please use template[].healthChecks instead.
          items:
            $ref: "#/components/schemas/HealthCheck"
          type: array
        initialNumReplicas:
          description: The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.
          format: int32
          type: integer
        labels:
          description: A list of labels to attach to this replica pool and all created virtual machines in this replica pool.
          items:
            $ref: "#/components/schemas/Label"
          type: array
        name:
          description: The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.
          type: string
        numReplicas:
          description: Deprecated! Use initial_num_replicas instead.
          format: int32
          type: integer
        resourceViews:
          description: The list of resource views that should be updated with all the replicas that are managed by this pool.
          items:
            type: string
          type: array
        selfLink:
          description: "[Output Only] A self-link to the replica pool."
          type: string
        targetPool:
          description: Deprecated, please use target_pools instead.
          type: string
        targetPools:
          description: A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.
          items:
            type: string
          type: array
        template:
          $ref: "#/components/schemas/Template"
          description: The template to use when creating replicas in this pool. This template is used during initial instance creation of the pool, when growing the pool in size, or when a replica restarts.
        type:
          description: Deprecated! Do not set.
          type: string
      type: object
    PoolsDeleteRequest:
      properties:
        abandonInstances:
          description: If there are instances you would like to keep, you can specify them here. These instances won't be deleted, but the associated replica objects will be removed.
          items:
            type: string
          type: array
      type: object
    PoolsListResponse:
      properties:
        nextPageToken:
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Pool"
          type: array
      type: object
    Replica:
      description: An individual Replica within a Pool. Replicas are automatically created by the replica pool, using the template provided by the user. You cannot directly create replicas.
      properties:
        name:
          description: "[Output Only] The name of the Replica object."
          type: string
        selfLink:
          description: "[Output Only] The self-link of the Replica."
          type: string
        status:
          $ref: "#/components/schemas/ReplicaStatus"
          description: "[Output Only] Last known status of the Replica."
      type: object
    ReplicaStatus:
      description: The current status of a Replica.
      properties:
        details:
          description: "[Output Only] Human-readable details about the current state of the replica"
          type: string
        state:
          description: "[Output Only] The state of the Replica."
          type: string
        templateVersion:
          description: "[Output Only] The template used to build the replica."
          type: string
        vmLink:
          description: "[Output Only] Link to the virtual machine that this Replica represents."
          type: string
        vmStartTime:
          description: "[Output Only] The time that this Replica got to the RUNNING state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned."
          type: string
      type: object
    ReplicasDeleteRequest:
      properties:
        abandonInstance:
          description: Whether the instance resource represented by this replica should be deleted or abandoned. If abandoned, the replica will be deleted but the virtual machine instance will remain. By default, this is set to false and the instance will be deleted along with the replica.
          type: boolean
      type: object
    ReplicasListResponse:
      properties:
        nextPageToken:
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Replica"
          type: array
      type: object
    ServiceAccount:
      description: A Compute Engine service account, identical to the Compute Engine resource.
      properties:
        email:
          description: "The service account email address, for example: 123845678986@project.gserviceaccount.com"
          type: string
        scopes:
          description: "The list of OAuth2 scopes to obtain for the service account, for example: https://www.googleapis.com/auth/devstorage.full_control"
          items:
            type: string
          type: array
      type: object
    Tag:
      description: A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.
      properties:
        fingerPrint:
          description: The fingerprint of the tag. Required for updating the list of tags.
          type: string
        items:
          description: Items contained in this tag.
          items:
            type: string
          type: array
      type: object
    Template:
      description: The template used for creating replicas in the pool.
      properties:
        action:
          $ref: "#/components/schemas/Action"
          description: An action to run during initialization of your replicas. An action is run as shell commands which are executed one after the other in the same bash shell, so any state established by one command is inherited by later commands.
        healthChecks:
          description: A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.
          items:
            $ref: "#/components/schemas/HealthCheck"
          type: array
        version:
          description: A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.
          type: string
        vmParams:
          $ref: "#/components/schemas/VmParams"
          description: The virtual machine parameters to use for creating replicas. You can define settings such as the machine type and the image of replicas in this pool. This is required if replica type is SMART_VM.
      type: object
    VmParams:
      description: Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.
      properties:
        baseInstanceName:
          description: Deprecated. Please use baseInstanceName instead.
          type: string
        canIpForward:
          description: Enables IP Forwarding, which allows this instance to receive packets destined for a different IP address, and send packets with a different source IP. See IP Forwarding for more information.
          type: boolean
        description:
          description: An optional textual description of the instance.
          type: string
        disksToAttach:
          description: A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.
          items:
            $ref: "#/components/schemas/ExistingDisk"
          type: array
        disksToCreate:
          description: A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.
          items:
            $ref: "#/components/schemas/NewDisk"
          type: array
        machineType:
          description: The machine type for this instance. The resource name (e.g. n1-standard-1).
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
          description: The metadata key/value pairs assigned to this instance.
        networkInterfaces:
          description: A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT.
          items:
            $ref: "#/components/schemas/NetworkInterface"
          type: array
        onHostMaintenance:
          type: string
        serviceAccounts:
          description: A list of Service Accounts to enable for this instance.
          items:
            $ref: "#/components/schemas/ServiceAccount"
          type: array
        tags:
          $ref: "#/components/schemas/Tag"
          description: A list of tags to apply to the Google Compute Engine instance to identify resources.
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/replicapool: View and manage replica pools
            https://www.googleapis.com/auth/replicapool.readonly: View replica pools
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/replicapool: View and manage replica pools
            https://www.googleapis.com/auth/replicapool.readonly: View replica pools
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
