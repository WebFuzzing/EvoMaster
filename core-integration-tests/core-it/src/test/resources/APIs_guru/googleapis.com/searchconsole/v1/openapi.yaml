openapi: 3.0.0
servers:
  - url: https://searchconsole.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Search Console API provides access to both Search Console data (verified users only) and to public information on an URL basis (anyone)
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Search Console API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: google
      url: https://searchconsole.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: searchconsole
externalDocs:
  url: https://developers.google.com/webmaster-tools/search-console-api/
tags:
  - name: searchanalytics
  - name: sitemaps
  - name: sites
  - name: urlInspection
  - name: urlTestingTools
paths:
  /v1/urlInspection/index:inspect:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Index inspection.
      operationId: searchconsole.urlInspection.index.inspect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InspectUrlIndexRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InspectUrlIndexResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - urlInspection
  /v1/urlTestingTools/mobileFriendlyTest:run:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Runs Mobile-Friendly Test for a given URL.
      operationId: searchconsole.urlTestingTools.mobileFriendlyTest.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunMobileFriendlyTestRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunMobileFriendlyTestResponse"
          description: Successful response
      tags:
        - urlTestingTools
  /webmasters/v3/sites:
    get:
      description: " Lists the user's Search Console sites."
      operationId: webmasters.sites.list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SitesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/webmasters/v3/sites/{siteUrl}":
    delete:
      description: " Removes a site from the set of the user's Search Console sites."
      operationId: webmasters.sites.delete
      parameters:
        - description: The URI of the property as defined in Search Console. **Examples:** `http://www.example.com/` or `sc-domain:example.com`.
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
      tags:
        - sites
    get:
      description: " Retrieves information about specific site."
      operationId: webmasters.sites.get
      parameters:
        - description: The URI of the property as defined in Search Console. **Examples:** `http://www.example.com/` or `sc-domain:example.com`.
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WmxSite"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - sites
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: " Adds a site to the set of the user's sites in Search Console."
      operationId: webmasters.sites.add
      parameters:
        - description: The URL of the site to add.
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
      tags:
        - sites
  "/webmasters/v3/sites/{siteUrl}/searchAnalytics/query":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days. When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
      operationId: webmasters.searchanalytics.query
      parameters:
        - description: "The site's URL, including protocol. For example: `http://www.example.com/`."
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchAnalyticsQueryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAnalyticsQueryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - searchanalytics
  "/webmasters/v3/sites/{siteUrl}/sitemaps":
    get:
      description: " Lists the [sitemaps-entries](/webmaster-tools/v3/sitemaps) submitted for this site, or included in the sitemap index file (if `sitemapIndex` is specified in the request)."
      operationId: webmasters.sitemaps.list
      parameters:
        - description: "The site's URL, including protocol. For example: `http://www.example.com/`."
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
        - description: " A URL of a site's sitemap index. For example: `http://www.example.com/sitemapindex.xml`."
          in: query
          name: sitemapIndex
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SitemapsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - sitemaps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/webmasters/v3/sites/{siteUrl}/sitemaps/{feedpath}":
    delete:
      description: Deletes a sitemap from the Sitemaps report. Does not stop Google from crawling this sitemap or the URLs that were previously crawled in the deleted sitemap.
      operationId: webmasters.sitemaps.delete
      parameters:
        - description: "The site's URL, including protocol. For example: `http://www.example.com/`."
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
        - description: "The URL of the actual sitemap. For example: `http://www.example.com/sitemap.xml`."
          in: path
          name: feedpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
      tags:
        - sitemaps
    get:
      description: Retrieves information about a specific sitemap.
      operationId: webmasters.sitemaps.get
      parameters:
        - description: "The site's URL, including protocol. For example: `http://www.example.com/`."
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
        - description: "The URL of the actual sitemap. For example: `http://www.example.com/sitemap.xml`."
          in: path
          name: feedpath
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WmxSitemap"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters.readonly
      tags:
        - sitemaps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Submits a sitemap for a site.
      operationId: webmasters.sitemaps.submit
      parameters:
        - description: "The site's URL, including protocol. For example: `http://www.example.com/`."
          in: path
          name: siteUrl
          required: true
          schema:
            type: string
        - description: "The URL of the actual sitemap. For example: `http://www.example.com/sitemap.xml`."
          in: path
          name: feedpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/webmasters
          Oauth2c:
            - https://www.googleapis.com/auth/webmasters
      tags:
        - sitemaps
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AmpInspectionResult:
      description: AMP inspection result of the live page or the current information from Google's index, depending on whether you requested a live inspection or not.
      properties:
        ampIndexStatusVerdict:
          description: Index status of the AMP URL.
          enum:
            - VERDICT_UNSPECIFIED
            - PASS
            - PARTIAL
            - FAIL
            - NEUTRAL
          type: string
        ampUrl:
          description: URL of the AMP that was inspected. If the submitted URL is a desktop page that refers to an AMP version, the AMP version will be inspected.
          type: string
        indexingState:
          description: Whether or not the page blocks indexing through a noindex rule.
          enum:
            - AMP_INDEXING_STATE_UNSPECIFIED
            - AMP_INDEXING_ALLOWED
            - BLOCKED_DUE_TO_NOINDEX
            - BLOCKED_DUE_TO_EXPIRED_UNAVAILABLE_AFTER
          type: string
        issues:
          description: A list of zero or more AMP issues found for the inspected URL.
          items:
            $ref: "#/components/schemas/AmpIssue"
          type: array
        lastCrawlTime:
          description: Last time this AMP version was crawled by Google. Absent if the URL was never crawled successfully.
          format: google-datetime
          type: string
        pageFetchState:
          description: Whether or not Google could fetch the AMP.
          enum:
            - PAGE_FETCH_STATE_UNSPECIFIED
            - SUCCESSFUL
            - SOFT_404
            - BLOCKED_ROBOTS_TXT
            - NOT_FOUND
            - ACCESS_DENIED
            - SERVER_ERROR
            - REDIRECT_ERROR
            - ACCESS_FORBIDDEN
            - BLOCKED_4XX
            - INTERNAL_CRAWL_ERROR
            - INVALID_URL
          type: string
        robotsTxtState:
          description: Whether or not the page is blocked to Google by a robots.txt rule.
          enum:
            - ROBOTS_TXT_STATE_UNSPECIFIED
            - ALLOWED
            - DISALLOWED
          type: string
        verdict:
          description: The status of the most severe error on the page. If a page has both warnings and errors, the page status is error. Error status means the page cannot be shown in Search results.
          enum:
            - VERDICT_UNSPECIFIED
            - PASS
            - PARTIAL
            - FAIL
            - NEUTRAL
          type: string
      type: object
    AmpIssue:
      description: AMP issue.
      properties:
        issueMessage:
          description: Brief description of this issue.
          type: string
        severity:
          description: "Severity of this issue: WARNING or ERROR."
          enum:
            - SEVERITY_UNSPECIFIED
            - WARNING
            - ERROR
          type: string
      type: object
    ApiDataRow:
      properties:
        clicks:
          format: double
          type: number
        ctr:
          format: double
          type: number
        impressions:
          format: double
          type: number
        keys:
          items:
            type: string
          type: array
        position:
          format: double
          type: number
      type: object
    ApiDimensionFilter:
      description: A filter test to be applied to each row in the data set, where a match can return the row. Filters are string comparisons, and values and dimension names are not case-sensitive. Individual filters are either AND'ed or OR'ed within their parent filter group, according to the group's group type. You do not need to group by a specified dimension to filter against it.
      properties:
        dimension:
          enum:
            - QUERY
            - PAGE
            - COUNTRY
            - DEVICE
            - SEARCH_APPEARANCE
          type: string
        expression:
          type: string
        operator:
          enum:
            - EQUALS
            - NOT_EQUALS
            - CONTAINS
            - NOT_CONTAINS
            - INCLUDING_REGEX
            - EXCLUDING_REGEX
          type: string
      type: object
    ApiDimensionFilterGroup:
      description: A set of dimension value filters to test against each row. Only rows that pass all filter groups will be returned. All results within a filter group are either AND'ed or OR'ed together, depending on the group type selected. All filter groups are AND'ed together.
      properties:
        filters:
          items:
            $ref: "#/components/schemas/ApiDimensionFilter"
          type: array
        groupType:
          enum:
            - AND
          type: string
      type: object
    BlockedResource:
      description: Blocked resource.
      properties:
        url:
          description: URL of the blocked resource.
          type: string
      type: object
    DetectedItems:
      description: Rich Results items grouped by type.
      properties:
        items:
          description: List of Rich Results items.
          items:
            $ref: "#/components/schemas/Item"
          type: array
        richResultType:
          description: Rich Results type
          type: string
      type: object
    Image:
      description: Describe image data.
      properties:
        data:
          description: Image data in format determined by the mime type. Currently, the format will always be "image/png", but this might change in the future.
          format: byte
          type: string
        mimeType:
          description: The mime-type of the image data.
          type: string
      type: object
    IndexStatusInspectionResult:
      description: Results of index status inspection for either the live page or the version in Google's index, depending on whether you requested a live inspection or not. For more information, see the [Index coverage report documentation](https://support.google.com/webmasters/answer/7440203).
      properties:
        coverageState:
          description: Could Google find and index the page. More details about page indexing appear in 'indexing_state'.
          type: string
        crawledAs:
          description: Primary crawler that was used by Google to crawl your site.
          enum:
            - CRAWLING_USER_AGENT_UNSPECIFIED
            - DESKTOP
            - MOBILE
          type: string
        googleCanonical:
          description: The URL of the page that Google selected as canonical. If the page was not indexed, this field is absent.
          type: string
        indexingState:
          description: Whether or not the page blocks indexing through a noindex rule.
          enum:
            - INDEXING_STATE_UNSPECIFIED
            - INDEXING_ALLOWED
            - BLOCKED_BY_META_TAG
            - BLOCKED_BY_HTTP_HEADER
            - BLOCKED_BY_ROBOTS_TXT
          type: string
        lastCrawlTime:
          description: Last time this URL was crawled by Google using the [primary crawler](https://support.google.com/webmasters/answer/7440203#primary_crawler). Absent if the URL was never crawled successfully.
          format: google-datetime
          type: string
        pageFetchState:
          description: Whether or not Google could retrieve the page from your server. Equivalent to ["page fetch"](https://support.google.com/webmasters/answer/9012289#index_coverage) in the URL inspection report.
          enum:
            - PAGE_FETCH_STATE_UNSPECIFIED
            - SUCCESSFUL
            - SOFT_404
            - BLOCKED_ROBOTS_TXT
            - NOT_FOUND
            - ACCESS_DENIED
            - SERVER_ERROR
            - REDIRECT_ERROR
            - ACCESS_FORBIDDEN
            - BLOCKED_4XX
            - INTERNAL_CRAWL_ERROR
            - INVALID_URL
          type: string
        referringUrls:
          description: URLs that link to the inspected URL, directly and indirectly.
          items:
            type: string
          type: array
        robotsTxtState:
          description: Whether or not the page is blocked to Google by a robots.txt rule.
          enum:
            - ROBOTS_TXT_STATE_UNSPECIFIED
            - ALLOWED
            - DISALLOWED
          type: string
        sitemap:
          description: Any sitemaps that this URL was listed in, as known by Google. Not guaranteed to be an exhaustive list, especially if Google did not discover this URL through a sitemap. Absent if no sitemaps were found.
          items:
            type: string
          type: array
        userCanonical:
          description: The URL that your page or site [declares as canonical](https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls?#define-canonical). If you did not declare a canonical URL, this field is absent.
          type: string
        verdict:
          description: High level verdict about whether the URL *is* indexed (indexed status), or *can be* indexed (live inspection).
          enum:
            - VERDICT_UNSPECIFIED
            - PASS
            - PARTIAL
            - FAIL
            - NEUTRAL
          type: string
      type: object
    InspectUrlIndexRequest:
      description: Index inspection request.
      properties:
        inspectionUrl:
          description: Required. URL to inspect. Must be under the property specified in "site_url".
          type: string
        languageCode:
          description: Optional. An [IETF BCP-47](https://en.wikipedia.org/wiki/IETF_language_tag) language code representing the requested language for translated issue messages, e.g. "en-US", "or "de-CH". Default value is "en-US".
          type: string
        siteUrl:
          description: Required. The URL of the property as defined in Search Console. **Examples:** `http://www.example.com/` for a URL-prefix property, or `sc-domain:example.com` for a Domain property.
          type: string
      type: object
    InspectUrlIndexResponse:
      description: Index-Status inspection response.
      properties:
        inspectionResult:
          $ref: "#/components/schemas/UrlInspectionResult"
          description: URL inspection results.
      type: object
    Item:
      description: A specific rich result found on the page.
      properties:
        issues:
          description: A list of zero or more rich result issues found for this instance.
          items:
            $ref: "#/components/schemas/RichResultsIssue"
          type: array
        name:
          description: The user-provided name of this item.
          type: string
      type: object
    MobileFriendlyIssue:
      description: Mobile-friendly issue.
      properties:
        rule:
          description: Rule violated.
          enum:
            - MOBILE_FRIENDLY_RULE_UNSPECIFIED
            - USES_INCOMPATIBLE_PLUGINS
            - CONFIGURE_VIEWPORT
            - FIXED_WIDTH_VIEWPORT
            - SIZE_CONTENT_TO_VIEWPORT
            - USE_LEGIBLE_FONT_SIZES
            - TAP_TARGETS_TOO_CLOSE
          type: string
      type: object
    MobileUsabilityInspectionResult:
      description: Mobile-usability inspection results.
      properties:
        issues:
          description: A list of zero or more mobile-usability issues detected for this URL.
          items:
            $ref: "#/components/schemas/MobileUsabilityIssue"
          type: array
        verdict:
          description: High-level mobile-usability inspection result for this URL.
          enum:
            - VERDICT_UNSPECIFIED
            - PASS
            - PARTIAL
            - FAIL
            - NEUTRAL
          type: string
      type: object
    MobileUsabilityIssue:
      description: Mobile-usability issue.
      properties:
        issueType:
          description: Mobile-usability issue type.
          enum:
            - MOBILE_USABILITY_ISSUE_TYPE_UNSPECIFIED
            - USES_INCOMPATIBLE_PLUGINS
            - CONFIGURE_VIEWPORT
            - FIXED_WIDTH_VIEWPORT
            - SIZE_CONTENT_TO_VIEWPORT
            - USE_LEGIBLE_FONT_SIZES
            - TAP_TARGETS_TOO_CLOSE
          type: string
        message:
          description: Additional information regarding the issue.
          type: string
        severity:
          description: Not returned; reserved for future use.
          enum:
            - SEVERITY_UNSPECIFIED
            - WARNING
            - ERROR
          type: string
      type: object
    ResourceIssue:
      description: Information about a resource with issue.
      properties:
        blockedResource:
          $ref: "#/components/schemas/BlockedResource"
          description: Describes a blocked resource issue.
      type: object
    RichResultsInspectionResult:
      description: Rich-Results inspection result, including any rich results found at this URL.
      properties:
        detectedItems:
          description: A list of zero or more rich results detected on this page. Rich results that cannot even be parsed due to syntactic issues will not be listed here.
          items:
            $ref: "#/components/schemas/DetectedItems"
          type: array
        verdict:
          description: High-level rich results inspection result for this URL.
          enum:
            - VERDICT_UNSPECIFIED
            - PASS
            - PARTIAL
            - FAIL
            - NEUTRAL
          type: string
      type: object
    RichResultsIssue:
      description: Severity and status of a single issue affecting a single rich result instance on a page.
      properties:
        issueMessage:
          description: Rich Results issue type.
          type: string
        severity:
          description: "Severity of this issue: WARNING, or ERROR. Items with an issue of status ERROR cannot appear with rich result features in Google Search results."
          enum:
            - SEVERITY_UNSPECIFIED
            - WARNING
            - ERROR
          type: string
      type: object
    RunMobileFriendlyTestRequest:
      description: Mobile-friendly test request.
      properties:
        requestScreenshot:
          description: Whether or not screenshot is requested. Default is false.
          type: boolean
        url:
          description: URL for inspection.
          type: string
      type: object
    RunMobileFriendlyTestResponse:
      description: Mobile-friendly test response, including mobile-friendly issues and resource issues.
      properties:
        mobileFriendliness:
          description: Test verdict, whether the page is mobile friendly or not.
          enum:
            - MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED
            - MOBILE_FRIENDLY
            - NOT_MOBILE_FRIENDLY
          type: string
        mobileFriendlyIssues:
          description: List of mobile-usability issues.
          items:
            $ref: "#/components/schemas/MobileFriendlyIssue"
          type: array
        resourceIssues:
          description: Information about embedded resources issues.
          items:
            $ref: "#/components/schemas/ResourceIssue"
          type: array
        screenshot:
          $ref: "#/components/schemas/Image"
          description: Screenshot of the requested URL.
        testStatus:
          $ref: "#/components/schemas/TestStatus"
          description: Final state of the test, can be either complete or an error.
      type: object
    SearchAnalyticsQueryRequest:
      properties:
        aggregationType:
          description: '[Optional; Default is \"auto\"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see the help documentation to learn how data is calculated differently by site versus by page. **Note:** If you group or filter by page, you cannot aggregate by property. If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.'
          enum:
            - AUTO
            - BY_PROPERTY
            - BY_PAGE
          type: string
        dataState:
          description: The data state to be fetched, can be full or all, the latter including full and partial data.
          enum:
            - DATA_STATE_UNSPECIFIED
            - FINAL
            - ALL
          type: string
        dimensionFilterGroups:
          description: "[Optional] Zero or more filters to apply to the dimension grouping values; for example, 'query contains \\\"buy\\\"' to see only data where the query string contains the substring \\\"buy\\\" (not case-sensitive). You can filter by a dimension without grouping by it."
          items:
            $ref: "#/components/schemas/ApiDimensionFilterGroup"
          type: array
        dimensions:
          description: "[Optional] Zero or more dimensions to group results by. Dimensions are the group-by values in the Search Analytics page. Dimensions are combined to create a unique row key for each row. Results are grouped in the order that you supply these dimensions."
          items:
            enum:
              - DATE
              - QUERY
              - PAGE
              - COUNTRY
              - DEVICE
              - SEARCH_APPEARANCE
            type: string
          type: array
        endDate:
          description: "[Required] End date of the requested date range, in YYYY-MM-DD format, in PST (UTC - 8:00). Must be greater than or equal to the start date. This value is included in the range."
          type: string
        rowLimit:
          description: "[Optional; Default is 1000] The maximum number of rows to return. Must be a number from 1 to 25,000 (inclusive)."
          format: int32
          type: integer
        searchType:
          description: '[Optional; Default is \"web\"] The search type to filter for.'
          enum:
            - WEB
            - IMAGE
            - VIDEO
            - NEWS
            - DISCOVER
            - GOOGLE_NEWS
          type: string
        startDate:
          description: " [Required] Start date of the requested date range, in YYYY-MM-DD format, in PST time (UTC - 8:00). Must be less than or equal to the end date. This value is included in the range."
          type: string
        startRow:
          description: "[Optional; Default is 0] Zero-based index of the first row in the response. Must be a non-negative number."
          format: int32
          type: integer
        type:
          description: 'Optional. [Optional; Default is \"web\"] Type of report: search type, or either Discover or Gnews.'
          enum:
            - WEB
            - IMAGE
            - VIDEO
            - NEWS
            - DISCOVER
            - GOOGLE_NEWS
          type: string
      type: object
    SearchAnalyticsQueryResponse:
      description: A list of rows, one per result, grouped by key. Metrics in each row are aggregated for all data grouped by that key either by page or property, as specified by the aggregation type parameter.
      properties:
        responseAggregationType:
          description: How the results were aggregated.
          enum:
            - AUTO
            - BY_PROPERTY
            - BY_PAGE
          type: string
        rows:
          description: A list of rows grouped by the key values in the order given in the query.
          items:
            $ref: "#/components/schemas/ApiDataRow"
          type: array
      type: object
    SitemapsListResponse:
      description: List of sitemaps.
      properties:
        sitemap:
          description: Contains detailed information about a specific URL submitted as a [sitemap](https://support.google.com/webmasters/answer/156184).
          items:
            $ref: "#/components/schemas/WmxSitemap"
          type: array
      type: object
    SitesListResponse:
      description: List of sites with access level information.
      properties:
        siteEntry:
          description: Contains permission level information about a Search Console site. For more information, see [Permissions in Search Console](https://support.google.com/webmasters/answer/2451999).
          items:
            $ref: "#/components/schemas/WmxSite"
          type: array
      type: object
    TestStatus:
      description: Final state of the test, including error details if necessary.
      properties:
        details:
          description: Error details if applicable.
          type: string
        status:
          description: Status of the test.
          enum:
            - TEST_STATUS_UNSPECIFIED
            - COMPLETE
            - INTERNAL_ERROR
            - PAGE_UNREACHABLE
          type: string
      type: object
    UrlInspectionResult:
      description: URL inspection result, including all inspection results.
      properties:
        ampResult:
          $ref: "#/components/schemas/AmpInspectionResult"
          description: Result of the AMP analysis. Absent if the page is not an AMP page.
        indexStatusResult:
          $ref: "#/components/schemas/IndexStatusInspectionResult"
          description: Result of the index status analysis.
        inspectionResultLink:
          description: Link to Search Console URL inspection.
          type: string
        mobileUsabilityResult:
          $ref: "#/components/schemas/MobileUsabilityInspectionResult"
          description: Result of the Mobile usability analysis.
        richResultsResult:
          $ref: "#/components/schemas/RichResultsInspectionResult"
          description: Result of the Rich Results analysis. Absent if there are no rich results found.
      type: object
    WmxSite:
      description: Contains permission level information about a Search Console site. For more information, see [Permissions in Search Console](https://support.google.com/webmasters/answer/2451999).
      properties:
        permissionLevel:
          description: The user's permission level for the site.
          enum:
            - SITE_PERMISSION_LEVEL_UNSPECIFIED
            - SITE_OWNER
            - SITE_FULL_USER
            - SITE_RESTRICTED_USER
            - SITE_UNVERIFIED_USER
          type: string
        siteUrl:
          description: The URL of the site.
          type: string
      type: object
    WmxSitemap:
      description: Contains detailed information about a specific URL submitted as a [sitemap](https://support.google.com/webmasters/answer/156184).
      properties:
        contents:
          description: The various content types in the sitemap.
          items:
            $ref: "#/components/schemas/WmxSitemapContent"
          type: array
        errors:
          description: Number of errors in the sitemap. These are issues with the sitemap itself that need to be fixed before it can be processed correctly.
          format: int64
          type: string
        isPending:
          description: If true, the sitemap has not been processed.
          type: boolean
        isSitemapsIndex:
          description: If true, the sitemap is a collection of sitemaps.
          type: boolean
        lastDownloaded:
          description: Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
          format: google-datetime
          type: string
        lastSubmitted:
          description: Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
          format: google-datetime
          type: string
        path:
          description: The url of the sitemap.
          type: string
        type:
          description: "The type of the sitemap. For example: `rssFeed`."
          enum:
            - NOT_SITEMAP
            - URL_LIST
            - SITEMAP
            - RSS_FEED
            - ATOM_FEED
            - PATTERN_SITEMAP
            - OCEANFRONT
          type: string
        warnings:
          description: Number of warnings for the sitemap. These are generally non-critical issues with URLs in the sitemaps.
          format: int64
          type: string
      type: object
    WmxSitemapContent:
      description: Information about the various content types in the sitemap.
      properties:
        indexed:
          description: "*Deprecated; do not use.*"
          format: int64
          type: string
        submitted:
          description: The number of URLs in the sitemap (of the content type).
          format: int64
          type: string
        type:
          description: "The specific type of content in this sitemap. For example: `web`."
          enum:
            - WEB
            - IMAGE
            - VIDEO
            - NEWS
            - MOBILE
            - ANDROID_APP
            - PATTERN
            - IOS_APP
            - DATA_FEED_ELEMENT
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/webmasters: View and manage Search Console data for your verified sites
            https://www.googleapis.com/auth/webmasters.readonly: View Search Console data for your verified sites
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/webmasters: View and manage Search Console data for your verified sites
            https://www.googleapis.com/auth/webmasters.readonly: View Search Console data for your verified sites
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
