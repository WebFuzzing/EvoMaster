openapi: 3.0.0
servers:
  - url: https://domainsrdap.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Read-only public API that lets users search for information about domain names.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Domains RDAP API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: google
      url: https://domainsrdap.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: domainsrdap
externalDocs:
  url: https://developers.google.com/domains/rdap/
tags:
  - name: autnum
  - name: domain
  - name: entity
  - name: ip
  - name: nameserver
  - name: v1
paths:
  "/v1/autnum/{autnumId}":
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.autnum.get
      parameters:
        - in: path
          name: autnumId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - autnum
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/domain/{domainName}":
    get:
      description: Look up RDAP information for a domain by name.
      operationId: domainsrdap.domain.get
      parameters:
        - description: 'Full domain name to look up. Example: "example.com"'
          in: path
          name: domainName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpBody"
          description: Successful response
      tags:
        - domain
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/domains:
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.getDomains
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - v1
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/entities:
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.getEntities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - v1
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/entity/{entityId}":
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.entity.get
      parameters:
        - in: path
          name: entityId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - entity
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/help:
    get:
      description: Get help information for the RDAP API, including links to documentation.
      operationId: domainsrdap.getHelp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpBody"
          description: Successful response
      tags:
        - v1
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/ip:
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.getIp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpBody"
          description: Successful response
      tags:
        - v1
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/ip/{ipId}/{ipId1}":
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.ip.get
      parameters:
        - in: path
          name: ipId
          required: true
          schema:
            type: string
        - in: path
          name: ipId1
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - ip
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/nameserver/{nameserverId}":
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.nameserver.get
      parameters:
        - in: path
          name: nameserverId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - nameserver
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/nameservers:
    get:
      description: The RDAP API recognizes this command from the RDAP specification but does not support it. The response is a formatted 501 error.
      operationId: domainsrdap.getNameservers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RdapResponse"
          description: Successful response
      tags:
        - v1
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    HttpBody:
      description: "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
      properties:
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          format: byte
          type: string
        extensions:
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    Link:
      description: Links object defined in [section 4.2 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-4.2).
      properties:
        href:
          description: 'Target URL of a link. Example: "http://example.com/previous".'
          type: string
        hreflang:
          description: 'Language code of a link. Example: "en".'
          type: string
        media:
          description: 'Media type of the link destination. Example: "screen".'
          type: string
        rel:
          description: 'Relation type of a link. Example: "previous".'
          type: string
        title:
          description: 'Title of this link. Example: "title".'
          type: string
        type:
          description: 'Content type of the link. Example: "application/json".'
          type: string
        value:
          description: 'URL giving context for the link. Example: "http://example.com/current".'
          type: string
      type: object
    Notice:
      description: Notices object defined in [section 4.3 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-4.3).
      properties:
        description:
          description: Description of the notice.
          items:
            type: string
          type: array
        links:
          description: Link to a document containing more information.
          items:
            $ref: "#/components/schemas/Link"
          type: array
        title:
          description: 'Title of a notice. Example: "Terms of Service".'
          type: string
        type:
          description: 'Type values defined in [section 10.2.1 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-10.2.1) specific to a whole response: "result set truncated due to authorization", "result set truncated due to excessive load", "result set truncated due to unexplainable reasons".'
          type: string
      type: object
    RdapResponse:
      description: Response to a general RDAP query.
      properties:
        description:
          description: Error description.
          items:
            type: string
          type: array
        errorCode:
          description: 'Error HTTP code. Example: "501".'
          format: int32
          type: integer
        jsonResponse:
          $ref: "#/components/schemas/HttpBody"
          description: HTTP response with content type set to "application/json+rdap".
        lang:
          description: Error language code. Error response info fields are defined in [section 6 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-6).
          type: string
        notices:
          description: Notices applying to this response.
          items:
            $ref: "#/components/schemas/Notice"
          type: array
        rdapConformance:
          description: RDAP conformance level.
          items:
            type: string
          type: array
        title:
          description: Error title.
          type: string
      type: object
