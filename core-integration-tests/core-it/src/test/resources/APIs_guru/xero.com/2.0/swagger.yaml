swagger: "2.0"
schemes:
  - https
host: api.xero.com
basePath: /api.xro/2.0
info:
  contact:
    name: Xero Developer Team
    url: https://developer.xero.com
    x-twitter: XeroAPI
  description: >
    # Introduction

    The Xero Accounting API is a RESTful web service and uses the OAuth (v1.0a) protocol to authenticate 3rd party applications. The Accounting API exposes accounting and related functions of the main Xero application and can be used for a variety of purposes such as creating transactions like invoices and credit notes, right through to extracting accounting data via our reports endpoint.
  title: Accounting
  version: "2.0"
  x-apisguru-categories:
    - financial
  x-logo:
    url: https://lh3.googleusercontent.com/-_IQ9BNy118c/AAAAAAAAAAI/AAAAAAAAAB0/yvA2ZQSg_pk/s500-c-no/photo.jpg
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/spec/accounting2.yaml
      version: "2.0"
  x-providerName: xero.com
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
parameters:
  If-Modified-Since:
    default: 2009-11-12T00:00:00Z
    description: A UTC timestamp (yyyy-mm-ddThh:mm:ss) . Only invoices created or
      modified since this timestamp will be returned e.g. 2009-11-12T00:00:00
    format: date-time
    in: header
    name: If-Modified-Since
    required: false
    type: string
  includeArchived:
    default: true
    description: "Include archived records in the response "
    in: query
    name: includeArchived
    required: false
    type: boolean
  offset:
    default: 0
    description: Offset by a specified journal number. e.g. journals with a
      JournalNumber greater than the offset will be returned.
    in: query
    name: offset
    required: false
    type: integer
  order:
    default: ""
    description: Order by any element returned
    in: query
    name: order
    required: false
    type: string
  page:
    default: 1
    description: Page number e.g. page=1. Page size is 100. When using the page
      parameter full resource details will be returned (including line items).
    in: query
    name: page
    required: false
    type: integer
  paymentsOnly:
    default: false
    description: Return results on a the cash basis
    in: query
    name: paymentsOnly
    required: false
    type: boolean
  summarizeErrors:
    default: false
    description: If you plan to submit more than one entity per API call, we
      recommend that you append the summarizeErrors=false querystring to your
      API call. This ensures that every entity is returned back to you, each
      having their own status attribute.
    in: query
    name: summarizeErrors
    required: false
    type: boolean
  unitdp:
    default: 4
    description: Determines the decimal places accepted/returned on the UnitAmount.
      UnitAmount is 2 decimal places by default but can be increased to 4
      decimal places by supplying the unitdp=4 parameter.
    in: query
    name: unitdp
    required: false
    type: integer
  where:
    default: ""
    description: Filter by an any element
    in: query
    name: where
    required: false
    type: string
responses:
  400ErrorResponse:
    description: An validation exception occured.
    schema:
      properties:
        Elements:
          properties:
            DataContractBase:
              properties:
                ValidationErrors:
                  items:
                    properties:
                      ValidationError:
                        properties:
                          Message:
                            description: The validation error message
                            example: You did something silly
                            type: string
                        type: object
                  type: array
              type: object
          type: object
        ErrorNumber:
          description: Please ignore (doesn't really mean anything)
          example: 10
          type: string
        Message:
          description: The exception description
          example: A validation exception occurred
          type: string
        Type:
          description: The type of exception
          example: ValidationException
          type: string
      type: object
      xml:
        name: APIException
  404ErrorResponse:
    description: The resource you're looking for cannot be found
  500ErrorResponse:
    description: An unexpected error occured.
    schema:
      properties:
        ErrorNumber:
          description: The HTTP error code
          example: 500
          type: string
        Message:
          description: The exception description
          example: An error occurred in Xero. Check the API Status page for current
            service status. Contact the API support team at api@xero.com for
            more assistance.
          type: string
        Type:
          description: The type of exception
          example: UnknownErrorException
          type: string
      type: object
      xml:
        name: APIException
  AccountsResponse:
    description: A successful response
    schema:
      properties:
        Accounts:
          items:
            $ref: "#/definitions/Account"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  AttachmentsResponse:
    description: A successful response
    schema:
      properties:
        Attachments:
          items:
            $ref: "#/definitions/Attachment"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  BankTransactionsResponse:
    description: A successful response
    schema:
      properties:
        BankTransactions:
          items:
            $ref: "#/definitions/BankTransaction"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  BankTransfersResponse:
    description: A successful response
    schema:
      properties:
        BankTransfers:
          items:
            $ref: "#/definitions/BankTransfer"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  BrandingThemesResponse:
    description: A successful response
    schema:
      properties:
        BrandingThemes:
          items:
            $ref: "#/definitions/BrandingTheme"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ContactGroupsResponse:
    description: A successful response
    schema:
      properties:
        ContactGroups:
          items:
            $ref: "#/definitions/ContactGroup"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ContactsResponse:
    description: A successful response
    schema:
      properties:
        Contacts:
          items:
            $ref: "#/definitions/Contact"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  CreditNotesResponse:
    description: A successful response
    schema:
      properties:
        CreditNotes:
          items:
            $ref: "#/definitions/CreditNote"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  CurrenciesResponse:
    description: A successful response
    schema:
      properties:
        Currencies:
          items:
            $ref: "#/definitions/Currency"
          type: array
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  EmployeesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        Employees:
          items:
            $ref: "#/definitions/Employee"
          type: array
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ExpenseClaimsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ExpenseClaims:
          items:
            $ref: "#/definitions/ExpenseClaim"
          type: array
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  InvoicesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Invoices:
          items:
            $ref: "#/definitions/Invoice"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ItemsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Items:
          items:
            $ref: "#/definitions/Item"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  JournalsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Journals:
          items:
            $ref: "#/definitions/Journal"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  LinkedTransactionsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        LinkedTransactions:
          items:
            $ref: "#/definitions/LinkedTransaction"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ManualJournalsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ManualJournals:
          items:
            $ref: "#/definitions/ManualJournal"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  OnlineInvoicesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          format: uuid
          readOnly: true
          type: string
        OnlineInvoices:
          items:
            $ref: "#/definitions/OnlineInvoice"
          type: array
        ProviderName:
          description: Name of the application that made the request
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  OrganisationsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Organisations:
          items:
            $ref: "#/definitions/Organisation"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  OverpaymentsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Overpayments:
          items:
            $ref: "#/definitions/Overpayment"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  PaymentsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Payments:
          items:
            $ref: "#/definitions/Payment"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  PrepaymentsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        Prepayments:
          items:
            $ref: "#/definitions/Prepayment"
          type: array
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  PurchaseOrdersResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        PurchaseOrders:
          items:
            $ref: "#/definitions/PurchaseOrder"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ReceiptsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Receipts:
          items:
            $ref: "#/definitions/Receipt"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  RepeatingInvoicesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        RepeatingInvoices:
          items:
            $ref: "#/definitions/RepeatingInvoice"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ReportSummaryResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Reports:
          items:
            $ref: "#/definitions/ReportSummary"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  ReportsResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Reports:
          items:
            $ref: "#/definitions/Report"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  TaxRatesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
        TaxRates:
          items:
            $ref: "#/definitions/TaxRate"
          type: array
      type: object
      xml:
        name: Response
  TaxReportResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Reports:
          items:
            $ref: "#/definitions/TaxReport"
          type: array
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
      type: object
      xml:
        name: Response
  TrackingCategoriesResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
        TrackingCategories:
          items:
            $ref: "#/definitions/TrackingCategory"
          type: array
      type: object
      xml:
        name: Response
  UsersResponse:
    description: A successful response
    schema:
      properties:
        DateTimeUTC:
          description: DateTime of the request
          format: date-time
          readOnly: true
          type: string
        ID:
          description: Unique identifier for each response
          example: 8904103f-f25e-4af2-887a-f5d3acace293
          format: uuid
          readOnly: true
          type: string
        ProviderName:
          description: Name of the application that made the request
          example: My Awesome App
          readOnly: true
          type: string
        Status:
          description: OK for a successful response
          example: OK
          readOnly: true
          type: string
        Users:
          items:
            $ref: "#/definitions/User"
          type: array
      type: object
      xml:
        name: Response
tags:
  - externalDocs:
      description: Accounts
      url: https://developer.xero.com/documentation/api/accounts/
    name: Accounts
  - externalDocs:
      description: BankTransactions
      url: https://developer.xero.com/documentation/api/banktransactions/
    name: BankTransactions
  - externalDocs:
      description: BankTransfers
      url: https://developer.xero.com/documentation/api/banktransfers/
    name: BankTransfers
  - externalDocs:
      description: BrandingThemes
      url: https://developer.xero.com/documentation/api/brandingthemes/
    name: BrandingThemes
  - externalDocs:
      description: Contacts
      url: https://developer.xero.com/documentation/api/contacts/
    name: Contacts
  - externalDocs:
      description: ContactGroups
      url: https://developer.xero.com/documentation/api/contactgroups/
    name: ContactGroups
  - externalDocs:
      description: CreditNotes
      url: https://developer.xero.com/documentation/api/creditnotes/
    name: CreditNotes
  - externalDocs:
      description: Currencies
      url: https://developer.xero.com/documentation/api/currencies/
    name: Currencies
  - externalDocs:
      description: Employees
      url: https://developer.xero.com/documentation/api/employees/
    name: Employees
  - externalDocs:
      description: ExpenseClaims
      url: https://developer.xero.com/documentation/api/expenseclaims/
    name: ExpenseClaims
  - externalDocs:
      description: Invoices
      url: https://developer.xero.com/documentation/api/invoices/
    name: Invoices
  - externalDocs:
      description: Items
      url: https://developer.xero.com/documentation/api/items/
    name: Items
  - externalDocs:
      description: Journals
      url: https://developer.xero.com/documentation/api/journals/
    name: Journals
  - externalDocs:
      description: LinkedTransactions
      url: https://developer.xero.com/documentation/api/Linked-Transactions/
    name: LinkedTransactions
  - externalDocs:
      description: ManualJournals
      url: https://developer.xero.com/documentation/api/manual-journals/
    name: ManualJournals
  - externalDocs:
      description: Organsiations
      url: https://developer.xero.com/documentation/api/organisation/
    name: Organisations
  - externalDocs:
      description: Overpayments
      url: https://developer.xero.com/documentation/api/overpayments/
    name: Overpayments
  - externalDocs:
      description: Payments
      url: https://developer.xero.com/documentation/api/payments/
    name: Payments
  - externalDocs:
      description: Prepayments
      url: https://developer.xero.com/documentation/api/prepayments/
    name: Prepayments
  - externalDocs:
      description: PurchaseOrders
      url: https://developer.xero.com/documentation/api/purchase-orders/
    name: PurchaseOrders
  - externalDocs:
      description: Receipts
      url: https://developer.xero.com/documentation/api/receipts/
    name: Receipts
  - externalDocs:
      description: RepeatingInvoices
      url: https://developer.xero.com/documentation/api/repeating-invoices/
    name: RepeatingInvoices
  - externalDocs:
      description: Reports
      url: https://developer.xero.com/documentation/api/reports/
    name: Reports
  - externalDocs:
      description: TaxRates
      url: https://developer.xero.com/documentation/api/tax-rates/
    name: TaxRates
  - externalDocs:
      description: TrackingCategories
      url: https://developer.xero.com/documentation/api/tracking-categories/
    name: TrackingCategories
  - externalDocs:
      description: Users
      url: https://developer.xero.com/documentation/api/users/
    name: Users
paths:
  /Accounts:
    get:
      description: Retrieve the chart of accounts
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AccountsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve the full chart of accounts
      tags:
        - Accounts
    post:
      parameters:
        - in: body
          name: Accounts
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        "200":
          $ref: "#/responses/AccountsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
      summary: Create or update accounts
      tags:
        - Accounts
    put:
      parameters:
        - in: body
          name: Accounts
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        "200":
          $ref: "#/responses/AccountsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
      summary: Create new accounts
      tags:
        - Accounts
    x-related-model: Account
  "/Accounts/{AccountID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: AccountID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
        "404":
          $ref: "#/responses/404ErrorResponse"
      summary: Delete an account
      tags:
        - Accounts
    get:
      parameters:
        - format: uuid
          in: path
          name: AccountID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/AccountsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
      summary: Retrieve a single account
      tags:
        - Accounts
    post:
      parameters:
        - in: body
          name: Accounts
          required: true
          schema:
            $ref: "#/definitions/Account"
        - format: uuid
          in: path
          name: AccountID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/AccountsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
      summary: Update an account
      tags:
        - Accounts
    x-related-model: Account
  "/Accounts/{AccountID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for an account
          in: path
          name: AccountID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - Accounts
  "/Accounts/{AccountID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an account
          in: path
          name: AccountID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          description: Attachment does not exist
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - Accounts
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an account
          in: path
          name: AccountID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          description: Attachment couldn't be created.
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - Accounts
  /BankTransactions:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/unitdp"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/BankTransactionsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve any spend or receive money transactions (inc. prepayments and
        overpayments)
      tags:
        - BankTransactions
    post:
      parameters:
        - in: body
          name: BankTransactions
          required: true
          schema:
            $ref: "#/definitions/BankTransaction"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/BankTransactionsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      tags:
        - BankTransactions
    put:
      parameters:
        - in: body
          name: BankTransactions
          required: true
          schema:
            $ref: "#/definitions/BankTransaction"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/BankTransactionsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a new spend or receive money (inc. prepayments and overpayments)
      tags:
        - BankTransactions
    x-related-model: BankTransaction
  "/BankTransactions/{BankTransactionID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: BankTransactionID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/BankTransactionsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a spend or receive money (inc. prepayments and overpayments)
      tags:
        - BankTransactions
    post:
      parameters:
        - in: body
          name: BankTransactions
          required: true
          schema:
            $ref: "#/definitions/BankTransaction"
        - format: uuid
          in: path
          name: BankTransactionID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/BankTransactionsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update a spend or receive money
      tags:
        - BankTransactions
    x-related-model: BankTransaction
  "/BankTransactions/{BankTransactionID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for an bank transaction
          in: path
          name: BankTransactionID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - BankTransactions
  "/BankTransactions/{BankTransactionID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an bank transaction
          in: path
          name: BankTransactionID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - BankTransactions
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an bank transaction
          in: path
          name: BankTransactionID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - BankTransactions
  /BankTransfers:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/BankTransfersResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a colection of bank transfers
      tags:
        - BankTransfers
    put:
      parameters:
        - in: body
          name: BankTransfers
          required: true
          schema:
            $ref: "#/definitions/BankTransfer"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/BankTransfersResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a bank transfer
      tags:
        - BankTransfers
    x-related-model: BankTransfer
  "/BankTransfers/{BankTransferID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: BankTransferID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/BankTransfersResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual bank transfer
      tags:
        - BankTransfers
    x-related-model: BankTransfer
  "/BankTransfers/{BankTransferID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an BankTransfer
          in: path
          name: BankTransferID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - BankTransfers
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a BankTransfer
          in: path
          name: BankTransferID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - BankTransfers
  /BrandingThemes:
    get:
      responses:
        "200":
          $ref: "#/responses/BrandingThemesResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of BrandingThemes
      tags:
        - BrandingThemes
    x-related-model: BrandingTheme
  "/BrandingThemes/{BrandingThemeID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: BrandingThemeID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/BrandingThemesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual BrandingTheme
      tags:
        - BrandingThemes
    x-related-model: BrandingTheme
  /ContactGroups:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of contact groups
      tags:
        - ContactGroups
    post:
      parameters:
        - in: body
          name: ContactGroups
          required: true
          schema:
            $ref: "#/definitions/ContactGroup"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update a contact group
      tags:
        - ContactGroups
    put:
      parameters:
        - in: body
          name: ContactGroups
          required: true
          schema:
            $ref: "#/definitions/ContactGroup"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a new contact group
      tags:
        - ContactGroups
    x-related-model: ContactGroup
  "/ContactGroups/{ContactGroupID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Delete a contact group
      tags:
        - ContactGroups
    get:
      parameters:
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve the ContactID and Name of all the contacts in a contact group
      tags:
        - ContactGroups
    post:
      parameters:
        - in: body
          name: ContactGroups
          required: true
          schema:
            $ref: "#/definitions/ContactGroup"
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update a contact group
      tags:
        - ContactGroups
    x-related-model: ContactGroup
  "/ContactGroups/{ContactGroupID}/Contacts":
    delete:
      parameters:
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Remove all contacts from a contact group
      tags:
        - ContactGroups
    put:
      parameters:
        - in: body
          name: Contacts
          required: true
          schema:
            $ref: "#/definitions/Contact"
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ContactGroupsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Add contacts to a contact group
      tags:
        - ContactGroups
    x-related-model: ContactGroup
  "/ContactGroups/{ContactGroupID}/Contacts/{ContactID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: ContactGroupID
          required: true
          type: string
        - format: uuid
          in: path
          name: ContactID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Remove a contact from a contact group
      tags:
        - ContactGroups
    x-related-model: ContactGroup
  /Contacts:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/includeArchived"
        - default: ""
          description: Filter by a comma-separated list of ContactIDs
          in: query
          name: IDs
          required: false
          type: string
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ContactsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of contacts
      tags:
        - Contacts
    post:
      parameters:
        - in: body
          name: Contacts
          required: true
          schema:
            $ref: "#/definitions/Contact"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ContactsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update a contact
      tags:
        - Contacts
    put:
      parameters:
        - in: body
          name: Contacts
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        "200":
          $ref: "#/responses/ContactsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a contact
      tags:
        - Contacts
    x-related-model: Contact
  "/Contacts/{ContactID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ContactID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ContactsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual contact
      tags:
        - Contacts
    post:
      parameters:
        - in: body
          name: Contacts
          required: true
          schema:
            $ref: "#/definitions/Contact"
        - format: uuid
          in: path
          name: ContactID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ContactsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update a contact
      tags:
        - Contacts
    x-related-model: Contact
  "/Contacts/{ContactID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a Contact
          in: path
          name: ContactID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - Contacts
  "/Contacts/{ContactID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Contact
          in: path
          name: ContactID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - Contacts
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Contact
          in: path
          name: ContactID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - Contacts
  /CreditNotes:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/page"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of credit notes
      tags:
        - CreditNotes
    post:
      parameters:
        - in: body
          name: CreditNotes
          required: true
          schema:
            $ref: "#/definitions/CreditNote"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update a credit note
      tags:
        - CreditNotes
    put:
      parameters:
        - in: body
          name: CreditNotes
          required: true
          schema:
            $ref: "#/definitions/CreditNote"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create a credit note
      tags:
        - CreditNotes
    x-related-model: CreditNote
  "/CreditNotes/{CreditNoteID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: CreditNoteID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual credit note
      tags:
        - CreditNotes
    post:
      parameters:
        - in: body
          name: CreditNotes
          required: true
          schema:
            $ref: "#/definitions/CreditNote"
        - format: uuid
          in: path
          name: CreditNoteID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update a credit note
      tags:
        - CreditNotes
    x-related-model: CreditNote
  "/CreditNotes/{CreditNoteID}/Allocations":
    put:
      parameters:
        - in: body
          name: Allocations
          required: true
          schema:
            $ref: "#/definitions/Allocation"
        - format: uuid
          in: path
          name: CreditNoteID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/CreditNotesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Allocate a credit note
      tags:
        - CreditNotes
    x-related-model: CreditNote
  "/CreditNotes/{CreditNoteID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a CreditNote
          in: path
          name: CreditNoteID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - CreditNotes
  "/CreditNotes/{CreditNoteID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a CreditNote
          in: path
          name: CreditNoteID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - CreditNotes
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a CreditNote
          in: path
          name: CreditNoteID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - CreditNotes
  /Currencies:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/CurrenciesResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve the currencies the organisation is subscribed to
      tags:
        - Currencies
    put:
      parameters:
        - in: body
          name: Currencies
          required: true
          schema:
            $ref: "#/definitions/Currency"
        - $ref: "#/parameters/summarizeErrors"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/CurrenciesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Add currencies to the organisation
      tags:
        - Currencies
    x-related-model: Currency
  /Employees:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/EmployeesResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of employees
      tags:
        - Employees
    post:
      parameters:
        - in: body
          name: Employees
          required: true
          schema:
            $ref: "#/definitions/Employee"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/EmployeesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update employees
      tags:
        - Employees
    put:
      parameters:
        - in: body
          name: Employees
          required: true
          schema:
            $ref: "#/definitions/Employee"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/EmployeesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create employees
      tags:
        - Employees
    x-related-model: Employee
  "/Employees/{EmployeeID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: EmployeeID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/EmployeesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual employee
      tags:
        - Employees
    post:
      parameters:
        - in: body
          name: Employees
          required: true
          schema:
            $ref: "#/definitions/Employee"
        - format: uuid
          in: path
          name: EmployeeID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/EmployeesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update an employee
      tags:
        - Employees
    x-related-model: Employee
  /ExpenseClaims:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ExpenseClaimsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of expense claims
      tags:
        - ExpenseClaims
    post:
      parameters:
        - in: body
          name: ExpenseClaims
          required: true
          schema:
            $ref: "#/definitions/ExpenseClaim"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ExpenseClaimsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update an expense claim
      tags:
        - ExpenseClaims
    put:
      parameters:
        - in: body
          name: ExpenseClaims
          required: true
          schema:
            $ref: "#/definitions/ExpenseClaim"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ExpenseClaimsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create an expense claim
      tags:
        - ExpenseClaims
    x-related-model: ExpenseClaim
  "/ExpenseClaims/{ExpenseClaimID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ExpenseClaimID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ExpenseClaimsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual expense claim
      tags:
        - ExpenseClaims
    post:
      parameters:
        - in: body
          name: ExpenseClaims
          required: true
          schema:
            $ref: "#/definitions/ExpenseClaim"
        - format: uuid
          in: path
          name: ExpenseClaimID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ExpenseClaimsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update an expense claim
      tags:
        - ExpenseClaims
    x-related-model: ExpenseClaim
  /Invoices:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/unitdp"
        - default: ""
          description: Filter by a comma-separated list of InvoiceIDs
          in: query
          name: IDs
          required: false
          type: string
        - default: ""
          description: Filter by a comma-separated list of ContactIDs
          in: query
          name: ContactIDs
          required: false
          type: string
        - default: ""
          description: Filter by a comma-separated list of Statuses
          in: query
          name: Statuses
          required: false
          type: string
        - default: ""
          description: Filter by a comma-separated list of InvoiceNumbers
          in: query
          name: InvoiceNumbers
          required: false
          type: string
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/InvoicesResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of invoices (sales invoices and bills)
      tags:
        - Invoices
    post:
      parameters:
        - in: body
          name: Invoices
          required: true
          schema:
            $ref: "#/definitions/Invoice"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/InvoicesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update an Invoice (sales invoices or bills)
      tags:
        - Invoices
    put:
      parameters:
        - in: body
          name: Invoices
          required: true
          schema:
            $ref: "#/definitions/Invoice"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/InvoicesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create an Invoice (sales invoices or bills)
      tags:
        - Invoices
    x-related-model: Invoice
  "/Invoices/{InvoiceID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: InvoiceID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/InvoicesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an Invoice (sales invoice or bill)
      tags:
        - Invoices
    post:
      parameters:
        - in: body
          name: Invoices
          required: true
          schema:
            $ref: "#/definitions/Invoice"
        - format: uuid
          in: path
          name: InvoiceID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/InvoicesResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update an Invoice (sales invoice or bill)
      tags:
        - Invoices
    x-related-model: Invoice
  "/Invoices/{InvoiceID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for an Invoice
          in: path
          name: InvoiceID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - Invoices
  "/Invoices/{InvoiceID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an Invoice
          in: path
          name: InvoiceID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - Invoices
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for an Invoice
          in: path
          name: InvoiceID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - Invoices
  "/Invoices/{InvoiceID}/OnlineInvoice":
    get:
      parameters:
        - format: uuid
          in: path
          name: InvoiceID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/OnlineInvoicesResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve the URL to view the online invoice
      tags:
        - Invoices
    x-related-model: OnlineInvoice
  /Items:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/unitdp"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ItemsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of items
      tags:
        - Items
    post:
      parameters:
        - in: body
          name: Items
          required: true
          schema:
            $ref: "#/definitions/Item"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ItemsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create or update an item
      tags:
        - Items
    put:
      parameters:
        - in: body
          name: Items
          required: true
          schema:
            $ref: "#/definitions/Item"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ItemsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Create an item
      tags:
        - Items
    x-related-model: Item
  "/Items/{ItemID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: ItemID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Delete an item
      tags:
        - Items
    get:
      parameters:
        - format: uuid
          in: path
          name: ItemID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/ItemsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an item
      tags:
        - Items
    post:
      parameters:
        - in: body
          name: Items
          required: true
          schema:
            $ref: "#/definitions/Item"
        - format: uuid
          in: path
          name: ItemID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/ItemsResponse"
        "400":
          $ref: "#/responses/400ErrorResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Update an item
      tags:
        - Items
    x-related-model: Item
  /Journals:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/paymentsOnly"
        - $ref: "#/parameters/offset"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/JournalsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve a collection of journals.
      tags:
        - Journals
    x-related-model: Journal
  "/Journals/{JournalID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: JournalID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/JournalsResponse"
        "404":
          $ref: "#/responses/404ErrorResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve an individual journal.
      tags:
        - Journals
    x-related-model: Journal
  /LinkedTransactions:
    get:
      parameters:
        - $ref: "#/parameters/page"
        - description: Filter by the SourceTransactionID. Get all the linked transactions
            created from a particular ACCPAY invoice
          format: uuid
          in: query
          name: SourceTransactionID
          type: string
        - description: Filter by the ContactID. Get all the linked transactions that have
            been assigned to a particular customer.
          format: uuid
          in: query
          name: ContactID
          type: string
        - description: Filter by the combination of ContactID and Status. Get all the
            linked transactions that have been assigned to a particular customer
            and have a particular status e.g. GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          format: uuid
          in: query
          name: Status
          type: string
        - description: Filter by the TargetTransactionID. Get all the linked transactions
            allocated to a particular ACCREC invoice.
          format: uuid
          in: query
          name: TargetTransactionID
          type: string
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/LinkedTransactionsResponse"
      summary: Retrieve a collection of linked transactions (billable expenses)
      tags:
        - LinkedTransactions
    post:
      parameters:
        - in: body
          name: LinkedTransactions
          required: true
          schema:
            $ref: "#/definitions/LinkedTransaction"
      responses:
        "200":
          $ref: "#/responses/LinkedTransactionsResponse"
      summary: Create or update a linked transaction (billable expense)
      tags:
        - LinkedTransactions
    put:
      parameters:
        - in: body
          name: LinkedTransactions
          required: true
          schema:
            $ref: "#/definitions/LinkedTransaction"
      responses:
        "200":
          $ref: "#/responses/LinkedTransactionsResponse"
      summary: Create a linked transaction (billable expense)
      tags:
        - LinkedTransactions
    x-related-model: LinkedTransaction
  "/LinkedTransactions/{LinkedTransactionID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: LinkedTransactionID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
      summary: Delete a linked transaction (billable expense)
      tags:
        - LinkedTransactions
    get:
      parameters:
        - format: uuid
          in: path
          name: LinkedTransactionID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/LinkedTransactionsResponse"
      summary: Retrieve a linked transaction (billable expense)
      tags:
        - LinkedTransactions
    post:
      parameters:
        - in: body
          name: LinkedTransactions
          required: true
          schema:
            $ref: "#/definitions/LinkedTransaction"
        - format: uuid
          in: path
          name: LinkedTransactionID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/LinkedTransactionsResponse"
      summary: Update a linked transaction (billable expense)
      tags:
        - LinkedTransactions
    x-related-model: LinkedTransaction
  /ManualJournals:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/page"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ManualJournalsResponse"
      summary: Retrieve a collection of manual journals
      tags:
        - ManualJournals
    post:
      parameters:
        - in: body
          name: ManualJournals
          required: true
          schema:
            $ref: "#/definitions/ManualJournal"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ManualJournalsResponse"
      summary: Create or update a manual journal
      tags:
        - ManualJournals
    put:
      parameters:
        - in: body
          name: ManualJournals
          required: true
          schema:
            $ref: "#/definitions/ManualJournal"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ManualJournalsResponse"
      summary: Create a manual journal
      tags:
        - ManualJournals
    x-related-model: ManualJournal
  "/ManualJournals/{ManualJournalID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ManualJournalID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ManualJournalsResponse"
      summary: Retrieve an individual manual journal
      tags:
        - ManualJournals
    post:
      parameters:
        - in: body
          name: ManualJournals
          required: true
          schema:
            $ref: "#/definitions/ManualJournal"
        - format: uuid
          in: path
          name: ManualJournalID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/ManualJournalsResponse"
      summary: Update a manual journal
      tags:
        - ManualJournals
    x-related-model: ManualJournal
  "/ManualJournals/{ManualJournalID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a Manual Journal
          in: path
          name: ManualJournalID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - ManualJournals
  "/ManualJournals/{ManualJournalID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Manual Journal
          in: path
          name: ManualJournalID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          description: Attachment does not exist
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - ManualJournals
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Manual Journal
          in: path
          name: ManualJournalID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          description: Attachment couldn't be created.
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - ManualJournals
  /Organisation:
    get:
      responses:
        "200":
          $ref: "#/responses/OrganisationsResponse"
      summary: Retrieve Organisation details
      tags:
        - Organisations
    x-related-model: Organisation
  "/Organisation/{ShortCode}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ShortCode
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/OrganisationsResponse"
      summary: Retrieve Organisation details
      tags:
        - Organisations
    x-related-model: Organisation
  /Overpayments:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/unitdp"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/OverpaymentsResponse"
      summary: Retrieve a collection of overpayments
      tags:
        - Overpayments
    x-related-model: Overpayment
  "/Overpayments/{OverpaymentID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: OverpaymentID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/OverpaymentsResponse"
      summary: Retrieve an overpayment
      tags:
        - Overpayments
    x-related-model: Overpayment
  "/Overpayments/{OverpaymentID}/Allocations":
    put:
      parameters:
        - in: body
          name: Allocations
          required: true
          schema:
            $ref: "#/definitions/Allocation"
        - format: uuid
          in: path
          name: OverpaymentID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/OverpaymentsResponse"
      summary: Allocate an overpayment
      tags:
        - Overpayments
    x-related-model: Overpayment
  /Payments:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/PaymentsResponse"
      summary: Retrieve a collection of payments for invoices, credit notes,
        prepayments and overpayments
      tags:
        - Payments
    post:
      parameters:
        - in: body
          name: Payments
          required: true
          schema:
            $ref: "#/definitions/Payment"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/PaymentsResponse"
      summary: Create a payment
      tags:
        - Payments
    put:
      parameters:
        - in: body
          name: Payments
          required: true
          schema:
            $ref: "#/definitions/Payment"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/PaymentsResponse"
      summary: Create a payment
      tags:
        - Payments
    x-related-model: Payment
  "/Payments/{PaymentID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: PaymentID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/PaymentsResponse"
      summary: Retrieve a payment
      tags:
        - Payments
    post:
      parameters:
        - in: body
          name: Payments
          required: true
          schema:
            $ref: "#/definitions/Payment"
        - format: uuid
          in: path
          name: PaymentID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/PaymentsResponse"
      summary: Update a payment's status to deleted
      tags:
        - Payments
    x-related-model: Payment
  /Prepayments:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/unitdp"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/PrepaymentsResponse"
      summary: Retrieve a collection of prepayments
      tags:
        - Prepayments
    x-related-model: Prepayment
  "/Prepayments/{PrepaymentID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: PrepaymentID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/PrepaymentsResponse"
      summary: Retrieve an individual prepayment
      tags:
        - Prepayments
    x-related-model: Prepayment
  "/Prepayments/{PrepaymentID}/Allocations":
    put:
      parameters:
        - in: body
          name: Allocations
          required: true
          schema:
            $ref: "#/definitions/Allocation"
        - format: uuid
          in: path
          name: PrepaymentID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/PrepaymentsResponse"
      summary: Allocate a prepayment
      tags:
        - Prepayments
    x-related-model: Prepayment
  /PurchaseOrders:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/page"
        - format: date
          in: query
          name: DateFrom
          required: false
          type: string
        - format: date
          in: query
          name: DateTo
          required: false
          type: string
        - in: query
          name: Status
          required: false
          type: string
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/PurchaseOrdersResponse"
      summary: Retrieve a collection of purchase orders
      tags:
        - PurchaseOrders
    post:
      parameters:
        - in: body
          name: PurchaseOrders
          required: true
          schema:
            $ref: "#/definitions/PurchaseOrder"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/PurchaseOrdersResponse"
      summary: Create and update purchase orders
      tags:
        - PurchaseOrders
    put:
      parameters:
        - in: body
          name: PurchaseOrders
          required: true
          schema:
            $ref: "#/definitions/PurchaseOrder"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/PurchaseOrdersResponse"
      summary: Create purchase orders
      tags:
        - PurchaseOrders
    x-related-model: PurchaseOrder
  "/PurchaseOrders/{PurchaseOrderID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: PurchaseOrderID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/PurchaseOrdersResponse"
      summary: Retrieve a single purchase order
      tags:
        - PurchaseOrders
    post:
      parameters:
        - in: body
          name: PurchaseOrders
          required: true
          schema:
            $ref: "#/definitions/PurchaseOrder"
        - format: uuid
          in: path
          name: PurchaseOrderID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/PurchaseOrdersResponse"
      summary: Update a purchase order
      tags:
        - PurchaseOrders
    x-related-model: PurchaseOrder
  "/PurchaseOrders/{PurchaseOrderID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a purchase order
          in: path
          name: PurchaseOrderID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - PurchaseOrders
  "/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a purchase order
          in: path
          name: PurchaseOrderID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          description: Attachment does not exist
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - PurchaseOrders
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a purchase order
          in: path
          name: PurchaseOrderID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          description: Attachment couldn't be created.
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - PurchaseOrders
  /Receipts:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/unitdp"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ReceiptsResponse"
      summary: Retrieve a collection of draft receipts
      tags:
        - Receipts
    post:
      parameters:
        - in: body
          name: Receipts
          required: true
          schema:
            $ref: "#/definitions/Receipt"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ReceiptsResponse"
      summary: Create or update a receipt
      tags:
        - Receipts
    put:
      parameters:
        - in: body
          name: Receipts
          required: true
          schema:
            $ref: "#/definitions/Receipt"
        - $ref: "#/parameters/unitdp"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/ReceiptsResponse"
      summary: Create a receipt
      tags:
        - Receipts
    x-related-model: Receipt
  "/Receipts/{ReceiptID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ReceiptID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/ReceiptsResponse"
      summary: Retrieve an individual receipt
      tags:
        - Receipts
    post:
      parameters:
        - in: body
          name: Receipts
          required: true
          schema:
            $ref: "#/definitions/Receipt"
        - format: uuid
          in: path
          name: ReceiptID
          required: true
          type: string
        - $ref: "#/parameters/unitdp"
      responses:
        "200":
          $ref: "#/responses/ReceiptsResponse"
      summary: Update a receipt
      tags:
        - Receipts
    x-related-model: Receipt
  "/Receipts/{ReceiptID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a Receipt
          in: path
          name: ReceiptID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - Receipts
  "/Receipts/{ReceiptID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Receipt
          in: path
          name: ReceiptID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          description: Attachment does not exist
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - Receipts
    post:
      description: Upload an Attachment
      parameters:
        - description: The filename of the attachment being uploaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a Receipt
          in: path
          name: ReceiptID
          required: true
          type: string
        - description: The raw content of the file to be uploaded
          in: body
          name: Content
          required: true
          schema:
            $ref: "#/definitions/Content"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "400":
          description: Attachment couldn't be created.
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Upload an Attachment
      tags:
        - Receipts
  /RepeatingInvoices:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/where"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/RepeatingInvoicesResponse"
      summary: Retrieve a collection of repeating invoice templates
      tags:
        - RepeatingInvoices
    x-related-model: RepeatingInvoice
  "/RepeatingInvoices/{RepeatingInvoiceID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: RepeatingInvoiceID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/RepeatingInvoicesResponse"
      summary: Retrieve an individual repeating invoice template
      tags:
        - RepeatingInvoices
    x-related-model: RepeatingInvoice
  "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments":
    get:
      description: Retrieve Attachments
      parameters:
        - description: The Xero generated unique identifier for a RepeatingInvoice
          in: path
          name: RepeatingInvoiceID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/AttachmentsResponse"
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Retrieve Attachments
      tags:
        - RepeatingInvoices
  "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}":
    get:
      description: Download an Attachment
      parameters:
        - description: The filename of the attachment to be downloaded
          in: path
          name: FileName
          required: true
          type: string
        - description: The Xero generated unique identifier for a RepeatingInvoice
          in: path
          name: RepeatingInvoiceID
          required: true
          type: string
        - $ref: "#/parameters/If-Modified-Since"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          description: Successful response. The response message will contain the raw file
            content that was originally uploaded. The response won’t contain any
            xml or json encoded information
        "404":
          description: Attachment does not exist
        "500":
          $ref: "#/responses/500ErrorResponse"
      summary: Download an Attachment
      tags:
        - RepeatingInvoices
  /Reports:
    get:
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/ReportSummaryResponse"
      summary: Retrieve a list of published GST reports (NZ) or BAS reports (AU)
      tags:
        - Reports
    x-related-model: Report
  /Reports/AgedPayablesByContact:
    get:
      parameters:
        - description: ContactID for the contact you're running the report for
          format: uuid
          in: query
          name: contactID
          required: true
          type: string
        - description: Shows payments up to this date e.g. 2014-04-30. Defaults to end of
            the current month
          in: query
          name: date
          required: false
          type: string
        - description: Show all payable invoices from this date for contact
          in: query
          name: fromDate
          required: false
          type: string
        - description: Show all payable invoices to this date for the contact
          in: query
          name: toDate
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve an Aged Payables report for a contact
      tags:
        - Reports
    x-related-model: Reports
  /Reports/AgedReceivablesByContact:
    get:
      parameters:
        - description: ContactID for the contact you're running the report for
          format: uuid
          in: query
          name: contactID
          required: true
          type: string
        - description: Shows payments up to this date e.g. 2014-04-30. Defaults to end of
            the current month
          in: query
          name: date
          required: false
          type: string
        - description: Show all receivable invoices from this date for contact
          in: query
          name: fromDate
          required: false
          type: string
        - description: Show all receivable invoices to this date for the contact
          in: query
          name: toDate
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve an Aged Receivables report for a contact
      tags:
        - Reports
    x-related-model: Reports
  /Reports/BalanceSheet:
    get:
      parameters:
        - description: YYYY-MM-DD
          format: date
          in: query
          name: date
          required: false
          type: string
        - description: Run the balance sheet for a specific tracking option
          format: uuid
          in: query
          name: trackingOptionID1
          required: false
          type: string
        - description: Run the balance sheet for a combination of two tracking options
          format: uuid
          in: query
          name: trackingOptionID2
          required: false
          type: string
        - description: If set to true no custom report layouts will be applied to response
          in: query
          name: standardLayout
          required: false
          type: boolean
        - description: Set this to true to get cash transactions only
          in: query
          name: paymentsOnly
          required: false
          type: boolean
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a Balance Sheet Report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/BankStatement:
    get:
      parameters:
        - description: bankAccountID e.g. 5040915e-8ce7-4177-8d08-fde416232f18
          format: uuid
          in: query
          name: bankAccountID
          required: true
          type: string
        - description: YYYY-MM-DD
          in: query
          name: fromDate
          required: false
          type: string
        - description: YYYY-MM-DD
          in: query
          name: toDate
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a bank statement report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/BankSummary:
    get:
      parameters:
        - description: YYYY-MM-DD
          in: query
          name: fromDate
          required: false
          type: string
        - description: YYYY-MM-DD
          in: query
          name: toDate
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a bank summary report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/BudgetSummary:
    get:
      parameters:
        - description: YYYY-MM-DD
          in: query
          name: date
          required: false
          type: string
        - description: The number of periods to compare (integer between 1 and 12)
          in: query
          name: periods
          required: false
          type: integer
        - description: The period size to compare to (1=month, 3=quarter, 12=year)
          in: query
          name: timeframe
          required: false
          type: integer
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a budget summary report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/ExecutiveSummary:
    get:
      parameters:
        - description: YYYY-MM-DD
          in: query
          name: date
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve an executive summary report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/ProfitAndLoss:
    get:
      parameters:
        - description: YYYY-MM-DD
          in: query
          name: fromDate
          required: false
          type: string
        - description: YYYY-MM-DD
          in: query
          name: toDate
          required: false
          type: string
        - description: If you specify the trackingCategoryID parameter then the Profit and
            Loss Report will show figures for each of the options in the
            category as separate columns. See the Profit and Loss Report in Xero
            to learn more about this behavior when filtering by a tracking
            category.
          in: query
          name: trackingCategoryID
          required: false
          type: string
        - description: If you specify this parameter in addition to the trackingCategoryID
            then just one option will be returned (i.e. 1 column only)
          in: query
          name: trackingOptionID
          required: false
          type: string
        - description: If you specify a second trackingCategoryID parameter then the
            Profit and Loss Report will show figures for each combination of
            options from the two categories as separate columns. See the Profit
            and Loss Report in Xero to learn more about this behaviour when
            filtering by two tracking categories.
          in: query
          name: trackingCategoryID2
          required: false
          type: string
        - description: If you specify this parameter in addition to a second
            trackingCategoryID then just one option will be returned combined
            with the option/s from the first tracking category
          in: query
          name: trackingOptionID2
          required: false
          type: string
        - description: If you set this parameter to "true" then no custom report layouts
            will be applied to response
          in: query
          name: standardLayout
          required: false
          type: boolean
        - description: Set this to true to get cash transactions only
          in: query
          name: paymentsOnly
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a profit and loss report
      tags:
        - Reports
    x-related-model: Reports
  /Reports/TenNinetyNine:
    get:
      parameters:
        - description: Year of the report e.g. 2013
          in: query
          name: reportYear
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a 1099 Report (US only)
      tags:
        - Reports
    x-related-model: Reports
  /Reports/TrialBalance:
    get:
      parameters:
        - description: YYYY-MM-DD
          in: query
          name: Date
          required: false
          type: string
        - description: Set this to true to get cash transactions only
          in: query
          name: paymentsOnly
          required: false
          type: string
      responses:
        "200":
          $ref: "#/responses/ReportsResponse"
      summary: Retrieve a Trial Balance Report
      tags:
        - Reports
    x-related-model: Reports
  "/Reports/{ReportID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: ReportID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/TaxReportResponse"
      summary: Retrieve an individual BAS Report (AU) or GST Report (NZ)
      tags:
        - Reports
    x-related-model: Reports
  /TaxRates:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/where"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/TaxRatesResponse"
      summary: Retrieve a collection of tax rates
      tags:
        - TaxRates
    post:
      parameters:
        - in: body
          name: TaxRates
          required: true
          schema:
            $ref: "#/definitions/TaxRate"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/TaxRatesResponse"
      summary: Create or update tax rates
      tags:
        - TaxRates
    put:
      parameters:
        - in: body
          name: TaxRates
          required: true
          schema:
            $ref: "#/definitions/TaxRate"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/TaxRatesResponse"
      summary: Create tax rates
      tags:
        - TaxRates
    x-related-model: TaxRate
  /TrackingCategories:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/where"
        - $ref: "#/parameters/includeArchived"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Retrieve a collection of tracking categories and options
      tags:
        - TrackingCategories
    post:
      parameters:
        - in: body
          name: TrackingCategories
          required: true
          schema:
            $ref: "#/definitions/TrackingCategory"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Create a tracking category
      tags:
        - TrackingCategories
    put:
      parameters:
        - in: body
          name: TrackingCategories
          required: true
          schema:
            $ref: "#/definitions/TrackingCategory"
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Create a tracking category
      tags:
        - TrackingCategories
    x-related-model: TrackingCategory
  "/TrackingCategories/{TrackingCategoryID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: TrackingCategoryID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
      summary: Delete a Tracking Category
      tags:
        - TrackingCategories
    get:
      parameters:
        - format: uuid
          in: path
          name: TrackingCategoryID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Retrieve a tracking category and it's options
      tags:
        - TrackingCategories
    post:
      parameters:
        - in: body
          name: TrackingCategories
          required: true
          schema:
            $ref: "#/definitions/TrackingCategory"
        - format: uuid
          in: path
          name: TrackingCategoryID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Create or update a tracking category
      tags:
        - TrackingCategories
    x-related-model: TrackingCategory
  "/TrackingCategories/{TrackingCategoryID}/Options":
    put:
      parameters:
        - in: body
          name: TrackingOptions
          required: true
          schema:
            $ref: "#/definitions/TrackingOption"
        - format: uuid
          in: path
          name: TrackingCategoryID
          required: true
          type: string
        - $ref: "#/parameters/summarizeErrors"
      responses:
        "200":
          $ref: "#/responses/TrackingCategoriesResponse"
      summary: Add options to a tracking category
      tags:
        - TrackingCategories
    x-related-model: TrackingCategory
  "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}":
    delete:
      parameters:
        - format: uuid
          in: path
          name: TrackingCategoryID
          required: true
          type: string
        - format: uuid
          in: path
          name: TrackingOptionID
          required: true
          type: string
      responses:
        "200":
          description: A successful request
      summary: Delete an option from a tracking category
      tags:
        - TrackingCategories
    x-related-model: TrackingCategory
  /Users:
    get:
      parameters:
        - $ref: "#/parameters/If-Modified-Since"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/where"
      produces:
        - application/xml
        - application/json
      responses:
        "200":
          $ref: "#/responses/UsersResponse"
      summary: Retrieve a collection of Users
      tags:
        - Users
    x-related-model: User
  "/Users/{UserID}":
    get:
      parameters:
        - format: uuid
          in: path
          name: UserID
          required: true
          type: string
      responses:
        "200":
          $ref: "#/responses/UsersResponse"
      summary: Retrieve an individual User
      tags:
        - Users
    x-related-model: User
definitions:
  Account:
    properties:
      AccountID:
        description: Unique identifier for the account
        example: 50e845c3-464e-4a6d-8951-8794317c7893
        format: uuid
        readOnly: true
        type: string
      BankAccountNumber:
        description: For bank accounts only (Type BANK)
        example: 1234353453453
        type: string
      BankAccountType:
        description: For bank accounts only
        enum:
          - BANK
          - CREDITCARD
          - PAYPAL
        example: CREDITCARD
        type: string
      Class:
        description: The class of account
        enum:
          - ASSET
          - EQUITY
          - EXPENSE
          - LIABILITY
          - REVENUE
        example: ASSET
        readOnly: true
        type: string
      Code:
        description: Customer defined alpha numeric account code e.g 200 or SALES
        example: 200
        maxLength: 10
        type: string
      CurrencyCode:
        description: For bank accounts only
        example: AUD
        type: string
      Description:
        description: Description of the Account. Valid for all types of accounts except
          bank accounts
        example: A sales account
        maxLength: 4000
        type: string
      EnablePaymentsToAccount:
        description: Describes whether account can have payments applied to it
        example: false
        type: boolean
      HasAttachments:
        description: Indicates if an account has an attachment
        example: false
        readOnly: true
        type: boolean
      Name:
        description: Name of account
        example: Sales
        maxLength: 150
        type: string
      ReportingCode:
        description: Shown if set
        example: ASS
        readOnly: true
        type: string
      ReportingCodeName:
        description: Shown if set
        example: Asset
        readOnly: true
        type: string
      ShowInExpenseClaims:
        description: Describes whether account code is available for use with expense claims
        example: false
        type: boolean
      Status:
        description: Accounts with a status of ACTIVE can be updated to ARCHIVED
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      SystemAccount:
        description: If this is a system account then this element is returned. Note
          that non-system accounts may have this element set as either “” or
          null.
        enum:
          - DEBTORS
          - CREDITORS
          - BANKCURRENCYGAIN
          - GST
          - GSTONIMPORTS
          - HISTORICAL
          - REALISEDCURRENCYGAIN
          - RETAINEDEARNINGS
          - ROUNDING
          - TRACKINGTRANSFERS
          - UNPAIDEXPCLM
          - UNREALISEDCURRENCYGAIN
          - WAGEPAYABLES
        example: ROUNDING
        readOnly: true
        type: string
      TaxType:
        description: Default tax rate for the account
        example: NONE
        type: string
      Type:
        description: Account type
        enum:
          - BANK
          - CURRENT
          - CURRLIAB
          - DEPRECIATN
          - DIRECTCOSTS
          - EQUITY
          - EXPENSE
          - FIXED
          - INVENTORY
          - LIABILITY
          - NONCURRENT
          - OTHERINCOME
          - OVERHEADS
          - PREPAYMENT
          - REVENUE
          - SALES
          - TERMLIAB
          - PAYGLIABILITY
          - SUPERANNUATIONEXPENSE
          - SUPERANNUATIONLIABILITY
          - WAGESEXPENSE
          - WAGESPAYABLELIABILITY
        example: CURRENT
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
    required:
      - Code
      - Name
      - Type
    type: object
  Address:
    properties:
      AddressLine1:
        example: Apartment A
        maxLength: 500
        type: string
      AddressLine2:
        example: Building 20
        maxLength: 500
        type: string
      AddressLine3:
        example: 123 Main St
        maxLength: 500
        type: string
      AddressLine4:
        example: South
        maxLength: 500
        type: string
      AddressType:
        description: The address type
        enum:
          - POBOX
          - STREET
          - POSTAL
        example: POSTAL
        type: string
      Attentionto:
        example: Accounts Department
        maxLength: 255
        type: string
      City:
        example: New York City
        maxLength: 255
        type: string
      Country:
        example: United States
        maxLength: 50
        type: string
      PostalCode:
        example: 47483
        maxLength: 50
        type: string
      Region:
        example: New York
        maxLength: 500
        type: string
    type: object
  Allocation:
    properties:
      AppliedAmount:
        description: the amount being applied to the invoice
        format: float
        type: number
      Date:
        description: The date the prepayment is applied YYYY-MM-DD (read-only). This
          will be the latter of the invoice date and the prepayment date.
        format: date
        readOnly: true
        type: string
      Invoice:
        properties:
          InvoiceID:
            format: uuid
            type: string
        type: object
    required:
      - Invoice
      - AppliedAmount
      - Date
    type: object
  Attachment:
    properties:
      AttachmentId:
        description: Xero generated unique identifier for attachment
        example: a04bf353-4d9a-4bda-8c1e-db1274164ee
        format: uuid
        type: string
      ContentLegth:
        description: The content length in bytes
        example: 6384
        type: integer
      Filename:
        description: The filename of the attachemnt
        example: my-receipt.jpg
        type: string
      IncludeOnline:
        description: Determines whether the attachment is included with the online invoice
        example: true
        type: boolean
      MimeType:
        description: The mimetype of the attachemnt
        example: image/jpg
        type: string
      Url:
        description: The URL to where the attachment is located
        example: https://api.xero.com/api.xro/2.0/Receipts/e59a2c7f-4078-a0f3-73537afcbba9/Attachments/my-receipt.jpg
        type: string
    type: object
  Balances:
    description: The raw AccountsReceivable (sales invoices) and AccountsPayable
      (bills) outstanding and overdue amounts, not converted to base currency
    items:
      properties:
        AccountsPayable:
          properties:
            Outstanding:
              description: AP outstanding balance
              example: 50
              format: float
              readOnly: true
              type: number
            Overdue:
              description: AP overdue balance
              example: 2
              format: float
              readOnly: true
              type: number
          type: object
        AccountsReceivable:
          properties:
            Outstanding:
              description: AR outstanding balance
              example: 1000
              format: float
              readOnly: true
              type: number
            Overdue:
              description: AR overdue balance
              example: 500
              format: float
              readOnly: true
              type: number
          type: object
    readOnly: true
    type: array
  BankAccount:
    properties:
      AccountID:
        description: Account identifier
        example: d1ebb97b-d207-4ccb-9ab6-8a466a8b4d39
        format: uuid
        type: string
      Code:
        description: Bank account code
        example: 610
        type: string
      Name:
        description: The Name Bank Account
        example: Everyday Savings
        readOnly: true
        type: string
    type: object
  BankTransaction:
    properties:
      Attachments:
        items:
          $ref: "#/definitions/Attachment"
        type: array
      BankAccount:
        $ref: "#/definitions/BankAccount"
      BankTransactionId:
        description: Xero generated unique identifier for bank transactions
        example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
        format: uuid
        readOnly: true
        type: string
      Contact:
        $ref: "#/definitions/ContactSummary"
      CurrencyCode:
        description: The currency that bank transaction has been raised in
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency bank transaction. If no rate
          is specified, the XE.com day rate is used.
        format: float
        type: number
      Date:
        description: Date bank transaction was made YYYY-MM-DD
        format: date
        type: string
      HasAttachments:
        description: boolean to indicate if the bank transaction has an attachment
        readOnly: true
        type: boolean
      IsReconciled:
        description: Indicates if transaction has been reconciled
        example: false
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        $ref: "#/definitions/LineItems"
      OverpaymentID:
        description: Xero generated unique identifier for an Overpayment. This will be
          returned on BankTransactions with a Type of SPEND-OVERPAYMENT or
          RECEIVE-OVERPAYMENT
        example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
        format: uuid
        readOnly: true
        type: string
      PrepaymentID:
        description: Xero generated unique identifier for a Prepayment. This will be
          returned on BankTransactions with a Type of SPEND-PREPAYMENT or
          RECEIVE-PREPAYMENT
        example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
        format: uuid
        readOnly: true
        type: string
      Reference:
        description: Reference for the transaction. Only supported for SPEND and RECEIVE
          transactions
        example: ABC123
        type: string
      Status:
        default: AUTHORISED
        description: The status of the bank transaction
        enum:
          - AUTHORISED
          - DELETED
        type: string
      SubTotal:
        description: Total of bank transaction excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: Total of bank transaction tax inclusive (i.e. SubTotal + TotalTax).
          This will be ignored if it doesn’t equal the sum of the LineAmounts
        format: float
        readOnly: true
        type: number
      Totaltax:
        description: Total tax on the bank transaction
        format: float
        readOnly: true
        type: number
      Type:
        description: The type of bank transaction
        enum:
          - RECEIVE
          - RECEIVE-OVERPAYMENT
          - RECEIVE-PREPAYMENT
          - SPEND
          - SPEND-OVERPAYMENT
          - SPEND-PREPAYMENT
          - RECEIVE-TRANSFER
          - SPEND-TRANSFER
        example: SPEND
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      Url:
        description: URL link to a source document – shown as “Go to [appName]” in the
          Xero app
        example: https://yourapp.com/transactions/ABC123
        type: string
    required:
      - Type
      - Contact
      - LineItems
      - BankAccount
    type: object
    xml:
      name: BankTransaction
  BankTransfer:
    properties:
      Amount:
        description: Total of the bank transfer
        format: float
        type: number
      Attachments:
        items:
          $ref: "#/definitions/Attachment"
        type: array
      BankTransferId:
        description: Xero generated unique identifier for bank transfers
        example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
        format: uuid
        readOnly: true
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency bank transfer. If no rate is
          specified, the XE.com day rate is used.
        format: float
        type: number
      Date:
        description: Date bank transfer was made YYYY-MM-DD
        format: date
        type: string
      FromBankAccount:
        $ref: "#/definitions/FromBankAccount"
      FromBankTransactionID:
        description: The Bank Transaction ID for the source account
        example: d2c63bbd-bc9e-4fb4-9d1c-e5d15749aaa2
        format: uuid
        readOnly: true
        type: string
      HasAttachments:
        description: boolean to indicate if the bank transaction has an attachment
        readOnly: true
        type: boolean
      ToBankAccount:
        $ref: "#/definitions/ToBankAccount"
      ToBankTransactionID:
        description: The Bank Transaction ID for the destination account
        example: 66fbdc01-e2e7-4ee3-ab10-2d5821d38fe4
        format: uuid
        readOnly: true
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
    required:
      - FromBankAccount
      - ToBankAccount
      - Amount
    type: object
    xml:
      name: BankTransfer
  BatchPayments:
    properties:
      BankAccountName:
        example: Globo Bank
        readOnly: true
        type: string
      BankAccountNumber:
        example: 098765 123456
        readOnly: true
        type: string
      Details:
        example: Stuff about the account
        readOnly: true
        type: string
    readOnly: true
    type: object
  BrandingTheme:
    properties:
      BrandingThemeID:
        description: Xero identifier
        format: uuid
        readOnly: true
        type: string
      CreatedDateUTC:
        description: UTC timestamp of creation date of branding theme
        format: date-time
        readOnly: true
        type: string
      Name:
        description: Name of branding theme
        example: VIP Customer Theme
        readOnly: true
        type: string
      SortOrder:
        description: Integer – ranked order of branding theme. The default branding
          theme has a value of 0
        readOnly: true
        type: integer
    readOnly: true
    type: object
  Contact:
    properties:
      AccountNumber:
        description: A user defined account number. This can be updated via the API and
          the Xero UI.
        example: AM123
        maxLength: 50
        type: string
      AccountsPayableTaxType:
        description: Default tax type used for contact on AP invoices
        example: NONE
        type: string
      AccountsReceivableTaxType:
        description: Default tax type used for contact on AR invoices
        example: NONE
        type: string
      Addresses:
        description: Address details for the contact
        items:
          $ref: "#/definitions/Address"
        type: array
      Balances:
        $ref: "#/definitions/Balances"
      BankAccountDetails:
        description: Bank account number of contact
        example: 061844 8474733
        type: string
      BatchPayments:
        $ref: "#/definitions/BatchPayments"
      BrandingTheme:
        $ref: "#/definitions/BrandingTheme"
      ContactGroups:
        items:
          $ref: "#/definitions/ContactGroup"
        readOnly: true
        type: array
      ContactID:
        description: Xero identifier
        example: cc04bc53-f094-4ed6-8b3e-67297c37fae0
        format: uuid
        readOnly: true
        type: string
      ContactPersons:
        $ref: "#/definitions/ContactPersons"
      ContactStatus:
        description: Current status of a contact
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      DefaultCurrency:
        description: Default currency for raising invoices against contact
        example: AUD
        type: string
      EmailAddress:
        description: Email address of contact person (umlauts not supported)
        example: adam@moore.com
        maxLength: 255
        type: string
      FirstName:
        description: First name of contact person
        example: Adam
        maxLength: 255
        type: string
      HasAttachments:
        description: A boolean to indicate if a contact has an attachment
        example: true
        readOnly: true
        type: boolean
      IsCustomer:
        description: Boolean that describes if a contact has any AR invoices entered
          against them. Cannot be set via PUT or POST – it is automatically set
          when an accounts receivable invoice is generated against this contact.
        example: true
        readOnly: true
        type: boolean
      IsSupplier:
        description: Boolean that describes if a contact that has any AP invoices
          entered against them. Cannot be set via PUT or POST – it is
          automatically set when an accounts payable invoice is generated
          against this contact.
        example: true
        readOnly: true
        type: boolean
      LastName:
        description: Last name of contact person
        example: Moore
        maxLength: 255
        type: string
      Name:
        description: Full name of contact/organisation
        example: Adam Moore
        maxLength: 255
        type: string
      PaymentTerms:
        $ref: "#/definitions/PaymentTerms"
      Phones:
        $ref: "#/definitions/Phones"
      PurchasesDefaultAccountCode:
        description: The default purchases account code for contacts
        example: 420
        type: string
      PurchasesTrackingCategories:
        $ref: "#/definitions/PurchasesTrackingCategories"
      SalesDefaultAccountCode:
        description: The default sales account code for contacts
        example: 200
        type: string
      SalesTrackingCategories:
        $ref: "#/definitions/SalesTrackingCategories"
      SkypeUserName:
        description: Skype user name of contact
        example: adamm
        type: string
      TaxNumber:
        description: Tax number of contact – this is also known as the ABN (Australia),
          GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and
          global) in the Xero UI depending on which regionalized version of Xero
          you are using.
        example: GB12345667
        maxLength: 50
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      Website:
        description: Website address for contact
        example: www.contact.com
        readOnly: true
        type: string
      XeroNetworkKey:
        description: Store XeroNetworkKey for contacts.
        example: J57MXL9Z3GULYFR9CUBSKZGVRTBCAL
        type: string
    required:
      - Name
    type: object
  ContactGroup:
    properties:
      ContactGroupID:
        description: Unique identifier for the contact group
        example: 50e845c3-464e-4a6d-8951-8794317c7893
        format: uuid
        readOnly: true
        type: string
      Name:
        description: Name of the contact group
        example: Training
        type: string
      Status:
        description: The status of the contact group
        enum:
          - ACTIVE
          - DELETED
        example: ACTIVE
        type: string
    required:
      - Name
    type: object
  ContactPerson:
    properties:
      EmailAddress:
        description: Email address of person
        example: aaron@muir.com
        type: string
      FirstName:
        description: First name of person
        example: Aaron
        type: string
      IncludeInEmails:
        description: Boolean to indicate whether contact should be included on emails
          with invoices etc.
        example: true
        type: boolean
      LastName:
        description: Last name of person
        example: Muir
        type: string
    type: object
  ContactPersons:
    items:
      $ref: "#/definitions/ContactPerson"
    type: array
  ContactSummary:
    properties:
      ContactID:
        description: Xero identifier
        example: cc04bc53-f094-4ed6-8b3e-67297c37fae0
        format: uuid
        readOnly: true
        type: string
      Name:
        description: Full name of contact/organisation
        example: Adam Moore
        maxLength: 255
        type: string
    required:
      - Name
    type: object
    xml:
      name: Contact
  Content:
    properties:
      Content:
        description: The raw file content
        example: "23456238745623865897326457634259763425976342596"
        type: string
    required:
      - Content
    type: object
  CreditNote:
    properties:
      Allocations:
        description: Transactions the credit note has been allocated to
        items:
          $ref: "#/definitions/Allocation"
        readOnly: true
        type: array
      BrandingThemeID:
        description: The identifier for the branding theme applied to the credit note
        format: uuid
        type: string
      Contact:
        $ref: "#/definitions/ContactSummary"
      CreditNoteID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      CreditNoteNumber:
        description: ACCRECCREDIT – Unique alpha numeric code identifying credit note
          (when missing will auto-generate from your Organisation Invoice
          Settings)
        example: CN-123
        type: string
      CurrencyCode:
        description: Currency used for the Credit Note
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency invoice. If no rate is
          specified, the XE.com day rate is used
        format: float
        type: number
      Date:
        description: The date the credit note is issued YYYY-MM-DD. If the Date element
          is not specified then it will default to the current date based on the
          timezone setting of the organisation
        format: date
        type: string
      FullyPaidOnDate:
        description: Date when credit note was fully paid
        format: date
        readOnly: true
        type: string
      HasAttachments:
        description: boolean to indicate if a credit note has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        description: How tax is applied on the line items
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        items:
          $ref: "#/definitions/LineItem"
        type: array
      Reference:
        description: ACCRECCREDIT only – additional reference number
        example: ABC123
        type: string
      RemainingCredit:
        description: The remaining credit balance on the Credit Note
        format: float
        readOnly: true
        type: number
      SentToContact:
        description: boolean to indicate if a credit note has been sent to a contact via
          the Xero app (currently read only)
        readOnly: true
        type: boolean
      Status:
        description: The Credit Note status
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - PAID
          - VOIDED
          - DELETED
        type: string
      SubTotal:
        description: The subtotal of the credit note excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: The total of the Credit Note(subtotal + total tax)
        format: float
        readOnly: true
        type: number
      TotalTax:
        description: The total tax on the credit note
        format: float
        readOnly: true
        type: number
      Type:
        description: The type of Credit Note
        enum:
          - ACCPAYCREDIT
          - ACCRECCREDIT
        type: string
      UpdatedDateUTC:
        description: UTC timestamp of last update to the credit note
        format: date-time
        readOnly: true
        type: string
    required:
      - Type
      - Contact
      - LineItems
    type: object
  CreditNoteSummary:
    properties:
      AppliedAmount:
        description: The total applied to the invoice
        format: float
        readOnly: true
        type: number
      CreditNoteID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      CreditNoteNumber:
        description: ACCRECCREDIT – Unique alpha numeric code identifying credit note
          (when missing will auto-generate from your Organisation Invoice
          Settings)
        example: CN-123
        type: string
      Date:
        description: The date the credit note is issued YYYY-MM-DD. If the Date element
          is not specified then it will default to the current date based on the
          timezone setting of the organisation
        format: date
        type: string
      Total:
        description: The total of the Credit Note(subtotal + total tax)
        format: float
        readOnly: true
        type: number
    type: object
  Currency:
    properties:
      Code:
        description: 3 letter alpha code for the currency
        example: AUD
        readOnly: true
        type: string
      Description:
        description: Name of Currency
        example: Australian Dollar
        readOnly: true
        type: string
    type: object
  Employee:
    properties:
      EmployeeID:
        description: |-
          The Xero identifier for an employee
          e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9
        format: uuid
        readOnly: true
        type: string
      ExternalLink:
        allOf:
          - description: >-
              Link to an external resource, for example, an employee record in an
              external system. You can specify the URL element.

              The description of the link is auto-generated in the form “Go to <App name>”. <App name> refers to the Xero application name that is making the API call.
          - $ref: "#/definitions/ExternalLink"
        type: object
      FirstName:
        description: First name of an employee (max length = 255)
        example: Adam
        maxLength: 255
        type: string
      LastName:
        description: Last name of an employee (max length = 255)
        example: Moore
        maxLength: 255
        type: string
      Status:
        description: Current status of an employee
        enum:
          - ACTIVE
          - ARCHIVED
        type: string
    required:
      - FirstName
      - LastName
    type: object
  ExpenseClaim:
    properties:
      AmountDue:
        description: The amount due to be paid for an expense claim
        format: float
        readOnly: true
        type: number
      AmountPaid:
        description: The amount still to pay for an expense claim
        format: float
        readOnly: true
        type: number
      ExpenseClaimID:
        description: Xero generated unique identifier for an expense claim
        format: uuid
        readOnly: true
        type: string
      PaymentDueDate:
        description: The date when the expense claim is due to be paid YYYY-MM-DD
        format: date
        readOnly: true
        type: string
      Payments:
        description: Payments applied to the expense claim
        items:
          $ref: "#/definitions/PaymentSummary"
        readOnly: true
        type: array
      Receipts:
        description: The Receipts in the expense claim
        items:
          $ref: "#/definitions/Receipt"
        type: array
      ReportingDate:
        description: The date the expense claim will be reported in Xero YYYY-MM-DD
        format: date
        readOnly: true
        type: string
      Status:
        description: Current status of an expense claim
        enum:
          - SUBMITTED
          - AUTHORISED
          - PAID
        type: string
      Total:
        description: The total of an expense claim being paid
        format: float
        readOnly: true
        type: number
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      User:
        $ref: "#/definitions/User"
    required:
      - User
      - Receipts
    type: object
  ExternalLink:
    properties:
      LinkType:
        description: External link types
        enum:
          - Facebook
          - GooglePlus
          - LinkedIn
          - Twitter
          - Website
        type: string
      Url:
        description: URL for service
        example: http://twitter.com/xeroapi
        type: string
    type: object
  FromBankAccount:
    properties:
      AccountID:
        description: Account identifier
        example: ae8074e0-1ac1-4b37-8546-afa9fa6ace9e
        format: uuid
        type: string
      Code:
        description: Bank account code
        example: 610
        type: string
      Name:
        description: Bank account name
        example: Savings account
        type: string
    type: object
  Invoice:
    properties:
      AmountCredited:
        description: Sum of all credit notes, over-payments and pre-payments applied to
          invoice
        format: float
        readOnly: true
        type: number
      AmountDue:
        description: Amount remaining to be paid on invoice
        format: float
        readOnly: true
        type: number
      AmountPaid:
        description: Sum of payments received for invoice
        format: float
        readOnly: true
        type: number
      Attachments:
        items:
          $ref: "#/definitions/Attachment"
        type: array
      BrandingThemeID:
        description: The identifier for the branding theme applied to the invoice
        format: uuid
        type: string
      Contact:
        $ref: "#/definitions/ContactSummary"
      CreditNotes:
        items:
          $ref: "#/definitions/CreditNoteSummary"
        type: array
      CurrencyCode:
        description: The currency that invoice has been raised in
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency invoice. If no rate is
          specified, the XE.com day rate is used.
        format: float
        type: number
      Date:
        description: Date invoice was issued YYYY-MM-DD
        format: date
        type: string
      DueDate:
        description: Date the invoice is due to be paid YYYY-MM-DD
        format: date
        type: string
      ExpectedPaymentDate:
        description: Shown on sales invoices (Accounts Receivable) when this has been set
        format: date
        type: string
      FullyPaidOnDate:
        description: The date the invoice was fully paid. Only returned on fully paid
          invoices
        format: date
        readOnly: true
        type: string
      HasAttachments:
        description: boolean to indicate if an invoice has an attachment
        readOnly: true
        type: boolean
      InvoiceID:
        description: Xero generated unique identifier for invoice
        format: uuid
        readOnly: true
        type: string
      InvoiceNumber:
        description: |
          User defined alphanumeric code for identifying invoices. 
          - Unique for ACCREC but not for ACCPAY. 
          - For ACCREC it will auto-generate when left blank. 
          - For ACCPAY it displays as Reference in the UI.
        example: INV-123
        type: string
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        $ref: "#/definitions/LineItems"
      Overpayments:
        items:
          $ref: "#/definitions/OverpaymentSummary"
        type: array
      Payments:
        items:
          $ref: "#/definitions/PaymentSummary"
        type: array
      PlannedPaymentDate:
        description: Shown on bills (Accounts Payable) when this has been set
        format: date
        type: string
      Prepayments:
        items:
          $ref: "#/definitions/PrepaymentSummary"
        type: array
      Reference:
        description: ACCREC only – additional reference number
        example: REF-123
        type: string
      SentToContact:
        default: false
        description: Boolean to set whether the invoice in the Xero app should be marked
          as “sent”. This can be set only on invoices that have been approved
        type: boolean
      Status:
        default: DRAFT
        description: The status of the invoice
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - PAID
          - VOIDED
          - DELETED
        type: string
      SubTotal:
        description: Total of invoice excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This
          will be ignored if it doesn’t equal the sum of the LineAmounts
        format: float
        readOnly: true
        type: number
      TotalDiscount:
        description: Total of discounts applied on the invoice line items
        format: float
        readOnly: true
        type: number
      Totaltax:
        description: Total tax on the invoice
        format: float
        readOnly: true
        type: number
      Type:
        description: ACCREC (for sales) or ACCPAY (for bills)
        enum:
          - ACCREC
          - ACCPAY
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      Url:
        description: URL link to a source document – shown as “Go to [appName]” in the
          Xero app
        example: https://myapp.com/INV-123
        type: string
    required:
      - Type
      - Contact
      - LineItems
    type: object
    xml:
      name: Invoice
  InvoiceSummary:
    properties:
      Contact:
        $ref: "#/definitions/ContactSummary"
      InvoiceID:
        description: Xero generated unique identifier for invoice
        format: uuid
        readOnly: true
        type: string
      InvoiceNumber:
        description: |
          User defined alphanumeric code for identifying invoices. 
          - Unique for ACCREC but not for ACCPAY. 
          - For ACCREC it will auto-generate when left blank. 
          - For ACCPAY it displays as Reference in the UI.
        example: INV-123
        type: string
      Type:
        description: The Invoice Type
        enum:
          - ACCPAY
          - ACCREC
        type: string
    type: object
    xml:
      name: Invoice
  Item:
    properties:
      Code:
        description: User defined item code
        example: ABC123
        maxLength: 30
        type: string
      Description:
        description: The sales description of the item
        example: A really cool widget
        maxLength: 4000
        type: string
      InventoryAssetAccountCode:
        description: The inventory asset account for the item. The account must be of
          type INVENTORY. The  COGSAccountCode in PurchaseDetails is also
          required to create a tracked item
        example: 630
        type: string
      IsPurchased:
        description: Boolean value, defaults to true. When IsPurchased is true the item
          is available for purchase transactions in the Xero UI. If IsPurchased
          is updated to false then PurchaseDescription and PurchaseDetails
          values will be nulled.
        type: boolean
      IsSold:
        description: Boolean value, defaults to true. When IsSold is true the item will
          be available on sales transactions in the Xero UI. If IsSold is
          updated to false then Description and SalesDetails values will be
          nulled.
        type: boolean
      IsTrackedAsInventory:
        description: True for items that are tracked as inventory. An item will be
          tracked as inventory if the InventoryAssetAccountCode and
          COGSAccountCode are set.
        readOnly: true
        type: boolean
      ItemID:
        description: The Xero identifier for an Item
        format: uuid
        readOnly: true
        type: string
      Name:
        description: The name of the item (max length = 50)
        example: Widget
        maxLength: 50
        type: string
      PurchaseDescription:
        description: The purchase description of the item
        example: A cheapo widget
        maxLength: 4000
        type: string
      PurchaseDetails:
        $ref: "#/definitions/PurchaseDetails"
      QuantityOnHand:
        description: The quantity of the item on hand
        format: float
        readOnly: true
        type: number
      SalesDetails:
        $ref: "#/definitions/SalesDetails"
      TotalCostPool:
        description: The value of the item on hand. Calculated using average cost
          accounting.
        format: float
        readOnly: true
        type: number
      UpdatedDateUTC:
        description: Last modified date in UTC format
        format: date-time
        readOnly: true
        type: string
    required:
      - Code
    type: object
  Journal:
    properties:
      CreatedDateUTC:
        description: Created date UTC format
        format: date-time
        type: string
      JournalDate:
        description: Date the journal was posted
        format: date
        type: string
      JournalID:
        description: Xero identifier
        format: uuid
        type: string
      JournalLines:
        items:
          $ref: "#/definitions/JournalLine"
        type: array
      JournalNumber:
        description: Xero generated journal number
        example: 112
        type: string
      SourceID:
        description: The identifier for the source transaction (e.g. InvoiceID)
        format: uuid
        type: string
      SourceType:
        description: The journal source type. The type of transaction that created the
          journal
        enum:
          - ACCREC
          - ACCPAY
          - ACCPAYCREDIT
          - ACCRECPAYMENT
          - ACCPAYPAYMENT
          - ARCREDITPAYMENT
          - APCREDITPAYMENT
          - CASHREC
          - CASHPAID
          - TRANSFER
          - ARPREPAYMENT
          - APPREPAYMENT
          - AROVERPAYMENT
          - APOVERPAYMENT
          - EXPCLAIM
          - EXPPAYMENT
          - MANJOURNAL
          - PAYSLIP
          - WAGEPAYABLE
          - INTEGRATEDPAYROLLPE
          - INTEGRATEDPAYROLLPT
          - EXTERNALSPENDMONEY
          - INTEGRATEDPAYROLLPTPAYMENT
          - INTEGRATEDPAYROLLCN
  JournalLine:
    properties:
      AccountCode:
        description: Account Code
        example: 200
        type: string
      Description:
        description: Description for journal line
        example: Bought a thing
        type: string
      LineAmount:
        description: Total for line. Debits are positive, credits are negative value
        format: float
        type: number
      TaxAmount:
        description: The calculated tax amount based on the TaxType and LineAmount
        format: float
        readOnly: true
        type: number
      TaxType:
        description: Used as an override if the default Tax Code for the selected
          AccountCode is not correct.
        example: NONE
        type: string
      Tracking:
        description: Optional Tracking Category. Any JournalLine can have a maximum of 2
          TrackingCategory elements.
        items:
          $ref: "#/definitions/TrackingCategory"
        type: array
  LineItem:
    properties:
      AccountCode:
        description: The account that the lineitem is being coded to
        example: 420
        type: string
      Description:
        description: Description needs to be at least 1 char long. A line item with just
          a description (i.e no unit amount or quantity) can be created by
          specifying just a <Description> element that contains at least 1
          character
        example: Travel Expenses
        type: string
      DiscountRate:
        description: Percentage discount being applied to a line item (only supported on
          ACCREC invoices – ACC PAY invoices and credit notes in Xero do not
          support discounts
        format: float
        type: number
      ItemCode:
        description: Code of the item
        example: 110
        type: string
      LineAmount:
        description: The line amount reflects the discounted price if a DiscountRate has
          been used i.e LineAmount = Quantity * Unit Amount * ((100 –
          DiscountRate)/100)
        format: float
        type: number
      LineItemID:
        description: The Xero generated identifier for a LineItem. If LineItemIDs are
          not included with line items in an update request then the line items
          are deleted and recreated.
        format: uuid
        readOnly: true
        type: string
      Quantity:
        description: LineItem Quantity
        format: float
        type: number
      TaxAmount:
        description: The tax amount is auto calculated as a percentage of the line
          amount based on the tax rate. This value can be overriden if the
          calculated TaxAmount is not correct.
        format: float
        type: number
      TaxType:
        description: Used as an override if the default Tax Code for the selected
          <AccountCode> is not correct
        type: string
      Tracking:
        $ref: "#/definitions/Tracking"
      UnitAmount:
        description: Lineitem unit amount. By default, unit amount will be rounded to
          two decimal places. You can opt in to use four decimal places by
          adding the querystring parameter unitdp=4 to your query. See the
          Rounding in Xero guide for more information.
        format: float
        type: number
    required:
      - Description
    type: object
  LineItems:
    items:
      $ref: "#/definitions/LineItem"
    type: array
  LinkedTransaction:
    properties:
      ContactID:
        description: Filter by the combination of ContactID and Status. Get all the
          linked transactions that have been assigned to a particular customer
          and have a particular status e.g. GET
          /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
        format: uuid
        type: string
      LinkedTransactionID:
        description: The Xero identifier for an Linked Transaction e.g.
          /LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9
        format: uuid
        readOnly: true
        type: string
      SourceLineItemID:
        description: The line item identifier from the source transaction.
        format: uuid
        type: string
      SourceTransactionID:
        description: Filter by the SourceTransactionID. Get all the linked transactions
          created from a particular ACCPAY invoice
        format: uuid
        type: string
      SourceTransactionTypeCode:
        description: The Type of the source tranasction. This will be ACCPAY if the
          linked transaction was created from an invoice and SPEND if it was
          created from a bank transaction.
        readOnly: true
        type: string
      Status:
        description: Filter by the combination of ContactID and Status. Get all the
          linked transactions that have been assigned to a particular customer
          and have a particular status e.g. GET
          /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
        enum:
          - DRAFT
          - APPROVED
          - ONDRAFT
          - BILLED
          - VOIDED
        readOnly: true
      TargetLineItemID:
        description: The line item identifier from the target transaction. It is
          possible to link multiple billable expenses to the same
          TargetLineItemID.
        format: uuid
        type: string
      TargetTransactionID:
        description: Filter by the TargetTransactionID. Get all the linked transactions
          allocated to a particular ACCREC invoice
        format: uuid
        type: string
      Type:
        description: This will always be BILLABLEEXPENSE. More types may be added in future.
        enum:
          - BILLABLEEXPENSE
        readOnly: true
      UpdatedDateUTC:
        description: The last modified date in UTC format
        format: date-time
        readOnly: true
        type: string
    type: object
  ManualJournal:
    properties:
      Date:
        description: Date journal was posted – YYYY-MM-DD
        format: date
        type: string
      HasAttachments:
        description: Boolean to indicate if a manual journal has an attachment
        readOnly: true
        type: boolean
      JournalID:
        description: The Xero identifier for a Manual Journal
        format: uuid
        readOnly: true
        type: string
      JournalLines:
        description: See JournalLines
        items:
          $ref: "#/definitions/JournalLine"
        type: array
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      Narration:
        description: Description of journal being posted
        example: Fixing a mistake
        type: string
      ShowOnCashBasisReports:
        description: Boolean – default is true if not specified
        type: boolean
      Status:
        description: Manual Journal Status Codes
        enum:
          - DRAFT
          - POSTED
          - DELETED
          - VOIDED
        type: string
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      Url:
        description: Url link to a source document – shown as “Go to [appName]” in the
          Xero app
        example: https://myaapp.com/journal/123
        type: string
    required:
      - Narration
      - JournalLines
    type: object
  OnlineInvoice:
    properties:
      OnlineInvoiceUrl:
        description: The URL to view the online invoice
        example: https://in.xero.com/U56hvGos5l9yHoeNITNjmqCVMVFUuDQyJMDwy41X
        readOnly: true
        type: string
  Organisation:
    properties:
      APIKey:
        description: Display a unique key used for Xero-to-Xero transactions
        example: HJSONEEWGDGATQAL1VSWAZ0XHME0DV
        type: string
      Addresses:
        description: Address details for organisation
        items:
          $ref: "#/definitions/Address"
        type: array
      BaseCurrency:
        description: Default currency for organisation. See ISO 4217 Currency Codes
        example: AUD
        type: string
      CountryCode:
        description: Country code for organisation. See ISO 3166-2 Country Codes
        example: AU
        type: string
      CreatedDateUTC:
        description: Timestamp when the organisation was created in Xero
        format: date-time
        type: string
      DefaultPurchasesTax:
        description: The default for LineAmountTypes on purchase transactions
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      DefaultSalesTax:
        description: The default for LineAmountTypes on sales transactions
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      EndOfYearLockDate:
        description: Shown if set
        format: date
        type: string
      ExternalLinks:
        description: Organisation profile links for popular services such as Facebook,
          Twitter, GooglePlus and LinkedIn. You can also add link to your
          website here. Shown if Organisation settings  is updated in Xero. See
          ExternalLinks below
        items:
          $ref: "#/definitions/ExternalLink"
        type: array
      FinancialYearEndDay:
        description: Calendar day e.g. 0-31
        example: 30
        type: string
      FinancialYearEndMonth:
        description: Calendar Month e.g. 1-12
        example: 6
        type: string
      IsDemoCompany:
        description: Boolean to describe if organisation is a demo company.
        type: boolean
      LegalName:
        description: Organisation name shown on Reports
        example: My Awesome Company Pty Ltd
        type: string
      LineOfBusiness:
        description: Description of business type as defined in Organisation settings
        example: Dairy Cattle Farming
        type: string
      Name:
        description: Display name of organisation shown in Xero
        example: My Awesome Company
        type: string
      OrganisationEntityType:
        description: Organisation Type
        enum:
          - COMPANY
          - CHARITY
          - CLUBSOCIETY
          - PARTNERSHIP
          - PRACTICE
          - PERSON
          - SOLETRADER
          - TRUST
        type: string
      OrganisationStatus:
        description: Will be set to ACTIVE if you can connect to organisation via the
          Xero API
        enum:
          - ACTIVE
        type: string
      OrganisationType:
        description: Organisation Type
        enum:
          - COMPANY
          - CHARITY
          - CLUBSOCIETY
          - PARTNERSHIP
          - PRACTICE
          - PERSON
          - SOLETRADER
          - TRUST
        type: string
      PaymentTerms:
        allOf:
          - description: Default payment terms for the organisation if set Terms below
          - $ref: "#/definitions/PaymentTerms"
      PaysTax:
        description: Boolean to describe if organisation is registered with a local tax
          authority i.e. true, false
        type: boolean
      PeriodLockDate:
        description: Shown if set
        format: date
        type: string
      Phones:
        description: Phones details for organisation
        items:
          $ref: "#/definitions/Phone"
        type: array
      RegistrationNumber:
        description: Shows for New Zealand, Australian and UK organisations
        example: 11111111138
        type: string
      SalesTaxBasis:
        description: The accounting basis used for tax returns
        example: CASH
        type: string
      SalesTaxPeriod:
        description: The frequency with which tax returns are processed. See Sales Tax
          Period
        example: MONTHLY
        type: string
      ShortCode:
        description: A unique identifier for the organisation. Used for deep linking
          into Xero.
        example: "!YDrVg"
        type: string
      TaxNumber:
        description: Shown if set. Displays in the Xero UI as Tax File Number (AU), GST
          Number (NZ), VAT Number (UK) and Tax ID Number (US & Global).
        example: 53003086616
        type: string
      Timezone:
        description: Timezone specifications
        example: AUSEASTERNSTANDARDTIME
        type: string
      Version:
        description: Version Types
        enum:
          - AU
          - NZ
          - GLOBAL
          - UK
          - US
          - AUONRAMP
          - NZONRAMP
          - GLOBALONRAMP
          - UKONRAMP
          - USONRAMP
        type: string
  Overpayment:
    properties:
      Allocations:
        description: See Allocations
        items:
          $ref: "#/definitions/Allocation"
        type: array
      Contact:
        $ref: "#/definitions/ContactSummary"
      CurrencyCode:
        description: Currency used for the overpayment
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency overpayment. If no rate is
          specified, the XE.com day rate is used
        format: float
        type: number
      Date:
        description: The date the overpayment is created YYYY-MM-DD
        format: date
        type: string
      HasAttachments:
        description: boolean to indicate if a overpayment has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        description: Overpayment Line Items
        items:
          $ref: "#/definitions/LineItem"
        type: array
      OverpaymentID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      Payments:
        items:
          $ref: "#/definitions/PaymentSummary"
        type: array
      RemainingCredit:
        description: The remaining credit balance on the overpayment
        format: float
        readOnly: true
        type: number
      Status:
        description: Overpayment Status
        enum:
          - AUTHORISED
          - PAID
          - VOIDED
        type: string
      SubTotal:
        description: The subtotal of the overpayment excluding taxes
        format: float
        type: number
      Total:
        description: The total of the overpayment (subtotal + total tax)
        format: float
        type: number
      TotalTax:
        description: The total tax on the overpayment
        format: float
        type: number
      Type:
        description: The Overpayment Type
        enum:
          - RECEIVE-OVERPAYMENT
          - SPEND-OVERPAYMENT
        type: string
      UpdatedDateUTC:
        description: UTC timestamp of last update to the overpayment
        format: date-time
        readOnly: true
        type: string
    type: object
  OverpaymentSummary:
    properties:
      AppliedAmount:
        description: The total applied to the invoice
        format: float
        readOnly: true
        type: number
      Date:
        description: The date the overpayment was made YYYY-MM-DD
        format: date
        type: string
      OverpaymentID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      Total:
        description: The total of the Overpayment (subtotal + total tax)
        format: float
        readOnly: true
        type: number
    type: object
    xml:
      name: Overpayment
  Payment:
    properties:
      Account:
        description: The Account the payment was made from
        properties:
          AccountID:
            description: Identifier for the account
            format: uuid
            type: string
          Code:
            description: Account Code
            example: 600
            type: string
        type: object
      Amount:
        description: The amount of the payment. Must be less than or equal to the
          outstanding amount owing on the invoice
        format: float
        type: number
      CreditNote:
        $ref: "#/definitions/CreditNoteSummary"
      CurrencyRate:
        description: Exchange rate when payment is received. Only used for non base
          currency invoices and credit notes.
        format: float
        type: number
      Date:
        description: Date the payment is being made (YYYY-MM-DD)
        format: date
        type: string
      Invoice:
        $ref: "#/definitions/InvoiceSummary"
      IsReconciled:
        description: An optional parameter for the payment. A boolean indicating whether
          you would like the payment to be created as reconciled when using PUT,
          or whether a payment has been reconciled when using GET
        type: boolean
      Overpayment:
        $ref: "#/definitions/OverpaymentSummary"
      PaymentID:
        description: The Xero identifier for an Payment
        format: uuid
        readOnly: true
        type: string
      PaymentType:
        description: The Payment Type.
        enum:
          - ACCRECPAYMENT
          - ACCPAYPAYMENT
          - ARCREDITPAYMENT
          - APCREDITPAYMENT
          - AROVERPAYMENTPAYMENT
          - ARPREPAYMENTPAYMENT
          - APPREPAYMENTPAYMENT
          - APOVERPAYMENTPAYMENT
        readOnly: true
        type: string
      Prepayment:
        $ref: "#/definitions/PrepaymentSummary"
      Reference:
        description: An optional description for the payment
        example: Direct Debit
        type: string
      Status:
        description: The status of the payment.
        enum:
          - AUTHORISED
          - DELETED
        type: string
      UpdatedDateUTC:
        description: UTC timestamp of last update to the payment
        format: date-time
        readOnly: true
        type: string
    type: object
  PaymentSummary:
    properties:
      Amount:
        description: The amount of the payment. Must be less than or equal to the
          outstanding amount owing on the invoice
        format: float
        type: number
      Date:
        description: Date the payment is being made (YYYY-MM-DD)
        format: date
        type: string
      PaymentID:
        description: The Xero identifier for an Payment
        format: uuid
        readOnly: true
        type: string
    type: object
    xml:
      name: Payment
  PaymentTerms:
    items:
      properties:
        Bills:
          properties:
            Days:
              example: 1
              type: string
            Type:
              enum:
                - DAYSAFTERBILLDATE
                - DAYSAFTERBILLMONTH
                - OFCURRENTMONTH
                - OFFOLLOWINGMONTH
              example: OFFOLLOWINGMONTH
              type: string
          type: object
        Sales:
          properties:
            Days:
              example: 30
              type: string
            Type:
              enum:
                - DAYSAFTERBILLDATE
                - DAYSAFTERBILLMONTH
                - OFCURRENTMONTH
                - OFFOLLOWINGMONTH
              example: DAYSAFTERBILLDATE
              type: string
          type: object
    type: array
  Phone:
    properties:
      PhoneAreaCode:
        example: 3
        maxLength: 10
        type: string
      PhoneCountryCode:
        example: 1
        maxLength: 20
        type: string
      PhoneNumber:
        example: 9885 4589
        maxLength: 50
        type: string
      PhoneType:
        description: The phone type
        enum:
          - DEFAULT
          - DDI
          - MOBILE
          - FAX
        example: DDI
        type: string
    type: object
  Phones:
    items:
      $ref: "#/definitions/Phone"
    type: array
  Prepayment:
    properties:
      Allocations:
        items:
          $ref: "#/definitions/Allocation"
        type: array
      Contact:
        $ref: "#/definitions/ContactSummary"
      CurrencyCode:
        description: Currency used for the prepayment
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency prepayment. If no rate is
          specified, the XE.com day rate is used
        format: float
        type: number
      Date:
        description: The date the prepayment is created YYYY-MM-DD
        format: date
        type: string
      HasAttachments:
        description: boolean to indicate if a prepayment has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        items:
          $ref: "#/definitions/LineItem"
        type: array
      PrepaymentID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      RemainingCredit:
        description: The remaining credit balance on the prepayment
        format: float
        readOnly: true
        type: number
      Status:
        description: Prepayment Status Codes
        enum:
          - AUTHORISED
          - PAID
          - VOIDED
        type: string
      SubTotal:
        description: The subtotal of the prepayment excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: The total of the prepayment(subtotal + total tax)
        format: float
        readOnly: true
        type: number
      TotalTax:
        description: The total tax on the prepayment
        format: float
        readOnly: true
        type: number
      Type:
        description: Prepayment Types
        enum:
          - RECEIVE-PREPAYMENT
          - SPEND-PREPAYMENT
        type: string
      UpdatedDateUTC:
        description: UTC timestamp of last update to the prepayment
        format: date-time
        readOnly: true
        type: string
    type: object
  PrepaymentSummary:
    properties:
      AppliedAmount:
        description: The total applied to the invoice
        format: float
        readOnly: true
        type: number
      Date:
        description: The date the prepayment is issued YYYY-MM-DD.
        format: date
        type: string
      PrepaymentID:
        description: Xero generated unique identifier
        format: uuid
        readOnly: true
        type: string
      Total:
        description: The total of the Prepayment (subtotal + total tax)
        format: float
        readOnly: true
        type: number
    type: object
    xml:
      name: Prepayment
  PurchaseDetails:
    properties:
      AccountCode:
        description: Default account code to be used for purchase of non-tracked items.
          Not applicable to the purchase details of tracked items
        example: 420
        type: string
      COGSAccountCode:
        description: Cost of goods sold account. Only applicable to the purchase details
          of tracked items.
        example: 420
        type: string
      TaxType:
        description: Used as an override if the default Tax Code for the selected
          AccountCode is not correct.
        example: NONE
        type: string
      UnitPrice:
        description: Unit Price of the item. By default UnitPrice is rounded to two
          decimal places. You can use 4 decimal places by adding the unitdp=4
          querystring parameter to your request.
        format: float
        type: number
    type: object
  PurchaseOrder:
    properties:
      AttentionTo:
        description: The person that the delivery is going to
        example: Adam
        type: string
      BrandingThemeID:
        description: See BrandingThemes
        format: uuid
        type: string
      Contact:
        $ref: "#/definitions/ContactSummary"
      CurrencyCode:
        description: The currency that purchase order has been raised in
        example: AUD
        type: string
      CurrencyRate:
        description: The currency rate for a multicurrency purchase order. As no rate
          can be specified, the XE.com day rate is used.
        format: float
        readOnly: true
        type: number
      Date:
        description: Date purchase order was issued – YYYY-MM-DD. If the Date element is
          not specified then it will default to the current date based on the
          timezone setting of the organisation
        format: date
        type: string
      DeliveryAddress:
        description: The address the goods are to be delivered to
        example: 23 Main Street, Central City, Marineville,1234
        type: string
      DeliveryDate:
        description: Date the goods are to be delivered – YYYY-MM-DD
        format: date
        type: string
      DeliveryInstructions:
        description: A free text feild for instructions (500 characters max)
        example: Don't forget the secret knock
        type: string
      ExpectedArrivalDate:
        description: The date the goods are expected to arrive.
        format: date
        type: string
      HasAttachments:
        description: boolean to indicate if a purchase order has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        items:
          $ref: "#/definitions/LineItem"
        type: array
      PurchaseOrderID:
        description: Xero generated unique identifier for purchase order
        format: uuid
        readOnly: true
        type: string
      PurchaseOrderNumber:
        description: Unique alpha numeric code identifying purchase order (when missing
          will auto-generate from your Organisation Invoice Settings)
        example: PO-123
        type: string
      Reference:
        description: Additional reference number
        example: ABC123
        type: string
      SentToContact:
        default: false
        description: Boolean to set whether the purchase order should be marked as
          “sent”. This can be set only on purchase orders that have been
          approved or billed
        type: boolean
      Status:
        description: Purchase Order Status Codes
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - BILLED
          - DELETED
        type: string
      SubTotal:
        description: Total of purchase order excluding taxes
        format: float
        readOnly: true
        type: number
      Telephone:
        description: The phone number for the person accepting the delivery
        example: 0800 1234 5678
        type: string
      Total:
        description: Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)
        format: float
        readOnly: true
        type: number
      TotalDiscount:
        description: Total of discounts applied on the purchase order line items
        format: float
        readOnly: true
        type: number
      TotalTax:
        description: Total tax on purchase order
        format: float
        readOnly: true
        type: number
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
    required:
      - Contact
      - LineItems
    type: object
  PurchasesTrackingCategories:
    items:
      $ref: "#/definitions/PurchasesTrackingCategory"
    type: array
  PurchasesTrackingCategory:
    properties:
      Name:
        type: string
      Option:
        type: string
      TrackingCategoryID:
        format: uuid
        type: string
    type: object
  Receipt:
    properties:
      Contact:
        $ref: "#/definitions/ContactSummary"
      Date:
        description: Date of receipt – YYYY-MM-DD
        format: date
        type: string
      HasAttachments:
        description: boolean to indicate if a receipt has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      Lineitems:
        items:
          $ref: "#/definitions/LineItem"
        type: array
      ReceiptID:
        description: Xero generated unique identifier for receipt
        format: uuid
        readOnly: true
        type: string
      ReceiptNumber:
        description: Xero generated sequence number for receipt in current claim for a
          given user
        readOnly: true
        type: string
      Reference:
        description: Additional reference number
        example: ABC123
        type: string
      Status:
        description: Current status of receipt
        enum:
          - DRAFT
          - SUBMITTED
          - AUTHORISED
          - DECLINED
        type: string
      SubTotal:
        description: Total of receipt excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: Total of receipt tax inclusive (i.e. SubTotal + TotalTax)
        format: float
        readOnly: true
        type: number
      TotalTax:
        description: Total tax on receipt
        format: float
        readOnly: true
        type: number
      UpdatedDateUTC:
        description: Last modified date UTC format
        format: date-time
        readOnly: true
        type: string
      Url:
        description: URL link to a source document – shown as “Go to [appName]” in the
          Xero app
        example: https://myapp.com/receipt/123
        type: string
      User:
        $ref: "#/definitions/User"
    required:
      - Date
      - Contact
      - Lineitems
      - User
    type: object
  RepeatingInvoice:
    properties:
      BrandingThemeID:
        description: Branding Theme to be applied to the invoice
        format: uuid
        type: string
      Contact:
        $ref: "#/definitions/ContactSummary"
      CurrencyCode:
        description: The currency that invoice has been raised in
        example: AUD
        type: string
      HasAttachments:
        description: boolean to indicate if an invoice has an attachment
        readOnly: true
        type: boolean
      LineAmountTypes:
        default: Exclusive
        description: Line amounts are exclusive of tax by default if you don’t specify
          this element
        enum:
          - Inclusive
          - Exclusive
          - NoTax
        type: string
      LineItems:
        items:
          $ref: "#/definitions/LineItem"
        type: array
      Reference:
        description: ACCREC only – additional reference number
        example: ABC123
        type: string
      RepeatingInvoiceID:
        description: Xero generated unique identifier for repeating invoice template
        format: uuid
        readOnly: true
        type: string
      Schedule:
        $ref: "#/definitions/Schedule"
      Status:
        description: "One of the following : DRAFT or AUTHORISED"
        enum:
          - DRAFT
          - AUTHORISED
        type: string
      SubTotal:
        description: Total of invoice excluding taxes
        format: float
        readOnly: true
        type: number
      Total:
        description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)
        format: float
        readOnly: true
        type: number
      TotalTax:
        description: Total tax on invoice
        format: float
        readOnly: true
        type: number
      Type:
        description: Invoice Types
        enum:
          - ACCPAY
          - ACCREC
        type: string
  Report:
    properties:
      ReportDate:
        description: The date of the report
        example: 10 November 2017
        type: string
      ReportID:
        description: Identifier of the report
        example: BalanceSheet
        type: string
      ReportName:
        description: Name of the report
        example: Balance Sheet
        type: string
      ReportTitles:
        description: The titles of the report
        example: Balance Sheet
        items:
          type: string
        type: array
      ReportType:
        description: Type of report
        example: BalanceSheet
        type: string
      Rows:
        description: The rows of the report that contain the data (including header rows)
        items:
          properties:
            Cells:
              items:
                properties:
                  Value:
                    description: Header row labels
                    example: 30 Nov 2017
                    type: string
                type: object
              type: array
            RowType:
              description: The type of row
              enum:
                - Header
                - Section
                - Row
                - SummaryRow
            Rows:
              description: The rows of the report (including header rows)
              items:
                properties:
                  Cells:
                    description: The cells that contain the data of the report
                    items:
                      properties:
                        Attributes:
                          description: AccountID that the Value relates to
                          items:
                            properties:
                              Id:
                                description: Always 'account'
                                enum:
                                  - account
                              Value:
                                description: The AccountID that the Value relates to
                                format: uuid
                                type: string
                            type: object
                          type: array
                        Value:
                          description: The data displayed in the report
                          example: Business Account
                          type: string
                      type: object
                    type: array
                  RowType:
                    description: The type of row
                    enum:
                      - Row
                      - SummaryRow
                type: object
              type: array
            Title:
              description: The title of the row
              example: Assets
              type: string
          type: object
        type: array
      UpdatedDateUTC:
        description: The date and time the report was generated
        format: date-time
        type: string
  ReportSummary:
    properties:
      ReportDate:
        description: The date of the report
        example: 1 Oct 2017 to 31 Oct 2017
        type: string
      ReportID:
        description: Identifier of the report
        format: uuid
        type: string
      ReportName:
        description: Name of the report
        example: Activity Statement
        type: string
      ReportType:
        description: Type of report
        example: ActivityStatement
        type: string
      UpdatedDateUTC:
        description: The date and time the report was generated
        format: date-time
        type: string
  SalesDetails:
    properties:
      AccountCode:
        description: Default account code to be used for sale.
        example: 200
        type: string
      TaxType:
        description: Used as an override if the default Tax Code for the selected
          AccountCode is not correct .
        example: NONE
        type: string
      UnitPrice:
        description: Unit Price of the item. By default UnitPrice is rounded to two
          decimal places. You can use 4 decimal places by adding the unitdp=4
          querystring parameter to your request.
        format: float
        type: number
    type: object
  SalesTrackingCategories:
    items:
      $ref: "#/definitions/SalesTrackingCategory"
    type: array
  SalesTrackingCategory:
    properties:
      Name:
        type: string
      Option:
        type: string
      TrackingCategoryID:
        format: uuid
        type: string
    type: object
  Schedule:
    properties:
      DueDate:
        description: Integer used with due date type e.g 20 (of following month), 31 (of
          current month)
        type: integer
      DueDateType:
        description: Used with due date to describe when the invoice is due
        enum:
          - DAYSAFTERBILLDATE
          - DAYSAFTERBILLMONTH
          - OFCURRENTMONTH
          - OFFOLLOWINGMONTH
        example: DAYSAFTERBILLDATE
      EndDate:
        description: Invoice end date – only returned if the template has an end date set
        format: date
        type: string
      NextScheduledDate:
        description: The calendar date of the next invoice in the schedule to be generated
        format: date
        type: string
      Period:
        description: Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)
        type: integer
      StartDate:
        description: Date the first invoice of the current version of the repeating
          schedule was generated (changes when repeating invoice is edited)
        format: date
        type: string
      Unit:
        description: "One of the following : WEEKLY or MONTHLY"
        type: string
  TaxComponent:
    properties:
      IsCompound:
        default: false
        description: Boolean to describe if Tax rate is compounded.Learn more
        type: boolean
      IsNonRecoverable:
        default: false
        description: Determines if this tax component can be recovered
        type: boolean
      Name:
        description: Name of Tax Component
        example: City Tax
        type: string
      Rate:
        description: Tax Rate (up to 4dp)
        format: float
        type: number
  TaxRate:
    properties:
      CanApplyToAssets:
        description: "Boolean to describe if tax rate can be used for asset accounts "
        type: boolean
      CanApplyToEquity:
        description: "Boolean to describe if tax rate can be used for equity accounts "
        type: boolean
      CanApplyToExpenses:
        description: "Boolean to describe if tax rate can be used for expense accounts "
        type: boolean
      CanApplyToLiabilities:
        description: Boolean to describe if tax rate can be used for liability accounts
        type: boolean
      CanApplyToRevenue:
        description: Boolean to describe if tax rate can be used for revenue accounts
        type: boolean
      DisplayTaxRate:
        description: Tax Rate (decimal to 4dp) e.g 12.5000
        format: float
        readOnly: true
        type: number
      EffectiveRate:
        description: Effective Tax Rate (decimal to 4dp) e.g 12.5000
        format: float
        readOnly: true
        type: number
      Name:
        description: Name of tax rate
        example: Sales Tax
        type: string
      ReportTaxType:
        description: See ReportTaxTypes
        type: string
      Status:
        description: Status Codes
        enum:
          - ACTIVE
          - DELETED
          - ARCHIVED
        type: string
      TaxComponents:
        items:
          $ref: "#/definitions/TaxComponent"
        type: array
      TaxType:
        description: Tax Types – can only be used as the identifier on update calls
        example: TAX001
        type: string
    required:
      - Name
      - TaxComponents
    type: object
  TaxReport:
    properties:
      Attributes:
        properties:
          ReportAttribute:
            description: The attributes of the report (AU BAS Report only)
            items:
              properties:
                Description:
                  description: The description of the field
                  example: From
                  type: string
                Name:
                  description: The identifier for the field
                  example: fromDate
                  type: string
                Value:
                  description: The value of the field
                  example: 2011-11-01T00:00:00.000Z
                  type: string
              type: object
            type: array
        type: object
      Fields:
        properties:
          ReportField:
            description: The report fields that contain useful data
            items:
              properties:
                Description:
                  description: The description of the field
                  example: Total salary, wages and other payments
                  type: string
                FieldID:
                  description: The identifier for the field
                  example: W1
                  type: string
                Value:
                  description: The value of the field
                  example: 500
                  type: string
              type: object
            type: array
        type: object
      ReportDate:
        description: The date of the report
        example: 10 November 2017
        type: string
      ReportID:
        description: Identifier of the report
        format: uuid
        type: string
      ReportName:
        description: Name of the report
        example: Activity Statement
        type: string
      ReportType:
        description: Type of report
        example: SalesTaxReturn
        type: string
      UpdatedDateUTC:
        description: The date and time the report was generated
        format: date-time
        type: string
  ToBankAccount:
    properties:
      AccountID:
        description: Account identifier
        format: uuid
        type: string
      Code:
        description: Bank account code
        example: 610
        type: string
      Name:
        description: Bank account name
        example: Savings account
        type: string
    type: object
  Tracking:
    properties:
      TrackingCategory:
        items:
          properties:
            Name:
              description: The name of the tracking category
              example: Region
              type: string
            Option:
              description: The name of the tracking option
              example: North
              type: string
            TrackingCategoryID:
              description: The identifier for the tracking category
              format: uuid
              type: string
        type: array
    type: object
  TrackingCategory:
    properties:
      Name:
        description: The name of the tracking category e.g. Department, Region (max
          length = 100)
        example: Region
        maxLength: 100
        type: string
      Options:
        items:
          $ref: "#/definitions/TrackingOption"
        type: array
      Status:
        description: The status of a tracking category
        enum:
          - ACTIVE
          - ARCHIVED
        type: string
      TrackingCategoryID:
        description: The Xero identifier for a tracking categorye.g.
          297c2dc5-cc47-4afd-8ec8-74990b8761e9
        format: uuid
        type: string
    type: object
  TrackingOption:
    properties:
      Name:
        description: The name of the tracking option e.g. Marketing, East (max length = 50)
        example: North
        maxLength: 50
        type: string
      Status:
        description: The status of a tracking option
        enum:
          - ACTIVE
          - ARCHIVED
        type: string
      TrackingOptionID:
        description: The Xero identifier for a tracking optione.g.
          ae777a87-5ef3-4fa0-a4f0-d10e1f13073a
        format: uuid
        type: string
    type: object
  User:
    properties:
      EmailAddress:
        description: Email address of user
        example: john@smith.com
        type: string
      FirstName:
        description: First name of user
        example: John
        type: string
      IsSubscriber:
        description: Boolean to indicate if user is the subscriber
        type: boolean
      LastName:
        description: Last name of user
        example: Smith
        type: string
      OrganisationRole:
        description: User role
        enum:
          - READONLY
          - INVOICEONLY
          - STANDARD
          - FINANCIALADVISER
          - MANAGEDCLIENT
          - CASHBOOKCLIENT
        type: string
      UpdatedDateUTC:
        description: Timestamp of last change to user
        format: date-time
        type: string
      UserID:
        description: Xero identifier
        format: uuid
        type: string
    type: object
