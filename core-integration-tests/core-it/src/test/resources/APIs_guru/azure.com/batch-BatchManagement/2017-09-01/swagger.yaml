swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  title: BatchManagement
  version: '2017-09-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-ms-code-generation-settings:
    name: BatchManagementClient
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/batch/resource-manager/Microsoft.Batch/stable/2017-09-01/BatchManagement.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: batch-BatchManagement
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  AccountNameParameter:
    description: The name of the Batch account.
    in: path
    maxLength: 24
    minLength: 3
    name: accountName
    pattern: '^[-\w\._]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ApiVersionParameter:
    description: The API version to be used with the HTTP request.
    in: query
    name: api-version
    required: true
    type: string
  CertificateNameParameter:
    description: 'The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.'
    in: path
    maxLength: 45
    minLength: 5
    name: certificateName
    pattern: '^[\w]+-[\w]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  PoolNameParameter:
    description: The pool name. This must be unique within the account.
    in: path
    maxLength: 64
    minLength: 1
    name: poolName
    pattern: '^[a-zA-Z0-9_-]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ResourceGroupNameParameter:
    description: The name of the resource group that contains the Batch account.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  /providers/Microsoft.Batch/operations:
    get:
      description: Lists available operations for the Microsoft.Batch provider
      operationId: Operations_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the list of available operations.
          schema:
            $ref: '#/definitions/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.Batch/batchAccounts':
    get:
      description: Gets information about the Batch accounts associated with the subscription.
      operationId: BatchAccount_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of Batch account entities associated with the subscription.
          schema:
            $ref: '#/definitions/BatchAccountListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountList:
          parameters:
            api-version: '2017-09-01'
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                    location: japaneast
                    name: sampleacct
                    properties:
                      accountEndpoint: sampleacct.japaneast.batch.azure.com
                      activeJobAndJobScheduleQuota: 20
                      autoStorage:
                        lastKeySync: '2016-03-10T23:48:38.9878479Z'
                        storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                      dedicatedCoreQuota: 20
                      lowPriorityCoreQuota: 20
                      poolAllocationMode: BatchService
                      poolQuota: 20
                      provisioningState: Succeeded
                    type: Microsoft.Batch/batchAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/checkNameAvailability':
    post:
      description: Checks whether the Batch account name is available in the specified region.
      operationId: Location_CheckNameAvailability
      parameters:
        - description: The desired region for the name check.
          in: path
          name: locationName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
        - description: Properties needed to check the availability of a name.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: Success. Returns details about whether a Batch account name is available.
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      x-ms-examples:
        LocationCheckNameAvailability_AlreadyExists:
          parameters:
            api-version: '2017-09-01'
            locationName: japaneast
            parameters:
              name: existingaccountname
              type: Microsoft.Batch/batchAccounts
            subscriptionId: subid
          responses:
            '200':
              body:
                message: An account named 'existingaccountname' is already in use.
                nameAvailable: false
                reason: AlreadyExists
        LocationCheckNameAvailability_Available:
          parameters:
            api-version: '2017-09-01'
            locationName: japaneast
            parameters:
              name: newaccountname
              type: Microsoft.Batch/batchAccounts
            subscriptionId: subid
          responses:
            '200':
              body:
                nameAvailable: true
  '/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/quotas':
    get:
      description: Gets the Batch service quotas for the specified subscription at the given location.
      operationId: Location_GetQuotas
      parameters:
        - description: The region for which to retrieve Batch service quotas.
          in: path
          name: locationName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch service quotas for the subscription in the specified location.
          schema:
            $ref: '#/definitions/BatchLocationQuota'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Location
      x-ms-examples:
        LocationGetQuotas:
          parameters:
            api-version: '2017-09-01'
            locationName: japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                accountQuota: 1
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts':
    get:
      description: Gets information about the Batch accounts associated with the specified resource group.
      operationId: BatchAccount_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of Batch account entities associated with the resource group.
          schema:
            $ref: '#/definitions/BatchAccountListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountListByResourceGroup:
          parameters:
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                    location: japaneast
                    name: sampleacct
                    properties:
                      accountEndpoint: sampleacct.japaneast.batch.azure.com
                      activeJobAndJobScheduleQuota: 20
                      autoStorage:
                        lastKeySync: '2016-03-10T23:48:38.9878479Z'
                        storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                      dedicatedCoreQuota: 20
                      lowPriorityCoreQuota: 20
                      poolAllocationMode: BatchService
                      poolQuota: 20
                      provisioningState: Succeeded
                    type: Microsoft.Batch/batchAccounts
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}':
    delete:
      description: Deletes the specified Batch account.
      operationId: BatchAccount_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the asynchronous operation.
              type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
              format: int32
              type: integer
        '204':
          description: NoContent -- account does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountDelete:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200': {}
            '202': {}
            '204': {}
      x-ms-long-running-operation: true
    get:
      description: Gets information about the specified Batch account.
      operationId: BatchAccount_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          schema:
            $ref: '#/definitions/BatchAccount'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountGet:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                location: japaneast
                name: sampleacct
                properties:
                  accountEndpoint: sampleacct.japaneast.batch.azure.com
                  activeJobAndJobScheduleQuota: 20
                  autoStorage:
                    lastKeySync: '2016-03-10T23:48:38.9878479Z'
                    storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                  dedicatedCoreQuota: 20
                  lowPriorityCoreQuota: 20
                  poolAllocationMode: BatchService
                  poolQuota: 20
                  provisioningState: Succeeded
                type: Microsoft.Batch/batchAccounts
    patch:
      description: Updates the properties of an existing Batch account.
      operationId: BatchAccount_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: Additional parameters for account update.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/BatchAccountUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          schema:
            $ref: '#/definitions/BatchAccount'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountUpdate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                autoStorage:
                  storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                location: japaneast
                name: sampleacct
                properties:
                  accountEndpoint: sampleacct.japaneast.batch.azure.com
                  activeJobAndJobScheduleQuota: 20
                  autoStorage:
                    lastKeySync: '2016-03-10T23:48:38.9878479Z'
                    storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                  dedicatedCoreQuota: 20
                  lowPriorityCoreQuota: 20
                  poolAllocationMode: BatchService
                  poolQuota: 20
                  provisioningState: Succeeded
                type: Microsoft.Batch/batchAccounts
    put:
      description: Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.
      operationId: BatchAccount_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - description: 'A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.'
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          pattern: '^[-\w\._]+$'
          required: true
          type: string
        - description: Additional parameters for account creation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/BatchAccountCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account entity.
          schema:
            $ref: '#/definitions/BatchAccount'
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the asynchronous operation.
              type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.
              format: int32
              type: integer
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountCreate_BYOS:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              location: japaneast
              properties:
                autoStorage:
                  storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                keyVaultReference:
                  id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.KeyVault/vaults/sample
                  url: 'http://sample.vault.azure.net/'
                poolAllocationMode: UserSubscription
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                location: japaneast
                name: sampleacct
                properties:
                  accountEndpoint: sampleacct.japaneast.batch.azure.com
                  activeJobAndJobScheduleQuota: 20
                  autoStorage:
                    lastKeySync: '2016-03-10T23:48:38.9878479Z'
                    storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                  dedicatedCoreQuota: 20
                  keyVaultReference:
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.KeyVault/vaults/sample
                    url: 'http://sample.vault.azure.net/'
                  lowPriorityCoreQuota: 20
                  poolAllocationMode: UserSubscription
                  poolQuota: 20
                  provisioningState: Succeeded
                type: Microsoft.Batch/batchAccounts
            '202': {}
        BatchAccountCreate_Default:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              location: japaneast
              properties:
                autoStorage:
                  storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
                location: japaneast
                name: sampleacct
                properties:
                  accountEndpoint: sampleacct.japaneast.batch.azure.com
                  activeJobAndJobScheduleQuota: 20
                  autoStorage:
                    lastKeySync: '2016-03-10T23:48:38.9878479Z'
                    storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
                  dedicatedCoreQuota: 20
                  lowPriorityCoreQuota: 20
                  poolAllocationMode: BatchService
                  poolQuota: 20
                  provisioningState: Succeeded
                type: Microsoft.Batch/batchAccounts
            '202': {}
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications':
    get:
      description: Lists all of the applications in the specified account.
      operationId: Application_List
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The maximum number of items to return in the response.
          format: int32
          in: query
          name: maxresults
          required: false
          type: integer
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of the application entities associated with the specified account.
          schema:
            $ref: '#/definitions/ListApplicationsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Application
      x-ms-examples:
        ApplicationList:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - allowUpdates: false
                    defaultVersion: '1'
                    displayName: myAppName
                    id: app1
                    packages:
                      - format: zip
                        lastActivationTime: '2017-06-27T18:48:09.9330991Z'
                        state: Active
                        version: '1'
                  - allowUpdates: false
                    defaultVersion: '1'
                    displayName: myAppName
                    id: app2
                    packages:
                      - format: zip
                        lastActivationTime: '2017-06-27T18:48:09.9330991Z'
                        state: Active
                        version: '1'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}':
    delete:
      description: Deletes an application.
      operationId: Application_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Application
      x-ms-examples:
        ApplicationDelete:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '204': {}
    get:
      description: Gets information about the specified application.
      operationId: Application_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the application entity.
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Application
      x-ms-examples:
        ApplicationGet:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                allowUpdates: false
                defaultVersion: '1'
                displayName: myAppName
                id: app1
                packages:
                  - format: zip
                    id: app1
                    lastActivationTime: '2017-06-27T18:48:09.9330991Z'
                    state: Active
                    version: '1'
    patch:
      description: Updates settings for the specified application.
      operationId: Application_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApplicationUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Application
      x-ms-examples:
        ApplicationUpdate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            parameters:
              allowUpdates: true
              defaultVersion: '2'
              displayName: myAppName
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '204': {}
    put:
      description: Adds an application to the specified Batch account.
      operationId: Application_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: parameters
          required: false
          schema:
            $ref: '#/definitions/ApplicationCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '201':
          description: The operation was successful. The response contains the application entity.
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Application
      x-ms-examples:
        ApplicationCreate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            parameters:
              allowUpdates: false
              displayName: myAppName
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '201':
              body:
                allowUpdates: false
                displayName: myAppName
                id: app1
                packages: []
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}':
    delete:
      description: Deletes an application package record and its associated binary file.
      operationId: ApplicationPackage_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The version of the application to delete.
          in: path
          name: version
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - ApplicationPackage
      x-ms-examples:
        ApplicationPackageDelete:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
            version: '1'
          responses:
            '204': {}
    get:
      description: Gets information about the specified application package.
      operationId: ApplicationPackage_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The version of the application.
          in: path
          name: version
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the application package entity.
          schema:
            $ref: '#/definitions/ApplicationPackage'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - ApplicationPackage
      x-ms-examples:
        ApplicationPackageGet:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
            version: '1'
          responses:
            '200':
              body:
                format: zip
                id: app1
                lastActivationTime: '2017-06-27T18:48:09.9330991Z'
                state: Active
                version: '1'
    put:
      description: Creates an application package record.
      operationId: ApplicationPackage_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The version of the application.
          in: path
          name: version
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '201':
          description: The operation was successful. The response contains the application package entity.
          schema:
            $ref: '#/definitions/ApplicationPackage'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - ApplicationPackage
      x-ms-examples:
        ApplicationPackageCreate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
            version: '1'
          responses:
            '201':
              body:
                format: zip
                id: app1
                state: Active
                storageUrl: 'http://mystorage1.blob.core.windows.net/myapp?mysas'
                storageUrlExpiry: '2017-06-27T18:48:09.9330991Z'
                version: '1'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}/activate':
    post:
      description: Activates the specified application package.
      operationId: ApplicationPackage_Activate
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          type: string
        - description: The version of the application to activate.
          in: path
          name: version
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ActivateApplicationPackageParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - ApplicationPackage
      x-ms-examples:
        ApplicationPackageActivate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            applicationId: app1
            parameters:
              format: zip
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
            version: '1'
          responses:
            '204': {}
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates':
    get:
      description: Lists all of the certificates in the specified account.
      operationId: Certificate_ListByBatchAccount
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The maximum number of items to return in the response.
          format: int32
          in: query
          name: maxresults
          required: false
          type: integer
        - description: Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties under properties/ are valid for selection.
          in: query
          name: $select
          required: false
          type: string
        - description: 'OData filter expression. Valid properties for filtering are "properties/provisioningState", "properties/provisioningStateTransitionTime", "name".'
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of certificates associated with the account.
          schema:
            $ref: '#/definitions/ListCertificatesResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Certificate
      x-ms-examples:
        ListCertificates:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            maxResults: '1'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                nextLink: 'https://management.azure.com/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates?api-version=2017-06-01&$skiptoken=NPK%3D28%3A2857p428pug%2022F53A7734C947B8NRK%3D45%3Asha1-c23dc7f22edc793856a7506fe66397ccb4a33b46SM%3D5%3AFalse'
                value:
                  - etag: W/"0x8D4EDD5118668F7"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                    name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                    properties:
                      format: Pfx
                      provisioningState: Succeeded
                      provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                      publicData: MIICrjCCAZagAwI...
                      thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                      thumbprintAlgorithm: SHA1
                    type: Microsoft.Batch/batchAccounts/certificates
        ListCertificates - Filter and Select:
          parameters:
            $filter: properties/provisioningStateTransitionTime gt '2017-05-01' or properties/provisioningState eq 'Failed'
            $select: 'properties/format,properties/provisioningState'
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - etag: W/"0x8D4EDD5118668F7"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                    name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                    properties:
                      format: Pfx
                      provisioningState: Failed
                    type: Microsoft.Batch/batchAccounts/certificates
                  - etag: W/"0x8D4EDD5118572E0"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-AEB228FFB0BF67A793D61DCE263EBD16949F15A1
                    name: SHA1-AEB228FFB0BF67A793D61DCE263EBD16949F15A1
                    properties:
                      format: Cer
                      provisioningState: Failed
                    type: Microsoft.Batch/batchAccounts/certificates
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}':
    delete:
      description: Deletes the specified certificate.
      operationId: Certificate_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/CertificateNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the asynchronous operation.
              type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
              format: int32
              type: integer
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Certificate
      x-ms-examples:
        CertificateDelete:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200': {}
            '202':
              headers:
                Location: 'https://management.azure.com/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/certificateOperationResults/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E-8D4EDFF164A11C9?api-version=2017-09-01'
                Retry-After: '15'
            '204': {}
      x-ms-long-running-operation: true
    get:
      description: Gets information about the specified certificate.
      operationId: Certificate_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/CertificateNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Certificate'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Certificate
      x-ms-examples:
        Get Certificate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Pfx
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
        Get Certificate with Deletion Error:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  deleteCertificateError:
                    code: NodesReferencingCertificate
                    details:
                      - code: Nodes
                        message: 'node1, node3'
                    message: |-
                      The specified certificate is being used by the below mentioned node(s)
                      RequestId:2dc78afc-b15b-42d2-8c85-39cb61a0799e
                      Time:2017-08-28T10:22:52.8633406Z
                    target: BatchAccount
                  format: Pfx
                  previousProvisioningState: Deleting
                  previousProvisioningStateTransitionTime: '2017-07-21T00:15:25.5625498Z'
                  provisioningState: Failed
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
    patch:
      description: Updates the properties of an existing certificate.
      operationId: Certificate_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/CertificateNameParameter'
        - description: Certificate entity to update.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CertificateCreateOrUpdateParameters'
        - description: The entity state (ETag) version of the certificate to update. This value can be omitted or set to "*" to apply the operation unconditionally.
          in: header
          name: If-Match
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Certificate'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Certificate
      x-ms-examples:
        UpdateCertificate:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            parameters:
              properties:
                data: MIIJsgIBAzCCCW4GCSqGSIb3DQE...
                password: KG0UY40e...
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Pfx
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
    put:
      description: Creates a new certificate inside the specified account.
      operationId: Certificate_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/CertificateNameParameter'
        - description: Additional parameters for certificate creation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CertificateCreateOrUpdateParameters'
        - description: 'The entity state (ETag) version of the certificate to update. A value of "*" can be used to apply the operation only if the certificate already exists. If omitted, this operation will always be applied.'
          in: header
          name: If-Match
          required: false
          type: string
        - description: 'Set to ''*'' to allow a new certificate to be created, but to prevent updating an existing certificate. Other values will be ignored.'
          in: header
          name: If-None-Match
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Certificate'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Certificate
      x-ms-examples:
        CreateCertificate - Full:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            parameters:
              properties:
                data: MIIJsgIBAzCCCW4GCSqGSIb3DQE...
                format: Pfx
                password: KG0UY40e...
                thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                thumbprintAlgorithm: SHA1
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Pfx
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
        CreateCertificate - Minimal Cer:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            parameters:
              properties:
                data: MIICrjCCAZagAwI...
                format: Cer
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Cer
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
        CreateCertificate - Minimal Pfx:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            parameters:
              properties:
                data: MIIJsgIBAzCCCW4GCSqGSIb3DQE...
                password: KG0UY40e...
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD5118668F7"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Pfx
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD5118668F7"
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}/cancelDelete':
    post:
      description: 'If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.'
      operationId: Certificate_CancelDeletion
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/CertificateNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the certificate entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Certificate'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      summary: Cancels a failed deletion of a certificate from the specified account.
      tags:
        - Certificate
      x-ms-examples:
        CertificateCancelDeletion:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            certificateName: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDD513C3EDBB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/samplecct/certificates/SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                name: SHA1-0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                properties:
                  format: Pfx
                  previousProvisioningState: Failed
                  previousProvisioningStateTransitionTime: '2017-07-21T00:22:54.3299195Z'
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-07-21T01:47:38.4420202Z'
                  publicData: MIICrjCCAZagAwI...
                  thumbprint: 0A0E4F50D51BEADEAC1D35AFC5116098E7902E6E
                  thumbprintAlgorithm: SHA1
                type: Microsoft.Batch/batchAccounts/certificates
              headers:
                ETag: W/"0x8D4EDD513C3EDBB"
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/listKeys':
    post:
      description: 'This operation applies only to Batch accounts created with a poolAllocationMode of ''BatchService''. If the Batch account was created with a poolAllocationMode of ''UserSubscription'', clients cannot use access to keys to authenticate, and must use Azure Active Directory instead. In this case, getting the keys will fail.'
      operationId: BatchAccount_GetKeys
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the keys of the Batch account.
          schema:
            $ref: '#/definitions/BatchAccountKeys'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      summary: Gets the account keys for the specified Batch account.
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountGetKeys:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                accountName: sampleacct
                primary: AAAA==
                secondary: BBBB==
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools':
    get:
      description: Lists all of the pools in the specified account.
      operationId: Pool_ListByBatchAccount
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The maximum number of items to return in the response.
          format: int32
          in: query
          name: maxresults
          required: false
          type: integer
        - description: Comma separated list of properties that should be returned. e.g. "properties/provisioningState". Only top level properties under properties/ are valid for selection.
          in: query
          name: $select
          required: false
          type: string
        - description: |-
            OData filter expression. Valid properties for filtering are:

             name
             properties/allocationState
             properties/allocationStateTransitionTime
             properties/creationTime
             properties/provisioningState
             properties/provisioningStateTransitionTime
             properties/lastModified
             properties/vmSize
             properties/interNodeCommunication
             properties/scaleSettings/autoScale
             properties/scaleSettings/fixedScale
          in: query
          name: $filter
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains a list of certificates associated with the account.
          schema:
            $ref: '#/definitions/ListPoolsResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        ListPool:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - etag: W/"0x8D4EDFEBFADF4AB"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                    name: testpool
                    properties:
                      allocationState: Steady
                      allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                      applicationLicenses:
                        - app-license0
                        - app-license1
                      applicationPackages:
                        - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                          version: asdf
                      certificates:
                        - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                          storeLocation: LocalMachine
                          storeName: MY
                          visibility:
                            - RemoteUser
                      creationTime: '2017-08-28T10:22:55.9407275Z'
                      currentDedicatedNodes: 0
                      currentLowPriorityNodes: 0
                      deploymentConfiguration:
                        cloudServiceConfiguration:
                          osFamily: '4'
                          targetOSVersion: WA-GUEST-OS-4.45_201708-01
                      interNodeCommunication: Enabled
                      lastModified: '2017-08-28T10:22:55.9407275Z'
                      maxTasksPerNode: 13
                      metadata:
                        - name: metadata-1
                          value: value-1
                        - name: metadata-2
                          value: value-2
                      networkConfiguration:
                        endpointConfiguration:
                          inboundNatPools:
                            - backendPort: 12001
                              frontendPortRangeEnd: 15100
                              frontendPortRangeStart: 15000
                              name: testnat
                              networkSecurityGroupRules:
                                - access: Allow
                                  priority: 150
                                  sourceAddressPrefix: 192.100.12.45
                                - access: Deny
                                  priority: 3500
                                  sourceAddressPrefix: '*'
                              protocol: TCP
                        subnetId: /subscriptions/subid/resourceGroups/rg1234/providers/Microsoft.Network/virtualNetworks/network1234/subnets/subnet123
                      provisioningState: Succeeded
                      provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                      resizeOperationStatus:
                        errors:
                          - code: AllocationTimedout
                            message: Desired number of dedicated nodes could not be allocated as the resize timeout was reached
                        nodeDeallocationOption: TaskCompletion
                        resizeTimeout: PT8M
                        startTime: '2017-08-28T10:22:55.9407275Z'
                        targetDedicatedNodes: 6
                        targetLowPriorityNodes: 28
                      scaleSettings:
                        fixedScale:
                          resizeTimeout: PT8M
                          targetDedicatedNodes: 6
                          targetLowPriorityNodes: 28
                      startTask:
                        commandLine: cmd /c SET
                        environmentSettings:
                          - name: MYSET
                            value: '1234'
                        maxTaskRetryCount: 6
                        resourceFiles:
                          - blobSource: 'https://testaccount.blob.core.windows.net/example-blob-file'
                            fileMode: '777'
                            filePath: 'c:\temp\gohere'
                        userIdentity:
                          autoUser:
                            elevationLevel: Admin
                            scope: Pool
                        waitForSuccess: true
                      taskSchedulingPolicy:
                        nodeFillType: Pack
                      userAccounts:
                        - elevationLevel: Admin
                          linuxUserConfiguration:
                            gid: 4567
                            uid: 1234
                          name: username1
                      vmSize: STANDARD_D4
                    type: Microsoft.Batch/batchAccounts/pools
        ListPoolWithFilter:
          parameters:
            $filter: 'startswith(name, ''po'') or (properties/allocationState eq ''Steady'' and properties/provisioningStateTransitionTime lt datetime''2017-02-02'')'
            $select: 'properties/allocationState,properties/provisioningStateTransitionTime,properties/currentDedicatedNodes,properties/currentLowPriorityNodes'
            accountName: sampleacct
            api-version: '2017-09-01'
            maxResults: '50'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                value:
                  - etag: W/"0x8D4EDFEBFADF4AB"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                    name: testpool
                    properties:
                      allocationState: Steady
                      currentDedicatedNodes: 0
                      currentLowPriorityNodes: 2
                      provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                    type: Microsoft.Batch/batchAccounts/pools
                  - etag: W/"0x8D4EDFEBFADF4AB"
                    id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/pooltest
                    name: pooltest
                    properties:
                      allocationState: Resizing
                      currentDedicatedNodes: 4
                      currentLowPriorityNodes: 0
                      provisioningStateTransitionTime: '2017-08-26T10:22:55.9407275Z'
                    type: Microsoft.Batch/batchAccounts/pools
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}':
    delete:
      description: Deletes the specified pool.
      operationId: Pool_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful.
        '202':
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the asynchronous operation.
              type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
              format: int32
              type: integer
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        DeletePool:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200': {}
            '202':
              headers:
                Location: 'https://management.azure.com/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/poolOperationResults/delete-testpool-8D4EDFF164A11C9?api-version=2017-09-01'
                Retry-After: '15'
            '204': {}
      x-ms-long-running-operation: true
    get:
      description: Gets information about the specified pool.
      operationId: Pool_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Pool'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        GetPool:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  applicationLicenses:
                    - app-license0
                    - app-license1
                  applicationPackages:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                      version: asdf
                  certificates:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                      storeLocation: LocalMachine
                      storeName: MY
                      visibility:
                        - RemoteUser
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '4'
                      targetOSVersion: WA-GUEST-OS-4.45_201708-01
                  interNodeCommunication: Enabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 13
                  metadata:
                    - name: metadata-1
                      value: value-1
                    - name: metadata-2
                      value: value-2
                  networkConfiguration:
                    endpointConfiguration:
                      inboundNatPools:
                        - backendPort: 12001
                          frontendPortRangeEnd: 15100
                          frontendPortRangeStart: 15000
                          name: testnat
                          networkSecurityGroupRules:
                            - access: Allow
                              priority: 150
                              sourceAddressPrefix: 192.100.12.45
                            - access: Deny
                              priority: 3500
                              sourceAddressPrefix: '*'
                          protocol: TCP
                    subnetId: /subscriptions/subid/resourceGroups/rg1234/providers/Microsoft.Network/virtualNetworks/network1234/subnets/subnet123
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: TaskCompletion
                    resizeTimeout: PT8M
                    startTime: '2017-08-28T10:22:55.9407275Z'
                    targetDedicatedNodes: 6
                    targetLowPriorityNodes: 28
                  scaleSettings:
                    fixedScale:
                      resizeTimeout: PT8M
                      targetDedicatedNodes: 6
                      targetLowPriorityNodes: 28
                  startTask:
                    commandLine: cmd /c SET
                    environmentSettings:
                      - name: MYSET
                        value: '1234'
                    maxTaskRetryCount: 6
                    resourceFiles:
                      - blobSource: 'https://testaccount.blob.core.windows.net/example-blob-file'
                        fileMode: '777'
                        filePath: 'c:\temp\gohere'
                    userIdentity:
                      autoUser:
                        elevationLevel: Admin
                        scope: Pool
                    waitForSuccess: true
                  taskSchedulingPolicy:
                    nodeFillType: Pack
                  userAccounts:
                    - elevationLevel: Admin
                      linuxUserConfiguration:
                        gid: 4567
                        uid: 1234
                      name: username1
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
    patch:
      description: Updates the properties of an existing pool.
      operationId: Pool_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - description: 'Pool properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged.'
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Pool'
        - description: The entity state (ETag) version of the pool to update. This value can be omitted or set to "*" to apply the operation unconditionally.
          in: header
          name: If-Match
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Pool'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        UpdatePool - Enable Autoscale:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                scaleSettings:
                  autoScale:
                    formula: $TargetDedicatedNodes=34
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-29T10:22:55.9407275Z'
                  autoScaleRun:
                    evaluationTime: '2017-08-29T10:22:55.9407275Z'
                    results: $TargetDedicatedNodes=34;NodeDeallocationOption=requeue
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 12
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '5'
                      targetOSVersion: '*'
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-29T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: Requeue
                    resizeTimeout: PT15M
                    startTime: '2017-08-29T10:22:55.9407275Z'
                    targetDedicatedNodes: 34
                  scaleSettings:
                    autoScale:
                      evaluationInterval: PT15M
                      formula: $TargetDedicated=34
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        UpdatePool - Other Properties:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                applicationPackages:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_5678
                    version: '1.0'
                certificates:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                    storeLocation: LocalMachine
                    storeName: MY
                metadata:
                  - name: key1
                    value: value1
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-29T10:22:55.9407275Z'
                  applicationPackages:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_5678
                      version: '1.0'
                  autoScaleRun:
                    evaluationTime: '2017-08-29T10:22:55.9407275Z'
                    results: $TargetDedicatedNodes=34;NodeDeallocationOption=requeue
                  certificates:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                      storeLocation: LocalMachine
                      storeName: MY
                      visibility:
                        - StartTask
                        - Task
                        - RemoteUser
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 12
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '5'
                      targetOSVersion: '*'
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-29T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  metadata:
                    - name: key1
                      value: value1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: TaskCompletion
                    resizeTimeout: PT8M
                    startTime: '2017-08-29T10:22:55.9407275Z'
                    targetDedicatedNodes: 8
                  scaleSettings:
                    fixedScale:
                      nodeDeallocationOption: TaskCompletion
                      resizeTimeout: PT8M
                      targetDedicatedNodes: 1
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        UpdatePool - Remove Start Task:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                startTask: {}
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-29T10:22:55.9407275Z'
                  autoScaleRun:
                    evaluationTime: '2017-08-29T10:22:55.9407275Z'
                    results: $TargetDedicatedNodes=34;NodeDeallocationOption=requeue
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 12
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '5'
                      targetOSVersion: '*'
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-29T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: Requeue
                    resizeTimeout: PT15M
                    startTime: '2017-08-29T10:22:55.9407275Z'
                    targetDedicatedNodes: 34
                  scaleSettings:
                    autoScale:
                      evaluationInterval: PT15M
                      formula: $TargetDedicated=34
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        UpdatePool - Resize Pool:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                scaleSettings:
                  fixedScale:
                    nodeDeallocationOption: TaskCompletion
                    resizeTimeout: PT8M
                    targetDedicatedNodes: 5
                    targetLowPriorityNodes: 0
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-29T10:22:55.9407275Z'
                  autoScaleRun:
                    evaluationTime: '2017-08-29T10:22:55.9407275Z'
                    results: $TargetDedicatedNodes=34;NodeDeallocationOption=requeue
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 12
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '5'
                      targetOSVersion: '*'
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-29T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: TaskCompletion
                    resizeTimeout: PT8M
                    startTime: '2017-08-29T10:22:55.9407275Z'
                    targetDedicatedNodes: 8
                  scaleSettings:
                    fixedScale:
                      nodeDeallocationOption: TaskCompletion
                      resizeTimeout: PT8M
                      targetDedicatedNodes: 1
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
    put:
      description: Creates a new pool inside the specified account.
      operationId: Pool_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - description: Additional parameters for pool creation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Pool'
        - description: 'The entity state (ETag) version of the pool to update. A value of "*" can be used to apply the operation only if the pool already exists. If omitted, this operation will always be applied.'
          in: header
          name: If-Match
          required: false
          type: string
        - description: 'Set to ''*'' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored.'
          in: header
          name: If-None-Match
          required: false
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Pool'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        CreatePool - Custom Image:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                deploymentConfiguration:
                  virtualMachineConfiguration:
                    imageReference:
                      id: /subscriptions/subid/resourceGroups/networking-group/providers/Microsoft.Compute/images/image-123
                    nodeAgentSkuId: batch.node.ubuntu 14.04
                vmSize: STANDARD_D4
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Steady
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    virtualMachineConfiguration:
                      imageReference:
                        id: /subscriptions/subid/resourceGroups/networking-group/providers/Microsoft.Compute/images/image-123
                      nodeAgentSkuId: batch.node.ubuntu 14.04
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  scaleSettings:
                    fixedScale:
                      targetDedicatedNodes: 0
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        CreatePool - Full Example:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                applicationLicenses:
                  - app-license0
                  - app-license1
                applicationPackages:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                    version: asdf
                certificates:
                  - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                    storeLocation: LocalMachine
                    storeName: MY
                    visibility:
                      - RemoteUser
                deploymentConfiguration:
                  cloudServiceConfiguration:
                    osFamily: '4'
                    targetOSVersion: WA-GUEST-OS-4.45_201708-01
                displayName: my-pool-name
                interNodeCommunication: Enabled
                maxTasksPerNode: 13
                metadata:
                  - name: metadata-1
                    value: value-1
                  - name: metadata-2
                    value: value-2
                networkConfiguration:
                  endpointConfiguration:
                    inboundNatPools:
                      - backendPort: 12001
                        frontendPortRangeEnd: 15100
                        frontendPortRangeStart: 15000
                        name: testnat
                        networkSecurityGroupRules:
                          - access: Allow
                            priority: 150
                            sourceAddressPrefix: 192.100.12.45
                          - access: Deny
                            priority: 3500
                            sourceAddressPrefix: '*'
                        protocol: TCP
                  subnetId: /subscriptions/subid/resourceGroups/rg1234/providers/Microsoft.Network/virtualNetworks/network1234/subnets/subnet123
                scaleSettings:
                  fixedScale:
                    nodeDeallocationOption: TaskCompletion
                    resizeTimeout: PT8M
                    targetDedicatedNodes: 6
                    targetLowPriorityNodes: 28
                startTask:
                  commandLine: cmd /c SET
                  environmentSettings:
                    - name: MYSET
                      value: '1234'
                  maxTaskRetryCount: 6
                  resourceFiles:
                    - blobSource: 'https://testaccount.blob.core.windows.net/example-blob-file'
                      fileMode: '777'
                      filePath: 'c:\temp\gohere'
                  userIdentity:
                    autoUser:
                      elevationLevel: Admin
                      scope: Pool
                  waitForSuccess: true
                taskSchedulingPolicy:
                  nodeFillType: Pack
                userAccounts:
                  - elevationLevel: Admin
                    linuxUserConfiguration:
                      gid: 4567
                      sshPrivateKey: sshprivatekeyvalue
                      uid: 1234
                    name: username1
                    password: examplepassword
                vmSize: STANDARD_D4
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  applicationLicenses:
                    - app-license0
                    - app-license1
                  applicationPackages:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234
                      version: asdf
                  certificates:
                    - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/SHA1-1234567
                      storeLocation: LocalMachine
                      storeName: MY
                      visibility:
                        - RemoteUser
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '4'
                      targetOSVersion: WA-GUEST-OS-4.45_201708-01
                  interNodeCommunication: Enabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 13
                  metadata:
                    - name: metadata-1
                      value: value-1
                    - name: metadata-2
                      value: value-2
                  networkConfiguration:
                    endpointConfiguration:
                      inboundNatPools:
                        - backendPort: 12001
                          frontendPortRangeEnd: 15100
                          frontendPortRangeStart: 15000
                          name: testnat
                          networkSecurityGroupRules:
                            - access: Allow
                              priority: 150
                              sourceAddressPrefix: 192.100.12.45
                            - access: Deny
                              priority: 3500
                              sourceAddressPrefix: '*'
                          protocol: TCP
                    subnetId: /subscriptions/subid/resourceGroups/rg1234/providers/Microsoft.Network/virtualNetworks/network1234/subnets/subnet123
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  scaleSettings:
                    fixedScale:
                      nodeDeallocationOption: TaskCompletion
                      resizeTimeout: PT8M
                      targetDedicatedNodes: 6
                      targetLowPriorityNodes: 28
                  startTask:
                    commandLine: cmd /c SET
                    environmentSettings:
                      - name: MYSET
                        value: '1234'
                    maxTaskRetryCount: 6
                    resourceFiles:
                      - blobSource: 'https://testaccount.blob.core.windows.net/example-blob-file'
                        fileMode: '777'
                        filePath: 'c:\temp\gohere'
                    userIdentity:
                      autoUser:
                        elevationLevel: Admin
                        scope: Pool
                    waitForSuccess: true
                  taskSchedulingPolicy:
                    nodeFillType: Pack
                  userAccounts:
                    - elevationLevel: Admin
                      linuxUserConfiguration:
                        gid: 4567
                        uid: 1234
                      name: username1
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        CreatePool - Full VirtualMachineConfiguration:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                deploymentConfiguration:
                  virtualMachineConfiguration:
                    dataDisks:
                      - caching: ReadWrite
                        diskSizeGB: 30
                        lun: 0
                        storageAccountType: Premium_LRS
                      - caching: None
                        diskSizeGB: 200
                        lun: 1
                        storageAccountType: Standard_LRS
                    imageReference:
                      offer: WindowsServer
                      publisher: MicrosoftWindowsServer
                      sku: 2016-Datacenter-SmallDisk
                      version: latest
                    licenseType: Windows_Server
                    nodeAgentSkuId: batch.node.windows amd64
                    osDisk:
                      caching: ReadWrite
                    windowsConfiguration:
                      enableAutomaticUpdates: false
                networkConfiguration:
                  endpointConfiguration:
                    inboundNatPools:
                      - backendPort: 12001
                        frontendPortRangeEnd: 15100
                        frontendPortRangeStart: 15000
                        name: testnat
                        networkSecurityGroupRules:
                          - access: Allow
                            priority: 150
                            sourceAddressPrefix: 192.100.12.45
                          - access: Deny
                            priority: 3500
                            sourceAddressPrefix: '*'
                        protocol: TCP
                scaleSettings:
                  autoScale:
                    evaluationInterval: PT5M
                    formula: $TargetDedicatedNodes=1
                vmSize: STANDARD_D4
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    virtualMachineConfiguration:
                      dataDisks:
                        - caching: ReadWrite
                          diskSizeGB: 30
                          lun: 0
                          storageAccountType: Premium_LRS
                        - caching: None
                          diskSizeGB: 200
                          lun: 1
                          storageAccountType: Standard_LRS
                      imageReference:
                        offer: WindowsServer
                        publisher: MicrosoftWindowsServer
                        sku: 2016-Datacenter-SmallDisk
                        version: latest
                      licenseType: Windows_Server
                      nodeAgentSkuId: batch.node.windows amd64
                      osDisk:
                        caching: ReadWrite
                      windowsConfiguration:
                        enableAutomaticUpdates: false
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  networkConfiguration:
                    endpointConfiguration:
                      inboundNatPools:
                        - backendPort: 12001
                          frontendPortRangeEnd: 15100
                          frontendPortRangeStart: 15000
                          name: testnat
                          networkSecurityGroupRules:
                            - access: Allow
                              priority: 150
                              sourceAddressPrefix: 192.100.12.45
                            - access: Deny
                              priority: 3500
                              sourceAddressPrefix: '*'
                          protocol: TCP
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  scaleSettings:
                    autoScale:
                      evaluationInterval: PT5M
                      formula: $TargetDedicatedNodes=1
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        CreatePool - Minimal CloudServiceConfiguration:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                deploymentConfiguration:
                  cloudServiceConfiguration:
                    osFamily: '5'
                scaleSettings:
                  fixedScale:
                    targetDedicatedNodes: 3
                vmSize: STANDARD_D4
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    cloudServiceConfiguration:
                      osFamily: '5'
                      targetOSVersion: '*'
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: Requeue
                    resizeTimeout: PT15M
                    startTime: '2017-08-28T10:22:55.9407275Z'
                    targetDedicatedNodes: 3
                  scaleSettings:
                    fixedScale:
                      resizeTimeout: PT15M
                      targetDedicatedNodes: 3
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
        CreatePool - Minimal VirtualMachineConfiguration:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              properties:
                deploymentConfiguration:
                  virtualMachineConfiguration:
                    imageReference:
                      offer: UbuntuServer
                      publisher: Canonical
                      sku: 14.04.5-LTS
                      version: latest
                    nodeAgentSkuId: batch.node.ubuntu 14.04
                scaleSettings:
                  autoScale:
                    evaluationInterval: PT5M
                    formula: $TargetDedicatedNodes=1
                vmSize: STANDARD_D4
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    virtualMachineConfiguration:
                      imageReference:
                        offer: UbuntuServer
                        publisher: Canonical
                        sku: 14.04.5-LTS
                        version: latest
                      nodeAgentSkuId: batch.node.ubuntu 14.04
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  scaleSettings:
                    autoScale:
                      evaluationInterval: PT5M
                      formula: $TargetDedicatedNodes=1
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/disableAutoScale':
    post:
      description: Disables automatic scaling for a pool.
      operationId: Pool_DisableAutoScale
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Pool'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - Pool
      x-ms-examples:
        Disable AutoScale:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Resizing
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    virtualMachineConfiguration:
                      imageReference:
                        offer: UbuntuServer
                        publisher: Canonical
                        sku: 14.04.5-LTS
                        version: latest
                      nodeAgentSkuId: batch.node.ubuntu 14.04
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  scaleSettings:
                    fixedScale:
                      resizeTimeout: PT15M
                      targetDedicatedNodes: 3
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/stopResize':
    post:
      description: 'This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.'
      operationId: Pool_StopResize
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/PoolNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the pool entity.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.'
              type: string
          schema:
            $ref: '#/definitions/Pool'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      summary: Stops an ongoing resize operation on the pool.
      tags:
        - Pool
      x-ms-examples:
        StopPoolResize:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            poolName: testpool
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                etag: W/"0x8D4EDFEBFADF4AB"
                id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool
                name: testpool
                properties:
                  allocationState: Steady
                  allocationStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  creationTime: '2017-08-28T10:22:55.9407275Z'
                  currentDedicatedNodes: 0
                  currentLowPriorityNodes: 0
                  deploymentConfiguration:
                    virtualMachineConfiguration:
                      imageReference:
                        offer: UbuntuServer
                        publisher: Canonical
                        sku: 14.04.5-LTS
                        version: latest
                      nodeAgentSkuId: batch.node.ubuntu 14.04
                  interNodeCommunication: Disabled
                  lastModified: '2017-08-28T10:22:55.9407275Z'
                  maxTasksPerNode: 1
                  provisioningState: Succeeded
                  provisioningStateTransitionTime: '2017-08-28T10:22:55.9407275Z'
                  resizeOperationStatus:
                    nodeDeallocationOption: Requeue
                    resizeTimeout: PT10M
                    startTime: '2017-08-28T10:22:55.9407275Z'
                    targetDedicatedNodes: 1
                  scaleSettings:
                    fixedScale:
                      resizeTimeout: PT15M
                      targetDedicatedNodes: 3
                      targetLowPriorityNodes: 0
                  taskSchedulingPolicy:
                    nodeFillType: Spread
                  vmSize: STANDARD_D4
                type: Microsoft.Batch/batchAccounts/pools
              headers:
                ETag: W/"0x8D4EDFEBFADF4AB"
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/regenerateKeys':
    post:
      description: Regenerates the specified account key for the Batch account.
      operationId: BatchAccount_RegenerateKey
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - description: The type of key to regenerate.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/BatchAccountRegenerateKeyParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation was successful. The response contains the Batch account keys.
          schema:
            $ref: '#/definitions/BatchAccountKeys'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountRegenerateKey:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            parameters:
              keyName: Primary
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '200':
              body:
                accountName: sampleacct
                primary: AAAA==
                secondary: BBBB==
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/syncAutoStorageKeys':
    post:
      description: Synchronizes access keys for the auto-storage account configured for the specified Batch account.
      operationId: BatchAccount_SynchronizeAutoStorageKeys
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AccountNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/CloudError'
      tags:
        - BatchAccount
      x-ms-examples:
        BatchAccountSynchronizeAutoStorageKeys:
          parameters:
            accountName: sampleacct
            api-version: '2017-09-01'
            resourceGroupName: default-azurebatch-japaneast
            subscriptionId: subid
          responses:
            '204': {}
definitions:
  ActivateApplicationPackageParameters:
    description: Parameters for an activating an application package.
    properties:
      format:
        description: The format of the application package binary file.
        type: string
    required:
      - format
  Application:
    description: Contains information about an application in a Batch account.
    properties:
      allowUpdates:
        description: A value indicating whether packages within the application may be overwritten using the same version string.
        type: boolean
      defaultVersion:
        description: The package to use if a client requests the application but does not specify a version.
        type: string
      displayName:
        description: The display name for the application.
        type: string
      id:
        description: A string that uniquely identifies the application within the account.
        type: string
      packages:
        description: The list of packages under this application.
        items:
          $ref: '#/definitions/ApplicationPackage'
        type: array
  ApplicationCreateParameters:
    description: Parameters for adding an Application.
    properties:
      allowUpdates:
        description: A value indicating whether packages within the application may be overwritten using the same version string.
        type: boolean
      displayName:
        description: The display name for the application.
        type: string
  ApplicationPackage:
    description: An application package which represents a particular version of an application.
    properties:
      format:
        description: 'The format of the application package, if the package is active.'
        readOnly: true
        type: string
      id:
        description: The ID of the application.
        readOnly: true
        type: string
      lastActivationTime:
        description: 'The time at which the package was last activated, if the package is active.'
        format: date-time
        readOnly: true
        type: string
      state:
        description: The current state of the application package.
        enum:
          - Pending
          - Active
          - Unmapped
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: PackageState
      storageUrl:
        description: The URL for the application package in Azure Storage.
        readOnly: true
        type: string
      storageUrlExpiry:
        description: The UTC time at which the Azure Storage URL will expire.
        format: date-time
        readOnly: true
        type: string
      version:
        description: The version of the application package.
        readOnly: true
        type: string
  ApplicationPackageReference:
    properties:
      id:
        title: The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists.
        type: string
      version:
        description: 'If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.'
        title: 'The version of the application to deploy. If omitted, the default version is deployed.'
        type: string
    required:
      - id
    title: Link to an application package inside the batch account
  ApplicationUpdateParameters:
    description: Parameters for an update application request.
    properties:
      allowUpdates:
        description: A value indicating whether packages within the application may be overwritten using the same version string.
        type: boolean
      defaultVersion:
        description: The package to use if a client requests the application but does not specify a version.
        type: string
      displayName:
        description: The display name for the application.
        type: string
  AutoScaleRun:
    properties:
      error:
        $ref: '#/definitions/AutoScaleRunError'
        title: 'Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.'
      evaluationTime:
        format: date-time
        title: The time at which the autoscale formula was last evaluated.
        type: string
      results:
        description: 'Each variable value is returned in the form $variable=value, and variables are separated by semicolons.'
        title: The final values of all variables used in the evaluation of the autoscale formula.
        type: string
    required:
      - evaluationTime
    title: The results and errors from an execution of a pool autoscale formula.
  AutoScaleRunError:
    properties:
      code:
        description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        items:
          $ref: '#/definitions/AutoScaleRunError'
        title: Additional details about the error.
        type: array
      message:
        description: 'A message describing the error, intended to be suitable for display in a user interface.'
        type: string
    required:
      - code
      - message
    title: An error that occurred when autoscaling a pool.
  AutoScaleSettings:
    properties:
      evaluationInterval:
        description: 'If omitted, the default value is 15 minutes (PT15M).'
        format: duration
        title: The time interval at which to automatically adjust the pool size according to the autoscale formula.
        type: string
      formula:
        externalDocs:
          description: Create an automatic scaling formula for scaling compute nodes in a Batch pool
          url: 'https://docs.microsoft.com/en-us/azure/batch/batch-automatic-scaling'
        title: A formula for the desired number of compute nodes in the pool.
        type: string
    required:
      - formula
    title: AutoScale settings for the pool.
  AutoStorageBaseProperties:
    description: The properties related to the auto-storage account.
    properties:
      storageAccountId:
        description: The resource ID of the storage account to be used for auto-storage account.
        type: string
    required:
      - storageAccountId
  AutoStorageProperties:
    allOf:
      - $ref: '#/definitions/AutoStorageBaseProperties'
    description: Contains information about the auto-storage account associated with a Batch account.
    properties:
      lastKeySync:
        description: The UTC time at which storage keys were last synchronized with the Batch account.
        format: date-time
        type: string
    required:
      - lastKeySync
  AutoUserSpecification:
    properties:
      elevationLevel:
        $ref: '#/definitions/ElevationLevel'
        description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
        title: The elevation level of the auto user.
      scope:
        description: pool - specifies that the task runs as the common auto user account which is created on every node in a pool. task - specifies that the service should create a new user for the task. The default value is task.
        enum:
          - Task
          - Pool
        title: The scope for the auto user
        type: string
        x-ms-enum:
          modelAsString: false
          name: AutoUserScope
    title: Specifies the parameters for the auto user that runs a task on the Batch service.
  BatchAccount:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Contains information about an Azure Batch account.
    properties:
      properties:
        $ref: '#/definitions/BatchAccountProperties'
        description: The properties associated with the account.
        x-ms-client-flatten: true
  BatchAccountCreateParameters:
    description: Parameters supplied to the Create operation.
    properties:
      location:
        description: The region in which to create the account.
        type: string
      properties:
        $ref: '#/definitions/BatchAccountCreateProperties'
        description: The properties of the Batch account.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: The user-specified tags associated with the account.
        type: object
    required:
      - location
  BatchAccountCreateProperties:
    description: The properties of a Batch account.
    properties:
      autoStorage:
        $ref: '#/definitions/AutoStorageBaseProperties'
        description: The properties related to the auto-storage account.
      keyVaultReference:
        $ref: '#/definitions/KeyVaultReference'
        description: A reference to the Azure key vault associated with the Batch account.
      poolAllocationMode:
        $ref: '#/definitions/PoolAllocationMode'
        description: 'The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.'
        title: The allocation mode to use for creating pools in the Batch account.
  BatchAccountKeys:
    description: A set of Azure Batch account keys.
    properties:
      accountName:
        description: The Batch account name.
        readOnly: true
        type: string
      primary:
        description: The primary key associated with the account.
        readOnly: true
        type: string
      secondary:
        description: The secondary key associated with the account.
        readOnly: true
        type: string
  BatchAccountListResult:
    description: Values returned by the List operation.
    properties:
      nextLink:
        description: The continuation token.
        type: string
      value:
        description: The collection of Batch accounts returned by the listing operation.
        items:
          $ref: '#/definitions/BatchAccount'
        type: array
  BatchAccountProperties:
    description: Account specific properties.
    properties:
      accountEndpoint:
        description: The account endpoint used to interact with the Batch service.
        readOnly: true
        type: string
      activeJobAndJobScheduleQuota:
        format: int32
        readOnly: true
        title: The active job and job schedule quota for this Batch account.
        type: integer
        x-nullable: false
      autoStorage:
        $ref: '#/definitions/AutoStorageProperties'
        readOnly: true
        title: The properties and status of any auto-storage account associated with the Batch account.
      dedicatedCoreQuota:
        format: int32
        readOnly: true
        title: The dedicated core quota for this Batch account.
        type: integer
        x-nullable: false
      keyVaultReference:
        $ref: '#/definitions/KeyVaultReference'
        readOnly: true
        title: A reference to the Azure key vault associated with the Batch account.
      lowPriorityCoreQuota:
        format: int32
        readOnly: true
        title: The low-priority core quota for this Batch account.
        type: integer
        x-nullable: false
      poolAllocationMode:
        $ref: '#/definitions/PoolAllocationMode'
        readOnly: true
        title: The allocation mode to use for creating pools in the Batch account.
        x-nullable: false
      poolQuota:
        format: int32
        readOnly: true
        title: The pool quota for this Batch account.
        type: integer
        x-nullable: false
      provisioningState:
        description: The provisioned state of the resource
        enum:
          - Invalid
          - Creating
          - Deleting
          - Succeeded
          - Failed
          - Cancelled
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: ProvisioningState
        x-nullable: false
  BatchAccountRegenerateKeyParameters:
    description: Parameters supplied to the RegenerateKey operation.
    properties:
      keyName:
        description: The type of account key to regenerate.
        enum:
          - Primary
          - Secondary
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountKeyType
    required:
      - keyName
  BatchAccountUpdateParameters:
    description: Parameters for updating an Azure Batch account.
    properties:
      properties:
        $ref: '#/definitions/BatchAccountUpdateProperties'
        description: The properties of the account.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: The user-specified tags associated with the account.
        type: object
  BatchAccountUpdateProperties:
    description: The properties of a Batch account.
    properties:
      autoStorage:
        $ref: '#/definitions/AutoStorageBaseProperties'
        description: The properties related to the auto-storage account.
  BatchLocationQuota:
    description: Quotas associated with a Batch region for a particular subscription.
    properties:
      accountQuota:
        description: The number of Batch accounts that may be created under the subscription in the specified region.
        format: int32
        readOnly: true
        type: integer
  CachingType:
    description: |-
      Values are:

       None - The caching mode for the disk is not enabled.
       ReadOnly - The caching mode for the disk is read only.
       ReadWrite - The caching mode for the disk is read and write. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
    enum:
      - None
      - ReadOnly
      - ReadWrite
    title: The type of caching to enable for the disk.
    type: string
    x-ms-enum:
      modelAsString: false
      name: CachingType
  Certificate:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: Contains information about a certificate.
    properties:
      properties:
        $ref: '#/definitions/CertificateProperties'
        description: The properties associated with the certificate.
        x-ms-client-flatten: true
  CertificateBaseProperties:
    properties:
      format:
        description: 'The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.'
        enum:
          - Pfx
          - Cer
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateFormat
        x-nullable: false
      thumbprint:
        description: This must match the thumbprint from the name.
        title: The thumbprint of the certificate
        type: string
      thumbprintAlgorithm:
        description: This must match the first portion of the certificate name. Currently required to be 'SHA1'.
        title: The algorithm of the certificate thumbprint
        type: string
  CertificateCreateOrUpdateParameters:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: Contains information about a certificate.
    properties:
      properties:
        $ref: '#/definitions/CertificateCreateOrUpdateProperties'
        description: The properties associated with the certificate.
        x-ms-client-flatten: true
  CertificateCreateOrUpdateProperties:
    allOf:
      - $ref: '#/definitions/CertificateBaseProperties'
    description: Certificate properties for create operations
    properties:
      data:
        description: The maximum size is 10KB.
        title: The base64-encoded contents of the certificate.
        type: string
      password:
        description: This is required if the certificate format is pfx and must be omitted if the certificate format is cer.
        title: The password to access the certificate's private key.
        type: string
    required:
      - data
  CertificateProperties:
    allOf:
      - $ref: '#/definitions/CertificateBaseProperties'
    description: Certificate properties.
    properties:
      deleteCertificateError:
        $ref: '#/definitions/DeleteCertificateError'
        description: This is only returned when the certificate provisioningState is 'Failed'.
        readOnly: true
        title: The error which occurred while deleting the certificate
      previousProvisioningState:
        description: The previous provisioned state of the resource
        enum:
          - Succeeded
          - Deleting
          - Failed
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateProvisioningState
        x-nullable: false
      previousProvisioningStateTransitionTime:
        format: date-time
        readOnly: true
        title: The time at which the certificate entered its previous state.
        type: string
      provisioningState:
        description: |-
          Values are:

           Succeeded - The certificate is available for use in pools.
           Deleting - The user has requested that the certificate be deleted, but the delete operation has not yet completed. You may not reference the certificate when creating or updating pools.
           Failed - The user requested that the certificate be deleted, but there are pools that still have references to the certificate, or it is still installed on one or more compute nodes. (The latter can occur if the certificate has been removed from the pool, but the node has not yet restarted. Nodes refresh their certificates only when they restart.) You may use the cancel certificate delete operation to cancel the delete, or the delete certificate operation to retry the delete.
        enum:
          - Succeeded
          - Deleting
          - Failed
        readOnly: true
        title: The provisioned state of the resource
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateProvisioningState
        x-nullable: false
      provisioningStateTransitionTime:
        format: date-time
        readOnly: true
        title: The time at which the certificate entered its current state.
        type: string
      publicData:
        description: The public key of the certificate.
        readOnly: true
        type: string
  CertificateReference:
    properties:
      id:
        title: The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.
        type: string
      storeLocation:
        description: 'The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.'
        enum:
          - CurrentUser
          - LocalMachine
        title: The location of the certificate store on the compute node into which to install the certificate.
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateStoreLocation
      storeName:
        description: 'This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.'
        title: The name of the certificate store on the compute node into which to install the certificate.
        type: string
      visibility:
        description: |-
          Values are:

           starttask - The user account under which the start task is run.
           task - The accounts under which job tasks are run.
           remoteuser - The accounts under which users remotely access the node.

           You can specify more than one visibility in this collection. The default is all accounts.
        items:
          enum:
            - StartTask
            - Task
            - RemoteUser
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateVisibility
          x-nullable: false
        title: Which user accounts on the compute node should have access to the private data of the certificate.
        type: array
    required:
      - id
    title: A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the pool.
  CheckNameAvailabilityParameters:
    description: Parameters for a check name availability request.
    properties:
      name:
        description: The name to check for availability
        type: string
      type:
        description: The resource type. Must be set to Microsoft.Batch/batchAccounts
        enum:
          - Microsoft.Batch/batchAccounts
        type: string
        x-ms-enum:
          modelAsString: false
          name: Type
    required:
      - name
      - type
  CheckNameAvailabilityResult:
    description: The CheckNameAvailability operation response.
    properties:
      message:
        description: Gets an error message explaining the Reason value in more detail.
        readOnly: true
        type: string
      nameAvailable:
        description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
        readOnly: true
        type: boolean
      reason:
        description: Gets the reason that a Batch account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
          - Invalid
          - AlreadyExists
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: NameAvailabilityReason
  CloudError:
    description: An error response from the Batch service.
    properties:
      error:
        $ref: '#/definitions/CloudErrorBody'
    x-ms-external: true
  CloudErrorBody:
    description: An error response from the Batch service.
    properties:
      code:
        description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        description: A list of additional details about the error.
        items:
          $ref: '#/definitions/CloudErrorBody'
        type: array
      message:
        description: 'A message describing the error, intended to be suitable for display in a user interface.'
        type: string
      target:
        description: 'The target of the particular error. For example, the name of the property in error.'
        type: string
    x-ms-external: true
  CloudServiceConfiguration:
    properties:
      currentOSVersion:
        description: 'This may differ from targetOSVersion if the pool state is Upgrading. In this case some virtual machines may be on the targetOSVersion and some may be on the currentOSVersion during the upgrade process. Once all virtual machines have upgraded, currentOSVersion is updated to be the same as targetOSVersion.'
        title: The Azure Guest OS Version currently installed on the virtual machines in the pool.
        type: string
      osFamily:
        description: 'Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).'
        title: The Azure Guest OS family to be installed on the virtual machines in the pool.
        type: string
      targetOSVersion:
        description: The default value is * which specifies the latest operating system version for the specified OS family.
        title: The Azure Guest OS version to be installed on the virtual machines in the pool.
        type: string
    required:
      - osFamily
    title: The configuration for nodes in a pool based on the Azure Cloud Services platform.
  ComputeNodeDeallocationOption:
    description: |-
      Values are:

       Requeue - Terminate running tasks and requeue them. The tasks will run again when the job is enabled. Remove nodes as soon as tasks have been terminated.
       Terminate - Terminate running tasks. The tasks will not run again. Remove nodes as soon as tasks have been terminated.
       TaskCompletion - Allow currently running tasks to complete. Schedule no new tasks while waiting. Remove nodes when all tasks have completed.
       RetainedData - Allow currently running tasks to complete, then wait for all task data retention periods to expire. Schedule no new tasks while waiting. Remove nodes when all task retention periods have expired.
    enum:
      - Requeue
      - Terminate
      - TaskCompletion
      - RetainedData
    title: Determines what to do with a node and its running task(s) after it has been selected for deallocation.
    type: string
    x-ms-enum:
      modelAsString: false
      name: ComputeNodeDeallocationOption
  DataDisk:
    description: Data Disk settings which will be used by the data disks associated to Compute Nodes in the pool.
    properties:
      caching:
        $ref: '#/definitions/CachingType'
        description: |-
          Values are:

           none - The caching mode for the disk is not enabled.
           readOnly - The caching mode for the disk is read only.
           readWrite - The caching mode for the disk is read and write.

           The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        title: The type of caching to be enabled for the data disks.
      diskSizeGB:
        format: int32
        title: The initial disk size in GB when creating new data disk.
        type: integer
      lun:
        description: 'The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.'
        format: int32
        title: The logical unit number.
        type: integer
      storageAccountType:
        $ref: '#/definitions/StorageAccountType'
        description: |-
          If omitted, the default is "Standard_LRS". Values are:

           Standard_LRS - The data disk should use standard locally redundant storage.
           Premium_LRS - The data disk should use premium locally redundant storage.
        title: The storage account type to be used for the data disk.
    required:
      - lun
      - diskSizeGB
  DeleteCertificateError:
    description: An error response from the Batch service.
    properties:
      code:
        description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        description: A list of additional details about the error.
        items:
          $ref: '#/definitions/DeleteCertificateError'
        type: array
      message:
        description: 'A message describing the error, intended to be suitable for display in a user interface.'
        type: string
      target:
        description: 'The target of the particular error. For example, the name of the property in error.'
        type: string
    required:
      - code
      - message
  DeploymentConfiguration:
    properties:
      cloudServiceConfiguration:
        $ref: '#/definitions/CloudServiceConfiguration'
        description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.
        title: The cloud service configuration for the pool.
      virtualMachineConfiguration:
        $ref: '#/definitions/VirtualMachineConfiguration'
        description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        title: The virtual machine configuration for the pool.
    title: Deployment configuration properties.
  ElevationLevel:
    description: |-
      Values are:

       NonAdmin - The user is a standard user without elevated access.
       Admin - The user is a user with elevated access and operates with full Administrator permissions.
    enum:
      - NonAdmin
      - Admin
    title: The elevation level of the user.
    type: string
    x-ms-enum:
      modelAsString: false
      name: ElevationLevel
  EnvironmentSetting:
    properties:
      name:
        title: The name of the environment variable.
        type: string
      value:
        title: The value of the environment variable.
        type: string
    required:
      - name
    title: An environment variable to be set on a task process.
  FixedScaleSettings:
    properties:
      nodeDeallocationOption:
        $ref: '#/definitions/ComputeNodeDeallocationOption'
        description: 'If omitted, the default value is Requeue.'
        title: Determines what to do with a node and its running task(s) if the pool size is decreasing.
      resizeTimeout:
        description: 'The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for allocation of compute nodes to the pool.
        type: string
      targetDedicatedNodes:
        description: 'At least one of targetDedicatedNodes, targetLowPriority nodes must be set.'
        format: int32
        title: The desired number of dedicated compute nodes in the pool.
        type: integer
      targetLowPriorityNodes:
        description: 'At least one of targetDedicatedNodes, targetLowPriority nodes must be set.'
        format: int32
        title: The desired number of low-priority compute nodes in the pool.
        type: integer
    title: Fixed scale settings for the pool.
  ImageReference:
    properties:
      id:
        description: 'This property is mutually exclusive with other properties. The virtual machine image must be in the same region and subscription as the Azure Batch account. For information about the firewall settings for Batch node agent to communicate with Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration .'
        title: 'The ARM resource identifier of the virtual machine image. Computes nodes of the pool will be created using this custom image. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}'
        type: string
      offer:
        description: 'For example, UbuntuServer or WindowsServer.'
        title: The offer type of the Azure Virtual Machines Marketplace image.
        type: string
      publisher:
        description: 'For example, Canonical or MicrosoftWindowsServer.'
        title: The publisher of the Azure Virtual Machines Marketplace image.
        type: string
      sku:
        description: 'For example, 14.04.0-LTS or 2012-R2-Datacenter.'
        title: The SKU of the Azure Virtual Machines Marketplace image.
        type: string
      version:
        description: 'A value of ''latest'' can be specified to select the latest version of an image. If omitted, the default is ''latest''.'
        title: The version of the Azure Virtual Machines Marketplace image.
        type: string
    title: 'A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the ''List supported node agent SKUs'' operation.'
  InboundNatPool:
    properties:
      backendPort:
        description: 'This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.'
        format: int32
        title: The port number on the compute node.
        type: integer
      frontendPortRangeEnd:
        description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        format: int32
        title: The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.
        type: integer
      frontendPortRangeStart:
        description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        format: int32
        title: The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.
        type: integer
      name:
        description: 'The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.'
        title: The name of the endpoint.
        type: string
      networkSecurityGroupRules:
        description: 'The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.'
        items:
          $ref: '#/definitions/NetworkSecurityGroupRule'
        title: A list of network security group rules that will be applied to the endpoint.
        type: array
      protocol:
        enum:
          - TCP
          - UDP
        title: The protocol of the endpoint.
        type: string
        x-ms-enum:
          modelAsString: false
          name: InboundEndpointProtocol
    required:
      - name
      - protocol
      - backendPort
      - frontendPortRangeStart
      - frontendPortRangeEnd
    title: A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.
  KeyVaultReference:
    description: Identifies the Azure key vault associated with a Batch account.
    properties:
      id:
        description: The resource ID of the Azure key vault associated with the Batch account.
        type: string
      url:
        description: The URL of the Azure key vault associated with the Batch account.
        type: string
    required:
      - id
      - url
  LinuxUserConfiguration:
    properties:
      gid:
        description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
        format: int32
        title: The group ID for the user account.
        type: integer
      sshPrivateKey:
        description: 'The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool''s enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user''s .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user''s .ssh directory is done).'
        title: The SSH private key for the user account.
        type: string
      uid:
        description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
        format: int32
        title: The user ID of the user account.
        type: integer
    title: Properties used to create a user account on a Linux node.
  ListApplicationsResult:
    description: The result of performing list applications.
    properties:
      nextLink:
        description: The URL to get the next set of results.
        type: string
      value:
        description: The list of applications.
        items:
          $ref: '#/definitions/Application'
        type: array
  ListCertificatesResult:
    description: Values returned by the List operation.
    properties:
      nextLink:
        description: The continuation token.
        type: string
      value:
        description: The collection of returned certificates.
        items:
          $ref: '#/definitions/Certificate'
        type: array
  ListPoolsResult:
    description: Values returned by the List operation.
    properties:
      nextLink:
        description: The continuation token.
        type: string
      value:
        description: The collection of returned pools.
        items:
          $ref: '#/definitions/Pool'
        type: array
  MetadataItem:
    description: The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    properties:
      name:
        title: The name of the metadata item.
        type: string
      value:
        title: The value of the metadata item.
        type: string
    required:
      - name
      - value
    title: A name-value pair associated with a Batch service resource.
  NetworkConfiguration:
    description: The network configuration for a pool.
    properties:
      endpointConfiguration:
        $ref: '#/definitions/PoolEndpointConfiguration'
        description: Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property.
        title: The configuration for endpoints on compute nodes in the Batch pool.
      subnetId:
        description: 'The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn''t have enough free IP addresses, the pool will partially allocate compute nodes, and a resize error will occur. The ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual Machine Contributor'' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. For pools created via virtualMachineConfiguration the Batch account must have poolAllocationMode userSubscription in order to use a VNet. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration'
        externalDocs:
          description: Setting up RBAC for Azure Batch VNets
          url: 'https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor'
        title: 'The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.'
        type: string
  NetworkSecurityGroupRule:
    properties:
      access:
        enum:
          - Allow
          - Deny
        title: 'The action that should be taken for a specified IP address, subnet range or tag.'
        type: string
        x-ms-enum:
          modelAsString: false
          name: NetworkSecurityGroupRuleAccess
      priority:
        description: 'Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.'
        format: int32
        title: The priority for this rule.
        type: integer
      sourceAddressPrefix:
        description: 'Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.'
        title: The source address prefix or tag to match for the rule.
        type: string
    required:
      - priority
      - access
      - sourceAddressPrefix
    title: A network security group rule to apply to an inbound endpoint.
  OSDisk:
    properties:
      caching:
        $ref: '#/definitions/CachingType'
        description: Default value is none.
        title: The type of caching to be enabled for the data disks. none - The caching mode for the disk is not enabled. readOnly - The caching mode for the disk is read only. readWrite - The caching mode for the disk is read and write.
    title: Settings for the operating system disk of the virtual machine.
  Operation:
    properties:
      display:
        properties:
          description:
            title: The friendly name of the operation
            type: string
          operation:
            description: 'For example: read, write, delete, or listKeys/action'
            title: The operation type.
            type: string
          provider:
            title: Friendly name of the resource provider.
            type: string
          resource:
            title: The resource type on which the operation is performed.
            type: string
        title: The object that describes the operation.
      name:
        description: 'This is of the format {provider}/{resource}/{operation}'
        title: The operation name.
        type: string
      origin:
        title: The intended executor of the operation.
        type: string
      properties:
        title: Properties of the operation.
        type: object
    title: A REST API operation
    type: object
  OperationListResult:
    properties:
      nextLink:
        title: The URL to get the next set of operation list results if there are any.
        type: string
      value:
        items:
          $ref: '#/definitions/Operation'
        title: The list of operations supported by the resource provider.
        type: array
    title: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
  Pool:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: Contains information about a pool.
    properties:
      properties:
        $ref: '#/definitions/PoolProperties'
        description: The properties associated with the pool.
        x-ms-client-flatten: true
  PoolAllocationMode:
    description: The allocation mode for creating pools in the Batch account.
    enum:
      - BatchService
      - UserSubscription
    type: string
    x-ms-enum:
      modelAsString: false
      name: PoolAllocationMode
  PoolEndpointConfiguration:
    properties:
      inboundNatPools:
        description: The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.
        items:
          $ref: '#/definitions/InboundNatPool'
        title: A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally.
        type: array
    required:
      - inboundNatPools
    title: The endpoint configuration for a pool.
  PoolProperties:
    description: Pool properties.
    properties:
      allocationState:
        description: |-
          Values are:

           Steady - The pool is not resizing. There are no changes to the number of nodes in the pool in progress. A pool enters this state when it is created and when no operations are being performed on the pool to change the number of dedicated nodes.
           Resizing - The pool is resizing; that is, compute nodes are being added to or removed from the pool.
           Stopping - The pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed.
        enum:
          - Steady
          - Resizing
          - Stopping
        readOnly: true
        title: Whether the pool is resizing.
        type: string
        x-ms-enum:
          modelAsString: false
          name: AllocationState
      allocationStateTransitionTime:
        format: date-time
        readOnly: true
        title: The time at which the pool entered its current allocation state.
        type: string
      applicationLicenses:
        description: 'The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.'
        items:
          type: string
        title: The list of application licenses the Batch service will make available on each compute node in the pool.
        type: array
      applicationPackages:
        description: 'Changes to application packages affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: The list of application packages to be installed on each compute node in the pool.
        type: array
      autoScaleRun:
        $ref: '#/definitions/AutoScaleRun'
        description: 'This property is set only if the pool automatically scales, i.e. autoScaleSettings are used.'
        readOnly: true
        title: The results and errors from the last execution of the autoscale formula.
      certificates:
        description: 'For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: The list of certificates to be installed on each compute node in the pool.
        type: array
      creationTime:
        format: date-time
        readOnly: true
        title: The creation time of the pool.
        type: string
      currentDedicatedNodes:
        format: int32
        readOnly: true
        title: The number of compute nodes currently in the pool.
        type: integer
      currentLowPriorityNodes:
        format: int32
        readOnly: true
        title: The number of low priority compute nodes currently in the pool.
        type: integer
      deploymentConfiguration:
        $ref: '#/definitions/DeploymentConfiguration'
        description: 'Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).'
        title: This property describes how the pool nodes will be deployed - using Cloud Services or Virtual Machines.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the pool.
        type: string
      interNodeCommunication:
        description: 'This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to ''Disabled''.'
        enum:
          - Enabled
          - Disabled
        title: Whether the pool permits direct communication between nodes.
        type: string
        x-ms-enum:
          modelAsString: false
          name: InterNodeCommunicationState
      lastModified:
        description: 'This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.'
        format: date-time
        readOnly: true
        title: The last modified time of the pool.
        type: string
      maxTasksPerNode:
        format: int32
        title: The maximum number of tasks that can run concurrently on a single compute node in the pool.
        type: integer
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the pool as metadata.
        type: array
      networkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
        title: The network configuration for the pool.
      provisioningState:
        description: |-
          Values are:

           Succeeded - The pool is available to run tasks subject to the availability of compute nodes.
           Deleting - The user has requested that the pool be deleted, but the delete operation has not yet completed.
        enum:
          - Succeeded
          - Deleting
        readOnly: true
        title: The current state of the pool.
        type: string
        x-ms-enum:
          modelAsString: false
          name: PoolProvisioningState
      provisioningStateTransitionTime:
        format: date-time
        readOnly: true
        title: The time at which the pool entered its current state.
        type: string
      resizeOperationStatus:
        $ref: '#/definitions/ResizeOperationStatus'
        readOnly: true
        title: Contains details about the current or last completed resize operation.
      scaleSettings:
        $ref: '#/definitions/ScaleSettings'
        title: Settings which configure the number of nodes in the pool.
      startTask:
        $ref: '#/definitions/StartTask'
        description: 'In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.'
        title: A task specified to run on each compute node as it joins the pool.
      taskSchedulingPolicy:
        $ref: '#/definitions/TaskSchedulingPolicy'
        title: How tasks are distributed across compute nodes in a pool.
      userAccounts:
        items:
          $ref: '#/definitions/UserAccount'
        title: The list of user accounts to be created on each node in the pool.
        type: array
      vmSize:
        description: 'For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).'
        title: The size of virtual machines in the pool. All VMs in a pool are the same size.
        type: string
  ProxyResource:
    description: A definition of an Azure resource.
    properties:
      etag:
        description: 'The ETag of the resource, used for concurrency statements.'
        readOnly: true
        type: string
      id:
        description: The ID of the resource.
        readOnly: true
        type: string
      name:
        description: The name of the resource.
        readOnly: true
        type: string
      type:
        description: The type of the resource.
        readOnly: true
        type: string
    x-ms-azure-resource: true
  ResizeError:
    properties:
      code:
        description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        items:
          $ref: '#/definitions/ResizeError'
        title: Additional details about the error.
        type: array
      message:
        description: 'A message describing the error, intended to be suitable for display in a user interface.'
        type: string
    required:
      - code
      - message
    title: An error that occurred when resizing a pool.
  ResizeOperationStatus:
    description: Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady).
    properties:
      errors:
        description: 'This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.'
        items:
          $ref: '#/definitions/ResizeError'
        title: Details of any errors encountered while performing the last resize on the pool.
        type: array
      nodeDeallocationOption:
        $ref: '#/definitions/ComputeNodeDeallocationOption'
        description: The default value is requeue.
        title: Determines what to do with a node and its running task(s) if the pool size is decreasing.
      resizeTimeout:
        description: 'The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.
        type: string
      startTime:
        format: date-time
        title: The time when this resize operation was started.
        type: string
      targetDedicatedNodes:
        format: int32
        title: The desired number of dedicated compute nodes in the pool.
        type: integer
      targetLowPriorityNodes:
        format: int32
        title: The desired number of low-priority compute nodes in the pool.
        type: integer
    title: Details about the current or last completed resize operation.
  Resource:
    description: A definition of an Azure resource.
    properties:
      id:
        description: The ID of the resource.
        readOnly: true
        type: string
      location:
        description: The location of the resource.
        readOnly: true
        type: string
      name:
        description: The name of the resource.
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: The tags of the resource.
        readOnly: true
        type: object
      type:
        description: The type of the resource.
        readOnly: true
        type: string
    x-ms-azure-resource: true
  ResourceFile:
    properties:
      blobSource:
        description: 'This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.'
        title: The URL of the file within Azure Blob Storage.
        type: string
      fileMode:
        description: 'This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.'
        title: The file permission mode attribute in octal format.
        type: string
      filePath:
        title: 'The location on the compute node to which to download the file, relative to the task''s working directory.'
        type: string
    required:
      - blobSource
      - filePath
    title: A file to be downloaded from Azure blob storage to a compute node.
  ScaleSettings:
    description: 'Defines the desired size of the pool. This can either be ''fixedScale'' where the requested targetDedicatedNodes is specified, or ''autoScale'' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.'
    properties:
      autoScale:
        $ref: '#/definitions/AutoScaleSettings'
        description: This property and fixedScale are mutually exclusive and one of the properties must be specified.
        title: AutoScale settings for the pool.
      fixedScale:
        $ref: '#/definitions/FixedScaleSettings'
        description: This property and autoScale are mutually exclusive and one of the properties must be specified.
        title: Fixed scale settings for the pool.
    title: Scale settings for the pool
  StartTask:
    properties:
      commandLine:
        description: 'The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.'
        title: The command line of the start task.
        type: string
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the start task.
        type: array
      maxTaskRetryCount:
        description: 'The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.'
        format: int32
        title: The maximum number of times the task may be retried.
        type: integer
      resourceFiles:
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download to the compute node before running the command line.
        type: array
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the task runs as a non-administrative user unique to the task.'
        title: The user identity under which the start task runs.
      waitForSuccess:
        description: 'If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false.'
        title: 'Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.'
        type: boolean
    title: 'A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.'
  StorageAccountType:
    enum:
      - Standard_LRS
      - Premium_LRS
    title: The storage account type for use in creating data disks.
    type: string
    x-ms-enum:
      modelAsString: false
      name: StorageAccountType
  TaskSchedulingPolicy:
    properties:
      nodeFillType:
        enum:
          - Spread
          - Pack
        title: How tasks should be distributed across compute nodes.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ComputeNodeFillType
    required:
      - nodeFillType
    title: Specifies how tasks should be distributed across compute nodes.
  UserAccount:
    properties:
      elevationLevel:
        $ref: '#/definitions/ElevationLevel'
        description: nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
        title: The elevation level of the user account.
      linuxUserConfiguration:
        $ref: '#/definitions/LinuxUserConfiguration'
        description: 'This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.'
        title: The Linux-specific user configuration for the user account.
      name:
        title: The name of the user account.
        type: string
      password:
        title: The password for the user account.
        type: string
    required:
      - name
      - password
    title: Properties used to create a user on an Azure Batch node.
  UserIdentity:
    description: 'Specify either the userName or autoUser property, but not both.'
    properties:
      autoUser:
        $ref: '#/definitions/AutoUserSpecification'
        description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        title: The auto user under which the task is run.
      userName:
        description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        title: The name of the user identity under which the task is run.
        type: string
    title: The definition of the user identity under which the task is run.
  VirtualMachineConfiguration:
    properties:
      dataDisks:
        description: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
        items:
          $ref: '#/definitions/DataDisk'
        title: The configuration for data disks attached to the compute nodes in the pool.
        type: array
      imageReference:
        $ref: '#/definitions/ImageReference'
        title: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
      licenseType:
        description: |
          This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:

           Windows_Server - The on-premises license is for Windows Server.
           Windows_Client - The on-premises license is for Windows Client.
        title: The type of on-premises license to be used when deploying the operating system.
        type: string
      nodeAgentSkuId:
        description: 'The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the ''List supported node agent SKUs'' operation.'
        title: The SKU of the Batch node agent to be provisioned on compute nodes in the pool.
        type: string
      osDisk:
        $ref: '#/definitions/OSDisk'
        title: Settings for the operating system disk of the Virtual Machine.
      windowsConfiguration:
        $ref: '#/definitions/WindowsConfiguration'
        description: This property must not be specified if the imageReference specifies a Linux OS image.
        title: Windows operating system settings on the virtual machine.
    required:
      - imageReference
      - nodeAgentSkuId
    title: The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
  WindowsConfiguration:
    properties:
      enableAutomaticUpdates:
        description: 'If omitted, the default value is true.'
        title: Whether automatic updates are enabled on the virtual machine.
        type: boolean
    title: Windows operating system settings to apply to the virtual machine.
