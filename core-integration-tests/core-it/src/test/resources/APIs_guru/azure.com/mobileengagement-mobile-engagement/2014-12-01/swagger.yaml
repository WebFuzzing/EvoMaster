swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Microsoft Azure Mobile Engagement REST APIs.
  title: Engagement.ManagementClient
  version: '2014-12-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/mobileengagement/resource-manager/Microsoft.MobileEngagement/stable/2014-12-01/mobile-engagement.json'
      version: '2.0'
  x-providerName: azure.com
  x-serviceName: mobileengagement-mobile-engagement
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  AppCollectionParameter:
    description: Application collection.
    in: path
    name: appCollection
    required: true
    type: string
    x-ms-parameter-location: method
  AppNameParameter:
    description: Application resource name.
    in: path
    name: appName
    required: true
    type: string
    x-ms-parameter-location: method
  ResourceGroupNameParameter:
    description: The name of the resource group.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.MobileEngagement/appCollections':
    get:
      description: Lists app collections in a subscription.
      operationId: AppCollections_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AppCollectionListResult'
        default:
          description: ''
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - AppCollections
        - List
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.MobileEngagement/checkAppCollectionNameAvailability':
    post:
      description: Checks availability of an app collection name in the Engagement domain.
      operationId: AppCollections_CheckNameAvailability
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/AppCollectionNameAvailability'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AppCollectionNameAvailability'
        default:
          description: ''
          schema:
            $ref: '#/definitions/ApiError'
  '/subscriptions/{subscriptionId}/providers/Microsoft.MobileEngagement/supportedPlatforms':
    get:
      description: Lists supported platforms for Engagement applications.
      operationId: SupportedPlatforms_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SupportedPlatformsListResult'
        default:
          description: ''
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - List
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps':
    get:
      description: Lists apps in an appCollection.
      operationId: Apps_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AppListResult'
        default:
          description: ''
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Apps
        - List
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}':
    get:
      description: Get the list of campaigns.
      operationId: Campaigns_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: 'Control paging of campaigns, start results at the given offset, defaults to 0 (1st page of data).'
          in: query
          name: $skip
          required: false
          type: integer
        - description: 'Control paging of campaigns, number of campaigns to return with each call. It returns all campaigns by default. When specifying $top parameter, the response contains a `nextLink` property describing the path to get the next page if there are more results.'
          in: query
          name: $top
          required: false
          type: integer
        - description: 'Filter can be used to restrict the results to campaigns matching a specific state. The syntax is `$filter=state eq ''draft''`. Valid state values are: draft, scheduled, in-progress, and finished. Only the eq operator and the state property are supported.'
          in: query
          name: $filter
          required: false
          type: string
        - description: 'Sort results by an expression which looks like `$orderby=id asc` (this example is actually the default behavior). The syntax is orderby={property} {direction} or just orderby={property}. The available sorting properties are id, name, state, activatedDate, and finishedDate. The available directions are asc (for ascending order) and desc (for descending order). When not specified the asc direction is used. Only one property at a time can be used for sorting.'
          in: query
          name: $orderby
          required: false
          type: string
        - description: 'Restrict results to campaigns matching the optional `search` expression. This currently performs the search based on the name on the campaign only, case insensitive. If the campaign contains the value of the `search` parameter anywhere in the name, it matches.'
          in: query
          name: $search
          required: false
          type: string
      responses:
        '200':
          description: 'Success, campaigns are returned as JSON.'
          schema:
            $ref: '#/definitions/CampaignsListResult'
        default:
          description: |-
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - List
      x-ms-pageable:
        nextLinkName: nextLink
    post:
      description: 'Create a push campaign (announcement, poll, data push or native push).'
      operationId: Campaigns_Create
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Parameters supplied to the Update Campaign operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '201':
          description: 'Success, campaign is returned.'
          headers:
            Location:
              description: URL path to get the created campaign.
              type: string
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `409`: Another campaign with the same name already exists.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - CRUD
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/test':
    post:
      description: Test a new campaign on a set of devices.
      operationId: Campaigns_TestNew
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Parameters supplied to the Test Campaign operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CampaignTestNewParameters'
      responses:
        '200':
          description: Test campaign queued successfully.
          schema:
            $ref: '#/definitions/CampaignState'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Test
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}':
    delete:
      description: Delete a campaign previously created by a call to Create campaign.
      operationId: Campaigns_Delete
      parameters:
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Deleted successfully.
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign is not in `finished` state.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - CRUD
    get:
      description: The Get campaign operation retrieves information about a previously created campaign.
      operationId: Campaigns_Get
      parameters:
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: 'Success, campaign is returned.'
          schema:
            $ref: '#/definitions/CampaignResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - CRUD
    parameters:
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/AppCollectionParameter'
      - $ref: '#/parameters/AppNameParameter'
      - $ref: '#/parameters/ApiVersionParameter'
    put:
      description: 'Update an existing push campaign (announcement, poll, data push or native push).'
      operationId: Campaigns_Update
      parameters:
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - description: Parameters supplied to the Update Campaign operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '200':
          description: Updated successfully.
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign is not in `draft` state.
            * `401`: Authentication error.
            * `404`: Campaign not found.
            * `409`: Another campaign with the same name already exists.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - CRUD
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/activate':
    post:
      description: Activate a campaign previously created by a call to Create campaign.
      operationId: Campaigns_Activate
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Activated successfully.
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign not in `draft` state.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Action
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/finish':
    post:
      description: Finish a push campaign previously activated by a call to Activate campaign.
      operationId: Campaigns_Finish
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Finished successfully.
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign not in `in progress` state.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Action
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/push':
    post:
      description: Push a previously saved campaign (created with Create campaign) to a set of devices.
      operationId: Campaigns_Push
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - description: Parameters supplied to the Push Campaign operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CampaignPushParameters'
      responses:
        '200':
          description: 'OK, response body includes rejected devices.'
          schema:
            $ref: '#/definitions/CampaignPushResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign not in `in progress` state or `pushMode` is not `manual`. * `401`: Authentication error.
            * `404`: Campaign not found.
            * `413`: Too many device identifiers (current limit is 1000), or request body too large.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Action
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/statistics':
    get:
      description: Get all the campaign statistics.
      operationId: Campaigns_GetStatistics
      parameters:
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: 'Success, statistics are returned as JSON.'
          schema:
            $ref: '#/definitions/CampaignStatisticsResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
    parameters:
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/AppCollectionParameter'
      - $ref: '#/parameters/AppNameParameter'
      - $ref: '#/parameters/ApiVersionParameter'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/suspend':
    post:
      description: Suspend a push campaign previously activated by a call to Activate campaign.
      operationId: Campaigns_Suspend
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Suspended successfully.
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled or campaign not in `scheduled` state.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Action
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaigns/{kind}/{id}/test':
    post:
      description: Test an existing campaign (created with Create campaign) on a set of devices.
      operationId: Campaigns_TestSaved
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign identifier.
          in: path
          name: id
          required: true
          type: integer
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Parameters supplied to the Test Campaign operation.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CampaignTestSavedParameters'
      responses:
        '200':
          description: Test campaign queued successfully.
          schema:
            $ref: '#/definitions/CampaignStateResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - Test
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/campaignsByName/{kind}/{name}':
    get:
      description: The Get campaign operation retrieves information about a previously created campaign.
      operationId: Campaigns_GetByName
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - description: Campaign kind.
          enum:
            - announcements
            - polls
            - dataPushes
            - nativePushes
          in: path
          name: kind
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: CampaignKinds
        - description: Campaign name.
          in: path
          name: name
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: 'Success, campaign is returned.'
          schema:
            $ref: '#/definitions/CampaignResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Campaign not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Campaign
        - CRUD
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices':
    get:
      description: Query the information associated to the devices running an application.
      operationId: Devices_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Number of devices to return with each call. Defaults to 100 and cannot return more. Passing a greater value is ignored. The response contains a `nextLink` property describing the URI path to get the next page of results if not all results could be returned at once.
          in: query
          name: $top
          required: false
          type: integer
        - description: 'By default all `meta` and `appInfo` properties are returned, this property is used to restrict the output to the desired properties. It also excludes all devices from the output that have none of the selected properties. In other terms, only devices having at least one of the selected property being set is part of the results. Examples: - `$select=appInfo` : select all devices having at least 1 appInfo, return them all and don’t return any meta property. - `$select=meta` : return only meta properties in the output. - `$select=appInfo,meta/firstSeen,meta/lastSeen` : return all `appInfo`, plus meta object containing only firstSeen and lastSeen properties. The format is thus a comma separated list of properties to select. Use `appInfo` to select all appInfo properties, `meta` to select all meta properties. Use `appInfo/{key}` and `meta/{key}` to select specific appInfo and meta properties.'
          in: query
          name: $select
          required: false
          type: string
        - description: 'Filter can be used to reduce the number of results. Filter is a boolean expression that can look like the following examples: * `$filter=deviceId gt ''abcdef0123456789abcdef0123456789''` * `$filter=lastModified le 1447284263690L` * `$filter=(deviceId ge ''abcdef0123456789abcdef0123456789'') and (deviceId lt ''bacdef0123456789abcdef0123456789'') and (lastModified gt 1447284263690L)` The first example is used automatically for paging when returning the `nextLink` property. The filter expression is a combination of checks on some properties that can be compared to their value. The available operators are: * `gt`  : greater than * `ge`  : greater than or equals * `lt`  : less than * `le`  : less than or equals * `and` : to add multiple checks (all checks must pass), optional parentheses can be used. The properties that can be used in the expression are the following: * `deviceId {operator} ''{deviceIdValue}''` : a lexicographical comparison is made on the deviceId value, use single quotes for the value. * `lastModified {operator} {number}L` : returns only meta properties or appInfo properties whose last value modification timestamp compared to the specified value is matching (value is milliseconds since January 1st, 1970 UTC). Please note the `L` character after the number of milliseconds, its required when the number of milliseconds exceeds `2^31 - 1` (which is always the case for recent timestamps). Using `lastModified` excludes all devices from the output that have no property matching the timestamp criteria, like `$select`. Please note that the internal value of `lastModified` timestamp for a given property is never part of the results.'
          in: query
          name: $filter
          required: false
          type: string
      responses:
        '200':
          description: 'If successful, the response has a 200 status code and a JSON object describing a collection of devices in the body.'
          schema:
            $ref: '#/definitions/DevicesQueryResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Device
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks':
    get:
      description: Get the list of export tasks.
      operationId: ExportTasks_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - default: 0
          description: 'Control paging of export tasks, start results at the given offset, defaults to 0 (1st page of data).'
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
        - default: 20
          description: |-
            Control paging of export tasks, number of export tasks to return with each call. By default, it returns all export tasks with a default paging of 20.
            The response contains a `nextLink` property describing the path to get the next page if there are more results.
            The maximum paging limit for $top is 40.
          in: query
          maximum: 40
          minimum: 1
          name: $top
          required: false
          type: integer
        - description: |-
            Sort results by an expression which looks like `$orderby=taskId asc` (default when not specified).
            The syntax is orderby={property} {direction} or just orderby={property}.
            Properties that can be specified for sorting: taskId, errorDetails, dateCreated, taskStatus, and dateCreated.
            The available directions are asc (for ascending order) and desc (for descending order).
            When not specified the asc direction is used.
            Only one orderby property can be specified.
          in: query
          name: $orderby
          required: false
          type: string
      responses:
        '200':
          description: Success. Returns a list of export task statuses.
          schema:
            $ref: '#/definitions/exportTaskListResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - list
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/activities':
    post:
      description: Creates a task to export activities.
      operationId: ExportTasks_CreateActivitiesTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/crashes':
    post:
      description: Creates a task to export crashes.
      operationId: ExportTasks_CreateCrashesTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/errors':
    post:
      description: Creates a task to export errors.
      operationId: ExportTasks_CreateErrorsTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/events':
    post:
      description: Creates a task to export events.
      operationId: ExportTasks_CreateEventsTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/feedbackByCampaign':
    post:
      description: Creates a task to export push campaign data for a set of campaigns.
      operationId: ExportTasks_CreateFeedbackTaskByCampaign
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/feedbackByCampaignParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/feedbackByDate':
    post:
      description: Creates a task to export push campaign data for a date range.
      operationId: ExportTasks_CreateFeedbackTaskByDateRange
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/feedbackByDateRangeParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/jobs':
    post:
      description: Creates a task to export jobs.
      operationId: ExportTasks_CreateJobsTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/sessions':
    post:
      description: Creates a task to export sessions.
      operationId: ExportTasks_CreateSessionsTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/dateRangeExportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/tags':
    post:
      description: Creates a task to export tags.
      operationId: ExportTasks_CreateTagsTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/exportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/tokens':
    post:
      description: Creates a task to export tags.
      operationId: ExportTasks_CreateTokensTask
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/exportTaskParameter'
      responses:
        '202':
          description: Success. Returns the state of export task.
          headers:
            Location:
              description: Location of the export task state.
              type: string
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/exportTasks/{id}':
    get:
      description: Retrieves information about a previously created export task.
      operationId: ExportTasks_Get
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Export task identifier.
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success. The status of the export task is returned.
          schema:
            $ref: '#/definitions/exportTaskResult'
        default:
          description: |-
            * `4xx`: Bad request.
            * `5xx`: Server error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - export
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/importTasks':
    get:
      description: Get the list of import jobs.
      operationId: ImportTasks_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - default: 0
          description: 'Control paging of import jobs, start results at the given offset, defaults to 0 (1st page of data).'
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
        - default: 20
          description: |-
            Control paging of import jobs, number of import jobs to return with each call. By default, it returns all import jobs with a default paging of 20.
            The response contains a `nextLink` property describing the path to get the next page if there are more results.
            The maximum paging limit for $top is 40.
          in: query
          maximum: 40
          minimum: 1
          name: $top
          required: false
          type: integer
        - description: |-
            Sort results by an expression which looks like `$orderby=jobId asc` (default when not specified).
            The syntax is orderby={property} {direction} or just orderby={property}.
            Properties that can be specified for sorting: jobId, errorDetails, dateCreated, jobStatus, and dateCreated.
            The available directions are asc (for ascending order) and desc (for descending order).
            When not specified the asc direction is used.
            Only one orderby property can be specified.
          in: query
          name: $orderby
          required: false
          type: string
      responses:
        '200':
          description: 'Success, import jobs are returned as JSON.'
          schema:
            $ref: '#/definitions/importTaskListResult'
        default:
          description: |-
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - import
        - list
      x-ms-pageable:
        nextLinkName: nextLink
    post:
      description: Creates a job to import the specified data to a storageUrl.
      operationId: ImportTasks_Create
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/importTask'
      responses:
        '201':
          description: 'Success, import job is returned.'
          headers:
            Location:
              description: URL path to get the created import job.
              type: string
          schema:
            $ref: '#/definitions/importTaskResult'
        '202':
          description: 'Success, import job is returned.'
          headers:
            Location:
              description: URL path to get the created import job.
              type: string
          schema:
            $ref: '#/definitions/importTaskResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - import
        - crud
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/importTasks/{id}':
    get:
      description: The Get import job operation retrieves information about a previously created import job.
      operationId: ImportTasks_Get
      parameters:
        - description: Import job identifier.
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: 'Success, import job is returned.'
          schema:
            $ref: '#/definitions/importTaskResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Import job not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - import
        - crud
    parameters:
      - $ref: '#/parameters/SubscriptionIdParameter'
      - $ref: '#/parameters/ResourceGroupNameParameter'
      - $ref: '#/parameters/AppCollectionParameter'
      - $ref: '#/parameters/AppNameParameter'
      - $ref: '#/parameters/ApiVersionParameter'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/tag':
    post:
      description: |
        Update the tags registered for a set of devices running an application. Updates are performed asynchronously, meaning that a few seconds are needed before the modifications appear in the results of the Get device command.
      operationId: Devices_TagByDeviceId
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/DeviceTagsParameters'
      responses:
        '200':
          description: 'Success, invalid device identifiers are returned.'
          schema:
            $ref: '#/definitions/DeviceTagsResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `413`: Can be caused by having too many device identifiers (current limit is 1000).
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Device
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/devices/{deviceId}':
    get:
      description: Get the information associated to a device running an application.
      operationId: Devices_GetByDeviceId
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: Device identifier.
          in: path
          name: deviceId
          required: true
          type: string
      responses:
        '200':
          description: 'Success, device is returned.'
          schema:
            $ref: '#/definitions/Device'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: Device not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Device
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/users/tag':
    post:
      description: |
        Update the tags registered for a set of users running an application. Updates are performed asynchronously, meaning that a few seconds are needed before the modifications appear in the results of the Get device command.
      operationId: Devices_TagByUserId
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/DeviceTagsParameters'
      responses:
        '200':
          description: 'Success, invalid user identifiers are returned.'
          schema:
            $ref: '#/definitions/DeviceTagsResult'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `413`: Can be caused by having too many user identifiers (current limit is 1000).
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Device
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileEngagement/appcollections/{appCollection}/apps/{appName}/users/{userId}':
    get:
      description: Get the information associated to a device running an application using the user identifier.
      operationId: Devices_GetByUserId
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/AppCollectionParameter'
        - $ref: '#/parameters/AppNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: User identifier.
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: 'Success, device is returned.'
          schema:
            $ref: '#/definitions/Device'
        default:
          description: |
            * `400`: Invalid parameters or application is disabled. Check response body for details.
            * `401`: Authentication error.
            * `404`: User not found.
          schema:
            $ref: '#/definitions/ApiError'
      tags:
        - Device
definitions:
  AnnouncementFeedbackCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          action:
            description: Action that was performed on the announcement.
            enum:
              - pushed
              - replied
              - actioned
              - exited
            type: string
            x-ms-enum:
              modelAsString: true
              name: CampaignFeedbacks
          content-id:
            description: The unique identifier of the announcement.
            type: integer
        type: object
    description: Used to target devices who received an announcement.
    x-ms-discriminator-value: announcement-feedback
  ApiError:
    properties:
      error:
        properties:
          code:
            type: string
          message:
            type: string
        type: object
  App:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The Mobile Engagement App resource.
    properties:
      properties:
        $ref: '#/definitions/AppProperties'
        x-ms-client-flatten: true
  AppCollection:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The AppCollection resource.
    properties:
      properties:
        $ref: '#/definitions/AppCollectionProperties'
        x-ms-client-flatten: true
  AppCollectionListResult:
    description: The list AppCollections operation response.
    properties:
      nextLink:
        description: 'When the results are paged, the nextLink is the URI for the next page of results. This property is empty when there are no additional pages.'
        type: string
      value:
        description: The list of AppCollections and their properties.
        items:
          $ref: '#/definitions/AppCollection'
        type: array
  AppCollectionNameAvailability:
    properties:
      available:
        description: Available.
        type: boolean
      name:
        description: Name.
        type: string
      unavailabilityReason:
        description: UnavailabilityReason.
        type: string
  AppCollectionProperties:
    properties:
      provisioningState:
        description: Mobile Engagement AppCollection Properties.
        enum:
          - Creating
          - Succeeded
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningStates
  AppInfoFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          appInfo:
            description: An array containing all the required appInfo.
            items:
              type: string
            type: array
        type: object
    description: |
      Send only to users who have some app info set. This is a special filter that is automatically added if your campaign contains appInfo parameters. It is not intended to be public and should not be used as it could be removed or replaced by the API.
    x-ms-discriminator-value: app-info
  AppListResult:
    description: The list Apps operation response.
    properties:
      nextLink:
        description: 'When the results are paged, the nextLink is the URI for the next page of results. This property is empty when there are no additional pages.'
        type: string
      value:
        description: The list of Apps and their properties.
        items:
          $ref: '#/definitions/App'
        type: array
  AppProperties:
    properties:
      appState:
        description: The state of the application.
        type: string
      backendId:
        description: The application unique identifier.
        type: string
      platform:
        description: The platform of the app.
        type: string
  ApplicationVersionCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The application version.
            type: string
        type: object
    description: Used to target devices based on the version of the application they are using.
    x-ms-discriminator-value: application-version
  BooleanTagCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The name of the custom tag.
            type: string
          value:
            description: A custom boolean value to match.
            type: boolean
        type: object
    description: Target devices based on a boolean tag value.
    x-ms-discriminator-value: boolean-tag
  Campaign:
    allOf:
      - $ref: '#/definitions/CampaignLocalization'
    properties:
      audience:
        description: |
          Specify which users will be targeted by this campaign. By default, all users will be targeted. If you set `pushMode` property to `manual`, the only thing you can specify in the audience is the push quota filter. An audience is a boolean expression made of criteria (variables) operators (`not`, `and` or `or`) and parenthesis. Additionally, a set of filters can be added to an audience. 65535 bytes max as per JSON encoding.
        properties:
          criteria:
            additionalProperties:
              $ref: '#/definitions/Criterion'
            description: Criteria by name.
            type: object
          expression:
            description: |
              Boolean expression made of criteria (variables) operators (`not`, `and` or `or`) and parenthesis. Criterion names in the audience expression must start with a capital letter and can only contain alphanumeric (A-Z,a-z,0-9) and underscore (_) characters.
            type: string
          filters:
            description: Global filters applied to all devices.
            items:
              $ref: '#/definitions/Filter'
            type: array
        type: object
      category:
        description: Category of the campaign. Categories can be used on the application side to customize campaigns.
        maxLength: 64
        type: string
      deliveryActivities:
        description: |
          Announcements/polls only. Array containing the list of activities in which the campaign can be delivered. deliveryTime must be set to session. If the platform is iOS, this option can also be set if deliveryTime is set to any. In that case, if the campaign is received when the application is launched, it will be delivered only in the specified list of activities.
        items:
          type: string
        type: array
      deliveryTime:
        description: |
          Announcements/polls only. Defines when the campaign should be delivered. Valid values are: * `any`: Campaign will be delivered as soon as possible. * `background`: iOS only. Campaign will be only delivered when the application is in background (out of app). * `session`: Campaign will be delivered when the application is running.
        enum:
          - any
          - background
          - session
        type: string
        x-ms-enum:
          modelAsString: true
          name: DeliveryTimes
      endTime:
        description: |
          The date at which the campaign should be finished. The date shall conform to the following format: `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
        type: string
      localization:
        additionalProperties:
          $ref: '#/definitions/CampaignLocalization'
        description: |
          Push campaigns can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable properties.
        type: object
      name:
        description: Unique name of the campaign.
        maxLength: 64
        type: string
      notificationBadge:
        default: false
        description: |
          A flag indicating whether or not you want the native Apple Push notification to update the badge icon to the number of unread messages. The `deliveryTime` property must be set to `any` or `background`.
        type: boolean
      notificationCloseable:
        default: true
        description: A flag indicating whether or not you want the notification to be closeable.
        type: boolean
      notificationIcon:
        default: true
        description: A flag indicating whether or not you want to display the resource icon in notification content.
        type: boolean
      notificationSound:
        default: false
        description: |
          * `Android`: A flag indicating whether or not you want the system notification to make a sound. The `notificationType` property must be set to `system`. * `iOS`: A flag indicating whether or not you want the native Apple Push notification to make a sound. The `deliveryTime` property must be set to `any` or `background`. This will play the 'default' sound. If you want to play a custom sound, see the `notificationOptions` property. * `Windows`: A flag indicating whether or not you want the native Windows Notification Service to make a sound. The `deliveryTime` property must be set to `any`.
        type: boolean
      notificationType:
        default: popup
        description: |
          Android only. Defines how the notification should be displayed. Valid values are: * `system`: Display the notification using a standard system notification. * `popup`: Display the notification using a in-app banner notification.
        enum:
          - system
          - popup
        type: string
        x-ms-enum:
          modelAsString: true
          name: NotificationTypes
      notificationVibrate:
        default: false
        description: Android only. A flag indicating whether or not you want the system notification to make a vibration. The notificationType property must be set to system.
        type: boolean
      pushMode:
        default: real-time
        description: |
          Announcements/polls only. Defines how the campaign is pushed. Valid values are: * `real-time`: Never ending campaign, the campaign will be delivered  to your existing users and also to your new users. * `one-shot`: In this mode, the campaign will be delivered only to your existing users (campaign will stop after that). * `manual`: In this mode, the campaign will not be pushed automatically to devices. You will have to use the Push campaign command to push the campaign to your end-users. Campaigns can be pushed multiple times to the same device.
        enum:
          - real-time
          - one-shot
          - manual
        type: string
        x-ms-enum:
          modelAsString: true
          name: PushModes
      questions:
        description: Poll questions.
        items:
          $ref: '#/definitions/PollQuestion'
        type: array
      startTime:
        description: |
          The date at which the campaign should be started. The date shall conform to the following format: `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual, this attribute will be ignored. * If you set pushMode property to one-shot, then the timezone attribute must be specified. Example: `2011-11-21 15:23Z`
        type: string
      timezone:
        description: |
          The id of the time zone to use for the startTime and endTime dates. If not provided, the two date attributes will be expressed using the device timezone. Example: America/Los_Angeles
        type: string
      type:
        description: |
          Applicable only to announcements and data pushes. Type of announcement. Valid values are: * `text/plain`: Text-only announcement: `body` property should only contain plain text. * `text/html`: HTML announcement: `body` attribute can contain HTML code. * `only_notif`: Notification-only announcement. With this kind of announcements, the `body`, `title`, `actionButtonText` and `exitButtonText` are ignored. Type of data push. Valid values are: * `text/plain`: Text only data push: `body` property must be plain text. * `text/base64`: Base 64 data push: `body` property must be encoded in base 64.
        enum:
          - text/plain
          - text/html
          - only_notif
          - text/base64
        type: string
        x-ms-enum:
          modelAsString: true
          name: CampaignTypes
  CampaignListResult:
    allOf:
      - $ref: '#/definitions/CampaignStateResult'
    properties:
      activatedDate:
        description: |
          The date at which the campaign was activated (Not present if not yet activated). The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        format: date-time
        type: string
      endTime:
        description: |
          The date at which the campaign should be finished if specified. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. Applicable only to announcements and polls.
        format: date-time
        type: string
      finishedDate:
        description: |
          The date at which the campaign was finished (Not present if not yet finished). The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        format: date-time
        type: string
      name:
        description: Name of the campaign.
        type: string
      startTime:
        description: |
          The date at which the campaign should be started if specified. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard. Applicable only to announcements and polls.
        format: date-time
        type: string
      timezone:
        description: |
          The id of the time zone to use for the `startTime` and `endTime` dates. If not provided, the two date attributes are referencing to the device timezone. Applicable only to announcements and polls.
        type: string
  CampaignLocalization:
    properties:
      actionButtonText:
        description: Text of the action button for text/web announcements and polls (answer button).
        maxLength: 64
        type: string
      actionUrl:
        description: URL to launch when the announcement is actioned.
        maxLength: 2000
        type: string
      body:
        description: 'Body of the text/web announcement, poll or data push. This field supports appInfo markers.'
        maxLength: 65535
        type: string
      exitButtonText:
        description: Text of the exit button for text/web announcements and polls.
        maxLength: 64
        type: string
      notificationImage:
        description: |
          Optional image encoded in base 64. Usually included in the right part of in app notifications (or as a banner if there is neither text nor content icon). For Android system notifications, the image is used as the large icon (displayed only on Android 3+).
        format: byte
        maxLength: 65535
        type: string
      notificationMessage:
        description: Message of the notification. This field supports appInfo markers.
        maxLength: 4000
        type: string
      notificationOptions:
        $ref: '#/definitions/NotificationOptions'
        description: Additional platform specific options.
      notificationTitle:
        description: Title of the notification. This field supports appInfo markers.
        maxLength: 2000
        type: string
      payload:
        description: Native push payload.
        type: object
      title:
        description: Title of the announcement or poll. This field supports appInfo markers.
        maxLength: 128
        type: string
  CampaignPushParameters:
    properties:
      data:
        $ref: '#/definitions/Campaign'
        description: 'Alternative campaign''s content to use instead of the referenced campaign. All campaign''s properties can be overridden except for the following: `name`, `manualPush`, `audience`, `startTime` and `timezone`. `endTime` can be overridden while keeping original `timezone` parameter. The effect is to change the client side expiration of the received campaign for the specific devices. If your campaign is a *poll*, the provided data should contain the same number of questions and choices that the one you created with the create command. Please note that all the push messages created using this parameter will expire after 4 weeks at maximum (`endTime` property of the campaign will be used if lower than 4 weeks in the future).'
      deviceIds:
        description: |
          Device identifiers to push as a JSON array of strings. Note that if you want to push the same campaign several times to the same device, you need to make several API calls.
        items:
          type: string
        type: array
    required:
      - deviceIds
  CampaignPushResult:
    properties:
      invalidDeviceIds:
        description: |
          A JSON array containing all identifiers that have been rejected. A device can be rejected for the following reasons: * The device hasn’t reported any session yet. * The device is over quota (if a push quota filter is applied on your campaign). Please note that if the request parameters are valid but all the specified devices are rejected, the status code is still `200` with a response including all the devices as being rejected.
        items:
          type: string
        type: array
  CampaignResult:
    allOf:
      - $ref: '#/definitions/Campaign'
    properties:
      activatedDate:
        description: |
          The date at which the campaign was activated (Not present if not yet activated). The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        format: date-time
        type: string
      finishedDate:
        description: |
          The date at which the campaign was finished (Not present if not yet finished). The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
        format: date-time
        type: string
      id:
        description: Campaign identifier.
        type: integer
      state:
        description: 'State of the campaign, or ''queued'' when testing a campaign.'
        enum:
          - draft
          - scheduled
          - in-progress
          - finished
          - queued
        type: string
        x-ms-enum:
          modelAsString: true
          name: CampaignStates
  CampaignState:
    properties:
      state:
        description: 'State of the campaign, or ''queued'' when testing a campaign.'
        enum:
          - draft
          - scheduled
          - in-progress
          - finished
          - queued
        type: string
        x-ms-enum:
          modelAsString: true
          name: CampaignStates
  CampaignStateResult:
    allOf:
      - $ref: '#/definitions/CampaignState'
    properties:
      id:
        description: Campaign identifier.
        type: integer
    required:
      - id
  CampaignStatisticsResult:
    properties:
      answers:
        additionalProperties:
          type: object
        description: Poll specific statistics.
        type: object
      content-actioned:
        description: Number of times the campaign’s content view was actioned (Not present in case of a notification-only announcement or a native-push).
        type: integer
      content-displayed:
        description: 'Number of times the campaign’s content view was displayed (Not present in case of a notification-only announcement, a data-push or a native-push).'
        type: integer
      content-exited:
        description: Number of times the campaign’s content view was exited (Not present in case of a notification-only announcement or a native-push).
        type: integer
      delivered:
        description: Number of times the campaign was received by the application (Not present in case of a native-push).
        type: integer
      dropped:
        description: Number of times the campaign was dropped by the application. It can happen if the SDK failed to parse the campaign payload or if an error occurred while trying to notify the end-user (Not present in case of a native-push).
        type: integer
      in-app-notification-actioned:
        description: Number of times the in-app notification was actioned (Not present in case of a data-push or a native-push).
        type: integer
      in-app-notification-displayed:
        description: Number of times the in-app notification was displayed (Not present in case of a data-push or a native-push).
        type: integer
      in-app-notification-exited:
        description: Number of times the in-app notification was exited (Not present in case of a data-push or a native-push).
        type: integer
      pushed:
        description: Number of pushes performed.
        type: integer
      pushed-native:
        description: 'Total number of native pushes. Information only available on Android, iOS, Windows Phone and Windows applications.'
        type: integer
      pushed-native-adm:
        description: Number of ADM pushes (available only on Android applications).
        type: integer
      pushed-native-google:
        description: Number of C2DM/GCM pushes (available only on Android applications).
        type: integer
      queued:
        description: Number of times the campaign was registered to be pushed.
        type: integer
      system-notification-actioned:
        description: 'Number of times the system notification (On Android it corresponds to a status bar notification. On iOS, it is the Apple Push notification) was actioned.'
        type: integer
      system-notification-displayed:
        description: Number of times the system notification was displayed (Not present in case of a data-push or a native-push). On Android it corresponds to a status bar notification.
        type: integer
      system-notification-exited:
        description: Number of times the system notification was exited (Not present in case of a data-push or a native-push).
        type: integer
  CampaignTestNewParameters:
    allOf:
      - $ref: '#/definitions/CampaignTestSavedParameters'
    properties:
      data:
        $ref: '#/definitions/Campaign'
    required:
      - data
  CampaignTestSavedParameters:
    properties:
      deviceId:
        description: Device identifier (as returned by the SDK).
        type: string
      lang:
        description: The language to test expressed using ISO 639-1 code. The default language of the campaign will be used if the parameter is not provided.
        type: string
    required:
      - deviceId
  CampaignType:
    description: Campaign type.
    enum:
      - Announcement
      - DataPush
      - NativePush
      - Poll
    type: string
    x-ms-enum:
      modelAsString: false
      name: CampaignType
  CampaignsListResult:
    description: The campaigns list result.
    properties:
      nextLink:
        description: 'When using `top` parameter and if partial results are returned, this property describes a URI path to get the next results. This property is not set when reaching the last page.'
        type: string
      value:
        description: The list of campaigns.
        items:
          $ref: '#/definitions/CampaignListResult'
        type: array
  CarrierCountryCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: Two-characters country code (ISO 3166-1).
            type: string
        type: object
    description: Used to target devices based on their carrier country.
    x-ms-discriminator-value: carrier-country
  CarrierNameCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: Carrier name value.
            type: string
        type: object
    description: Used to target devices based on their carrier name.
    x-ms-discriminator-value: carrier-name
  Criterion:
    discriminator: type
    properties:
      type:
        type: string
    required:
      - type
    type: object
  DatapushFeedbackCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          action:
            description: |
              Action that was performed on the data push (action depends on the return value in the callbacks you declared in the client code).
            enum:
              - pushed
              - replied
              - actioned
              - exited
            type: string
            x-ms-enum:
              modelAsString: true
              name: CampaignFeedbacks
          content-id:
            description: The unique identifier of the data push.
            type: integer
        type: object
    description: Used to target devices who received a data push.
    x-ms-discriminator-value: datapush-feedback
  DateTagCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The name of the custom tag.
            type: string
          op:
            description: 'comparison operator: `EQ` (equal to), `LT` (less than), `GT` (greater than), `LE` (less than or equal to) or `GE` (greater than or equal to).'
            enum:
              - EQ
              - LT
              - GT
              - LE
              - GE
            type: string
            x-ms-enum:
              modelAsString: true
              name: AudienceOperators
          value:
            description: |
              It can be either: * an absolute date using yyyy-MM-dd format (e.g. 1969-12-07 stands for 7 Dec 1969). * an offset in days relative to the current day (`TODAY` + `value`).
            format: date
            type: string
        type: object
    description: Target devices based on a date tag value.
    x-ms-discriminator-value: date-tag
  Device:
    properties:
      appInfo:
        additionalProperties:
          type: string
        description: 'Also known as tags, a key-value set as a JSON object.'
        type: object
      deviceId:
        description: The device result.
        type: string
      info:
        $ref: '#/definitions/DeviceInfo'
        description: 'Last technical data received (concerning device, system, network and application identification).'
      location:
        $ref: '#/definitions/DeviceLocation'
        description: Last geo-location data received.
      meta:
        $ref: '#/definitions/DeviceMeta'
        description: Application usage data.
    required:
      - deviceId
  DeviceInfo:
    properties:
      androidAPILevel:
        description: Android API level.
        type: integer
      applicationVersionCode:
        description: Application version code.
        type: integer
      applicationVersionName:
        description: Application version name.
        type: string
      carrierCountry:
        description: Carrier country.
        type: string
      carrierName:
        description: Carrier name.
        type: string
      firmwareName:
        description: Firmware name.
        type: string
      firmwareVersion:
        description: Firmware version.
        type: string
      locale:
        description: Locale code.
        type: string
      networkSubtype:
        description: Network sub-type.
        type: string
      networkType:
        description: Network type.
        type: string
      phoneManufacturer:
        description: Phone manufacturer
        type: string
      phoneModel:
        description: Phone model.
        type: string
      serviceVersion:
        description: SDK version.
        type: string
      timeZoneOffset:
        description: 'The offset in minutes from UTC for the device time zone, including daylight savings time.'
        type: integer
  DeviceLocation:
    properties:
      countrycode:
        description: The ISO 3166 two-letter country code.
        type: string
      locality:
        description: 'A locality within the administrative region, such as a town or city.'
        type: string
      region:
        description: 'An administrative region of the nation, such as a state or province.'
        type: string
  DeviceManufacturerCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The device manufacturer.
            type: string
        type: object
    description: Used to target devices based on the device manufacturer.
    x-ms-discriminator-value: device-manufacturer
  DeviceMeta:
    properties:
      firstSeen:
        description: 'First time the device used the application in milliseconds since January 1st, 1970 UTC.'
        format: int64
        type: integer
      lastInfo:
        description: 'Timestamp corresponding to the info object in milliseconds since January 1st, 1970 UTC.'
        format: int64
        type: integer
      lastLocation:
        description: 'Timestamp corresponding to the location object in milliseconds since January 1st, 1970 UTC.'
        format: int64
        type: integer
      lastSeen:
        description: 'Last time the device used the application in milliseconds since January 1st, 1970 UTC.'
        format: int64
        type: integer
      nativePushEnabled:
        description: 'Boolean indicating if native push notifications (like Android’s GCM or Apple’s APNS) are enabled for the application. This boolean is set to true when the application registers successfully to the native push service, and set to false when the native push service reports to Mobile Engagement that the application can no longer be pushed (which means that it has been uninstalled). This report is performed a few hours after Mobile Engagement has tried to perform a native push to a device on which the application has been uninstalled.'
        type: boolean
  DeviceModelCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The device model.
            type: string
        type: object
    description: Used to target devices based on the device model.
    x-ms-discriminator-value: device-model
  DeviceQueryResult:
    properties:
      appInfo:
        additionalProperties:
          type: string
        description: 'Also known as tags, a key-value set as a JSON object.'
        type: object
      deviceId:
        description: The device result.
        type: string
      meta:
        $ref: '#/definitions/DeviceMeta'
        description: Application usage data.
    required:
      - deviceId
  DeviceTagsParameters:
    properties:
      deleteOnNull:
        default: false
        description: 'If this parameter is `true`, tags with a null value will be deleted.'
        type: boolean
      tags:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        description: |
          A JSON object describing the set of tags to record for a set of users. Each key is a device/user identifier, each value is itself a key/value set: the tags to set for the specified device/user identifier.
    required:
      - tags
  DeviceTagsResult:
    properties:
      invalidIds:
        description: |
          A JSON array containing all identifiers that have been rejected. Please note that if the request parameters are valid but all the specified devices are rejected, the status code is still `200` with a response including all the devices as being rejected.
        items:
          type: string
        type: array
    required:
      - invalidIds
  DevicesQueryResult:
    description: The campaigns list result.
    properties:
      nextLink:
        description: 'If partial results are returned, this property describes a URI path to get the next result page.'
        type: string
      value:
        description: The list of devices.
        items:
          $ref: '#/definitions/DeviceQueryResult'
        type: array
  EngageActiveUsersFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          threshold:
            description: An integer value representing the threshold to apply on this filter.
            type: integer
        type: object
    description: 'Send only to users who have used the app in the last {threshold} days.'
    x-ms-discriminator-value: engage-active-users
  EngageIdleUsersFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          threshold:
            description: An integer value representing the threshold to apply on this filter.
            type: integer
        type: object
    description: 'Send only to users who haven''t used the app in the last {threshold} days.'
    x-ms-discriminator-value: engage-idle-users
  EngageNewUsersFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          threshold:
            description: An integer value representing the threshold to apply on this filter.
            type: integer
        type: object
    description: 'Send only to users whose first app use is less than {threshold} days old.'
    x-ms-discriminator-value: engage-new-users
  EngageOldUsersFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          threshold:
            description: An integer value representing the threshold to apply on this filter.
            type: integer
        type: object
    description: 'Send only to users whose first app use is more than {threshold} days old.'
    x-ms-discriminator-value: engage-old-users
  EngageSubsetFilter:
    allOf:
      - $ref: '#/definitions/Filter'
      - properties:
          max:
            description: An integer value representing the maximum users that should be pushed.
            type: integer
        type: object
    description: Send only to a maximum of max users.
    x-ms-discriminator-value: engage-subset
  Filter:
    discriminator: type
    properties:
      type:
        type: string
    required:
      - type
    type: object
  FirmwareVersionCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: Firmware version.
            type: string
        type: object
    description: Used to target devices based on their firmware version.
    x-ms-discriminator-value: firmware-version
  GeoFencingCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          expiration:
            description: Number of minutes before device location is considered to be expired.
            type: integer
          lat:
            description: The latitude of the central point of the region.
            type: number
          lon:
            description: The longitude of the central point of the region.
            type: number
          radius:
            description: 'The radius of the central point of the region, in meters.'
            type: integer
        type: object
    description: |
      Used to target devices based on a specific region. A center point (defined by a latitude and longitude) and a radius form the boundary for the region. This criterion will be met when the user crosses the boundaries of the region.
    x-ms-discriminator-value: geo-fencing
  IntegerTagCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The name of the custom tag.
            type: string
          op:
            description: 'comparison operator: `EQ` (equal to), `LT` (less than), `GT` (greater than), `LE` (less than or equal to) or `GE` (greater than or equal to).'
            enum:
              - EQ
              - LT
              - GT
              - LE
              - GE
            type: string
            x-ms-enum:
              modelAsString: true
              name: AudienceOperators
          value:
            description: A custom integer value to match.
            type: integer
        type: object
    description: Target devices based on an integer tag value.
    x-ms-discriminator-value: integer-tag
  LanguageCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: Two character language code (ISO 639-1).
            type: string
        type: object
    description: Used to target devices based on the language of their device.
    x-ms-discriminator-value: language
  LocationCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          country:
            description: Two character country code where the user is located (ISO 3166-1).
            type: string
          locality:
            description: 'A locality within the administrative region, such as a town or city.'
            type: string
          region:
            description: 'An administrative region of the country, such as a state or province.'
            type: string
        required:
          - country
        type: object
    description: Used to target devices based on their last know area.
    x-ms-discriminator-value: location
  NativePushEnabledFilter:
    allOf:
      - $ref: '#/definitions/Filter'
    description: Engage only users with native push enabled.
    x-ms-discriminator-value: native-push-enabled
  NetworkTypeCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: 'The network type (Wifi, Mobile...).'
            type: string
        type: object
    description: Used to target devices based their network type.
    x-ms-discriminator-value: network-type
  NotificationOptions:
    properties:
      actionText:
        description: |
          The action text is the title of the right button of the alert or the value of the unlock slider, where the value replaces 'unlock' in 'slide to unlock'. 'View' (localized to the preferred language) is used as the default value. The `deliveryTime` property must be set to `any` or `background`.
        type: string
      bigPicture:
        description: |
          URL of a remote image displayed in expanded notifications on
          Android 4.1+ devices with the following constraints:
          * The URL length is limited to 2000 characters.
          * The image size must be less than 4 MiB.
          * The following MIME types are supported:
          ** image/png
          ** image/jpeg
          ** image/gif
          ** image/webp
          ** image/bmp
          ** image/x-bmp
          ** image/x-ms-bmp
          * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
          * Incompatible with `bigText`, only one of the fields can be set.
          * The `notificationType` property must be set to `system`.
        maxLength: 2000
        type: string
      bigText:
        description: |
          Android 4.1+ only. Multi line message shown in expanded notifications on Android 4.1+ devices. The `notificationType` property must be set to `system`.
        maxLength: 4000
        type: string
      sound:
        description: |
          iOS only. The name of a sound file in the application bundle. The sound in this file is played as an alert. If the sound file doesn’t exist or default is specified as the value, the default alert sound is played. The audio must be in one of the audio data formats that are compatible with system sounds. The `deliveryTime` property must be set to `any` or `background`.
        type: string
  PollAnswerFeedbackCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          choice-id:
            description: The unique identifier of the choice.
            type: integer
          content-id:
            description: The unique identifier of the poll.
            type: integer
        type: object
    description: Used to target devices who answered X to a given question.
    x-ms-discriminator-value: poll-answer-feedback
  PollFeedbackCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          action:
            description: Action that was performed on the poll.
            enum:
              - pushed
              - replied
              - actioned
              - exited
            type: string
            x-ms-enum:
              modelAsString: true
              name: CampaignFeedbacks
          content-id:
            description: The unique identifier of the poll.
            type: integer
        type: object
    description: Used to target devices who received a poll.
    x-ms-discriminator-value: poll-feedback
  PollQuestion:
    allOf:
      - $ref: '#/definitions/PollQuestionLocalization'
    properties:
      choices:
        description: List of possible choices for this question.
        items:
          $ref: '#/definitions/PollQuestionChoice'
        type: array
      id:
        description: Unique identifier of the question.
        type: integer
      localization:
        additionalProperties:
          $ref: '#/definitions/PollQuestionLocalization'
        description: |
          Poll questions can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.
        type: object
  PollQuestionChoice:
    allOf:
      - $ref: '#/definitions/PollQuestionChoiceLocalization'
    properties:
      id:
        description: Unique identifier of the choice.
        type: integer
      isDefault:
        default: false
        description: A flag indicating if this choice is the default choice for the associated question. Only one choice in the array can have this value set to true.
        type: boolean
      localization:
        additionalProperties:
          $ref: '#/definitions/PollQuestionChoiceLocalization'
        description: |
          Poll choices can be localized using an optional JSON object. The JSON key is a two-character language code as specified by the ISO 639-1 standard. The corresponding value is an object containing the localizable property title.
        type: object
  PollQuestionChoiceLocalization:
    properties:
      title:
        description: Title of the choice.
        maxLength: 256
        type: string
  PollQuestionLocalization:
    properties:
      title:
        description: Title of the question.
        maxLength: 256
        type: string
  PushQuotaFilter:
    allOf:
      - $ref: '#/definitions/Filter'
    description: Engage only users for whom the push quota is not reached.
    x-ms-discriminator-value: push-quota
  Resource:
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  ScreenSizeCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: Screen size using the following format WIDTH**x**HEIGHT.
            type: string
        type: object
    description: Used to target devices based on the screen resolution of their device.
    x-ms-discriminator-value: screen-size
  SegmentCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          exclude:
            description: 'If value is true, the criterion will target users that are NOT part of the segment.'
            type: boolean
          id:
            description: Segment identifier.
            type: integer
        type: object
    description: Target devices based on an existing segment.
    x-ms-discriminator-value: segment
  StringTagCriterion:
    allOf:
      - $ref: '#/definitions/Criterion'
      - properties:
          name:
            description: The name of the custom tag.
            type: string
          value:
            description: A custom string to match for tag value (? and * characters can be used to perform wildcard matching).
            type: string
        type: object
    description: Target devices based on a string tag value.
    x-ms-discriminator-value: string-tag
  SupportedPlatformsListResult:
    properties:
      platforms:
        description: List of supported platforms.
        items:
          type: string
        type: array
  containerUrl:
    $ref: '#/definitions/url'
    description: A shared Access Signature (SAS) BLOB container URL to contain the exported data.
  date:
    description: A date as defined by full-date in RFC3339.
    format: date
    type: string
  dateRangeExportTaskParameter:
    properties:
      containerUrl:
        $ref: '#/definitions/containerUrl'
      description:
        description: A description of the export task.
        type: string
      endDate:
        $ref: '#/definitions/date'
        description: The RFC3339 full-date of the end of the period for which data is exported.
      exportFormat:
        $ref: '#/definitions/exportFormat'
        description: The format of the exported data.
      startDate:
        $ref: '#/definitions/date'
        description: The RFC3339 full-date of the start of the period for which data is exported.
    readOnly: false
    required:
      - containerUrl
      - startDate
      - endDate
      - exportFormat
  exportFormat:
    description: The format of exported data.
    enum:
      - JsonBlob
      - CsvBlob
    type: string
    x-ms-enum:
      modelAsString: false
      name: ExportFormat
  exportOptions:
    description: Options to control export generation.
    properties:
      exportUserId:
        type: boolean
    type: object
  exportState:
    description: The state of an export task.
    enum:
      - Queued
      - Started
      - Succeeded
      - Failed
    type: string
    x-ms-enum:
      modelAsString: false
      name: ExportState
  exportTaskListResult:
    description: Gets a paged list of ExportTasks.
    properties:
      nextLink:
        description: 'When the results are paged, the nextLink is the URI for the next page of results. This property is empty when there are no additional pages.'
        type: string
      value:
        description: The list of export tasks.
        items:
          $ref: '#/definitions/exportTaskResult'
        type: array
    readOnly: true
    required:
      - value
  exportTaskParameter:
    properties:
      containerUrl:
        $ref: '#/definitions/containerUrl'
      description:
        description: A description of the export task.
        type: string
      exportFormat:
        $ref: '#/definitions/exportFormat'
        description: The format of the exported data.
    readOnly: false
    required:
      - containerUrl
      - exportFormat
  exportTaskResult:
    properties:
      dateCompleted:
        description: The RFC3339 date-time the export task was completed.
        format: date-time
        type: string
      dateCreated:
        description: The RFC3339 date-time the export task was created.
        format: date-time
        type: string
      description:
        description: A description of the export task.
        type: string
      errorDetails:
        description: 'Details of errors encountered during the export, if any.'
        type: string
      exportType:
        $ref: '#/definitions/exportType'
      id:
        description: Unique identifier of the export task.
        type: string
      state:
        $ref: '#/definitions/exportState'
    readOnly: true
    required:
      - id
      - state
      - dateCreated
      - exportType
  exportType:
    description: The type of export.
    enum:
      - Activity
      - Tag
      - Crash
      - Error
      - Event
      - Job
      - Session
      - Token
      - Push
    type: string
    x-ms-enum:
      modelAsString: false
      name: ExportType
  feedbackByCampaignParameter:
    properties:
      campaignIds:
        description: A list of campaign identifiers.
        items:
          format: long
          type: integer
        minItems: 1
        type: array
      campaignType:
        $ref: '#/definitions/CampaignType'
      containerUrl:
        $ref: '#/definitions/containerUrl'
      description:
        description: A description of the export task.
        type: string
      exportFormat:
        $ref: '#/definitions/exportFormat'
        description: The format of the exported data.
    readOnly: false
    required:
      - containerUrl
      - campaignType
      - campaignIds
      - exportFormat
  feedbackByDateRangeParameter:
    properties:
      campaignType:
        $ref: '#/definitions/CampaignType'
      campaignWindowEnd:
        $ref: '#/definitions/timestamp'
        description: The RFC3339 date-time end of the period for inclusion of active campaigns.
      campaignWindowStart:
        $ref: '#/definitions/timestamp'
        description: The RFC3339 date-time start of the period for inclusion of active campaigns.
      containerUrl:
        $ref: '#/definitions/containerUrl'
      description:
        description: A description of the export task.
        type: string
      exportFormat:
        $ref: '#/definitions/exportFormat'
        description: The format of the exported data.
    readOnly: false
    required:
      - containerUrl
      - campaignType
      - campaignWindowStart
      - campaignWindowEnd
      - exportFormat
  importTask:
    properties:
      storageUrl:
        description: A shared Access Signature (SAS) Storage URI where the job results will be retrieved from.
        type: string
  importTaskListResult:
    description: Gets a paged list of import tasks.
    properties:
      nextLink:
        description: 'When the results are paged, the nextLink is the URI for the next page of results. This property is empty when there are no additional pages.'
        type: string
      value:
        description: The list of import task.
        items:
          $ref: '#/definitions/importTaskResult'
        type: array
  importTaskResult:
    allOf:
      - $ref: '#/definitions/importTask'
    properties:
      dateCompleted:
        description: |
          The date at which the import job completed (Not present if not yet completed).
          The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        format: date-time
        type: string
      dateCreated:
        description: |
          The date at which the import job was created.
          The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
        format: date-time
        type: string
      errorDetails:
        description: 'Details of any errors encountered during the import, if any.'
        type: string
      id:
        description: Unique identifier of the import task.
        type: string
      state:
        description: The current state of the import task.
        enum:
          - Queued
          - Started
          - Succeeded
          - Failed
        type: string
        x-ms-enum:
          modelAsString: true
          name: JobStates
  timestamp:
    description: A date time as defined by date-time in RFC3339.
    format: date-time
    type: string
  url:
    format: uri
    type: string
