swagger: '2.0'
schemes:
  - http
  - https
host: 'azure.local:19080'
info:
  description: 'Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.'
  title: Service Fabric Client APIs
  version: 6.3.0.9
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/data-plane/Microsoft.ServiceFabric/stable/6.3/servicefabric.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric
  x-tags:
    - Azure
    - Microsoft
produces:
  - application/json
parameters:
  ApiVersion_6-0-Preview_RequiredQueryParam:
    default: 6.0-preview
    description: The version of the API. This parameter is required and its value must be '"6.0-preview'.
    enum:
      - 6.0-preview
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-0-Preview_RequiredQueryParam
      values:
        - description: The version number for the preview functionality of 6.0 runtime.
          value: 6.0-preview
    x-ms-parameter-location: method
  ApiVersion_6-0_RequiredQueryParam:
    default: '6.0'
    description: |-
      The version of the API. This parameter is required and its value must be '6.0'.

      Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.

      Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
    enum:
      - '6.0'
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-0_RequiredQueryParam
      values:
        - description: The 6.0 version of the API.
          value: '6.0'
    x-ms-parameter-location: method
  ApiVersion_6-1_RequiredQueryParam:
    default: '6.1'
    description: |-
      The version of the API. This parameter is required and its value must be '6.1'.

      Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.

      Additionally the runtime accept any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0, but if the runtime is 6.1, in order to make it easier to write the clients, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
    enum:
      - '6.1'
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-1_RequiredQueryParam
      values:
        - description: The 6.1 version of the API.
          value: '6.1'
    x-ms-parameter-location: method
  ApiVersion_6-2-Preview_RequiredQueryParam:
    default: 6.2-preview
    description: The version of the API. This parameter is required and its value must be '6.2-preview'.
    enum:
      - 6.2-preview
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-2-Preview_RequiredQueryParam
      values:
        - description: The version number for the preview functionality of 6.2 runtime
          value: 6.2-preview
    x-ms-parameter-location: method
  ApiVersion_6-2_RequiredQueryParam:
    default: '6.2'
    description: |-
      The version of the API. This parameter is required and its value must be '6.2'.

      Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.

      Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
    enum:
      - '6.2'
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-2_RequiredQueryParam
      values:
        - description: The 6.2 version of the API.
          value: '6.2'
    x-ms-parameter-location: method
  ApiVersion_6-3-Preview_RequiredQueryParam:
    default: 6.3-preview
    description: The version of the API. This parameter is required and its value must be '6.3-preview'.
    enum:
      - 6.3-preview
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-3-Preview_RequiredQueryParam
      values:
        - description: The version number for the preview functionality of 6.3 runtime
          value: 6.3-preview
    x-ms-parameter-location: method
  ApiVersion_6-3_RequiredQueryParam:
    default: '6.3'
    description: |-
      The version of the API. This parameter is required and its value must be '6.3'.

      Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.

      Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.
    enum:
      - '6.3'
    in: query
    name: api-version
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApiVersion_6-3_RequiredQueryParam
      values:
        - description: The 6.3 version of the API.
          value: '6.3'
    x-ms-parameter-location: method
  ApplicationDefinitionKindFilterOptionalQueryParam:
    default: 0
    description: |-
      Used to filter on ApplicationDefinitionKind, which is the mechanism used to define a Service Fabric application.
      - Default - Default value, which performs the same function as selecting "All". The value is 0.
      - All - Filter that matches input with any ApplicationDefinitionKind value. The value is 65535.
      - ServiceFabricApplicationDescription - Filter that matches input with ApplicationDefinitionKind value ServiceFabricApplicationDescription. The value is 1.
      - Compose - Filter that matches input with ApplicationDefinitionKind value Compose. The value is 2.
    in: query
    name: ApplicationDefinitionKindFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  ApplicationDescriptionRequiredBodyParam:
    description: Description for creating an application.
    in: body
    name: ApplicationDescription
    required: true
    schema:
      $ref: '#/definitions/ApplicationDescription'
    x-ms-parameter-location: method
  ApplicationHealthPolicyOptionalBodyParam:
    description: |-
      Describes the health policies used to evaluate the health of an application or one of its children.
      If not present, the health evaluation uses the health policy from application manifest or the default health policy.
    in: body
    name: ApplicationHealthPolicy
    required: false
    schema:
      $ref: '#/definitions/ApplicationHealthPolicy'
    x-ms-parameter-location: method
  ApplicationIdRequiredPathParam:
    description: |-
      The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
      Starting from version 6.0, hierarchical names are delimited with the "~" character.
      For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.
    in: path
    name: applicationId
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ApplicationNameRequiredQueryParam:
    description: 'The name of application to create from compose file. This is typically the full name of the application including ''fabric:'' URI scheme.'
    in: query
    name: ApplicationName
    required: true
    type: string
    x-ms-parameter-location: method
  ApplicationResourceDescriptionRequiredBodyParam:
    description: Description for creating an application resource.
    in: body
    name: applicationResourceDescription
    required: true
    schema:
      $ref: '#/definitions/ApplicationResourceDescription'
    x-ms-parameter-location: method
  ApplicationResourceNameRequiredPathParam:
    description: Service Fabric application resource name.
    in: path
    name: applicationResourceName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ApplicationTypeDefinitionKindFilterOptionalQueryParam:
    default: 0
    description: |-
      Used to filter on ApplicationTypeDefinitionKind which is the mechanism used to define a Service Fabric application type.
      - Default - Default value, which performs the same function as selecting "All". The value is 0.
      - All - Filter that matches input with any ApplicationTypeDefinitionKind value. The value is 65535.
      - ServiceFabricApplicationPackage - Filter that matches input with ApplicationTypeDefinitionKind value ServiceFabricApplicationPackage. The value is 1.
      - Compose - Filter that matches input with ApplicationTypeDefinitionKind value Compose. The value is 2.
    in: query
    name: ApplicationTypeDefinitionKindFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  ApplicationTypeImageStorePathRequiredBodyParam:
    description: The relative path for the application package in the image store specified during the prior copy operation.
    in: body
    name: ApplicationTypeImageStorePath
    required: true
    schema:
      $ref: '#/definitions/ApplicationTypeImageStorePath'
    x-ms-parameter-location: method
  ApplicationTypeNameOptionalQueryParam:
    description: The application type name used to filter the applications to query for. This value should not contain the application type version.
    in: query
    name: ApplicationTypeName
    required: false
    type: string
    x-ms-parameter-location: method
  ApplicationTypeNameRequiredPathParam:
    description: The name of the application type.
    in: path
    name: applicationTypeName
    required: true
    type: string
    x-ms-parameter-location: method
  ApplicationTypeVersionOptionalQueryParam:
    description: The version of the application type.
    in: query
    name: ApplicationTypeVersion
    required: false
    type: string
    x-ms-parameter-location: method
  ApplicationTypeVersionRequiredQueryParam:
    description: The version of the application type.
    in: query
    name: ApplicationTypeVersion
    required: true
    type: string
    x-ms-parameter-location: method
  ApplicationUpgradeDescriptionRequiredBodyParam:
    description: Parameters for an application upgrade.
    in: body
    name: ApplicationUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/ApplicationUpgradeDescription'
    x-ms-parameter-location: method
  ApplicationUpgradeUpdateDescriptionRequiredBodyParam:
    description: Parameters for updating an existing application upgrade.
    in: body
    name: ApplicationUpgradeUpdateDescription
    required: true
    schema:
      $ref: '#/definitions/ApplicationUpgradeUpdateDescription'
    x-ms-parameter-location: method
  ApplicationsHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the application health state objects returned in the result of cluster health
      query based on their health state.
      The possible values for this parameter include integer value obtained from members or bitwise operations
      on members of HealthStateFilter enumeration. Only applications that match the filter are returned.
      All applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
      The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
      For example, if the provided value is 6 then health state of applications with HealthState value of OK (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: ApplicationsHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  BackupPartitionDescriptionOptionalBodyParam:
    description: 'Describes the parameters to backup the partition now. If not present, backup operation uses default parameters from the backup policy current associated with this partition.'
    in: body
    name: BackupPartitionDescription
    required: false
    schema:
      $ref: '#/definitions/BackupPartitionDescription'
    x-ms-parameter-location: method
  BackupPolicyDescriptionRequiredBodyParam:
    description: Describes the backup policy.
    in: body
    name: BackupPolicyDescription
    required: true
    schema:
      $ref: '#/definitions/BackupPolicyDescription'
    x-ms-parameter-location: method
  BackupPolicyNameRequiredPathParam:
    description: The name of the backup policy.
    in: path
    name: backupPolicyName
    required: true
    type: string
    x-ms-parameter-location: method
  BackupTimeoutOptionalQueryParam:
    default: 10
    description: 'Specifies the maximum amount of time, in minutes, to wait for the backup operation to complete. Post that, the operation completes with timeout error. However, in certain corner cases it could be that though the operation returns back timeout, the backup actually goes through. In case of timeout error, its recommended to invoke this operation again with a greater timeout value. The default value for the same is 10 minutes.'
    in: query
    name: BackupTimeout
    required: false
    type: integer
    x-ms-parameter-location: method
  ChaosParametersRequiredBodyParam:
    description: Describes all the parameters to configure a Chaos run.
    in: body
    name: ChaosParameters
    required: true
    schema:
      $ref: '#/definitions/ChaosParameters'
    x-ms-parameter-location: method
  ChaosScheduleRequiredBodyParam:
    description: Describes the schedule used by Chaos.
    in: body
    name: ChaosSchedule
    required: true
    schema:
      $ref: '#/definitions/ChaosScheduleDescription'
    x-ms-parameter-location: method
  ClusterConfigurationUpgradeDescriptionRequiredBodyParam:
    description: Parameters for a standalone cluster configuration upgrade.
    in: body
    name: ClusterConfigurationUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/ClusterConfigurationUpgradeDescription'
    x-ms-parameter-location: method
  ClusterHealthChunkQueryDescriptionOptionalBodyParam:
    description: |-
      Describes the cluster and application health policies used to evaluate the cluster health and the filters to select which cluster entities to be returned.
      If the cluster health policy is present, it is used to evaluate the cluster events and the cluster nodes. If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
      By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
      If the application health policy map is specified, and it has an entry for an application, the specified application health policy
      is used to evaluate the application health.
      Users can specify very flexible filters to select which cluster entities to include in response. The selection can be done based on the entities health state and based on the hierarchy.
      The query can return multi-level children of the entities based on the specified filters. For example, it can return one application with a specified name, and for this application, return
      only services that are in Error or Warning, and all partitions and replicas for one of these services.
    in: body
    name: ClusterHealthChunkQueryDescription
    required: false
    schema:
      $ref: '#/definitions/ClusterHealthChunkQueryDescription'
    x-ms-parameter-location: method
  ClusterHealthPoliciesOptionalBodyParam:
    description: |-
      Describes the health policies used to evaluate the cluster health.
      If not present, the health evaluation uses the cluster health policy defined in the cluster manifest or the default cluster health policy.
      By default, each application is evaluated using its specific application health policy, defined in the application manifest, or the default health policy, if no policy is defined in manifest.
      If the application health policy map is specified, and it has an entry for an application, the specified application health policy
      is used to evaluate the application health.
    in: body
    name: ClusterHealthPolicies
    required: false
    schema:
      $ref: '#/definitions/ClusterHealthPolicies'
    x-ms-parameter-location: method
  ClusterHealthPolicyOptionalBodyParam:
    description: 'Describes the health policies used to evaluate the health of a cluster or node. If not present, the health evaluation uses the health policy from cluster manifest or the default health policy.'
    in: body
    name: ClusterHealthPolicy
    required: false
    schema:
      $ref: '#/definitions/ClusterHealthPolicy'
    x-ms-parameter-location: method
  CodePackageInstanceIdRequiredQueryParam:
    description: ID that uniquely identifies a code package instance deployed on a service fabric node.
    in: query
    name: CodePackageInstanceId
    required: true
    type: string
    x-ms-parameter-location: method
  CodePackageNameOptionalQueryParam:
    description: The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.
    in: query
    name: CodePackageName
    required: false
    type: string
    x-ms-parameter-location: method
  CodePackageNameRequiredQueryParam:
    description: The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.
    in: query
    name: CodePackageName
    required: true
    type: string
    x-ms-parameter-location: method
  CodeVersionOptionalQueryParam:
    description: The product version of Service Fabric.
    in: query
    name: CodeVersion
    required: false
    type: string
    x-ms-parameter-location: method
  ComposeDeploymentUpgradeDescriptionRequiredBodyParam:
    description: Parameters for upgrading compose deployment.
    in: body
    name: ComposeDeploymentUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/ComposeDeploymentUpgradeDescription'
    x-ms-parameter-location: method
  ConfigVersionOptionalQueryParam:
    description: The config version of Service Fabric.
    in: query
    name: ConfigVersion
    required: false
    type: string
    x-ms-parameter-location: method
  ConfigurationApiVersionRequiredQueryParam:
    description: The API version of the Standalone cluster json configuration.
    in: query
    name: ConfigurationApiVersion
    required: true
    type: string
    x-ms-parameter-location: method
  ContainerApiRequiredBodyParam:
    description: Parameters for making container API call
    in: body
    name: ContainerApiRequestBody
    required: true
    schema:
      $ref: '#/definitions/ContainerApiRequestBody'
    x-ms-parameter-location: method
  ContinuationTokenOptionalQueryParam:
    description: 'The continuation token parameter is used to obtain next set of results. A continuation token with a non-empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token does not contain a value. The value of this parameter should not be URL encoded.'
    in: query
    name: ContinuationToken
    required: false
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  CreateComposeDeploymentRequiredBodyParam:
    description: Describes the compose deployment that needs to be created.
    in: body
    name: CreateComposeDeploymentDescription
    required: true
    schema:
      $ref: '#/definitions/CreateComposeDeploymentDescription'
    x-ms-parameter-location: method
  CreateServiceFromTemplateRequiredBodyParam:
    description: Describes the service that needs to be created from the template defined in the application manifest.
    in: body
    name: ServiceFromTemplateDescription
    required: true
    schema:
      $ref: '#/definitions/ServiceFromTemplateDescription'
    x-ms-parameter-location: method
  DataLossModeRequiredQueryParam:
    description: This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.
    enum:
      - Invalid
      - PartialDataLoss
      - FullDataLoss
    in: query
    name: DataLossMode
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: DataLossMode
      values:
        - description: Reserved.  Do not pass into API.
          value: Invalid
        - description: 'PartialDataLoss option will cause a quorum of replicas to go down, triggering an OnDataLoss event in the system for the given partition.'
          value: PartialDataLoss
        - description: FullDataLoss option will drop all the replicas which means that all the data will be lost.
          value: FullDataLoss
    x-ms-parameter-location: method
  DeactivationIntentDescriptionRequiredBodyParam:
    description: Describes the intent or reason for deactivating the node.
    in: body
    name: DeactivationIntentDescription
    required: true
    schema:
      $ref: '#/definitions/DeactivationIntentDescription'
    x-ms-parameter-location: method
  DeployServicePackageToNodeRequiredBodyParam:
    description: Describes information for deploying a service package to a Service Fabric node.
    in: body
    name: DeployServicePackageToNodeDescription
    required: true
    schema:
      $ref: '#/definitions/DeployServicePackageToNodeDescription'
    x-ms-parameter-location: method
  DeployedApplicationsHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the deployed applications health state objects returned in the result of application health query based on their health state.
      The possible values for this parameter include integer value of one of the following health states. Only deployed applications that match the filter will be returned.
      All deployed applications are used to evaluate the aggregated health state. If not specified, all entries are returned.
      The state values are flag-based enumeration, so the value could be a combination of these values, obtained using bitwise 'OR' operator.
      For example, if the provided value is 6 then health state of deployed applications with HealthState value of OK (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: DeployedApplicationsHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  DeployedServicePackagesHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the deployed service package health state objects returned in the result of deployed application health query based on their health state.
      The possible values for this parameter include integer value of one of the following health states.
      Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the aggregated health state of the deployed application.
      If not specified, all entries are returned.
      The state values are flag-based enumeration, so the value can be a combination of these values, obtained using the bitwise 'OR' operator.
      For example, if the provided value is 6 then health state of service packages with HealthState value of OK (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: DeployedServicePackagesHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  DeployedServiceType_ServiceManifestNameOptionalQueryParam:
    description: 'The name of the service manifest to filter the list of deployed service type information. If specified, the response will only contain the information about service types that are defined in this service manifest.'
    in: query
    name: ServiceManifestName
    required: false
    type: string
    x-ms-parameter-location: method
  DeploymentNameRequiredPathParam:
    description: The identity of the deployment.
    in: path
    name: deploymentName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  EnableBackupDescriptionRequiredBodyParam:
    description: Specifies the parameters for enabling backup.
    in: body
    name: EnableBackupDescription
    required: true
    schema:
      $ref: '#/definitions/EnableBackupDescription'
    x-ms-parameter-location: method
  EndDateTimeFilterOptionalQueryParam:
    description: 'Specify the end date time till which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, enumeration is done till the most recent backup.'
    format: date-time
    in: query
    name: EndDateTimeFilter
    required: false
    type: string
    x-ms-parameter-location: method
  EndTimeUtcOptionalQueryParam:
    description: 'The Windows file time representing the end time of the time range for which a Chaos report is to be generated. Consult [DateTime.ToFileTimeUtc Method](https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx) for details.'
    in: query
    name: EndTimeUtc
    required: false
    type: string
    x-ms-parameter-location: method
  EndTimeUtcRequiredQueryParam:
    description: 'The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.'
    in: query
    name: EndTimeUtc
    required: true
    type: string
    x-ms-parameter-location: method
  EventInstanceIdRequiredPathParam:
    description: The EventInstanceId.
    in: path
    name: eventInstanceId
    required: true
    type: string
    x-ms-parameter-location: method
  EventsHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering the collection of HealthEvent objects returned based on health state.
      The possible values for this parameter include integer value of one of the following health states.
      Only events that match the filter are returned. All events are used to evaluate the aggregated health state.
      If not specified, all entries are returned. The state values are flag-based enumeration, so the value could be a combination of these values, obtained using the bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: EventsHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  EventsTypesFilterOptionalQueryParam:
    description: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
    in: query
    name: EventsTypesFilter
    required: false
    type: string
    x-ms-parameter-location: method
  ExcludeAnalysisEventsOptionalQueryParam:
    description: This param disables the retrieval of AnalysisEvents if true is passed.
    in: query
    name: ExcludeAnalysisEvents
    required: false
    type: boolean
    x-ms-parameter-location: method
  ExcludeApplicationParametersOptionalQueryParam:
    default: false
    description: The flag that specifies whether application parameters will be excluded from the result.
    in: query
    name: ExcludeApplicationParameters
    required: false
    type: boolean
    x-ms-parameter-location: method
  ExcludeHealthStatisticsOptionalQueryParam:
    default: false
    description: |-
      Indicates whether the health statistics should be returned as part of the query result. False by default.
      The statistics show the number of children entities in health state Ok, Warning, and Error.
    in: query
    name: ExcludeHealthStatistics
    required: false
    type: boolean
    x-ms-parameter-location: method
  FaultOperationIdRequiredQueryParam:
    description: A GUID that identifies a call of this API.  This is passed into the corresponding GetProgress API
    format: uuid
    in: query
    name: OperationId
    required: true
    type: string
    x-ms-parameter-location: method
  ForceRemoveOptionalQueryParam:
    description: Remove a Service Fabric application or service forcefully without going through the graceful shutdown sequence. This parameter can be used to forcefully delete an application or service for which delete is timing out due to issues in the service code that prevents graceful close of replicas.
    in: query
    name: ForceRemove
    required: false
    type: boolean
    x-ms-parameter-location: method
  ForceRemoveReplicaOptionalQueryParam:
    description: Remove a Service Fabric application or service forcefully without going through the graceful shutdown sequence. This parameter can be used to forcefully delete an application or service for which delete is timing out due to issues in the service code that prevents graceful close of replicas.
    in: query
    name: ForceRemove
    required: false
    type: boolean
    x-ms-parameter-location: method
  ForceRequiredQueryParam:
    default: false
    description: Indicates whether to gracefully rollback and clean up internal system state modified by executing the user-induced operation.
    in: query
    name: Force
    required: true
    type: boolean
    x-ms-parameter-location: method
  GetBackupByStorageQueryDescriptionRequiredBodyParam:
    description: Describes the filters and backup storage details to be used for enumerating backups.
    in: body
    name: GetBackupByStorageQueryDescription
    required: true
    schema:
      $ref: '#/definitions/GetBackupByStorageQueryDescription'
    x-ms-parameter-location: method
  HealthInformationRequiredBodyParam:
    description: Describes the health information for the health report. This information needs to be present in all of the health reports sent to the health manager.
    in: body
    name: HealthInformation
    required: true
    schema:
      $ref: '#/definitions/HealthInformation'
    x-ms-parameter-location: method
  ImageStoreContentPathRequiredPathParam:
    description: Relative path to file or folder in the image store from its root.
    in: path
    name: contentPath
    required: true
    type: string
    x-ms-parameter-location: method
  ImageStoreCopyDescriptionRequiredBodyParam:
    description: Describes the copy description for the image store.
    in: body
    name: ImageStoreCopyDescription
    required: true
    schema:
      $ref: '#/definitions/ImageStoreCopyDescription'
    x-ms-parameter-location: method
  ImmediateOptionalQueryParam:
    default: false
    description: |-
      A flag that indicates whether the report should be sent immediately.
      A health report is sent to a Service Fabric gateway Application, which forwards to the health store.
      If Immediate is set to true, the report is sent immediately from HTTP Gateway to the health store, regardless of the fabric client settings that the HTTP Gateway Application is using.
      This is useful for critical reports that should be sent as soon as possible.
      Depending on timing and other conditions, sending the report may still fail, for example if the HTTP Gateway is closed or the message doesn't reach the Gateway.
      If Immediate is set to false, the report is sent based on the health client settings from the HTTP Gateway. Therefore, it will be batched according to the HealthReportSendInterval configuration.
      This is the recommended setting because it allows the health client to optimize health reporting messages to health store as well as health report processing.
      By default, reports are not sent immediately.
    in: query
    name: Immediate
    required: false
    type: boolean
    x-ms-parameter-location: method
  IncludeHealthStateOptionalQueryParam:
    default: false
    description: |-
      Include the health state of an entity.
      If this parameter is false or not specified, then the health state returned is "Unknown".
      When set to true, the query goes in parallel to the node and the health system service before the results are merged.
      As a result, the query is more expensive and may take a longer time.
    in: query
    name: IncludeHealthState
    required: false
    type: boolean
    x-ms-parameter-location: method
  IncludeSystemApplicationHealthStatisticsOptionalQueryParam:
    default: false
    description: |-
      Indicates whether the health statistics should include the fabric:/System application health statistics. False by default.
      If IncludeSystemApplicationHealthStatistics is set to true, the health statistics include the entities that belong to the fabric:/System application.
      Otherwise, the query result includes health statistics only for user applications.
      The health statistics must be included in the query result for this parameter to be applied.
    in: query
    name: IncludeSystemApplicationHealthStatistics
    required: false
    type: boolean
    x-ms-parameter-location: method
  IncludeValuesOptionalQueryParam:
    default: false
    description: Allows specifying whether to include the values of the properties returned. True if values should be returned with the metadata; False to return only property metadata.
    in: query
    name: IncludeValues
    required: false
    type: boolean
    x-ms-parameter-location: method
  InfrastructureCommandRequiredQueryParam:
    description: The text of the command to be invoked. The content of the command is infrastructure-specific.
    in: query
    name: Command
    required: true
    type: string
    x-ms-parameter-location: method
  InfrastructureServiceIdOptionalQueryParam:
    description: 'The identity of the infrastructure service. This is the full name of the infrastructure service without the ''fabric:'' URI scheme. This parameter required only for the cluster that has more than one instance of infrastructure service running.'
    in: query
    name: ServiceId
    required: false
    type: string
    x-ms-parameter-location: method
  LatestOptionalQueryParam:
    default: false
    description: Specifies whether to get only the most recent backup available for a partition for the specified time range.
    in: query
    name: Latest
    required: false
    type: boolean
    x-ms-parameter-location: method
  MaxResultsOptionalQueryParam:
    default: 0
    description: 'The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged query includes as many results as possible that fit in the return message.'
    format: int64
    in: query
    minimum: 0
    name: MaxResults
    required: false
    type: integer
    x-ms-parameter-location: method
  NameDescriptionRequiredBodyParam:
    description: Describes the Service Fabric name to be created.
    in: body
    name: NameDescription
    required: true
    schema:
      $ref: '#/definitions/NameDescription'
    x-ms-parameter-location: method
  NameIdRequiredPathParam:
    description: 'The Service Fabric name, without the ''fabric:'' URI scheme.'
    in: path
    name: nameId
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  NodeInstanceIdRequiredQueryParam:
    description: The node instance ID of the target node.  This can be determined through GetNodeInfo API.
    in: query
    name: NodeInstanceId
    required: true
    type: string
    x-ms-parameter-location: method
  NodeNameRequiredPathParam:
    description: The name of the node.
    in: path
    name: nodeName
    required: true
    type: string
    x-ms-parameter-location: method
  NodeStatusFilterOptionalQueryParam:
    default: default
    description: Allows filtering the nodes based on the NodeStatus. Only the nodes that are matching the specified filter value will be returned. The filter value can be one of the following.
    enum:
      - default
      - all
      - up
      - down
      - enabling
      - disabling
      - disabled
      - unknown
      - removed
    in: query
    name: NodeStatusFilter
    required: false
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeStatusFilter
      values:
        - description: This filter value will match all of the nodes excepts the ones with status as Unknown or Removed.
          value: default
        - description: This filter value will match all of the nodes.
          value: all
        - description: This filter value will match nodes that are Up.
          value: up
        - description: This filter value will match nodes that are Down.
          value: down
        - description: This filter value will match nodes that are in the process of being enabled with status as Enabling.
          value: enabling
        - description: This filter value will match nodes that are in the process of being disabled with status as Disabling.
          value: disabling
        - description: This filter value will match nodes that are Disabled.
          value: disabled
        - description: This filter value will match nodes whose status is Unknown. A node would be in Unknown state if Service Fabric does not have authoritative information about that node. This can happen if the system learns about a node at runtime.
          value: unknown
        - description: This filter value will match nodes whose status is Removed. These are the nodes that are removed from the cluster using the RemoveNodeState API.
          value: removed
    x-ms-parameter-location: method
  NodeTransitionTypeRequiredQueryParam:
    description: Indicates the type of transition to perform.  NodeTransitionType.Start will start a stopped node.  NodeTransitionType.Stop will stop a node that is up.
    enum:
      - Invalid
      - Start
      - Stop
    in: query
    name: NodeTransitionType
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeTransitionType
      values:
        - description: Reserved.  Do not pass into API.
          value: Invalid
        - description: Transition a stopped node to up.
          value: Start
        - description: Transition an up node to stopped.
          value: Stop
    x-ms-parameter-location: method
  NodesHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the node health state objects returned in the result of cluster health query
      based on their health state. The possible values for this parameter include integer value of one of the
      following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the aggregated health state.
      If not specified, all entries are returned.
      The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
      For example, if the provided value is 6 then health state of nodes with HealthState value of OK (2) and Warning (4) are returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: NodesHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  PartitionIdOptionalQueryParam:
    description: The identity of the partition.
    format: uuid
    in: query
    name: PartitionId
    required: false
    type: string
    x-ms-parameter-location: method
  PartitionIdRequiredPathParam:
    description: The identity of the partition.
    format: uuid
    in: path
    name: partitionId
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  PartitionKeyTypeOptionalQueryParam:
    description: |-
      Key type for the partition. This parameter is required if the partition scheme for the service is Int64Range or Named. The possible values are following.
      - None (1) - Indicates that the PartitionKeyValue parameter is not specified. This is valid for the partitions with partitioning scheme as Singleton. This is the default value. The value is 1.
      - Int64Range (2) - Indicates that the PartitionKeyValue parameter is an int64 partition key. This is valid for the partitions with partitioning scheme as Int64Range. The value is 2.
      - Named (3) - Indicates that the PartitionKeyValue parameter is a name of the partition. This is valid for the partitions with partitioning scheme as Named. The value is 3.
    in: query
    name: PartitionKeyType
    required: false
    type: integer
    x-ms-parameter-location: method
  PartitionKeyValueOptionalQueryParam:
    description: Partition key. This is required if the partition scheme for the service is Int64Range or Named.
    in: query
    name: PartitionKeyValue
    required: false
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  PartitionsHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the partitions health state objects returned in the result of service health query based on their health state.
      The possible values for this parameter include integer value of one of the following health states.
      Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state.
      If not specified, all entries are returned. The state values are flag-based enumeration, so the value could be a combination of these value
      obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: PartitionsHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  PasswordEncryptedOptionalQueryParam:
    description: Indicates that supplied container repository password is encrypted.
    in: query
    name: PasswordEncrypted
    required: false
    type: boolean
    x-ms-parameter-location: method
  PreviousOptionalQueryParam:
    default: false
    description: Specifies whether to get container logs from exited/dead containers of the code package instance.
    in: query
    name: Previous
    required: false
    type: boolean
    x-ms-parameter-location: method
  PreviousRspVersionOptionalQueryParam:
    description: The value in the Version field of the response that was received previously. This is required if the user knows that the result that was gotten previously is stale.
    in: query
    name: PreviousRspVersion
    required: false
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  PropertyBatchDescriptionListRequiredBodyParam:
    description: Describes the property batch operations to be submitted.
    in: body
    name: PropertyBatchDescriptionList
    required: true
    schema:
      $ref: '#/definitions/PropertyBatchDescriptionList'
    x-ms-parameter-location: method
  PropertyDescriptionRequiredBodyParam:
    description: Describes the Service Fabric property to be created.
    in: body
    name: PropertyDescription
    required: true
    schema:
      $ref: '#/definitions/PropertyDescription'
    x-ms-parameter-location: method
  PropertyNameRequiredQueryParam:
    description: Specifies the name of the property to get.
    in: query
    name: PropertyName
    required: true
    type: string
    x-ms-parameter-location: method
  ProvisionApplicationTypeDescriptionBaseRequiredBodyParam:
    description: The base type of provision application type description which supports either image store-based provision or external store-based provision.
    in: body
    name: ProvisionApplicationTypeDescriptionBaseRequiredBodyParam
    required: true
    schema:
      $ref: '#/definitions/ProvisionApplicationTypeDescriptionBase'
    x-ms-parameter-location: method
  ProvisionFabricDescriptionRequiredBodyParam:
    description: Describes the parameters for provisioning a cluster.
    in: body
    name: ProvisionFabricDescription
    required: true
    schema:
      $ref: '#/definitions/ProvisionFabricDescription'
    x-ms-parameter-location: method
  QuorumLossDurationRequiredQueryParam:
    description: The amount of time for which the partition will be kept in quorum loss.  This must be specified in seconds.
    in: query
    name: QuorumLossDuration
    required: true
    type: integer
    x-ms-parameter-location: method
  QuorumLossModeRequiredQueryParam:
    description: This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.
    enum:
      - Invalid
      - QuorumReplicas
      - AllReplicas
    in: query
    name: QuorumLossMode
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: QuorumLossMode
      values:
        - description: Reserved.  Do not pass into API.
          value: Invalid
        - description: 'Partial Quorum loss mode : Minimum number of replicas for a partition will be down that will cause a quorum loss.'
          value: QuorumReplicas
        - value: AllReplicas
    x-ms-parameter-location: method
  RecursiveOptionalQueryParam:
    default: false
    description: Allows specifying that the search performed should be recursive.
    in: query
    name: Recursive
    required: false
    type: boolean
    x-ms-parameter-location: method
  RepairTaskApproveDescriptionRequiredBodyParam:
    description: Describes the repair task to be approved.
    in: body
    name: RepairTaskApproveDescription
    required: true
    schema:
      $ref: '#/definitions/RepairTaskApproveDescription'
    x-ms-parameter-location: method
  RepairTaskCancelDescriptionRequiredBodyParam:
    description: Describes the repair task to be cancelled.
    in: body
    name: RepairTaskCancelDescription
    required: true
    schema:
      $ref: '#/definitions/RepairTaskCancelDescription'
    x-ms-parameter-location: method
  RepairTaskDeleteDescriptionRequiredBodyParam:
    description: Describes the repair task to be deleted.
    in: body
    name: RepairTaskDeleteDescription
    required: true
    schema:
      $ref: '#/definitions/RepairTaskDeleteDescription'
    x-ms-parameter-location: method
  RepairTaskExecutorFilterOptionalQueryParam:
    description: The name of the repair executor whose claimed tasks should be included in the list.
    in: query
    name: ExecutorFilter
    required: false
    type: string
    x-ms-parameter-location: method
  RepairTaskIdFilterOptionalQueryParam:
    description: The repair task ID prefix to be matched.
    in: query
    name: TaskIdFilter
    required: false
    type: string
    x-ms-parameter-location: method
  RepairTaskRequiredBodyParam:
    description: Describes the repair task to be created or updated.
    in: body
    name: RepairTask
    required: true
    schema:
      $ref: '#/definitions/RepairTask'
    x-ms-parameter-location: method
  RepairTaskStateFilterOptionalQueryParam:
    description: |-
      A bitwise-OR of the following values, specifying which task states should be included in the result list.

      - 1 - Created
      - 2 - Claimed
      - 4 - Preparing
      - 8 - Approved
      - 16 - Executing
      - 32 - Restoring
      - 64 - Completed
    in: query
    name: StateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  RepairTaskUpdateHealthPolicyDescriptionRequiredBodyParam:
    description: Describes the repair task healthy policy to be updated.
    in: body
    name: RepairTaskUpdateHealthPolicyDescription
    required: true
    schema:
      $ref: '#/definitions/RepairTaskUpdateHealthPolicyDescription'
    x-ms-parameter-location: method
  ReplicaHealthReportServiceKindRequiredQueryParam:
    default: Stateful
    description: The kind of service replica (Stateless or Stateful) for which the health is being reported. Following are the possible values.
    enum:
      - Stateless
      - Stateful
    in: query
    name: ReplicaHealthReportServiceKind
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReplicaHealthReportServiceKind
      values:
        - description: Does not use Service Fabric to make its state highly available or reliable. The value is 1
          value: Stateless
        - description: Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
          value: Stateful
    x-ms-parameter-location: method
  ReplicaIdRequiredPathParam:
    description: The identifier of the replica.
    in: path
    name: replicaId
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ReplicaNameRequiredPathParam:
    description: Service Fabric replica name.
    in: path
    name: replicaName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ReplicasHealthStateFilerOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering the collection of ReplicaHealthState objects on the partition. The value can be obtained from members or bitwise operations on members of HealthStateFilter. Only replicas that match the filter will be returned. All replicas will be used to evaluate the aggregated health state. If not specified, all entries will be returned.The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) will be returned. The possible values for this parameter include integer value of one of the following health states.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: ReplicasHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  RepositoryPasswordOptionalQueryParam:
    description: The password for supplied username to connect to container repository.
    in: query
    name: RepositoryPassword
    required: false
    type: string
    x-ms-parameter-location: method
  RepositoryUserNameOptionalQueryParam:
    description: The user name to connect to container repository.
    in: query
    name: RepositoryUserName
    required: false
    type: string
    x-ms-parameter-location: method
  RestartDeployedCodePackageRequiredBodyParam:
    description: Describes the deployed code package on Service Fabric node to restart.
    in: body
    name: RestartDeployedCodePackageDescription
    required: true
    schema:
      $ref: '#/definitions/RestartDeployedCodePackageDescription'
    x-ms-parameter-location: method
  RestartNodeDescriptionRequiredBodyParam:
    description: The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.
    in: body
    name: RestartNodeDescription
    required: true
    schema:
      $ref: '#/definitions/RestartNodeDescription'
    x-ms-parameter-location: method
  RestartPartitionModeRequiredQueryParam:
    description: Describe which partitions to restart.
    enum:
      - Invalid
      - AllReplicasOrInstances
      - OnlyActiveSecondaries
    in: query
    name: RestartPartitionMode
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: RestartPartitionMode
      values:
        - description: Reserved.  Do not pass into API.
          value: Invalid
        - description: All replicas or instances in the partition are restarted at once.
          value: AllReplicasOrInstances
        - description: Only the secondary replicas are restarted.
          value: OnlyActiveSecondaries
    x-ms-parameter-location: method
  RestorePartitionDescriptionRequiredBodyParam:
    description: Describes the parameters to restore the partition.
    in: body
    name: RestorePartitionDescription
    required: true
    schema:
      $ref: '#/definitions/RestorePartitionDescription'
    x-ms-parameter-location: method
  RestoreTimeoutOptionalQueryParam:
    default: 10
    description: 'Specifies the maximum amount of time to wait, in minutes, for the restore operation to complete. Post that, the operation returns back with timeout error. However, in certain corner cases it could be that the restore operation goes through even though it completes with timeout. In case of timeout error, its recommended to invoke this operation again with a greater timeout value. the default value for the same is 10 minutes.'
    in: query
    name: RestoreTimeout
    required: false
    type: integer
    x-ms-parameter-location: method
  ResumeApplicationUpgradeDescriptionRequiredBodyParam:
    description: Describes the parameters for resuming an application upgrade.
    in: body
    name: ResumeApplicationUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/ResumeApplicationUpgradeDescription'
    x-ms-parameter-location: method
  ResumeClusterUpgradeDescriptionRequiredBodyParam:
    description: Describes the parameters for resuming a cluster upgrade.
    in: body
    name: ResumeClusterUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/ResumeClusterUpgradeDescription'
    x-ms-parameter-location: method
  ServiceDescriptionRequiredBodyParam:
    description: The information necessary to create a service.
    in: body
    name: ServiceDescription
    required: true
    schema:
      $ref: '#/definitions/ServiceDescription'
    x-ms-parameter-location: method
  ServiceIdRequiredPathParam:
    description: |-
      The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme.
      Starting from version 6.0, hierarchical names are delimited with the "~" character.
      For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
    in: path
    name: serviceId
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ServiceManifestNameOptionalQueryParam:
    description: The name of a service manifest registered as part of an application type in a Service Fabric cluster.
    in: query
    name: ServiceManifestName
    required: false
    type: string
    x-ms-parameter-location: method
  ServiceManifestNameRequiredQueryParam:
    description: The name of a service manifest registered as part of an application type in a Service Fabric cluster.
    in: query
    name: ServiceManifestName
    required: true
    type: string
    x-ms-parameter-location: method
  ServicePackageNameRequiredPathParam:
    description: The name of the service package.
    in: path
    name: servicePackageName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ServiceResourceNameRequiredPathParam:
    description: Service Fabric service resource name.
    in: path
    name: serviceResourceName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ServiceTypeNameOptionalQueryParam:
    description: The service type name used to filter the services to query for.
    in: query
    name: ServiceTypeName
    required: false
    type: string
    x-ms-parameter-location: method
  ServiceTypeNameRequiredPathParam:
    description: Specifies the name of a Service Fabric service type.
    in: path
    name: serviceTypeName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
  ServiceUpdateDescriptionRequiredBodyParam:
    description: The information necessary to update a service.
    in: body
    name: ServiceUpdateDescription
    required: true
    schema:
      $ref: '#/definitions/ServiceUpdateDescription'
    x-ms-parameter-location: method
  ServicesHealthStateFilterOptionalQueryParam:
    default: 0
    description: |-
      Allows filtering of the services health state objects returned in the result of services health query based on their health state.
      The possible values for this parameter include integer value of one of the following health states.
      Only services that match the filter are returned. All services are used to evaluate the aggregated health state.
      If not specified, all entries are returned. The state values are flag-based enumeration, so the value could be a combination of these values,
      obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of services with HealthState value of OK (2) and Warning (4) will be returned.

      - Default - Default value. Matches any HealthState. The value is zero.
      - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
      - Ok - Filter that matches input with HealthState value Ok. The value is 2.
      - Warning - Filter that matches input with HealthState value Warning. The value is 4.
      - Error - Filter that matches input with HealthState value Error. The value is 8.
      - All - Filter that matches input with any HealthState value. The value is 65535.
    in: query
    name: ServicesHealthStateFilter
    required: false
    type: integer
    x-ms-parameter-location: method
  SkipCorrelationLookupOptionalQueryParam:
    description: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
    in: query
    name: SkipCorrelationLookup
    required: false
    type: boolean
    x-ms-parameter-location: method
  StartClusterUpgradeDescriptionRequiredBodyParam:
    description: Describes the parameters for starting a cluster upgrade.
    in: body
    name: StartClusterUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/StartClusterUpgradeDescription'
    x-ms-parameter-location: method
  StartDateTimeFilterOptionalQueryParam:
    description: 'Specify the start date time from which to enumerate backups, in datetime format. The date time must be specified in ISO8601 format. This is an optional parameter. If not specified, all backups from the beginning are enumerated.'
    format: date-time
    in: query
    name: StartDateTimeFilter
    required: false
    type: string
    x-ms-parameter-location: method
  StartTimeUtcOptionalQueryParam:
    description: 'The Windows file time representing the start time of the time range for which a Chaos report is to be generated. Consult [DateTime.ToFileTimeUtc Method](https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx) for details.'
    in: query
    name: StartTimeUtc
    required: false
    type: string
    x-ms-parameter-location: method
  StartTimeUtcRequiredQueryParam:
    description: 'The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.'
    in: query
    name: StartTimeUtc
    required: true
    type: string
    x-ms-parameter-location: method
  StateFilterRequiredQueryParam:
    default: 65535
    description: |-
      Used to filter on OperationState's for user-induced operations.

      - 65535 - select All
      - 1 - select Running
      - 2 - select RollingBack
      - 8 - select Completed
      - 16 - select Faulted
      - 32 - select Cancelled
      - 64 - select ForceCancelled
    in: query
    name: StateFilter
    required: true
    type: integer
    x-ms-parameter-location: method
  StopDurationInSecondsRequiredQueryParam:
    description: 'The duration, in seconds, to keep the node stopped.  The minimum value is 600, the maximum is 14400.  After this time expires, the node will automatically come back up.'
    format: int32
    in: query
    minimum: 0
    name: StopDurationInSeconds
    required: true
    type: integer
    x-ms-parameter-location: method
  TailOptionalQueryParam:
    description: Number of lines to show from the end of the logs. Default is 100. 'all' to show the complete logs.
    in: query
    name: Tail
    required: false
    type: string
    x-ms-parameter-location: method
  TimeoutOptionalQueryParam:
    default: 60
    description: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
    format: int64
    in: query
    maximum: 4294967295
    minimum: 1
    name: timeout
    required: false
    type: integer
    x-ms-parameter-location: method
  TypeFilterRequiredQueryParam:
    default: 65535
    description: |-
      Used to filter on OperationType for user-induced operations.

      - 65535 - select all
      - 1 - select PartitionDataLoss.
      - 2 - select PartitionQuorumLoss.
      - 4 - select PartitionRestart.
      - 8 - select NodeTransition.
    in: query
    name: TypeFilter
    required: true
    type: integer
    x-ms-parameter-location: method
  UnprovisionApplicationTypeRequiredBodyParam:
    description: The relative path for the application package in the image store specified during the prior copy operation.
    in: body
    name: UnprovisionApplicationTypeDescriptionInfo
    required: true
    schema:
      $ref: '#/definitions/UnprovisionApplicationTypeDescriptionInfo'
    x-ms-parameter-location: method
  UnprovisionFabricDescriptionRequiredBodyParam:
    description: Describes the parameters for unprovisioning a cluster.
    in: body
    name: UnprovisionFabricDescription
    required: true
    schema:
      $ref: '#/definitions/UnprovisionFabricDescription'
    x-ms-parameter-location: method
  UpdateClusterUpgradeDescriptionRequiredBodyParam:
    description: Parameters for updating a cluster upgrade.
    in: body
    name: UpdateClusterUpgradeDescription
    required: true
    schema:
      $ref: '#/definitions/UpdateClusterUpgradeDescription'
    x-ms-parameter-location: method
  UpgradeOrchestrationServiceStateRequiredBodyParam:
    description: Service state of Service Fabric Upgrade Orchestration Service.
    in: body
    name: UpgradeOrchestrationServiceState
    required: true
    schema:
      $ref: '#/definitions/UpgradeOrchestrationServiceState'
    x-ms-parameter-location: method
  UploadFileChunkContentRangeHeaderParam:
    description: 'When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request. The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}". For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.'
    in: header
    name: Content-Range
    required: true
    type: string
    x-ms-parameter-location: method
  UploadSessionIdRequiredQueryParam:
    description: A GUID generated by the user for a file uploading. It identifies an image store upload session which keeps track of all file chunks until it is committed.
    format: uuid
    in: query
    name: session-id
    required: true
    type: string
    x-ms-parameter-location: method
  VolumeResourceDescriptionRequiredBodyParam:
    description: Description for creating a volume resource.
    in: body
    name: volumeResourceDescription
    required: true
    schema:
      $ref: '#/definitions/VolumeResourceDescription'
    x-ms-parameter-location: method
  VolumeResourceNameRequiredPathParam:
    description: Service Fabric volume resource name.
    in: path
    name: volumeResourceName
    required: true
    type: string
    x-ms-parameter-location: method
    x-ms-skip-url-encoding: true
paths:
  /$/CancelRepairTask:
    post:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: CancelRepairTask
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskCancelDescriptionRequiredBodyParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
            Success indicates that the cancellation request was recorded, but does not guarantee that the repair task will be cancelled.
            Clients may use the State property of the repair task to determine the current state of the repair task.
          schema:
            $ref: '#/definitions/RepairTaskUpdateInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Requests the cancellation of the given repair task.
      tags:
        - RepairManagement
  /$/CreateRepairTask:
    post:
      description: |-
        For clusters that have the Repair Manager Service configured,
        this API provides a way to create repair tasks that run automatically or manually.
        For repair tasks that run automatically, an appropriate repair executor
        must be running for each repair action to run automatically.
        These are currently only available in specially-configured Azure Cloud Services.

        To create a manual repair task, provide the set of impacted node names and the
        expected impact. When the state of the created repair task changes to approved,
        you can safely perform repair actions on those nodes.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: CreateRepairTask
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskRequiredBodyParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides information about the created repair task.
          schema:
            $ref: '#/definitions/RepairTaskUpdateInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a new repair task.
      tags:
        - RepairManagement
  /$/DeleteRepairTask:
    post:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: DeleteRepairTask
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskDeleteDescriptionRequiredBodyParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes a completed repair task.
      tags:
        - RepairManagement
  /$/ForceApproveRepairTask:
    post:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: ForceApproveRepairTask
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskApproveDescriptionRequiredBodyParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
          schema:
            $ref: '#/definitions/RepairTaskUpdateInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Forces the approval of the given repair task.
      tags:
        - RepairManagement
  /$/GetAadMetadata:
    get:
      description: |-
        Gets the Azure Active Directory metadata used for secured connection to cluster.
        This API is not supposed to be called separately. It provides information needed to set up an Azure Active Directory secured connection with a Service Fabric cluster.
      operationId: GetAadMetadata
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the Azure Active Directory metadata.
          schema:
            $ref: '#/definitions/AadMetadataObject'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      schemes:
        - https
      summary: Gets the Azure Active Directory metadata used for secured connection to cluster.
      tags:
        - Cluster
  /$/GetClusterConfiguration:
    get:
      description: |-
        The cluster configuration contains properties of the cluster that include different node types on the cluster,
        security configurations, fault, and upgrade domain topologies, etc.
      operationId: GetClusterConfiguration
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ConfigurationApiVersionRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster configuration information.
          schema:
            $ref: '#/definitions/ClusterConfiguration'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the Service Fabric standalone cluster configuration.
      tags:
        - Cluster
  /$/GetClusterConfigurationUpgradeStatus:
    get:
      description: Get the cluster configuration upgrade status details of a Service Fabric standalone cluster.
      operationId: GetClusterConfigurationUpgradeStatus
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster configuration upgrade status.
          schema:
            $ref: '#/definitions/ClusterConfigurationUpgradeStatusInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the cluster configuration upgrade status of a Service Fabric standalone cluster.
      tags:
        - Cluster
  /$/GetClusterHealth:
    get:
      description: |-
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.
      operationId: GetClusterHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/IncludeSystemApplicationHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster health information.
          schema:
            $ref: '#/definitions/ClusterHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric cluster.
      tags:
        - Cluster
    post:
      description: |-
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.
        Use ClusterHealthPolicies to override the health policies used to evaluate the health.
      operationId: GetClusterHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/IncludeSystemApplicationHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/ClusterHealthPoliciesOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster health information.
          schema:
            $ref: '#/definitions/ClusterHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric cluster using the specified policy.
      tags:
        - Cluster
  /$/GetClusterHealthChunk:
    get:
      description: |-
        Gets the health of a Service Fabric cluster using health chunks. Includes the aggregated health state of the cluster, but none of the cluster entities.
        To expand the cluster health and get the health state of all or some of the entities, use the POST URI and specify the cluster health chunk query description.
      operationId: GetClusterHealthChunk
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster health chunk information.
          schema:
            $ref: '#/definitions/ClusterHealthChunk'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric cluster using health chunks.
      tags:
        - Cluster
    post:
      description: |-
        Gets the health of a Service Fabric cluster using health chunks. The health evaluation is done based on the input cluster health chunk query description.
        The query description allows users to specify health policies for evaluating the cluster and its children.
        Users can specify very flexible filters to select which cluster entities to return. The selection can be done based on the entities health state and based on the hierarchy.
        The query can return multi-level children of the entities based on the specified filters. For example, it can return one application with a specified name, and for this application, return
        only services that are in Error or Warning, and all partitions and replicas for one of these services.
      operationId: GetClusterHealthChunkUsingPolicyAndAdvancedFilters
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ClusterHealthChunkQueryDescriptionOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster health chunk information.
          schema:
            $ref: '#/definitions/ClusterHealthChunk'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric cluster using health chunks.
      tags:
        - Cluster
  /$/GetClusterManifest:
    get:
      description: |-
        Get the Service Fabric cluster manifest. The cluster manifest contains properties of the cluster that include different node types on the cluster,
        security configurations, fault, and upgrade domain topologies, etc.

        These properties are specified as part of the ClusterConfig.JSON file while deploying a stand-alone cluster. However, most of the information in the cluster manifest
        is generated internally by service fabric during cluster deployment in other deployment scenarios (e.g. when using Azure portal).

        The contents of the cluster manifest are for informational purposes only and users are not expected to take a dependency on the format of the file contents or its interpretation.
      operationId: GetClusterManifest
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster manifest information.
          schema:
            $ref: '#/definitions/ClusterManifest'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the Service Fabric cluster manifest.
      tags:
        - Cluster
  /$/GetProvisionedCodeVersions:
    get:
      description: Gets a list of information about fabric code versions that are provisioned in the cluster. The parameter CodeVersion can be used to optionally filter the output to only that particular version.
      operationId: GetProvisionedFabricCodeVersionInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/CodeVersionOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested provisioned code versions information.
          schema:
            $ref: '#/definitions/FabricCodeVersionInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a list of fabric code versions that are provisioned in a Service Fabric cluster.
      tags:
        - Cluster
  /$/GetProvisionedConfigVersions:
    get:
      description: Gets a list of information about fabric config versions that are provisioned in the cluster. The parameter ConfigVersion can be used to optionally filter the output to only that particular version.
      operationId: GetProvisionedFabricConfigVersionInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ConfigVersionOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested provisioned config versions information.
          schema:
            $ref: '#/definitions/FabricConfigVersionInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a list of fabric config versions that are provisioned in a Service Fabric cluster.
      tags:
        - Cluster
  /$/GetRepairTaskList:
    get:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: GetRepairTaskList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskIdFilterOptionalQueryParam'
        - $ref: '#/parameters/RepairTaskStateFilterOptionalQueryParam'
        - $ref: '#/parameters/RepairTaskExecutorFilterOptionalQueryParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides a list of repair tasks matching all of the given filters.
          schema:
            $ref: '#/definitions/RepairTaskList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a list of repair tasks matching the given filters.
      tags:
        - RepairManagement
  /$/GetUpgradeOrchestrationServiceState:
    get:
      description: Get the service state of Service Fabric Upgrade Orchestration Service. This API is internally used for support purposes.
      operationId: GetUpgradeOrchestrationServiceState
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested service state of Service Fabric Upgrade Orchestration Service.
          schema:
            $ref: '#/definitions/UpgradeOrchestrationServiceState'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the service state of Service Fabric Upgrade Orchestration Service.
      tags:
        - Cluster
  /$/GetUpgradeProgress:
    get:
      description: 'Gets the current progress of the ongoing cluster upgrade. If no upgrade is currently in progress, get the last state of the previous cluster upgrade.'
      operationId: GetClusterUpgradeProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested cluster upgrade progress.
          schema:
            $ref: '#/definitions/ClusterUpgradeProgressObject'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the progress of the current cluster upgrade.
      tags:
        - Cluster
  /$/InvokeInfrastructureCommand:
    post:
      description: |-
        For clusters that have one or more instances of the Infrastructure Service configured,
        this API provides a way to send infrastructure-specific commands to a particular
        instance of the Infrastructure Service.

        Available commands and their corresponding response formats vary depending upon
        the infrastructure on which the cluster is running.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: InvokeInfrastructureCommand
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/InfrastructureCommandRequiredQueryParam'
        - $ref: '#/parameters/InfrastructureServiceIdOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: |-
            The response from the infrastructure service. The response format is a JSON stream.
            The contents of the response depend on which command was issued.
          schema:
            $ref: '#/definitions/InfrastructureServiceResponse'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Invokes an administrative command on the given Infrastructure Service instance.
      tags:
        - Infrastructure
  /$/InvokeInfrastructureQuery:
    get:
      description: |-
        For clusters that have one or more instances of the Infrastructure Service configured,
        this API provides a way to send infrastructure-specific queries to a particular
        instance of the Infrastructure Service.

        Available commands and their corresponding response formats vary depending upon
        the infrastructure on which the cluster is running.

        This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: InvokeInfrastructureQuery
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/InfrastructureCommandRequiredQueryParam'
        - $ref: '#/parameters/InfrastructureServiceIdOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: |-
            The response from the infrastructure service. The response format is a JSON stream.
            The contents of the response depend on which command was issued.
          schema:
            $ref: '#/definitions/InfrastructureServiceResponse'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Invokes a read-only query on the given infrastructure service instance.
      tags:
        - Infrastructure
  /$/MoveToNextUpgradeDomain:
    post:
      description: Make the cluster code or configuration upgrade move on to the next upgrade domain if appropriate.
      operationId: ResumeClusterUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ResumeClusterUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the cluster upgrade has moved on to the next upgrade domain.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Make the cluster upgrade move on to the next upgrade domain.
      tags:
        - Cluster
  /$/Provision:
    post:
      description: Validate and provision the code or configuration packages of a Service Fabric cluster.
      operationId: ProvisionCluster
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ProvisionFabricDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the code or configuration packages have been provisioned.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Provision the code or configuration packages of a Service Fabric cluster.
      tags:
        - Cluster
  /$/RecoverAllPartitions:
    post:
      description: This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss.
      operationId: RecoverAllPartitions
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation request will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Indicates to the Service Fabric cluster that it should attempt to recover any services (including system services) which are currently stuck in quorum loss.
      tags:
        - Partition
  /$/RecoverSystemPartitions:
    post:
      description: Indicates to the Service Fabric cluster that it should attempt to recover the system services that are currently stuck in quorum loss. This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss.
      operationId: RecoverSystemPartitions
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation request will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Indicates to the Service Fabric cluster that it should attempt to recover the system services that are currently stuck in quorum loss.
      tags:
        - Partition
  /$/ReportClusterHealth:
    post:
      description: |-
        Sends a health report on a Service Fabric cluster. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway node, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetClusterHealth and check that the report appears in the HealthEvents section.
      operationId: ReportClusterHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code when the cluster health report is accepted for processing.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric cluster.
      tags:
        - Cluster
  /$/RollbackUpgrade:
    post:
      description: Rollback the code or configuration upgrade of a Service Fabric cluster.
      operationId: RollbackClusterUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful response means that the rollback of a cluster upgrade has been initiated.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Rollback the upgrade of a Service Fabric cluster.
      tags:
        - Cluster
  /$/SetUpgradeOrchestrationServiceState:
    post:
      description: Update the service state of Service Fabric Upgrade Orchestration Service. This API is internally used for support purposes.
      operationId: SetUpgradeOrchestrationServiceState
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UpgradeOrchestrationServiceStateRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the service state of Service Fabric Upgrade Orchestration Service has been updated.
          schema:
            $ref: '#/definitions/UpgradeOrchestrationServiceStateSummary'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Update the service state of Service Fabric Upgrade Orchestration Service.
      tags:
        - Cluster
  /$/StartClusterConfigurationUpgrade:
    post:
      description: Validate the supplied configuration upgrade parameters and start upgrading the cluster configuration if the parameters are valid.
      operationId: StartClusterConfigurationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ClusterConfigurationUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful response means that the cluster configuration upgrade has started. Use GetClusterConfigurationUpgradeStatus operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Start upgrading the configuration of a Service Fabric standalone cluster.
      tags:
        - Cluster
      x-ms-examples:
        Start upgrading the configuration of a Service Fabric standalone cluster:
          description: This example shows how to start upgrading the configuration of a Service Fabric standalone cluster.
          operationId: StartClusterConfigurationUpgrade
          parameters:
            ClusterConfigurationUpgradeDescription:
              ApplicationHealthPolicies:
                ApplicationHealthPolicyMap:
                  - Key: 'fabric:/samples/CalculatorApp'
                    Value:
                      ConsiderWarningAsError: true
                      DefaultServiceTypeHealthPolicy:
                        MaxPercentUnhealthyPartitionsPerService: 0
                        MaxPercentUnhealthyReplicasPerPartition: 0
                        MaxPercentUnhealthyServices: 0
                      MaxPercentUnhealthyDeployedApplications: 10
                      ServiceTypeHealthPolicyMap:
                        - Key: Svc1Type
                          Value:
                            MaxPercentUnhealthyPartitionsPerService: 0
                            MaxPercentUnhealthyReplicasPerPartition: 0
                            MaxPercentUnhealthyServices: 10
              ClusterConfig: <PutYourClusterConfigHere>
            api-version: '6.0'
            nameId: samples/apps/CalculatorApp
          responses:
            '202': {}
  /$/Unprovision:
    post:
      description: It is supported to unprovision code and configuration separately.
      operationId: UnprovisionCluster
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UnprovisionFabricDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the code or configuration packages have been unprovisioned.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Unprovision the code or configuration packages of a Service Fabric cluster.
      tags:
        - Cluster
  /$/UpdateRepairExecutionState:
    post:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: UpdateRepairExecutionState
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskRequiredBodyParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
          schema:
            $ref: '#/definitions/RepairTaskUpdateInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Updates the execution state of a repair task.
      tags:
        - RepairManagement
  /$/UpdateRepairTaskHealthPolicy:
    post:
      description: This API supports the Service Fabric platform; it is not meant to be used directly from your code.
      operationId: UpdateRepairTaskHealthPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/RepairTaskUpdateHealthPolicyDescriptionRequiredBodyParam'
      responses:
        '200':
          description: |-
            A successful operation will return 200 status code.
            The response body provides information about the updated repair task.
          schema:
            $ref: '#/definitions/RepairTaskUpdateInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Updates the health policy of the given repair task.
      tags:
        - RepairManagement
  /$/UpdateUpgrade:
    post:
      description: Update the upgrade parameters used during a Service Fabric cluster upgrade.
      operationId: UpdateClusterUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UpdateClusterUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation returns 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Update the upgrade parameters of a Service Fabric cluster upgrade.
      tags:
        - Cluster
  /$/Upgrade:
    post:
      description: Validate the supplied upgrade parameters and start upgrading the code or configuration version of a Service Fabric cluster if the parameters are valid.
      operationId: StartClusterUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/StartClusterUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful response means that the cluster code or configuration upgrade has started. Use GetUpgradeProgress operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Start upgrading the code or configuration version of a Service Fabric cluster.
      tags:
        - Cluster
  /ApplicationTypes:
    get:
      description: 'Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster. Each version of an application type is returned as one application type. The response includes the name, version, status, and other details about the application type. This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page. For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned. To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query. An empty continuation token is returned if there are no subsequent pages.'
      operationId: GetApplicationTypeInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeDefinitionKindFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeApplicationParametersOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of application types in the cluster.
          schema:
            $ref: '#/definitions/PagedApplicationTypeInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of application types in the Service Fabric cluster.
      tags:
        - ApplicationType
      x-ms-examples:
        Exclude application parameters from the result:
          description: This example shows how to exclude application parameter in the result when getting the information about application types that are provisioned or being provisioned in the cluster.
          operationId: GetApplicationTypeInfoList
          parameters:
            ExcludeApplicationParameters: true
            api-version: '6.0'
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - DefaultParameterList: []
                    Name: CalculatorApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList: []
                    Name: CalculatorApp
                    Status: Available
                    Version: '2.0'
                  - DefaultParameterList: []
                    Name: GatewayApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList: []
                    Name: PersistentQueueApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList: []
                    Name: PersistentQueueApp
                    Status: Available
                    Version: '2.0'
                  - DefaultParameterList: []
                    Name: VolatileQueueApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList: []
                    Name: VolatileQueueApp
                    Status: Available
                    Version: '2.0'
              headers: {}
        Limit maximum results:
          description: This example shows how to get information about application types that are provisioned or being provisioned in the cluster. The number of results in a page are limited to maximum of five using MaxResult parameter.
          operationId: GetApplicationTypeInfoList
          parameters:
            MaxResults: 5
            api-version: '6.0'
          responses:
            '200':
              body:
                ContinuationToken: PersistentQueueApp+2.0
                Items:
                  - DefaultParameterList:
                      - Key: ServiceInstanceCount
                        Value: '3'
                    Name: CalculatorApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList:
                      - Key: ServiceInstanceCount
                        Value: '3'
                    Name: CalculatorApp
                    Status: Available
                    Version: '2.0'
                  - DefaultParameterList:
                      - Key: GatewayPort
                        Value: '8505'
                      - Key: ServiceInstanceCount
                        Value: '1000'
                    Name: GatewayApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList:
                      - Key: MinReplicaSetSize
                        Value: '2'
                      - Key: TargetReplicaSetSize
                        Value: '3'
                    Name: PersistentQueueApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList:
                      - Key: MinReplicaSetSize
                        Value: '2'
                      - Key: TargetReplicaSetSize
                        Value: '3'
                    Name: PersistentQueueApp
                    Status: Available
                    Version: '2.0'
              headers: {}
        Page using continuation token:
          description: 'This example shows how to page through the information about application types that are provisioned or being provisioned in the cluster using ContinuationToken parameter. The value of this parameter is provided from the previous query, in this case the example shown above. The response contains the remaining two results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.'
          operationId: GetApplicationTypeInfoList
          parameters:
            ContinuationToken: PersistentQueueApp+2.0
            MaxResults: 5
            api-version: '6.0'
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - DefaultParameterList:
                      - Key: MinReplicaSetSize
                        Value: '2'
                      - Key: TargetReplicaSetSize
                        Value: '3'
                    Name: VolatileQueueApp
                    Status: Available
                    Version: '1.0'
                  - DefaultParameterList:
                      - Key: MinReplicaSetSize
                        Value: '2'
                      - Key: TargetReplicaSetSize
                        Value: '3'
                    Name: VolatileQueueApp
                    Status: Available
                    Version: '2.0'
              headers: {}
  /ApplicationTypes/$/Provision:
    post:
      description: |-
        Provisions a Service Fabric application type with the cluster. The provision is required before any new applications can be instantiated.
        The provision operation can be performed either on the application package specified by the relativePathInImageStore, or by using the URI of the external '.sfpkg'.
      operationId: ProvisionApplicationType
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/ProvisionApplicationTypeDescriptionBaseRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful provision will return 200 status code.
        '202':
          description: A 202 status code indicates the operation was accepted and the provision operation has been initiated.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Provisions or registers a Service Fabric application type with the cluster using the '.sfpkg' package in the external store or using the application package in the image store.
      tags:
        - ApplicationType
  '/ApplicationTypes/{applicationTypeName}':
    get:
      description: 'Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster. These results are of application types whose name match exactly the one specified as the parameter, and which comply with the given query parameters. All versions of the application type matching the application type name are returned, with each version returned as one application type. The response includes the name, version, status, and other details about the application type. This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page. For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned. To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query. An empty continuation token is returned if there are no subsequent pages.'
      operationId: GetApplicationTypeInfoListByName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationTypeVersionOptionalQueryParam'
        - $ref: '#/parameters/ExcludeApplicationParametersOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of application types in the cluster.
          schema:
            $ref: '#/definitions/PagedApplicationTypeInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of application types in the Service Fabric cluster matching exactly the specified name.
      tags:
        - ApplicationType
  '/ApplicationTypes/{applicationTypeName}/$/GetApplicationManifest':
    get:
      description: The response contains the application manifest XML as a string.
      operationId: GetApplicationManifest
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationTypeVersionRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the node.
          schema:
            $ref: '#/definitions/ApplicationTypeManifest'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the manifest describing an application type.
      tags:
        - ApplicationType
  '/ApplicationTypes/{applicationTypeName}/$/GetServiceManifest':
    get:
      description: Gets the manifest describing a service type. The response contains the service manifest XML as a string.
      operationId: GetServiceManifest
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationTypeVersionRequiredQueryParam'
        - $ref: '#/parameters/ServiceManifestNameRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the service type.
          schema:
            $ref: '#/definitions/ServiceTypeManifest'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the manifest describing a service type.
      tags:
        - ServiceType
  '/ApplicationTypes/{applicationTypeName}/$/GetServiceTypes':
    get:
      description: 'Gets the list containing the information about service types that are supported by a provisioned application type in a Service Fabric cluster. The provided application type must exist. Otherwise, a 404 status is returned.'
      operationId: GetServiceTypeInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationTypeVersionRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of service types that are supported by a provisioned application type.
          schema:
            $ref: '#/definitions/ServiceTypeInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list containing the information about service types that are supported by a provisioned application type in a Service Fabric cluster.
      tags:
        - ServiceType
      x-ms-examples:
        Get information about all nodes.:
          description: This example shows how to get information about service types that are supported by a provisioned application type in a Service Fabric cluster.
          operationId: GetServiceTypeInfoList
          parameters:
            ApplicationTypeVersion: 1.0.0
            api-version: '6.0'
            applicationTypeName: Application2Type
          responses:
            '200':
              body:
                - IsServiceGroup: false
                  ServiceManifestName: Actor1Pkg
                  ServiceManifestVersion: 1.0.0
                  ServiceTypeDescription:
                    Extensions:
                      - Key: __GeneratedServiceType__
                        Value: "<GeneratedNames xmlns=\"http://schemas.microsoft.com/2015/03/fabact-no-schema\">\r\n            <DefaultService Name=\"Actor1ActorService\" />\r\n            <ReplicatorEndpoint Name=\"Actor1ActorServiceReplicatorEndpoint\" />\r\n            <ReplicatorConfigSection Name=\"Actor1ActorServiceReplicatorConfig\" />\r\n            <ReplicatorSecurityConfigSection Name=\"Actor1ActorServiceReplicatorSecurityConfig\" />\r\n            <StoreConfigSection Name=\"Actor1ActorServiceLocalStoreConfig\" />\r\n            <ServiceEndpointV2 Name=\"Actor1ActorServiceEndpointV2\" />\r\n          </GeneratedNames>"
                    HasPersistedState: true
                    IsStateful: true
                    Kind: Stateful
                    LoadMetrics: []
                    PlacementConstraints: ''
                    ServicePlacementPolicies: []
                    ServiceTypeName: Actor1ActorServiceType
              headers: {}
  '/ApplicationTypes/{applicationTypeName}/$/GetServiceTypes/{serviceTypeName}':
    get:
      description: 'Gets the information about a specific service type that is supported by a provisioned application type in a Service Fabric cluster. The provided application type must exist. Otherwise, a 404 status is returned. A 204 response is returned if the specified service type is not found in the cluster.'
      operationId: GetServiceTypeInfoByName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationTypeVersionRequiredQueryParam'
        - $ref: '#/parameters/ServiceTypeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A specific service type which supported by a provisioned application type.
          schema:
            $ref: '#/definitions/ServiceTypeInfo'
        '204':
          description: A 204 response is returned if the specified service type is not found in the cluster.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about a specific service type that is supported by a provisioned application type in a Service Fabric cluster.
      tags:
        - ServiceType
      x-ms-examples:
        Get information about all nodes.:
          description: This example shows how to get information about a specific service type. A 204 response is returned if the specified service type is not found in the cluster.
          operationId: GetServiceTypeInfoByName
          parameters:
            ApplicationTypeVersion: 1.0.0
            api-version: '6.0'
            applicationTypeName: Application2Type
            serviceTypeName: Actor1ActorServiceType
          responses:
            '200':
              body:
                IsServiceGroup: false
                ServiceManifestName: Actor1Pkg
                ServiceManifestVersion: 1.0.0
                ServiceTypeDescription:
                  Extensions:
                    - Key: __GeneratedServiceType__
                      Value: "<GeneratedNames xmlns=\"http://schemas.microsoft.com/2015/03/fabact-no-schema\">\r\n            <DefaultService Name=\"Actor1ActorService\" />\r\n            <ReplicatorEndpoint Name=\"Actor1ActorServiceReplicatorEndpoint\" />\r\n            <ReplicatorConfigSection Name=\"Actor1ActorServiceReplicatorConfig\" />\r\n            <ReplicatorSecurityConfigSection Name=\"Actor1ActorServiceReplicatorSecurityConfig\" />\r\n            <StoreConfigSection Name=\"Actor1ActorServiceLocalStoreConfig\" />\r\n            <ServiceEndpointV2 Name=\"Actor1ActorServiceEndpointV2\" />\r\n          </GeneratedNames>"
                  HasPersistedState: true
                  IsStateful: true
                  Kind: Stateful
                  LoadMetrics: []
                  PlacementConstraints: ''
                  ServicePlacementPolicies: []
                  ServiceTypeName: Actor1ActorServiceType
              headers: {}
            '204':
              body: ''
              headers: {}
  '/ApplicationTypes/{applicationTypeName}/$/Unprovision':
    post:
      description: 'This operation can only be performed if all application instances of the application type have been deleted. Once the application type is unregistered, no new application instances can be created for this particular application type.'
      operationId: UnprovisionApplicationType
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameRequiredPathParam'
        - $ref: '#/parameters/UnprovisionApplicationTypeRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful provision will return 200 status code.
        '202':
          description: A 202 status code indicates the operation was accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Removes or unregisters a Service Fabric application type from the cluster.
      tags:
        - ApplicationType
  /Applications:
    get:
      description: 'Gets the information about the applications that were created or in the process of being created in the Service Fabric cluster and match the specified filters. The response includes the name, type, status, parameters, and other details about the application. If the applications do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page. Filters ApplicationTypeName and ApplicationDefinitionKindFilter cannot be specified at the same time.'
      operationId: GetApplicationInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-1_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationDefinitionKindFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationTypeNameOptionalQueryParam'
        - $ref: '#/parameters/ExcludeApplicationParametersOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of applications created in the cluster.
          schema:
            $ref: '#/definitions/PagedApplicationInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of applications created in the Service Fabric cluster that match the specified filters.
      tags:
        - Application
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get information about applications on the cluster. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetApplicationInfoList
          parameters:
            MaxResults: 2
            api-version: '6.1'
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/samples/PQueueApp1'
                Items:
                  - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                    HealthState: Ok
                    Id: samples~CalculatorApp
                    Name: 'fabric:/samples/CalculatorApp'
                    Parameters: []
                    Status: Ready
                    TypeName: CalculatorApp
                    TypeVersion: '1.0'
                  - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                    HealthState: Ok
                    Id: samples~PQueueApp1
                    Name: 'fabric:/samples/PQueueApp1'
                    Parameters: []
                    Status: Ready
                    TypeName: PersistentQueueApp
                    TypeVersion: '1.0'
              headers: {}
        Page using continuation token:
          description: 'This example shows how to page through the information about applications on the cluster using the ContinuationToken parameter. The value of this parameter is provided from the previous query, in this case the example shown above. The response contains the remaining one result and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.'
          operationId: GetApplicationInfoList
          parameters:
            ContinuationToken: 'fabric:/samples/PQueueApp1'
            MaxResults: 2
            api-version: '6.1'
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                    HealthState: Ok
                    Id: samples~VQueueApp1
                    Name: 'fabric:/samples/VQueueApp1'
                    Parameters: []
                    Status: Ready
                    TypeName: VolatileQueueApp
                    TypeVersion: '1.0'
              headers: {}
  /Applications/$/Create:
    post:
      description: Creates a Service Fabric application using the specified description.
      operationId: CreateApplication
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '201':
          description: 'A successful response means that the application creation has been started. Use GetApplication operation to get the status of the application. Once GetApplicationInfo successfully returns application information, the application is created. If the application has default services those may be in the process of being created. Use GetServiceInfo operation to get the status of the service within the application.'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a Service Fabric application.
      tags:
        - Application
      x-ms-examples:
        Create application.:
          description: This example shows how to create a Service Fabric application without overriding any application parameter values.
          operationId: CreateApplication
          parameters:
            ApplicationDescription:
              Name: 'fabric:/samples/CalcApp'
              TypeName: CalculatorApp
              TypeVersion: '1.0'
            api-version: '6.0'
          responses:
            '201': {}
  '/Applications/{applicationId}':
    get:
      description: 'Returns the information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter. The response includes the name, type, status, parameters, and other details about the application.'
      operationId: GetApplicationInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ExcludeApplicationParametersOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the application.
          schema:
            $ref: '#/definitions/ApplicationInfo'
        '204':
          description: An empty response is returned if the specified applicationId is not found in the cluster.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets information about a Service Fabric application.
      tags:
        - Application
      x-ms-examples:
        Get a specific application by application id:
          description: 'This example shows how to get information about an application using it''s identifier. If the application is found, information about it is returned with 200 status code. If the application is not found, empty content is returned with 204 status code.'
          operationId: GetApplicationInfo
          parameters:
            api-version: '6.0'
            applicationId: samples~CalculatorApp
          responses:
            '200':
              body:
                ApplicationDefinitionKind: ServiceFabricApplicationDescription
                HealthState: Ok
                Id: samples~CalculatorApp
                Name: 'fabric:/samples/CalculatorApp'
                Parameters: []
                Status: Ready
                TypeName: CalculatorApp
                TypeVersion: '1.0'
              headers: {}
            '204':
              body: ''
              headers: {}
  '/Applications/{applicationId}/$/Delete':
    post:
      description: 'An application must be created before it can be deleted. Deleting an application will delete all services that are part of that application. By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service. However, if a service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck. Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the application and all of its services.'
      operationId: DeleteApplication
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ForceRemoveOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes an existing Service Fabric application.
      tags:
        - Application
  '/Applications/{applicationId}/$/DisableBackup':
    post:
      description: Disables periodic backup of Service Fabric application which was previously enabled.
      operationId: DisableApplicationBackup
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to disable application backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Disables periodic backup of Service Fabric application.
      tags:
        - BackupRestore
      x-ms-examples:
        Disable application backup:
          description: This example shows how to disable periodic backup for a stateful application which was previously enabled.
          operationId: DisableApplicationBackup
          parameters:
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '202': {}
  '/Applications/{applicationId}/$/EnableBackup':
    post:
      description: |-
        Enables periodic backup of stateful partitions which are part of this Service Fabric application. Each partition is backed up individually as per the specified backup policy description. 
        Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
      operationId: EnableApplicationBackup
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/EnableBackupDescriptionRequiredBodyParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to enable application backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Enables periodic backup of stateful partitions under this Service Fabric application.
      tags:
        - BackupRestore
      x-ms-examples:
        Enable application backup:
          description: This example shows how to enable periodic backup for a stateful application.
          operationId: EnableApplicationBackup
          parameters:
            EnableBackupDescription:
              BackupPolicyName: DailyAzureBackupPolicy
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '202': {}
  '/Applications/{applicationId}/$/GetBackupConfigurationInfo':
    get:
      description: Gets the Service Fabric backup configuration information for the application and the services and partitions under this application.
      operationId: GetApplicationBackupConfigurationInfo
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: 'A successful operation will return 200 status code and a paged list of backup configuration information for the application, and the services and partitions under this application, for which backup configuration has been overridden.'
          schema:
            $ref: '#/definitions/PagedBackupConfigurationInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the Service Fabric application backup configuration information.
      tags:
        - BackupRestore
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get list of backup configuration for this application and entities (services and partitions) under this application. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetApplicationBackupConfigurationInfo
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    Kind: Application
                    PolicyInheritedFrom: Application
                    PolicyName: BackupPolicy1
                    SuspensionInfo:
                      IsSuspended: false
                      SuspensionInheritedFrom: Invalid
                  - Kind: Service
                    PolicyInheritedFrom: Service
                    PolicyName: BackupPolicy2
                    ServiceName: 'fabric:/CalcApp/CalcService'
                    SuspensionInfo:
                      IsSuspended: false
                      SuspensionInheritedFrom: Invalid
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of backup configuration for this application and entities (services and partitions) under this application. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetApplicationBackupConfigurationInfo
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService'
            MaxResults: 2
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - Kind: Partition
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    PolicyInheritedFrom: Service
                    PolicyName: BackupPolicy2
                    ServiceName: 'fabric:/CalcApp/CalcService'
                    SuspensionInfo:
                      IsSuspended: true
                      SuspensionInheritedFrom: Partition
              headers: {}
  '/Applications/{applicationId}/$/GetBackups':
    get:
      description: Returns a list of backups available for every partition in this Service Fabric application. The server enumerates all the backups available at the backup location configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.
      operationId: GetApplicationBackupList
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/LatestOptionalQueryParam'
        - $ref: '#/parameters/StartDateTimeFilterOptionalQueryParam'
        - $ref: '#/parameters/EndDateTimeFilterOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and a paged list of backup information.
          schema:
            $ref: '#/definitions/PagedBackupInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of backups available for every partition in this application.
      tags:
        - BackupRestore
      x-ms-examples:
        Get application backups within a time range:
          description: This example shows how to get list of application backups within a time range.
          operationId: GetApplicationBackupList
          parameters:
            EndDateTimeFilter: '2018-01-01T23:59:59Z'
            StartDateTimeFilter: '2018-01-01T00:00:00Z'
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 09.01.02.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '161'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Get latest backup:
          description: This example shows how to get the latest backup for each partition within an application.
          operationId: GetApplicationBackupList
          parameters:
            Latest: true
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Limit maximum results:
          description: This example shows how to get list of application backups. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetApplicationBackupList
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of application backups. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetApplicationBackupList
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
            MaxResults: 2
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 09.01.02.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '161'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
  '/Applications/{applicationId}/$/GetHealth':
    get:
      description: 'Returns the heath state of the service fabric application. The response reports either Ok, Error or Warning health state. If the entity is not found in the health store, it will return Error.'
      operationId: GetApplicationHealth
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/DeployedApplicationsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ServicesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested application health information.
          schema:
            $ref: '#/definitions/ApplicationHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of the service fabric application.
      tags:
        - Application
    post:
      description: Gets the health of a Service Fabric application. Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state. Use ClusterHealthPolicies to override the health policies used to evaluate the health.
      operationId: GetApplicationHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/DeployedApplicationsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ServicesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested node health information.
          schema:
            $ref: '#/definitions/ApplicationHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric application using the specified policy.
      tags:
        - Application
  '/Applications/{applicationId}/$/GetLoadInformation':
    get:
      description: 'Returns the load information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter. The response includes the name, minimum nodes, maximum nodes, the number of nodes the application is occupying currently, and application load metric information about the application.'
      operationId: GetApplicationLoadInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the application load.
          schema:
            $ref: '#/definitions/ApplicationLoadInfo'
        '204':
          description: An empty response is returned if the specified applicationId is not found in the cluster.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets load information about a Service Fabric application.
      tags:
        - Application
  '/Applications/{applicationId}/$/GetServices':
    get:
      description: Returns the information about all services belonging to the application specified by the application ID.
      operationId: GetServiceInfoList
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceTypeNameOptionalQueryParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of services in the cluster for the specified application.
          schema:
            $ref: '#/definitions/PagedServiceInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about all services belonging to the application specified by the application ID.
      tags:
        - Service
  '/Applications/{applicationId}/$/GetServices/$/Create':
    post:
      description: This api allows creating a new Service Fabric stateless or stateful service under a specified Service Fabric application. The description for creating the service includes partitioning information and optional properties for placement and load balancing. Some of the properties can later be modified using `UpdateService` API.
      operationId: CreateService
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful operation will return 202 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates the specified Service Fabric service.
      tags:
        - Service
      x-ms-examples:
        Basic stateful service:
          description: This example shows how to create a basic stateful Service Fabric service.
          operationId: CreateService
          parameters:
            ServiceDescription:
              ApplicationName: 'fabric:/test'
              HasPersistedState: false
              MinReplicaSetSize: 2
              PartitionDescription:
                PartitionScheme: Singleton
              ServiceKind: Stateful
              ServiceName: 'fabric:/test/test2'
              ServiceTypeName: StatefulBackendService
              TargetReplicaSetSize: 3
            api-version: '6.0'
            applicationId: test
          responses:
            '202': {}
        Basic stateless service:
          description: This example shows how to create a basic stateless Service Fabric service.
          operationId: CreateService
          parameters:
            ServiceDescription:
              ApplicationName: 'fabric:/test'
              InstanceCount: 4
              PartitionDescription:
                PartitionScheme: Singleton
              ServiceKind: Stateless
              ServiceName: 'fabric:/test/test1'
              ServiceTypeName: StatelessFrontendService
            api-version: '6.0'
            applicationId: test
          responses:
            '202': {}
        Stateful service with named partitions and auto scaling:
          description: This example shows how to create a stateful Service Fabric service with named partitions and scaling enabled based on memory usage.
          operationId: CreateService
          parameters:
            ServiceDescription:
              ApplicationName: 'fabric:/test'
              HasPersistedState: true
              InitializationData: []
              MinReplicaSetSize: 2
              PartitionDescription:
                Count: 1
                Names:
                  - '0'
                PartitionScheme: NamedPartitionSchemeDescription
              ScalingPolicies:
                - ScalingMechanism:
                    Kind: AddRemoveIncrementalNamedPartition
                    MaxPartitionCount: 3
                    MinPartitionCount: 1
                    ScaleIncrement: 1
                  ScalingTrigger:
                    Kind: AverageServiceLoad
                    LowerLoadThreshold: 500
                    MetricName: 'servicefabric:/_MemoryInMB'
                    ScaleIntervalInSeconds: 600
                    UpperLoadThreshold: 900
              ServiceKind: Stateful
              ServiceName: 'fabric:/test/test2'
              ServicePackageActivationMode: ExclusiveProcess
              ServiceTypeName: StatefulBackendService
              TargetReplicaSetSize: 3
            api-version: '6.0'
            applicationId: test
          responses:
            '202': {}
        Stateless service with dns name and auto scaling:
          description: This example shows how to create a stateless Service Fabric service with a dns name definied and auto scaling based on cpu usage.
          operationId: CreateService
          parameters:
            ServiceDescription:
              ApplicationName: 'fabric:/test'
              CorrelationScheme: []
              DefaultMoveCost: Low
              InitializationData: []
              InstanceCount: 2
              IsDefaultMoveCostSpecified: true
              PartitionDescription:
                PartitionScheme: Singleton
              PlacementConstraints: Color==Blue
              ScalingPolicies:
                - ScalingMechanism:
                    Kind: PartitionInstanceCount
                    MaxInstanceCount: 6
                    MinInstanceCount: 1
                    ScaleIncrement: 2
                  ScalingTrigger:
                    Kind: AveragePartitionLoad
                    LowerLoadThreshold: 0.3
                    MetricName: 'servicefabric:/_CpuCores'
                    ScaleIntervalInSeconds: 600
                    UpperLoadThreshold: 0.8
              ServiceDnsName: test1.test
              ServiceKind: Stateless
              ServiceLoadMetrics: []
              ServiceName: 'fabric:/test/test1'
              ServicePackageActivationMode: ExclusiveProcess
              ServicePlacementPolicies: []
              ServiceTypeName: StatelessFrontendService
            api-version: '6.0'
            applicationId: test
          responses:
            '202': {}
  '/Applications/{applicationId}/$/GetServices/$/CreateFromTemplate':
    post:
      description: Creates a Service Fabric service from the service template defined in the application manifest. A service template contains the properties that will be same for the service instance of the same type. The API allows overriding the properties that are usually different for different services of the same service type.
      operationId: CreateServiceFromTemplate
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/CreateServiceFromTemplateRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful operation will return 202 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a Service Fabric service from the service template.
      tags:
        - Service
  '/Applications/{applicationId}/$/GetServices/{serviceId}':
    get:
      description: Returns the information about the specified service belonging to the specified Service Fabric application.
      operationId: GetServiceInfo
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the specified service.
          schema:
            $ref: '#/definitions/ServiceInfo'
        '204':
          description: An empty response is returned if the specified service is not part of the specified application.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about the specific service belonging to the Service Fabric application.
      tags:
        - Service
  '/Applications/{applicationId}/$/GetUpgradeProgress':
    get:
      description: Returns information about the state of the latest application upgrade along with details to aid debugging application health issues.
      operationId: GetApplicationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: The application upgrade details.
          schema:
            $ref: '#/definitions/ApplicationUpgradeProgressInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets details for the latest upgrade performed on this application.
      tags:
        - Application
  '/Applications/{applicationId}/$/MoveToNextUpgradeDomain':
    post:
      description: 'Resumes an unmonitored manual Service Fabric application upgrade. Service Fabric upgrades one upgrade domain at a time. For unmonitored manual upgrades, after Service Fabric finishes an upgrade domain, it waits for you to call this API before proceeding to the next upgrade domain.'
      operationId: ResumeApplicationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ResumeApplicationUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the application upgrade has been resumed in the specified upgrade domain. Use GetApplicationUpgrade operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resumes upgrading an application in the Service Fabric cluster.
      tags:
        - Application
  '/Applications/{applicationId}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the specified Service Fabric application. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Application, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get application health and check that the report appears in the HealthEvents section.
      operationId: ReportApplicationHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric application.
      tags:
        - Application
  '/Applications/{applicationId}/$/ResumeBackup':
    post:
      description: The previously suspended Service Fabric application resumes taking periodic backup as per the backup policy currently configured for the same.
      operationId: ResumeApplicationBackup
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and application backup will be resumed.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resumes periodic backup of a Service Fabric application which was previously suspended.
      tags:
        - BackupRestore
      x-ms-examples:
        Resume application backup:
          description: This example shows how to resume periodic backup for a stateful application which was previously suspended.
          operationId: ResumeApplicationBackup
          parameters:
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '202': {}
  '/Applications/{applicationId}/$/RollbackUpgrade':
    post:
      description: 'Starts rolling back the current application upgrade to the previous version. This API can only be used to roll back the current in-progress upgrade that is rolling forward to new version. If the application is not currently being upgraded use StartApplicationUpgrade API to upgrade it to desired version, including rolling back to a previous version.'
      operationId: RollbackApplicationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the application has started to roll back. Use GetApplicationUpgrade operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Starts rolling back the currently on-going upgrade of an application in the Service Fabric cluster.
      tags:
        - Application
  '/Applications/{applicationId}/$/SuspendBackup':
    post:
      description: 'The application which is configured to take periodic backups, is suspended for taking further backups till it is resumed again. This operation applies to the entire application''s hierarchy. It means all the services and partitions under this application are now suspended for backup.'
      operationId: SuspendApplicationBackup
      parameters:
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and application backup will be suspended.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Suspends periodic backup for the specified Service Fabric application.
      tags:
        - BackupRestore
      x-ms-examples:
        Suspend application backup:
          description: This example shows how to suspend backup for a stateful application which is configured for periodic backup.
          operationId: SuspendApplicationBackup
          parameters:
            api-version: 6.2-preview
            applicationId: CalcApp
          responses:
            '202': {}
  '/Applications/{applicationId}/$/UpdateUpgrade':
    post:
      description: Updates the parameters of an ongoing application upgrade from the ones specified at the time of starting the application upgrade. This may be required to mitigate stuck application upgrades due to incorrect parameters or issues in the application to make progress.
      operationId: UpdateApplicationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApplicationUpgradeUpdateDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the application upgrade has updated with the specified parameters. Use GetApplicationUpgrade operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Updates an ongoing application upgrade in the Service Fabric cluster.
      tags:
        - Application
  '/Applications/{applicationId}/$/Upgrade':
    post:
      description: Validates the supplied application upgrade parameters and starts upgrading the application if the parameters are valid.
      operationId: StartApplicationUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ApplicationUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the application upgrade has started. Use GetApplicationUpgrade operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Starts upgrading an application in the Service Fabric cluster.
      tags:
        - Application
  /BackupRestore/$/GetBackups:
    post:
      description: 'Gets the list of backups available for the specified backed up entity (Application, Service or Partition) at the specified backup location (FileShare or Azure Blob Storage).'
      operationId: GetBackupsFromBackupLocation
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/GetBackupByStorageQueryDescriptionRequiredBodyParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and a paged list of backup information.
          schema:
            $ref: '#/definitions/PagedBackupInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of backups available for the specified backed up entity at the specified backup location.
      tags:
        - BackupRestore
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get list of application backups from a specified backup location. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetBackupsFromBackupLocation
          parameters:
            GetBackupByStorageQueryDescription:
              BackupEntity:
                ApplicationName: 'fabric:/CalcApp'
                EntityKind: Application
              Storage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                StorageKind: AzureBlobStore
            MaxResults: 2
            api-version: 6.2-preview
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of application backups. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetBackupsFromBackupLocation
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
            GetBackupByStorageQueryDescription:
              BackupEntity:
                ApplicationName: 'fabric:/CalcApp'
                EntityKind: Application
              Storage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                StorageKind: AzureBlobStore
            MaxResults: 2
            api-version: 6.2-preview
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 09.01.02.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '161'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
  /BackupRestore/BackupPolicies:
    get:
      description: Get a list of all the backup policies configured.
      operationId: GetBackupPolicyList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and paged list of backup policies.
          schema:
            $ref: '#/definitions/PagedBackupPolicyDescriptionList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all the backup policies configured.
      tags:
        - BackupRestore
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get list of backup policies. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetBackupPolicyList
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
          responses:
            '200':
              body:
                ContinuationToken: FileShare10MinBackupPolicy
                Items:
                  - AutoRestoreOnDataLoss: false
                    MaxIncrementalBackups: 3
                    Name: DailyAzureBackupPolicy
                    Schedule:
                      RunTimes:
                        - '0001-01-01T09:00:00Z'
                        - '0001-01-01T17:00:00Z'
                      ScheduleFrequencyType: Daily
                      ScheduleKind: TimeBased
                    Storage:
                      ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                      ContainerName: BackupContainer
                      FriendlyName: Azure_storagesample
                      StorageKind: AzureBlobStore
                  - AutoRestoreOnDataLoss: false
                    MaxIncrementalBackups: 3
                    Name: FileShare10MinBackupPolicy
                    Schedule:
                      Interval: PT10M
                      ScheduleKind: FrequencyBased
                    Storage:
                      FriendlyName: FileShare_myshare
                      Path: \\myshare\backupshare
                      PrimaryPassword: '****'
                      PrimaryUserName: backupaccount
                      StorageKind: FileShare
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of backup policies. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetBackupPolicyList
          parameters:
            ContinuationToken: FileShare10MinBackupPolicy
            MaxResults: 2
            api-version: 6.2-preview
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - AutoRestoreOnDataLoss: false
                    MaxIncrementalBackups: 5
                    Name: SampleBackupPolicy
                    Schedule:
                      Interval: PT4H5M
                      ScheduleKind: FrequencyBased
                    Storage:
                      FriendlyName: ''
                      Path: \\myshare\BackupStore
                      PrimaryPassword: '****'
                      PrimaryUserName: myuser1
                      SecondaryPassword: '****'
                      SecondaryUserName: myuser2
                      StorageKind: FileShare
              headers: {}
  /BackupRestore/BackupPolicies/$/Create:
    post:
      description: 'Creates a backup policy which can be associated later with a Service Fabric application, service or a partition for periodic backup.'
      operationId: CreateBackupPolicy
      parameters:
        - $ref: '#/parameters/BackupPolicyDescriptionRequiredBodyParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '201':
          description: A successful operation returns 201 status code and creates a new backup policy.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a backup policy.
      tags:
        - BackupRestore
      x-ms-examples:
        Create a frequency based backup policy with file share as backup location:
          description: This example shows how to create a backup policy which takes backup every 10 minutes with file share as the backup location.
          operationId: CreateBackupPolicy
          parameters:
            BackupPolicyDescription:
              AutoRestoreOnDataLoss: false
              MaxIncrementalBackups: 3
              Name: FileShare10MinBackupPolicy
              Schedule:
                Interval: PT10M
                ScheduleKind: FrequencyBased
              Storage:
                FriendlyName: FileShare_myshare
                Path: \\myshare\backupshare
                PrimaryPassword: abcd1234
                PrimaryUserName: backupaccount
                StorageKind: FileShare
            api-version: 6.2-preview
          responses:
            '201': {}
        Create a time based backup policy with Azure as backup location:
          description: This example shows how to create a backup policy which takes backup twice everyday at 9 AM and 5 PM UTC with Azure blob store as the backup location.
          operationId: CreateBackupPolicy
          parameters:
            BackupPolicyDescription:
              AutoRestoreOnDataLoss: false
              MaxIncrementalBackups: 3
              Name: DailyAzureBackupPolicy
              Schedule:
                RunTimes:
                  - '0001-01-01T09:00:00Z'
                  - '0001-01-01T17:00:00Z'
                ScheduleFrequencyType: Daily
                ScheduleKind: TimeBased
              Storage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                FriendlyName: Azure_storagesample
                StorageKind: AzureBlobStore
            api-version: 6.2-preview
          responses:
            '201': {}
  '/BackupRestore/BackupPolicies/{backupPolicyName}':
    get:
      description: 'Gets a particular backup policy identified by {backupPolicyName}'
      operationId: GetBackupPolicyByName
      parameters:
        - $ref: '#/parameters/BackupPolicyNameRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the backup policy description.
          schema:
            $ref: '#/definitions/BackupPolicyDescription'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a particular backup policy by name.
      tags:
        - BackupRestore
      x-ms-examples:
        Get backup policy by name:
          description: This example shows how to query a backup policy by name.
          operationId: GetBackupPolicyByName
          parameters:
            api-version: 6.2-preview
            backupPolicyName: DailyAzureBackupPolicy
          responses:
            '200':
              body:
                AutoRestoreOnDataLoss: false
                MaxIncrementalBackups: 3
                Name: DailyAzureBackupPolicy
                Schedule:
                  RunTimes:
                    - '0001-01-01T09:00:00Z'
                    - '0001-01-01T17:00:00Z'
                  ScheduleFrequencyType: Daily
                  ScheduleKind: TimeBased
                Storage:
                  ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                  ContainerName: BackupContainer
                  StorageKind: AzureBlobStore
              headers: {}
  '/BackupRestore/BackupPolicies/{backupPolicyName}/$/Delete':
    post:
      description: 'Deletes an existing backup policy. A backup policy must be created before it can be deleted. A currently active backup policy, associated with any Service Fabric application, service or partition, cannot be deleted without first deleting the mapping.'
      operationId: DeleteBackupPolicy
      parameters:
        - $ref: '#/parameters/BackupPolicyNameRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation returns 200 status code and deletes the backup policy.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes the backup policy.
      tags:
        - BackupRestore
      x-ms-examples:
        Delete backup policy:
          description: This example shows how to delete an existing backup policy which is currently not associated with any backup entity.
          operationId: DeleteBackupPolicy
          parameters:
            api-version: 6.2-preview
            backupPolicyName: SampleBackupPolicy
          responses:
            '200': {}
  '/BackupRestore/BackupPolicies/{backupPolicyName}/$/GetBackupEnabledEntities':
    get:
      description: 'Returns a list of Service Fabric application, service or partition which are associated with this backup policy.'
      operationId: GetAllEntitiesBackedUpByPolicy
      parameters:
        - $ref: '#/parameters/BackupPolicyNameRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and a paged list of Service Fabric entities that are associated with this policy.
          schema:
            $ref: '#/definitions/PagedBackupEntityList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of backup entities that are associated with this policy.
      tags:
        - BackupRestore
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get list of backup entities that are currently associated with a backup policy. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetAllEntitiesBackedUpByPolicy
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            backupPolicyName: DailyAzureBackupPolicy
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/DemoApp'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    EntityKind: Application
                  - ApplicationName: 'fabric:/DemoApp'
                    EntityKind: Application
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of backup entities that are currently associated with a backup policy. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetAllEntitiesBackedUpByPolicy
          parameters:
            ContinuationToken: 'fabric:/DemoApp'
            MaxResults: 2
            api-version: 6.2-preview
            backupPolicyName: DailyAzureBackupPolicy
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - EntityKind: Service
                    ServiceName: 'fabric:/VotingApp/VotingActorService'
              headers: {}
  '/BackupRestore/BackupPolicies/{backupPolicyName}/$/Update':
    post:
      description: 'Updates the backup policy identified by {backupPolicyName}'
      operationId: UpdateBackupPolicy
      parameters:
        - $ref: '#/parameters/BackupPolicyDescriptionRequiredBodyParam'
        - $ref: '#/parameters/BackupPolicyNameRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation returns 200 status code and updates the backup policy description.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Updates the backup policy.
      tags:
        - BackupRestore
      x-ms-examples:
        Update backup policy:
          description: This example shows how to update the schedule of a backup policy to take backup twice everyday at 9 AM and 5 PM UTC with Azure blob store as the backup location.
          operationId: UpdateBackupPolicy
          parameters:
            BackupPolicyDescription:
              AutoRestoreOnDataLoss: false
              MaxIncrementalBackups: 3
              Name: DailyAzureBackupPolicy
              Schedule:
                RunTimes:
                  - '0001-01-01T09:00:00Z'
                  - '0001-01-01T17:00:00Z'
                ScheduleFrequencyType: Daily
                ScheduleKind: TimeBased
              Storage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                FriendlyName: Azure_storagesample
                StorageKind: AzureBlobStore
            api-version: 6.2-preview
            backupPolicyName: DailyAzureBackupPolicy
          responses:
            '200': {}
  /ComposeDeployments:
    get:
      description: 'Gets the status about the compose deployments that were created or in the process of being created in the Service Fabric cluster. The response includes the name, status, and other details about the compose deployments. If the list of deployments do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.'
      operationId: GetComposeDeploymentStatusList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of status of compose deployments in the cluster.
          schema:
            $ref: '#/definitions/PagedComposeDeploymentStatusInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of compose deployments created in the Service Fabric cluster.
      tags:
        - Compose Deployment
  /ComposeDeployments/$/Create:
    put:
      description: 'Compose is a file format that describes multi-container applications. This API allows deploying container based applications defined in compose format in a Service Fabric cluster. Once the deployment is created, its status can be tracked via the `GetComposeDeploymentStatus` API.'
      operationId: CreateComposeDeployment
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/CreateComposeDeploymentRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful operation will return 202 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a Service Fabric compose deployment.
      tags:
        - Compose Deployment
  '/ComposeDeployments/{deploymentName}':
    get:
      description: 'Returns the status of the compose deployment that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter. The response includes the name, status, and other details about the deployment.'
      operationId: GetComposeDeploymentStatus
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/DeploymentNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the compose deployment.
          schema:
            $ref: '#/definitions/ComposeDeploymentStatusInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets information about a Service Fabric compose deployment.
      tags:
        - Compose Deployment
  '/ComposeDeployments/{deploymentName}/$/Delete':
    post:
      description: Deletes an existing Service Fabric compose deployment.
      operationId: RemoveComposeDeployment
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/DeploymentNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful operation will return 202 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes an existing Service Fabric compose deployment from cluster.
      tags:
        - Compose Deployment
  '/ComposeDeployments/{deploymentName}/$/GetUpgradeProgress':
    get:
      description: Returns the information about the state of the compose deployment upgrade along with details to aid debugging application health issues.
      operationId: GetComposeDeploymentUpgradeProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/DeploymentNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Details about the compose deployment upgrade.
          schema:
            $ref: '#/definitions/ComposeDeploymentUpgradeProgressInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets details for the latest upgrade performed on this Service Fabric compose deployment.
      tags:
        - Compose Deployment
  '/ComposeDeployments/{deploymentName}/$/Upgrade':
    post:
      description: Validates the supplied upgrade parameters and starts upgrading the deployment if the parameters are valid.
      operationId: StartComposeDeploymentUpgrade
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0-Preview_RequiredQueryParam'
        - $ref: '#/parameters/DeploymentNameRequiredPathParam'
        - $ref: '#/parameters/ComposeDeploymentUpgradeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A successful response means that the upgrade has started. Use GetComposeDeploymentUpgrade operation to get the status of the upgrade.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Starts upgrading a compose deployment in the Service Fabric cluster.
      tags:
        - Compose Deployment
  /EventsStore/Applications/Events:
    get:
      description: The response is list of ApplicationEvent objects.
      operationId: GetApplicationsEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ApplicationEvent.
          schema:
            $ref: '#/definitions/ApplicationEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Applications-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Applications-related events:
          description: This example shows how to get all applications-related events during a certain time window.
          operationId: GetApplicationsEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
          responses:
            '200':
              body:
                - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                  ApplicationId: app1
                  ApplicationTypeName: App1Type
                  ApplicationTypeVersion: 1.0.1
                  EventInstanceId: 8a7a0c42-67ca-4cd3-9160-edcdb822db10
                  HasCorrelatedEvents: false
                  Kind: ApplicationCreated
                  TimeStamp: '2018-04-03T20:21:23.5774199Z'
                - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                  ApplicationId: app2
                  ApplicationTypeName: App2Type
                  ApplicationTypeVersion: 4.0.1
                  EventInstanceId: d50574bc-6a31-4945-8275-7639bec7a0b3
                  HasCorrelatedEvents: false
                  Kind: ApplicationCreated
                  TimeStamp: '2018-04-03T20:21:59.74842Z'
              headers: {}
  '/EventsStore/Applications/{applicationId}/$/Events':
    get:
      description: The response is list of ApplicationEvent objects.
      operationId: GetApplicationEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ApplicationEvent.
          schema:
            $ref: '#/definitions/ApplicationEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets an Application-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Application-related events:
          description: This example shows how to get all application-related events during a certain time window.
          operationId: GetApplicationEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            applicationId: app1
          responses:
            '200':
              body:
                - ApplicationDefinitionKind: ServiceFabricApplicationDescription
                  ApplicationId: app1
                  ApplicationTypeName: App1Type
                  ApplicationTypeVersion: 1.0.1
                  EventInstanceId: 8a7a0c42-67ca-4cd3-9160-edcdb822db10
                  HasCorrelatedEvents: false
                  Kind: ApplicationCreated
                  TimeStamp: '2018-04-03T20:21:23.5774199Z'
              headers: {}
  /EventsStore/Cluster/Events:
    get:
      description: The response is list of ClusterEvent objects.
      operationId: GetClusterEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ClusterEvent.
          schema:
            $ref: '#/definitions/ClusterEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Cluster-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Cluster-related events:
          description: This example shows how to get all cluster-related events during a certain time window.
          operationId: GetClusterEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
          responses:
            '200':
              body:
                - CurrentClusterVersion: '0.0.0.0:'
                  EventInstanceId: 090add3c-8f56-4d35-8d57-a855745b6064
                  FailureAction: Manual
                  HasCorrelatedEvents: false
                  Kind: ClusterUpgradeStart
                  RollingUpgradeMode: UnmonitoredAuto
                  TargetClusterVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:18:59.4313064Z'
                  UpgradeType: Rolling
                - EventInstanceId: 090add3c-8f56-4d35-8d57-a855745b6064
                  HasCorrelatedEvents: false
                  Kind: ClusterUpgradeDomainComplete
                  TargetClusterVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:19:59.5729953Z'
                  UpgradeDomainElapsedTimeInMs: 78.5288
                  UpgradeDomains: (0 1 2)
                  UpgradeState: RollingForward
                - EventInstanceId: 090add3c-8f56-4d35-8d57-a855745b6064
                  HasCorrelatedEvents: false
                  Kind: ClusterUpgradeDomainComplete
                  TargetClusterVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:20:59.6271949Z'
                  UpgradeDomainElapsedTimeInMs: 0
                  UpgradeDomains: (3 4)
                  UpgradeState: RollingForward
                - EventInstanceId: 090add3c-8f56-4d35-8d57-a855745b6064
                  HasCorrelatedEvents: false
                  Kind: ClusterUpgradeComplete
                  OverallUpgradeElapsedTimeInMs: 120196.5212
                  TargetClusterVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:20:59.8134457Z'
              headers: {}
  /EventsStore/Containers/Events:
    get:
      description: The response is list of ContainerInstanceEvent objects.
      operationId: GetContainersEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ContainerInstanceEvent.
          schema:
            $ref: '#/definitions/ContainerInstanceEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Containers-related events.
      tags:
        - EventsStore
  '/EventsStore/CorrelatedEvents/{eventInstanceId}/$/Events':
    get:
      description: The response is list of FabricEvents.
      operationId: GetCorrelatedEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/EventInstanceIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type FabricEvent.
          schema:
            $ref: '#/definitions/EventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all correlated events for a given event.
      tags:
        - EventsStore
      x-ms-examples:
        Get Correlated events:
          description: This example shows how to get all correlated events for a given eventInstanceId.
          operationId: GetCorrelatedEventList
          parameters:
            api-version: 6.2-preview
            eventInstanceId: e00fa5b7-f747-40dd-9e09-f5a031e96de4
          responses:
            '200':
              body:
                - CurrentNode: node1(cf68563e16a44f808e86197a9cf83de5)
                  EventInstanceId: 59dde2bc-a833-412e-a56d-8f6ada0c7963
                  HasCorrelatedEvents: true
                  Kind: PartitionPrimaryMoveAnalysis
                  Metadata:
                    Delay: '00:00:20'
                    Duration: '00:01:59'
                  MoveReason: ApplicationHostDown
                  PartitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
                  PreviousNode: node3(b9d52c016a15a8f57673d3b8041e2d35)
                  RelevantTraces: ''
                  TimeStamp: '2018-04-03T20:07:55.966073Z'
                  WhenMoveCompleted: '2018-04-03T20:06:55.966073Z'
              headers: {}
  /EventsStore/Nodes/Events:
    get:
      description: The response is list of NodeEvent objects.
      operationId: GetNodesEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type NodeEvent.
          schema:
            $ref: '#/definitions/NodeEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Nodes-related Events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Nodes-related events:
          description: This example shows how to get all nodes-related events during a certain time window.
          operationId: GetNodesEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
          responses:
            '200':
              body:
                - EventInstanceId: ecbce04a-a42b-4b70-a800-dfc6bc4f9b89
                  FaultDomain: 'fd:/0'
                  HasCorrelatedEvents: false
                  Hostname: RD0003FF5089AA
                  IpAddressOrFQDN: 100.78.240.56
                  IsSeedNode: false
                  Kind: NodeOpening
                  NodeId: ba001a8bb353543e646be031afb10f1e
                  NodeInstance: 131672596159209220
                  NodeName: node1
                  NodeVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:06:55.966073Z'
                  UpgradeDomain: '0'
                - EventInstanceId: 67730c48-752c-4209-bf28-3c121555a4c0
                  FaultDomain: 'fd:/3'
                  HasCorrelatedEvents: false
                  Hostname: RD0003FF6047A8
                  IpAddressOrFQDN: 100.72.76.122
                  IsSeedNode: false
                  Kind: NodeOpening
                  NodeId: ba03ef91259835c54d674889849a7cee
                  NodeInstance: 131672596186027900
                  NodeName: node2
                  NodeVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:06:58.6357365Z'
                  UpgradeDomain: '3'
              headers: {}
  '/EventsStore/Nodes/{nodeName}/$/Events':
    get:
      description: The response is list of NodeEvent objects.
      operationId: GetNodeEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type NodeEvent.
          schema:
            $ref: '#/definitions/NodeEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a Node-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Node-related events:
          description: This example shows how to get all node-related events during a certain time window.
          operationId: GetNodeEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            nodeName: node1
          responses:
            '200':
              body:
                - EventInstanceId: ecbce04a-a42b-4b70-a800-dfc6bc4f9b89
                  FaultDomain: 'fd:/0'
                  HasCorrelatedEvents: false
                  Hostname: RD0003FF5089AA
                  IpAddressOrFQDN: 100.78.240.56
                  IsSeedNode: false
                  Kind: NodeOpening
                  NodeId: ba001a8bb353543e646be031afb10f1e
                  NodeInstance: 131672596159209220
                  NodeName: node1
                  NodeVersion: '6.2:1.0'
                  TimeStamp: '2018-04-03T20:06:55.966073Z'
                  UpgradeDomain: '0'
              headers: {}
  /EventsStore/Partitions/Events:
    get:
      description: The response is list of PartitionEvent objects.
      operationId: GetPartitionsEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type PartitionEvent.
          schema:
            $ref: '#/definitions/PartitionEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Partitions-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Partitions-related events:
          description: This example shows how to get all partitions-related events during a certain time window.
          operationId: GetPartitionsEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
          responses:
            '200':
              body:
                - CcEpochConfigVersion: 8589934595
                  CcEpochDataLossVersion: 131672604833413100
                  EventInstanceId: e00fa5b7-f747-40dd-9e09-f5a031e96de4
                  HasCorrelatedEvents: true
                  Kind: PartitionReconfigurationCompleted
                  NodeInstanceId: ba001a8bb353543e646be031afb10f1e
                  NodeName: node1
                  PartitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
                  Phase0DurationMs: 0
                  Phase1DurationMs: 0
                  Phase2DurationMs: 203.1935
                  Phase3DurationMs: 0.0262
                  Phase4DurationMs: 628.8527
                  ReconfigType: Other
                  Result: Completed
                  ServiceType: Svc1Type
                  TimeStamp: '2018-04-03T20:21:47.3778996Z'
                  TotalDurationMs: 832.0724
                - CcEpochConfigVersion: 8589934596
                  CcEpochDataLossVersion: 131672604833413100
                  EventInstanceId: 9aeb234a-16ef-4e8a-974e-26c60d6f2b86
                  HasCorrelatedEvents: false
                  Kind: PartitionReconfigurationCompleted
                  NodeInstanceId: ba0459d257b028296deba8bd5add33cb
                  NodeName: node2
                  PartitionId: e12acfb3-2a43-4a1a-a252-aa5388ef1aec
                  Phase0DurationMs: 0
                  Phase1DurationMs: 0
                  Phase2DurationMs: 205.667
                  Phase3DurationMs: 407.7781
                  Phase4DurationMs: 630.0935
                  ReconfigType: Other
                  Result: Completed
                  ServiceType: Svc1Type
                  TimeStamp: '2018-04-03T20:21:49.5155104Z'
                  TotalDurationMs: 1243.5386
              headers: {}
  '/EventsStore/Partitions/{partitionId}/$/Events':
    get:
      description: The response is list of PartitionEvent objects.
      operationId: GetPartitionEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type PartitionEvent.
          schema:
            $ref: '#/definitions/PartitionEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a Partition-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Partition-related events:
          description: This example shows how to get all partition-related events during a certain time window.
          operationId: GetPartitionEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            partitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
          responses:
            '200':
              body:
                - CcEpochConfigVersion: 8589934595
                  CcEpochDataLossVersion: 131672604833413100
                  EventInstanceId: e00fa5b7-f747-40dd-9e09-f5a031e96de4
                  HasCorrelatedEvents: true
                  Kind: PartitionReconfigurationCompleted
                  NodeInstanceId: ba001a8bb353543e646be031afb10f1e
                  NodeName: node1
                  PartitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
                  Phase0DurationMs: 0
                  Phase1DurationMs: 0
                  Phase2DurationMs: 203.1935
                  Phase3DurationMs: 0.0262
                  Phase4DurationMs: 628.8527
                  ReconfigType: Other
                  Result: Completed
                  ServiceType: Svc1Type
                  TimeStamp: '2018-04-03T20:21:47.3778996Z'
                  TotalDurationMs: 832.0724
              headers: {}
  '/EventsStore/Partitions/{partitionId}/$/Replicas/Events':
    get:
      description: The response is list of ReplicaEvent objects.
      operationId: GetPartitionReplicasEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ReplicaEvent.
          schema:
            $ref: '#/definitions/ReplicaEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Replicas-related events for a Partition.
      tags:
        - EventsStore
      x-ms-examples:
        Get Partition Replicas-related events:
          description: This example shows how to get all replicas-related events during a certain time window.
          operationId: GetPartitionReplicasEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            partitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
          responses:
            '200':
              body:
                - Description: ''
                  EventInstanceId: b2684da3-df81-4add-8baa-201f73e9195d
                  HasCorrelatedEvents: false
                  HealthState: Error
                  Kind: StatefulReplicaHealthReportCreated
                  PartitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
                  Property: ''
                  RemoveWhenExpired: false
                  ReplicaId: 131672608994209140
                  ReplicaInstanceId: 131672608994209140
                  SequenceNumber: 131672654189677800
                  SourceId: TestSource
                  SourceUtcTimestamp: '2018-04-03T21:43:38Z'
                  TimeStamp: '2018-04-03T21:43:38.8904013Z'
                  TimeToLiveMs: 922337203685477
                - Description: ''
                  EventInstanceId: 4a8851d8-35a3-4618-b4ac-03ffa191c350
                  HasCorrelatedEvents: false
                  HealthState: Error
                  Kind: StatefulReplicaHealthReportCreated
                  PartitionId: f549f3b3-08c2-4ec4-adb4-415e024cb0ef
                  Property: ''
                  RemoveWhenExpired: false
                  ReplicaId: 177872608994339550
                  ReplicaInstanceId: 177872608994339550
                  SequenceNumber: 131672654189677800
                  SourceId: TestSource
                  SourceUtcTimestamp: '2018-04-03T21:44:38Z'
                  TimeStamp: '2018-04-03T21:44:38.8904013Z'
                  TimeToLiveMs: 922337203685477
              headers: {}
  '/EventsStore/Partitions/{partitionId}/$/Replicas/{replicaId}/$/Events':
    get:
      description: The response is list of ReplicaEvent objects.
      operationId: GetPartitionReplicaEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ReplicaEvent.
          schema:
            $ref: '#/definitions/ReplicaEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a Partition Replica-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Partition Replica-related events:
          description: This example shows how to get all replica-related events during a certain time window.
          operationId: GetPartitionReplicaEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            partitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
            replicaId: 131672608994209140
          responses:
            '200':
              body:
                - Description: ''
                  EventInstanceId: b2684da3-df81-4add-8baa-201f73e9195d
                  HasCorrelatedEvents: false
                  HealthState: Error
                  Kind: StatefulReplicaHealthReportCreated
                  PartitionId: f2a6a893-39be-4c7d-b07f-72bc2d36de89
                  Property: ''
                  RemoveWhenExpired: false
                  ReplicaId: 131672608994209140
                  ReplicaInstanceId: 131672608994209140
                  SequenceNumber: 131672654189677800
                  SourceId: TestSource
                  SourceUtcTimestamp: '2018-04-03T21:43:38Z'
                  TimeStamp: '2018-04-03T21:43:38.8904013Z'
                  TimeToLiveMs: 922337203685477
              headers: {}
  /EventsStore/Services/Events:
    get:
      description: The response is list of ServiceEvent objects.
      operationId: GetServicesEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ServiceEvent.
          schema:
            $ref: '#/definitions/ServiceEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets all Services-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Services-related events:
          description: This example shows how to get all services-related events during a certain time window.
          operationId: GetServicesEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
          responses:
            '200':
              body:
                - ApplicationName: 'fabric:/app1'
                  ApplicationTypeName: App1Type
                  EventInstanceId: 8ba26506-4a93-4b8c-ae14-29a2841b3003
                  HasCorrelatedEvents: false
                  IsStateful: true
                  Kind: ServiceCreated
                  MinReplicaSetSize: 2
                  PartitionCount: 2
                  PartitionId: bd936249-183d-4e29-94ab-2e198e4e2e87
                  ServiceId: app1/svc1
                  ServiceInstance: 131672605579916060
                  ServicePackageVersion: '1.0:1.0'
                  ServiceTypeName: Svc1Type
                  TargetReplicaSetSize: 3
                  TimeStamp: '2018-04-03T20:22:38.0560496Z'
                - ApplicationName: 'fabric:/app1'
                  ApplicationTypeName: App1Type
                  EventInstanceId: 03246d3b-77f5-4ca2-b065-7b8671711318
                  HasCorrelatedEvents: false
                  IsStateful: true
                  Kind: ServiceCreated
                  MinReplicaSetSize: 2
                  PartitionCount: 2
                  PartitionId: 87413d64-0134-4b23-a439-c2692c4e3ec3
                  ServiceId: app1/svc2
                  ServiceInstance: 131672605579916060
                  ServicePackageVersion: '1.0:1.0'
                  ServiceTypeName: Svc2Type
                  TargetReplicaSetSize: 3
                  TimeStamp: '2018-04-03T20:22:38.056197Z'
              headers: {}
  '/EventsStore/Services/{serviceId}/$/Events':
    get:
      description: The response is list of ServiceEvent objects.
      operationId: GetServiceEventList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EndTimeUtcRequiredQueryParam'
        - $ref: '#/parameters/EventsTypesFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeAnalysisEventsOptionalQueryParam'
        - $ref: '#/parameters/SkipCorrelationLookupOptionalQueryParam'
      responses:
        '200':
          description: List of events objects with base type ServiceEvent.
          schema:
            $ref: '#/definitions/ServiceEventList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a Service-related events.
      tags:
        - EventsStore
      x-ms-examples:
        Get Service-related events:
          description: This example shows how to get all service-related events during a certain time window.
          operationId: GetServiceEventList
          parameters:
            EndTimeUtc: '2018-04-04T18:00:00Z'
            StartTimeUtc: '2018-04-03T18:00:00Z'
            api-version: 6.2-preview
            serviceId: app1~svc1
          responses:
            '200':
              body:
                - ApplicationName: 'fabric:/app1'
                  ApplicationTypeName: App1Type
                  EventInstanceId: 8ba26506-4a93-4b8c-ae14-29a2841b3003
                  HasCorrelatedEvents: false
                  IsStateful: true
                  Kind: ServiceCreated
                  MinReplicaSetSize: 2
                  PartitionCount: 2
                  PartitionId: bd936249-183d-4e29-94ab-2e198e4e2e87
                  ServiceId: app1/svc1
                  ServiceInstance: 131672605579916060
                  ServicePackageVersion: '1.0:1.0'
                  ServiceTypeName: Svc1Type
                  TargetReplicaSetSize: 3
                  TimeStamp: '2018-04-03T20:22:38.0560496Z'
              headers: {}
  /Faults/:
    get:
      description: Gets the a list of user-induced fault operations filtered by provided input.
      operationId: GetFaultOperationList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TypeFilterRequiredQueryParam'
        - $ref: '#/parameters/StateFilterRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
          schema:
            $ref: '#/definitions/OperationStatusList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets a list of user-induced fault operations filtered by provided input.
      tags:
        - Faults
      x-ms-examples:
        Gets information on fault operations:
          description: This shows an example of possible output for GetFaultOperationList
          operationId: GetFaultOperationList
          parameters:
            StateFilter: '0xFF'
            TypeFilter: '0xFF'
            api-version: '6.0'
          responses:
            '200':
              body:
                - OperationId: 00000000-0000-0000-0000-000000000010
                  State: Completed
                  Type: PartitionDataLoss
                - OperationId: 00000000-0000-0000-0000-000000000020
                  State: Completed
                  Type: PartitionQuorumLoss
                - OperationId: 00000000-0000-0000-0000-000000000030
                  State: Completed
                  Type: PartitionRestart
                - OperationId: 00000000-0000-0000-0000-000000000500
                  State: Faulted
                  Type: NodeTransition
                - OperationId: 00000000-0000-0000-0000-000000000700
                  State: Completed
                  Type: NodeTransition
                - OperationId: 00000000-0000-0000-0000-000000000710
                  State: Completed
                  Type: NodeTransition
                - OperationId: 88ef90f9-0b94-46b0-b817-a6ea20c07f8a
                  State: Completed
                  Type: PartitionRestart
              headers: {}
  /Faults/$/Cancel:
    post:
      description: |-
        The following APIs start fault operations that may be cancelled by using CancelOperation: StartDataLoss, StartQuorumLoss, StartPartitionRestart, StartNodeTransition.

        If force is false, then the specified user-induced operation will be gracefully stopped and cleaned up.  If force is true, the command will be aborted, and some internal state
        may be left behind.  Specifying force as true should be used with care.  Calling this API with force set to true is not allowed until this API has already
        been called on the same test command with force set to false first, or unless the test command already has an OperationState of OperationState.RollingBack.
        Clarification: OperationState.RollingBack means that the system will be/is cleaning up internal system state caused by executing the command.  It will not restore data if the
        test command was to cause data loss.  For example, if you call StartDataLoss then call this API, the system will only clean up internal state from running the command.
        It will not restore the target partition's data, if the command progressed far enough to cause data loss.

        Important note:  if this API is invoked with force==true, internal state may be left behind.
      operationId: CancelOperation
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/ForceRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Cancels a user-induced fault operation.
      tags:
        - Faults
  '/Faults/Nodes/{nodeName}/$/GetTransitionProgress':
    get:
      description: Gets the progress of an operation started with StartNodeTransition using the provided OperationId.
      operationId: GetNodeTransitionProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the progress of a node transition operation.
          schema:
            $ref: '#/definitions/NodeTransitionProgress'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the progress of an operation started using StartNodeTransition.
      tags:
        - Faults
      x-ms-examples:
        Gets information about a completed NodeTransition operation:
          description: 'This shows an example of possible output when GetTransitionProgress has reached a State of Completed.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetNodeTransitionProgress
          parameters:
            OperationId: a9c24269-88e9-4812-b4ad-a0bf2b724ad4
            api-version: '6.0'
            nodeName: N0060
          responses:
            '200':
              body:
                NodeTransitionResult:
                  ErrorCode: 0
                  NodeResult:
                    NodeInstanceId: '131366982707950527'
                    NodeName: N0060
                State: Completed
              headers: {}
        Gets information about a running NodeTransition operation:
          description: This shows an example of output when GetTransitionProgress has a State of Running.
          operationId: GetNodeTransitionProgress
          parameters:
            OperationId: ed903556-acf1-489c-9f33-b484c31f9087
            api-version: '6.0'
            nodeName: N0060
          responses:
            '200':
              body:
                State: Running
              headers: {}
  '/Faults/Nodes/{nodeName}/$/StartTransition/':
    post:
      description: |-
        Starts or stops a cluster node.  A cluster node is a process, not the OS instance itself.  To start a node, pass in "Start" for the NodeTransitionType parameter.
        To stop a node, pass in "Stop" for the NodeTransitionType parameter.  This API starts the operation - when the API returns the node may not have finished transitioning yet.
        Call GetNodeTransitionProgress with the same OperationId to get the progress of the operation.
      operationId: StartNodeTransition
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/NodeTransitionTypeRequiredQueryParam'
        - $ref: '#/parameters/NodeInstanceIdRequiredQueryParam'
        - $ref: '#/parameters/StopDurationInSecondsRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation was accepted.  Call the GetNodeTransitionProgress API to get the progress.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Starts or stops a cluster node.
      tags:
        - Faults
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetDataLossProgress':
    get:
      description: 'Gets the progress of a data loss operation started with StartDataLoss, using the OperationId.'
      operationId: GetDataLossProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the progress of the partition data loss operation.
          schema:
            $ref: '#/definitions/PartitionDataLossProgress'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the progress of a partition data loss operation started using the StartDataLoss API.
      tags:
        - Faults
      x-ms-examples:
        Get information about a partition data loss operation.  In this case the operation is a State of Running:
          description: 'This shows an example of output when a data loss operation is in a Running State.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetDataLossProgress
          parameters:
            OperationId: 7216486c-1ee9-4b00-99b2-92b26fcb07f5
            api-version: '6.0'
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: 'fabric:/myapp/myservice'
          responses:
            '200':
              body:
                State: Running
              headers: {}
        Gets information about a partition data loss operation.  In this case the operation has a State of Completed:
          description: 'This shows an example of possible output when GetDataLossProgress has reached a State of Completed.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetDataLossProgress
          parameters:
            OperationId: 7216486c-1ee9-4b00-99b2-92b26fcb07f5
            api-version: '6.0'
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: 'fabric:/myapp/myservice'
          responses:
            '200':
              body:
                InvokeDataLossResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: 'fabric:/myapp/myservice'
                State: Completed
              headers: {}
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetQuorumLossProgress':
    get:
      description: 'Gets the progress of a quorum loss operation started with StartQuorumLoss, using the provided OperationId.'
      operationId: GetQuorumLossProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the progress of a partition quorum loss operation.
          schema:
            $ref: '#/definitions/PartitionQuorumLossProgress'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the progress of a quorum loss operation on a partition started using the StartQuorumLoss API.
      tags:
        - Faults
      x-ms-examples:
        Gets information about a completed quorum loss operation:
          description: 'This shows an example of possible output when GetQuorumLossProgress has reached a State of Completed.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetQuorumLossProgress
          parameters:
            OperationId: 81fbaee7-4f49-44bb-a350-4cb2b51dbf26
            api-version: '6.0'
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: 'fabric:/myapp/myservice'
          responses:
            '200':
              body:
                InvokeQuorumLossResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: 'fabric:/myapp/myservice'
                State: Completed
              headers: {}
        Gets information about a running quorum operation operation:
          description: 'This shows an example of possible output when GetQuorumLossProgress has a State of Running.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetQuorumLossProgress
          parameters:
            OperationId: 81fbaee7-4f49-44bb-a350-4cb2b51dbf26
            api-version: '6.0'
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: 'fabric:/myapp/myservice'
          responses:
            '200':
              body:
                State: Running
              headers: {}
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/GetRestartProgress':
    get:
      description: Gets the progress of a PartitionRestart started with StartPartitionRestart using the provided OperationId.
      operationId: GetPartitionRestartProgress
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the progress of a partition restart operation.
          schema:
            $ref: '#/definitions/PartitionRestartProgress'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the progress of a PartitionRestart operation started using StartPartitionRestart.
      tags:
        - Faults
      x-ms-examples:
        Get information a completed PartitionRestart operation:
          description: 'This shows an example of possible output when GetPartitionRestartProgress has reached a State of Completed.  If the State has a value of Running, only the State field will have a value.'
          operationId: GetPartitionRestartProgress
          parameters:
            OperationId: 6eb7f0d3-49ca-4cb1-81b7-ac2d56b5c5d1
            api-version: '6.0'
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
            serviceId: 'fabric:/myapp/myservice'
          responses:
            '200':
              body:
                RestartPartitionResult:
                  ErrorCode: 0
                  SelectedPartition:
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    ServiceName: 'fabric:/myapp/myservice'
                State: Completed
              headers: {}
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartDataLoss':
    post:
      description: |-
        This API will induce data loss for the specified partition. It will trigger a call to the OnDataLoss API of the partition.
        Actual data loss will depend on the specified DataLossMode.

        - PartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is triggered for the partition but actual data loss depends on the presence of in-flight replication.
        - FullDataLoss - All replicas are removed hence all data is lost and OnDataLoss is triggered.

        This API should only be called with a stateful service as the target.

        Calling this API with a system service as the target is not advised.

        Note:  Once this API has been called, it cannot be reversed. Calling CancelOperation will only stop execution and clean up internal system state.
        It will not restore data if the command has progressed far enough to cause data loss.

        Call the GetDataLossProgress API with the same OperationId to return information on the operation started with this API.
      operationId: StartDataLoss
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/DataLossModeRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation was accepted.  Call the GetDataLossProgress API to get the progress.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: This API will induce data loss for the specified partition. It will trigger a call to the OnDataLossAsync API of the partition.
      tags:
        - Faults
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartQuorumLoss':
    post:
      description: |-
        This API is useful for a temporary quorum loss situation on your service.

        Call the GetQuorumLossProgress API with the same OperationId to return information on the operation started with this API.

        This can only be called on stateful persisted (HasPersistedState==true) services.  Do not use this API on stateless services or stateful in-memory only services.
      operationId: StartQuorumLoss
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/QuorumLossModeRequiredQueryParam'
        - $ref: '#/parameters/QuorumLossDurationRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation was accepted.  Call the GetQuorumLossProgress API to get the progress.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Induces quorum loss for a given stateful service partition.
      tags:
        - Faults
  '/Faults/Services/{serviceId}/$/GetPartitions/{partitionId}/$/StartRestart':
    post:
      description: |-
        This API is useful for testing failover.

        If used to target a stateless service partition, RestartPartitionMode must be AllReplicasOrInstances.

        Call the GetPartitionRestartProgress API using the same OperationId to get the progress.
      operationId: StartPartitionRestart
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/FaultOperationIdRequiredQueryParam'
        - $ref: '#/parameters/RestartPartitionModeRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation was accepted.  Call the GetPartitionRestartProgress API to get the progress.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: This API will restart some or all replicas or instances of the specified partition.
      tags:
        - Faults
  /ImageStore:
    get:
      description: Returns the information about the image store content at the root of the image store.
      operationId: GetImageStoreRootContent
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested image store content information.
          schema:
            $ref: '#/definitions/ImageStoreContent'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the content information at the root of the image store.
      tags:
        - ImageStore
  /ImageStore/$/CommitUploadSession:
    post:
      description: 'When all file chunks have been uploaded, the upload session needs to be committed explicitly to complete the upload. Image store preserves the upload session until the expiration time, which is 30 minutes after the last chunk received. '
      operationId: CommitImageStoreUploadSession
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UploadSessionIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: 'If the commit request succeeds, the server returns the HTTP 200 OK status code.'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Commit an image store upload session.
      tags:
        - ImageStore
  /ImageStore/$/Copy:
    post:
      description: Copies the image store content from the source image store relative path to the destination image store relative path.
      operationId: CopyImageStoreContent
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreCopyDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Copies image store content internally
      tags:
        - ImageStore
  /ImageStore/$/DeleteUploadSession:
    delete:
      description: The DELETE request will cause the existing upload session to expire and remove any previously uploaded file chunks.
      operationId: DeleteImageStoreUploadSession
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UploadSessionIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Cancels an image store upload session.
      tags:
        - ImageStore
  /ImageStore/$/GetUploadSession:
    get:
      description: 'Gets the image store upload session identified by the given ID. User can query the upload session at any time during uploading. '
      operationId: GetImageStoreUploadSessionById
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/UploadSessionIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested image store upload session information.
          schema:
            $ref: '#/definitions/UploadSession'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the image store upload session by ID.
      tags:
        - ImageStore
      x-ms-examples:
        Get information about image store upload session by a given ID:
          description: This example shows how to get image store upload session by a given ID.
          operationId: GetImageStoreUploadSessionById
          parameters:
            api-version: '6.0'
            session-id: 4a2340e8-d8d8-497c-95fe-cdaa1052f33b
          responses:
            '200':
              body:
                UploadSessions:
                  - ExpectedRanges:
                      - EndPosition: '402128'
                        StartPosition: '0'
                      - EndPosition: '2097151'
                        StartPosition: '730105'
                    FileSize: '2097152'
                    ModifiedDate: '2017-09-28T17:06:37.260Z'
                    SessionId: 4a2340e8-d8d8-497c-95fe-cdaa1052f33b
                    StoreRelativePath: SwaggerTest\Common.dll
              headers: {}
  '/ImageStore/{contentPath}':
    delete:
      description: Deletes existing image store content being found within the given image store relative path. This can be used to delete uploaded application packages once they are provisioned.
      operationId: DeleteImageStoreContent
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreContentPathRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes existing image store content.
      tags:
        - ImageStore
    get:
      description: Returns the information about the image store content at the specified contentPath. The contentPath is relative to the root of the image store.
      operationId: GetImageStoreContent
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreContentPathRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested image store content information.
          schema:
            $ref: '#/definitions/ImageStoreContent'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the image store content information.
      tags:
        - ImageStore
      x-ms-examples:
        Get information about image store content under a given relative path:
          description: This example shows how to get image store content under the given relative path.
          operationId: GetImageStoreContent
          parameters:
            api-version: '6.2'
            contentPath: Store\CalcServiceApp
          responses:
            '200':
              body:
                StoreFiles:
                  - FileSize: '897'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '23'
                    ModifiedDate: '2017-09-28T17:44:22.609Z'
                    StoreRelativePath: Store\CalcServiceApp\ApplicationManifest.2.0.xml
                  - FileSize: '66'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '25'
                    ModifiedDate: '2017-09-28T17:44:22.468Z'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Code.2.0.checksum
                  - FileSize: '66'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '26'
                    ModifiedDate: '2017-09-28T17:44:22.468Z'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Config.1.0.checksum
                  - FileSize: '66'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '27'
                    ModifiedDate: '2017-09-28T17:44:22.468Z'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Data.2.0.checksum
                  - FileSize: '744'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '19'
                    ModifiedDate: '2017-09-28T17:44:22.578Z'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Manifest.2.0.xml
                  - FileSize: '66'
                    FileVersion:
                      EpochConfigurationNumber: '25769803776'
                      EpochDataLossNumber: '131510254310497004'
                      VersionNumber: '24'
                    ModifiedDate: '2017-09-28T17:44:22.484Z'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Manifest.2.0.xml.checksum
                StoreFolders:
                  - FileCount: '2'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Code.2.0
                  - FileCount: '2'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Config.1.0
                  - FileCount: '2'
                    StoreRelativePath: Store\CalcServiceApp\CalcService.Data.2.0
              headers: {}
    put:
      description: 'Uploads contents of the file to the image store. Use this API if the file is small enough to upload again if the connection fails. The file''s data needs to be added to the request body. The contents will be uploaded to the specified path. Image store service uses a mark file to indicate the availability of the folder. The mark file is an empty file named "_.dir". The mark file is generated by the image store service when all files in a folder are uploaded. When using File-by-File approach to upload application package in REST, the image store service isn''t aware of the file hierarchy of the application package; you need to create a mark file per folder and upload it last, to let the image store service know that the folder is complete.'
      operationId: UploadFile
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreContentPathRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: 'If the upload request succeeds, the server returns the HTTP 200 OK status code.'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Uploads contents of the file to the image store.
      tags:
        - ImageStore
  '/ImageStore/{contentPath}/$/GetUploadSession':
    get:
      description: 'Gets the image store upload session associated with the given image store relative path. User can query the upload session at any time during uploading. '
      operationId: GetImageStoreUploadSessionByPath
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreContentPathRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested image store upload session information.
          schema:
            $ref: '#/definitions/UploadSession'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the image store upload session by relative path.
      tags:
        - ImageStore
      x-ms-examples:
        Get information about image store upload session by a given relative path:
          description: This example shows how to get image store upload session by a given relative path.
          operationId: GetImageStoreUploadSessionByPath
          parameters:
            api-version: '6.0'
            contentPath: SwaggerTest\Common.dll
          responses:
            '200':
              body:
                UploadSessions:
                  - ExpectedRanges:
                      - EndPosition: '207615'
                        StartPosition: '0'
                      - EndPosition: '2097151'
                        StartPosition: '626977'
                    FileSize: '2097152'
                    ModifiedDate: '2017-09-28T17:28:11.627Z'
                    SessionId: 2032ac6c-a348-4594-86da-dab0f2bb1ae1
                    StoreRelativePath: SwaggerTest\Common.dll
                  - ExpectedRanges:
                      - EndPosition: '616947'
                        StartPosition: '0'
                      - EndPosition: '2097151'
                        StartPosition: '1087529'
                    FileSize: '2097152'
                    ModifiedDate: '2017-09-28T17:28:11.643Z'
                    SessionId: fb2da2b2-7cb4-45d2-a2e6-c4888d205bc5
                    StoreRelativePath: SwaggerTest\Common.dll
              headers: {}
  '/ImageStore/{contentPath}/$/UploadChunk':
    put:
      description: |-
        Uploads a file chunk to the image store with the specified upload session ID and image store relative path. This API allows user to resume the file upload operation. user doesn't have to restart the file upload from scratch whenever there is a network interruption. Use this option if the file size is large.

        To perform a resumable file upload, user need to break the file into multiple chunks and upload these chunks to the image store one-by-one. Chunks don't have to be uploaded in order. If the file represented by the image store relative path already exists, it will be overwritten when the upload session commits.
      operationId: UploadFileChunk
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ImageStoreContentPathRequiredPathParam'
        - $ref: '#/parameters/UploadSessionIdRequiredQueryParam'
        - $ref: '#/parameters/UploadFileChunkContentRangeHeaderParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return the HTTP 200 OK status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Uploads a file chunk to the image store relative path.
      tags:
        - ImageStore
  /Names/$/Create:
    post:
      description: Creates the specified Service Fabric name.
      operationId: CreateName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '201':
          description: A successful response means that the name has been created.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates a Service Fabric name.
      tags:
        - Property Management
      x-ms-examples:
        Create new name:
          description: This example shows how to create a new Service Fabric name. The name can be created under an existing name that represents an appliction or a service or under a completely new name.
          operationId: CreateName
          parameters:
            NameDescription:
              Name: 'fabric:/samples/CalculatorApp/CalculatorService/Name-1'
            api-version: '6.0'
          responses:
            '201': {}
  '/Names/{nameId}':
    delete:
      description: Deletes the specified Service Fabric name. A name must be created before it can be deleted. Deleting a name with child properties will fail.
      operationId: DeleteName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the Service Fabric name has been deleted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes a Service Fabric name.
      tags:
        - Property Management
    get:
      description: Returns whether the specified Service Fabric name exists.
      operationId: GetNameExistsInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the Service Fabric name exists.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Returns whether the Service Fabric name exists.
      tags:
        - Property Management
  '/Names/{nameId}/$/GetProperties':
    get:
      description: 'A Service Fabric name can have one or more named properties that store custom information. This operation gets the information about these properties in a paged list. The information includes name, value, and metadata about each of the properties.'
      operationId: GetPropertyInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/IncludeValuesOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A paged list of Service Fabric properties.
          schema:
            $ref: '#/definitions/PagedPropertyInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets information on all Service Fabric properties under a given name.
      tags:
        - Property Management
      x-ms-examples:
        Get property info list:
          description: This example shows how to get all Service Fabric properties under a given name.
          operationId: GetPropertyInfoList
          parameters:
            api-version: '6.0'
            nameId: samples/apps
          responses:
            '200':
              body:
                ContinuationToken: PersistentQueueAppData$131439231986491349
                IsConsistent: true
                Properties:
                  - Metadata:
                      CustomTypeId: ''
                      LastModifiedUtcTimestamp: '2017-07-17T04:27:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '10'
                      SizeInBytes: 5
                      TypeId: Int64
                    Name: CalculatorAppData
                  - Metadata:
                      CustomTypeId: InitializationDataType
                      LastModifiedUtcTimestamp: '2017-07-17T04:36:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '12'
                      SizeInBytes: 5
                      TypeId: Binary
                    Name: PersistentQueueAppData
              headers: {}
        Get property info list with values:
          description: This example shows how to get all Service Fabric properties and their values under a given name.
          operationId: GetPropertyInfoList
          parameters:
            IncludeValues: true
            api-version: '6.0'
            nameId: samples/apps
          responses:
            '200':
              body:
                ContinuationToken: PersistentQueueAppData$131439231986491349
                IsConsistent: true
                Properties:
                  - Metadata:
                      CustomTypeId: ''
                      LastModifiedUtcTimestamp: '2017-07-17T04:27:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '10'
                      SizeInBytes: 8
                      TypeId: Int64
                    Name: CalculatorAppData
                    Value:
                      Data: '4534'
                      Kind: Int64
                  - Metadata:
                      CustomTypeId: InitializationDataType
                      LastModifiedUtcTimestamp: '2017-07-17T04:36:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '12'
                      SizeInBytes: 5
                      TypeId: Binary
                    Name: PersistentQueueAppData
                    Value:
                      Data:
                        - 6
                        - 7
                        - 8
                        - 9
                        - 10
                      Kind: Binary
              headers: {}
        Page using continuation token:
          description: 'This example shows how to page through the information about properties under a given Service Fabric name using ContinuationToken parameter. The value of this parameter is provided from the previous query, in this case the example shown above. The response contains the remaining two results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.'
          operationId: GetPropertyInfoList
          parameters:
            ContinuationToken: PersistentQueueAppData$131439231986491349
            IncludeValues: true
            api-version: '6.0'
            nameId: samples/apps
          responses:
            '200':
              body:
                ContinuationToken: ''
                IsConsistent: true
                Properties:
                  - Metadata:
                      CustomTypeId: ''
                      LastModifiedUtcTimestamp: '2017-07-17T04:01:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '8'
                      SizeInBytes: 8
                      TypeId: Double
                    Name: VolatileQueueAppData
                    Value:
                      Data: 67.89
                      Kind: Double
              headers: {}
  '/Names/{nameId}/$/GetProperties/$/SubmitBatch':
    post:
      description: Submits a batch of property operations. Either all or none of the operations will be committed.
      operationId: SubmitPropertyBatch
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/PropertyBatchDescriptionListRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the property batch succeeded.
          schema:
            $ref: '#/definitions/SuccessfulPropertyBatchInfo'
        '409':
          description: 'A 409 response means that one of the property batch operations failed, and contains more information about the failure. None of the operations were committed.'
          schema:
            $ref: '#/definitions/FailedPropertyBatchInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Submits a property batch.
      tags:
        - Property Management
      x-ms-examples:
        Property batch operation:
          description: "This example shows how to submit a property batch. This batch ensures that a property exists, checks that the property has the expected sequence number, and edits the property only if the previous conditions succeed. It then performs a get operation to get the property's current info. \r\n If all of the operations succeed, the batch is committed in a transactional manner and a success response is returned with 200 status code. \r\n If the batch fails then a failed response is returned with 409 status code. The failed response below shows batch failure because the property does not have expected sequence number."
          operationId: SubmitPropertyBatch
          parameters:
            PropertyBatchDescriptionList:
              Operations:
                - Exits: true
                  Kind: CheckExists
                  PropertyName: PersistentQueueAppData
                - Kind: CheckSequence
                  PropertyName: PersistentQueueAppData
                  SequenceNumber: '12'
                - CustomTypeId: InitializationData
                  Kind: Put
                  PropertyName: PersistentQueueAppData
                  Value:
                    Data:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                    Kind: Binary
                - IncludeValue: false
                  Kind: Get
                  PropertyName: PersistentQueueAppData
            api-version: '6.0'
            nameId: samples/apps
          responses:
            '200':
              body:
                Kind: Successful
                Properties:
                  '3':
                    Metadata:
                      CustomTypeId: InitializationData
                      LastModifiedUtcTimestamp: '2017-07-17T05:01:19.049Z'
                      Parent: 'fabric:/samples/apps'
                      SequenceNumber: '13'
                      SizeInBytes: 5
                      TypeId: Binary
                    Name: PersistentQueueAppData
              headers: {}
            '409':
              body:
                ErrorMessage: FABRIC_E_PROPERTY_CHECK_FAILED
                Kind: Failed
                OperationIndex: 1
              headers: {}
  '/Names/{nameId}/$/GetProperty':
    delete:
      description: Deletes the specified Service Fabric property under a given name. A property must be created before it can be deleted.
      operationId: DeleteProperty
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/PropertyNameRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the property has been deleted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes the specified Service Fabric property.
      tags:
        - Property Management
    get:
      description: Gets the specified Service Fabric property under a given name. This will always return both value and metadata.
      operationId: GetPropertyInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/PropertyNameRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Details on the Service Fabric property.
          schema:
            $ref: '#/definitions/PropertyInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the specified Service Fabric property.
      tags:
        - Property Management
      x-ms-examples:
        Get property info:
          description: This example shows how to get a Service Fabric property under a given name.
          operationId: GetPropertyInfo
          parameters:
            PropertyName: AppData
            api-version: '6.0'
            nameId: samples/apps
          responses:
            '200':
              body:
                Metadata:
                  CustomTypeId: EquationType
                  LastModifiedUtcTimestamp: '2017-07-17T04:27:19.049Z'
                  Parent: 'fabric:/samples/apps'
                  SequenceNumber: '12'
                  SizeInBytes: 12
                  TypeId: String
                Name: CalculatorAppData
                Value:
                  Data: 1+2=3
                  Kind: String
              headers: {}
    put:
      description: Creates or updates the specified Service Fabric property under a given name.
      operationId: PutProperty
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/PropertyDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful response means that the property has been created or updated.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates or updates a Service Fabric property.
      tags:
        - Property Management
      x-ms-examples:
        Put custom property:
          description: This example shows how to create or update a Service Fabric property under a given name with a custom type.
          operationId: PutProperty
          parameters:
            PropertyDescription:
              CustomTypeId: EquationType
              PropertyName: AppData
              Value:
                Data: 1+2=3
                Kind: String
            api-version: '6.0'
            nameId: samples/apps/CalculatorApp
          responses:
            '200': {}
        Put property:
          description: This example shows how to create or update a Service Fabric property under a given name.
          operationId: PutProperty
          parameters:
            PropertyDescription:
              PropertyName: AppData
              Value:
                Data:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                Kind: Binary
            api-version: '6.0'
            nameId: samples/apps/CalculatorApp
          responses:
            '200': {}
  '/Names/{nameId}/$/GetSubNames':
    get:
      description: 'Enumerates all the Service Fabric names under a given name. If the subnames do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page. Querying a name that doesn''t exist will fail.'
      operationId: GetSubNameInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NameIdRequiredPathParam'
        - $ref: '#/parameters/RecursiveOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A paged list of Service Fabric names.
          schema:
            $ref: '#/definitions/PagedSubNameInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Enumerates all the Service Fabric names under a given name.
      tags:
        - Property Management
      x-ms-examples:
        Get sub names:
          description: This example shows how to get information about all sub names of a given Service Fabric name.
          operationId: GetSubNameInfoList
          parameters:
            api-version: '6.0'
            nameId: samples
          responses:
            '200':
              body:
                ContinuationToken: ''
                IsConsistent: true
                SubNames:
                  - 'fabric:/samples/CalculatorApp'
                  - 'fabric:/samples/mynames'
              headers: {}
        Page using continuation token:
          description: 'This example shows how to page through the information about sub names under a given Service Fabric name using ContinuationToken parameter. The value of this parameter is provided from the previous query, in this case the example shown above. The response contains the remaining two results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.'
          operationId: GetSubNameInfoList
          parameters:
            ContinuationToken: 'fabric:/samples/apps/PersistentQueueApp$131439231986491349'
            Recursive: true
            api-version: '6.0'
            nameId: samples
          responses:
            '200':
              body:
                ContinuationToken: ''
                IsConsistent: true
                SubNames:
                  - 'fabric:/samples/apps/VolatileQueueApp'
                  - 'fabric:/samples/apps/NotepadApp'
              headers: {}
        Recursively search sub names:
          description: This example shows how to recursively get information about all child sub names of a given Service Fabric name.
          operationId: GetSubNameInfoList
          parameters:
            Recursive: true
            api-version: '6.0'
            nameId: samples
          responses:
            '200':
              body:
                ContinuationToken: ''
                IsConsistent: true
                SubNames:
                  - 'fabric:/samples/apps'
                  - 'fabric:/samples/data'
                  - 'fabric:/samples/CalculatorApp'
                  - 'fabric:/samples/CalculatorApp/CalculatorService'
                  - 'fabric:/samples/CalculatorApp/CalculatorService/Name-1'
                  - 'fabric:/samples/CalculatorApp/CalculatorService/Name-2'
                  - 'fabric:/samples/mynames/name-1'
              headers: {}
  /Nodes:
    get:
      description: 'The response includes the name, status, ID, health, uptime, and other details about the nodes.'
      operationId: GetNodeInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/NodeStatusFilterOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of nodes in the cluster.
          schema:
            $ref: '#/definitions/PagedNodeInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of nodes in the Service Fabric cluster.
      tags:
        - Node
      x-ms-examples:
        Get information about all nodes:
          description: This example shows how to get information about all the nodes in the cluster when the information fits in a single response message without the need for paging through ContinuationToken parameter.
          operationId: GetNodeInfoList
          parameters:
            api-version: '6.3'
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/1'
                    HealthState: Ok
                    Id:
                      Id: ebd986a1134b3643a8117fb41b259bf
                    InstanceId: '131738274982501335'
                    IpAddressOrFQDN: 10.0.0.5
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_1
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T20:31:37.374Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T20:31:39.842Z'
                    NodeUpTimeInSeconds: '15275'
                    Type: testnode
                    UpgradeDomain: '1'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/0'
                    HealthState: Ok
                    Id:
                      Id: 2acb9f55540659b1c95f27cc128ab326
                    InstanceId: '131738240209152398'
                    IpAddressOrFQDN: 10.0.0.4
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_0
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T19:33:39.514Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T19:33:52.944Z'
                    NodeUpTimeInSeconds: '18742'
                    Type: testnode
                    UpgradeDomain: '0'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/4'
                    HealthState: Ok
                    Id:
                      Id: ba9383d728221add7fa996bf67b757fb
                    InstanceId: '131737415865259763'
                    IpAddressOrFQDN: 10.0.0.8
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_4
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-17T20:33:11.877Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-17T20:40:07.378Z'
                    NodeUpTimeInSeconds: '101168'
                    Type: testnode
                    UpgradeDomain: '4'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/3'
                    HealthState: Ok
                    Id:
                      Id: d6a18a0935a3e39aeae2a049eb97255d
                    InstanceId: '131738275300526952'
                    IpAddressOrFQDN: 10.0.0.7
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_3
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T20:31:59.128Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T20:32:18.884Z'
                    NodeUpTimeInSeconds: '15236'
                    Type: testnode
                    UpgradeDomain: '3'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/2'
                    HealthState: Ok
                    Id:
                      Id: f2af91e5e9c8254dedb75b1424a9e3fc
                    InstanceId: '131738233282843485'
                    IpAddressOrFQDN: 10.0.0.6
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_2
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T19:22:02.740Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T19:22:15.272Z'
                    NodeUpTimeInSeconds: '19440'
                    Type: testnode
                    UpgradeDomain: '2'
              headers: {}
        Limit maximum results:
          description: This example shows how to get information about the nodes in the cluster when the number of results returned is limited by the MaxResults parameter.
          operationId: GetNodeInfoList
          parameters:
            MaxResults: 2
            api-version: '6.3'
          responses:
            '200':
              body:
                ContinuationToken: 2acb9f55540659b1c95f27cc128ab326
                Items:
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/1'
                    HealthState: Ok
                    Id:
                      Id: ebd986a1134b3643a8117fb41b259bf
                    InstanceId: '131738274982501335'
                    IpAddressOrFQDN: 10.0.0.5
                    IsSeedNode: true
                    IsStopped: false
                    Name: _testnode_1
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T20:31:37.374Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T20:31:39.842Z'
                    NodeUpTimeInSeconds: '102016'
                    Type: testnode
                    UpgradeDomain: '1'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/0'
                    HealthState: Ok
                    Id:
                      Id: 2acb9f55540659b1c95f27cc128ab326
                    InstanceId: '131738240209152398'
                    IpAddressOrFQDN: 10.0.0.4
                    IsSeedNode: true
                    IsStopped: false
                    Name: _testnode_0
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T19:33:39.514Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T19:33:52.944Z'
                    NodeUpTimeInSeconds: '105483'
                    Type: testnode
                    UpgradeDomain: '0'
              headers: {}
        Page using continuation token:
          description: 'This example shows how to get information about nodes in the cluster which appear on a sequential page, by using the ContinuationToken parameter.'
          operationId: GetNodeInfoList
          parameters:
            ContinuationToken: 2acb9f55540659b1c95f27cc128ab326
            api-version: '6.3'
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/4'
                    HealthState: Ok
                    Id:
                      Id: ba9383d728221add7fa996bf67b757fb
                    InstanceId: '131737415865259763'
                    IpAddressOrFQDN: 10.0.0.8
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_4
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-17T20:33:11.877Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-17T20:40:07.378Z'
                    NodeUpTimeInSeconds: '101547'
                    Type: testnode
                    UpgradeDomain: '4'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/3'
                    HealthState: Ok
                    Id:
                      Id: d6a18a0935a3e39aeae2a049eb97255d
                    InstanceId: '131738275300526952'
                    IpAddressOrFQDN: 10.0.0.7
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_3
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T20:31:59.128Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T20:32:18.884Z'
                    NodeUpTimeInSeconds: '15615'
                    Type: testnode
                    UpgradeDomain: '3'
                  - CodeVersion: 6.3.139.9494
                    ConfigVersion: '5'
                    FaultDomain: 'fd:/2'
                    HealthState: Ok
                    Id:
                      Id: f2af91e5e9c8254dedb75b1424a9e3fc
                    InstanceId: '131738233282843485'
                    IpAddressOrFQDN: 10.0.0.6
                    IsSeedNode: true
                    IsStopped: false
                    Name: _Node_2
                    NodeDeactivationInfo:
                      NodeDeactivationIntent: Invalid
                      NodeDeactivationStatus: None
                      NodeDeactivationTask: []
                      PendingSafetyChecks: []
                    NodeDownAt: '2018-06-18T19:22:02.740Z'
                    NodeDownTimeInSeconds: '0'
                    NodeStatus: Up
                    NodeUpAt: '2018-06-18T19:22:15.272Z'
                    NodeUpTimeInSeconds: '19819'
                    Type: testnode
                    UpgradeDomain: '2'
              headers: {}
  '/Nodes/{nodeName}':
    get:
      description: 'The response includes the name, status, ID, health, uptime, and other details about the node.'
      operationId: GetNodeInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return information about the node with the specified nodeName.
          schema:
            $ref: '#/definitions/NodeInfo'
        '204':
          description: An empty response is returned if the specified nodeName is not found.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about a specific node in the Service Fabric cluster.
      tags:
        - Node
      x-ms-examples:
        Get a specific node by node name:
          description: 'This example shows how to get information about an node using it''s identifier. If the node is found, information about it is returned with 200 status code. If the node is not found, empty content is returned with 204 status code.'
          operationId: GetNodeInfo
          parameters:
            api-version: '6.0'
            nodeName: _Node_1
          responses:
            '200':
              body:
                CodeVersion: 6.3.139.9494
                ConfigVersion: '5'
                FaultDomain: 'fd:/0'
                HealthState: Ok
                Id:
                  Id: 2acb9f55540659b1c95f27cc128ab326
                InstanceId: '131738240209152398'
                IpAddressOrFQDN: 10.0.0.4
                IsSeedNode: true
                IsStopped: false
                Name: _testnode_0
                NodeDeactivationInfo:
                  NodeDeactivationIntent: Invalid
                  NodeDeactivationStatus: None
                  NodeDeactivationTask: []
                  PendingSafetyChecks: []
                NodeDownAt: '2018-06-18T19:33:39.514Z'
                NodeDownTimeInSeconds: '0'
                NodeStatus: Up
                NodeUpAt: '2018-06-18T19:33:52.944Z'
                NodeUpTimeInSeconds: '18688'
                Type: testnode
                UpgradeDomain: '0'
              headers: {}
            '204':
              body: ''
              headers: {}
  '/Nodes/{nodeName}/$/Activate':
    post:
      description: 'Activates a Service Fabric cluster node that is currently deactivated. Once activated, the node will again become a viable target for placing new replicas, and any deactivated replicas remaining on the node will be reactivated.'
      operationId: EnableNode
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Activate a Service Fabric cluster node that is currently deactivated.
      tags:
        - Node
  '/Nodes/{nodeName}/$/Deactivate':
    post:
      description: 'Deactivate a Service Fabric cluster node with the specified deactivation intent. Once the deactivation is in progress, the deactivation intent can be increased, but not decreased (for example, a node that is deactivated with the Pause intent can be deactivated further with Restart, but not the other way around. Nodes may be reactivated using the Activate a node operation any time after they are deactivated. If the deactivation is not complete, this will cancel the deactivation. A node that goes down and comes back up while deactivated will still need to be reactivated before services will be placed on that node.'
      operationId: DisableNode
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/DeactivationIntentDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deactivate a Service Fabric cluster node with the specified deactivation intent.
      tags:
        - Node
  '/Nodes/{nodeName}/$/DeployServicePackage':
    post:
      description: 'This API provides a way to download code packages including the container images on a specific node outside of the normal application deployment and upgrade path. This is useful for the large code packages and container images to be present on the node before the actual application deployment and upgrade, thus significantly reducing the total time required for the deployment or upgrade.'
      operationId: DeployServicePackageToNode
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/DeployServicePackageToNodeRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Downloads all of the code packages associated with specified service manifest on the specified node.
      tags:
        - Service Package
  '/Nodes/{nodeName}/$/GetApplications':
    get:
      description: 'Gets the list of applications deployed on a Service Fabric node. The results do not include information about deployed system applications unless explicitly queried for by ID. Results encompass deployed applications in active, activating, and downloading states. This query requires that the node name corresponds to a node on the cluster. The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.'
      operationId: GetDeployedApplicationInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-1_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/IncludeHealthStateOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed application information.
          schema:
            $ref: '#/definitions/PagedDeployedApplicationInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of applications deployed on a Service Fabric node.
      tags:
        - Application
      x-ms-examples:
        Include health state in the result:
          description: This example shows how to include the health state of each deployed application when getting information about applications deployed on a specific node.
          operationId: GetDeployedApplicationInfoList
          parameters:
            IncludeHealthState: true
            api-version: '6.1'
            nodeName: _Node_0
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - HealthState: Ok
                    Id: samples~CalculatorApp
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\log'
                    Name: 'fabric:/samples/CalculatorApp'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\temp'
                    TypeName: CalculatorApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\work'
                  - HealthState: Ok
                    Id: samples~PQueueApp1
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\log'
                    Name: 'fabric:/samples/PQueueApp1'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\temp'
                    TypeName: PersistentQueueApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\work'
                  - HealthState: Ok
                    Id: samples~VQueueApp1
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\log'
                    Name: 'fabric:/samples/VQueueApp1'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\temp'
                    TypeName: VolatileQueueApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\work'
              headers: {}
        Limit maximum results:
          description: 'This example shows how to specify the number of applications returned by the query when getting information about applications deployed on a specific node. The number of results in a page are limited to maximum of 2 using the MaxResult parameter. Health state is not requested in this example, so the returned health state will be Unknown.'
          operationId: GetDeployedApplicationInfoList
          parameters:
            MaxResults: 2
            api-version: '6.1'
            nodeName: _Node_0
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/samples/PQueueApp1'
                Items:
                  - HealthState: Unknown
                    Id: samples~CalculatorApp
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\log'
                    Name: 'fabric:/samples/CalculatorApp'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\temp'
                    TypeName: CalculatorApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\CalculatorApp_App0\work'
                  - HealthState: Unknown
                    Id: samples~PQueueApp1
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\log'
                    Name: 'fabric:/samples/PQueueApp1'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\temp'
                    TypeName: PersistentQueueApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\PersistentQueueApp_App1\work'
              headers: {}
        Page using continuation token:
          description: This example demonstrates the paging functionality available when getting information about applications deployed on a specific node. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetDeployedApplicationInfoListByName
          parameters:
            ContinuationToken: 'fabric:/samples/PQueueApp1'
            api-version: '6.1'
            nodeName: _Node_0
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - HealthState: Unknown
                    Id: samples~VQueueApp1
                    LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\log'
                    Name: 'fabric:/samples/VQueueApp1'
                    Status: Active
                    TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\temp'
                    TypeName: VolatileQueueApp
                    WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_0\VolatileQueueApp_App2\work'
              headers: {}
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}':
    get:
      description: 'This query returns system application information if the application ID provided is for system application. Results encompass deployed applications in active, activating, and downloading states. This query requires that the node name corresponds to a node on the cluster. The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.'
      operationId: GetDeployedApplicationInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-1_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/IncludeHealthStateOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the information about the deployed application.
          schema:
            $ref: '#/definitions/DeployedApplicationInfo'
        '204':
          description: An empty response is returned if the specified application is not deployed on the node.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about an application deployed on a Service Fabric node.
      tags:
        - Application
      x-ms-examples:
        Get a specific deployed application by application ID and include the health state in the result:
          description: 'This example shows how to get information about an application deployed on a specified node by using an application identifier. If the application is found it''s information is returned with 200 status code. An empty response with status code 204 is returned, if the specified application is not deployed on the node.'
          operationId: GetDeployedApplicationInfoList
          parameters:
            IncludeHealthState: true
            api-version: '6.1'
            applicationId: samples~CalculatorApp
            nodeName: _Node_0
          responses:
            '200':
              body:
                HealthState: Ok
                Id: samples~CalculatorApp
                LogDirectory: 'C:\SfDevCluster\Data\_App\_Node_1\CalculatorApp_App0\log'
                Name: 'fabric:/samples/CalculatorApp'
                Status: Active
                TempDirectory: 'C:\SfDevCluster\Data\_App\_Node_1\CalculatorApp_App0\temp'
                TypeName: CalculatorApp
                WorkDirectory: 'C:\SfDevCluster\Data\_App\_Node_1\CalculatorApp_App0\work'
              headers: {}
            '204':
              body: ''
              headers: {}
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages':
    get:
      description: Gets the list of code packages deployed on a Service Fabric node for the given application.
      operationId: GetDeployedCodePackageInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceManifestNameOptionalQueryParam'
        - $ref: '#/parameters/CodePackageNameOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed code packages information.
          schema:
            $ref: '#/definitions/DeployedCodePackageInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of code packages deployed on a Service Fabric node.
      tags:
        - Code Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages/$/ContainerApi':
    post:
      description: Invoke container API on a container deployed on a Service Fabric node for the given code package.
      operationId: InvokeContainerApi
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceManifestNameRequiredQueryParam'
        - $ref: '#/parameters/CodePackageNameRequiredQueryParam'
        - $ref: '#/parameters/CodePackageInstanceIdRequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/ContainerApiRequiredBodyParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and container API response for a container deployed on a Service Fabric node for the given code package.
          schema:
            $ref: '#/definitions/ContainerApiResponse'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Invoke container API on a container deployed on a Service Fabric node.
      tags:
        - Code Package
      x-ms-examples:
        Get container logs:
          description: This example shows how to call container API with HTTP GET for a code package deployed on a node.
          operationId: InvokeContainerApi
          parameters:
            CodePackageInstanceId: '131668159770315380'
            CodePackageName: NodeService.Code
            ContainerApiRequestBody:
              UriPath: '/containers/{id}/logs?stdout=true&stderr=true'
            ServiceManifestName: NodeServicePackage
            api-version: '6.2'
            applicationId: samples/winnodejs
            nodeName: Node01
          responses:
            '200':
              body:
                ContainerApiResult:
                  Body: |
                    vEthernet (Container NIC ec5c19b2) 172.17.201.44
                  Content-Type: text/plain; charset=utf-8
                  Status: 200
              headers: {}
        Update container:
          description: This example shows how to call container API with HTTP POST for a code package deployed on a node.
          operationId: InvokeContainerApi
          parameters:
            CodePackageInstanceId: '131673596679688285'
            CodePackageName: Code
            ContainerApiRequestBody:
              Body: '{ "CpuShares": 512}'
              HttpVerb: POST
              UriPath: '/containers/{id}/update'
            ServiceManifestName: NodeOnSF
            api-version: '6.2'
            applicationId: samples/nodejs1
            nodeName: N0020
          responses:
            '200':
              body:
                ContainerApiResult:
                  Body: |
                    {"Warnings":null}
                  Content-Type: application/json
                  Status: 200
              headers: {}
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages/$/ContainerLogs':
    get:
      description: Gets the container logs for container deployed on a Service Fabric node for the given code package.
      operationId: GetContainerLogsDeployedOnNode
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceManifestNameRequiredQueryParam'
        - $ref: '#/parameters/CodePackageNameRequiredQueryParam'
        - $ref: '#/parameters/TailOptionalQueryParam'
        - $ref: '#/parameters/PreviousOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the container logs for container deployed on a Service Fabric node for the given code package.
          schema:
            $ref: '#/definitions/ContainerLogs'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the container logs for container deployed on a Service Fabric node.
      tags:
        - Code Package
      x-ms-examples:
        Get container logs for given code package:
          description: This example shows how to get container logs for container deployed on a Service Fabric node for the given code package.
          operationId: GetContainerLogsDeployedOnNode
          parameters:
            CodePackageName: Code
            ServiceManifestName: SimpleHttpServerSvcPkg
            api-version: '6.2'
            applicationId: SimpleHttpServerApp
            nodeName: _Node_0
          responses:
            '200':
              body:
                Content: "HTTP Server started listening on port 8080\r\n"
              headers: {}
        Get container logs of previous dead container for given code package:
          description: This example shows how to get container logs of previous dead container on a Service Fabric node for the given code package.
          operationId: GetContainerLogsDeployedOnNode
          parameters:
            CodePackageName: Code
            Previous: true
            ServiceManifestName: SimpleHttpServerSvcPkg
            api-version: '6.2'
            applicationId: SimpleHttpServerApp
            nodeName: _Node_0
          responses:
            '200':
              body:
                Content: "Exception encountered: System.Net.Http.HttpRequestException: Response status code does not indicate success: 500 (Internal Server Error).\r\n\tat System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n"
              headers: {}
        Get last 10 lines of container logs:
          description: This example shows how to get last 10 lines of container logs for container deployed on a Service Fabric node for the given code package.
          operationId: GetContainerLogsDeployedOnNode
          parameters:
            CodePackageName: Code
            ServiceManifestName: SimpleHttpServerSvcPkg
            Tail: '10'
            api-version: '6.2'
            applicationId: SimpleHttpServerApp
            nodeName: _Node_0
          responses:
            '200':
              body:
                Content: "UTC Time Now: 04/02/2018 22:06:31\r\nUTC Time Now: 04/02/2018 22:06:32\r\nUTC Time Now: 04/02/2018 22:06:33\r\nUTC Time Now: 04/02/2018 22:06:344\r\nUTC Time Now: 04/02/2018 22:06:35\r\nUTC Time Now: 04/02/2018 22:06:36\r\nUTC Time Now: 04/02/2018 22:06:37\r\nUTC Time Now: 04/02/2018 22:06:38\r\nUTC Time Now: 04/02/2018 22:06:39\r\nUTC Time Now: 04/02/2018 22:06:40\r\n"
              headers: {}
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetCodePackages/$/Restart':
    post:
      description: 'Restarts a code package deployed on a Service Fabric node in a cluster. This aborts the code package process, which will restart all the user service replicas hosted in that process.'
      operationId: RestartDeployedCodePackage
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/RestartDeployedCodePackageRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Restarts a code package deployed on a Service Fabric node in a cluster.
      tags:
        - Code Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetHealth':
    get:
      description: Gets the information about health of an application deployed on a Service Fabric node. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state. Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state.
      operationId: GetDeployedApplicationHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/DeployedServicePackagesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the deployed application.
          schema:
            $ref: '#/definitions/DeployedApplicationHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about health of an application deployed on a Service Fabric node.
      tags:
        - Application
    post:
      description: Gets the information about health of an application deployed on a Service Fabric node using the specified policy. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state. Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state. Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the deployed application.
      operationId: GetDeployedApplicationHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/DeployedServicePackagesHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the deployed application.
          schema:
            $ref: '#/definitions/DeployedApplicationHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about health of an application deployed on a Service Fabric node. using the specified policy.
      tags:
        - Application
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetReplicas':
    get:
      description: 'Gets the list containing the information about replicas deployed on a Service Fabric node. The information include partition ID, replica ID, status of the replica, name of the service, name of the service type, and other information. Use PartitionId or ServiceManifestName query parameters to return information about the deployed replicas matching the specified values for those parameters.'
      operationId: GetDeployedServiceReplicaInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/PartitionIdOptionalQueryParam'
        - $ref: '#/parameters/ServiceManifestNameOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed service replica information.
          schema:
            $ref: '#/definitions/DeployedServiceReplicaInfoList'
        '204':
          description: An empty response is returned if the specified applicationId is not found on the specified node. An empty response is also returned if there are no replicas matching the specified filter values for PartitionId or ServiceManifestName query parameters.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of replicas deployed on a Service Fabric node.
      tags:
        - Replica
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages':
    get:
      description: Returns the information about the service packages deployed on a Service Fabric node for the given application.
      operationId: GetDeployedServicePackageInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed service packages information.
          schema:
            $ref: '#/definitions/DeployedServicePackageInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of service packages deployed on a Service Fabric node.
      tags:
        - Service Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}':
    get:
      description: Returns the information about the service packages deployed on a Service Fabric node for the given application. These results are of service packages whose name match exactly the service package name specified as the parameter.
      operationId: GetDeployedServicePackageInfoListByName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServicePackageNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed service packages information.
          schema:
            $ref: '#/definitions/DeployedServicePackageInfoList'
        '204':
          description: An empty response is returned if the specified service package from the application is not deployed on the node.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of service packages deployed on a Service Fabric node matching exactly the specified name.
      tags:
        - Service Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}/$/GetHealth':
    get:
      description: Gets the information about health of a service package for a specific application deployed on a Service Fabric node. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state.
      operationId: GetDeployedServicePackageHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServicePackageNameRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the deployed service package for a specific node and application.
          schema:
            $ref: '#/definitions/DeployedServicePackageHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about health of a service package for a specific application deployed for a Service Fabric node and application.
      tags:
        - Service Package
    post:
      description: Gets the information about health of a service package for a specific application deployed on a Service Fabric node. using the specified policy. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state. Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the deployed service package.
      operationId: GetDeployedServicePackageHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServicePackageNameRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the deployed service package for a specific node and application.
          schema:
            $ref: '#/definitions/DeployedServicePackageHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about health of service package for a specific application deployed on a Service Fabric node using the specified policy.
      tags:
        - Service Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServicePackages/{servicePackageName}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the service package of the application deployed on a Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get deployed service package health and check that the report appears in the HealthEvents section.
      operationId: ReportDeployedServicePackageHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServicePackageNameRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric deployed service package.
      tags:
        - Service Package
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServiceTypes':
    get:
      description: 'Gets the list containing the information about service types from the applications deployed on a node in a Service Fabric cluster. The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package.'
      operationId: GetDeployedServiceTypeInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/DeployedServiceType_ServiceManifestNameOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of information about service types of an application deployed on a node.
          schema:
            $ref: '#/definitions/DeployedServiceTypeInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list containing the information about service types from the applications deployed on a node in a Service Fabric cluster.
      tags:
        - ServiceType
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/GetServiceTypes/{serviceTypeName}':
    get:
      description: 'Gets the list containing the information about a specific service type from the applications deployed on a node in a Service Fabric cluster. The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package. Each entry represents one activation of a service type, differentiated by the activation ID.'
      operationId: GetDeployedServiceTypeInfoByName
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/ServiceTypeNameRequiredPathParam'
        - $ref: '#/parameters/DeployedServiceType_ServiceManifestNameOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about service types of an application deployed on a node.
          schema:
            $ref: '#/definitions/DeployedServiceTypeInfoList'
        '204':
          description: An empty response is returned if the specified service type of the application is not deployed on the node.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about a specified service type of the application deployed on a node in a Service Fabric cluster.
      tags:
        - ServiceType
  '/Nodes/{nodeName}/$/GetApplications/{applicationId}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the application deployed on a Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, get deployed application health and check that the report appears in the HealthEvents section.
      operationId: ReportDeployedApplicationHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationIdRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric application deployed on a Service Fabric node.
      tags:
        - Application
  '/Nodes/{nodeName}/$/GetHealth':
    get:
      description: 'Gets the health of a Service Fabric node. Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state. If the node that you specify by name does not exist in the health store, this returns an error.'
      operationId: GetNodeHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested node health information.
          schema:
            $ref: '#/definitions/NodeHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric node.
      tags:
        - Node
    post:
      description: 'Gets the health of a Service Fabric node. Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state. Use ClusterHealthPolicy in the POST body to override the health policies used to evaluate the health. If the node that you specify by name does not exist in the health store, this returns an error.'
      operationId: GetNodeHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ClusterHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested node health information.
          schema:
            $ref: '#/definitions/NodeHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: 'Gets the health of a Service Fabric node, by using the specified health policy.'
      tags:
        - Node
  '/Nodes/{nodeName}/$/GetLoadInformation':
    get:
      description: Retrieves the load information of a Service Fabric node for all the metrics that have load or capacity defined.
      operationId: GetNodeLoadInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested node load information.
          schema:
            $ref: '#/definitions/NodeLoadInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the load information of a Service Fabric node.
      tags:
        - Node
  '/Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas':
    get:
      description: 'Gets the details of the replica deployed on a Service Fabric node. The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.'
      operationId: GetDeployedServiceReplicaDetailInfoByPartitionId
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed service replica information.
          schema:
            $ref: '#/definitions/DeployedServiceReplicaDetailInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the details of replica deployed on a Service Fabric node.
      tags:
        - Replica
  '/Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/Delete':
    post:
      description: 'This API simulates a Service Fabric replica failure by removing a replica from a Service Fabric cluster. The removal closes the replica, transitions the replica to the role None, and then removes all of the state information of the replica from the cluster. This API tests the replica state removal path, and simulates the report fault permanent path through client APIs. Warning - There are no safety checks performed when this API is used. Incorrect use of this API can lead to data loss for stateful services. In addition, the forceRemove flag impacts all other replicas hosted in the same process.'
      operationId: RemoveReplica
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/ForceRemoveReplicaOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code. A successful operation means that the restart command was received by the replica on the node and it is in the process of restarting.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Removes a service replica running on a node.
      tags:
        - Replica
  '/Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetDetail':
    get:
      description: 'Gets the details of the replica deployed on a Service Fabric node. The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.'
      operationId: GetDeployedServiceReplicaDetailInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the list of deployed service replica information.
          schema:
            $ref: '#/definitions/DeployedServiceReplicaDetailInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the details of replica deployed on a Service Fabric node.
      tags:
        - Replica
  '/Nodes/{nodeName}/$/GetPartitions/{partitionId}/$/GetReplicas/{replicaId}/$/Restart':
    post:
      description: Restarts a service replica of a persisted service running on a node. Warning - There are no safety checks performed when this API is used. Incorrect use of this API can lead to availability loss for stateful services.
      operationId: RestartReplica
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code. A successful operation means that the restart command was received by the replica on the node and it is in the process of restarting.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Restarts a service replica of a persisted service running on a node.
      tags:
        - Replica
  '/Nodes/{nodeName}/$/RemoveNodeState':
    post:
      description: 'This implies that it is not possible to recover the persisted state of that node. This generally happens if a hard disk has been wiped clean, or if a hard disk crashes. The node has to be down for this operation to be successful. This operation lets Service Fabric know that the replicas on that node no longer exist, and that Service Fabric should stop waiting for those replicas to come back up. Do not run this cmdlet if the state on the node has not been removed and the node can come back up with its state intact.'
      operationId: RemoveNodeState
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Notifies Service Fabric that the persisted state on a node has been permanently removed or lost.
      tags:
        - Node
  '/Nodes/{nodeName}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the specified Service Fabric node. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway node, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetNodeHealth and check that the report appears in the HealthEvents section.
      operationId: ReportNodeHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric node.
      tags:
        - Node
  '/Nodes/{nodeName}/$/Restart':
    post:
      description: Restarts a Service Fabric cluster node that is already started.
      operationId: RestartNode
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/NodeNameRequiredPathParam'
        - $ref: '#/parameters/RestartNodeDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code. A successful operation means that the restart command was received by the node and it is in the process of restarting. Check the status of the node by calling GetNode operation.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Restarts a Service Fabric cluster node.
      tags:
        - Node
  '/Partitions/{partitionId}':
    get:
      description: 'Gets the information about the specified partition. The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.'
      operationId: GetPartitionInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the specified partition.
          schema:
            $ref: '#/definitions/ServicePartitionInfo'
        '204':
          description: An empty response is returned if the specified partitionId is not found in the cluster.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about a Service Fabric partition.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/Backup':
    post:
      description: |-
        Creates a backup of the stateful persisted partition's state. In case the partition is already being periodically backed up, then by default the new backup is created at the same backup storage. One can also override the same by specifying the backup storage details as part of the request body. Once the backup is initiated, its progress can be tracked using the GetBackupProgress operation. 
        In case, the operation times out, specify a greater backup timeout value in the query parameter.
      operationId: BackupPartition
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/BackupPartitionDescriptionOptionalBodyParam'
        - $ref: '#/parameters/BackupTimeoutOptionalQueryParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and backup will be initiated. Use GetPartitionBackupProgress operation to get the status of the backup operation.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Triggers backup of the partition's state.
      tags:
        - BackupRestore
      x-ms-examples:
        Backup partition:
          description: 'This example shows how to trigger backup of a partition now, which is already configured for periodic backups. The newly created backup will be saved at the same location where the periodic backups are being saved.'
          operationId: BackupPartition
          parameters:
            BackupPartitionDescription: {}
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
        Backup partition to a specific Azure storage account:
          description: 'This example shows how to trigger backup of a partition now, and save the backup to a specific Azure blob storage account.'
          operationId: BackupPartition
          parameters:
            BackupPartitionDescription:
              BackupStorage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                StorageKind: AzureBlobStore
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
        Backup partition to a specific on-premise file share:
          description: 'This example shows how to trigger backup of a partition now, and save the backup to a specific file share accessible from all cluster nodes.'
          operationId: BackupPartition
          parameters:
            BackupPartitionDescription:
              BackupStorage:
                Path: \\myshare\backupshare
                PrimaryPassword: abcd1234
                PrimaryUserName: mydomain\backupaccount
                StorageKind: FileShare
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Partitions/{partitionId}/$/DisableBackup':
    post:
      description: |-
        Disables periodic backup of partition which was previously enabled. Backup must be explicitly enabled before it can be disabled. 
        In case the backup is enabled for the Service Fabric application or service, which this partition is part of, this partition would continue to be periodically backed up as per the policy mapped at the higher level entity.
      operationId: DisablePartitionBackup
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to disable partition backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Disables periodic backup of Service Fabric partition which was previously enabled.
      tags:
        - BackupRestore
      x-ms-examples:
        Disable partition backup:
          description: This example shows how to disable periodic backup for a stateful partition which was previously enabled.
          operationId: DisablePartitionBackup
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Partitions/{partitionId}/$/EnableBackup':
    post:
      description: |-
        Enables periodic backup of stateful persisted partition. Each partition is backed up as per the specified backup policy description. In case the application or service, which is partition is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup of this partition.
        Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
      operationId: EnablePartitionBackup
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/EnableBackupDescriptionRequiredBodyParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to enable partition backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Enables periodic backup of the stateful persisted partition.
      tags:
        - BackupRestore
      x-ms-examples:
        Enable partition backup:
          description: This example shows how to enable periodic backup for a stateful partition.
          operationId: EnablePartitionBackup
          parameters:
            EnableBackupDescription:
              BackupPolicyName: DailyAzureBackupPolicy
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Partitions/{partitionId}/$/GetBackupConfigurationInfo':
    get:
      description: Gets the Service Fabric Backup configuration information for the specified partition.
      operationId: GetPartitionBackupConfigurationInfo
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and gets the partition's backup configuration information.
          schema:
            $ref: '#/definitions/PartitionBackupConfigurationInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the partition backup configuration information
      tags:
        - BackupRestore
      x-ms-examples:
        Get partition backup configuration information:
          description: This example shows how to get backup configuration for a partition.
          operationId: GetPartitionBackupConfigurationInfo
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                Kind: Partition
                PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                PolicyInheritedFrom: Service
                PolicyName: BackupPolicy2
                ServiceName: 'fabric:/CalcApp/CalcService'
                SuspensionInfo:
                  IsSuspended: true
                  SuspensionInheritedFrom: Partition
              headers: {}
  '/Partitions/{partitionId}/$/GetBackupProgress':
    get:
      description: Returns information about the state of the latest backup along with details or failure reason in case of completion.
      operationId: GetPartitionBackupProgress
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation returns 200 status code and backup progress details.
          schema:
            $ref: '#/definitions/BackupProgressInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets details for the latest backup triggered for this partition.
      tags:
        - BackupRestore
      x-ms-examples:
        Get backup operation progress:
          description: 'This shows an example of possible output when GetPartitionBackupProgress has reached a BackupState of Success.  If the BackupState has a value of BackupInProgress, only the BackupState field will have a value.'
          operationId: GetPartitionBackupProgress
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                BackupState: Success
                EpochOfLastBackupRecord:
                  ConfigurationNumber: '8589934592'
                  DataLossNumber: '131462452931584510'
                FailureError: null
                LsnOfLastBackupRecord: '261'
                TimeStampUtc: '2018-01-01T09:00:55Z'
              headers: {}
  '/Partitions/{partitionId}/$/GetBackups':
    get:
      description: Returns a list of backups available for the specified partition. The server enumerates all the backups available in the backup store configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for the partition.
      operationId: GetPartitionBackupList
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/LatestOptionalQueryParam'
        - $ref: '#/parameters/StartDateTimeFilterOptionalQueryParam'
        - $ref: '#/parameters/EndDateTimeFilterOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and a paged list of backup information.
          schema:
            $ref: '#/definitions/PagedBackupInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of backups available for the specified partition.
      tags:
        - BackupRestore
      x-ms-examples:
        Get application backups within a time range:
          description: This example shows how to get list of partition backups within a time range.
          operationId: GetPartitionBackupList
          parameters:
            EndDateTimeFilter: '2018-01-01T23:59:59Z'
            StartDateTimeFilter: '2018-01-01T00:00:00Z'
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Get latest backup:
          description: This example shows how to get the latest backup for the specified partition.
          operationId: GetPartitionBackupList
          parameters:
            Latest: true
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: be06a49c-be67-4eb1-a602-b983605be862
                    BackupId: be06a49c-be67-4eb1-a602-b983605be862
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-02 08.59.53.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-02T08:59:53Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '639'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Limit maximum results:
          description: This example shows how to get list of partition backups. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetPartitionBackupList
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of partition backups. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetPartitionBackupList
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
            MaxResults: 2
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: be06a49c-be67-4eb1-a602-b983605be862
                    BackupId: be06a49c-be67-4eb1-a602-b983605be862
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-02 08.59.53.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-02T08:59:53Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '639'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
  '/Partitions/{partitionId}/$/GetHealth':
    get:
      description: |-
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.
        If you specify a partition that does not exist in the health store, this request returns an error.
      operationId: GetPartitionHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ReplicasHealthStateFilerOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information about the specified partition.
          schema:
            $ref: '#/definitions/PartitionHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of the specified Service Fabric partition.
      tags:
        - Partition
    post:
      description: |-
        Gets the health information of the specified partition.
        If the application health policy is specified, the health evaluation uses it to get the aggregated health state.
        If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.
        Use EventsHealthStateFilter to filter the collection of health events reported on the partition based on the health state.
        Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition. Use ApplicationHealthPolicy in the POST body to override the health policies used to evaluate the health.
        If you specify a partition that does not exist in the health store, this request returns an error.
      operationId: GetPartitionHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ReplicasHealthStateFilerOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information about the specified partition.
          schema:
            $ref: '#/definitions/PartitionHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: 'Gets the health of the specified Service Fabric partition, by using the specified health policy.'
      tags:
        - Partition
  '/Partitions/{partitionId}/$/GetLoadInformation':
    get:
      description: |-
        Returns information about the load of a specified partition.
        The response includes a list of load reports for a Service Fabric partition.
        Each report includes the load metric name, value, and last reported time in UTC.
      operationId: GetPartitionLoadInformation
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the specified partition's last reported load metrics.
          schema:
            $ref: '#/definitions/PartitionLoadInformation'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the load information of the specified Service Fabric partition.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/GetReplicas':
    get:
      description: 'The GetReplicas endpoint returns information about the replicas of the specified partition. The response includes the ID, role, status, health, node name, uptime, and other details about the replica.'
      operationId: GetReplicaInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the replicas of the specified partition.
          schema:
            $ref: '#/definitions/PagedReplicaInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about replicas of a Service Fabric service partition.
      tags:
        - Replica
  '/Partitions/{partitionId}/$/GetReplicas/{replicaId}':
    get:
      description: 'The response includes the ID, role, status, health, node name, uptime, and other details about the replica.'
      operationId: GetReplicaInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the specified replicas of the specified partition of a Service Fabric service.
          schema:
            $ref: '#/definitions/ReplicaInfo'
        '204':
          description: An empty response is returned if the specified replicaId is not a replica of the specified partition.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the information about a replica of a Service Fabric partition.
      tags:
        - Replica
  '/Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/GetHealth':
    get:
      description: |-
        Gets the health of a Service Fabric replica.
        Use EventsHealthStateFilter to filter the collection of health events reported on the replica based on the health state.
      operationId: GetReplicaHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested replica health.
          schema:
            $ref: '#/definitions/ReplicaHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric stateful service replica or stateless service instance.
      tags:
        - Replica
    post:
      description: |-
        Gets the health of a Service Fabric stateful service replica or stateless service instance.
        Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.
        Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health. This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of the fields are ignored while evaluating the health of the replica.
      operationId: GetReplicaHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the requested replica health information.
          schema:
            $ref: '#/definitions/ReplicaHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of a Service Fabric stateful service replica or stateless service instance using the specified policy.
      tags:
        - Replica
  '/Partitions/{partitionId}/$/GetReplicas/{replicaId}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the specified Service Fabric replica. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Replica, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetReplicaHealth and check that the report appears in the HealthEvents section.
      operationId: ReportReplicaHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaIdRequiredPathParam'
        - $ref: '#/parameters/ReplicaHealthReportServiceKindRequiredQueryParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric replica.
      tags:
        - Replica
  '/Partitions/{partitionId}/$/GetRestoreProgress':
    get:
      description: Returns information about the state of the latest restore operation along with details or failure reason in case of completion.
      operationId: GetPartitionRestoreProgress
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation returns 200 status code and restore progress details.
          schema:
            $ref: '#/definitions/RestoreProgressInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets details for the latest restore operation triggered for this partition.
      tags:
        - BackupRestore
      x-ms-examples:
        Get restore operation progress:
          description: 'This shows an example of possible output when GetPartitionRestoreProgress has reached a RestoreState of Success.  If the RestoreState has a value of RestoreInProgress, only the RestoreState field will have a value.'
          operationId: GetPartitionRestoreProgress
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '200':
              body:
                FailureError: null
                RestoreState: Success
                RestoredEpoch:
                  ConfigurationNumber: '8589934592'
                  DataLossNumber: '131462452931584510'
                RestoredLsn: '261'
                TimeStampUtc: '2018-01-01T09:00:55Z'
              headers: {}
  '/Partitions/{partitionId}/$/GetServiceName':
    get:
      description: Gets name of the service for the specified partition. A 404 error is returned if the partition ID does not exist in the cluster.
      operationId: GetServiceNameInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the name of the service for the specified partition.
          schema:
            $ref: '#/definitions/ServiceNameInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the name of the Service Fabric service for a partition.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/Recover':
    post:
      description: This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss.
      operationId: RecoverPartition
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation request will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Indicates to the Service Fabric cluster that it should attempt to recover a specific partition that is currently stuck in quorum loss.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the specified Service Fabric partition. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Partition, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetPartitionHealth and check that the report appears in the HealthEvents section.
      operationId: ReportPartitionHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric partition.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/ResetLoad':
    post:
      description: Resets the current load of a Service Fabric partition to the default load for the service.
      operationId: ResetPartitionLoad
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation request will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resets the current load of a Service Fabric partition.
      tags:
        - Partition
  '/Partitions/{partitionId}/$/Restore':
    post:
      description: |-
        Restores the state of a of the stateful persisted partition using the specified backup point. In case the partition is already being periodically backed up, then by default the backup point is looked for in the storage specified in backup policy. One can also override the same by specifying the backup storage details as part of the restore partition description in body. Once the restore is initiated, its progress can be tracked using the GetRestoreProgress operation. 
        In case, the operation times out, specify a greater restore timeout value in the query parameter.
      operationId: RestorePartition
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/RestorePartitionDescriptionRequiredBodyParam'
        - $ref: '#/parameters/RestoreTimeoutOptionalQueryParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and restore will be initiated. Use GetPartitionRestoreProgress operation to get the status of the restore operation.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Triggers restore of the state of the partition using the specified restore partition description.
      tags:
        - BackupRestore
      x-ms-examples:
        Trigger partition restore:
          description: This example shows how to trigger restore of a partition now by specifying the backup to be used to restore.
          operationId: RestorePartition
          parameters:
            RestorePartitionDescription:
              BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
              BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
              BackupStorage:
                ConnectionString: DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=<PutYourAccountKeyHere>
                ContainerName: BackupContainer
                StorageKind: AzureBlobStore
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Partitions/{partitionId}/$/ResumeBackup':
    post:
      description: The previously suspended partition resumes taking periodic backup as per the backup policy currently configured for the same.
      operationId: ResumePartitionBackup
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and partition backup will be resumed.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resumes periodic backup of partition which was previously suspended.
      tags:
        - BackupRestore
      x-ms-examples:
        Resume partition backup:
          description: This example shows how to resume periodic backup for a stateful partition which was previously suspended.
          operationId: ResumePartitionBackup
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Partitions/{partitionId}/$/SuspendBackup':
    post:
      description: 'The partition which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.'
      operationId: SuspendPartitionBackup
      parameters:
        - $ref: '#/parameters/PartitionIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and partition backup will be suspended.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Suspends periodic backup for the specified partition.
      tags:
        - BackupRestore
      x-ms-examples:
        Suspend partition backup:
          description: This example shows how to suspend backup for a stateful partition which is configured for periodic backup.
          operationId: SuspendPartitionBackup
          parameters:
            api-version: 6.2-preview
            partitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
          responses:
            '202': {}
  '/Resources/Applications/{applicationResourceName}':
    delete:
      description: Deletes the application identified by the name.
      operationId: DeleteApplicationResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified application was not found.
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes the specified application.
      tags:
        - ApplicationResource
      x-ms-examples:
        DeleteApplicationResource:
          description: 'This example shows how to delete an existing application resource. If the application resource does not exit, an empty response with 204 status code is returned.'
          operationId: DeleteApplicationResource
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
          responses:
            '200': {}
            '202': {}
            '204': {}
    get:
      description: Gets the application with the given name. This includes the information about the application's services and other runtime information.
      operationId: GetApplicationResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationResourceDescription'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the application with the given name.
      tags:
        - ApplicationResource
      x-ms-examples:
        GetApplicationResource:
          description: This example shows how to get an application resource.
          operationId: GetApplicationResource
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
          responses:
            '200':
              body:
                name: helloWorldApp
                properties:
                  description: SeaBreeze HelloWorld Application!
                  healthState: Ok
                  serviceNames:
                    - helloWorldService
                  status: Ready
    put:
      description: 'Creates an application with the specified name and description. If an application with the same name already exists, then its description are updated to the one indicated in this request.'
      operationId: CreateApplicationResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/parameters/ApplicationResourceDescriptionRequiredBodyParam'
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates or updates an application resource.
      tags:
        - ApplicationResource
      x-ms-examples:
        CreateOrUpdateApplicationResource:
          description: This example shows how to create or update an application resource.
          operationId: CreateApplicationResource
          parameters:
            api-version: 6.3-preview
            applicationResourceDescription:
              name: helloWorldApp
              properties:
                description: SeaBreeze HelloWorld Application!
                services:
                  - name: helloWorldService
                    properties:
                      codePackages:
                        - endpoints:
                            - name: helloWorldListener
                              port: 80
                          image: 'seabreeze/sbz-helloworld:1.0-alpine'
                          name: helloWorldCode
                          resources:
                            requests:
                              cpu: 1
                              memoryInGB: 1
                      description: SeaBreeze Hello World Service.
                      osType: linux
                      replicaCount: 1
            applicationResourceName: helloWorldApp
          responses:
            '201': {}
            '202': {}
  '/Resources/Applications/{applicationResourceName}/Services':
    get:
      description: 'The operation returns the service descriptions of all the services in the application resource. '
      operationId: GetServices
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedServiceResourceDescriptionList'
      summary: Gets all the services in the application resource.
      tags:
        - ApplicationResource
      x-ms-examples:
        GetServices:
          description: This example shows how to list all services of a given application resource.
          operationId: GetServices
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - name: helloWorldService
                    properties:
                      codePackages:
                        - endpoints:
                            - name: helloWorldListener
                              port: 80
                          image: 'seabreeze/sbz-helloworld:1.0-alpine'
                          name: helloWorldCode
                          resources:
                            requests:
                              cpu: 1
                              memoryInGB: 1
                      description: SeaBreeze Hello World Service.
                      healthState: Ok
                      networkRefs: []
                      osType: Linux
                      replicaCount: 1
                      status: Unknown
  '/Resources/Applications/{applicationResourceName}/Services/{serviceResourceName}':
    get:
      description: Gets the description of the service resource.
      operationId: GetService
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/parameters/ServiceResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServiceResourceDescription'
      summary: Gets the description of the specified service in an application resource.
      tags:
        - ApplicationResource
      x-ms-examples:
        GetService:
          description: This example shows how to get a specific replica of a given service in an application resource.
          operationId: GetService
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
            serviceResourceName: helloWorldService
          responses:
            '200':
              body:
                name: helloWorldService
                properties:
                  codePackages:
                    - endpoints:
                        - name: helloWorldListener
                          port: 80
                      image: 'seabreeze/sbz-helloworld:1.0-alpine'
                      name: helloWorldCode
                      resources:
                        requests:
                          cpu: 1
                          memoryInGB: 1
                  description: SeaBreeze Hello World Service.
                  healthState: Ok
                  networkRefs: []
                  osType: Linux
                  replicaCount: 2
                  status: Active
  '/Resources/Applications/{applicationResourceName}/Services/{serviceResourceName}/Replicas/{replicaName}':
    get:
      description: Gets the information about the specified replica of a given service of an application. The information includes the runtime properties of the replica instance.
      operationId: GetReplica
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/parameters/ServiceResourceNameRequiredPathParam'
        - $ref: '#/parameters/ReplicaNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServiceResourceReplicaDescription'
      summary: Gets a specific replica of a given service in an application resource.
      tags:
        - ApplicationResource
      x-ms-examples:
        GetReplica:
          description: This example shows how to get the description of the specified service in an application resource.
          operationId: GetReplica
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
            replicaName: '0'
            serviceResourceName: helloWorldService
          responses:
            '200':
              body:
                codePackages:
                  - endpoints:
                      - name: helloWorldListener
                        port: 80
                    image: 'seabreeze/sbz-helloworld:1.0-alpine'
                    instanceView:
                      currentState:
                        exitCode: '0'
                        state: Running
                      previousState:
                        exitCode: '0'
                        state: NotSpecified
                      restartCount: 1
                    name: helloWorldCode
                    resources:
                      requests:
                        cpu: 1
                        memoryInGB: 1
                networkRefs: []
                osType: Linux
                replicaName: 0s
  '/Resources/Applications/{applicationResourceName}/Services/{serviceResourceName}/replicas':
    get:
      description: Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.
      operationId: GetReplicas
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/parameters/ServiceResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PagedServiceResourceReplicaDescriptionList'
      summary: Gets replicas of a given service in an application resource.
      tags:
        - ApplicationResource
      x-ms-examples:
        GetReplicas:
          description: This example shows how to get the information about all replicas of a given service of an application..
          operationId: GetReplica
          parameters:
            api-version: 6.3-preview
            applicationResourceName: helloWorldApp
            serviceResourceName: helloWorldService
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - codePackages:
                      - endpoints:
                          - name: helloWorldListener
                            port: 80
                        image: 'seabreeze/sbz-helloworld:1.0-alpine'
                        instanceView:
                          currentState:
                            exitCode: '0'
                            state: Running
                          previousState:
                            exitCode: '0'
                            state: NotSpecified
                          restartCount: 1
                        name: helloWorldCode
                        resources:
                          requests:
                            cpu: 1
                            memoryInGB: 1
                    networkRefs: []
                    osType: Linux
                    replicaName: '1'
                  - codePackages:
                      - endpoints:
                          - name: helloWorldListener
                            port: 80
                        image: 'seabreeze/sbz-helloworld:1.0-alpine'
                        instanceView:
                          currentState:
                            exitCode: '0'
                            state: Running
                          previousState:
                            exitCode: '0'
                            state: NotSpecified
                          restartCount: 1
                        name: helloWorldCode
                        resources:
                          requests:
                            cpu: 1
                            memoryInGB: 1
                    networkRefs: []
                    osType: Linux
                    replicaName: '0'
  '/Resources/Volumes/{volumeResourceName}':
    delete:
      description: Deletes the volume identified by the name.
      operationId: DeleteVolumeResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/VolumeResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified volume was not found.
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes the volume resource.
      tags:
        - VolumeResource
      x-ms-examples:
        DeleteVolumeResource:
          description: 'This example shows how to delete an existing volume resource. If the volume resource does not exit, an empty response with 204 status code is returned.'
          operationId: DeleteVolumeResource
          parameters:
            api-version: 6.3-preview
            volumeResourceName: meshDemoVolume
          responses:
            '200': {}
            '202': {}
            '204': {}
    get:
      description: Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.
      operationId: GetVolumeResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/VolumeResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VolumeResourceDescription'
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the volume resource.
      tags:
        - VolumeResource
      x-ms-examples:
        GetVolumeResource:
          description: This example shows how to get an volume resource.
          operationId: GetVolumeResource
          parameters:
            api-version: 6.3-preview
            volumeResourceName: meshDemoVolume
          responses:
            '200':
              body:
                name: meshDemoVolume
                properties:
                  azureFileParameters:
                    accountName: sbzdemoaccount
                    shareName: sharel
                  description: SeaBreeze HelloWorld Application!
                  provider: SFAzureFile
    put:
      description: 'Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.'
      operationId: CreateVolumeResource
      parameters:
        - $ref: '#/parameters/ApiVersion_6-3-Preview_RequiredQueryParam'
        - $ref: '#/parameters/VolumeResourceNameRequiredPathParam'
        - $ref: '#/parameters/VolumeResourceDescriptionRequiredBodyParam'
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        default:
          description: Error
          schema:
            $ref: '#/definitions/FabricError'
      summary: Creates or updates a volume resource.
      tags:
        - VolumeResource
      x-ms-examples:
        CreateOrUpdateVolumeResource:
          description: This example shows how to create or update an volume resource.
          operationId: CreateVolumeResource
          parameters:
            api-version: 6.3-preview
            volumeResourceDescription:
              properties:
                azureFileParameters:
                  accountKey: provide-account-key-here
                  accountName: sbzdemoaccount
                  shareName: sharel
                description: File share backed by Azure Files storage.
                provider: SFAzureFile
              volumeResourceName: meshDemoVolume
            volumeResourceName: meshDemoVolume
          responses:
            '201': {}
            '202': {}
  '/Services/$/{serviceId}/$/GetPartitions/$/Recover':
    post:
      description: Indicates to the Service Fabric cluster that it should attempt to recover the specified service that is currently stuck in quorum loss. This operation should only be performed if it is known that the replicas that are down cannot be recovered. Incorrect use of this API can cause potential data loss.
      operationId: RecoverServicePartitions
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation request will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Indicates to the Service Fabric cluster that it should attempt to recover the specified service that is currently stuck in quorum loss.
      tags:
        - Partition
  '/Services/{serviceId}/$/Delete':
    post:
      description: 'A service must be created before it can be deleted. By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service. However, if the service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck. Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the service.'
      operationId: DeleteService
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ForceRemoveOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Deletes an existing Service Fabric service.
      tags:
        - Service
  '/Services/{serviceId}/$/DisableBackup':
    post:
      description: |-
        Disables periodic backup of Service Fabric service which was previously enabled. Backup must be explicitly enabled before it can be disabled.
        In case the backup is enabled for the Service Fabric application, which this service is part of, this service would continue to be periodically backed up as per the policy mapped at the application level.
      operationId: DisableServiceBackup
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to disable service backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Disables periodic backup of Service Fabric service which was previously enabled.
      tags:
        - BackupRestore
      x-ms-examples:
        Disable service backup:
          description: This example shows how to disable periodic backup for a stateful service which was previously enabled.
          operationId: DisableServiceBackup
          parameters:
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '202': {}
  '/Services/{serviceId}/$/EnableBackup':
    post:
      description: |-
        Enables periodic backup of stateful partitions which are part of this Service Fabric service. Each partition is backed up individually as per the specified backup policy description. In case the application, which the service is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup for this service and its partitions (unless explicitly overridden at the partition level).
        Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.
      operationId: EnableServiceBackup
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/EnableBackupDescriptionRequiredBodyParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the request to enable service backup has been accepted.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Enables periodic backup of stateful partitions under this Service Fabric service.
      tags:
        - BackupRestore
      x-ms-examples:
        Enable service backup:
          description: This example shows how to enable periodic backup for a stateful service.
          operationId: EnableServiceBackup
          parameters:
            EnableBackupDescription:
              BackupPolicyName: DailyAzureBackupPolicy
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '202': {}
  '/Services/{serviceId}/$/GetApplicationName':
    get:
      description: Gets the name of the application for the specified service. A 404 FABRIC_E_SERVICE_DOES_NOT_EXIST error is returned if a service with the provided service ID does not exist.
      operationId: GetApplicationNameInfo
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Information about the name of the application for the specified service.
          schema:
            $ref: '#/definitions/ApplicationNameInfo'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the name of the Service Fabric application for a service.
      tags:
        - Service
  '/Services/{serviceId}/$/GetBackupConfigurationInfo':
    get:
      description: Gets the Service Fabric backup configuration information for the service and the partitions under this service.
      operationId: GetServiceBackupConfigurationInfo
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: 'A successful operation will return 200 status code and a paged list of backup configuration information for the service, and the partitions under this service, for which backup configuration has been overridden.'
          schema:
            $ref: '#/definitions/PagedBackupConfigurationInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the Service Fabric service backup configuration information.
      tags:
        - BackupRestore
      x-ms-examples:
        Limit maximum results:
          description: This example shows how to get list of backup configuration for this service and partitions under this service. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetServiceBackupConfigurationInfo
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d'
                Items:
                  - Kind: Service
                    PolicyInheritedFrom: Application
                    PolicyName: BackupPolicy1
                    ServiceName: 'fabric:/CalcApp/CalcService'
                    SuspensionInfo:
                      IsSuspended: false
                      SuspensionInheritedFrom: Invalid
                  - Kind: Partition
                    PartitionId: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                    PolicyInheritedFrom: Partition
                    PolicyName: BackupPolicy2
                    ServiceName: 'fabric:/CalcApp/CalcService'
                    SuspensionInfo:
                      IsSuspended: false
                      SuspensionInheritedFrom: Invalid
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of backup configuration for this service and partitions under this service. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetServiceBackupConfigurationInfo
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d'
            MaxResults: 2
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - Kind: Partition
                    PartitionId: 7216486c-1ee9-4b00-99b2-92b26fcb07f6
                    PolicyInheritedFrom: Application
                    PolicyName: BackupPolicy1
                    ServiceName: 'fabric:/CalcApp/CalcService'
                    SuspensionInfo:
                      IsSuspended: true
                      SuspensionInheritedFrom: Partition
              headers: {}
  '/Services/{serviceId}/$/GetBackups':
    get:
      description: Returns a list of backups available for every partition in this Service Fabric service. The server enumerates all the backups available in the backup store configured in the backup policy. It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.
      operationId: GetServiceBackupList
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/LatestOptionalQueryParam'
        - $ref: '#/parameters/StartDateTimeFilterOptionalQueryParam'
        - $ref: '#/parameters/EndDateTimeFilterOptionalQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and a paged list of backup information.
          schema:
            $ref: '#/definitions/PagedBackupInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of backups available for every partition in this service.
      tags:
        - BackupRestore
      x-ms-examples:
        Get application backups within a time range:
          description: This example shows how to get list of service backups within a time range.
          operationId: GetServiceBackupList
          parameters:
            EndDateTimeFilter: '2018-01-01T23:59:59Z'
            StartDateTimeFilter: '2018-01-01T00:00:00Z'
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 09.01.02.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '161'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Get latest backup:
          description: This example shows how to get the latest backup for each partition within a service.
          operationId: GetServiceBackupList
          parameters:
            Latest: true
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Limit maximum results:
          description: This example shows how to get list of service backups. The number of results in a page are limited to maximum of two using the MaxResult parameter.
          operationId: GetServiceBackupList
          parameters:
            MaxResults: 2
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 09.00.55.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:00:55Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '261'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 3a056ac9-7206-43c3-8424-6f6103003eba
                    BackupId: 7903dc2a-228d-44b0-b7c8-a13a6c9b46bd
                    BackupLocation: CalcApp\CalcService\1daae3f5-7fd6-42e9-b1ba-8c05f873994d\2018-01-01 17.01.02.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '446'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 1daae3f5-7fd6-42e9-b1ba-8c05f873994d
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
        Page using continuation token:
          description: This example shows how to get list of service backups. The number of results in a page are limited to maximum of two using the MaxResult parameter. This example uses the ContinuationToken parameter. The value of this parameter is provided from the previous query; in this case the example shown above. The response contains the remaining results and an empty ContinuationToken. The empty ContinuationToken indicates that additional results are not available.
          operationId: GetServiceBackupList
          parameters:
            ContinuationToken: 'fabric:/CalcApp/CalcService#1daae3f5-7fd6-42e9-b1ba-8c05f873994d#7903dc2a-228d-44b0-b7c8-a13a6c9b46bd'
            MaxResults: 2
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '200':
              body:
                ContinuationToken: ''
                Items:
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 09.01.02.zip
                    BackupType: Full
                    CreationTimeUtc: '2018-01-01T09:01:02Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '161'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
                  - ApplicationName: 'fabric:/CalcApp'
                    BackupChainId: 0ff4fdbe-131c-4dfb-8249-7b4029ddc014
                    BackupId: d55a2d98-258b-4a34-8fe5-2063e81af9dc
                    BackupLocation: CalcApp\CalcService\81645ec7-d260-4c59-9533-8f129bde8e83\2018-01-01 17.00.34.zip
                    BackupType: Incremental
                    CreationTimeUtc: '2018-01-01T17:00:34Z'
                    EpochOfLastBackupRecord:
                      ConfigurationNumber: '8589934592'
                      DataLossNumber: '131462452931584510'
                    FailureError: null
                    LsnOfLastBackupRecord: '246'
                    PartitionInformation:
                      HighKey: '9223372036854775807'
                      Id: 81645ec7-d260-4c59-9533-8f129bde8e83
                      LowKey: '-9223372036854775808'
                      ServicePartitionKind: Int64Range
                    ServiceName: 'fabric:/CalcApp/CalcService'
              headers: {}
  '/Services/{serviceId}/$/GetDescription':
    get:
      description: Gets the description of an existing Service Fabric service. A service must be created before its description can be obtained.
      operationId: GetServiceDescription
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
          schema:
            $ref: '#/definitions/ServiceDescription'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the description of an existing Service Fabric service.
      tags:
        - Service
  '/Services/{serviceId}/$/GetHealth':
    get:
      description: |-
        Gets the health information of the specified service.
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use PartitionsHealthStateFilter to filter the collection of partitions returned.
        If you specify a service that does not exist in the health store, this request returns an error.
      operationId: GetServiceHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/PartitionsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the specified service.
          schema:
            $ref: '#/definitions/ServiceHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the health of the specified Service Fabric service.
      tags:
        - Service
    post:
      description: |-
        Gets the health information of the specified service.
        If the application health policy is specified, the health evaluation uses it to get the aggregated health state.
        If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.
        Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.
        Use PartitionsHealthStateFilter to filter the collection of partitions returned.
        If you specify a service that does not exist in the health store, this request returns an error.
      operationId: GetServiceHealthUsingPolicy
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/EventsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/PartitionsHealthStateFilterOptionalQueryParam'
        - $ref: '#/parameters/ApplicationHealthPolicyOptionalBodyParam'
        - $ref: '#/parameters/ExcludeHealthStatisticsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the health information of the specified service.
          schema:
            $ref: '#/definitions/ServiceHealth'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: 'Gets the health of the specified Service Fabric service, by using the specified health policy.'
      tags:
        - Service
  '/Services/{serviceId}/$/GetPartitions':
    get:
      description: 'The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.'
      operationId: GetPartitionInfoList
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: List of partitions of a Service Fabric service.
          schema:
            $ref: '#/definitions/PagedServicePartitionInfoList'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the list of partitions of a Service Fabric service.
      tags:
        - Partition
  '/Services/{serviceId}/$/ReportHealth':
    post:
      description: |-
        Reports health state of the specified Service Fabric service. The report must contain the information about the source of the health report and property on which it is reported.
        The report is sent to a Service Fabric gateway Service, which forwards to the health store.
        The report may be accepted by the gateway, but rejected by the health store after extra validation.
        For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.
        To see whether the report was applied in the health store, run GetServiceHealth and check that the report appears in the HealthEvents section.
      operationId: ReportServiceHealth
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/HealthInformationRequiredBodyParam'
        - $ref: '#/parameters/ImmediateOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Sends a health report on the Service Fabric service.
      tags:
        - Service
  '/Services/{serviceId}/$/ResolvePartition':
    get:
      description: Resolve a Service Fabric service partition to get the endpoints of the service replicas.
      operationId: ResolveService
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/PartitionKeyTypeOptionalQueryParam'
        - $ref: '#/parameters/PartitionKeyValueOptionalQueryParam'
        - $ref: '#/parameters/PreviousRspVersionOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
          schema:
            $ref: '#/definitions/ResolvedServicePartition'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resolve a Service Fabric partition.
      tags:
        - Service
  '/Services/{serviceId}/$/ResumeBackup':
    post:
      description: The previously suspended Service Fabric service resumes taking periodic backup as per the backup policy currently configured for the same.
      operationId: ResumeServiceBackup
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and service backup will be resumed.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Resumes periodic backup of a Service Fabric service which was previously suspended.
      tags:
        - BackupRestore
      x-ms-examples:
        Resume service backup:
          description: This example shows how to resume periodic backup for a stateful service which was previously suspended.
          operationId: ResumeServiceBackup
          parameters:
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '202': {}
  '/Services/{serviceId}/$/SuspendBackup':
    post:
      description: 'The service which is configured to take periodic backups, is suspended for taking further backups till it is resumed again. This operation applies to the entire service''s hierarchy. It means all the partitions under this service are now suspended for backup.'
      operationId: SuspendServiceBackup
      parameters:
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ApiVersion_6-2-Preview_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '202':
          description: A 202 status code indicates the operation request was accepted and service backup will be suspended.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Suspends periodic backup for the specified Service Fabric service.
      tags:
        - BackupRestore
      x-ms-examples:
        Suspend service backup:
          description: This example shows how to suspend backup for a stateful service which is configured for periodic backup.
          operationId: SuspendServiceBackup
          parameters:
            api-version: 6.2-preview
            serviceId: CalcApp/CalcService
          responses:
            '202': {}
  '/Services/{serviceId}/$/Update':
    post:
      description: 'This API allows updating properties of a running Service Fabric service. The set of properties that can be updated are a subset of the properties that were specified at the time of creating the service. The current set of properties can be obtained using `GetServiceDescription` API. Note that updating the properties of a running service is different than upgrading your application using `StartApplicationUpgrade` API. The upgrade is a long running background operation that involves moving the application from one version to another, one upgrade domain at a time, whereas update applies the new properties immediately to the service.'
      operationId: UpdateService
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ServiceIdRequiredPathParam'
        - $ref: '#/parameters/ServiceUpdateDescriptionRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 202 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Updates a Service Fabric service using the specified update description.
      tags:
        - Service
      x-ms-examples:
        Stateful service:
          description: This example shows how to update placement and load balancing related settings of a stateful Service Fabric service.
          operationId: UpdateService
          parameters:
            ServiceUpdateDescription:
              Flags: '40'
              PlacementConstraints: Color==Green
              ServiceKind: Stateful
              StandByReplicaKeepDurationSeconds: '1000'
            api-version: '6.0'
            serviceId: test~test2
          responses:
            '200': {}
        Stateless service:
          description: This example shows how to update placement and load balancing related settings of a stateless Service Fabric service.
          operationId: UpdateService
          parameters:
            ServiceUpdateDescription:
              DefaultMoveCost: High
              Flags: '1568'
              PlacementConstraints: Color==Red
              ScalingPolicies:
                - ScalingMechanism:
                    Kind: PartitionInstanceCount
                    MaxInstanceCount: 6
                    MinInstanceCount: 4
                    ScaleIncrement: 2
                  ScalingTrigger:
                    Kind: AveragePartitionLoad
                    LowerLoadThreshold: 0.5
                    MetricName: 'servicefabric:/_CpuCores'
                    ScaleIntervalInSeconds: 900
                    UpperLoadThreshold: 0.8
              ServiceKind: Stateless
            api-version: '6.0'
            serviceId: test~test1
          responses:
            '200': {}
  /Tools/Chaos:
    get:
      description: 'Get the status of Chaos indicating whether or not Chaos is running, the Chaos parameters used for running Chaos and the status of the Chaos Schedule.'
      operationId: GetChaos
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the status of Chaos.
          schema:
            $ref: '#/definitions/Chaos'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the status of Chaos.
      tags:
        - Chaos
  /Tools/Chaos/$/Start:
    post:
      description: |-
        If Chaos is not already running in the cluster, it starts Chaos with the passed in Chaos parameters.
        If Chaos is already running when this call is made, the call fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING.
        Refer to the article [Induce controlled Chaos in Service Fabric clusters](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) for more details.
      operationId: StartChaos
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/ChaosParametersRequiredBodyParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Starts Chaos in the cluster.
      tags:
        - Chaos
  /Tools/Chaos/$/Stop:
    post:
      description: |-
        Stops Chaos from executing new faults. In-flight faults will continue to execute until they are complete. The current Chaos Schedule is put into a stopped state.
        Once a schedule is stopped, it will stay in the stopped state and not be used to Chaos Schedule new runs of Chaos. A new Chaos Schedule must be set in order to resume scheduling.
      operationId: StopChaos
      parameters:
        - $ref: '#/parameters/ApiVersion_6-0_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Stops Chaos if it is running in the cluster and put the Chaos Schedule in a stopped state.
      tags:
        - Chaos
  /Tools/Chaos/Events:
    get:
      description: |-
        To get the next segment of the Chaos events, you can specify the ContinuationToken. To get the start of a new segment of Chaos events, you can specify the time range
        through StartTimeUtc and EndTimeUtc. You cannot specify both the ContinuationToken and the time range in the same call.
        When there are more than 100 Chaos events, the Chaos events are returned in multiple segments where a segment contains no more than 100 Chaos events and to get the next segment you make a call to this API with the continuation token.
      operationId: GetChaosEvents
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/ContinuationTokenOptionalQueryParam'
        - $ref: '#/parameters/StartTimeUtcOptionalQueryParam'
        - $ref: '#/parameters/EndTimeUtcOptionalQueryParam'
        - $ref: '#/parameters/MaxResultsOptionalQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: Next segment of Chaos events.
          schema:
            $ref: '#/definitions/ChaosEventsSegment'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Gets the next segment of the Chaos events based on the continuation token or the time range.
      tags:
        - Chaos
      x-ms-examples:
        Get Chaos events given a time range:
          description: This example shows how to get Chaos events in a single response message without the need for paging through ContinuationToken parameter.
          operationId: GetChaosEvents
          parameters:
            EndTimeUtc: '3155378975999999999'
            StartTimeUtc: '0'
            api-version: '6.2'
          responses:
            '200':
              body:
                ContinuationToken: ''
                History:
                  - ChaosEvent:
                      ChaosParameters:
                        ClusterHealthPolicy:
                          ApplicationTypeHealthPolicyMap:
                            - Key: myapp
                              Value: 3
                          ConsiderWarningAsError: true
                          MaxPercentUnhealthyApplications: 10
                          MaxPercentUnhealthyNodes: 0
                        Context:
                          Map:
                            k1: v1
                            k2: v2
                            k3: v5
                        EnableMoveReplicaFaults: true
                        MaxClusterStabilizationTimeoutInSeconds: 30
                        MaxConcurrentFaults: 3
                        TimeToRunInSeconds: '3600'
                        WaitTimeBetweenFaultsInSeconds: 1
                        WaitTimeBetweenIterationsInSeconds: 10
                      Kind: Started
                      TimeStampUtc: '2017-04-14T04:27:19.049Z'
                  - ChaosEvent:
                      Faults:
                        - 'ActionType: RestartReplica, ServiceUri: fabric:/TestApp1/PersistServ_6R_1, PartitionId: 6a91b09a-bd76-45da-afaa-ed0fd9bfe7d2, ReplicaId: 131366172775684622'
                        - 'ActionType: CodePackageRestart, NodeName: N0050, ApplicationName: fabric:/TestApp1, ServiceManifestName: SP1, ServiceManifestName: , CodePackageName: CP1.'
                        - 'ActionType: RestartReplica, ServiceUri: fabric:/TestApp1/PersistServ_6R_3, PartitionId: baa3a51e-5c42-435e-89d3-6e97b2164661, ReplicaId: 131366172988968762'
                      Kind: ExecutingFaults
                      TimeStampUtc: '2017-04-14T04:27:20.667Z'
              headers: {}
  /Tools/Chaos/Schedule:
    get:
      description: Gets the version of the Chaos Schedule in use and the Chaos Schedule that defines when and how to run Chaos.
      operationId: GetChaosSchedule
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
      responses:
        '200':
          description: A successful operation will return 200 status code and the schedule description including a Chaos Schedule used by Chaos and the version the Chaos Schedule is on.
          schema:
            $ref: '#/definitions/ChaosScheduleDescription'
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Get the Chaos Schedule defining when and how to run Chaos.
      tags:
        - Chaos
    post:
      description: |-
        Chaos will automatically schedule runs based on the Chaos Schedule.
        The Chaos Schedule will be updated if the provided version matches the version on the server.
        When updating the Chaos Schedule, the version on the server is incremented by 1.
        The version on the server will wrap back to 0 after reaching a large number.
        If Chaos is running when this call is made, the call will fail.
      operationId: PostChaosSchedule
      parameters:
        - $ref: '#/parameters/ApiVersion_6-2_RequiredQueryParam'
        - $ref: '#/parameters/TimeoutOptionalQueryParam'
        - $ref: '#/parameters/ChaosScheduleRequiredBodyParam'
      responses:
        '200':
          description: A successful operation will return 200 status code.
        default:
          description: The detailed error response.
          schema:
            $ref: '#/definitions/FabricError'
      summary: Set the schedule used by Chaos.
      tags:
        - Chaos
definitions:
  AadMetadata:
    description: Azure Active Directory metadata used for secured connection to cluster.
    properties:
      authority:
        description: The AAD authority url.
        type: string
      client:
        description: The AAD client application Id.
        type: string
      cluster:
        description: The AAD cluster application Id.
        type: string
      login:
        description: The AAD login url.
        type: string
      redirect:
        description: The client application redirect address.
        type: string
      tenant:
        description: The AAD tenant Id.
        type: string
    type: object
  AadMetadataObject:
    description: Azure Active Directory metadata object used for secured connection to cluster.
    properties:
      metadata:
        $ref: '#/definitions/AadMetadata'
        description: Azure Active Directory metadata used for secured connection to cluster.
      type:
        description: The client authentication method.
        type: string
    type: object
  AddRemoveIncrementalNamedPartitionScalingMechanism:
    allOf:
      - $ref: '#/definitions/ScalingMechanismDescription'
      - type: object
    description: 'Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format ''0'',''1''''N-1'''
    properties:
      MaxPartitionCount:
        description: Maximum number of named partitions of the service.
        type: integer
      MinPartitionCount:
        description: Minimum number of named partitions of the service.
        type: integer
      ScaleIncrement:
        description: The number of instances to add or remove during a scaling operation.
        type: integer
    required:
      - MinPartitionCount
      - MaxPartitionCount
      - ScaleIncrement
    x-ms-discriminator-value: AddRemoveIncrementalNamedPartition
  AnalysisEventMetadata:
    description: Metadata about an Analysis Event.
    properties:
      Delay:
        description: The analysis delay.
        format: duration
        type: string
      Duration:
        description: The duration of analysis.
        format: duration
        type: string
    type: object
  ApplicationBackupConfigurationInfo:
    allOf:
      - $ref: '#/definitions/BackupConfigurationInfo'
      - description: Application backup configuration information.
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
        type: object
    description: 'Backup configuration information for a specific Service Fabric application specifying what backup policy is being applied and suspend description, if any.'
    x-ms-discriminator-value: Application
  ApplicationBackupEntity:
    allOf:
      - $ref: '#/definitions/BackupEntity'
      - description: ApplicationBackupEntity
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
        type: object
    description: Identifies the Service Fabric application which is being backed up.
    type: object
    x-ms-discriminator-value: Application
  ApplicationCapacityDescription:
    description: |-
      Describes capacity information for services of this application. This description can be used for describing the following.
      - Reserving the capacity for the services on the nodes
      - Limiting the total number of nodes that services of this application can run on
      - Limiting the custom capacity metrics to limit the total consumption of this metric by the services of this application
    properties:
      ApplicationMetrics:
        $ref: '#/definitions/ApplicationMetricDescriptionList'
        description: List of application capacity metric description.
      MaximumNodes:
        default: 0
        description: 'The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.'
        format: int64
        minimum: 0
        type: integer
      MinimumNodes:
        description: 'The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.'
        format: int64
        minimum: 0
        type: integer
    type: object
  ApplicationCreatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationDefinitionKind:
            description: Application definition kind.
            type: string
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Application type version.
            type: string
        required:
          - ApplicationTypeName
          - ApplicationTypeVersion
          - ApplicationDefinitionKind
        type: object
    description: Application Created event.
    x-ms-discriminator-value: ApplicationCreated
  ApplicationDefinitionKind:
    description: The mechanism used to define a Service Fabric application.
    enum:
      - Invalid
      - ServiceFabricApplicationDescription
      - Compose
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApplicationDefinitionKind
      values:
        - description: Indicates the application definition kind is invalid. All Service Fabric enumerations have the invalid type. The value is 65535.
          value: Invalid
        - description: Indicates the application is defined by a Service Fabric application description. The value is 0.
          value: ServiceFabricApplicationDescription
        - description: Indicates the application is defined by compose file(s). The value is 1.
          value: Compose
  ApplicationDeletedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Application type version.
            type: string
        required:
          - ApplicationTypeName
          - ApplicationTypeVersion
        type: object
    description: Application Deleted event.
    x-ms-discriminator-value: ApplicationDeleted
  ApplicationDescription:
    description: Describes a Service Fabric application.
    properties:
      ApplicationCapacity:
        $ref: '#/definitions/ApplicationCapacityDescription'
        description: |-
          Describes capacity information for services of this application. This description can be used for describing the following.
          - Reserving the capacity for the services on the nodes
          - Limiting the total number of nodes that services of this application can run on
          - Limiting the custom capacity metrics to limit the total consumption of this metric by the services of this application
      Name:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      ParameterList:
        $ref: '#/definitions/ApplicationParameterList'
        description: List of application parameters with overridden values from their default values specified in the application manifest.
      TypeName:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      TypeVersion:
        $ref: '#/definitions/ApplicationTypeVersion'
        description: The version of the application type as defined in the application manifest.
    required:
      - Name
      - TypeName
      - TypeVersion
    type: object
  ApplicationEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: ApplicationEvent
        properties:
          ApplicationId:
            $ref: '#/definitions/ApplicationId'
            description: |-
              The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
              Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
              the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
        required:
          - ApplicationId
        type: object
    description: Represents the base for all Application Events.
    x-ms-discriminator-value: ApplicationEvent
  ApplicationEventList:
    description: A list of ApplicationEvent objects.
    items:
      $ref: '#/definitions/ApplicationEvent'
    type: array
  ApplicationHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: ApplicationHealth
        properties:
          DeployedApplicationHealthStates:
            description: Deployed application health states as found in the health store.
            items:
              $ref: '#/definitions/DeployedApplicationHealthState'
            type: array
          Name:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          ServiceHealthStates:
            description: Service health states as found in the health store.
            items:
              $ref: '#/definitions/ServiceHealthState'
            type: array
        type: object
    description: Represents the health of the application. Contains the application aggregated health state and the service and deployed application health states.
  ApplicationHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ApplicationHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: 'List of unhealthy evaluations that led to the current aggregated health state of the application. The types of the unhealthy evaluations can be DeployedApplicationsHealthEvaluation, ServicesHealthEvaluation or EventHealthEvaluation.'
        type: object
    description: 'Represents health evaluation for an application, containing information about the data and the algorithm used by the health store to evaluate health.'
    x-ms-discriminator-value: Application
  ApplicationHealthPolicies:
    description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
    properties:
      ApplicationHealthPolicyMap:
        $ref: '#/definitions/ApplicationHealthPolicyMap'
        description: The wrapper that contains the map with application health policies used to evaluate specific applications in the cluster.
    type: object
  ApplicationHealthPolicy:
    description: Defines a health policy used to evaluate the health of an application or one of its children entities.
    properties:
      ConsiderWarningAsError:
        default: false
        description: Indicates whether warnings are treated with the same severity as errors.
        type: boolean
      DefaultServiceTypeHealthPolicy:
        $ref: '#/definitions/ServiceTypeHealthPolicy'
        description: The health policy used by default to evaluate the health of a service type.
      MaxPercentUnhealthyDeployedApplications:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
          The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
          This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
          The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
        type: integer
      ServiceTypeHealthPolicyMap:
        $ref: '#/definitions/ServiceTypeHealthPolicyMap'
        description: The map with service type health policy per service type name. The map is empty by default.
    type: object
  ApplicationHealthPolicyMap:
    description: |-
      Defines a map that contains specific application health policies for different applications.
      Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
      If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
      The map is empty by default.
    items:
      $ref: '#/definitions/ApplicationHealthPolicyMapItem'
    type: array
  ApplicationHealthPolicyMapItem:
    description: Defines an item in ApplicationHealthPolicyMap.
    properties:
      Key:
        $ref: '#/definitions/ApplicationName'
        description: The key of the application health policy map item. This is the name of the application.
      Value:
        $ref: '#/definitions/ApplicationHealthPolicy'
        description: The value of the application health policy map item. This is the ApplicationHealthPolicy for this application.
    required:
      - Key
      - Value
    type: object
  ApplicationHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationInstanceId:
            description: Id of Application instance.
            format: int64
            type: integer
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ApplicationInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Application Health Report Created event.
    x-ms-discriminator-value: ApplicationHealthReportCreated
  ApplicationHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationInstanceId:
            description: Id of Application instance.
            format: int64
            type: integer
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ApplicationInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Application Health Report Expired event.
    x-ms-discriminator-value: ApplicationHealthReportExpired
  ApplicationHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: ApplicationHealthState
        properties:
          Name:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
        type: object
    description: 'Represents the health state of an application, which contains the application identifier and the aggregated health state.'
  ApplicationHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: ApplicationHealthStateChunk
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          ApplicationTypeName:
            $ref: '#/definitions/ApplicationTypeName'
            description: The application type name as defined in the application manifest.
          DeployedApplicationHealthStateChunks:
            $ref: '#/definitions/DeployedApplicationHealthStateChunkList'
            description: The list of deployed application health state chunks in the cluster that respect the filters in the cluster health chunk query description.
          ServiceHealthStateChunks:
            $ref: '#/definitions/ServiceHealthStateChunkList'
            description: The list of service health state chunks in the cluster that respect the filters in the cluster health chunk query description.
        type: object
    description: |-
      Represents the health state chunk of a application.
      The application health state chunk contains the application name, its aggregated health state and any children services and deployed applications that respect the filters in cluster health chunk query description.
  ApplicationHealthStateChunkList:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunkList'
      - description: ApplicationHealthStateChunkList
        properties:
          Items:
            description: The list of application health state chunks that respect the input filters in the chunk query.
            items:
              $ref: '#/definitions/ApplicationHealthStateChunk'
            type: array
        type: object
    description: The list of application health state chunks in the cluster that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    type: object
  ApplicationHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a application should be included in the cluster health chunk.
      One filter can match zero, one or multiple applications, depending on its properties.
    properties:
      ApplicationNameFilter:
        description: |-
          The name of the application that matches the filter, as a fabric uri. The filter is applied only to the specified application, if it exists.
          If the application doesn't exist, no application is returned in the cluster health chunk based on this filter.
          If the application exists, it is included in the cluster health chunk if it respects the other filter properties.
          If not specified, all applications are matched against the other filter members, like health state filter.
        type: string
      ApplicationTypeNameFilter:
        description: |-
          The name of the application type that matches the filter.
          If specified, the filter is applied only to applications of the selected application type, if any exists.
          If no applications of the specified application type exists, no application is returned in the cluster health chunk based on this filter.
          Each application of the specified application type is included in the cluster health chunk if it respects the other filter properties.
          If not specified, all applications are matched against the other filter members, like health state filter.
        type: string
      DeployedApplicationFilters:
        description: |-
          Defines a list of filters that specify which deployed applications to be included in the returned cluster health chunk as children of the application. The deployed applications are returned only if the parent application matches a filter.
          If the list is empty, no deployed applications are returned. All the deployed applications are used to evaluate the parent application aggregated health state, regardless of the input filters.
          The application filter may specify multiple deployed application filters.
          For example, it can specify a filter to return all deployed applications with health state Error and another filter to always include a deployed application on a specified node.
        items:
          $ref: '#/definitions/DeployedApplicationHealthStateFilter'
        type: array
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the applications. It allows selecting applications if they match the desired health states.
          The possible values are integer value of one of the following health states. Only applications that match the filter are returned. All applications are used to evaluate the cluster aggregated health state.
          If not specified, default value is None, unless the application name or the application type name are specified. If the filter has default value and application name is specified, the matching application is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches applications with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      ServiceFilters:
        description: |-
          Defines a list of filters that specify which services to be included in the returned cluster health chunk as children of the application. The services are returned only if the parent application matches a filter.
          If the list is empty, no services are returned. All the services are used to evaluate the parent application aggregated health state, regardless of the input filters.
          The application filter may specify multiple service filters.
          For example, it can specify a filter to return all services with health state Error and another filter to always include a service identified by its service name.
        items:
          $ref: '#/definitions/ServiceHealthStateFilter'
        type: array
    type: object
  ApplicationId:
    description: |-
      The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
      Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
      the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
    type: string
  ApplicationInfo:
    description: Information about a Service Fabric application.
    properties:
      ApplicationDefinitionKind:
        $ref: '#/definitions/ApplicationDefinitionKind'
        description: The mechanism used to define a Service Fabric application.
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Id:
        $ref: '#/definitions/ApplicationId'
        description: |-
          The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
          the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
      Name:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      Parameters:
        $ref: '#/definitions/ApplicationParameterList'
        description: List of application parameters with overridden values from their default values specified in the application manifest.
      Status:
        $ref: '#/definitions/ApplicationStatus'
        description: The status of the application.
      TypeName:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      TypeVersion:
        $ref: '#/definitions/ApplicationTypeVersion'
        description: The version of the application type as defined in the application manifest.
    type: object
  ApplicationLoadInfo:
    description: Load Information about a Service Fabric application.
    properties:
      ApplicationLoadMetricInformation:
        $ref: '#/definitions/ApplicationMetricDescriptionList'
        description: List of application capacity metric description.
      Id:
        $ref: '#/definitions/ApplicationId'
        description: |-
          The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
          the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
      MaximumNodes:
        description: |-
          The maximum number of nodes where this application can be instantiated.
          It is the number of nodes this application is allowed to span.
          For applications that do not have application capacity defined this value will be zero.
        format: int64
        type: integer
      MinimumNodes:
        description: |-
          The minimum number of nodes for this application.
          It is the number of nodes where Service Fabric will reserve Capacity in the cluster which equals to ReservedLoad * MinimumNodes for this Application instance.
          For applications that do not have application capacity defined this value will be zero.
        format: int64
        type: integer
      NodeCount:
        description: |-
          The number of nodes on which this application is instantiated.
          For applications that do not have application capacity defined this value will be zero.
        format: int64
        type: integer
    type: object
  ApplicationMetricDescription:
    description: Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
    properties:
      MaximumCapacity:
        description: |-
          The maximum node capacity for Service Fabric application.
          This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.
          If set to zero, capacity for this metric is unlimited on each node.
          When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
          When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
        format: int64
        type: integer
      Name:
        description: The name of the metric.
        type: string
      ReservationCapacity:
        description: |-
          The node reservation capacity for Service Fabric application.
          This is the amount of load which is reserved on nodes which have instances of this application.
          If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.
          If set to zero, no capacity is reserved for this metric.
          When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
        format: int64
        type: integer
      TotalApplicationCapacity:
        description: |-
          The total metric capacity for Service Fabric application.
          This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.
          When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
        format: int64
        type: integer
    type: object
  ApplicationMetricDescriptionList:
    description: List of application capacity metric description.
    items:
      $ref: '#/definitions/ApplicationMetricDescription'
    type: array
  ApplicationName:
    description: 'The name of the application, including the ''fabric:'' URI scheme.'
    type: string
  ApplicationNameInfo:
    description: Information about the application name.
    properties:
      Id:
        $ref: '#/definitions/ApplicationId'
        description: |-
          The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
          the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
      Name:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
    type: object
  ApplicationPackageCleanupPolicy:
    description: The kind of action that needs to be taken for cleaning up the application package after successful provision.
    enum:
      - Invalid
      - Default
      - Automatic
      - Manual
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApplicationPackageCleanupPolicy
      values:
        - description: Indicates that the application package cleanup policy is invalid. This value is default. The value is zero.
          value: Invalid
        - description: Indicates that the cleanup policy of application packages is based on the cluster setting "CleanupApplicationPackageOnProvisionSuccess." The value is 1.
          value: Default
        - description: 'Indicates that the service fabric runtime determines when to do the application package cleanup. By default, cleanup is done on successful provision. The value is 2.'
          value: Automatic
        - description: Indicates that the user has to explicitly clean up the application package. The value is 3.
          value: Manual
  ApplicationParameter:
    description: Describes an application parameter override to be applied when creating or upgrading an application.
    properties:
      Key:
        description: The name of the parameter.
        type: string
      Value:
        description: The value of the parameter.
        type: string
    required:
      - Key
      - Value
    type: object
  ApplicationParameterList:
    description: List of application parameters with overridden values from their default values specified in the application manifest.
    items:
      $ref: '#/definitions/ApplicationParameter'
    type: array
  ApplicationProperties:
    description: This type describes properties of an application resource.
    properties:
      debugParams:
        description: Internal use.
        type: string
      description:
        description: User readable description of the application.
        type: string
      diagnostics:
        $ref: '#/definitions/DiagnosticsDescription'
        description: Describes the diagnostics definition and usage for an application resource.
      healthState:
        $ref: '#/definitions/HealthState'
        description: Describes the health state of an application resource.
        readOnly: true
      serviceNames:
        description: Names of the services in the application.
        items:
          type: string
        readOnly: true
        type: array
      services:
        description: describes the services in the application.
        items:
          $ref: '#/definitions/ServiceResourceDescription'
        type: array
      status:
        description: Status of the application resource.
        enum:
          - Invalid
          - Ready
          - Upgrading
          - Creating
          - Deleting
          - Failed
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ApplicationResourceStatus
      statusDetails:
        description: Gives additional information about the current status of the application deployment.
        readOnly: true
        type: string
      unhealthyEvaluation:
        description: 'When the application''s health state is not ''Ok'', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.'
        readOnly: true
        type: string
    type: object
  ApplicationResourceDescription:
    description: Describes a service fabric application resource.
    properties:
      name:
        $ref: '#/definitions/ApplicationResourceName'
        description: Application resource name.
      properties:
        $ref: '#/definitions/ApplicationProperties'
        description: This type describes properties of an application resource.
        x-ms-client-flatten: true
    required:
      - name
      - properties
    type: object
  ApplicationResourceName:
    description: Application resource name.
    type: string
  ApplicationStatus:
    description: The status of the application.
    enum:
      - Invalid
      - Ready
      - Upgrading
      - Creating
      - Deleting
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApplicationStatus
      values:
        - description: Indicates the application status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates the application status is ready. The value is 1.
          value: Ready
        - description: Indicates the application status is upgrading. The value is 2.
          value: Upgrading
        - description: Indicates the application status is creating. The value is 3.
          value: Creating
        - description: Indicates the application status is deleting. The value is 4.
          value: Deleting
        - description: Indicates the creation or deletion of application was terminated due to persistent failures. Another create/delete request can be accepted to resume a failed application. The value is 5.
          value: Failed
  ApplicationTypeApplicationsHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ApplicationTypeApplicationsHealthEvaluation
        properties:
          ApplicationTypeName:
            $ref: '#/definitions/ApplicationTypeName'
            description: The application type name as defined in the application manifest.
          MaxPercentUnhealthyApplications:
            description: 'Maximum allowed percentage of unhealthy applications for the application type, specified as an entry in ApplicationTypeHealthPolicyMap.'
            type: integer
          TotalCount:
            description: Total number of applications of the application type found in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy ApplicationHealthEvaluation of this application type that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for applications of a particular application type. The application type applications evaluation can be returned when cluster health evaluation returns unhealthy aggregated health state, either Error or Warning. It contains health evaluations for each unhealthy application of the included application type that impacted current aggregated health state.'
    x-ms-discriminator-value: ApplicationTypeApplications
  ApplicationTypeDefinitionKind:
    description: The mechanism used to define a Service Fabric application type.
    enum:
      - Invalid
      - ServiceFabricApplicationPackage
      - Compose
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApplicationTypeDefinitionKind
      values:
        - description: Indicates the application type definition kind is invalid. All Service Fabric enumerations have the invalid type. The value is 0.
          value: Invalid
        - description: Indicates the application type is defined and created by a Service Fabric application package provided by the user. The value is 1.
          value: ServiceFabricApplicationPackage
        - description: Indicates the application type is defined and created implicitly as part of a compose deployment. The value is 2.
          value: Compose
  ApplicationTypeHealthPolicyMap:
    description: |-
      Defines a map with max percentage unhealthy applications for specific application types.
      Each entry specifies as key the application type name and as value an integer that represents the MaxPercentUnhealthyApplications percentage used to evaluate the applications of the specified application type.

      The application type health policy map can be used during cluster health evaluation to describe special application types.
      The application types included in the map are evaluated against the percentage specified in the map, and not with the global MaxPercentUnhealthyApplications defined in the cluster health policy.
      The applications of application types specified in the map are not counted against the global pool of applications.
      For example, if some applications of a type are critical, the cluster administrator can add an entry to the map for that application type
      and assign it a value of 0% (that is, do not tolerate any failures).
      All other applications can be evaluated with MaxPercentUnhealthyApplications set to 20% to tolerate some failures out of the thousands of application instances.
      The application type health policy map is used only if the cluster manifest enables application type health evaluation using the configuration entry for HealthManager/EnableApplicationTypeHealthEvaluation.
    items:
      $ref: '#/definitions/ApplicationTypeHealthPolicyMapItem'
    type: array
  ApplicationTypeHealthPolicyMapItem:
    description: Defines an item in ApplicationTypeHealthPolicyMap.
    properties:
      Key:
        description: The key of the application type health policy map item. This is the name of the application type.
        type: string
      Value:
        description: |-
          The value of the application type health policy map item.
          The max percent unhealthy applications allowed for the application type. Must be between zero and 100.
        type: integer
    required:
      - Key
      - Value
    type: object
  ApplicationTypeImageStorePath:
    description: Path description for the application package in the image store specified during the prior copy operation.
    properties:
      ApplicationTypeBuildPath:
        description: The relative image store path to the application package.
        type: string
    required:
      - ApplicationTypeBuildPath
  ApplicationTypeInfo:
    description: Information about an application type.
    properties:
      ApplicationTypeDefinitionKind:
        $ref: '#/definitions/ApplicationTypeDefinitionKind'
        description: The mechanism used to define a Service Fabric application type.
      DefaultParameterList:
        $ref: '#/definitions/ApplicationTypeParameterList'
        description: List of application type parameters that can be overridden when creating or updating the application.
      Name:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      Status:
        $ref: '#/definitions/ApplicationTypeStatus'
        description: The status of the application type.
      StatusDetails:
        description: Additional detailed information about the status of the application type.
        type: string
      Version:
        $ref: '#/definitions/ApplicationTypeVersion'
        description: The version of the application type as defined in the application manifest.
    type: object
  ApplicationTypeManifest:
    description: Contains the manifest describing an application type registered in a Service Fabric cluster.
    properties:
      Manifest:
        description: The XML manifest as a string.
        type: string
    type: object
  ApplicationTypeName:
    description: The application type name as defined in the application manifest.
    type: string
  ApplicationTypeParameterList:
    description: List of application type parameters that can be overridden when creating or updating the application.
    items:
      $ref: '#/definitions/ApplicationParameter'
    type: array
  ApplicationTypeStatus:
    description: The status of the application type.
    enum:
      - Invalid
      - Provisioning
      - Available
      - Unprovisioning
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: ApplicationTypeStatus
      values:
        - description: Indicates the application type status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that the application type is being provisioned in the cluster. The value is 1.
          value: Provisioning
        - description: Indicates that the application type is fully provisioned and is available for use. An application of this type and version can be created. The value is 2.
          value: Available
        - description: Indicates that the application type is in process of being unprovisioned from the cluster. The value is 3.
          value: Unprovisioning
        - description: Indicates that the application type provisioning failed and it is unavailable for use. The failure details can be obtained from the application type information query. The failed application type information remains in the cluster until it is unprovisioned or reprovisioned successfully. The value is 4.
          value: Failed
  ApplicationTypeVersion:
    description: The version of the application type as defined in the application manifest.
    type: string
  ApplicationUnhealthyEvaluations:
    description: List of health evaluations that resulted in the current aggregated health state.
    items:
      $ref: '#/definitions/HealthEvaluationWrapper'
    type: array
  ApplicationUpgradeCompleteEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Application type version.
            type: string
          OverallUpgradeElapsedTimeInMs:
            description: Overall upgrade time in milli-seconds.
            format: double
            type: number
        required:
          - ApplicationTypeName
          - ApplicationTypeVersion
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Application Upgrade Complete event.
    x-ms-discriminator-value: ApplicationUpgradeComplete
  ApplicationUpgradeDescription:
    description: 'Describes the parameters for an application upgrade. Note that upgrade description replaces the existing application description. This means that if the parameters are not specified, the existing parameters on the applications will be overwritten with the empty parameters list. This would result in the application using the default value of the parameters from the application manifest. If you do not want to change any existing parameter values, please get the application parameters first using the GetApplicationInfo query and then supply those values as Parameters in this ApplicationUpgradeDescription.'
    properties:
      ApplicationHealthPolicy:
        $ref: '#/definitions/ApplicationHealthPolicy'
        description: Defines a health policy used to evaluate the health of an application or one of its children entities.
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      MonitoringPolicy:
        $ref: '#/definitions/MonitoringPolicyDescription'
        description: Describes the parameters for monitoring an upgrade in Monitored mode.
      Name:
        $ref: '#/definitions/TargetApplicationName'
        description: 'The name of the target application, including the ''fabric:'' URI scheme.'
      Parameters:
        $ref: '#/definitions/ApplicationParameterList'
        description: List of application parameters with overridden values from their default values specified in the application manifest.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      TargetApplicationTypeVersion:
        $ref: '#/definitions/TargetApplicationTypeVersion'
        description: The target application type version (found in the application manifest) for the application upgrade.
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
      UpgradeReplicaSetCheckTimeoutInSeconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    required:
      - Name
      - TargetApplicationTypeVersion
      - UpgradeKind
      - Parameters
    type: object
  ApplicationUpgradeDomainCompleteEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Target Application type version.
            type: string
          CurrentApplicationTypeVersion:
            description: Current Application type version.
            type: string
          UpgradeDomainElapsedTimeInMs:
            description: Upgrade time of domain in milli-seconds.
            format: double
            type: number
          UpgradeDomains:
            description: Upgrade domains.
            type: string
          UpgradeState:
            description: State of upgrade.
            type: string
        required:
          - ApplicationTypeName
          - CurrentApplicationTypeVersion
          - ApplicationTypeVersion
          - UpgradeState
          - UpgradeDomains
          - UpgradeDomainElapsedTimeInMs
        type: object
    description: Application Upgrade Domain Complete event.
    x-ms-discriminator-value: ApplicationUpgradeDomainComplete
  ApplicationUpgradeProgressInfo:
    description: Describes the parameters for an application upgrade.
    properties:
      CurrentUpgradeDomainProgress:
        $ref: '#/definitions/CurrentUpgradeDomainProgressInfo'
        description: Information about the current in-progress upgrade domain.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: The cause of an upgrade failure that resulted in FailureAction being executed.
      FailureTimestampUtc:
        description: The estimated UTC datetime when the upgrade failed and FailureAction was executed.
        type: string
      Name:
        $ref: '#/definitions/TargetApplicationName'
        description: 'The name of the target application, including the ''fabric:'' URI scheme.'
      NextUpgradeDomain:
        $ref: '#/definitions/NextUpgradeDomain'
        description: The name of the next upgrade domain to be processed.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      StartTimestampUtc:
        description: The estimated UTC datetime when the upgrade started.
        type: string
      TargetApplicationTypeVersion:
        $ref: '#/definitions/TargetApplicationTypeVersion'
        description: The target application type version (found in the application manifest) for the application upgrade.
      TypeName:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      UnhealthyEvaluations:
        $ref: '#/definitions/UnhealthyEvaluations'
        description: List of health evaluations that resulted in the current aggregated health state.
      UpgradeDescription:
        $ref: '#/definitions/ApplicationUpgradeDescription'
        description: 'Describes the parameters for an application upgrade. Note that upgrade description replaces the existing application description. This means that if the parameters are not specified, the existing parameters on the applications will be overwritten with the empty parameters list. This would result in the application using the default value of the parameters from the application manifest. If you do not want to change any existing parameter values, please get the application parameters first using the GetApplicationInfo query and then supply those values as Parameters in this ApplicationUpgradeDescription.'
      UpgradeDomainDurationInMilliseconds:
        description: The estimated total amount of time spent processing the current upgrade domain.
        type: string
      UpgradeDomainProgressAtFailure:
        $ref: '#/definitions/FailureUpgradeDomainProgressInfo'
        description: Information about the upgrade domain progress at the time of upgrade failure.
      UpgradeDomains:
        $ref: '#/definitions/UpgradeDomainInfoList'
        description: List of upgrade domains and their statuses.
      UpgradeDurationInMilliseconds:
        description: The estimated total amount of time spent processing the overall upgrade.
        type: string
      UpgradeState:
        $ref: '#/definitions/UpgradeState'
        description: The state of the upgrade domain.
      UpgradeStatusDetails:
        description: Additional detailed information about the status of the pending upgrade.
        type: string
    type: object
  ApplicationUpgradeRollbackCompleteEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Application type version.
            type: string
          FailureReason:
            description: Describes reason of failure.
            type: string
          OverallUpgradeElapsedTimeInMs:
            description: Overall upgrade time in milli-seconds.
            format: double
            type: number
        required:
          - ApplicationTypeName
          - ApplicationTypeVersion
          - FailureReason
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Application Upgrade Rollback Complete event.
    x-ms-discriminator-value: ApplicationUpgradeRollbackComplete
  ApplicationUpgradeRollbackStartEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Target Application type version.
            type: string
          CurrentApplicationTypeVersion:
            description: Current Application type version.
            type: string
          FailureReason:
            description: Describes reason of failure.
            type: string
          OverallUpgradeElapsedTimeInMs:
            description: Overall upgrade time in milli-seconds.
            format: double
            type: number
        required:
          - ApplicationTypeName
          - CurrentApplicationTypeVersion
          - ApplicationTypeVersion
          - FailureReason
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Application Upgrade Rollback Start event.
    x-ms-discriminator-value: ApplicationUpgradeRollbackStart
  ApplicationUpgradeStartEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationTypeName:
            description: Application type name.
            type: string
          ApplicationTypeVersion:
            description: Target Application type version.
            type: string
          CurrentApplicationTypeVersion:
            description: Current Application type version.
            type: string
          FailureAction:
            description: Action if failed.
            type: string
          RollingUpgradeMode:
            description: Mode of upgrade.
            type: string
          UpgradeType:
            description: Type of upgrade.
            type: string
        required:
          - ApplicationTypeName
          - CurrentApplicationTypeVersion
          - ApplicationTypeVersion
          - UpgradeType
          - RollingUpgradeMode
          - FailureAction
        type: object
    description: Application Upgrade Start event.
    x-ms-discriminator-value: ApplicationUpgradeStart
  ApplicationUpgradeUpdateDescription:
    description: Describes the parameters for updating an ongoing application upgrade.
    properties:
      ApplicationHealthPolicy:
        $ref: '#/definitions/ApplicationHealthPolicy'
        description: Defines a health policy used to evaluate the health of an application or one of its children entities.
      Name:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      UpdateDescription:
        $ref: '#/definitions/RollingUpgradeUpdateDescription'
        description: Describes the parameters for updating a rolling upgrade of application or cluster.
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
    required:
      - Name
      - UpgradeKind
    type: object
  ApplicationsHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ApplicationsHealthEvaluation
        properties:
          MaxPercentUnhealthyApplications:
            description: Maximum allowed percentage of unhealthy applications from the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of applications from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy ApplicationHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for applications, containing health evaluations for each unhealthy application that impacted current aggregated health state.'
    x-ms-discriminator-value: Applications
  AveragePartitionLoadScalingTrigger:
    allOf:
      - $ref: '#/definitions/ScalingTriggerDescription'
      - type: object
    description: Represents a scaling trigger related to an average load of a metric/resource of a partition.
    properties:
      LowerLoadThreshold:
        description: The lower limit of the load below which a scale in operation should be performed.
        format: double
        type: string
      MetricName:
        description: The name of the metric for which usage should be tracked.
        type: string
      ScaleIntervalInSeconds:
        description: The period in seconds on which a decision is made whether to scale or not.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      UpperLoadThreshold:
        description: The upper limit of the load beyond which a scale out operation should be performed.
        format: double
        type: string
    required:
      - MetricName
      - LowerLoadThreshold
      - UpperLoadThreshold
      - ScaleIntervalInSeconds
    x-ms-discriminator-value: AveragePartitionLoad
  AverageServiceLoadScalingTrigger:
    allOf:
      - $ref: '#/definitions/ScalingTriggerDescription'
      - type: object
    description: Represents a scaling policy related to an average load of a metric/resource of a service.
    properties:
      LowerLoadThreshold:
        description: The lower limit of the load below which a scale in operation should be performed.
        format: double
        type: string
      MetricName:
        description: The name of the metric for which usage should be tracked.
        type: string
      ScaleIntervalInSeconds:
        description: The period in seconds on which a decision is made whether to scale or not.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      UpperLoadThreshold:
        description: The upper limit of the load beyond which a scale out operation should be performed.
        format: double
        type: string
    required:
      - MetricName
      - LowerLoadThreshold
      - UpperLoadThreshold
      - ScaleIntervalInSeconds
    x-ms-discriminator-value: AverageServiceLoad
  AzureBlobBackupStorageDescription:
    allOf:
      - $ref: '#/definitions/BackupStorageDescription'
      - type: object
      - description: AzureBlobBackupStorageDescription
    description: Describes the parameters for Azure blob store used for storing and enumerating backups.
    properties:
      ConnectionString:
        description: The connection string to connect to the Azure blob store.
        type: string
      ContainerName:
        description: The name of the container in the blob store to store and enumerate backups from.
        type: string
    required:
      - ConnectionString
      - ContainerName
    type: object
    x-ms-discriminator-value: AzureBlobStore
  BackupConfigurationInfo:
    description: Describes the backup configuration information.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/BackupEntityKind'
        description: 'The entity type of a Service Fabric entity such as Application, Service or a Partition where periodic backups can be enabled.'
      PolicyInheritedFrom:
        $ref: '#/definitions/BackupPolicyScope'
        description: Specifies the scope at which the backup policy is applied.
      PolicyName:
        description: The name of the backup policy which is applicable to this Service Fabric application or service or partition.
        type: string
      SuspensionInfo:
        $ref: '#/definitions/BackupSuspensionInfo'
        description: Describes the backup suspension details.
    required:
      - Kind
    type: object
  BackupEntity:
    description: Describes the Service Fabric entity that is configured for backup.
    discriminator: EntityKind
    properties:
      EntityKind:
        $ref: '#/definitions/BackupEntityKind'
        description: 'The entity type of a Service Fabric entity such as Application, Service or a Partition where periodic backups can be enabled.'
    required:
      - EntityKind
    type: object
  BackupEntityKind:
    description: 'The entity type of a Service Fabric entity such as Application, Service or a Partition where periodic backups can be enabled.'
    enum:
      - Invalid
      - Partition
      - Service
      - Application
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupEntityKind
      values:
        - description: Indicates an invalid entity kind. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates the entity is a Service Fabric partition.
          value: Partition
        - description: Indicates the entity is a Service Fabric service.
          value: Service
        - description: Indicates the entity is a Service Fabric application.
          value: Application
  BackupEpoch:
    description: 'An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.'
    properties:
      ConfigurationNumber:
        description: The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.
        type: string
      DataLossNumber:
        description: 'The current data loss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.'
        type: string
    type: object
  BackupInfo:
    description: Represents a backup point which can be used to trigger a restore.
    properties:
      ApplicationName:
        description: Name of the Service Fabric application this partition backup belongs to.
        type: string
      BackupChainId:
        description: Unique backup chain ID. All backups part of the same chain has the same backup chain id. A backup chain is comprised of 1 full backup and multiple incremental backups.
        format: uuid
        type: string
      BackupId:
        description: Unique backup ID .
        format: uuid
        type: string
      BackupLocation:
        description: 'Location of the backup, relative to the backup store.'
        type: string
      BackupType:
        $ref: '#/definitions/BackupType'
        description: 'Describes the type of backup, whether its full or incremental.'
      CreationTimeUtc:
        description: The date time when this backup was taken.
        format: date-time
        type: string
      EpochOfLastBackupRecord:
        $ref: '#/definitions/BackupEpoch'
        description: Epoch of the last record in this backup.
      FailureError:
        $ref: '#/definitions/FabricErrorError'
        description: Denotes the failure encountered in getting backup point information.
      LsnOfLastBackupRecord:
        description: LSN of the last record in this backup.
        type: string
      PartitionInformation:
        $ref: '#/definitions/PartitionInformation'
        description: Information about the partition to which this backup belongs to
      ServiceName:
        description: Name of the Service Fabric service this partition backup belongs to.
        type: string
    type: object
  BackupPartitionDescription:
    description: Describes the parameters for triggering partition's backup.
    properties:
      BackupStorage:
        $ref: '#/definitions/BackupStorageDescription'
        description: Specifies the details of the backup storage where to save the backup.
    type: object
  BackupPolicyDescription:
    description: Describes a backup policy for configuring periodic backup.
    properties:
      AutoRestoreOnDataLoss:
        description: Specifies whether to trigger restore automatically using the latest available backup in case the partition experiences a data loss event.
        type: boolean
      MaxIncrementalBackups:
        description: |-
          Defines the maximum number of incremental backups to be taken between two full backups. This is just the upper limit. A full backup may be taken before specified number of incremental backups are completed in one of the following conditions
          - The replica has never taken a full backup since it has become primary,
          - Some of the log records since the last backup has been truncated, or
          - Replica passed the MaxAccumulatedBackupLogSizeInMB limit.
        maximum: 255
        minimum: 0
        type: integer
      Name:
        description: The unique name identifying this backup policy.
        type: string
      Schedule:
        $ref: '#/definitions/BackupScheduleDescription'
        description: Describes the backup schedule parameters.
      Storage:
        $ref: '#/definitions/BackupStorageDescription'
        description: Describes the details of backup storage where to store the periodic backups.
    required:
      - Name
      - AutoRestoreOnDataLoss
      - Schedule
      - MaxIncrementalBackups
      - Storage
    type: object
  BackupPolicyScope:
    description: Specifies the scope at which the backup policy is applied.
    enum:
      - Invalid
      - Partition
      - Service
      - Application
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupPolicyScope
      values:
        - description: Indicates an invalid backup policy scope type. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates the backup policy is applied at partition level. Hence overriding any policy which may have applied at partition's service or application level.
          value: Partition
        - description: Indicates the backup policy is applied at service level. All partitions of the service inherit this policy unless explicitly overridden at partition level.
          value: Service
        - description: Indicates the backup policy is applied at application level. All services and partitions of the application inherit this policy unless explicitly overridden at service or partition level.
          value: Application
  BackupProgressInfo:
    description: Describes the progress of a partition's backup.
    properties:
      BackupId:
        description: Unique ID of the newly created backup.
        format: uuid
        type: string
      BackupLocation:
        description: 'Location, relative to the backup store, of the newly created backup.'
        type: string
      BackupState:
        $ref: '#/definitions/BackupState'
        description: Represents the current state of the partition backup operation.
      EpochOfLastBackupRecord:
        $ref: '#/definitions/BackupEpoch'
        description: Specifies the epoch of the last record included in backup.
      FailureError:
        $ref: '#/definitions/FabricErrorError'
        description: Denotes the failure encountered in performing backup operation.
      LsnOfLastBackupRecord:
        description: The LSN of last record included in backup.
        type: string
      TimeStampUtc:
        description: TimeStamp in UTC when operation succeeded or failed.
        format: date-time
        type: string
    type: object
  BackupScheduleDescription:
    description: Describes the backup schedule parameters.
    discriminator: ScheduleKind
    properties:
      ScheduleKind:
        $ref: '#/definitions/BackupScheduleKind'
        description: 'The kind of backup schedule, time based or frequency based.'
    required:
      - ScheduleKind
    type: object
  BackupScheduleFrequencyType:
    description: Describes the frequency with which to run the time based backup schedule.
    enum:
      - Invalid
      - Daily
      - Weekly
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupScheduleFrequencyType
      values:
        - description: Indicates an invalid backup schedule frequency type. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates that the time based backup schedule is repeated at a daily frequency.
          value: Daily
        - description: Indicates that the time based backup schedule is repeated at a weekly frequency.
          value: Weekly
  BackupScheduleKind:
    description: 'The kind of backup schedule, time based or frequency based.'
    enum:
      - Invalid
      - TimeBased
      - FrequencyBased
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupScheduleKind
      values:
        - description: Indicates an invalid backup schedule kind. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates a time-based backup schedule.
          value: TimeBased
        - description: Indicates a frequency-based backup schedule.
          value: FrequencyBased
  BackupState:
    description: Represents the current state of the partition backup operation.
    enum:
      - Invalid
      - Accepted
      - BackupInProgress
      - Success
      - Failure
      - Timeout
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupState
      values:
        - description: Indicates an invalid backup state. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Operation has been validated and accepted. Backup is yet to be triggered.
          value: Accepted
        - description: Backup operation has been triggered and is under process.
          value: BackupInProgress
        - description: Operation completed with success.
          value: Success
        - description: Operation completed with failure.
          value: Failure
        - description: Operation timed out.
          value: Timeout
  BackupStorageDescription:
    description: Describes the parameters for the backup storage.
    discriminator: StorageKind
    properties:
      FriendlyName:
        description: Friendly name for this backup storage.
        type: string
      StorageKind:
        $ref: '#/definitions/BackupStorageKind'
        description: 'The kind of backup storage, where backups are saved.'
    required:
      - StorageKind
    type: object
  BackupStorageKind:
    description: 'The kind of backup storage, where backups are saved.'
    enum:
      - Invalid
      - FileShare
      - AzureBlobStore
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupStorageKind
      values:
        - description: Indicates an invalid backup storage kind. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates file/ SMB share to be used as backup storage.
          value: FileShare
        - description: Indicates Azure blob store to be used as backup storage.
          value: AzureBlobStore
  BackupSuspensionInfo:
    description: Describes the backup suspension details.
    properties:
      IsSuspended:
        description: Indicates whether periodic backup is suspended at this level or not.
        type: boolean
      SuspensionInheritedFrom:
        $ref: '#/definitions/BackupSuspensionScope'
        description: Specifies the scope at which the backup suspension was applied.
    type: object
  BackupSuspensionScope:
    description: Specifies the scope at which the backup suspension was applied.
    enum:
      - Invalid
      - Partition
      - Service
      - Application
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupSuspensionScope
      values:
        - description: Indicates an invalid backup suspension scope type also indicating entity is not suspended. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates the backup suspension is applied at partition level.
          value: Partition
        - description: Indicates the backup suspension is applied at service level. All partitions of the service are hence suspended for backup.
          value: Service
        - description: Indicates the backup suspension is applied at application level. All services and partitions of the application are hence suspended for backup.
          value: Application
  BackupType:
    description: 'Describes the type of backup, whether its full or incremental.'
    enum:
      - Invalid
      - Full
      - Incremental
    type: string
    x-ms-enum:
      modelAsString: true
      name: BackupType
      values:
        - description: Indicates an invalid backup type. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates a full backup.
          value: Full
        - description: Indicates an incremental backup. A backup chain is comprised of a full backup followed by 0 or more incremental backups.
          value: Incremental
  BinaryPropertyValue:
    allOf:
      - $ref: '#/definitions/PropertyValue'
      - description: BinaryPropertyValue
        type: object
    description: Describes a Service Fabric property value of type Binary.
    properties:
      Data:
        $ref: '#/definitions/ByteArray'
        description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    required:
      - Data
    x-ms-discriminator-value: Binary
  ByteArray:
    description: Array of bytes to be sent as an integer array. Each element of array is a number between 0 and 255.
    items:
      type: integer
    type: array
  Chaos:
    description: Contains a description of Chaos.
    properties:
      ChaosParameters:
        $ref: '#/definitions/ChaosParameters'
        description: 'If Chaos is running, these are the parameters Chaos is running with.'
      ScheduleStatus:
        $ref: '#/definitions/ChaosScheduleStatus'
        description: Current status of the schedule.
      Status:
        $ref: '#/definitions/ChaosStatus'
        description: Current status of the Chaos run.
    type: object
  ChaosContext:
    description: |-
      Describes a map, which is a collection of (string, string) type key-value pairs. The map can be used to record information about
      the Chaos run. There cannot be more than 100 such pairs and each string (key or value) can be at most 4095 characters long.
      This map is set by the starter of the Chaos run to optionally store the context about the specific run.
    properties:
      Map:
        $ref: '#/definitions/ChaosContextMap'
        description: Describes a map that contains a collection of ChaosContextMapItem's.
    type: object
  ChaosContextMap:
    additionalProperties:
      type: string
    description: Describes a map that contains a collection of ChaosContextMapItem's.
    type: object
  ChaosEvent:
    description: Represents an event generated during a Chaos run.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/ChaosEventKind'
        description: The kind of Chaos event.
      TimeStampUtc:
        description: The UTC timestamp when this Chaos event was generated.
        format: date-time
        type: string
    required:
      - Kind
      - TimeStampUtc
    type: object
  ChaosEventHistory:
    description: An list of Chaos events that were generated during the time range passed into the GetChaosReport API call.
    items:
      $ref: '#/definitions/ChaosEventWrapper'
    type: array
  ChaosEventKind:
    description: The kind of Chaos event.
    enum:
      - Invalid
      - Started
      - ExecutingFaults
      - Waiting
      - ValidationFailed
      - TestError
      - Stopped
    type: string
    x-ms-enum:
      modelAsString: true
      name: ChaosEventKind
      values:
        - description: Indicates an invalid Chaos event kind. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Indicates a Chaos event that gets generated when Chaos is started.
          value: Started
        - description: Indicates a Chaos event that gets generated when Chaos has decided on the faults for an iteration. This Chaos event contains the details of the faults as a list of strings.
          value: ExecutingFaults
        - description: 'Indicates a Chaos event that gets generated when Chaos is waiting for the cluster to become ready for faulting, for example, Chaos may be waiting for the on-going upgrade to finish.'
          value: Waiting
        - description: Indicates a Chaos event that gets generated when the cluster entities do not become stable and healthy within ChaosParameters.MaxClusterStabilizationTimeoutInSeconds.
          value: ValidationFailed
        - description: 'Indicates a Chaos event that gets generated when an unexpected event has occurred in the Chaos engine, for example, due to the cluster snapshot being inconsistent, while faulting a faultable entity Chaos found that the entity was already faulted.'
          value: TestError
        - description: Indicates a Chaos event that gets generated when Chaos stops because either the user issued a stop or the time to run was up.
          value: Stopped
  ChaosEventWrapper:
    description: Wrapper object for Chaos event.
    properties:
      ChaosEvent:
        $ref: '#/definitions/ChaosEvent'
        description: Represents an event generated during a Chaos run.
    type: object
  ChaosEventsSegment:
    description: Contains the list of Chaos events and the continuation token to get the next segment.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      History:
        $ref: '#/definitions/ChaosEventHistory'
        description: List of Chaos events that meet the user-supplied criteria.
    type: object
  ChaosMovePrimaryFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          ForcedMove:
            description: Indicates a forced move.
            type: boolean
          NodeTo:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          ServiceName:
            description: Service name.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - ServiceName
          - NodeTo
          - ForcedMove
        type: object
    description: Chaos Move Primary Fault Scheduled event.
    x-ms-discriminator-value: ChaosMovePrimaryFaultScheduled
  ChaosMoveSecondaryFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - properties:
          DestinationNode:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          ForcedMove:
            description: Indicates a forced move.
            type: boolean
          ServiceName:
            description: Service name.
            type: string
          SourceNode:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
        required:
          - FaultGroupId
          - FaultId
          - ServiceName
          - SourceNode
          - DestinationNode
          - ForcedMove
        type: object
    description: Chaos Move Secondary Fault Scheduled event.
    x-ms-discriminator-value: ChaosMoveSecondaryFaultScheduled
  ChaosParameters:
    description: Defines all the parameters to configure a Chaos run.
    properties:
      ChaosTargetFilter:
        $ref: '#/definitions/ChaosTargetFilter'
        description: |-
          List of cluster entities to target for Chaos faults.
          This filter can be used to target Chaos faults only to certain node types or only to certain application instances. If ChaosTargetFilter is not used, Chaos faults all cluster entities.
          If ChaosTargetFilter is used, Chaos faults only the entities that meet the ChaosTargetFilter specification.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Passed-in cluster health policy is used to validate health of the cluster in between Chaos iterations. If the cluster health is in error or if an unexpected exception happens during fault execution--to provide the cluster with some time to recuperate--Chaos will wait for 30 minutes before the next health-check.
      Context:
        $ref: '#/definitions/ChaosContext'
        description: |-
          Describes a map, which is a collection of (string, string) type key-value pairs. The map can be used to record information about
          the Chaos run. There cannot be more than 100 such pairs and each string (key or value) can be at most 4095 characters long.
          This map is set by the starter of the Chaos run to optionally store the context about the specific run.
      EnableMoveReplicaFaults:
        default: true
        description: Enables or disables the move primary and move secondary faults.
        type: boolean
      MaxClusterStabilizationTimeoutInSeconds:
        default: 60
        description: |-
          The maximum amount of time to wait for all cluster entities to become stable and healthy. Chaos executes in iterations and at the start of each iteration it validates the health of cluster entities.
          During validation if a cluster entity is not stable and healthy within MaxClusterStabilizationTimeoutInSeconds, Chaos generates a validation failed event.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      MaxConcurrentFaults:
        default: 1
        description: |-
          MaxConcurrentFaults is the maximum number of concurrent faults induced per iteration.
          Chaos executes in iterations and two consecutive iterations are separated by a validation phase.
          The higher the concurrency, the more aggressive the injection of faults, leading to inducing more complex series of states to uncover bugs.
          The recommendation is to start with a value of 2 or 3 and to exercise caution while moving up.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      TimeToRunInSeconds:
        default: '4294967295'
        description: 'Total time (in seconds) for which Chaos will run before automatically stopping. The maximum allowed value is 4,294,967,295 (System.UInt32.MaxValue).'
        type: string
      WaitTimeBetweenFaultsInSeconds:
        default: 20
        description: |-
          Wait time (in seconds) between consecutive faults within a single iteration.
          The larger the value, the lower the overlapping between faults and the simpler the sequence of state transitions that the cluster goes through.
          The recommendation is to start with a value between 1 and 5 and exercise caution while moving up.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      WaitTimeBetweenIterationsInSeconds:
        default: 30
        description: |-
          Time-separation (in seconds) between two consecutive iterations of Chaos.
          The larger the value, the lower the fault injection rate.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
    type: object
  ChaosParametersDictionaryItem:
    description: Defines an item in ChaosParametersDictionary of the Chaos Schedule.
    properties:
      Key:
        description: The key identifying the Chaos Parameter in the dictionary. This key is referenced by Chaos Schedule Jobs.
        type: string
      Value:
        $ref: '#/definitions/ChaosParameters'
        description: Defines all the parameters to configure a Chaos run.
    required:
      - Key
      - Value
    type: object
  ChaosRemoveReplicaFaultCompletedEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          ServiceUri:
            description: Service name.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - ServiceUri
        type: object
    description: Chaos Remove Replica Fault Completed event.
    x-ms-discriminator-value: ChaosRemoveReplicaFaultCompleted
  ChaosRemoveReplicaFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          ServiceUri:
            description: Service name.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - ServiceUri
        type: object
    description: Chaos Remove Replica Fault Scheduled event.
    x-ms-discriminator-value: ChaosRemoveReplicaFaultScheduled
  ChaosRestartCodePackageFaultCompletedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          CodePackageName:
            description: Code package name.
            type: string
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          ServiceManifestName:
            description: Service manifest name.
            type: string
          ServicePackageActivationId:
            description: Id of Service package activation.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - NodeName
          - ServiceManifestName
          - CodePackageName
          - ServicePackageActivationId
        type: object
    description: Chaos Restart Code Package Fault Completed event.
    x-ms-discriminator-value: ChaosRestartCodePackageFaultCompleted
  ChaosRestartCodePackageFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          CodePackageName:
            description: Code package name.
            type: string
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          ServiceManifestName:
            description: Service manifest name.
            type: string
          ServicePackageActivationId:
            description: Id of Service package activation.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - NodeName
          - ServiceManifestName
          - CodePackageName
          - ServicePackageActivationId
        type: object
    description: Chaos Restart Code Package Fault Scheduled event.
    x-ms-discriminator-value: ChaosRestartCodePackageFaultScheduled
  ChaosRestartNodeFaultCompletedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          NodeInstanceId:
            description: Id of Node instance.
            format: int64
            type: integer
        required:
          - NodeInstanceId
          - FaultGroupId
          - FaultId
        type: object
    description: Chaos Restart Node Fault Completed event.
    x-ms-discriminator-value: ChaosRestartNodeFaultCompleted
  ChaosRestartNodeFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          NodeInstanceId:
            description: Id of Node instance.
            format: int64
            type: integer
        required:
          - NodeInstanceId
          - FaultGroupId
          - FaultId
        type: object
    description: Chaos Restart Node Fault Scheduled event.
    x-ms-discriminator-value: ChaosRestartNodeFaultScheduled
  ChaosRestartReplicaFaultScheduledEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          FaultGroupId:
            description: Id of fault group.
            format: uuid
            type: string
          FaultId:
            description: Id of fault.
            format: uuid
            type: string
          ServiceUri:
            description: Service name.
            type: string
        required:
          - FaultGroupId
          - FaultId
          - ServiceUri
        type: object
    description: Chaos Restart Replica Fault Scheduled event.
    x-ms-discriminator-value: ChaosRestartReplicaFaultScheduled
  ChaosSchedule:
    description: Defines the schedule used by Chaos.
    properties:
      ChaosParametersDictionary:
        description: A mapping of string names to Chaos Parameters to be referenced by Chaos Schedule Jobs.
        items:
          $ref: '#/definitions/ChaosParametersDictionaryItem'
        type: array
      ExpiryDate:
        default: '9999-12-31T23:59:59.999Z'
        description: The date and time Chaos will continue to use this schedule until.
        format: date-time
        type: string
      Jobs:
        description: A list of all Chaos Schedule Jobs that will be automated by the schedule.
        items:
          $ref: '#/definitions/ChaosScheduleJob'
        type: array
      StartDate:
        default: '1601-01-01T00:00:00Z'
        description: The date and time Chaos will start using this schedule.
        format: date-time
        type: string
    type: object
  ChaosScheduleDescription:
    description: 'Defines the Chaos Schedule used by Chaos and the version of the Chaos Schedule. The version value wraps back to 0 after surpassing 2,147,483,647.'
    properties:
      Schedule:
        $ref: '#/definitions/ChaosSchedule'
        description: Defines the schedule used by Chaos.
      Version:
        description: The version number of the Schedule.
        format: int32
        minimum: 0
        type: integer
    type: object
  ChaosScheduleJob:
    description: Defines a repetition rule and parameters of Chaos to be used with the Chaos Schedule.
    properties:
      ChaosParameters:
        description: A reference to which Chaos Parameters of the Chaos Schedule to use.
        type: string
      Days:
        $ref: '#/definitions/ChaosScheduleJobActiveDaysOfWeek'
        description: Defines the days of the week that a Chaos Schedule Job will run for.
      Times:
        description: A list of Time Ranges that specify when during active days that this job will run. The times are interpreted as UTC.
        items:
          $ref: '#/definitions/TimeRange'
        type: array
    type: object
  ChaosScheduleJobActiveDaysOfWeek:
    description: Defines the days of the week that a Chaos Schedule Job will run for.
    properties:
      Friday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Friday
        type: boolean
      Monday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Monday
        type: boolean
      Saturday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Saturday
        type: boolean
      Sunday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Sunday
        type: boolean
      Thursday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Thursday
        type: boolean
      Tuesday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Tuesday
        type: boolean
      Wednesday:
        default: false
        description: Indicates if the Chaos Schedule Job will run on Wednesday
        type: boolean
    type: object
  ChaosScheduleStatus:
    description: Current status of the schedule.
    enum:
      - Invalid
      - Stopped
      - Active
      - Expired
      - Pending
    type: string
    x-ms-enum:
      modelAsString: true
      name: ChaosScheduleStatus
      values:
        - description: Indicates an invalid Chaos Schedule status. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that the schedule is stopped and not being used to schedule runs of chaos. The value is one.
          value: Stopped
        - description: Indicates that the schedule is active and is being used to schedule runs of Chaos. The value is two.
          value: Active
        - description: Indicates that the schedule is expired and will no longer be used to schedule runs of Chaos. The value is three.
          value: Expired
        - description: Indicates that the schedule is pending and is not yet being used to schedule runs of Chaos but will be used when the start time is passed. The value is four.
          value: Pending
  ChaosStartedEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          ChaosContext:
            description: Chaos Context.
            type: string
          ClusterHealthPolicy:
            description: Health policy.
            type: string
          IncludedApplicationList:
            description: List of included Applications.
            type: string
          IncludedNodeTypeList:
            description: List of included Node types.
            type: string
          MaxClusterStabilizationTimeoutInSeconds:
            description: Maximum timeout for cluster stabilization in seconds.
            format: double
            type: number
          MaxConcurrentFaults:
            description: Maximum number of concurrent faults.
            format: int64
            type: integer
          MoveReplicaFaultEnabled:
            description: Indicates MoveReplica fault is enabled.
            type: boolean
          TimeToRunInSeconds:
            description: Time to run in seconds.
            format: double
            type: number
          WaitTimeBetweenFautlsInSeconds:
            description: Wait time between faults in seconds.
            format: double
            type: number
          WaitTimeBetweenIterationsInSeconds:
            description: Wait time between iterations in seconds.
            format: double
            type: number
        required:
          - MaxConcurrentFaults
          - TimeToRunInSeconds
          - MaxClusterStabilizationTimeoutInSeconds
          - WaitTimeBetweenIterationsInSeconds
          - WaitTimeBetweenFautlsInSeconds
          - MoveReplicaFaultEnabled
          - IncludedNodeTypeList
          - IncludedApplicationList
          - ClusterHealthPolicy
          - ChaosContext
        type: object
    description: Chaos Started event.
    x-ms-discriminator-value: ChaosStarted
  ChaosStatus:
    description: Current status of the Chaos run.
    enum:
      - Invalid
      - Running
      - Stopped
    type: string
    x-ms-enum:
      modelAsString: true
      name: ChaosStatus
      values:
        - description: Indicates an invalid Chaos status. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that Chaos is not stopped. The value is one.
          value: Running
        - description: Indicates that Chaos is not scheduling further faults. The value is two.
          value: Stopped
  ChaosStoppedEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          Reason:
            description: Describes reason.
            type: string
        required:
          - Reason
        type: object
    description: Chaos Stopped event.
    x-ms-discriminator-value: ChaosStopped
  ChaosTargetFilter:
    description: |-
      Defines all filters for targeted Chaos faults, for example, faulting only certain node types or faulting only certain applications.
      If ChaosTargetFilter is not used, Chaos faults all cluster entities. If ChaosTargetFilter is used, Chaos faults only the entities that meet the ChaosTargetFilter
      specification. NodeTypeInclusionList and ApplicationInclusionList allow a union semantics only. It is not possible to specify an intersection
      of NodeTypeInclusionList and ApplicationInclusionList. For example, it is not possible to specify "fault this application only when it is on that node type."
      Once an entity is included in either NodeTypeInclusionList or ApplicationInclusionList, that entity cannot be excluded using ChaosTargetFilter. Even if
      applicationX does not appear in ApplicationInclusionList, in some Chaos iteration applicationX can be faulted because it happens to be on a node of nodeTypeY that is included
      in NodeTypeInclusionList. If both NodeTypeInclusionList and ApplicationInclusionList are null or empty, an ArgumentException is thrown.
    properties:
      ApplicationInclusionList:
        description: |-
          A list of application URIs to include in Chaos faults.
          All replicas belonging to services of these applications are amenable to replica faults (restart replica, remove replica, move primary, and move secondary) by Chaos.
          Chaos may restart a code package only if the code package hosts replicas of these applications only.
          If an application does not appear in this list, it can still be faulted in some Chaos iteration if the application ends up on a node of a node type that is included in NodeTypeInclusionList.
          However, if applicationX is tied to nodeTypeY through placement constraints and applicationX is absent from ApplicationInclusionList and nodeTypeY is absent from NodeTypeInclusionList, then applicationX will never be faulted.
          At most 1000 application names can be included in this list, to increase this number, a config upgrade is required for MaxNumberOfApplicationsInChaosEntityFilter configuration.
        items:
          $ref: '#/definitions/ApplicationName'
        type: array
      NodeTypeInclusionList:
        description: |-
          A list of node types to include in Chaos faults.
          All types of faults (restart node, restart code package, remove replica, restart replica, move primary, and move secondary) are enabled for the nodes of these node types.
          If a node type (say NodeTypeX) does not appear in the NodeTypeInclusionList, then node level faults (like NodeRestart) will never be enabled for the nodes of
          NodeTypeX, but code package and replica faults can still be enabled for NodeTypeX if an application in the ApplicationInclusionList.
          happens to reside on a node of NodeTypeX.
          At most 100 node type names can be included in this list, to increase this number, a config upgrade is required for MaxNumberOfNodeTypesInChaosEntityFilter configuration.
        items:
          $ref: '#/definitions/NodeType'
        type: array
    type: object
  CheckExistsPropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: CheckExistsPropertyBatchOperation
        type: object
    description: |-
      Represents a PropertyBatchOperation that compares the Boolean existence of a property with the Exists argument.
      The PropertyBatchOperation operation fails if the property's existence is not equal to the Exists argument.
      The CheckExistsPropertyBatchOperation is generally used as a precondition for the write operations in the batch.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    properties:
      Exists:
        description: Whether or not the property should exist for the operation to pass.
        type: boolean
    required:
      - Exists
    x-ms-discriminator-value: CheckExists
  CheckSequencePropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: CheckSequencePropertyBatchOperation
        type: object
    description: |-
      Compares the Sequence Number of a property with the SequenceNumber argument.
      A property's sequence number can be thought of as that property's version.
      Every time the property is modified, its sequence number is increased.
      The sequence number can be found in a property's metadata.
      The comparison fails if the sequence numbers are not equal.
      CheckSequencePropertyBatchOperation is generally used as a precondition for the write operations in the batch.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    properties:
      SequenceNumber:
        description: The expected sequence number.
        type: string
    required:
      - SequenceNumber
    x-ms-discriminator-value: CheckSequence
  CheckValuePropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: CheckValuePropertyBatchOperation
        type: object
    description: |-
      Represents a PropertyBatchOperation that compares the value of the property with the expected value.
      The CheckValuePropertyBatchOperation is generally used as a precondition for the write operations in the batch.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    properties:
      Value:
        $ref: '#/definitions/PropertyValue'
        description: The expected property value.
    required:
      - Value
    x-ms-discriminator-value: CheckValue
  ClusterConfiguration:
    description: Information about the standalone cluster configuration.
    properties:
      ClusterConfiguration:
        description: The contents of the cluster configuration file.
        type: string
    type: object
  ClusterConfigurationUpgradeDescription:
    description: Describes the parameters for a standalone cluster configuration upgrade.
    properties:
      ApplicationHealthPolicies:
        $ref: '#/definitions/ApplicationHealthPolicies'
        description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
      ClusterConfig:
        description: The cluster configuration.
        type: string
      HealthCheckRetryTimeout:
        default: PT0H0M0S
        description: The length of time between attempts to perform a health checks if the application or cluster is not healthy.
        format: duration
        type: string
      HealthCheckStableDurationInSeconds:
        default: PT0H0M0S
        description: The length of time that the application or cluster must remain healthy.
        format: duration
        type: string
      HealthCheckWaitDurationInSeconds:
        default: PT0H0M0S
        description: The length of time to wait after completing an upgrade domain before starting the health checks process.
        format: duration
        type: string
      MaxPercentDeltaUnhealthyNodes:
        default: 0
        description: The maximum allowed percentage of delta health degradation during the upgrade. Allowed values are integer values from zero to 100.
        type: integer
      MaxPercentUnhealthyApplications:
        default: 0
        description: The maximum allowed percentage of unhealthy applications during the upgrade. Allowed values are integer values from zero to 100.
        type: integer
      MaxPercentUnhealthyNodes:
        default: 0
        description: The maximum allowed percentage of unhealthy nodes during the upgrade. Allowed values are integer values from zero to 100.
        type: integer
      MaxPercentUpgradeDomainDeltaUnhealthyNodes:
        default: 0
        description: The maximum allowed percentage of upgrade domain delta health degradation during the upgrade. Allowed values are integer values from zero to 100.
        type: integer
      UpgradeDomainTimeoutInSeconds:
        default: PT0H0M0S
        description: The timeout for the upgrade domain.
        format: duration
        type: string
      UpgradeTimeoutInSeconds:
        default: PT0H0M0S
        description: The upgrade timeout.
        format: duration
        type: string
    required:
      - ClusterConfig
    type: object
  ClusterConfigurationUpgradeStatusInfo:
    description: Information about a standalone cluster configuration upgrade status.
    properties:
      ConfigVersion:
        description: The cluster configuration version.
        type: string
      Details:
        description: The cluster upgrade status details.
        type: string
      ProgressStatus:
        description: The cluster manifest version.
        type: integer
      UpgradeState:
        $ref: '#/definitions/UpgradeState'
        description: The state of the upgrade domain.
    type: object
  ClusterEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: ClusterEvent
        type: object
    description: Represents the base for all Cluster Events.
    x-ms-discriminator-value: ClusterEvent
  ClusterEventList:
    description: A list of ClusterEvent objects.
    items:
      $ref: '#/definitions/ClusterEvent'
    type: array
  ClusterFabricCodeVersionString:
    description: The ServiceFabric code version of the cluster.
    type: string
  ClusterFabricConfigVersionString:
    description: The cluster configuration version (specified in the cluster manifest).
    type: string
  ClusterHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: ClusterHealth
        properties:
          ApplicationHealthStates:
            description: Cluster application health states as found in the health store.
            items:
              $ref: '#/definitions/ApplicationHealthState'
            type: array
          NodeHealthStates:
            description: Cluster node health states as found in the health store.
            items:
              $ref: '#/definitions/NodeHealthState'
            type: array
        type: object
    description: |-
      Represents the health of the cluster.
      Contains the cluster aggregated health state, the cluster application and node health states as well as the health events and the unhealthy evaluations.
  ClusterHealthChunk:
    description: |-
      Represents the health chunk of the cluster.
      Contains the cluster aggregated health state, and the cluster entities that respect the input filter.
    properties:
      ApplicationHealthStateChunks:
        $ref: '#/definitions/ApplicationHealthStateChunkList'
        description: The list of application health state chunks in the cluster that respect the filters in the cluster health chunk query description.
      HealthState:
        $ref: '#/definitions/HealthState'
        description: |-
          The HealthState representing the aggregated health state of the cluster computed by Health Manager.
          The health evaluation of the entity reflects all events reported on the entity and its children (if any).
          The aggregation is done by applying the desired cluster health policy and the application health policies.
      NodeHealthStateChunks:
        $ref: '#/definitions/NodeHealthStateChunkList'
        description: The list of node health state chunks in the cluster that respect the filters in the cluster health chunk query description.
    type: object
  ClusterHealthChunkQueryDescription:
    description: 'The cluster health chunk query description, which can specify the health policies to evaluate cluster health and very expressive filters to select which cluster entities to include in response.'
    properties:
      ApplicationFilters:
        description: |-
          Defines a list of filters that specify which applications to be included in the returned cluster health chunk.
          If no filters are specified, no applications are returned. All the applications are used to evaluate the cluster's aggregated health state, regardless of the input filters.
          The cluster health chunk query may specify multiple application filters.
          For example, it can specify a filter to return all applications with health state Error and another filter to always include applications of a specified application type.
        items:
          $ref: '#/definitions/ApplicationHealthStateFilter'
        type: array
      ApplicationHealthPolicies:
        $ref: '#/definitions/ApplicationHealthPolicies'
        description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      NodeFilters:
        description: |-
          Defines a list of filters that specify which nodes to be included in the returned cluster health chunk.
          If no filters are specified, no nodes are returned. All the nodes are used to evaluate the cluster's aggregated health state, regardless of the input filters.
          The cluster health chunk query may specify multiple node filters.
          For example, it can specify a filter to return all nodes with health state Error and another filter to always include a node identified by its NodeName.
        items:
          $ref: '#/definitions/NodeHealthStateFilter'
        type: array
  ClusterHealthPolicies:
    description: Health policies to evaluate cluster health.
    properties:
      ApplicationHealthPolicyMap:
        $ref: '#/definitions/ApplicationHealthPolicyMap'
        description: |-
          Defines a map that contains specific application health policies for different applications.
          Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
          If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
          The map is empty by default.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
  ClusterHealthPolicy:
    description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
    properties:
      ApplicationTypeHealthPolicyMap:
        $ref: '#/definitions/ApplicationTypeHealthPolicyMap'
        description: |-
          Defines a map with max percentage unhealthy applications for specific application types.
          Each entry specifies as key the application type name and as value an integer that represents the MaxPercentUnhealthyApplications percentage used to evaluate the applications of the specified application type.

          The application type health policy map can be used during cluster health evaluation to describe special application types.
          The application types included in the map are evaluated against the percentage specified in the map, and not with the global MaxPercentUnhealthyApplications defined in the cluster health policy.
          The applications of application types specified in the map are not counted against the global pool of applications.
          For example, if some applications of a type are critical, the cluster administrator can add an entry to the map for that application type
          and assign it a value of 0% (that is, do not tolerate any failures).
          All other applications can be evaluated with MaxPercentUnhealthyApplications set to 20% to tolerate some failures out of the thousands of application instances.
          The application type health policy map is used only if the cluster manifest enables application type health evaluation using the configuration entry for HealthManager/EnableApplicationTypeHealthEvaluation.
      ConsiderWarningAsError:
        default: false
        description: Indicates whether warnings are treated with the same severity as errors.
        type: boolean
      MaxPercentUnhealthyApplications:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.

          The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
          If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
          This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
          The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
        type: integer
      MaxPercentUnhealthyNodes:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.

          The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
          If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
          The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
          The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.

          In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
        type: integer
    type: object
  ClusterHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Cluster Health Report Created event.
    x-ms-discriminator-value: ClusterHealthReportCreated
  ClusterHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Cluster Health Report Expired event.
    x-ms-discriminator-value: ClusterHealthReportExpired
  ClusterManifest:
    description: Information about the cluster manifest.
    properties:
      Manifest:
        description: The contents of the cluster manifest file.
        type: string
    type: object
  ClusterUpgradeCompleteEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          OverallUpgradeElapsedTimeInMs:
            description: Overall duration of upgrade in milli-seconds.
            format: double
            type: number
          TargetClusterVersion:
            description: Target Cluster version.
            type: string
        required:
          - TargetClusterVersion
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Cluster Upgrade Complete event.
    x-ms-discriminator-value: ClusterUpgradeComplete
  ClusterUpgradeDescriptionObject:
    description: Represents a ServiceFabric cluster upgrade
    properties:
      ApplicationHealthPolicyMap:
        $ref: '#/definitions/ApplicationHealthPolicyMap'
        description: |-
          Defines a map that contains specific application health policies for different applications.
          Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
          If an application is not specified in the map, the application health evaluation uses the ApplicationHealthPolicy found in its application manifest or the default application health policy (if no health policy is defined in the manifest).
          The map is empty by default.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      ClusterUpgradeHealthPolicy:
        $ref: '#/definitions/ClusterUpgradeHealthPolicyObject'
        description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
      CodeVersion:
        $ref: '#/definitions/ClusterFabricCodeVersionString'
        description: The ServiceFabric code version of the cluster.
      ConfigVersion:
        $ref: '#/definitions/ClusterFabricConfigVersionString'
        description: The cluster configuration version (specified in the cluster manifest).
      EnableDeltaHealthEvaluation:
        $ref: '#/definitions/DeltaHealthEvaluationBool'
        description: 'When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.'
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      MonitoringPolicy:
        $ref: '#/definitions/MonitoringPolicyDescription'
        description: Describes the parameters for monitoring an upgrade in Monitored mode.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
      UpgradeReplicaSetCheckTimeoutInSeconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    type: object
  ClusterUpgradeDomainCompleteEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          TargetClusterVersion:
            description: Target Cluster version.
            type: string
          UpgradeDomainElapsedTimeInMs:
            description: Duration of domain upgrade in milli-seconds.
            format: double
            type: number
          UpgradeDomains:
            description: Upgrade domains.
            type: string
          UpgradeState:
            description: State of upgrade.
            type: string
        required:
          - TargetClusterVersion
          - UpgradeState
          - UpgradeDomains
          - UpgradeDomainElapsedTimeInMs
        type: object
    description: Cluster Upgrade Domain Complete event.
    x-ms-discriminator-value: ClusterUpgradeDomainComplete
  ClusterUpgradeHealthPolicyObject:
    description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
    properties:
      MaxPercentDeltaUnhealthyNodes:
        description: The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. The default value is 10%.
        maximum: 100
        minimum: 0
        type: integer
      MaxPercentUpgradeDomainDeltaUnhealthyNodes:
        description: The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. The default value is 15%.
        maximum: 100
        minimum: 0
        type: integer
    type: object
  ClusterUpgradeProgressObject:
    description: Information about a cluster upgrade.
    properties:
      CodeVersion:
        $ref: '#/definitions/ClusterFabricCodeVersionString'
        description: The ServiceFabric code version of the cluster.
      ConfigVersion:
        $ref: '#/definitions/ClusterFabricConfigVersionString'
        description: The cluster configuration version (specified in the cluster manifest).
      CurrentUpgradeDomainProgress:
        $ref: '#/definitions/CurrentUpgradeDomainProgressInfo'
        description: Information about the current in-progress upgrade domain.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: The cause of an upgrade failure that resulted in FailureAction being executed.
      FailureTimestampUtc:
        $ref: '#/definitions/UpgradeFailureTimeUTCString'
        description: The failure time of the upgrade in UTC.
      NextUpgradeDomain:
        $ref: '#/definitions/NextUpgradeDomain'
        description: The name of the next upgrade domain to be processed.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      StartTimestampUtc:
        $ref: '#/definitions/UpgradeStartTimeUTCString'
        description: The start time of the upgrade in UTC.
      UnhealthyEvaluations:
        $ref: '#/definitions/UnhealthyEvaluations'
        description: List of health evaluations that resulted in the current aggregated health state.
      UpgradeDescription:
        $ref: '#/definitions/ClusterUpgradeDescriptionObject'
        description: Represents a ServiceFabric cluster upgrade
      UpgradeDomainDurationInMilliseconds:
        $ref: '#/definitions/UpgradeDomainDurationString'
        description: The estimated elapsed time spent processing the current upgrade domain.
      UpgradeDomainProgressAtFailure:
        $ref: '#/definitions/FailedUpgradeDomainProgressObject'
        description: The detailed upgrade progress for nodes in the current upgrade domain at the point of failure.
      UpgradeDomains:
        $ref: '#/definitions/UpgradeDomainInfoList'
        description: List of upgrade domains and their statuses.
      UpgradeDurationInMilliseconds:
        $ref: '#/definitions/UpgradeDurationString'
        description: The estimated elapsed time spent processing the current overall upgrade.
      UpgradeState:
        $ref: '#/definitions/UpgradeState'
        description: The state of the upgrade domain.
    type: object
  ClusterUpgradeRollbackCompleteEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          FailureReason:
            description: Describes failure.
            type: string
          OverallUpgradeElapsedTimeInMs:
            description: Overall duration of upgrade in milli-seconds.
            format: double
            type: number
          TargetClusterVersion:
            description: Target Cluster version.
            type: string
        required:
          - TargetClusterVersion
          - FailureReason
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Cluster Upgrade Rollback Complete event.
    x-ms-discriminator-value: ClusterUpgradeRollbackComplete
  ClusterUpgradeRollbackStartEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          FailureReason:
            description: Describes failure.
            type: string
          OverallUpgradeElapsedTimeInMs:
            description: Overall duration of upgrade in milli-seconds.
            format: double
            type: number
          TargetClusterVersion:
            description: Target Cluster version.
            type: string
        required:
          - TargetClusterVersion
          - FailureReason
          - OverallUpgradeElapsedTimeInMs
        type: object
    description: Cluster Upgrade Rollback Start event.
    x-ms-discriminator-value: ClusterUpgradeRollbackStart
  ClusterUpgradeStartEvent:
    allOf:
      - $ref: '#/definitions/ClusterEvent'
      - properties:
          CurrentClusterVersion:
            description: Current Cluster version.
            type: string
          FailureAction:
            description: Action if failed.
            type: string
          RollingUpgradeMode:
            description: Mode of upgrade.
            type: string
          TargetClusterVersion:
            description: Target Cluster version.
            type: string
          UpgradeType:
            description: Type of upgrade.
            type: string
        required:
          - CurrentClusterVersion
          - TargetClusterVersion
          - UpgradeType
          - RollingUpgradeMode
          - FailureAction
        type: object
    description: Cluster Upgrade Start event.
    x-ms-discriminator-value: ClusterUpgradeStart
  CodePackageEntryPoint:
    description: Information about setup or main entry point of a code package deployed on a Service Fabric node.
    properties:
      CodePackageEntryPointStatistics:
        $ref: '#/definitions/CodePackageEntryPointStatistics'
        description: Statistics about setup or main entry point  of a code package deployed on a Service Fabric node.
      EntryPointLocation:
        description: The location of entry point executable on the node.
        type: string
      InstanceId:
        $ref: '#/definitions/CodePackageInstanceId'
        description: 'The instance ID for current running entry point. For a code package setup entry point (if specified) runs first and after it finishes main entry point is started. Each time entry point executable is run, its instance id will change.'
      NextActivationTime:
        description: The time (in UTC) when the entry point executable will be run next.
        format: date-time
        type: string
      ProcessId:
        description: The process ID of the entry point.
        type: string
      RunAsUserName:
        description: The user name under which entry point executable is run on the node.
        type: string
      Status:
        $ref: '#/definitions/EntryPointStatus'
        description: Specifies the status of the code package entry point deployed on a Service Fabric node.
    type: object
  CodePackageEntryPointStatistics:
    description: Statistics about setup or main entry point  of a code package deployed on a Service Fabric node.
    properties:
      ActivationCount:
        description: Number of times the entry point has run.
        type: string
      ActivationFailureCount:
        description: Number of times the entry point failed to run.
        type: string
      ContinuousActivationFailureCount:
        description: Number of times the entry point continuously failed to run.
        type: string
      ContinuousExitFailureCount:
        description: Number of times the entry point continuously failed to exit gracefully.
        type: string
      ExitCount:
        description: Number of times the entry point finished running.
        type: string
      ExitFailureCount:
        description: Number of times the entry point failed to exit gracefully.
        type: string
      LastActivationTime:
        description: The last time (in UTC) when Service Fabric attempted to run the entry point.
        format: date-time
        type: string
      LastExitCode:
        description: The last exit code of the entry point.
        type: string
      LastExitTime:
        description: The last time (in UTC) when the entry point finished running.
        format: date-time
        type: string
      LastSuccessfulActivationTime:
        description: The last time (in UTC) when the entry point ran successfully.
        format: date-time
        type: string
      LastSuccessfulExitTime:
        description: The last time (in UTC) when the entry point finished running gracefully.
        format: date-time
        type: string
    type: object
  CodePackageInstanceId:
    description: 'The instance ID for current running entry point. For a code package setup entry point (if specified) runs first and after it finishes main entry point is started. Each time entry point executable is run, its instance id will change.'
    type: string
  CodePackageName:
    description: The name of the code package defined in the service manifest.
    type: string
  ComposeDeploymentStatus:
    description: The status of the compose deployment.
    enum:
      - Invalid
      - Provisioning
      - Creating
      - Ready
      - Unprovisioning
      - Deleting
      - Failed
      - Upgrading
    type: string
    x-ms-enum:
      modelAsString: true
      name: ComposeDeploymentStatus
      values:
        - description: Indicates that the compose deployment status is invalid. The value is zero.
          value: Invalid
        - description: Indicates that the compose deployment is being provisioned in background. The value is 1.
          value: Provisioning
        - description: Indicates that the compose deployment is being created in background. The value is 2.
          value: Creating
        - description: Indicates that the compose deployment has been successfully created or upgraded. The value is 3.
          value: Ready
        - description: Indicates that the compose deployment is being unprovisioned in background. The value is 4.
          value: Unprovisioning
        - description: Indicates that the compose deployment is being deleted in background. The value is 5.
          value: Deleting
        - description: Indicates that the compose deployment was terminated due to persistent failures. The value is 6.
          value: Failed
        - description: Indicates that the compose deployment is being upgraded in the background. The value is 7.
          value: Upgrading
  ComposeDeploymentStatusInfo:
    description: Information about a Service Fabric compose deployment.
    properties:
      ApplicationName:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      Name:
        $ref: '#/definitions/DeploymentName'
        description: The name of the deployment.
      Status:
        $ref: '#/definitions/ComposeDeploymentStatus'
        description: The status of the compose deployment.
      StatusDetails:
        description: The status details of compose deployment including failure message.
        type: string
    type: object
  ComposeDeploymentUpgradeDescription:
    description: Describes the parameters for a compose deployment upgrade.
    properties:
      ApplicationHealthPolicy:
        $ref: '#/definitions/ApplicationHealthPolicy'
        description: Defines a health policy used to evaluate the health of an application or one of its children entities.
      ComposeFileContent:
        description: The content of the compose file that describes the deployment to create.
        type: string
      DeploymentName:
        $ref: '#/definitions/DeploymentName'
        description: The name of the deployment.
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      MonitoringPolicy:
        $ref: '#/definitions/MonitoringPolicyDescription'
        description: Describes the parameters for monitoring an upgrade in Monitored mode.
      RegistryCredential:
        $ref: '#/definitions/RegistryCredential'
        description: Credential information to connect to container registry.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
      UpgradeReplicaSetCheckTimeoutInSeconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    required:
      - DeploymentName
      - ComposeFileContent
      - UpgradeKind
    type: object
  ComposeDeploymentUpgradeProgressInfo:
    description: Describes the parameters for a compose deployment upgrade.
    properties:
      ApplicationHealthPolicy:
        $ref: '#/definitions/ApplicationHealthPolicy'
        description: Defines a health policy used to evaluate the health of an application or one of its children entities.
      ApplicationName:
        $ref: '#/definitions/TargetApplicationName'
        description: 'The name of the target application, including the ''fabric:'' URI scheme.'
      ApplicationUnhealthyEvaluations:
        $ref: '#/definitions/ApplicationUnhealthyEvaluations'
        description: List of health evaluations that resulted in the current aggregated health state.
      ApplicationUpgradeStatusDetails:
        description: Additional details of application upgrade including failure message.
        type: string
      CurrentUpgradeDomainDuration:
        $ref: '#/definitions/CurrentUpgradeDomainDuration'
        description: 'The estimated amount of time spent processing current Upgrade Domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      CurrentUpgradeDomainProgress:
        $ref: '#/definitions/CurrentUpgradeDomainProgressInfo'
        description: Information about the current in-progress upgrade domain.
      DeploymentName:
        $ref: '#/definitions/TargetDeploymentName'
        description: The name of the target deployment.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: The cause of an upgrade failure that resulted in FailureAction being executed.
      FailureTimestampUtc:
        description: The estimated UTC datetime when the upgrade failed and FailureAction was executed.
        type: string
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      MonitoringPolicy:
        $ref: '#/definitions/MonitoringPolicyDescription'
        description: Describes the parameters for monitoring an upgrade in Monitored mode.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      StartTimestampUtc:
        description: The estimated UTC datetime when the upgrade started.
        type: string
      TargetApplicationTypeVersion:
        $ref: '#/definitions/TargetApplicationTypeVersion'
        description: The target application type version (found in the application manifest) for the application upgrade.
      UpgradeDomainProgressAtFailure:
        $ref: '#/definitions/FailureUpgradeDomainProgressInfo'
        description: Information about the upgrade domain progress at the time of upgrade failure.
      UpgradeDuration:
        $ref: '#/definitions/UpgradeDuration'
        description: 'The estimated amount of time that the overall upgrade elapsed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
      UpgradeReplicaSetCheckTimeoutInSeconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
      UpgradeState:
        $ref: '#/definitions/ComposeDeploymentUpgradeState'
        description: The state of the compose deployment upgrade.
      UpgradeStatusDetails:
        description: Additional detailed information about the status of the pending upgrade.
        type: string
    type: object
  ComposeDeploymentUpgradeState:
    description: The state of the compose deployment upgrade.
    enum:
      - Invalid
      - ProvisioningTarget
      - RollingForwardInProgress
      - RollingForwardPending
      - UnprovisioningCurrent
      - RollingForwardCompleted
      - RollingBackInProgress
      - UnprovisioningTarget
      - RollingBackCompleted
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: ComposeDeploymentUpgradeState
      values:
        - description: Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade is in the progress of provisioning target application type version. The value is 1.
          value: ProvisioningTarget
        - description: The upgrade is rolling forward to the target version but is not complete yet. The value is 2.
          value: RollingForwardInProgress
        - description: The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
          value: RollingForwardPending
        - description: The upgrade is in the progress of unprovisioning current application type version and rolling forward to the target version is completed. The value is 4.
          value: UnprovisioningCurrent
        - description: The upgrade has finished rolling forward. The value is 5.
          value: RollingForwardCompleted
        - description: The upgrade is rolling back to the previous version but is not complete yet. The value is 6.
          value: RollingBackInProgress
        - description: The upgrade is in the progress of unprovisioning target application type version and rolling back to the current version is completed. The value is 7.
          value: UnprovisioningTarget
        - description: The upgrade has finished rolling back. The value is 8.
          value: RollingBackCompleted
        - description: The upgrade has failed and is unable to execute FailureAction. The value is 9.
          value: Failed
  ContainerApiRequestBody:
    description: parameters for making container API call.
    properties:
      Body:
        description: HTTP request body of container REST API
        type: string
      Content-Type:
        description: 'Content type of container REST API request, defaults to "application/json"'
        type: string
      HttpVerb:
        description: 'HTTP verb of container REST API, defaults to "GET"'
        type: string
      UriPath:
        description: URI path of container REST API
        type: string
    required:
      - UriPath
    type: object
  ContainerApiResponse:
    description: Response body that wraps container API result.
    properties:
      ContainerApiResult:
        $ref: '#/definitions/ContainerApiResult'
        description: Container API result.
    required:
      - ContainerApiResult
    type: object
  ContainerApiResult:
    description: Container API result.
    properties:
      Body:
        description: container API result body
        type: string
      Content-Encoding:
        description: HTTP content encoding
        type: string
      Content-Type:
        description: HTTP content type
        type: string
      Status:
        description: HTTP status code returned by the target container API
        type: integer
    required:
      - Status
    type: object
  ContainerCodePackageProperties:
    description: Describes a container and its runtime properties.
    properties:
      commands:
        description: Command array to execute within the container in exec form.
        items:
          type: string
        type: array
      diagnostics:
        $ref: '#/definitions/DiagnosticsRef'
        description: Reference to sinks in DiagnosticsDescription.
      endpoints:
        description: The endpoints exposed by this container.
        items:
          $ref: '#/definitions/EndpointProperties'
        type: array
      entrypoint:
        description: Override for the default entry point in the container.
        type: string
      environmentVariables:
        description: The environment variables to set in this container
        items:
          $ref: '#/definitions/EnvironmentVariable'
        type: array
      image:
        description: The Container image to use.
        type: string
      imageRegistryCredential:
        $ref: '#/definitions/ImageRegistryCredential'
        description: Image registry credential.
      instanceView:
        $ref: '#/definitions/ContainerInstanceView'
        description: Runtime information of a container instance.
        readOnly: true
      labels:
        description: The labels to set in this container.
        items:
          $ref: '#/definitions/ContainerLabel'
        type: array
      name:
        description: The name of the code package.
        type: string
      resources:
        $ref: '#/definitions/ResourceRequirements'
        description: This type describes the resource requirements for a container or a service.
      settings:
        description: 'The settings to set in this container. The setting file path can be fetched from environment variable "Fabric_SettingPath". The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".'
        items:
          $ref: '#/definitions/Setting'
        type: array
      volumeRefs:
        description: The volumes to be attached to the container.
        items:
          $ref: '#/definitions/ContainerVolume'
        type: array
    required:
      - name
      - image
      - resources
    type: object
  ContainerDeactivatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          CodePackageName:
            description: Name of Code package.
            type: string
          ContainerName:
            description: Name of Container.
            type: string
          EntryPointType:
            description: Type of EntryPoint.
            type: string
          ExitCode:
            description: Exit code of process.
            format: int64
            type: integer
          HostId:
            description: Host Id.
            type: string
          ImageName:
            description: Name of Container image.
            type: string
          IsExclusive:
            description: Indicates IsExclusive flag.
            type: boolean
          ServiceName:
            description: Name of Service.
            type: string
          ServicePackageActivationId:
            description: Activation Id of Service package.
            type: string
          ServicePackageName:
            description: Name of Service package.
            type: string
          StartTime:
            description: Start time of process.
            format: date-time
            type: string
          UnexpectedTermination:
            description: Indicates if termination is unexpected.
            type: boolean
        required:
          - ServiceName
          - ServicePackageName
          - ServicePackageActivationId
          - IsExclusive
          - CodePackageName
          - EntryPointType
          - ImageName
          - ContainerName
          - HostId
          - ExitCode
          - UnexpectedTermination
          - StartTime
        type: object
    description: Container Deactivated event.
    x-ms-discriminator-value: ContainerDeactivated
  ContainerEvent:
    description: A container event.
    properties:
      count:
        description: The count of the event.
        type: integer
      firstTimestamp:
        description: Date/time of the first event.
        type: string
      lastTimestamp:
        description: Date/time of the last event.
        type: string
      message:
        description: The event message
        type: string
      name:
        description: The name of the container event.
        type: string
      type:
        description: The event type.
        type: string
    type: object
  ContainerInstanceEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: ContainerInstanceEvent
        type: object
    description: Represents the base for all Container Events.
    x-ms-discriminator-value: ContainerInstanceEvent
  ContainerInstanceEventList:
    description: A list of ContainerInstanceEvent objects.
    items:
      $ref: '#/definitions/ContainerInstanceEvent'
    type: array
  ContainerInstanceView:
    description: Runtime information of a container instance.
    properties:
      currentState:
        $ref: '#/definitions/ContainerState'
        description: Current container instance state.
      events:
        description: The events of this container instance.
        items:
          $ref: '#/definitions/ContainerEvent'
        type: array
      previousState:
        $ref: '#/definitions/ContainerState'
        description: Previous container instance state.
      restartCount:
        description: The number of times the container has been restarted.
        type: integer
    type: object
  ContainerLabel:
    description: Describes a container label.
    properties:
      name:
        description: The name of the container label.
        type: string
      value:
        description: The value of the container label.
        type: string
    required:
      - name
      - value
    type: object
  ContainerLogs:
    description: Container logs.
    properties:
      Content:
        description: Container logs.
        type: string
    type: object
  ContainerState:
    description: The container state.
    properties:
      detailStatus:
        description: Human-readable status of this state.
        type: string
      exitCode:
        description: The container exit code.
        type: string
      finishTime:
        description: Date/time when the container state finished.
        format: date-time
        type: string
      startTime:
        description: Date/time when the container state started.
        format: date-time
        type: string
      state:
        description: The state of this container
        type: string
    type: object
  ContainerVolume:
    description: Describes how a volume is attached to a container.
    properties:
      destinationPath:
        description: The path within the container at which the volume should be mounted. Only valid path characters are allowed.
        type: string
      name:
        description: Name of the volume.
        type: string
      readOnly:
        description: The flag indicating whether the volume is read only. Default is 'false'.
        type: boolean
    required:
      - name
      - destinationPath
    type: object
  ContinuationToken:
    description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
    type: string
  CorrelationSchemeList:
    description: A list that describes the correlation of the service with other services.
    items:
      $ref: '#/definitions/ServiceCorrelationDescription'
    type: array
  CreateComposeDeploymentDescription:
    description: Defines description for creating a Service Fabric compose deployment.
    properties:
      ComposeFileContent:
        description: The content of the compose file that describes the deployment to create.
        type: string
      DeploymentName:
        $ref: '#/definitions/DeploymentName'
        description: The name of the deployment.
      RegistryCredential:
        $ref: '#/definitions/RegistryCredential'
        description: Credential information to connect to container registry.
    required:
      - DeploymentName
      - ComposeFileContent
    type: object
  CurrentUpgradeDomainDuration:
    default: PT0H2M0S
    description: 'The estimated amount of time spent processing current Upgrade Domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  CurrentUpgradeDomainProgressInfo:
    description: Information about the current in-progress upgrade domain.
    properties:
      DomainName:
        $ref: '#/definitions/UpgradeDomainName'
        description: The name of the upgrade domain
      NodeUpgradeProgressList:
        $ref: '#/definitions/NodeUpgradeProgressInfoList'
        description: List of upgrading nodes and their statuses
    type: object
  DayOfWeek:
    description: Describes the days in a week.
    enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    type: string
    x-ms-enum:
      modelAsString: true
      name: DayOfWeek
      values:
        - description: Indicates the Day referred is Sunday.
          value: Sunday
        - description: Indicates the Day referred is Monday.
          value: Monday
        - description: Indicates the Day referred is Tuesday.
          value: Tuesday
        - description: Indicates the Day referred is Wednesday.
          value: Wednesday
        - description: Indicates the Day referred is Thursday.
          value: Thursday
        - description: Indicates the Day referred is Friday.
          value: Friday
        - description: Indicates the Day referred is Saturday.
          value: Saturday
  DayOfWeekList:
    description: List of days of a week when to trigger the periodic backup. This is valid only when the backup schedule frequency type is weekly.
    items:
      $ref: '#/definitions/DayOfWeek'
    type: array
  DeactivationIntentDescription:
    description: Describes the intent or reason for deactivating the node.
    properties:
      DeactivationIntent:
        description: Describes the intent or reason for deactivating the node. The possible values are following.
        enum:
          - Pause
          - Restart
          - RemoveData
        type: string
        x-ms-enum:
          modelAsString: true
          name: DeactivationIntent
          values:
            - description: Indicates that the node should be paused. The value is 1.
              value: Pause
            - description: Indicates that the intent is for the node to be restarted after a short period of time. The value is 2.
              value: Restart
            - description: Indicates the intent is for the node to remove data. The value is 3.
              value: RemoveData
  DeletePropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: DeletePropertyBatchOperation
        type: object
    description: |-
      Represents a PropertyBatchOperation that deletes a specified property if it exists.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    x-ms-discriminator-value: Delete
  DeltaHealthEvaluationBool:
    description: 'When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.'
    type: boolean
  DeltaNodesCheckHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: DeltaNodesCheckHealthEvaluation
        properties:
          BaselineErrorCount:
            description: Number of nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          BaselineTotalCount:
            description: Total number of nodes in the health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          MaxPercentDeltaUnhealthyNodes:
            description: Maximum allowed percentage of delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: |-
              List of unhealthy evaluations that led to the aggregated health state.
              Includes all the unhealthy NodeHealthEvaluation that impacted the aggregated health.
        type: object
    description: |-
      Represents health evaluation for delta nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state.
      Can be returned during cluster upgrade when the aggregated health state of the cluster is Warning or Error.
    x-ms-discriminator-value: DeltaNodesCheck
  DeployServicePackageToNodeDescription:
    description: Defines description for downloading packages associated with a service manifest to image cache on a Service Fabric node.
    properties:
      ApplicationTypeName:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      ApplicationTypeVersion:
        $ref: '#/definitions/ApplicationTypeVersion'
        description: The version of the application type as defined in the application manifest.
      NodeName:
        $ref: '#/definitions/NodeName'
        description: The name of a Service Fabric node.
      PackageSharingPolicy:
        $ref: '#/definitions/PackageSharingPolicyInfoList'
        description: List of package sharing policy information.
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of service manifest whose packages need to be downloaded.
    required:
      - ServiceManifestName
      - ApplicationTypeName
      - ApplicationTypeVersion
      - NodeName
    type: object
  DeployedApplicationHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: DeployedApplicationHealth
        properties:
          DeployedServicePackageHealthStates:
            $ref: '#/definitions/DeployedServicePackageHealthStateList'
            description: Deployed service package health states for the current deployed application as found in the health store.
          Name:
            $ref: '#/definitions/ApplicationName'
            description: Name of the application deployed on the node whose health information is described by this object.
          NodeName:
            $ref: '#/definitions/NodeName'
            description: Name of the node where this application is deployed.
        type: object
    description: Information about the health of an application deployed on a Service Fabric node.
  DeployedApplicationHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: DeployedApplicationHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          NodeName:
            $ref: '#/definitions/NodeName'
            description: Name of the node where the application is deployed to.
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: |-
              List of  unhealthy evaluations that led to the current aggregated health state of the deployed application.
              The types of the unhealthy evaluations can be DeployedServicePackagesHealthEvaluation or EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a deployed application, containing information about the data and the algorithm used by the health store to evaluate health.'
    x-ms-discriminator-value: DeployedApplication
  DeployedApplicationHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationInstanceId:
            description: Id of Application instance.
            format: int64
            type: integer
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ApplicationInstanceId
          - NodeName
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Deployed Application Health Report Created event.
    x-ms-discriminator-value: DeployedApplicationHealthReportCreated
  DeployedApplicationHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          ApplicationInstanceId:
            description: Id of Application instance.
            format: int64
            type: integer
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ApplicationInstanceId
          - NodeName
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Deployed Application Health Report Expired event.
    x-ms-discriminator-value: DeployedApplicationHealthReportExpired
  DeployedApplicationHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: DeployedApplicationHealthState
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          NodeName:
            $ref: '#/definitions/NodeName'
            description: Name of the node on which the service package is deployed.
        type: object
    description: 'Represents the health state of a deployed application, which contains the entity identifier and the aggregated health state.'
  DeployedApplicationHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: DeployedApplicationHealthStateChunk
        properties:
          DeployedServicePackageHealthStateChunks:
            $ref: '#/definitions/DeployedServicePackageHealthStateChunkList'
            description: The list of deployed service package health state chunks belonging to the deployed application that respect the filters in the cluster health chunk query description.
          NodeName:
            description: The name of node where the application is deployed.
            type: string
        type: object
    description: 'Represents the health state chunk of a deployed application, which contains the node where the application is deployed, the aggregated health state and any deployed service packages that respect the chunk query description filters.'
  DeployedApplicationHealthStateChunkList:
    description: The list of deployed application health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    properties:
      Items:
        description: The list of deployed application health state chunks that respect the input filters in the chunk query.
        items:
          $ref: '#/definitions/DeployedApplicationHealthStateChunk'
        type: array
    type: object
  DeployedApplicationHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a deployed application should be included as a child of an application in the cluster health chunk.
      The deployed applications are only returned if the parent application matches a filter specified in the cluster health chunk query description.
      One filter can match zero, one or multiple deployed applications, depending on its properties.
    properties:
      DeployedServicePackageFilters:
        description: |-
          Defines a list of filters that specify which deployed service packages to be included in the returned cluster health chunk as children of the parent deployed application. The deployed service packages are returned only if the parent deployed application matches a filter.
          If the list is empty, no deployed service packages are returned. All the deployed service packages are used to evaluate the parent deployed application aggregated health state, regardless of the input filters.
          The deployed application filter may specify multiple deployed service package filters.
          For example, it can specify a filter to return all deployed service packages with health state Error and another filter to always include a deployed service package on a node.
        items:
          $ref: '#/definitions/DeployedServicePackageHealthStateFilter'
        type: array
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the deployed applications. It allows selecting deployed applications if they match the desired health states.
          The possible values are integer value of one of the following health states. Only deployed applications that match the filter are returned. All deployed applications are used to evaluate the cluster aggregated health state.
          If not specified, default value is None, unless the node name is specified. If the filter has default value and node name is specified, the matching deployed application is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches deployed applications with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      NodeNameFilter:
        description: |-
          The name of the node where the application is deployed in order to match the filter.
          If specified, the filter is applied only to the application deployed on the specified node.
          If the application is not deployed on the node with the specified name, no deployed application is returned in the cluster health chunk based on this filter.
          Otherwise, the deployed application is included in the cluster health chunk if it respects the other filter properties.
          If not specified, all deployed applications that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        type: string
    type: object
  DeployedApplicationInfo:
    description: Information about application deployed on the node.
    properties:
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Id:
        $ref: '#/definitions/ApplicationId'
        description: |-
          The identity of the application. This is an encoded representation of the application name. This is used in the REST APIs to identify the application resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the application name is "fabric:/myapp/app1",
          the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.
      LogDirectory:
        description: The log directory of the application on the node. The log directory can be used to store application logs.
        type: string
      Name:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      Status:
        $ref: '#/definitions/DeployedApplicationStatus'
        description: The status of the application deployed on the node. Following are the possible values.
      TempDirectory:
        description: The temp directory of the application on the node. The code packages belonging to the application are forked with this directory set as their temporary directory.
        type: string
      TypeName:
        $ref: '#/definitions/ApplicationTypeName'
        description: The application type name as defined in the application manifest.
      WorkDirectory:
        description: The work directory of the application on the node. The work directory can be used to store application data.
        type: string
    type: object
  DeployedApplicationInfoList:
    description: List of deployed application information.
    items:
      $ref: '#/definitions/DeployedApplicationInfo'
    type: array
  DeployedApplicationStatus:
    description: The status of the application deployed on the node. Following are the possible values.
    enum:
      - Invalid
      - Downloading
      - Activating
      - Active
      - Upgrading
      - Deactivating
    type: string
    x-ms-enum:
      modelAsString: true
      name: DeployedApplicationStatus
      values:
        - description: Indicates that deployment status is not valid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that the package is downloading from the ImageStore. The value is 1.
          value: Downloading
        - description: Indicates that the package is activating. The value is 2.
          value: Activating
        - description: Indicates that the package is active. The value is 3.
          value: Active
        - description: Indicates that the package is upgrading. The value is 4.
          value: Upgrading
        - description: Indicates that the package is deactivating. The value is 5.
          value: Deactivating
  DeployedApplicationsHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: DeployedApplicationsHealthEvaluation
        properties:
          MaxPercentUnhealthyDeployedApplications:
            description: Maximum allowed percentage of unhealthy deployed applications from the ApplicationHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of deployed applications of the application in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy DeployedApplicationHealthEvaluation that impacted the aggregated health.
        type: object
    description: |-
      Represents health evaluation for deployed applications, containing health evaluations for each unhealthy deployed application that impacted current aggregated health state.
      Can be returned when evaluating application health and the aggregated health state is either Error or Warning.
    x-ms-discriminator-value: DeployedApplications
  DeployedCodePackageInfo:
    description: Information about code package deployed on a Service Fabric node.
    properties:
      HostIsolationMode:
        $ref: '#/definitions/HostIsolationMode'
        description: Specifies the isolation mode of main entry point of a code package when it's host type is ContainerHost. This is specified as part of container host policies in application manifest while importing service manifest.
      HostType:
        $ref: '#/definitions/HostType'
        description: Specifies the type of host for main entry point of a code package as specified in service manifest.
      MainEntryPoint:
        $ref: '#/definitions/CodePackageEntryPoint'
        description: Information about setup or main entry point of a code package deployed on a Service Fabric node.
      Name:
        $ref: '#/definitions/CodePackageName'
        description: The name of the code package.
      RunFrequencyInterval:
        description: The interval at which code package is run. This is used for periodic code package.
        type: string
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of service manifest that specified this code package.
      ServicePackageActivationId:
        $ref: '#/definitions/ServicePackageActivationId'
        description: |-
          The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
          is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
          is always an empty string.
      SetupEntryPoint:
        $ref: '#/definitions/CodePackageEntryPoint'
        description: Information about setup or main entry point of a code package deployed on a Service Fabric node.
      Status:
        $ref: '#/definitions/DeploymentStatus'
        description: Specifies the status of a deployed application or service package on a Service Fabric node.
      Version:
        description: The version of the code package specified in service manifest.
        type: string
    type: object
  DeployedCodePackageInfoList:
    description: List of deployed code package information.
    items:
      $ref: '#/definitions/DeployedCodePackageInfo'
    type: array
  DeployedServiceHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          ServiceManifestName:
            description: Service manifest name.
            type: string
          ServicePackageActivationId:
            description: Id of Service package activation.
            type: string
          ServicePackageInstanceId:
            description: Id of Service package instance.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TTLTimespan:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ServiceManifestName
          - ServicePackageInstanceId
          - ServicePackageActivationId
          - NodeName
          - SourceId
          - Property
          - HealthState
          - TTLTimespan
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Deployed Service Health Report Created event.
    x-ms-discriminator-value: DeployedServiceHealthReportCreated
  DeployedServiceHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          ServiceManifest:
            description: Service manifest name.
            type: string
          ServicePackageActivationId:
            description: Id of Service package activation.
            type: string
          ServicePackageInstanceId:
            description: Id of Service package instance.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TTLTimespan:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ServiceManifest
          - ServicePackageInstanceId
          - ServicePackageActivationId
          - NodeName
          - SourceId
          - Property
          - HealthState
          - TTLTimespan
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Deployed Service Health Report Expired event.
    x-ms-discriminator-value: DeployedServiceHealthReportExpired
  DeployedServicePackageHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: DeployedServicePackageHealth
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          NodeName:
            $ref: '#/definitions/NodeName'
            description: Name of the node where this service package is deployed.
          ServiceManifestName:
            $ref: '#/definitions/ServiceManifestName'
            description: Name of the service manifest.
        type: object
    description: Information about the health of a service package for a specific application deployed on a Service Fabric node.
  DeployedServicePackageHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: DeployedServicePackageHealthEvaluation
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          ServiceManifestName:
            $ref: '#/definitions/ServiceManifestName'
            description: The name of the service manifest.
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the current aggregated health state. The type of the unhealthy evaluations can be EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a deployed service package, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: DeployedServicePackage
  DeployedServicePackageHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: DeployedServicePackageHealthState
        properties:
          ApplicationName:
            $ref: '#/definitions/ApplicationName'
            description: 'The name of the application, including the ''fabric:'' URI scheme.'
          NodeName:
            $ref: '#/definitions/NodeName'
            description: Name of the node on which the service package is deployed.
          ServiceManifestName:
            $ref: '#/definitions/ServiceManifestName'
            description: Name of the manifest describing the service package.
          ServicePackageActivationId:
            $ref: '#/definitions/ServicePackageActivationId'
            description: |-
              The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
              is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
              is always an empty string.
        type: object
    description: 'Represents the health state of a deployed service package, containing the entity identifier and the aggregated health state.'
  DeployedServicePackageHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: DeployedServicePackageHealthStateChunk
        properties:
          ServiceManifestName:
            $ref: '#/definitions/ServiceManifestName'
            description: The name of the service manifest.
          ServicePackageActivationId:
            $ref: '#/definitions/ServicePackageActivationId'
            description: |-
              The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
              is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
              is always an empty string.
        type: object
    description: 'Represents the health state chunk of a deployed service package, which contains the service manifest name and the service package aggregated health state.'
  DeployedServicePackageHealthStateChunkList:
    description: The list of deployed service package health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    properties:
      Items:
        description: The list of deployed service package health state chunks that respect the input filters in the chunk query.
        items:
          $ref: '#/definitions/DeployedServicePackageHealthStateChunk'
        type: array
    type: object
  DeployedServicePackageHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a deployed service package should be included as a child of a deployed application in the cluster health chunk.
      The deployed service packages are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent deployed application and its parent application must be included in the cluster health chunk.
      One filter can match zero, one or multiple deployed service packages, depending on its properties.
    properties:
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the deployed service packages. It allows selecting deployed service packages if they match the desired health states.
          The possible values are integer value of one of the following health states. Only deployed service packages that match the filter are returned. All deployed service packages are used to evaluate the parent deployed application aggregated health state.
          If not specified, default value is None, unless the deployed service package ID is specified. If the filter has default value and deployed service package ID is specified, the matching deployed service package is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches deployed service packages with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      ServiceManifestNameFilter:
        description: |-
          The name of the service manifest which identifies the deployed service packages that matches the filter.
          If specified, the filter is applied only to the specified deployed service packages, if any.
          If no deployed service packages with specified manifest name exist, nothing is returned in the cluster health chunk based on this filter.
          If any deployed service package exists, they are included in the cluster health chunk if it respects the other filter properties.
          If not specified, all deployed service packages that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        type: string
      ServicePackageActivationIdFilter:
        description: |-
          The activation ID of a deployed service package that matches the filter.
          If not specified, the filter applies to all deployed service packages that match the other parameters.
          If specified, the filter matches only the deployed service package with the specified activation ID.
        type: string
    type: object
  DeployedServicePackageHealthStateList:
    description: List of health states for a service package deployed on a Service Fabric node.
    items:
      $ref: '#/definitions/DeployedServicePackageHealthState'
    type: array
  DeployedServicePackageInfo:
    description: Information about service package deployed on a Service Fabric node.
    properties:
      Name:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of the service package as specified in the service manifest.
      ServicePackageActivationId:
        $ref: '#/definitions/ServicePackageActivationId'
        description: |-
          The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
          is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
          is always an empty string.
      Status:
        $ref: '#/definitions/DeploymentStatus'
        description: Specifies the status of a deployed application or service package on a Service Fabric node.
      Version:
        description: The version of the service package specified in service manifest.
        type: string
    type: object
  DeployedServicePackageInfoList:
    description: List of deployed service package information.
    items:
      $ref: '#/definitions/DeployedServicePackageInfo'
    type: array
  DeployedServicePackagesHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: DeployedServicePackagesHealthEvaluation
        properties:
          TotalCount:
            description: Total number of deployed service packages of the deployed application in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy DeployedServicePackageHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for deployed service packages, containing health evaluations for each unhealthy deployed service package that impacted current aggregated health state. Can be returned when evaluating deployed application health and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: DeployedServicePackages
  DeployedServiceReplicaDetailInfo:
    description: Information about a Service Fabric service replica deployed on a node.
    discriminator: ServiceKind
    properties:
      CurrentServiceOperation:
        $ref: '#/definitions/ServiceOperationName'
        description: Specifies the current active life-cycle operation on a stateful service replica or stateless service instance.
      CurrentServiceOperationStartTimeUtc:
        description: The start time of the current service operation in UTC format.
        format: date-time
        type: string
      PartitionId:
        $ref: '#/definitions/PartitionId'
        description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
      ReportedLoad:
        $ref: '#/definitions/LoadMetricReportInfoList'
        description: List of load reported by replica.
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: 'Full hierarchical name of the service in URI format starting with `fabric:`.'
    required:
      - ServiceKind
    type: object
  DeployedServiceReplicaInfo:
    description: Information about a Service Fabric service replica deployed on a node.
    discriminator: ServiceKind
    properties:
      Address:
        description: The last address returned by the replica in Open or ChangeRole.
        type: string
      CodePackageName:
        $ref: '#/definitions/CodePackageName'
        description: The name of the code package that hosts this replica.
      HostProcessId:
        description: Host process ID of the process that is hosting the replica. This will be zero if the replica is down. In hyper-v containers this host process ID will be from different kernel.
        type: string
      PartitionId:
        $ref: '#/definitions/PartitionId'
        description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
      ReplicaStatus:
        $ref: '#/definitions/ReplicaStatus'
        description: The status of a replica of a service.
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of the service manifest in which this service type is defined.
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
      ServicePackageActivationId:
        $ref: '#/definitions/ServicePackageActivationId'
        description: |-
          The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
          is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
          is always an empty string.
      ServiceTypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
    required:
      - ServiceKind
    type: object
  DeployedServiceReplicaInfoList:
    description: List of deployed service replica information.
    items:
      $ref: '#/definitions/DeployedServiceReplicaInfo'
    type: array
  DeployedServiceTypeInfo:
    description: 'Information about service type deployed on a node, information such as the status of the service type registration on a node.'
    properties:
      CodePackageName:
        $ref: '#/definitions/CodePackageName'
        description: The name of the code package that registered the service type.
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of the service manifest in which this service type is defined.
      ServicePackageActivationId:
        $ref: '#/definitions/ServicePackageActivationId'
        description: |-
          The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
          is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
          is always an empty string.
      ServiceTypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
      Status:
        $ref: '#/definitions/ServiceTypeRegistrationStatus'
        description: The status of the service type registration on the node.
    type: object
  DeployedServiceTypeInfoList:
    description: List of information about service type deployed on a node.
    items:
      $ref: '#/definitions/DeployedServiceTypeInfo'
    type: array
  DeployedStatefulServiceReplicaDetailInfo:
    allOf:
      - $ref: '#/definitions/DeployedServiceReplicaDetailInfo'
      - description: DeployedStatefulServiceReplicaDetailInfo
        properties:
          CurrentReplicatorOperation:
            $ref: '#/definitions/ReplicatorOperationName'
            description: Specifies the operation currently being executed by the Replicator.
          DeployedServiceReplicaQueryResult:
            $ref: '#/definitions/DeployedStatefulServiceReplicaInfo'
            description: Information about a stateful service replica deployed on a node.
          ReadStatus:
            $ref: '#/definitions/PartitionAccessStatus'
            description: Specifies the access status of the partition.
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
          ReplicaStatus:
            $ref: '#/definitions/KeyValueStoreReplicaStatus'
            description: Key value store related information for the replica.
          ReplicatorStatus:
            $ref: '#/definitions/ReplicatorStatus'
            description: |-
              Represents a base class for primary or secondary replicator status.
              Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.
          WriteStatus:
            $ref: '#/definitions/PartitionAccessStatus'
            description: Specifies the access status of the partition.
        type: object
    description: 'Information about a stateful replica running in a code package. Note DeployedServiceReplicaQueryResult will contain duplicate data like ServiceKind, ServiceName, PartitionId and replicaId.'
    x-ms-discriminator-value: Stateful
  DeployedStatefulServiceReplicaInfo:
    allOf:
      - $ref: '#/definitions/DeployedServiceReplicaInfo'
      - description: DeployedStatefulServiceReplicaInfo
        properties:
          ReconfigurationInformation:
            $ref: '#/definitions/ReconfigurationInformation'
            description: 'Information about current reconfiguration like phase, type, previous configuration role of replica and reconfiguration start date time.'
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
          ReplicaRole:
            $ref: '#/definitions/ReplicaRole'
            description: The role of a replica of a stateful service.
        type: object
    description: Information about a stateful service replica deployed on a node.
    x-ms-discriminator-value: Stateful
  DeployedStatelessServiceInstanceDetailInfo:
    allOf:
      - $ref: '#/definitions/DeployedServiceReplicaDetailInfo'
      - description: DeployedStatelessServiceInstanceDetailInfo
        properties:
          DeployedServiceReplicaQueryResult:
            $ref: '#/definitions/DeployedStatelessServiceInstanceInfo'
            description: Information about a stateless service instance deployed on a node.
          InstanceId:
            $ref: '#/definitions/InstanceId'
            description: 'Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.'
        type: object
    description: 'Information about a stateless instance running in a code package. Note that DeployedServiceReplicaQueryResult will contain duplicate data like ServiceKind, ServiceName, PartitionId and InstanceId.'
    x-ms-discriminator-value: Stateless
  DeployedStatelessServiceInstanceInfo:
    allOf:
      - $ref: '#/definitions/DeployedServiceReplicaInfo'
      - description: DeployedStatelessServiceInstanceInfo
        properties:
          InstanceId:
            $ref: '#/definitions/InstanceId'
            description: 'Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.'
        type: object
    description: Information about a stateless service instance deployed on a node.
    x-ms-discriminator-value: Stateless
  DeploymentName:
    description: The name of the deployment.
    type: string
  DeploymentStatus:
    description: Specifies the status of a deployed application or service package on a Service Fabric node.
    enum:
      - Invalid
      - Downloading
      - Activating
      - Active
      - Upgrading
      - Deactivating
    type: string
    x-ms-enum:
      modelAsString: true
      name: DeploymentStatus
      values:
        - description: Indicates status of the application or service package is not known or invalid. The value is 0.
          value: Invalid
        - description: Indicates the application or service package is being downloaded to the node from the ImageStore. The value is 1.
          value: Downloading
        - description: Indicates the application or service package is being activated. The value is 2.
          value: Activating
        - description: Indicates the application or service package is active the node. The value is 3.
          value: Active
        - description: Indicates the application or service package is being upgraded. The value is 4.
          value: Upgrading
        - description: Indicates the application or service package is being deactivated. The value is 5.
          value: Deactivating
  DiagnosticsDescription:
    description: Describes the diagnostics options available
    properties:
      defaultSinkRefs:
        description: The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
        items:
          type: string
        type: array
      enabled:
        description: Status of whether or not sinks are enabled.
        type: boolean
      sinks:
        description: List of supported sinks that can be referenced.
        items:
          $ref: '#/definitions/DiagnosticsSinkProperties'
        type: array
    type: object
  DiagnosticsRef:
    description: Reference to sinks in DiagnosticsDescription.
    properties:
      enabled:
        description: Status of whether or not sinks are enabled.
        type: boolean
      sinkRefs:
        description: List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
        items:
          type: string
        type: array
    type: object
  DiagnosticsSinkKind:
    description: The kind of DiagnosticsSink.
    enum:
      - Invalid
      - AzureInternalMonitoringPipeline
    type: string
    x-ms-enum:
      modelAsString: true
      name: DiagnosticsSinkKind
      values:
        - description: Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Diagnostics settings for Geneva.
          value: AzureInternalMonitoringPipeline
  DiagnosticsSinkProperties:
    description: Properties of a DiagnosticsSink.
    discriminator: kind
    properties:
      description:
        description: A description of the sink.
        type: string
      kind:
        $ref: '#/definitions/DiagnosticsSinkKind'
        description: The kind of DiagnosticsSink.
      name:
        description: Name of the sink. This value is referenced by DiagnosticsReferenceDescription
        type: string
    required:
      - kind
    type: object
  DoublePropertyValue:
    allOf:
      - $ref: '#/definitions/PropertyValue'
      - description: DoublePropertyValue
        type: object
    description: Describes a Service Fabric property value of type Double.
    properties:
      Data:
        description: The data of the property value.
        format: double
        type: number
    required:
      - Data
    x-ms-discriminator-value: Double
  EnableBackupDescription:
    description: Specifies the parameters needed to enable periodic backup.
    properties:
      BackupPolicyName:
        description: Name of the backup policy to be used for enabling periodic backups.
        type: string
    required:
      - BackupPolicyName
  EndpointProperties:
    description: Describes a container endpoint.
    properties:
      name:
        description: The name of the endpoint.
        type: string
      port:
        description: Port used by the container.
        type: integer
    required:
      - name
    type: object
  EnsureAvailabilitySafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: EnsureAvailabilitySafetyCheck
        type: object
    description: Safety check that waits to ensure the availability of the partition. It waits until there are replicas available such that bringing down this replica will not cause availability loss for the partition.
    x-ms-discriminator-value: EnsureAvailability
  EnsurePartitionQurumSafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: EnsurePartitionQurumSafetyCheck
        type: object
    description: Safety check that ensures that a quorum of replicas are not lost for a partition.
    x-ms-discriminator-value: EnsurePartitionQuorum
  EntityHealth:
    description: 'Health information common to all entities in the cluster. It contains the aggregated health state, health events and unhealthy evaluation.'
    properties:
      AggregatedHealthState:
        $ref: '#/definitions/HealthState'
        description: |-
          The HealthState representing the aggregated health state of the entity computed by Health Manager.
          The health evaluation of the entity reflects all events reported on the entity and its children (if any).
          The aggregation is done by applying the desired health policy.
      HealthEvents:
        description: The list of health events reported on the entity.
        items:
          $ref: '#/definitions/HealthEvent'
        type: array
      HealthStatistics:
        $ref: '#/definitions/HealthStatistics'
        description: Shows the health statistics for all children types of the queried entity.
      UnhealthyEvaluations:
        $ref: '#/definitions/UnhealthyEvaluations'
        description: The unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.
    type: object
  EntityHealthState:
    description: A base type for the health state of various entities in the cluster. It contains the aggregated health state.
    properties:
      AggregatedHealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
    type: object
  EntityHealthStateChunk:
    description: A base type for the health state chunk of various entities in the cluster. It contains the aggregated health state.
    properties:
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
    type: object
  EntityHealthStateChunkList:
    description: A base type for the list of health state chunks found in the cluster. It contains the total number of health states that match the input filters.
    properties:
      TotalCount:
        description: Total number of entity health state objects that match the specified filters from the cluster health chunk query description.
        format: int64
        type: integer
    type: object
  EntityKind:
    description: 'The entity type of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
    enum:
      - Invalid
      - Node
      - Partition
      - Service
      - Application
      - Replica
      - DeployedApplication
      - DeployedServicePackage
      - Cluster
    type: string
    x-ms-enum:
      modelAsString: true
      name: EntityKind
      values:
        - description: Indicates an invalid entity kind. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates the entity is a Service Fabric node. The value is 1.
          value: Node
        - description: Indicates the entity is a Service Fabric partition. The value is 2.
          value: Partition
        - description: Indicates the entity is a Service Fabric service. The value is 3.
          value: Service
        - description: Indicates the entity is a Service Fabric application. The value is 4.
          value: Application
        - description: Indicates the entity is a Service Fabric replica. The value is 5.
          value: Replica
        - description: Indicates the entity is a Service Fabric deployed application. The value is 6.
          value: DeployedApplication
        - description: Indicates the entity is a Service Fabric deployed service package. The value is 7.
          value: DeployedServicePackage
        - description: Indicates the entity is a Service Fabric cluster. The value is 8.
          value: Cluster
  EntityKindHealthStateCount:
    description: Represents health state count for entities of the specified entity kind.
    properties:
      EntityKind:
        $ref: '#/definitions/EntityKind'
        description: The entity kind for which health states are evaluated.
      HealthStateCount:
        $ref: '#/definitions/HealthStateCount'
        description: The health state count for the entities of the specified kind.
    type: object
  EntryPointStatus:
    description: Specifies the status of the code package entry point deployed on a Service Fabric node.
    enum:
      - Invalid
      - Pending
      - Starting
      - Started
      - Stopping
      - Stopped
    type: string
    x-ms-enum:
      modelAsString: true
      name: EntryPointStatus
      values:
        - description: Indicates status of entry point is not known or invalid. The value is 0.
          value: Invalid
        - description: Indicates the entry point is scheduled to be started. The value is 1.
          value: Pending
        - description: Indicates the entry point is being started. The value is 2.
          value: Starting
        - description: Indicates the entry point was started successfully and is running. The value is 3.
          value: Started
        - description: Indicates the entry point is being stopped. The value is 4.
          value: Stopping
        - description: Indicates the entry point is not running. The value is 5.
          value: Stopped
  EnvironmentVariable:
    description: Describes an environment variable for the container.
    properties:
      name:
        description: The name of the environment variable.
        type: string
      value:
        description: The value of the environment variable.
        type: string
    type: object
  Epoch:
    description: 'An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.'
    properties:
      ConfigurationVersion:
        description: The current configuration number of this Epoch. The configuration number is an increasing value that is updated whenever the configuration of this replica set changes.
        type: string
      DataLossVersion:
        description: 'The current data loss number of this Epoch. The data loss number property is an increasing value which is updated whenever data loss is suspected, as when loss of a quorum of replicas in the replica set that includes the Primary replica.'
        type: string
    type: object
  EventHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: EventHealthEvaluation
        properties:
          ConsiderWarningAsError:
            description: Indicates whether warnings are treated with the same severity as errors. The field is specified in the health policy used to evaluate the entity.
            type: boolean
          UnhealthyEvent:
            $ref: '#/definitions/HealthEvent'
            description: 'Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.'
        type: object
    description: |-
      Represents health evaluation of a HealthEvent that was reported on the entity.
      The health evaluation is returned when evaluating health of an entity results in Error or Warning.
    x-ms-discriminator-value: Event
  EventList:
    description: A list of FabricEvent objects.
    items:
      $ref: '#/definitions/FabricEvent'
    type: array
  ExecutingFaultsChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: ExecutingFaultsChaosEvent
        properties:
          Faults:
            description: List of string description of the faults that Chaos decided to execute in an iteration.
            items:
              type: string
            type: array
        type: object
    description: Describes a Chaos event that gets generated when Chaos has decided on the faults for an iteration. This Chaos event contains the details of the faults as a list of strings.
    x-ms-discriminator-value: ExecutingFaults
  ExternalStoreProvisionApplicationTypeDescription:
    allOf:
      - $ref: '#/definitions/ProvisionApplicationTypeDescriptionBase'
      - description: ExternalStoreProvisionApplicationTypeDescription
        properties:
          ApplicationPackageDownloadUri:
            description: 'The path to the ''.sfpkg'' application package from where the application package can be downloaded using HTTP or HTTPS protocols. The application package can be stored in an external store that provides GET operation to download the file. Supported protocols are HTTP and HTTPS, and the path must allow READ access.'
            type: string
          ApplicationTypeName:
            description: The application type name represents the name of the application type found in the application manifest.
            type: string
          ApplicationTypeVersion:
            description: The application type version represents the version of the application type found in the application manifest.
            type: string
        type: object
    description: Describes the operation to register or provision an application type using an application package from an external store instead of a package uploaded to the Service Fabric image store.
    required:
      - ApplicationPackageDownloadUri
      - ApplicationTypeName
      - ApplicationTypeVersion
    x-ms-discriminator-value: ExternalStore
  FabricCodeVersionInfo:
    description: Information about a Service Fabric code version.
    properties:
      CodeVersion:
        description: The product version of Service Fabric.
        type: string
    type: object
  FabricCodeVersionInfoList:
    description: List of all Service Fabric code versions.
    items:
      $ref: '#/definitions/FabricCodeVersionInfo'
    type: array
  FabricConfigVersionInfo:
    description: Information about a Service Fabric config version.
    properties:
      ConfigVersion:
        description: The config version of Service Fabric.
        type: string
    type: object
  FabricConfigVersionInfoList:
    description: List of all Service Fabric config versions.
    items:
      $ref: '#/definitions/FabricConfigVersionInfo'
    type: array
  FabricError:
    description: The REST API operations for Service Fabric return standard HTTP status codes. This type defines the additional information returned from the Service Fabric API operations that are not successful.
    properties:
      Error:
        $ref: '#/definitions/FabricErrorError'
        description: Error object containing error code and error message.
    required:
      - Error
    type: object
  FabricErrorCodes:
    description: |-
      Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

        - Possible values of the error code for HTTP status code 400 (Bad Request)
          - "FABRIC_E_INVALID_PARTITION_KEY"
          - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_ADDRESS"
          - "FABRIC_E_APPLICATION_NOT_UPGRADING"
          - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_FABRIC_NOT_UPGRADING"
          - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
          - "FABRIC_E_INVALID_CONFIGURATION"
          - "FABRIC_E_INVALID_NAME_URI"
          - "FABRIC_E_PATH_TOO_LONG"
          - "FABRIC_E_KEY_TOO_LARGE"
          - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
          - "FABRIC_E_INVALID_ATOMIC_GROUP"
          - "FABRIC_E_VALUE_EMPTY"
          - "FABRIC_E_BACKUP_IS_ENABLED"
          - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
          - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
          - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
          - "E_INVALIDARG"

        - Possible values of the error code for HTTP status code 404 (Not Found)
          - "FABRIC_E_NODE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
          - "FABRIC_E_APPLICATION_NOT_FOUND"
          - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
          - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
          - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
          - "FABRIC_E_PARTITION_NOT_FOUND"
          - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
          - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
          - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
          - "FABRIC_E_DIRECTORY_NOT_FOUND"
          - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
          - "FABRIC_E_FILE_NOT_FOUND"
          - "FABRIC_E_NAME_DOES_NOT_EXIST"
          - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
          - "FABRIC_E_ENUMERATION_COMPLETED"
          - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
          - "FABRIC_E_KEY_NOT_FOUND"
          - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
          - "FABRIC_E_BACKUP_NOT_ENABLED"
          - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
          - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

        - Possible values of the error code for HTTP status code 409 (Conflict)
          - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
          - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_SERVICE_ALREADY_EXISTS"
          - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
          - "FABRIC_E_APPLICATION_TYPE_IN_USE"
          - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
          - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
          - "FABRIC_E_FABRIC_VERSION_IN_USE"
          - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
          - "FABRIC_E_NAME_ALREADY_EXISTS"
          - "FABRIC_E_NAME_NOT_EMPTY"
          - "FABRIC_E_PROPERTY_CHECK_FAILED"
          - "FABRIC_E_SERVICE_METADATA_MISMATCH"
          - "FABRIC_E_SERVICE_TYPE_MISMATCH"
          - "FABRIC_E_HEALTH_STALE_REPORT"
          - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
          - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
          - "FABRIC_E_INSTANCE_ID_MISMATCH"
          - "FABRIC_E_BACKUP_IN_PROGRESS"
          - "FABRIC_E_RESTORE_IN_PROGRESS"
          - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

        - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 500 (Internal Server Error)
          - "FABRIC_E_NODE_IS_UP"
          - "E_FAIL"
          - "FABRIC_E_SINGLE_INSTANCE_APPLICATION_ALREADY_EXISTS"
          - "FABRIC_E_SINGLE_INSTANCE_APPLICATION_NOT_FOUND"
          - "FABRIC_E_VOLUME_ALREADY_EXISTS"
          - "FABRIC_E_VOLUME_NOT_FOUND"
          - "SerializationError"

        - Possible values of the error code for HTTP status code 503 (Service Unavailable)
          - "FABRIC_E_NO_WRITE_QUORUM"
          - "FABRIC_E_NOT_PRIMARY"
          - "FABRIC_E_NOT_READY"
          - "FABRIC_E_RECONFIGURATION_PENDING"
          - "FABRIC_E_SERVICE_OFFLINE"
          - "E_ABORT"
          - "FABRIC_E_VALUE_TOO_LARGE"

        - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
          - "FABRIC_E_COMMUNICATION_ERROR"
          - "FABRIC_E_OPERATION_NOT_COMPLETE"
          - "FABRIC_E_TIMEOUT"
    enum:
      - FABRIC_E_INVALID_PARTITION_KEY
      - FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
      - FABRIC_E_INVALID_ADDRESS
      - FABRIC_E_APPLICATION_NOT_UPGRADING
      - FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
      - FABRIC_E_FABRIC_NOT_UPGRADING
      - FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
      - FABRIC_E_INVALID_CONFIGURATION
      - FABRIC_E_INVALID_NAME_URI
      - FABRIC_E_PATH_TOO_LONG
      - FABRIC_E_KEY_TOO_LARGE
      - FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
      - FABRIC_E_INVALID_ATOMIC_GROUP
      - FABRIC_E_VALUE_EMPTY
      - FABRIC_E_NODE_NOT_FOUND
      - FABRIC_E_APPLICATION_TYPE_NOT_FOUND
      - FABRIC_E_APPLICATION_NOT_FOUND
      - FABRIC_E_SERVICE_TYPE_NOT_FOUND
      - FABRIC_E_SERVICE_DOES_NOT_EXIST
      - FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
      - FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
      - FABRIC_E_PARTITION_NOT_FOUND
      - FABRIC_E_REPLICA_DOES_NOT_EXIST
      - FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
      - FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
      - FABRIC_E_DIRECTORY_NOT_FOUND
      - FABRIC_E_FABRIC_VERSION_NOT_FOUND
      - FABRIC_E_FILE_NOT_FOUND
      - FABRIC_E_NAME_DOES_NOT_EXIST
      - FABRIC_E_PROPERTY_DOES_NOT_EXIST
      - FABRIC_E_ENUMERATION_COMPLETED
      - FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
      - FABRIC_E_KEY_NOT_FOUND
      - FABRIC_E_HEALTH_ENTITY_NOT_FOUND
      - FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
      - FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
      - FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
      - FABRIC_E_SERVICE_ALREADY_EXISTS
      - FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
      - FABRIC_E_APPLICATION_TYPE_IN_USE
      - FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
      - FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
      - FABRIC_E_FABRIC_VERSION_IN_USE
      - FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
      - FABRIC_E_NAME_ALREADY_EXISTS
      - FABRIC_E_NAME_NOT_EMPTY
      - FABRIC_E_PROPERTY_CHECK_FAILED
      - FABRIC_E_SERVICE_METADATA_MISMATCH
      - FABRIC_E_SERVICE_TYPE_MISMATCH
      - FABRIC_E_HEALTH_STALE_REPORT
      - FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
      - FABRIC_E_NODE_HAS_NOT_STOPPED_YET
      - FABRIC_E_INSTANCE_ID_MISMATCH
      - FABRIC_E_VALUE_TOO_LARGE
      - FABRIC_E_NO_WRITE_QUORUM
      - FABRIC_E_NOT_PRIMARY
      - FABRIC_E_NOT_READY
      - FABRIC_E_RECONFIGURATION_PENDING
      - FABRIC_E_SERVICE_OFFLINE
      - E_ABORT
      - FABRIC_E_COMMUNICATION_ERROR
      - FABRIC_E_OPERATION_NOT_COMPLETE
      - FABRIC_E_TIMEOUT
      - FABRIC_E_NODE_IS_UP
      - E_FAIL
      - FABRIC_E_BACKUP_IS_ENABLED
      - FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH
      - FABRIC_E_INVALID_FOR_STATELESS_SERVICES
      - FABRIC_E_BACKUP_NOT_ENABLED
      - FABRIC_E_BACKUP_POLICY_NOT_EXISTING
      - FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING
      - FABRIC_E_BACKUP_IN_PROGRESS
      - FABRIC_E_RESTORE_IN_PROGRESS
      - FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING
      - FABRIC_E_INVALID_SERVICE_SCALING_POLICY
      - E_INVALIDARG
      - FABRIC_E_SINGLE_INSTANCE_APPLICATION_ALREADY_EXISTS
      - FABRIC_E_SINGLE_INSTANCE_APPLICATION_NOT_FOUND
      - FABRIC_E_VOLUME_ALREADY_EXISTS
      - FABRIC_E_VOLUME_NOT_FOUND
      - SerializationError
    type: string
    x-ms-enum:
      modelAsString: true
      name: FabricErrorCodes
      values:
        - value: FABRIC_E_INVALID_PARTITION_KEY
        - value: FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR
        - value: FABRIC_E_INVALID_ADDRESS
        - value: FABRIC_E_APPLICATION_NOT_UPGRADING
        - value: FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR
        - value: FABRIC_E_FABRIC_NOT_UPGRADING
        - value: FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR
        - value: FABRIC_E_INVALID_CONFIGURATION
        - value: FABRIC_E_INVALID_NAME_URI
        - value: FABRIC_E_PATH_TOO_LONG
        - value: FABRIC_E_KEY_TOO_LARGE
        - value: FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED
        - value: FABRIC_E_INVALID_ATOMIC_GROUP
        - value: FABRIC_E_VALUE_EMPTY
        - value: FABRIC_E_NODE_NOT_FOUND
        - value: FABRIC_E_APPLICATION_TYPE_NOT_FOUND
        - value: FABRIC_E_APPLICATION_NOT_FOUND
        - value: FABRIC_E_SERVICE_TYPE_NOT_FOUND
        - value: FABRIC_E_SERVICE_DOES_NOT_EXIST
        - value: FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND
        - value: FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND
        - value: FABRIC_E_PARTITION_NOT_FOUND
        - value: FABRIC_E_REPLICA_DOES_NOT_EXIST
        - value: FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST
        - value: FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND
        - value: FABRIC_E_DIRECTORY_NOT_FOUND
        - value: FABRIC_E_FABRIC_VERSION_NOT_FOUND
        - value: FABRIC_E_FILE_NOT_FOUND
        - value: FABRIC_E_NAME_DOES_NOT_EXIST
        - value: FABRIC_E_PROPERTY_DOES_NOT_EXIST
        - value: FABRIC_E_ENUMERATION_COMPLETED
        - value: FABRIC_E_SERVICE_MANIFEST_NOT_FOUND
        - value: FABRIC_E_KEY_NOT_FOUND
        - value: FABRIC_E_HEALTH_ENTITY_NOT_FOUND
        - value: FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS
        - value: FABRIC_E_APPLICATION_ALREADY_EXISTS
        - value: FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION
        - value: FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS
        - value: FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS
        - value: FABRIC_E_SERVICE_ALREADY_EXISTS
        - value: FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS
        - value: FABRIC_E_APPLICATION_TYPE_IN_USE
        - value: FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION
        - value: FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS
        - value: FABRIC_E_FABRIC_VERSION_IN_USE
        - value: FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS
        - value: FABRIC_E_NAME_ALREADY_EXISTS
        - value: FABRIC_E_NAME_NOT_EMPTY
        - value: FABRIC_E_PROPERTY_CHECK_FAILED
        - value: FABRIC_E_SERVICE_METADATA_MISMATCH
        - value: FABRIC_E_SERVICE_TYPE_MISMATCH
        - value: FABRIC_E_HEALTH_STALE_REPORT
        - value: FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED
        - value: FABRIC_E_NODE_HAS_NOT_STOPPED_YET
        - value: FABRIC_E_INSTANCE_ID_MISMATCH
        - value: FABRIC_E_VALUE_TOO_LARGE
        - value: FABRIC_E_NO_WRITE_QUORUM
        - value: FABRIC_E_NOT_PRIMARY
        - value: FABRIC_E_NOT_READY
        - value: FABRIC_E_RECONFIGURATION_PENDING
        - value: FABRIC_E_SERVICE_OFFLINE
        - value: E_ABORT
        - value: FABRIC_E_COMMUNICATION_ERROR
        - value: FABRIC_E_OPERATION_NOT_COMPLETE
        - value: FABRIC_E_TIMEOUT
        - value: FABRIC_E_NODE_IS_UP
        - value: E_FAIL
        - value: FABRIC_E_BACKUP_IS_ENABLED
        - value: FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH
        - value: FABRIC_E_INVALID_FOR_STATELESS_SERVICES
        - value: FABRIC_E_BACKUP_NOT_ENABLED
        - value: FABRIC_E_BACKUP_POLICY_NOT_EXISTING
        - value: FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING
        - value: FABRIC_E_BACKUP_IN_PROGRESS
        - value: FABRIC_E_RESTORE_IN_PROGRESS
        - value: FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING
        - value: FABRIC_E_INVALID_SERVICE_SCALING_POLICY
        - value: E_INVALIDARG
        - value: FABRIC_E_SINGLE_INSTANCE_APPLICATION_ALREADY_EXISTS
        - value: FABRIC_E_SINGLE_INSTANCE_APPLICATION_NOT_FOUND
        - value: FABRIC_E_VOLUME_ALREADY_EXISTS
        - value: FABRIC_E_VOLUME_NOT_FOUND
        - value: SerializationError
  FabricErrorError:
    description: Error object containing error code and error message.
    properties:
      Code:
        $ref: '#/definitions/FabricErrorCodes'
        description: |-
          Defines the fabric error codes that be returned as part of the error object in response to Service Fabric API operations that are not successful. Following are the error code values that can be returned for a specific HTTP status code.

            - Possible values of the error code for HTTP status code 400 (Bad Request)
              - "FABRIC_E_INVALID_PARTITION_KEY"
              - "FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR"
              - "FABRIC_E_INVALID_ADDRESS"
              - "FABRIC_E_APPLICATION_NOT_UPGRADING"
              - "FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR"
              - "FABRIC_E_FABRIC_NOT_UPGRADING"
              - "FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR"
              - "FABRIC_E_INVALID_CONFIGURATION"
              - "FABRIC_E_INVALID_NAME_URI"
              - "FABRIC_E_PATH_TOO_LONG"
              - "FABRIC_E_KEY_TOO_LARGE"
              - "FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED"
              - "FABRIC_E_INVALID_ATOMIC_GROUP"
              - "FABRIC_E_VALUE_EMPTY"
              - "FABRIC_E_BACKUP_IS_ENABLED"
              - "FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH"
              - "FABRIC_E_INVALID_FOR_STATELESS_SERVICES"
              - "FABRIC_E_INVALID_SERVICE_SCALING_POLICY"
              - "E_INVALIDARG"

            - Possible values of the error code for HTTP status code 404 (Not Found)
              - "FABRIC_E_NODE_NOT_FOUND"
              - "FABRIC_E_APPLICATION_TYPE_NOT_FOUND"
              - "FABRIC_E_APPLICATION_NOT_FOUND"
              - "FABRIC_E_SERVICE_TYPE_NOT_FOUND"
              - "FABRIC_E_SERVICE_DOES_NOT_EXIST"
              - "FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND"
              - "FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND"
              - "FABRIC_E_PARTITION_NOT_FOUND"
              - "FABRIC_E_REPLICA_DOES_NOT_EXIST"
              - "FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST"
              - "FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND"
              - "FABRIC_E_DIRECTORY_NOT_FOUND"
              - "FABRIC_E_FABRIC_VERSION_NOT_FOUND"
              - "FABRIC_E_FILE_NOT_FOUND"
              - "FABRIC_E_NAME_DOES_NOT_EXIST"
              - "FABRIC_E_PROPERTY_DOES_NOT_EXIST"
              - "FABRIC_E_ENUMERATION_COMPLETED"
              - "FABRIC_E_SERVICE_MANIFEST_NOT_FOUND"
              - "FABRIC_E_KEY_NOT_FOUND"
              - "FABRIC_E_HEALTH_ENTITY_NOT_FOUND"
              - "FABRIC_E_BACKUP_NOT_ENABLED"
              - "FABRIC_E_BACKUP_POLICY_NOT_EXISTING"
              - "FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_EXISTING"

            - Possible values of the error code for HTTP status code 409 (Conflict)
              - "FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS"
              - "FABRIC_E_APPLICATION_ALREADY_EXISTS"
              - "FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION"
              - "FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS"
              - "FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS"
              - "FABRIC_E_SERVICE_ALREADY_EXISTS"
              - "FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS"
              - "FABRIC_E_APPLICATION_TYPE_IN_USE"
              - "FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION"
              - "FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS"
              - "FABRIC_E_FABRIC_VERSION_IN_USE"
              - "FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS"
              - "FABRIC_E_NAME_ALREADY_EXISTS"
              - "FABRIC_E_NAME_NOT_EMPTY"
              - "FABRIC_E_PROPERTY_CHECK_FAILED"
              - "FABRIC_E_SERVICE_METADATA_MISMATCH"
              - "FABRIC_E_SERVICE_TYPE_MISMATCH"
              - "FABRIC_E_HEALTH_STALE_REPORT"
              - "FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED"
              - "FABRIC_E_NODE_HAS_NOT_STOPPED_YET"
              - "FABRIC_E_INSTANCE_ID_MISMATCH"
              - "FABRIC_E_BACKUP_IN_PROGRESS"
              - "FABRIC_E_RESTORE_IN_PROGRESS"
              - "FABRIC_E_BACKUP_POLICY_ALREADY_EXISTING"

            - Possible values of the error code for HTTP status code 413 (Request Entity Too Large)
              - "FABRIC_E_VALUE_TOO_LARGE"

            - Possible values of the error code for HTTP status code 500 (Internal Server Error)
              - "FABRIC_E_NODE_IS_UP"
              - "E_FAIL"
              - "FABRIC_E_SINGLE_INSTANCE_APPLICATION_ALREADY_EXISTS"
              - "FABRIC_E_SINGLE_INSTANCE_APPLICATION_NOT_FOUND"
              - "FABRIC_E_VOLUME_ALREADY_EXISTS"
              - "FABRIC_E_VOLUME_NOT_FOUND"
              - "SerializationError"

            - Possible values of the error code for HTTP status code 503 (Service Unavailable)
              - "FABRIC_E_NO_WRITE_QUORUM"
              - "FABRIC_E_NOT_PRIMARY"
              - "FABRIC_E_NOT_READY"
              - "FABRIC_E_RECONFIGURATION_PENDING"
              - "FABRIC_E_SERVICE_OFFLINE"
              - "E_ABORT"
              - "FABRIC_E_VALUE_TOO_LARGE"

            - Possible values of the error code for HTTP status code 504 (Gateway Timeout)
              - "FABRIC_E_COMMUNICATION_ERROR"
              - "FABRIC_E_OPERATION_NOT_COMPLETE"
              - "FABRIC_E_TIMEOUT"
      Message:
        description: Error message.
        type: string
    required:
      - Code
    type: object
  FabricEvent:
    description: Represents the base for all Fabric Events.
    discriminator: Kind
    properties:
      EventInstanceId:
        description: The identifier for the FabricEvent instance.
        format: uuid
        type: string
      HasCorrelatedEvents:
        description: Shows there is existing related events available.
        type: boolean
      Kind:
        $ref: '#/definitions/FabricEventKind'
        description: The kind of FabricEvent.
      TimeStamp:
        description: The time event was logged.
        format: date-time
        type: string
    required:
      - Kind
      - EventInstanceId
      - TimeStamp
    type: object
  FabricEventKind:
    description: The kind of FabricEvent.
    enum:
      - ClusterEvent
      - ContainerInstanceEvent
      - NodeEvent
      - ApplicationEvent
      - ServiceEvent
      - PartitionEvent
      - ReplicaEvent
      - PartitionAnalysisEvent
      - ApplicationCreated
      - ApplicationDeleted
      - ApplicationHealthReportCreated
      - ApplicationHealthReportExpired
      - ApplicationUpgradeComplete
      - ApplicationUpgradeDomainComplete
      - ApplicationUpgradeRollbackComplete
      - ApplicationUpgradeRollbackStart
      - ApplicationUpgradeStart
      - DeployedApplicationHealthReportCreated
      - DeployedApplicationHealthReportExpired
      - ProcessDeactivated
      - ContainerDeactivated
      - NodeAborted
      - NodeAborting
      - NodeAdded
      - NodeClose
      - NodeClosing
      - NodeDeactivateComplete
      - NodeDeactivateStart
      - NodeDown
      - NodeHealthReportCreated
      - NodeHealthReportExpired
      - NodeOpenedSuccess
      - NodeOpenFailed
      - NodeOpening
      - NodeRemoved
      - NodeUp
      - PartitionHealthReportCreated
      - PartitionHealthReportExpired
      - PartitionReconfigurationCompleted
      - PartitionPrimaryMoveAnalysis
      - ServiceCreated
      - ServiceDeleted
      - ServiceHealthReportCreated
      - ServiceHealthReportExpired
      - DeployedServiceHealthReportCreated
      - DeployedServiceHealthReportExpired
      - StatefulReplicaHealthReportCreated
      - StatefulReplicaHealthReportExpired
      - StatelessReplicaHealthReportCreated
      - StatelessReplicaHealthReportExpired
      - ClusterHealthReportCreated
      - ClusterHealthReportExpired
      - ClusterUpgradeComplete
      - ClusterUpgradeDomainComplete
      - ClusterUpgradeRollbackComplete
      - ClusterUpgradeRollbackStart
      - ClusterUpgradeStart
      - ChaosStopped
      - ChaosStarted
      - ChaosRestartNodeFaultCompleted
      - ChaosRestartCodePackageFaultScheduled
      - ChaosRestartCodePackageFaultCompleted
      - ChaosRemoveReplicaFaultScheduled
      - ChaosRemoveReplicaFaultCompleted
      - ChaosMoveSecondaryFaultScheduled
      - ChaosMovePrimaryFaultScheduled
      - ChaosRestartReplicaFaultScheduled
      - ChaosRestartNodeFaultScheduled
    type: string
    x-ms-enum:
      modelAsString: true
      name: FabricEventKind
      values:
        - value: ClusterEvent
        - value: ContainerInstanceEvent
        - value: NodeEvent
        - value: ApplicationEvent
        - value: ServiceEvent
        - value: PartitionEvent
        - value: ReplicaEvent
        - value: PartitionAnalysisEvent
        - value: ApplicationCreated
        - value: ApplicationDeleted
        - value: ApplicationHealthReportCreated
        - value: ApplicationHealthReportExpired
        - value: ApplicationUpgradeComplete
        - value: ApplicationUpgradeDomainComplete
        - value: ApplicationUpgradeRollbackComplete
        - value: ApplicationUpgradeRollbackStart
        - value: ApplicationUpgradeStart
        - value: DeployedApplicationHealthReportCreated
        - value: DeployedApplicationHealthReportExpired
        - value: ProcessDeactivated
        - value: ContainerDeactivated
        - value: NodeAborted
        - value: NodeAborting
        - value: NodeAdded
        - value: NodeClose
        - value: NodeClosing
        - value: NodeDeactivateComplete
        - value: NodeDeactivateStart
        - value: NodeDown
        - value: NodeHealthReportCreated
        - value: NodeHealthReportExpired
        - value: NodeOpenedSuccess
        - value: NodeOpenFailed
        - value: NodeOpening
        - value: NodeRemoved
        - value: NodeUp
        - value: PartitionHealthReportCreated
        - value: PartitionHealthReportExpired
        - value: PartitionReconfigurationCompleted
        - value: PartitionPrimaryMoveAnalysis
        - value: ServiceCreated
        - value: ServiceDeleted
        - value: ServiceHealthReportCreated
        - value: ServiceHealthReportExpired
        - value: DeployedServiceHealthReportCreated
        - value: DeployedServiceHealthReportExpired
        - value: StatefulReplicaHealthReportCreated
        - value: StatefulReplicaHealthReportExpired
        - value: StatelessReplicaHealthReportCreated
        - value: StatelessReplicaHealthReportExpired
        - value: ClusterHealthReportCreated
        - value: ClusterHealthReportExpired
        - value: ClusterUpgradeComplete
        - value: ClusterUpgradeDomainComplete
        - value: ClusterUpgradeRollbackComplete
        - value: ClusterUpgradeRollbackStart
        - value: ClusterUpgradeStart
        - value: ChaosStopped
        - value: ChaosStarted
        - value: ChaosRestartNodeFaultCompleted
        - value: ChaosRestartCodePackageFaultScheduled
        - value: ChaosRestartCodePackageFaultCompleted
        - value: ChaosRemoveReplicaFaultScheduled
        - value: ChaosRemoveReplicaFaultCompleted
        - value: ChaosMoveSecondaryFaultScheduled
        - value: ChaosMovePrimaryFaultScheduled
        - value: ChaosRestartReplicaFaultScheduled
        - value: ChaosRestartNodeFaultScheduled
  FabricName:
    description: 'The Service Fabric name, including the ''fabric:'' URI scheme.'
    type: string
  FabricReplicaStatus:
    description: Specifies the status of the replica.
    enum:
      - Invalid
      - Down
      - Up
    type: string
    x-ms-enum:
      modelAsString: true
      name: FabricReplicaStatus
      values:
        - description: Indicates that the read or write operation access status is not valid. This value is not returned to the caller.
          value: Invalid
        - description: Indicates that the replica is down.
          value: Down
        - description: Indicates that the replica is up.
          value: Up
  FailedPropertyBatchInfo:
    allOf:
      - $ref: '#/definitions/PropertyBatchInfo'
      - description: FailedPropertyBatchInfo
        type: object
    description: Derived from PropertyBatchInfo. Represents the property batch failing. Contains information about the specific batch failure.
    properties:
      ErrorMessage:
        description: The error message of the failed operation. Describes the exception thrown due to the first unsuccessful operation in the property batch.
        type: string
      OperationIndex:
        description: The index of the unsuccessful operation in the property batch.
        type: integer
    x-ms-discriminator-value: Failed
  FailedUpgradeDomainProgressObject:
    description: The detailed upgrade progress for nodes in the current upgrade domain at the point of failure.
    properties:
      DomainName:
        $ref: '#/definitions/UpgradeDomainName'
        description: The name of the upgrade domain
      NodeUpgradeProgressList:
        $ref: '#/definitions/NodeUpgradeProgressInfoList'
        description: List of upgrading nodes and their statuses
    type: object
  FailureAction:
    description: |-
      The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.
      Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically.
      Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
    enum:
      - Invalid
      - Rollback
      - Manual
    type: string
    x-ms-enum:
      modelAsString: true
      name: FailureAction
      values:
        - description: Indicates the failure action is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade will start rolling back automatically. The value is 1
          value: Rollback
        - description: The upgrade will switch to UnmonitoredManual upgrade mode. The value is 2
          value: Manual
  FailureReason:
    description: The cause of an upgrade failure that resulted in FailureAction being executed.
    enum:
      - None
      - Interrupted
      - HealthCheck
      - UpgradeDomainTimeout
      - OverallUpgradeTimeout
    type: string
    x-ms-enum:
      modelAsString: true
      name: FailureReason
      values:
        - description: Indicates the reason is invalid or unknown. All Service Fabric enumerations have the invalid type. The value is zero.
          value: None
        - description: There was an external request to roll back the upgrade. The value is 1
          value: Interrupted
        - description: The upgrade failed due to health policy violations. The value is 2
          value: HealthCheck
        - description: An upgrade domain took longer than the allowed upgrade domain timeout to process. The value is 3
          value: UpgradeDomainTimeout
        - description: The overall upgrade took longer than the allowed upgrade timeout to process. The value is 4
          value: OverallUpgradeTimeout
  FailureUpgradeDomainProgressInfo:
    description: Information about the upgrade domain progress at the time of upgrade failure.
    properties:
      DomainName:
        $ref: '#/definitions/UpgradeDomainName'
        description: The name of the upgrade domain
      NodeUpgradeProgressList:
        $ref: '#/definitions/NodeUpgradeProgressInfoList'
        description: List of upgrading nodes and their statuses
    type: object
  FileInfo:
    description: Information about a image store file.
    properties:
      FileSize:
        description: The size of file in bytes.
        type: string
      FileVersion:
        $ref: '#/definitions/FileVersion'
        description: Information about the version of image store file.
      ModifiedDate:
        description: The date and time when the image store file was last modified.
        format: date-time
        type: string
      StoreRelativePath:
        description: The file path relative to the image store root path.
        type: string
    type: object
  FileShareBackupStorageDescription:
    allOf:
      - $ref: '#/definitions/BackupStorageDescription'
      - type: object
      - description: FileShareBackupStorageDescription
    description: Describes the parameters for file share storage used for storing or enumerating backups.
    properties:
      Path:
        description: UNC path of the file share where to store or enumerate backups from.
        type: string
      PrimaryPassword:
        description: Primary password to access the share location.
        type: string
      PrimaryUserName:
        description: Primary user name to access the file share.
        type: string
      SecondaryPassword:
        description: Secondary password to access the share location
        type: string
      SecondaryUserName:
        description: Secondary user name to access the file share.
        type: string
    required:
      - Path
    type: object
    x-ms-discriminator-value: FileShare
  FileVersion:
    description: Information about the version of image store file.
    properties:
      EpochConfigurationNumber:
        description: The epoch configuration version number of the image store replica when this file entry was created or updated.
        type: string
      EpochDataLossNumber:
        description: The epoch data loss number of image store replica when this file entry was updated or created.
        type: string
      VersionNumber:
        description: The current image store version number for the file is used in image store for checking whether it need to be updated.
        type: string
    type: object
  FolderInfo:
    description: Information about a image store folder. It includes how many files this folder contains and its image store relative path.
    properties:
      FileCount:
        description: The number of files from within the image store folder.
        type: string
      StoreRelativePath:
        $ref: '#/definitions/ImageStoreRelativePath'
        description: The remote location within image store. This path is relative to the image store root.
    type: object
  ForceRestart:
    default: false
    description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
    type: boolean
  FrequencyBasedBackupScheduleDescription:
    allOf:
      - $ref: '#/definitions/BackupScheduleDescription'
      - type: object
      - description: FrequencyBasedBackupScheduleDescription
    description: Describes the frequency based backup schedule.
    properties:
      Interval:
        description: Defines the interval with which backups are periodically taken. It should be specified in ISO8601 format. Timespan in seconds is not supported and will be ignored while creating the policy.
        format: duration
        type: string
    required:
      - Interval
    type: object
    x-ms-discriminator-value: FrequencyBased
  GetBackupByStorageQueryDescription:
    description: 'Describes additional filters to be applied, while listing backups, and backup storage details from where to fetch the backups.'
    properties:
      BackupEntity:
        $ref: '#/definitions/BackupEntity'
        description: Indicates the entity for which to enumerate backups.
      EndDateTimeFilter:
        description: 'Specifies the end date time in ISO8601 till which to enumerate backups. If not specified, backups are enumerated till the end.'
        format: date-time
        type: string
      Latest:
        default: false
        description: 'If specified as true, gets the most recent backup (within the specified time range) for every partition under the specified backup entity.'
        type: boolean
      StartDateTimeFilter:
        description: 'Specifies the start date time in ISO8601 from which to enumerate backups. If not specified, backups are enumerated from the beginning.'
        format: date-time
        type: string
      Storage:
        $ref: '#/definitions/BackupStorageDescription'
        description: Describes the parameters for the backup storage from where to enumerate backups. This is optional and by default backups are enumerated from the backup storage where this backup entity is currently being backed up (as specified in backup policy). This parameter is useful to be able to enumerate backups from another cluster where you may intend to restore.
    required:
      - Storage
      - BackupEntity
    type: object
  GetPropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: GetPropertyBatchOperation
        type: object
    description: |-
      Represents a PropertyBatchOperation that gets the specified property if it exists.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    properties:
      IncludeValue:
        default: false
        description: |-
          Whether or not to return the property value with the metadata.
          True if values should be returned with the metadata; False to return only property metadata.
        type: boolean
    x-ms-discriminator-value: Get
  GuidPropertyValue:
    allOf:
      - $ref: '#/definitions/PropertyValue'
      - description: GuidPropertyValue
        type: object
    description: Describes a Service Fabric property value of type Guid.
    properties:
      Data:
        description: The data of the property value.
        format: uuid
        type: string
    required:
      - Data
    x-ms-discriminator-value: Guid
  HealthCheckRetryTimeout:
    default: PT0H10M0S
    description: 'The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  HealthCheckStableDuration:
    default: PT0H2M0S
    description: 'The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  HealthCheckWaitDuration:
    default: '0'
    description: 'The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  HealthEvaluation:
    description: Represents a health evaluation which describes the data and the algorithm used by health manager to evaluate the health of an entity.
    discriminator: Kind
    properties:
      AggregatedHealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Description:
        description: 'Description of the health evaluation, which represents a summary of the evaluation process.'
        type: string
      Kind:
        $ref: '#/definitions/HealthEvaluationKind'
        description: The health manager in the cluster performs health evaluations in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.
    required:
      - Kind
    type: object
  HealthEvaluationKind:
    description: The health manager in the cluster performs health evaluations in determining the aggregated health state of an entity. This enumeration provides information on the kind of evaluation that was performed. Following are the possible values.
    enum:
      - Invalid
      - Event
      - Replicas
      - Partitions
      - DeployedServicePackages
      - DeployedApplications
      - Services
      - Nodes
      - Applications
      - SystemApplication
      - UpgradeDomainDeployedApplications
      - UpgradeDomainNodes
      - Replica
      - Partition
      - DeployedServicePackage
      - DeployedApplication
      - Service
      - Node
      - Application
      - DeltaNodesCheck
      - UpgradeDomainDeltaNodesCheck
      - ApplicationTypeApplications
    type: string
    x-ms-enum:
      modelAsString: true
      name: HealthEvaluationKind
      values:
        - description: Indicates that the health evaluation is invalid. The value is zero.
          value: Invalid
        - description: Indicates that the health evaluation is for a health event. The value is 1.
          value: Event
        - description: Indicates that the health evaluation is for the replicas of a partition. The value is 2.
          value: Replicas
        - description: Indicates that the health evaluation is for the partitions of a service. The value is 3.
          value: Partitions
        - description: Indicates that the health evaluation is for the deployed service packages of a deployed application. The value is 4.
          value: DeployedServicePackages
        - description: Indicates that the health evaluation is for the deployed applications of an application. The value is 5.
          value: DeployedApplications
        - description: Indicates that the health evaluation is for services of an application. The value is 6.
          value: Services
        - description: Indicates that the health evaluation is for the cluster nodes. The value is 7.
          value: Nodes
        - description: Indicates that the health evaluation is for the cluster applications. The value is 8.
          value: Applications
        - description: Indicates that the health evaluation is for the system application. The value is 9.
          value: SystemApplication
        - description: Indicates that the health evaluation is for the deployed applications of an application in an upgrade domain. The value is 10.
          value: UpgradeDomainDeployedApplications
        - description: Indicates that the health evaluation is for the cluster nodes in an upgrade domain. The value is 11.
          value: UpgradeDomainNodes
        - description: Indicates that the health evaluation is for a replica. The value is 13.
          value: Replica
        - description: Indicates that the health evaluation is for a partition. The value is 14.
          value: Partition
        - description: Indicates that the health evaluation is for a deployed service package. The value is 16.
          value: DeployedServicePackage
        - description: Indicates that the health evaluation is for a deployed application. The value is 17.
          value: DeployedApplication
        - description: Indicates that the health evaluation is for a service. The value is 15.
          value: Service
        - description: Indicates that the health evaluation is for a node. The value is 12.
          value: Node
        - description: Indicates that the health evaluation is for an application. The value is 18.
          value: Application
        - description: Indicates that the health evaluation is for the delta of unhealthy cluster nodes. The value is 19.
          value: DeltaNodesCheck
        - description: Indicates that the health evaluation is for the delta of unhealthy upgrade domain cluster nodes. The value is 20.
          value: UpgradeDomainDeltaNodesCheck
        - description: – Indicates that the health evaluation is for applications of an application type. The value is 21.
          value: ApplicationTypeApplications
  HealthEvaluationWrapper:
    description: Wrapper object for health evaluation.
    properties:
      HealthEvaluation:
        $ref: '#/definitions/HealthEvaluation'
        description: Represents a health evaluation which describes the data and the algorithm used by health manager to evaluate the health of an entity.
    type: object
  HealthEvent:
    allOf:
      - $ref: '#/definitions/HealthInformation'
      - description: HealthEvent
        properties:
          IsExpired:
            description: 'Returns true if the health event is expired, otherwise false.'
            type: boolean
          LastErrorTransitionAt:
            description: |-
              If the current health state is 'Error', this property returns the time at which the health report was first reported with 'Error'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Error' health report was received.

              If the current health state is 'Ok' or 'Warning', returns the date and time at which the health state was last in 'Error', before transitioning to a different state.

              If the health state was never 'Error', the value will be zero date-time.
            format: date-time
            type: string
          LastModifiedUtcTimestamp:
            description: The date and time when the health report was last modified by the health store.
            format: date-time
            type: string
          LastOkTransitionAt:
            description: |-
              If the current health state is 'Ok', this property returns the time at which the health report was first reported with 'Ok'.
              For periodic reporting, many reports with the same state may have been generated.
              This property returns the date and time when the first 'Ok' health report was received.

              If the current health state is 'Error' or 'Warning', returns the date and time at which the health state was last in 'Ok', before transitioning to a different state.

              If the health state was never 'Ok', the value will be zero date-time.
            format: date-time
            type: string
          LastWarningTransitionAt:
            description: |-
              If the current health state is 'Warning', this property returns the time at which the health report was first reported with 'Warning'. For periodic reporting, many reports with the same state may have been generated however, this property returns only the date and time at the first 'Warning' health report was received.

              If the current health state is 'Ok' or 'Error', returns the date and time at which the health state was last in 'Warning', before transitioning to a different state.

              If the health state was never 'Warning', the value will be zero date-time.
            format: date-time
            type: string
          SourceUtcTimestamp:
            description: The date and time when the health report was sent by the source.
            format: date-time
            type: string
        type: object
    description: 'Represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.'
  HealthInformation:
    description: Represents common health report information. It is included in all health reports sent to health store and in all health events returned by health queries.
    properties:
      Description:
        description: |-
          The description of the health information. It represents free text used to add human readable information about the report.
          The maximum string length for the description is 4096 characters.
          If the provided string is longer, it will be automatically truncated.
          When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters.
          The presence of the marker indicates to users that truncation occurred.
          Note that when truncated, the description has less than 4096 characters from the original string.
        type: string
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Property:
        description: |-
          The property of the health information. An entity can have health reports for different properties.
          The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report.
          For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node,
          so it can report "AvailableDisk" property on that node.
          The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node.
          In the health store, these reports are treated as separate health events for the specified node.

          Together with the SourceId, the property uniquely identifies the health information.
        type: string
      RemoveWhenExpired:
        description: |-
          Value that indicates whether the report is removed from health store when it expires.
          If set to true, the report is removed from the health store after it expires.
          If set to false, the report is treated as an error when expired. The value of this property is false by default.
          When clients report periodically, they should set RemoveWhenExpired false (default).
          This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires.
          This flags the entity as being in Error health state.
        type: boolean
      SequenceNumber:
        description: |-
          The sequence number for this health report as a numeric string.
          The report sequence number is used by the health store to detect stale reports.
          If not specified, a sequence number is auto-generated by the health client when a report is added.
        type: string
      SourceId:
        description: The source name that identifies the client/watchdog/system component that generated the health information.
        type: string
      TimeToLiveInMilliSeconds:
        description: |-
          The duration for which this health report is valid. This field uses ISO8601 format for specifying the duration.
          When clients report periodically, they should send reports with higher frequency than time to live.
          If clients report on transition, they can set the time to live to infinite.
          When time to live expires, the health event that contains the health information
          is either removed from health store, if RemoveWhenExpired is true, or evaluated at error, if RemoveWhenExpired false.

          If not specified, time to live defaults to infinite value.
        format: duration
        type: string
    required:
      - SourceId
      - Property
      - HealthState
    type: object
  HealthState:
    description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
    enum:
      - Invalid
      - Ok
      - Warning
      - Error
      - Unknown
    type: string
    x-ms-enum:
      modelAsString: true
      name: HealthState
      values:
        - description: Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates the health state is okay. The value is 1.
          value: Ok
        - description: Indicates the health state is at a warning level. The value is 2.
          value: Warning
        - description: 'Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.'
          value: Error
        - description: Indicates an unknown health status. The value is 65535.
          value: Unknown
  HealthStateCount:
    description: 'Represents information about how many health entities are in Ok, Warning and Error health state.'
    properties:
      ErrorCount:
        description: The number of health entities with aggregated health state Error.
        format: int64
        minimum: 0
        type: integer
      OkCount:
        description: The number of health entities with aggregated health state Ok.
        format: int64
        minimum: 0
        type: integer
      WarningCount:
        description: The number of health entities with aggregated health state Warning.
        format: int64
        minimum: 0
        type: integer
    type: object
  HealthStatistics:
    description: |-
      The health statistics of an entity, returned as part of the health query result when the query description is configured to include statistics.
      The statistics include health state counts for all children types of the current entity.
      For example, for cluster, the health statistics include health state counts for nodes, applications, services, partitions, replicas, deployed applications and deployed service packages.
      For partition, the health statistics include health counts for replicas.
    properties:
      HealthStateCountList:
        description: 'List of health state counts per entity kind, which keeps track of how many children of the queried entity are in Ok, Warning and Error state.'
        items:
          $ref: '#/definitions/EntityKindHealthStateCount'
        type: array
    type: object
  HostIsolationMode:
    description: Specifies the isolation mode of main entry point of a code package when it's host type is ContainerHost. This is specified as part of container host policies in application manifest while importing service manifest.
    enum:
      - None
      - Process
      - HyperV
    type: string
    x-ms-enum:
      modelAsString: true
      name: HostIsolationMode
      values:
        - description: Indicates the isolation mode is not applicable for given HostType. The value is 0.
          value: None
        - description: This is the default isolation mode for a ContainerHost. The value is 1.
          value: Process
        - description: Indicates the ContainerHost is a Hyper-V container. This applies to only Windows containers. The value is 2.
          value: HyperV
  HostType:
    description: Specifies the type of host for main entry point of a code package as specified in service manifest.
    enum:
      - Invalid
      - ExeHost
      - ContainerHost
    type: string
    x-ms-enum:
      modelAsString: true
      name: HostType
      values:
        - description: Indicates the type of host is not known or invalid. The value is 0.
          value: Invalid
        - description: Indicates the host is an executable. The value is 1.
          value: ExeHost
        - description: Indicates the host is a container. The value is 2.
          value: ContainerHost
  ImageRegistryCredential:
    description: Image registry credential.
    properties:
      password:
        description: The password for the private registry.
        type: string
      server:
        description: 'Docker image registry server, without protocol such as `http` and `https`.'
        type: string
      username:
        description: The username for the private registry.
        type: string
    required:
      - server
      - username
    type: object
  ImageStoreContent:
    description: Information about the image store content.
    properties:
      StoreFiles:
        description: The list of image store file info objects represents files found under the given image store relative path.
        items:
          $ref: '#/definitions/FileInfo'
        type: array
      StoreFolders:
        description: The list of image store folder info objects represents subfolders found under the given image store relative path.
        items:
          $ref: '#/definitions/FolderInfo'
        type: array
    type: object
  ImageStoreCopyDescription:
    description: Information about how to copy image store content from one image store relative path to another image store relative path.
    properties:
      CheckMarkFile:
        description: 'Indicates whether to check mark file during copying. The property is true if checking mark file is required, false otherwise. The mark file is used to check whether the folder is well constructed. If the property is true and mark file does not exist, the copy is skipped.'
        type: boolean
      RemoteDestination:
        description: The relative path of destination image store content to be copied to.
        type: string
      RemoteSource:
        description: The relative path of source image store content to be copied from.
        type: string
      SkipFiles:
        description: The list of the file names to be skipped for copying.
        items:
          type: string
        type: array
    required:
      - RemoteSource
      - RemoteDestination
    type: object
  ImageStoreRelativePath:
    description: The remote location within image store. This path is relative to the image store root.
    type: string
  InfrastructureServiceResponse:
    description: |-
      This is a weakly-typed response stream to the client. It contains the JSON response from the infrastructure service without deserialization.
      The content of the response depends on which command was issued to the infrastructure service.
    format: binary
    type: string
  InstanceId:
    description: 'Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.'
    type: string
  Int64PropertyValue:
    allOf:
      - $ref: '#/definitions/PropertyValue'
      - description: Int64PropertyValue
        type: object
    description: Describes a Service Fabric property value of type Int64.
    properties:
      Data:
        description: The data of the property value.
        type: string
    required:
      - Data
    x-ms-discriminator-value: Int64
  Int64RangePartitionInformation:
    allOf:
      - $ref: '#/definitions/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
    description: Describes the partition information for the integer range that is based on partition schemes.
    properties:
      HighKey:
        description: Specifies the maximum key value handled by this partition.
        type: string
      LowKey:
        description: Specifies the minimum key value handled by this partition.
        type: string
    x-ms-discriminator-value: Int64Range
  InvokeDataLossResult:
    description: Represents information about an operation in a terminal state (Completed or Faulted).
    properties:
      ErrorCode:
        description: 'If OperationState is Completed, this is 0.  If OperationState is Faulted, this is an error code indicating the reason.'
        format: int32
        type: integer
      SelectedPartition:
        $ref: '#/definitions/SelectedPartition'
        description: This class returns information about the partition that the user-induced operation acted upon.
    type: object
  InvokeQuorumLossResult:
    description: Represents information about an operation in a terminal state (Completed or Faulted).
    properties:
      ErrorCode:
        description: 'If OperationState is Completed, this is 0.  If OperationState is Faulted, this is an error code indicating the reason.'
        format: int32
        type: integer
      SelectedPartition:
        $ref: '#/definitions/SelectedPartition'
        description: This class returns information about the partition that the user-induced operation acted upon.
    type: object
  KeyValueStoreReplicaStatus:
    allOf:
      - $ref: '#/definitions/ReplicaStatusBase'
      - description: KeyValueStoreReplicaStatus
        properties:
          CopyNotificationCurrentKeyFilter:
            description: Value indicating the latest key-prefix filter applied to enumeration during the callback. Null if there is no pending callback.
            type: string
          CopyNotificationCurrentProgress:
            description: Value indicating the latest number of keys enumerated during the callback. 0 if there is no pending callback.
            type: string
          DatabaseLogicalSizeEstimate:
            description: Value indicating the estimated size of the underlying database.
            type: string
          DatabaseRowCountEstimate:
            description: Value indicating the estimated number of rows in the underlying database.
            type: string
          StatusDetails:
            description: Value indicating the current status details of the replica.
            type: string
        type: object
    description: Key value store related information for the replica.
    x-ms-discriminator-value: KeyValueStore
  LoadMetricReport:
    description: 'Represents the load metric report which contains the time metric was reported, its name and value.'
    properties:
      LastReportedUtc:
        description: Gets the UTC time when the load was reported.
        format: date-time
        type: string
      Name:
        description: The name of the load metric.
        type: string
      Value:
        description: The value of the load metric.
        format: int32
        type: string
    type: object
  LoadMetricReportInfo:
    description: Information about load reported by replica.
    properties:
      LastReportedUtc:
        description: The UTC time when the load is reported.
        format: date-time
        type: string
      Name:
        description: The name of the metric.
        type: string
      Value:
        description: The value of the load for the metric..
        format: int32
        type: integer
    type: object
  LoadMetricReportInfoList:
    description: List of load reported by replica.
    items:
      $ref: '#/definitions/LoadMetricReportInfo'
    type: array
  MonitoringPolicyDescription:
    description: Describes the parameters for monitoring an upgrade in Monitored mode.
    properties:
      FailureAction:
        $ref: '#/definitions/FailureAction'
        description: |-
          The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.
          Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically.
          Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
      HealthCheckRetryTimeoutInMilliseconds:
        $ref: '#/definitions/HealthCheckRetryTimeout'
        description: 'The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      HealthCheckStableDurationInMilliseconds:
        $ref: '#/definitions/HealthCheckStableDuration'
        description: 'The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      HealthCheckWaitDurationInMilliseconds:
        $ref: '#/definitions/HealthCheckWaitDuration'
        description: 'The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      UpgradeDomainTimeoutInMilliseconds:
        $ref: '#/definitions/UpgradeDomainTimeout'
        description: 'The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      UpgradeTimeoutInMilliseconds:
        $ref: '#/definitions/UpgradeTimeout'
        description: 'The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: object
  MoveCost:
    description: Specifies the move cost for the service.
    enum:
      - Zero
      - Low
      - Medium
      - High
    type: string
    x-ms-enum:
      modelAsString: true
      name: MoveCost
      values:
        - description: Zero move cost. This value is zero.
          value: Zero
        - description: Specifies the move cost of the service as Low. The value is 1.
          value: Low
        - description: Specifies the move cost of the service as Medium. The value is 2.
          value: Medium
        - description: Specifies the move cost of the service as High. The value is 3.
          value: High
  NameDescription:
    description: Describes a Service Fabric name.
    properties:
      Name:
        $ref: '#/definitions/FabricName'
        description: 'The Service Fabric name, including the ''fabric:'' URI scheme.'
    required:
      - Name
    type: object
  NamedPartitionInformation:
    allOf:
      - $ref: '#/definitions/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
    description: Describes the partition information for the name as a string that is based on partition schemes.
    properties:
      Name:
        description: Name of the partition.
        type: string
    x-ms-discriminator-value: Named
  NamedPartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: NamedPartitionSchemeDescription
        type: object
    description: Describes the named partition scheme of the service.
    properties:
      Count:
        description: The number of partitions.
        type: integer
      Names:
        description: 'Array of size specified by the ‘Count’ parameter, for the names of the partitions.'
        items:
          type: string
        type: array
    required:
      - Count
      - Names
    x-ms-discriminator-value: Named
  NetworkRef:
    description: Describes a network reference in a service.
    properties:
      name:
        description: Name of the network.
        type: string
    type: object
  NextUpgradeDomain:
    description: The name of the next upgrade domain to be processed.
    type: string
  NodeAbortedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
        type: object
    description: Node Aborted event.
    x-ms-discriminator-value: NodeAborted
  NodeAbortingEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
        type: object
    description: Node Aborting event.
    x-ms-discriminator-value: NodeAborting
  NodeAddedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FabricVersion:
            description: Fabric version.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          NodeCapacities:
            description: Capacities.
            type: string
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeType:
            description: Type of Node.
            type: string
        required:
          - NodeId
          - NodeInstance
          - NodeType
          - FabricVersion
          - IpAddressOrFQDN
          - NodeCapacities
        type: object
    description: Node Added event.
    x-ms-discriminator-value: NodeAdded
  NodeCloseEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          Error:
            description: Describes error.
            type: string
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            type: string
        required:
          - NodeId
          - NodeInstance
          - Error
        type: object
    description: Node Close event.
    x-ms-discriminator-value: NodeClose
  NodeClosingEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
        type: object
    description: Node Closing event.
    x-ms-discriminator-value: NodeClosing
  NodeDeactivateCompleteEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          BatchIdsWithDeactivateIntent:
            description: Batch Ids.
            type: string
          EffectiveDeactivateIntent:
            description: Describes deactivate intent.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          StartTime:
            description: Start time.
            format: date-time
            type: string
        required:
          - NodeInstance
          - EffectiveDeactivateIntent
          - BatchIdsWithDeactivateIntent
          - StartTime
        type: object
    description: Node Deactivate Complete event.
    x-ms-discriminator-value: NodeDeactivateComplete
  NodeDeactivateStartEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          BatchId:
            description: Batch Id.
            type: string
          DeactivateIntent:
            description: Describes deactivate intent.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
        required:
          - NodeInstance
          - BatchId
          - DeactivateIntent
        type: object
    description: Node Deactivate Start event.
    x-ms-discriminator-value: NodeDeactivateStart
  NodeDeactivationInfo:
    description: Information about the node deactivation. This information is valid for a node that is undergoing deactivation or has already been deactivated.
    properties:
      NodeDeactivationIntent:
        $ref: '#/definitions/NodeDeactivationIntent'
        description: The intent or the reason for deactivating the node. Following are the possible values for it.
      NodeDeactivationStatus:
        $ref: '#/definitions/NodeDeactivationStatus'
        description: The status of node deactivation operation. Following are the possible values.
      NodeDeactivationTask:
        $ref: '#/definitions/NodeDeactivationTaskList'
        description: List of tasks representing the deactivation operation on the node.
      PendingSafetyChecks:
        $ref: '#/definitions/SafetyCheckInfoList'
        description: List of pending safety checks
    type: object
  NodeDeactivationIntent:
    description: The intent or the reason for deactivating the node. Following are the possible values for it.
    enum:
      - Invalid
      - Pause
      - Restart
      - RemoveData
      - RemoveNode
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeDeactivationIntent
      values:
        - description: Indicates the node deactivation intent is invalid. All Service Fabric enumerations have the invalid type. The value is zero. This value is not used.
          value: Invalid
        - description: Indicates that the node should be paused. The value is 1.
          value: Pause
        - description: 'Indicates that the intent is for the node to be restarted after a short period of time. Service Fabric does not restart the node, this action is done outside of Service Fabric. The value is 2.'
          value: Restart
        - description: 'Indicates that the intent is to reimage the node. Service Fabric does not reimage the node, this action is done outside of Service Fabric. The value is 3.'
          value: RemoveData
        - description: 'Indicates that the node is being decommissioned and is not expected to return. Service Fabric does not decommission the node, this action is done outside of Service Fabric. The value is 4.'
          value: RemoveNode
  NodeDeactivationStatus:
    description: The status of node deactivation operation. Following are the possible values.
    enum:
      - None
      - SafetyCheckInProgress
      - SafetyCheckComplete
      - Completed
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeDeactivationStatus
      values:
        - description: No status is associated with the task. The value is zero.
          value: None
        - description: When a node is deactivated Service Fabric performs checks to ensure that the operation is safe to proceed to ensure availability of the service and reliability of the state. This value indicates that one or more safety checks are in progress. The value is 1.
          value: SafetyCheckInProgress
        - description: When a node is deactivated Service Fabric performs checks to ensure that the operation is safe to proceed to ensure availability of the service and reliability of the state. This value indicates that all safety checks have been completed. The value is 2.
          value: SafetyCheckComplete
        - description: The task is completed. The value is 3.
          value: Completed
  NodeDeactivationTask:
    description: The task representing the deactivation operation on the node.
    properties:
      NodeDeactivationIntent:
        $ref: '#/definitions/NodeDeactivationIntent'
        description: The intent or the reason for deactivating the node. Following are the possible values for it.
      NodeDeactivationTaskId:
        $ref: '#/definitions/NodeDeactivationTaskId'
        description: Identity of the task related to deactivation operation on the node.
    type: object
  NodeDeactivationTaskId:
    description: Identity of the task related to deactivation operation on the node.
    properties:
      Id:
        description: Value of the task id.
        type: string
      NodeDeactivationTaskType:
        $ref: '#/definitions/NodeDeactivationTaskType'
        description: The type of the task that performed the node deactivation. Following are the possible values.
    type: object
  NodeDeactivationTaskList:
    description: List of tasks representing the deactivation operation on the node.
    items:
      $ref: '#/definitions/NodeDeactivationTask'
    type: array
  NodeDeactivationTaskType:
    description: The type of the task that performed the node deactivation. Following are the possible values.
    enum:
      - Invalid
      - Infrastructure
      - Repair
      - Client
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeDeactivationTaskType
      values:
        - description: Indicates the node deactivation task type is invalid. All Service Fabric enumerations have the invalid type. The value is zero. This value is not used.
          value: Invalid
        - description: Specifies the task created by Infrastructure hosting the nodes. The value is 1.
          value: Infrastructure
        - description: Specifies the task that was created by the Repair Manager service. The value is 2.
          value: Repair
        - description: Specifies that the task was created by using the public API. The value is 3.
          value: Client
  NodeDownEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          LastNodeUpAt:
            description: Time when Node was last up.
            format: date-time
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
        required:
          - NodeInstance
          - LastNodeUpAt
        type: object
    description: Node Down event.
    x-ms-discriminator-value: NodeDown
  NodeEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: NodeEvent
        properties:
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
        required:
          - NodeName
        type: object
    description: Represents the base for all Node Events.
    x-ms-discriminator-value: NodeEvent
  NodeEventList:
    description: A list of NodeEvent objects.
    items:
      $ref: '#/definitions/NodeEvent'
    type: array
  NodeHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: NodeHealth
        properties:
          Name:
            $ref: '#/definitions/NodeName'
            description: Name of the node whose health information is described by this object.
        type: object
    description: Information about the health of a Service Fabric node.
  NodeHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: NodeHealthEvaluation
        properties:
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the current aggregated health state of the node. The types of the unhealthy evaluations can be EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a node, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Node
  NodeHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeInstanceId:
            description: Id of Node instance.
            format: int64
            type: integer
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - NodeInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Node Health Report Created event.
    x-ms-discriminator-value: NodeHealthReportCreated
  NodeHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          NodeInstanceId:
            description: Id of Node instance.
            format: int64
            type: integer
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - NodeInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Node Health Report Expired event.
    x-ms-discriminator-value: NodeHealthReportExpired
  NodeHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: NodeHealthState
        properties:
          Id:
            $ref: '#/definitions/NodeId'
            description: An internal ID used by Service Fabric to uniquely identify a node. Node Id is deterministically generated from node name.
          Name:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
        type: object
    description: 'Represents the health state of a node, which contains the node identifier and its aggregated health state.'
  NodeHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: NodeHealthStateChunk
        properties:
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
        type: object
    description: 'Represents the health state chunk of a node, which contains the node name and its aggregated health state.'
  NodeHealthStateChunkList:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunkList'
      - description: NodeHealthStateChunkList
        properties:
          Items:
            description: The list of node health state chunks that respect the input filters in the chunk query.
            items:
              $ref: '#/definitions/NodeHealthStateChunk'
            type: array
        type: object
    description: The list of node health state chunks in the cluster that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    type: object
  NodeHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a node should be included in the returned cluster health chunk.
      One filter can match zero, one or multiple nodes, depending on its properties.
      Can be specified in the cluster health chunk query description.
    properties:
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the nodes. It allows selecting nodes if they match the desired health states.
          The possible values are integer value of one of the following health states. Only nodes that match the filter are returned. All nodes are used to evaluate the cluster aggregated health state.
          If not specified, default value is None, unless the node name is specified. If the filter has default value and node name is specified, the matching node is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches nodes with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      NodeNameFilter:
        description: |-
          Name of the node that matches the filter. The filter is applied only to the specified node, if it exists.
          If the node doesn't exist, no node is returned in the cluster health chunk based on this filter.
          If the node exists, it is included in the cluster health chunk if the health state matches the other filter properties.
          If not specified, all nodes that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        type: string
    type: object
  NodeId:
    description: An internal ID used by Service Fabric to uniquely identify a node. Node Id is deterministically generated from node name.
    properties:
      Id:
        description: Value of the node Id. This is a 128 bit integer.
        type: string
    type: object
  NodeIdList:
    description: A list of NodeIds.
    items:
      $ref: '#/definitions/NodeId'
    type: array
  NodeImpact:
    description: |-
      Describes the expected impact of a repair to a particular node.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      ImpactLevel:
        description: The level of impact expected.
        enum:
          - Invalid
          - None
          - Restart
          - RemoveData
          - RemoveNode
        type: string
        x-ms-enum:
          modelAsString: true
          name: ImpactLevel
          values:
            - value: Invalid
            - value: None
            - value: Restart
            - value: RemoveData
            - value: RemoveNode
      NodeName:
        description: The name of the impacted node.
        type: string
    required:
      - NodeName
    type: object
  NodeInfo:
    description: Information about a node in Service Fabric cluster.
    properties:
      CodeVersion:
        description: The version of Service Fabric binaries that the node is running.
        type: string
      ConfigVersion:
        description: The version of Service Fabric cluster manifest that the node is using.
        type: string
      FaultDomain:
        description: The fault domain of the node.
        type: string
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Id:
        $ref: '#/definitions/NodeId'
        description: An internal ID used by Service Fabric to uniquely identify a node. Node Id is deterministically generated from node name.
      InstanceId:
        description: 'The ID representing the node instance. While the ID of the node is deterministically generated from the node name and remains same across restarts, the InstanceId changes every time node restarts.'
        type: string
      IpAddressOrFQDN:
        description: The IP address or fully qualified domain name of the node.
        type: string
      IsSeedNode:
        description: 'Indicates if the node is a seed node or not. Returns true if the node is a seed node, otherwise false. A quorum of seed nodes are required for proper operation of Service Fabric cluster.'
        type: boolean
      IsStopped:
        description: 'Indicates if the node is stopped by calling stop node API or not. Returns true if the node is stopped, otherwise false.'
        type: boolean
      Name:
        $ref: '#/definitions/NodeName'
        description: The name of a Service Fabric node.
      NodeDeactivationInfo:
        $ref: '#/definitions/NodeDeactivationInfo'
        description: Information about the node deactivation. This information is valid for a node that is undergoing deactivation or has already been deactivated.
      NodeDownAt:
        description: Date time in UTC when the node went down. If node has never been down then this value will be zero date time.
        format: date-time
        type: string
      NodeDownTimeInSeconds:
        description: Time in seconds since the node has been in NodeStatus Down. Value zero indicates node is not NodeStatus Down.
        type: string
      NodeStatus:
        $ref: '#/definitions/NodeStatus'
        description: The status of the node.
      NodeUpAt:
        description: Date time in UTC when the node came up. If the node has never been up then this value will be zero date time.
        format: date-time
        type: string
      NodeUpTimeInSeconds:
        description: Time in seconds since the node has been in NodeStatus Up. Value zero indicates that the node is not Up.
        type: string
      Type:
        description: The type of the node.
        type: string
      UpgradeDomain:
        description: The upgrade domain of the node.
        type: string
    type: object
  NodeLoadInfo:
    description: Information about load on a Service Fabric node. It holds a summary of all metrics and their load on a node.
    properties:
      NodeLoadMetricInformation:
        description: List that contains metrics and their load information on this node.
        items:
          $ref: '#/definitions/NodeLoadMetricInformation'
        type: array
      NodeName:
        $ref: '#/definitions/NodeName'
        description: Name of the node for which the load information is provided by this object.
    type: object
  NodeLoadMetricInformation:
    description: Represents data structure that contains load information for a certain metric on a node.
    properties:
      IsCapacityViolation:
        description: Indicates if there is a capacity violation for this metric on the node.
        type: boolean
      Name:
        description: Name of the metric for which this load information is provided.
        type: string
      NodeBufferedCapacity:
        description: The value that indicates the reserved capacity for this metric on the node.
        type: string
      NodeCapacity:
        description: Total capacity on the node for this metric.
        type: string
      NodeLoad:
        description: Current load on the node for this metric.
        type: string
      NodeRemainingBufferedCapacity:
        description: The remaining reserved capacity for this metric on the node.
        type: string
      NodeRemainingCapacity:
        description: The remaining capacity on the node for this metric.
        type: string
    type: object
  NodeName:
    description: The name of a Service Fabric node.
    type: string
  NodeOpenFailedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          Error:
            description: Describes the error.
            type: string
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
          - Error
        type: object
    description: Node Open Failed event.
    x-ms-discriminator-value: NodeOpenFailed
  NodeOpenedSuccessEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
        type: object
    description: Node Opened Success event.
    x-ms-discriminator-value: NodeOpenedSuccess
  NodeOpeningEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FaultDomain:
            description: Fault domain of Node.
            type: string
          Hostname:
            description: Name of Host.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          IsSeedNode:
            description: Indicates if it is seed node.
            type: boolean
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeVersion:
            description: Version of Node.
            type: string
          UpgradeDomain:
            description: Upgrade domain of Node.
            type: string
        required:
          - NodeInstance
          - NodeId
          - UpgradeDomain
          - FaultDomain
          - IpAddressOrFQDN
          - Hostname
          - IsSeedNode
          - NodeVersion
        type: object
    description: Node Opening event.
    x-ms-discriminator-value: NodeOpening
  NodeRemovedEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          FabricVersion:
            description: Fabric version.
            type: string
          IpAddressOrFQDN:
            description: IP address or FQDN.
            type: string
          NodeCapacities:
            description: Capacities.
            type: string
          NodeId:
            description: Id of Node.
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
          NodeType:
            description: Type of Node.
            type: string
        required:
          - NodeId
          - NodeInstance
          - NodeType
          - FabricVersion
          - IpAddressOrFQDN
          - NodeCapacities
        type: object
    description: Node Removed event.
    x-ms-discriminator-value: NodeRemoved
  NodeRepairImpactDescription:
    allOf:
      - $ref: '#/definitions/RepairImpactDescriptionBase'
      - description: NodeRepairImpactDescription
        properties:
          NodeImpactList:
            description: The list of nodes impacted by a repair action and their respective expected impact.
            items:
              $ref: '#/definitions/NodeImpact'
            type: array
        type: object
    description: |-
      Describes the expected impact of a repair on a set of nodes.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    x-ms-discriminator-value: Node
  NodeRepairTargetDescription:
    allOf:
      - $ref: '#/definitions/RepairTargetDescriptionBase'
      - description: NodeRepairTargetDescription
        properties:
          NodeNames:
            description: The list of nodes targeted by a repair action.
            items:
              type: string
            type: array
        type: object
    description: |-
      Describes the list of nodes targeted by a repair action.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    x-ms-discriminator-value: Node
  NodeResult:
    description: Contains information about a node that was targeted by a user-induced operation.
    properties:
      NodeInstanceId:
        description: The node instance id.
        type: string
      NodeName:
        $ref: '#/definitions/NodeName'
        description: The name of a Service Fabric node.
    type: object
  NodeStatus:
    description: The status of the node.
    enum:
      - Invalid
      - Up
      - Down
      - Enabling
      - Disabling
      - Disabled
      - Unknown
      - Removed
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeStatus
      values:
        - description: Indicates the node status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates the node is up. The value is 1.
          value: Up
        - description: Indicates the node is down. The value is 2.
          value: Down
        - description: Indicates the node is in process of being enabled. The value is 3.
          value: Enabling
        - description: Indicates the node is in the process of being disabled. The value is 4.
          value: Disabling
        - description: Indicates the node is disabled. The value is 5.
          value: Disabled
        - description: Indicates the node is unknown. A node would be in Unknown state if Service Fabric does not have authoritative information about that node. This can happen if the system learns about a node at runtime.The value is 6.
          value: Unknown
        - description: 'Indicates the node is removed. A node would be in Removed state if NodeStateRemoved API has been called for this node. In other words, Service Fabric has been informed that the persisted state on the node has been permanently lost. The value is 7.'
          value: Removed
  NodeTransitionProgress:
    description: |-
      Information about an NodeTransition operation.  This class contains an OperationState and a NodeTransitionResult.  The NodeTransitionResult is not valid until OperationState
      is Completed or Faulted.
    properties:
      NodeTransitionResult:
        $ref: '#/definitions/NodeTransitionResult'
        description: Represents information about an operation in a terminal state (Completed or Faulted).
      State:
        $ref: '#/definitions/OperationState'
        description: The state of the operation.
    type: object
  NodeTransitionResult:
    description: Represents information about an operation in a terminal state (Completed or Faulted).
    properties:
      ErrorCode:
        description: 'If OperationState is Completed, this is 0.  If OperationState is Faulted, this is an error code indicating the reason.'
        format: int32
        type: integer
      NodeResult:
        $ref: '#/definitions/NodeResult'
        description: Contains information about a node that was targeted by a user-induced operation.
    type: object
  NodeType:
    description: |-
      The type name of a Service Fabric node.
      Refer to the article [The relationship between Service Fabric node types and Virtual Machine Scale Sets](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-nodetypes) for more details.
    type: string
  NodeUpEvent:
    allOf:
      - $ref: '#/definitions/NodeEvent'
      - properties:
          LastNodeDownAt:
            description: Time when Node was last down.
            format: date-time
            type: string
          NodeInstance:
            description: Id of Node instance.
            format: int64
            type: integer
        required:
          - NodeInstance
          - LastNodeDownAt
        type: object
    description: Node Up event.
    x-ms-discriminator-value: NodeUp
  NodeUpgradePhase:
    description: The state of the upgrading node.
    enum:
      - Invalid
      - PreUpgradeSafetyCheck
      - Upgrading
      - PostUpgradeSafetyCheck
    type: string
    x-ms-enum:
      modelAsString: true
      name: NodeUpgradePhase
      values:
        - description: Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade has not started yet due to pending safety checks. The value is 1
          value: PreUpgradeSafetyCheck
        - description: The upgrade is in progress. The value is 2
          value: Upgrading
        - description: The upgrade has completed and post upgrade safety checks are being performed. The value is 3
          value: PostUpgradeSafetyCheck
  NodeUpgradeProgressInfo:
    description: Information about the upgrading node and its status
    properties:
      NodeName:
        $ref: '#/definitions/NodeName'
        description: The name of a Service Fabric node.
      PendingSafetyChecks:
        $ref: '#/definitions/SafetyCheckInfoList'
        description: List of pending safety checks
      UpgradePhase:
        $ref: '#/definitions/NodeUpgradePhase'
        description: The state of the upgrading node.
    type: object
  NodeUpgradeProgressInfoList:
    description: List of upgrading nodes and their statuses
    items:
      $ref: '#/definitions/NodeUpgradeProgressInfo'
    type: array
  NodesHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: NodesHealthEvaluation
        properties:
          MaxPercentUnhealthyNodes:
            description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes found in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy NodeHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for nodes, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Nodes
  OperationId:
    description: A GUID that identifies a call to this API.  This is also passed into the corresponding GetProgress API.
    format: uuid
    type: string
  OperationState:
    description: The state of the operation.
    enum:
      - Invalid
      - Running
      - RollingBack
      - Completed
      - Faulted
      - Cancelled
      - ForceCancelled
    type: string
    x-ms-enum:
      modelAsString: true
      name: OperationState
      values:
        - description: The operation state is invalid.
          value: Invalid
        - description: The operation is in progress.
          value: Running
        - description: 'The operation is rolling back internal system state because it encountered a fatal error or was cancelled by the user.  "RollingBack"     does not refer to user state.  For example, if CancelOperation is called on a command of type PartitionDataLoss, state of "RollingBack" does not mean service data is being restored (assuming the command has progressed far enough to cause data loss). It means the system is rolling back/cleaning up internal system state associated with the command.'
          value: RollingBack
        - description: The operation has completed successfully and is no longer running.
          value: Completed
        - description: The operation has failed and is no longer running.
          value: Faulted
        - description: 'The operation was cancelled by the user using CancelOperation, and is no longer running.'
          value: Cancelled
        - description: 'The operation was cancelled by the user using CancelOperation, with the force parameter set to true.  It is no longer running.  Refer to CancelOperation for more details.'
          value: ForceCancelled
  OperationStatus:
    description: 'Contains the OperationId, OperationState, and OperationType for user-induced operations.'
    properties:
      OperationId:
        $ref: '#/definitions/OperationId'
        description: A GUID that identifies a call to this API.  This is also passed into the corresponding GetProgress API.
      State:
        $ref: '#/definitions/OperationState'
        description: The state of the operation.
      Type:
        $ref: '#/definitions/OperationType'
        description: The type of the operation.
    type: object
  OperationStatusList:
    description: A list of OperationStatus objects.
    items:
      $ref: '#/definitions/OperationStatus'
    type: array
  OperationType:
    description: The type of the operation.
    enum:
      - Invalid
      - PartitionDataLoss
      - PartitionQuorumLoss
      - PartitionRestart
      - NodeTransition
    type: string
    x-ms-enum:
      modelAsString: true
      name: OperationType
      values:
        - description: The operation state is invalid.
          value: Invalid
        - description: An operation started using the StartDataLoss API.
          value: PartitionDataLoss
        - description: An operation started using the StartQuorumLoss API.
          value: PartitionQuorumLoss
        - description: An operation started using the StartPartitionRestart API.
          value: PartitionRestart
        - description: An operation started using the StartNodeTransition API.
          value: NodeTransition
  PackageSharingPolicyInfo:
    description: Represents a policy for the package sharing.
    properties:
      PackageSharingScope:
        $ref: '#/definitions/PackageSharingPolicyScope'
        description: Represents the scope for PackageSharingPolicy. This is specified during DeployServicePackageToNode operation.
      SharedPackageName:
        description: 'The name of code, configuration or data package that should be shared.'
        type: string
    type: object
  PackageSharingPolicyInfoList:
    description: List of package sharing policy information.
    items:
      $ref: '#/definitions/PackageSharingPolicyInfo'
    type: array
  PackageSharingPolicyScope:
    description: Represents the scope for PackageSharingPolicy. This is specified during DeployServicePackageToNode operation.
    enum:
      - None
      - All
      - Code
      - Config
      - Data
    type: string
    x-ms-enum:
      modelAsString: true
      name: PackageSharingPolicyScope
      values:
        - description: No package sharing policy scope. The value is 0.
          value: None
        - description: 'Share all code, config and data packages from corresponding service manifest. The value is 1.'
          value: All
        - description: Share all code packages from corresponding service manifest. The value is 2.
          value: Code
        - description: Share all config packages from corresponding service manifest. The value is 3.
          value: Config
        - description: Share all data packages from corresponding service manifest. The value is 4.
          value: Data
  PagedApplicationInfoList:
    description: The list of applications in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of application information.
        items:
          $ref: '#/definitions/ApplicationInfo'
        type: array
    type: object
  PagedApplicationTypeInfoList:
    description: The list of application types that are provisioned or being provisioned in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of application type information.
        items:
          $ref: '#/definitions/ApplicationTypeInfo'
        type: array
    type: object
  PagedBackupConfigurationInfoList:
    description: The list of backup configuration information. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of backup configuration information.
        items:
          $ref: '#/definitions/BackupConfigurationInfo'
        type: array
  PagedBackupEntityList:
    description: The list of backup entities that are being periodically backed. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of backup entity information.
        items:
          $ref: '#/definitions/BackupEntity'
        type: array
    type: object
  PagedBackupInfoList:
    description: The list of backups. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of backup information.
        items:
          $ref: '#/definitions/BackupInfo'
        type: array
    type: object
  PagedBackupPolicyDescriptionList:
    description: The list of backup policies configured in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: The list of backup policies information.
        items:
          $ref: '#/definitions/BackupPolicyDescription'
        type: array
    type: object
  PagedComposeDeploymentStatusInfoList:
    description: The list of compose deployments in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of compose deployment status information.
        items:
          $ref: '#/definitions/ComposeDeploymentStatusInfo'
        type: array
    type: object
  PagedDeployedApplicationInfoList:
    description: |-
      The list of deployed applications in activating, downloading, or active states on a node.
      The list is paged when all of the results cannot fit in a single message.
      The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of deployed application information.
        items:
          $ref: '#/definitions/DeployedApplicationInfo'
        type: array
    type: object
  PagedNodeInfoList:
    description: The list of nodes in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of node information.
        items:
          $ref: '#/definitions/NodeInfo'
        type: array
    type: object
  PagedPropertyInfoList:
    description: The paged list of Service Fabric properties under a given name. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      IsConsistent:
        description: 'Indicates whether any property under the given name has been modified during the enumeration. If there was a modification, this property value is false.'
        type: boolean
      Properties:
        description: List of property information.
        items:
          $ref: '#/definitions/PropertyInfo'
        type: array
    type: object
  PagedReplicaInfoList:
    description: The list of replicas in the cluster for a given partition. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of replica information.
        items:
          $ref: '#/definitions/ReplicaInfo'
        type: array
    type: object
  PagedServiceInfoList:
    description: The list of services in the cluster for an application. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of service information.
        items:
          $ref: '#/definitions/ServiceInfo'
        type: array
    type: object
  PagedServicePartitionInfoList:
    description: The list of partition in the cluster for a service. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of service partition information.
        items:
          $ref: '#/definitions/ServicePartitionInfo'
        type: array
    type: object
  PagedServiceResourceDescriptionList:
    description: The list of service resources in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of service resource description.
        items:
          $ref: '#/definitions/ServiceResourceDescription'
        type: array
    type: object
    x-sf-clientlib:
      SkipGeneration: 'true'
      TypeName: PagedData<ServiceResourceDescription>
  PagedServiceResourceReplicaDescriptionList:
    description: The list of service resources in the cluster. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      Items:
        description: List of service resource description.
        items:
          $ref: '#/definitions/ServiceResourceReplicaDescription'
        type: array
    type: object
    x-sf-clientlib:
      SkipGeneration: 'true'
      TypeName: PagedData<ServiceResourceReplicaDescription>
  PagedSubNameInfoList:
    description: A paged list of Service Fabric names. The list is paged when all of the results cannot fit in a single message. The next set of results can be obtained by executing the same query with the continuation token provided in this list.
    properties:
      ContinuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'The continuation token parameter is used to obtain next set of results. The continuation token is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results, then the continuation token is not included in the response.'
      IsConsistent:
        description: 'Indicates whether any name under the given name has been modified during the enumeration. If there was a modification, this property value is false.'
        type: boolean
      SubNames:
        description: List of the child names.
        items:
          $ref: '#/definitions/FabricName'
        type: array
    type: object
  PartitionAccessStatus:
    description: Specifies the access status of the partition.
    enum:
      - Invalid
      - Granted
      - ReconfigurationPending
      - NotPrimary
      - NoWriteQuorum
    type: string
    x-ms-enum:
      modelAsString: true
      name: PartitionAccessStatus
      values:
        - description: Indicates that the read or write operation access status is not valid. This value is not returned to the caller.
          value: Invalid
        - description: Indicates that the read or write operation access is granted and the operation is allowed.
          value: Granted
        - description: 'Indicates that the client should try again later, because a reconfiguration is in progress.'
          value: ReconfigurationPending
        - description: Indicates that this client request was received by a replica that is not a Primary replica.
          value: NotPrimary
        - description: 'Indicates that no write quorum is available and, therefore, no write operation can be accepted.'
          value: NoWriteQuorum
  PartitionAnalysisEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - description: PartitionAnalysisEvent
        properties:
          Metadata:
            $ref: '#/definitions/AnalysisEventMetadata'
            description: Metadata about an Analysis Event.
        required:
          - Metadata
        type: object
    description: Represents the base for all Partition Analysis Events.
    x-ms-discriminator-value: PartitionAnalysisEvent
  PartitionBackupConfigurationInfo:
    allOf:
      - $ref: '#/definitions/BackupConfigurationInfo'
      - description: Partition backup configuration info
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: 'The full name of the service with ''fabric:'' URI scheme.'
        type: object
    description: 'Backup configuration information, for a specific partition, specifying what backup policy is being applied and suspend description, if any.'
    x-ms-discriminator-value: Partition
  PartitionBackupEntity:
    allOf:
      - $ref: '#/definitions/BackupEntity'
      - description: PartitionBackupEntity
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: 'The full name of the service with ''fabric:'' URI scheme.'
        type: object
    description: Identifies the Service Fabric stateful partition which is being backed up.
    type: object
    x-ms-discriminator-value: Partition
  PartitionDataLossProgress:
    description: Information about a partition data loss user-induced operation.
    properties:
      InvokeDataLossResult:
        $ref: '#/definitions/InvokeDataLossResult'
        description: Represents information about an operation in a terminal state (Completed or Faulted).
      State:
        $ref: '#/definitions/OperationState'
        description: The state of the operation.
    type: object
  PartitionEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: PartitionEvent
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
        required:
          - PartitionId
        type: object
    description: Represents the base for all Partition Events.
    x-ms-discriminator-value: PartitionEvent
  PartitionEventList:
    description: A list of PartitionEvent objects.
    items:
      $ref: '#/definitions/PartitionEvent'
    type: array
  PartitionHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: PartitionHealth
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: ID of the partition whose health information is described by this object.
          ReplicaHealthStates:
            description: The list of replica health states associated with the partition.
            items:
              $ref: '#/definitions/ReplicaHealthState'
            type: array
        type: object
    description: Information about the health of a Service Fabric partition.
  PartitionHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: PartitionHealthEvaluation
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: Id of the partition whose health evaluation is described by this object.
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the current aggregated health state of the partition. The types of the unhealthy evaluations can be ReplicasHealthEvaluation or EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a partition, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Partition
  PartitionHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Partition Health Report Created event.
    x-ms-discriminator-value: PartitionHealthReportCreated
  PartitionHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Partition Health Report Expired event.
    x-ms-discriminator-value: PartitionHealthReportExpired
  PartitionHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: PartitionHealthState
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: Id of the partition whose health state is described by this object.
        type: object
    description: 'Represents the health state of a partition, which contains the partition identifier and its aggregated health state.'
  PartitionHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: PartitionHealthStateChunk
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: The Id of the partition.
          ReplicaHealthStateChunks:
            $ref: '#/definitions/ReplicaHealthStateChunkList'
            description: The list of replica health state chunks belonging to the partition that respect the filters in the cluster health chunk query description.
        type: object
    description: 'Represents the health state chunk of a partition, which contains the partition ID, its aggregated health state and any replicas that respect the filters in the cluster health chunk query description.'
  PartitionHealthStateChunkList:
    description: |-
      The list of partition health state chunks that respect the input filters in the chunk query description.
      Returned by get cluster health state chunks query as part of the parent application hierarchy.
    properties:
      Items:
        description: The list of partition health state chunks that respect the input filters in the chunk query.
        items:
          $ref: '#/definitions/PartitionHealthStateChunk'
        type: array
    type: object
  PartitionHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a partition should be included as a child of a service in the cluster health chunk.
      The partitions are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent service and application must be included in the cluster health chunk.
      One filter can match zero, one or multiple partitions, depending on its properties.
    properties:
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the partitions. It allows selecting partitions if they match the desired health states.
          The possible values are integer value of one of the following health states. Only partitions that match the filter are returned. All partitions are used to evaluate the cluster aggregated health state.
          If not specified, default value is None, unless the partition ID is specified. If the filter has default value and partition ID is specified, the matching partition is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches partitions with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      PartitionIdFilter:
        description: |-
          ID of the partition that matches the filter. The filter is applied only to the specified partition, if it exists.
          If the partition doesn't exist, no partition is returned in the cluster health chunk based on this filter.
          If the partition exists, it is included in the cluster health chunk if it respects the other filter properties.
          If not specified, all partitions that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        format: uuid
        type: string
      ReplicaFilters:
        description: |-
          Defines a list of filters that specify which replicas to be included in the returned cluster health chunk as children of the parent partition. The replicas are returned only if the parent partition matches a filter.
          If the list is empty, no replicas are returned. All the replicas are used to evaluate the parent partition aggregated health state, regardless of the input filters.
          The partition filter may specify multiple replica filters.
          For example, it can specify a filter to return all replicas with health state Error and another filter to always include a replica identified by its replica id.
        items:
          $ref: '#/definitions/ReplicaHealthStateFilter'
        type: array
    type: object
  PartitionId:
    description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
    format: uuid
    type: string
  PartitionInformation:
    description: 'Information about the partition identity, partitioning scheme and keys supported by it.'
    discriminator: ServicePartitionKind
    properties:
      Id:
        $ref: '#/definitions/PartitionId'
        description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
      ServicePartitionKind:
        $ref: '#/definitions/ServicePartitionKind'
        description: The kind of partitioning scheme used to partition the service.
    required:
      - ServicePartitionKind
    type: object
  PartitionInstanceCountScaleMechanism:
    allOf:
      - $ref: '#/definitions/ScalingMechanismDescription'
      - type: object
    description: Represents a scaling mechanism for adding or removing instances of stateless service partition.
    properties:
      MaxInstanceCount:
        description: Maximum number of instances of the partition.
        type: integer
      MinInstanceCount:
        description: Minimum number of instances of the partition.
        type: integer
      ScaleIncrement:
        description: The number of instances to add or remove during a scaling operation.
        type: integer
    required:
      - MinInstanceCount
      - MaxInstanceCount
      - ScaleIncrement
    x-ms-discriminator-value: PartitionInstanceCount
  PartitionLoadInformation:
    description: |-
      Represents load information for a partition, which contains the primary and secondary reported load metrics.
      In case there is no load reported, PartitionLoadInformation will contain the default load for the service of the partition.
      For default loads, LoadMetricReport's LastReportedUtc is set to 0.
    properties:
      PartitionId:
        $ref: '#/definitions/PartitionId'
        description: Id of the partition.
      PrimaryLoadMetricReports:
        description: Array of load reports from the primary replica for this partition.
        items:
          $ref: '#/definitions/LoadMetricReport'
        type: array
      SecondaryLoadMetricReports:
        description: |-
          Array of aggregated load reports from all secondary replicas for this partition.
          Array only contains the latest reported load for each metric.
        items:
          $ref: '#/definitions/LoadMetricReport'
        type: array
    type: object
  PartitionPrimaryMoveAnalysisEvent:
    allOf:
      - $ref: '#/definitions/PartitionAnalysisEvent'
      - properties:
          CurrentNode:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          MoveReason:
            description: Move reason.
            type: string
          PreviousNode:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          RelevantTraces:
            description: Relevant traces.
            type: string
          WhenMoveCompleted:
            description: Time when the move was completed.
            format: date-time
            type: string
        required:
          - WhenMoveCompleted
          - PreviousNode
          - CurrentNode
          - MoveReason
          - RelevantTraces
        type: object
    description: Partition Primary Move Analysis event.
    x-ms-discriminator-value: PartitionPrimaryMoveAnalysis
  PartitionQuorumLossProgress:
    description: Information about a partition quorum loss user-induced operation.
    properties:
      InvokeQuorumLossResult:
        $ref: '#/definitions/InvokeQuorumLossResult'
        description: Represents information about an operation in a terminal state (Completed or Faulted).
      State:
        $ref: '#/definitions/OperationState'
        description: The state of the operation.
    type: object
  PartitionReconfigurationCompletedEvent:
    allOf:
      - $ref: '#/definitions/PartitionEvent'
      - properties:
          CcEpochConfigVersion:
            description: CcEpochConfig version.
            format: int64
            type: integer
          CcEpochDataLossVersion:
            description: CcEpochDataLoss version.
            format: int64
            type: integer
          NodeInstanceId:
            description: Id of Node instance.
            type: string
          NodeName:
            $ref: '#/definitions/NodeName'
            description: The name of a Service Fabric node.
          Phase0DurationMs:
            description: Duration of Phase0 in milli-seconds.
            format: double
            type: number
          Phase1DurationMs:
            description: Duration of Phase1 in milli-seconds.
            format: double
            type: number
          Phase2DurationMs:
            description: Duration of Phase2 in milli-seconds.
            format: double
            type: number
          Phase3DurationMs:
            description: Duration of Phase3 in milli-seconds.
            format: double
            type: number
          Phase4DurationMs:
            description: Duration of Phase4 in milli-seconds.
            format: double
            type: number
          ReconfigType:
            description: Type of reconfiguration.
            type: string
          Result:
            description: Describes reconfiguration result.
            type: string
          ServiceType:
            description: Type of Service.
            type: string
          TotalDurationMs:
            description: Total duration in milli-seconds.
            format: double
            type: number
        required:
          - NodeName
          - NodeInstanceId
          - ServiceType
          - CcEpochDataLossVersion
          - CcEpochConfigVersion
          - ReconfigType
          - Result
          - Phase0DurationMs
          - Phase1DurationMs
          - Phase2DurationMs
          - Phase3DurationMs
          - Phase4DurationMs
          - TotalDurationMs
        type: object
    description: Partition Reconfiguration Completed event.
    x-ms-discriminator-value: PartitionReconfigurationCompleted
  PartitionRestartProgress:
    description: Information about a partition restart user-induced operation.
    properties:
      RestartPartitionResult:
        $ref: '#/definitions/RestartPartitionResult'
        description: Represents information about an operation in a terminal state (Completed or Faulted).
      State:
        $ref: '#/definitions/OperationState'
        description: The state of the operation.
    type: object
  PartitionSafetyCheck:
    allOf:
      - $ref: '#/definitions/SafetyCheck'
      - description: PartitionSafetyCheck
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: Id of the partition which is undergoing the safety check.
        type: object
    description: Represents a safety check for the service partition being performed by service fabric before continuing with operations.
  PartitionScheme:
    description: Enumerates the ways that a service can be partitioned.
    enum:
      - Invalid
      - Singleton
      - UniformInt64Range
      - Named
    type: string
    x-ms-enum:
      modelAsString: true
      name: PartitionScheme
      values:
        - description: Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: 'Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.'
          value: Singleton
        - description: 'Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.'
          value: UniformInt64Range
        - description: 'Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3'
          value: Named
  PartitionSchemeDescription:
    description: Describes how the service is partitioned.
    discriminator: PartitionScheme
    properties:
      PartitionScheme:
        $ref: '#/definitions/PartitionScheme'
        description: Specifies how the service is partitioned.
    required:
      - PartitionScheme
    type: object
  PartitionsHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: PartitionsHealthEvaluation
        properties:
          MaxPercentUnhealthyPartitionsPerService:
            description: Maximum allowed percentage of unhealthy partitions per service from the ServiceTypeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of partitions of the service from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy PartitionHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for the partitions of a service, containing health evaluations for each unhealthy partition that impacts current aggregated health state. Can be returned when evaluating service health and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Partitions
  PrimaryReplicatorStatus:
    allOf:
      - $ref: '#/definitions/ReplicatorStatus'
      - description: Status of the primary replicator.
        properties:
          RemoteReplicators:
            $ref: '#/definitions/RemoteReplicatorStatusList'
            description: The status of all the active and idle secondary replicators that the primary is aware of.
          ReplicationQueueStatus:
            $ref: '#/definitions/ReplicatorQueueStatus'
            description: Details about the replication queue on the primary replicator.
        type: object
    description: 'Provides statistics about the Service Fabric Replicator, when it is functioning in a Primary role.'
    type: object
    x-ms-discriminator-value: Primary
  ProcessDeactivatedEvent:
    allOf:
      - $ref: '#/definitions/ApplicationEvent'
      - properties:
          CodePackageName:
            description: Name of Code package.
            type: string
          EntryPointType:
            description: Type of EntryPoint.
            type: string
          ExeName:
            description: Name of executable.
            type: string
          ExitCode:
            description: Exit code of process.
            format: int64
            type: integer
          HostId:
            description: Host Id.
            type: string
          IsExclusive:
            description: Indicates IsExclusive flag.
            type: boolean
          ProcessId:
            description: Process Id.
            format: int64
            type: integer
          ServiceName:
            description: Name of Service.
            type: string
          ServicePackageActivationId:
            description: Activation Id of Service package.
            type: string
          ServicePackageName:
            description: Name of Service package.
            type: string
          StartTime:
            description: Start time of process.
            format: date-time
            type: string
          UnexpectedTermination:
            description: Indicates if termination is unexpected.
            type: boolean
        required:
          - ServiceName
          - ServicePackageName
          - ServicePackageActivationId
          - IsExclusive
          - CodePackageName
          - EntryPointType
          - ExeName
          - ProcessId
          - HostId
          - ExitCode
          - UnexpectedTermination
          - StartTime
        type: object
    description: Process Deactivated event.
    x-ms-discriminator-value: ProcessDeactivated
  PropertyBatchDescriptionList:
    description: Describes a list of property batch operations to be executed. Either all or none of the operations will be committed.
    properties:
      Operations:
        description: A list of the property batch operations to be executed.
        items:
          $ref: '#/definitions/PropertyBatchOperation'
        type: array
    type: object
  PropertyBatchInfo:
    description: Information about the results of a property batch.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/PropertyBatchInfoKind'
        description: 'The kind of property batch info, determined by the results of a property batch. The following are the possible values.'
    required:
      - Kind
    type: object
  PropertyBatchInfoKind:
    description: 'The kind of property batch info, determined by the results of a property batch. The following are the possible values.'
    enum:
      - Invalid
      - Successful
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: PropertyBatchInfoKind
      values:
        - description: Indicates the property batch info is invalid. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: The property batch succeeded.
          value: Successful
        - description: The property batch failed.
          value: Failed
  PropertyBatchOperation:
    description: Represents the base type for property operations that can be put into a batch and submitted.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/PropertyBatchOperationKind'
        description: 'The kind of property batch operation, determined by the operation to be performed. The following are the possible values.'
      PropertyName:
        $ref: '#/definitions/PropertyName'
        description: The name of the Service Fabric property.
    required:
      - Kind
      - PropertyName
    type: object
  PropertyBatchOperationKind:
    description: 'The kind of property batch operation, determined by the operation to be performed. The following are the possible values.'
    enum:
      - Invalid
      - Put
      - Get
      - CheckExists
      - CheckSequence
      - Delete
      - CheckValue
    type: string
    x-ms-enum:
      modelAsString: true
      name: PropertyBatchOperationKind
      values:
        - description: Indicates the property operation is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The operation will create or edit a property. The value is 1.
          value: Put
        - description: The operation will get a property. The value is 2.
          value: Get
        - description: 'The operation will check that a property exists or doesn''t exists, depending on the provided value. The value is 3.'
          value: CheckExists
        - description: The operation will ensure that the sequence number is equal to the provided value. The value is 4.
          value: CheckSequence
        - description: The operation will delete a property. The value is 5.
          value: Delete
        - description: The operation will ensure that the value of a property is equal to the provided value. The value is 7.
          value: CheckValue
  PropertyCustomTypeId:
    description: 'The property''s custom type ID. Using this property, the user is able to tag the type of the value of the property.'
    type: string
  PropertyDescription:
    description: Description of a Service Fabric property.
    properties:
      CustomTypeId:
        $ref: '#/definitions/PropertyCustomTypeId'
        description: 'The property''s custom type ID. Using this property, the user is able to tag the type of the value of the property.'
      PropertyName:
        $ref: '#/definitions/PropertyName'
        description: The name of the Service Fabric property.
      Value:
        $ref: '#/definitions/PropertyValue'
        description: Describes a Service Fabric property value.
    required:
      - PropertyName
      - Value
    type: object
  PropertyInfo:
    description: Information about a Service Fabric property.
    discriminator: Kind
    properties:
      Metadata:
        $ref: '#/definitions/PropertyMetadata'
        description: 'The metadata associated with a property, including the property''s name.'
      Name:
        $ref: '#/definitions/PropertyName'
        description: The name of the Service Fabric property.
      Value:
        $ref: '#/definitions/PropertyValue'
        description: Describes a Service Fabric property value.
    required:
      - Name
      - Metadata
    type: object
  PropertyMetadata:
    description: 'The metadata associated with a property, including the property''s name.'
    properties:
      CustomTypeId:
        $ref: '#/definitions/PropertyCustomTypeId'
        description: The property's custom type ID.
      LastModifiedUtcTimestamp:
        description: Represents when the Property was last modified. Only write operations will cause this field to be updated.
        format: date-time
        type: string
      Parent:
        $ref: '#/definitions/FabricName'
        description: The name of the parent Service Fabric Name for the property. It could be thought of as the name-space/table under which the property exists.
      SequenceNumber:
        description: 'The version of the property. Every time a property is modified, its sequence number is increased.'
        type: string
      SizeInBytes:
        description: The length of the serialized property value.
        type: integer
      TypeId:
        $ref: '#/definitions/PropertyValueKind'
        description: 'The kind of property, determined by the type of data. Following are the possible values.'
    type: object
  PropertyName:
    description: The name of the Service Fabric property.
    type: string
  PropertyValue:
    description: Describes a Service Fabric property value.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/PropertyValueKind'
        description: 'The kind of property, determined by the type of data. Following are the possible values.'
    required:
      - Kind
    type: object
  PropertyValueKind:
    description: 'The kind of property, determined by the type of data. Following are the possible values.'
    enum:
      - Invalid
      - Binary
      - Int64
      - Double
      - String
      - Guid
    type: string
    x-ms-enum:
      modelAsString: true
      name: PropertyValueKind
      values:
        - description: Indicates the property is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The data inside the property is a binary blob. The value is 1.
          value: Binary
        - description: The data inside the property is an int64. The value is 2.
          value: Int64
        - description: The data inside the property is a double. The value is 3.
          value: Double
        - description: The data inside the property is a string. The value is 4.
          value: String
        - description: The data inside the property is a guid. The value is 5.
          value: Guid
  ProvisionApplicationTypeDescription:
    allOf:
      - $ref: '#/definitions/ProvisionApplicationTypeDescriptionBase'
      - description: ProvisionApplicationTypeDescription
        properties:
          ApplicationPackageCleanupPolicy:
            $ref: '#/definitions/ApplicationPackageCleanupPolicy'
            description: The kind of action that needs to be taken for cleaning up the application package after successful provision.
          ApplicationTypeBuildPath:
            description: The relative path for the application package in the image store specified during the prior upload operation.
            type: string
        type: object
    description: Describes the operation to register or provision an application type using an application package uploaded to the Service Fabric image store.
    required:
      - ApplicationTypeBuildPath
    x-ms-discriminator-value: ImageStorePath
  ProvisionApplicationTypeDescriptionBase:
    description: 'Represents the type of registration or provision requested, and if the operation needs to be asynchronous or not. Supported types of provision operations are from either image store or external store.'
    discriminator: Kind
    properties:
      Async:
        description: 'Indicates whether or not provisioning should occur asynchronously. When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit. The default value is false. For large application packages, we recommend setting the value to true.'
        type: boolean
      Kind:
        $ref: '#/definitions/ProvisionApplicationTypeKind'
        description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    required:
      - Kind
      - Async
    type: object
  ProvisionApplicationTypeKind:
    description: The kind of application type registration or provision requested. The application package can be registered or provisioned either from the image store or from an external store. Following are the kinds of the application type provision.
    enum:
      - Invalid
      - ImageStorePath
      - ExternalStore
    type: string
    x-ms-enum:
      modelAsString: true
      name: ProvisionApplicationTypeKind
      values:
        - description: Indicates that the provision kind is invalid. This value is default and should not be used. The value is zero.
          value: Invalid
        - description: Indicates that the provision is for a package that was previously uploaded to the image store. The value is 1.
          value: ImageStorePath
        - description: Indicates that the provision is for an application package that was previously uploaded to an external store. The application package ends with the extension *.sfpkg. The value is 2.
          value: ExternalStore
  ProvisionFabricDescription:
    description: Describes the parameters for provisioning a cluster.
    properties:
      ClusterManifestFilePath:
        description: The cluster manifest file path.
        type: string
      CodeFilePath:
        description: The cluster code package file path.
        type: string
    type: object
  PutPropertyBatchOperation:
    allOf:
      - $ref: '#/definitions/PropertyBatchOperation'
      - description: PutPropertyBatchOperation
        type: object
    description: |-
      Puts the specified property under the specified name.
      Note that if one PropertyBatchOperation in a PropertyBatch fails,
      the entire batch fails and cannot be committed in a transactional manner.
    properties:
      CustomTypeId:
        $ref: '#/definitions/PropertyCustomTypeId'
        description: 'The property''s custom type ID. Using this property, the user is able to tag the type of the value of the property.'
      Value:
        $ref: '#/definitions/PropertyValue'
        description: Describes a Service Fabric property value.
    required:
      - Value
    x-ms-discriminator-value: Put
  ReconfigurationInformation:
    description: 'Information about current reconfiguration like phase, type, previous configuration role of replica and reconfiguration start date time.'
    properties:
      PreviousConfigurationRole:
        $ref: '#/definitions/ReplicaRole'
        description: Replica role before reconfiguration started.
      ReconfigurationPhase:
        $ref: '#/definitions/ReconfigurationPhase'
        description: Current phase of ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None".
      ReconfigurationStartTimeUtc:
        description: Start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.
        format: date-time
        type: string
      ReconfigurationType:
        $ref: '#/definitions/ReconfigurationType'
        description: Type of current ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None".
  ReconfigurationPhase:
    description: The reconfiguration phase of a replica of a stateful service.
    enum:
      - Unknown
      - None
      - Phase0
      - Phase1
      - Phase2
      - Phase3
      - Phase4
      - AbortPhaseZero
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReconfigurationPhase
      values:
        - description: Indicates the invalid reconfiguration phase.
          value: Unknown
        - description: Specifies that there is no reconfiguration in progress.
          value: None
        - description: Refers to the phase where the reconfiguration is transferring data from the previous primary to the new primary.
          value: Phase0
        - description: Refers to the phase where the reconfiguration is querying the replica set for the progress.
          value: Phase1
        - description: Refers to the phase where the reconfiguration is ensuring that data from the current primary is present in a majority of the replica set.
          value: Phase2
        - description: This phase is for internal use only.
          value: Phase3
        - description: This phase is for internal use only.
          value: Phase4
        - description: This phase is for internal use only.
          value: AbortPhaseZero
  ReconfigurationType:
    description: The type of reconfiguration for replica of a stateful service.
    enum:
      - Unknown
      - SwapPrimary
      - Failover
      - Other
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReconfigurationType
      values:
        - description: Indicates the invalid reconfiguration type.
          value: Unknown
        - description: Specifies that the primary replica is being swapped with a different replica.
          value: SwapPrimary
        - description: Reconfiguration triggered in response to a primary going down. This could be due to many reasons such as primary replica crashing etc.
          value: Failover
        - description: Reconfigurations where the primary replica is not changing.
          value: Other
  RegistryCredential:
    description: Credential information to connect to container registry.
    properties:
      PasswordEncrypted:
        description: Indicates that supplied container registry password is encrypted.
        type: boolean
      RegistryPassword:
        description: The password for supplied username to connect to container registry.
        type: string
      RegistryUserName:
        description: The user name to connect to container registry.
        type: string
    type: object
  RemoteReplicatorAcknowledgementDetail:
    description: Provides various statistics of the acknowledgements that are being received from the remote replicator.
    properties:
      AverageApplyDuration:
        description: Represents the average duration it takes for the remote replicator to apply an operation. This usually entails writing the operation to disk.
        type: string
      AverageReceiveDuration:
        description: Represents the average duration it takes for the remote replicator to receive an operation.
        type: string
      NotReceivedCount:
        description: Represents the number of operations not yet received by a remote replicator.
        type: string
      ReceivedAndNotAppliedCount:
        description: Represents the number of operations received and not yet applied by a remote replicator.
        type: string
    type: object
  RemoteReplicatorAcknowledgementStatus:
    description: Provides details about the remote replicators from the primary replicator's point of view.
    properties:
      CopyStreamAcknowledgementDetail:
        $ref: '#/definitions/RemoteReplicatorAcknowledgementDetail'
        description: Details about the acknowledgements for operations that are part of the copy stream data.
      ReplicationStreamAcknowledgementDetail:
        $ref: '#/definitions/RemoteReplicatorAcknowledgementDetail'
        description: Details about the acknowledgements for operations that are part of the replication stream data.
    type: object
  RemoteReplicatorStatus:
    description: Represents the state of the secondary replicator from the primary replicator’s point of view.
    properties:
      IsInBuild:
        description: A value that indicates whether the secondary replica is in the process of being built.
        type: boolean
      LastAcknowledgementProcessedTimeUtc:
        description: |-
          The last timestamp (in UTC) when an acknowledgement from the secondary replicator was processed on the primary.
          UTC 0 represents an invalid value, indicating that no acknowledgement messages were ever processed.
        format: date-time
        type: string
      LastAppliedCopySequenceNumber:
        description: |-
          The highest copy operation sequence number that the secondary has applied to its state.
          A value of -1 implies that the secondary has applied all copy operations and the copy process is complete.
        type: string
      LastAppliedReplicationSequenceNumber:
        description: The highest replication operation sequence number that the secondary has applied to its state.
        type: string
      LastReceivedCopySequenceNumber:
        description: |-
          The highest copy operation sequence number that the secondary has received from the primary.
          A value of -1 implies that the secondary has received all copy operations.
        type: string
      LastReceivedReplicationSequenceNumber:
        description: The highest replication operation sequence number that the secondary has received from the primary.
        type: string
      RemoteReplicatorAcknowledgementStatus:
        $ref: '#/definitions/RemoteReplicatorAcknowledgementStatus'
        description: Represents the acknowledgment status for the remote secondary replicator.
      ReplicaId:
        $ref: '#/definitions/ReplicaId'
        description: Represents the replica ID of the remote secondary replicator.
    type: object
  RemoteReplicatorStatusList:
    description: List of remote replicator status
    items:
      $ref: '#/definitions/RemoteReplicatorStatus'
    type: array
  RepairImpactDescriptionBase:
    description: |-
      Describes the expected impact of executing a repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/RepairImpactKind'
        description: The kind of repair impact represented by the current object.
    required:
      - Kind
    type: object
  RepairImpactKind:
    description: Specifies the kind of the impact. This type supports the Service Fabric platform; it is not meant to be used directly from your code.'
    enum:
      - Invalid
      - Node
    type: string
    x-ms-enum:
      modelAsString: true
      name: RepairImpactKind
      values:
        - description: The repair impact is not valid or is of an unknown type.
          value: Invalid
        - description: The repair impact affects a set of Service Fabric nodes.
          value: Node
  RepairTargetDescriptionBase:
    description: |-
      Describes the entities targeted by a repair action.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/RepairTargetKind'
        description: The kind of repair target described by the current object.
    required:
      - Kind
    type: object
  RepairTargetKind:
    description: Specifies the kind of the repair target. This type supports the Service Fabric platform; it is not meant to be used directly from your code.'
    enum:
      - Invalid
      - Node
    type: string
    x-ms-enum:
      modelAsString: true
      name: RepairTargetKind
      values:
        - description: The repair target is not valid or is of an unknown type.
          value: Invalid
        - description: The repair target is a set of Service Fabric nodes.
          value: Node
  RepairTask:
    description: |-
      Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      Action:
        description: 'The requested repair action. Must be specified when the repair task is created, and is immutable once set.'
        type: string
      Description:
        description: |-
          A description of the purpose of the repair task, or other informational details.
          May be set when the repair task is created, and is immutable once set.
        type: string
      Executor:
        description: 'The name of the repair executor. Must be specified in Claimed and later states, and is immutable once set.'
        type: string
      ExecutorData:
        description: A data string that the repair executor can use to store its internal state.
        type: string
      Flags:
        description: |-
          A bitwise-OR of the following values, which gives additional details about the status of the repair task.
          - 1 - Cancellation of the repair has been requested
          - 2 - Abort of the repair has been requested
          - 4 - Approval of the repair was forced via client request
        type: integer
      History:
        $ref: '#/definitions/RepairTaskHistory'
        description: |-
          An object that contains timestamps of the repair task's state transitions.
          These timestamps are updated by the system, and cannot be directly modified.
      Impact:
        $ref: '#/definitions/RepairImpactDescriptionBase'
        description: |-
          The impact object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.
          Impact must be specified by the repair executor when transitioning to the Preparing state, and is immutable once set.
      PerformPreparingHealthCheck:
        description: A value to determine if health checks will be performed when the repair task enters the Preparing state.
        type: boolean
      PerformRestoringHealthCheck:
        description: A value to determine if health checks will be performed when the repair task enters the Restoring state.
        type: boolean
      PreparingHealthCheckState:
        $ref: '#/definitions/RepairTaskHealthCheckState'
        description: The workflow state of the health check when the repair task is in the Preparing state.
      RestoringHealthCheckState:
        $ref: '#/definitions/RepairTaskHealthCheckState'
        description: The workflow state of the health check when the repair task is in the Restoring state.
      ResultCode:
        description: |-
          A numeric value providing additional details about the result of the repair task execution.
          May be specified in the Restoring and later states, and is immutable once set.
        type: integer
      ResultDetails:
        description: |-
          A string providing additional details about the result of the repair task execution.
          May be specified in the Restoring and later states, and is immutable once set.
        type: string
      ResultStatus:
        description: 'A value describing the overall result of the repair task execution. Must be specified in the Restoring and later states, and is immutable once set.'
        enum:
          - Invalid
          - Succeeded
          - Cancelled
          - Interrupted
          - Failed
          - Pending
        type: string
        x-ms-enum:
          modelAsString: true
          name: ResultStatus
          values:
            - description: Indicates that the repair task result is invalid. All Service Fabric enumerations have the invalid value.
              value: Invalid
            - description: Indicates that the repair task completed execution successfully.
              value: Succeeded
            - description: Indicates that the repair task was cancelled prior to execution.
              value: Cancelled
            - description: Indicates that execution of the repair task was interrupted by a cancellation request after some work had already been performed.
              value: Interrupted
            - description: Indicates that there was a failure during execution of the repair task. Some work may have been performed.
              value: Failed
            - description: 'Indicates that the repair task result is not yet available, because the repair task has not finished executing.'
              value: Pending
      State:
        description: 'The workflow state of the repair task. Valid initial states are Created, Claimed, and Preparing.'
        enum:
          - Invalid
          - Created
          - Claimed
          - Preparing
          - Approved
          - Executing
          - Restoring
          - Completed
        type: string
        x-ms-enum:
          modelAsString: true
          name: State
          values:
            - description: Indicates that the repair task state is invalid. All Service Fabric enumerations have the invalid value.
              value: Invalid
            - description: Indicates that the repair task has been created.
              value: Created
            - description: Indicates that the repair task has been claimed by a repair executor.
              value: Claimed
            - description: 'Indicates that the Repair Manager is preparing the system to handle the impact of the repair task, usually by taking resources offline gracefully.'
              value: Preparing
            - description: Indicates that the repair task has been approved by the Repair Manager and is safe to execute.
              value: Approved
            - description: Indicates that execution of the repair task is in progress.
              value: Executing
            - description: 'Indicates that the Repair Manager is restoring the system to its pre-repair state, usually by bringing resources back online.'
              value: Restoring
            - description: 'Indicates that the repair task has completed, and no further state changes will occur.'
              value: Completed
      Target:
        $ref: '#/definitions/RepairTargetDescriptionBase'
        description: |-
          The target object determines what actions the system will take to prepare for the impact of the repair, prior to approving execution of the repair.
          May be set when the repair task is created, and is immutable once set.
      TaskId:
        description: The ID of the repair task.
        type: string
      Version:
        description: |-
          The version of the repair task.
          When creating a new repair task, the version must be set to zero.  When updating a repair task,
          the version is used for optimistic concurrency checks.  If the version is
          set to zero, the update will not check for write conflicts.  If the version is set to a non-zero value, then the
          update will only succeed if the actual current version of the repair task matches this value.
        type: string
    required:
      - TaskId
      - Action
      - State
    type: object
  RepairTaskApproveDescription:
    description: |-
      Describes a request for forced approval of a repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      TaskId:
        description: The ID of the repair task.
        type: string
      Version:
        description: 'The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current version of the repair task. If zero, then no version check is performed.'
        type: string
    required:
      - TaskId
    type: object
  RepairTaskCancelDescription:
    description: |-
      Describes a request to cancel a repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      RequestAbort:
        description: _True_ if the repair should be stopped as soon as possible even if it has already started executing. _False_ if the repair should be cancelled only if execution has not yet started.
        type: boolean
      TaskId:
        description: The ID of the repair task.
        type: string
      Version:
        description: 'The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current version of the repair task. If zero, then no version check is performed.'
        type: string
    required:
      - TaskId
    type: object
  RepairTaskDeleteDescription:
    description: |-
      Describes a request to delete a completed repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      TaskId:
        description: The ID of the completed repair task to be deleted.
        type: string
      Version:
        description: 'The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current version of the repair task. If zero, then no version check is performed.'
        type: string
    required:
      - TaskId
    type: object
  RepairTaskHealthCheckState:
    description: Specifies the workflow state of a repair task's health check. This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    enum:
      - NotStarted
      - InProgress
      - Succeeded
      - Skipped
      - TimedOut
    type: string
    x-ms-enum:
      modelAsString: true
      name: RepairTaskHealthCheckState
      values:
        - description: Indicates that the health check has not started.
          value: NotStarted
        - description: Indicates that the health check is in progress.
          value: InProgress
        - description: Indicates that the health check succeeded.
          value: Succeeded
        - description: Indicates that the health check was skipped.
          value: Skipped
        - description: Indicates that the health check timed out.
          value: TimedOut
  RepairTaskHistory:
    description: |-
      A record of the times when the repair task entered each state.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      ApprovedUtcTimestamp:
        description: The time when the repair task entered the Approved state
        format: date-time
        type: string
      ClaimedUtcTimestamp:
        description: The time when the repair task entered the Claimed state.
        format: date-time
        type: string
      CompletedUtcTimestamp:
        description: The time when the repair task entered the Completed state
        format: date-time
        type: string
      CreatedUtcTimestamp:
        description: The time when the repair task entered the Created state.
        format: date-time
        type: string
      ExecutingUtcTimestamp:
        description: The time when the repair task entered the Executing state
        format: date-time
        type: string
      PreparingHealthCheckEndUtcTimestamp:
        description: The time when the repair task completed the health check in the Preparing state.
        format: date-time
        type: string
      PreparingHealthCheckStartUtcTimestamp:
        description: The time when the repair task started the health check in the Preparing state.
        format: date-time
        type: string
      PreparingUtcTimestamp:
        description: The time when the repair task entered the Preparing state.
        format: date-time
        type: string
      RestoringHealthCheckEndUtcTimestamp:
        description: The time when the repair task completed the health check in the Restoring state.
        format: date-time
        type: string
      RestoringHealthCheckStartUtcTimestamp:
        description: The time when the repair task started the health check in the Restoring state.
        format: date-time
        type: string
      RestoringUtcTimestamp:
        description: The time when the repair task entered the Restoring state
        format: date-time
        type: string
    type: object
  RepairTaskList:
    description: A list of repair tasks.
    items:
      $ref: '#/definitions/RepairTask'
    type: array
  RepairTaskUpdateHealthPolicyDescription:
    description: |-
      Describes a request to update the health policy of a repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      PerformPreparingHealthCheck:
        description: 'A boolean indicating if health check is to be performed in the Preparing stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.'
        type: boolean
      PerformRestoringHealthCheck:
        description: 'A boolean indicating if health check is to be performed in the Restoring stage of the repair task. If not specified the existing value should not be altered. Otherwise, specify the desired new value.'
        type: boolean
      TaskId:
        description: The ID of the repair task to be updated.
        type: string
      Version:
        description: 'The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed.'
        type: string
    required:
      - TaskId
    type: object
  RepairTaskUpdateInfo:
    description: |-
      Describes the result of an operation that created or updated a repair task.

      This type supports the Service Fabric platform; it is not meant to be used directly from your code.
    properties:
      Version:
        description: The new version of the repair task.
        type: string
    required:
      - Version
    type: object
  ReplicaEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: ReplicaEvent
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
          ReplicaId:
            $ref: '#/definitions/ReplicaId_Integer'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
        required:
          - PartitionId
          - ReplicaId
        type: object
    description: Represents the base for all Replica Events.
    x-ms-discriminator-value: ReplicaEvent
  ReplicaEventList:
    description: A list of ReplicaEvent objects.
    items:
      $ref: '#/definitions/ReplicaEvent'
    type: array
  ReplicaHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: ReplicaHealth
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: Id of the partition to which this replica belongs.
          ServiceKind:
            $ref: '#/definitions/ServiceKind'
            description: The kind of service (Stateless or Stateful).
        required:
          - ServiceKind
        type: object
    description: |-
      Represents a base class for stateful service replica or stateless service instance health.
      Contains the replica aggregated health state, the health events and the unhealthy evaluations.
    discriminator: ServiceKind
  ReplicaHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ReplicaHealthEvaluation
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: Id of the partition to which the replica belongs.
          ReplicaOrInstanceId:
            $ref: '#/definitions/ReplicaOrInstanceId'
            description: 'Id of a stateful service replica or a stateless service instance. This ID is used in the queries that apply to both stateful and stateless services. It is used by Service Fabric to uniquely identify a replica of a partition of a stateful service or an instance of a stateless service partition. It is unique within a partition and does not change for the lifetime of the replica or the instance. If a stateful replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the ID. If a stateless instance is failed over on the same or different node it will get a different value for the ID.'
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the current aggregated health state of the replica. The types of the unhealthy evaluations can be EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a replica, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Replica
  ReplicaHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: ReplicaHealthState
        properties:
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: The ID of the partition to which this replica belongs.
          ServiceKind:
            $ref: '#/definitions/ServiceKind'
            description: The kind of service (Stateless or Stateful).
        type: object
    description: Represents a base class for stateful service replica or stateless service instance health state.
    discriminator: ServiceKind
    required:
      - ServiceKind
    type: object
  ReplicaHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: ReplicaHealthStateChunk
        properties:
          ReplicaOrInstanceId:
            $ref: '#/definitions/ReplicaOrInstanceId'
            description: 'Id of a stateful service replica or a stateless service instance. This ID is used in the queries that apply to both stateful and stateless services. It is used by Service Fabric to uniquely identify a replica of a partition of a stateful service or an instance of a stateless service partition. It is unique within a partition and does not change for the lifetime of the replica or the instance. If a stateful replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the ID. If a stateless instance is failed over on the same or different node it will get a different value for the ID.'
        type: object
    description: |-
      Represents the health state chunk of a stateful service replica or a stateless service instance.
      The replica health state contains the replica ID and its aggregated health state.
  ReplicaHealthStateChunkList:
    description: The list of replica health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    properties:
      Items:
        description: The list of replica health state chunks that respect the input filters in the chunk query.
        items:
          $ref: '#/definitions/ReplicaHealthStateChunk'
        type: array
    type: object
  ReplicaHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a replica should be included as a child of a partition in the cluster health chunk.
      The replicas are only returned if the parent entities match a filter specified in the cluster health chunk query description. The parent partition, service and application must be included in the cluster health chunk.
      One filter can match zero, one or multiple replicas, depending on its properties.
    properties:
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the replicas. It allows selecting replicas if they match the desired health states.
          The possible values are integer value of one of the following health states. Only replicas that match the filter are returned. All replicas are used to evaluate the parent partition aggregated health state.
          If not specified, default value is None, unless the replica ID is specified. If the filter has default value and replica ID is specified, the matching replica is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches replicas with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      ReplicaOrInstanceIdFilter:
        description: |-
          Id of the stateful service replica or stateless service instance that matches the filter. The filter is applied only to the specified replica, if it exists.
          If the replica doesn't exist, no replica is returned in the cluster health chunk based on this filter.
          If the replica exists, it is included in the cluster health chunk if it respects the other filter properties.
          If not specified, all replicas that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        type: string
    type: object
  ReplicaId:
    description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
    type: string
  ReplicaId_Integer:
    description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
    format: int64
    type: integer
  ReplicaInfo:
    description: 'Information about the identity, status, health, node name, uptime, and other details about the replica.'
    discriminator: ServiceKind
    properties:
      Address:
        description: The address the replica is listening on.
        type: string
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      LastInBuildDurationInSeconds:
        description: The last in build duration of the replica in seconds.
        type: string
      NodeName:
        $ref: '#/definitions/NodeName'
        description: The name of a Service Fabric node.
      ReplicaStatus:
        $ref: '#/definitions/ReplicaStatus'
        description: The status of a replica of a service.
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
    required:
      - ServiceKind
    type: object
  ReplicaKind:
    description: The role of a replica of a stateful service.
    enum:
      - Invalid
      - KeyValueStore
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReplicaKind
      values:
        - description: Represents an invalid replica kind. The value is zero.
          value: Invalid
        - description: Represents a key value store replica. The value is 1
          value: KeyValueStore
  ReplicaOrInstanceId:
    description: 'Id of a stateful service replica or a stateless service instance. This ID is used in the queries that apply to both stateful and stateless services. It is used by Service Fabric to uniquely identify a replica of a partition of a stateful service or an instance of a stateless service partition. It is unique within a partition and does not change for the lifetime of the replica or the instance. If a stateful replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the ID. If a stateless instance is failed over on the same or different node it will get a different value for the ID.'
    type: string
  ReplicaRole:
    description: The role of a replica of a stateful service.
    enum:
      - Unknown
      - None
      - Primary
      - IdleSecondary
      - ActiveSecondary
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReplicaRole
      values:
        - description: Indicates the initial role that a replica is created in. The value is zero.
          value: Unknown
        - description: Specifies that the replica has no responsibility in regard to the replica set. The value is 1
          value: None
        - description: 'Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. Read operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the replica set. There can only be one Primary replica in a replica set at a time. The value is 2.'
          value: Primary
        - description: Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. There can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. The value is 3.
          value: IdleSecondary
        - description: 'Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. Secondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set at a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain. The value is 4.'
          value: ActiveSecondary
  ReplicaStatus:
    description: The status of a replica of a service.
    enum:
      - Invalid
      - InBuild
      - Standby
      - Ready
      - Down
      - Dropped
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReplicaStatus
      values:
        - description: Indicates the replica status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The replica is being built. This means that a primary replica is seeding this replica. The value is 1.
          value: InBuild
        - description: The replica is in standby. The value is 2.
          value: Standby
        - description: The replica is ready. The value is 3.
          value: Ready
        - description: The replica is down. The value is 4.
          value: Down
        - description: 'Replica is dropped. This means that the replica has been removed from the replica set. If it is persisted, its state has been deleted. The value is 5.'
          value: Dropped
  ReplicaStatusBase:
    description: Information about the replica.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/ReplicaKind'
        description: The role of a replica of a stateful service.
    required:
      - Kind
    type: object
  ReplicasHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ReplicasHealthEvaluation
        properties:
          MaxPercentUnhealthyReplicasPerPartition:
            description: Maximum allowed percentage of unhealthy replicas per partition from the ApplicationHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of replicas in the partition from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy ReplicaHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for replicas, containing health evaluations for each unhealthy replica that impacted current aggregated health state. Can be returned when evaluating partition health and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Replicas
  ReplicatorOperationName:
    description: Specifies the operation currently being executed by the Replicator.
    enum:
      - Invalid
      - None
      - Open
      - ChangeRole
      - UpdateEpoch
      - Close
      - Abort
      - OnDataLoss
      - WaitForCatchup
      - Build
    type: string
    x-ms-enum:
      modelAsString: true
      name: ReplicatorOperationName
      values:
        - description: Default value if the replicator is not yet ready.
          value: Invalid
        - description: Replicator is not running any operation from Service Fabric perspective.
          value: None
        - description: Replicator is opening.
          value: Open
        - description: Replicator is in the process of changing its role.
          value: ChangeRole
        - description: 'Due to a change in the replica set, replicator is being updated with its Epoch.'
          value: UpdateEpoch
        - description: Replicator is closing.
          value: Close
        - description: Replicator is being aborted.
          value: Abort
        - description: 'Replicator is handling the data loss condition, where the user service may potentially be recovering state from an external source.'
          value: OnDataLoss
        - description: Replicator is waiting for a quorum of replicas to be caught up to the latest state.
          value: WaitForCatchup
        - description: Replicator is in the process of building one or more replicas.
          value: Build
  ReplicatorQueueStatus:
    description: |-
      Provides various statistics of the queue used in the service fabric replicator.
      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.
      Depending on the role of the replicator, the properties in this type imply different meanings.
    properties:
      CommittedSequenceNumber:
        description: |-
          On a primary replicator, this is semantically the highest sequence number of the operation for which a write quorum of the secondary replicas have sent an acknowledgement.
          On a secondary replicator, this is semantically the highest sequence number of the in-order operation received from the primary.
        type: string
      CompletedSequenceNumber:
        description: |-
          On a primary replicator, this is semantically the highest sequence number of the operation for which all the secondary replicas have sent an acknowledgement.
          On a secondary replicator, this is semantically the highest sequence number that has been applied to the persistent state.
        type: string
      FirstSequenceNumber:
        description: |-
          On a primary replicator, this is semantically the sequence number of the operation for which all the secondary replicas have sent an acknowledgement.
          On a secondary replicator, this is the smallest sequence number of the operation that is present in the queue.
        type: string
      LastSequenceNumber:
        description: Represents the latest sequence number of the operation that is available in the queue.
        type: string
      QueueMemorySize:
        description: Represents the virtual memory consumed by the queue in bytes.
        type: string
      QueueUtilizationPercentage:
        description: Represents the utilization of the queue. A value of 0 indicates that the queue is empty and a value of 100 indicates the queue is full.
        format: int32
        type: integer
    type: object
  ReplicatorStatus:
    description: |-
      Represents a base class for primary or secondary replicator status.
      Contains information about the service fabric replicator like the replication/copy queue utilization, last acknowledgement received timestamp, etc.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/ReplicaRole'
        description: The role of a replica of a stateful service.
    required:
      - Kind
    type: object
  ResolvedServiceEndpoint:
    description: Endpoint of a resolved service partition.
    properties:
      Address:
        description: The address of the endpoint. If the endpoint has multiple listeners the address is a JSON object with one property per listener with the value as the address of that listener.
        type: string
      Kind:
        $ref: '#/definitions/ServiceEndpointRole'
        description: The role of the replica where the endpoint is reported.
    type: object
  ResolvedServiceEndpointList:
    description: List of resolved service endpoints of a service partition.
    items:
      $ref: '#/definitions/ResolvedServiceEndpoint'
    type: array
  ResolvedServicePartition:
    description: Information about a service partition and its associated endpoints.
    properties:
      Endpoints:
        $ref: '#/definitions/ResolvedServiceEndpointList'
        description: List of resolved service endpoints of a service partition.
      Name:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
      PartitionInformation:
        $ref: '#/definitions/PartitionInformation'
        description: A representation of the resolved partition.
      Version:
        description: The version of this resolved service partition result. This version should be passed in the next time the ResolveService call is made via the PreviousRspVersion query parameter.
        type: string
    required:
      - Name
      - PartitionInformation
      - Endpoints
      - Version
    type: object
  ResourceLimits:
    description: This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted.
    properties:
      cpu:
        description: 'CPU limits in cores. At present, only full cores are supported.'
        format: double
        type: number
      memoryInGB:
        description: The memory limit in GB.
        format: double
        type: number
    type: object
  ResourceRequests:
    description: 'This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits.'
    properties:
      cpu:
        description: 'Requested number of CPU cores. At present, only full cores are supported.'
        format: double
        type: number
      memoryInGB:
        description: The memory request in GB for this container.
        format: double
        type: number
    required:
      - memoryInGB
      - cpu
    type: object
  ResourceRequirements:
    description: This type describes the resource requirements for a container or a service.
    properties:
      limits:
        $ref: '#/definitions/ResourceLimits'
        description: Describes the maximum limits on the resources for a given container.
      requests:
        $ref: '#/definitions/ResourceRequests'
        description: Describes the requested resources for a given container.
    required:
      - requests
    type: object
  RestartDeployedCodePackageDescription:
    description: Defines description for restarting a deployed code package on Service Fabric node.
    properties:
      CodePackageInstanceId:
        $ref: '#/definitions/CodePackageInstanceId'
        description: |-
          The instance ID for currently running entry point. For a code package setup entry point (if specified) runs first and after it finishes main entry point is started.
          Each time entry point executable is run, its instance ID will change. If 0 is passed in as the code package instance ID, the API will restart the code package with whatever instance ID it is currently running.
          If an instance ID other than 0 is passed in, the API will restart the code package only if the current Instance ID matches the passed in instance ID.
          Note, passing in the exact instance ID (not 0) in the API is safer, because if ensures at most one restart of the code package.
      CodePackageName:
        $ref: '#/definitions/CodePackageName'
        description: The name of the code package defined in the service manifest.
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of service manifest that specified this code package.
      ServicePackageActivationId:
        $ref: '#/definitions/ServicePackageActivationId'
        description: |-
          The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
          is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
          is always an empty string.
    required:
      - ServiceManifestName
      - CodePackageName
      - CodePackageInstanceId
    type: object
  RestartNodeDescription:
    description: Describes the parameters to restart a Service Fabric node.
    properties:
      CreateFabricDump:
        default: 'False'
        description: Specify True to create a dump of the fabric node process. This is case-sensitive.
        enum:
          - 'False'
          - 'True'
        type: string
        x-ms-enum:
          modelAsString: true
          name: CreateFabricDump
          values:
            - value: 'False'
            - value: 'True'
      NodeInstanceId:
        default: '0'
        description: The instance ID of the target node. If instance ID is specified the node is restarted only if it matches with the current instance of the node. A default value of "0" would match any instance ID. The instance ID can be obtained using get node query.
        type: string
    required:
      - NodeInstanceId
  RestartPartitionResult:
    description: Represents information about an operation in a terminal state (Completed or Faulted).
    properties:
      ErrorCode:
        description: 'If OperationState is Completed, this is 0.  If OperationState is Faulted, this is an error code indicating the reason.'
        format: int32
        type: integer
      SelectedPartition:
        $ref: '#/definitions/SelectedPartition'
        description: This class returns information about the partition that the user-induced operation acted upon.
    type: object
  RestorePartitionDescription:
    description: Specifies the parameters needed to trigger a restore of a specific partition.
    properties:
      BackupId:
        description: Unique backup ID.
        format: uuid
        type: string
      BackupLocation:
        description: Location of the backup relative to the backup storage specified/ configured.
        type: string
      BackupStorage:
        $ref: '#/definitions/BackupStorageDescription'
        description: Location of the backup from where the partition will be restored.
    required:
      - BackupId
      - BackupLocation
    type: object
  RestoreProgressInfo:
    description: Describes the progress of a restore operation on a partition.
    properties:
      FailureError:
        $ref: '#/definitions/FabricErrorError'
        description: Denotes the failure encountered in performing restore operation.
      RestoreState:
        $ref: '#/definitions/RestoreState'
        description: Represents the current state of the partition restore operation.
      RestoredEpoch:
        $ref: '#/definitions/BackupEpoch'
        description: Describes the epoch at which the partition is restored.
      RestoredLsn:
        description: Restored LSN.
        type: string
      TimeStampUtc:
        description: Timestamp when operation succeeded or failed.
        format: date-time
        type: string
    type: object
  RestoreState:
    description: Represents the current state of the partition restore operation.
    enum:
      - Invalid
      - Accepted
      - RestoreInProgress
      - Success
      - Failure
      - Timeout
    type: string
    x-ms-enum:
      modelAsString: true
      name: RestoreState
      values:
        - description: Indicates an invalid restore state. All Service Fabric enumerations have the invalid type.
          value: Invalid
        - description: Operation has been validated and accepted. Restore is yet to be triggered.
          value: Accepted
        - description: Restore operation has been triggered and is under process.
          value: RestoreInProgress
        - description: Operation completed with success.
          value: Success
        - description: Operation completed with failure.
          value: Failure
        - description: Operation timed out.
          value: Timeout
  ResumeApplicationUpgradeDescription:
    description: Describes the parameters for resuming an unmonitored manual Service Fabric application upgrade
    properties:
      UpgradeDomainName:
        description: The name of the upgrade domain in which to resume the upgrade.
        type: string
    required:
      - UpgradeDomainName
    type: object
  ResumeClusterUpgradeDescription:
    description: Describes the parameters for resuming a cluster upgrade.
    properties:
      UpgradeDomain:
        description: The next upgrade domain for this cluster upgrade.
        type: string
    required:
      - UpgradeDomain
    type: object
  RollingUpgradeUpdateDescription:
    description: Describes the parameters for updating a rolling upgrade of application or cluster.
    properties:
      FailureAction:
        $ref: '#/definitions/FailureAction'
        description: |-
          The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.
          Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically.
          Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      HealthCheckRetryTimeoutInMilliseconds:
        $ref: '#/definitions/HealthCheckRetryTimeout'
        description: 'The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      HealthCheckStableDurationInMilliseconds:
        $ref: '#/definitions/HealthCheckStableDuration'
        description: 'The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      HealthCheckWaitDurationInMilliseconds:
        $ref: '#/definitions/HealthCheckWaitDuration'
        description: 'The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      ReplicaSetCheckTimeoutInMilliseconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      UpgradeDomainTimeoutInMilliseconds:
        $ref: '#/definitions/UpgradeDomainTimeout'
        description: 'The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
      UpgradeTimeoutInMilliseconds:
        $ref: '#/definitions/UpgradeTimeout'
        description: 'The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    required:
      - RollingUpgradeMode
    type: object
  SafetyCheck:
    description: Represents a safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/SafetyCheckKind'
        description: The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.
    required:
      - Kind
    type: object
  SafetyCheckInfoList:
    description: List of pending safety checks
    items:
      $ref: '#/definitions/SafetyCheckWrapper'
    type: array
  SafetyCheckKind:
    description: The kind of safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state. Following are the kinds of safety checks.
    enum:
      - Invalid
      - EnsureSeedNodeQuorum
      - EnsurePartitionQuorum
      - WaitForPrimaryPlacement
      - WaitForPrimarySwap
      - WaitForReconfiguration
      - WaitForInbuildReplica
      - EnsureAvailability
    type: string
    x-ms-enum:
      modelAsString: true
      name: SafetyCheckKind
      values:
        - description: Indicates that the upgrade safety check kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that if we bring down the node then this will result in global seed node quorum loss. The value is 1.
          value: EnsureSeedNodeQuorum
        - description: 'Indicates that there is some partition for which if we bring down the replica on the node, it will result in quorum loss for that partition. The value is 2.'
          value: EnsurePartitionQuorum
        - description: Indicates that there is some replica on the node that was moved out of this node due to upgrade. Service Fabric is now waiting for the primary to be moved back to this node. The value is 3.
          value: WaitForPrimaryPlacement
        - description: Indicates that Service Fabric is waiting for a primary replica to be moved out of the node before starting upgrade on that node. The value is 4.
          value: WaitForPrimarySwap
        - description: Indicates that there is some replica on the node that is involved in a reconfiguration. Service Fabric is waiting for the reconfiguration to be complete before staring upgrade on that node. The value is 5.
          value: WaitForReconfiguration
        - description: 'Indicates that there is either a replica on the node that is going through copy, or there is a primary replica on the node that is copying data to some other replica. In both cases, bringing down the replica on the node due to upgrade will abort the copy. The value is 6.'
          value: WaitForInbuildReplica
        - description: 'Indicates that there is either a stateless service partition on the node having exactly one instance, or there is a primary replica on the node for which the partition is quorum loss. In both cases, bringing down the replicas due to upgrade will result in loss of availability. The value is 7.'
          value: EnsureAvailability
  SafetyCheckWrapper:
    description: A wrapper for the safety check object. Safety checks are performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state.
    properties:
      SafetyCheck:
        $ref: '#/definitions/SafetyCheck'
        description: Represents a safety check performed by service fabric before continuing with the operations. These checks ensure the availability of the service and the reliability of the state.
    type: object
  ScalingMechanismDescription:
    description: Describes the mechanism for performing a scaling operation.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/ScalingMechanismKind'
        description: Specifies the kind of scaling mechanism
    required:
      - Kind
    type: object
  ScalingMechanismKind:
    description: Enumerates the ways that a service can be scaled.
    enum:
      - Invalid
      - PartitionInstanceCount
      - AddRemoveIncrementalNamedPartition
    type: string
    x-ms-enum:
      modelAsString: true
      name: ScalingMechanismKind
      values:
        - description: Indicates the scaling mechanism is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates a mechanism for scaling where new instances are added or removed from a partition. The value is 1.
          value: PartitionInstanceCount
        - description: Indicates a mechanism for scaling where new named partitions are added or removed from a service. The value is 2.
          value: AddRemoveIncrementalNamedPartition
  ScalingPolicyDescription:
    description: Describes how the scaling should be performed
    properties:
      ScalingMechanism:
        $ref: '#/definitions/ScalingMechanismDescription'
        description: Specifies the mechanism associated with this scaling policy
      ScalingTrigger:
        $ref: '#/definitions/ScalingTriggerDescription'
        description: Specifies the trigger associated with this scaling policy
    required:
      - ScalingTrigger
      - ScalingMechanism
    type: object
  ScalingPolicyDescriptionList:
    description: A list that describes the scaling policies.
    items:
      $ref: '#/definitions/ScalingPolicyDescription'
    type: array
  ScalingTriggerDescription:
    description: Describes the trigger for performing a scaling operation.
    discriminator: Kind
    properties:
      Kind:
        $ref: '#/definitions/ScalingTriggerKind'
        description: Specifies the kind of scaling trigger
    required:
      - Kind
    type: object
  ScalingTriggerKind:
    description: Enumerates the ways that a service can be scaled.
    enum:
      - Invalid
      - AveragePartitionLoad
      - AverageServiceLoad
    type: string
    x-ms-enum:
      modelAsString: true
      name: ScalingTriggerKind
      values:
        - description: Indicates the scaling trigger is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates a trigger where scaling decisions are made based on average load of a partition. The value is 1.
          value: AveragePartitionLoad
        - description: Indicates a trigger where scaling decisions are made based on average load of a service. The value is 2.
          value: AverageServiceLoad
  SecondaryActiveReplicatorStatus:
    allOf:
      - $ref: '#/definitions/SecondaryReplicatorStatus'
      - type: object
    description: Status of the secondary replicator when it is in active mode and is part of the replica set.
    x-ms-discriminator-value: ActiveSecondary
  SecondaryIdleReplicatorStatus:
    allOf:
      - $ref: '#/definitions/SecondaryReplicatorStatus'
      - type: object
    description: Status of the secondary replicator when it is in idle mode and is being built by the primary.
    x-ms-discriminator-value: IdleSecondary
  SecondaryReplicatorStatus:
    allOf:
      - $ref: '#/definitions/ReplicatorStatus'
      - description: Represents a base class for secondary replicator status.
        properties:
          CopyQueueStatus:
            $ref: '#/definitions/ReplicatorQueueStatus'
            description: Details about the copy queue on the secondary replicator.
          IsInBuild:
            description: Value that indicates whether the replica is currently being built.
            type: boolean
          LastAcknowledgementSentTimeUtc:
            description: |-
              The last time-stamp (UTC) at which an acknowledgment was sent to the primary replicator.
              UTC 0 represents an invalid value, indicating that an acknowledgment message was never sent.
            format: date-time
            type: string
          LastCopyOperationReceivedTimeUtc:
            description: |-
              The last time-stamp (UTC) at which a copy operation was received from the primary.
              UTC 0 represents an invalid value, indicating that a copy operation message was never received.
            format: date-time
            type: string
          LastReplicationOperationReceivedTimeUtc:
            description: |-
              The last time-stamp (UTC) at which a replication operation was received from the primary.
              UTC 0 represents an invalid value, indicating that a replication operation message was never received.
            format: date-time
            type: string
          ReplicationQueueStatus:
            $ref: '#/definitions/ReplicatorQueueStatus'
            description: Details about the replication queue on the secondary replicator.
        type: object
    description: 'Provides statistics about the Service Fabric Replicator, when it is functioning in a ActiveSecondary role.'
    type: object
  SeedNodeSafetyCheck:
    allOf:
      - $ref: '#/definitions/SafetyCheck'
      - description: SeedNodeSafetyCheck
        type: object
    description: Represents a safety check for the seed nodes being performed by service fabric before continuing with node level operations.
    x-ms-discriminator-value: EnsureSeedNodeQuorum
  SelectedPartition:
    description: This class returns information about the partition that the user-induced operation acted upon.
    properties:
      PartitionId:
        $ref: '#/definitions/PartitionId'
        description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: The name of the service the partition belongs to.
    type: object
  ServiceBackupConfigurationInfo:
    allOf:
      - $ref: '#/definitions/BackupConfigurationInfo'
      - description: Service backup configuration info
        properties:
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: 'The full name of the service with ''fabric:'' URI scheme.'
        type: object
    description: 'Backup configuration information for a specific Service Fabric service specifying what backup policy is being applied and suspend description, if any.'
    x-ms-discriminator-value: Service
  ServiceBackupEntity:
    allOf:
      - $ref: '#/definitions/BackupEntity'
      - description: ServiceBackupEntity
        properties:
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: 'The full name of the service with ''fabric:'' URI scheme.'
        type: object
    description: Identifies the Service Fabric stateful service which is being backed up.
    type: object
    x-ms-discriminator-value: Service
  ServiceCorrelationDescription:
    description: Creates a particular correlation between services.
    properties:
      Scheme:
        $ref: '#/definitions/ServiceCorrelationScheme'
        description: The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: The name of the service that the correlation relationship is established with.
    required:
      - Scheme
      - ServiceName
    type: object
  ServiceCorrelationScheme:
    description: The service correlation scheme.
    enum:
      - Invalid
      - Affinity
      - AlignedAffinity
      - NonAlignedAffinity
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceCorrelationScheme
      values:
        - description: An invalid correlation scheme. Cannot be used. The value is zero.
          value: Invalid
        - description: 'Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.'
          value: Affinity
        - description: Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
          value: AlignedAffinity
        - description: 'Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.'
          value: NonAlignedAffinity
  ServiceCreatedEvent:
    allOf:
      - $ref: '#/definitions/ServiceEvent'
      - properties:
          ApplicationName:
            description: Application name.
            type: string
          ApplicationTypeName:
            description: Application type name.
            type: string
          IsStateful:
            description: Indicates if Service is stateful.
            type: boolean
          MinReplicaSetSize:
            description: Minimum size of replicas set.
            format: int32
            type: integer
          PartitionCount:
            description: Number of partitions.
            format: int32
            type: integer
          PartitionId:
            $ref: '#/definitions/PartitionId'
            description: An internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
          ServiceInstance:
            description: Id of Service instance.
            format: int64
            type: integer
          ServicePackageVersion:
            description: Version of Service package.
            type: string
          ServiceTypeName:
            description: Service type name.
            type: string
          TargetReplicaSetSize:
            description: Size of target replicas set.
            format: int32
            type: integer
        required:
          - ServiceTypeName
          - ApplicationName
          - ApplicationTypeName
          - ServiceInstance
          - IsStateful
          - PartitionCount
          - TargetReplicaSetSize
          - MinReplicaSetSize
          - ServicePackageVersion
          - PartitionId
        type: object
    description: Service Created event.
    x-ms-discriminator-value: ServiceCreated
  ServiceDeletedEvent:
    allOf:
      - $ref: '#/definitions/ServiceEvent'
      - properties:
          ApplicationName:
            description: Application name.
            type: string
          ApplicationTypeName:
            description: Application type name.
            type: string
          IsStateful:
            description: Indicates if Service is stateful.
            type: boolean
          MinReplicaSetSize:
            description: Minimum size of replicas set.
            format: int32
            type: integer
          PartitionCount:
            description: Number of partitions.
            format: int32
            type: integer
          ServiceInstance:
            description: Id of Service instance.
            format: int64
            type: integer
          ServicePackageVersion:
            description: Version of Service package.
            type: string
          ServiceTypeName:
            description: Service type name.
            type: string
          TargetReplicaSetSize:
            description: Size of target replicas set.
            format: int32
            type: integer
        required:
          - ServiceTypeName
          - ApplicationName
          - ApplicationTypeName
          - ServiceInstance
          - IsStateful
          - PartitionCount
          - TargetReplicaSetSize
          - MinReplicaSetSize
          - ServicePackageVersion
        type: object
    description: Service Deleted event.
    x-ms-discriminator-value: ServiceDeleted
  ServiceDescription:
    description: A ServiceDescription contains all of the information necessary to create a service.
    discriminator: ServiceKind
    properties:
      ApplicationName:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      CorrelationScheme:
        $ref: '#/definitions/CorrelationSchemeList'
        description: The correlation scheme.
      DefaultMoveCost:
        $ref: '#/definitions/MoveCost'
        description: The move cost for the service.
      InitializationData:
        $ref: '#/definitions/ByteArray'
        description: The initialization data as an array of bytes. Initialization data is passed to service instances or replicas when they are created.
      IsDefaultMoveCostSpecified:
        description: Indicates if the DefaultMoveCost property is specified.
        type: boolean
      PartitionDescription:
        $ref: '#/definitions/PartitionSchemeDescription'
        description: The partition description as an object.
      PlacementConstraints:
        description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        type: string
      ScalingPolicies:
        $ref: '#/definitions/ScalingPolicyDescriptionList'
        description: Scaling policies for this service.
      ServiceDnsName:
        description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
        type: string
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The service kind.
      ServiceLoadMetrics:
        $ref: '#/definitions/ServiceLoadMetricsList'
        description: The service load metrics.
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
      ServicePackageActivationMode:
        $ref: '#/definitions/ServicePackageActivationMode'
        description: The activation mode of service package to be used for a service.
      ServicePlacementPolicies:
        $ref: '#/definitions/ServicePlacementPoliciesList'
        description: The service placement policies.
      ServiceTypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
    required:
      - ServiceKind
      - ServiceName
      - ServiceTypeName
      - PartitionDescription
    type: object
  ServiceEndpointRole:
    description: The role of the replica where the endpoint is reported.
    enum:
      - Invalid
      - Stateless
      - StatefulPrimary
      - StatefulSecondary
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceEndpointRole
      values:
        - description: Indicates the service endpoint role is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that the service endpoint is of a stateless service. The value is 1.
          value: Stateless
        - description: Indicates that the service endpoint is of a primary replica of a stateful service. The value is 2.
          value: StatefulPrimary
        - description: Indicates that the service endpoint is of a secondary replica of a stateful service. The value is 3.
          value: StatefulSecondary
  ServiceEvent:
    allOf:
      - $ref: '#/definitions/FabricEvent'
      - description: ServiceEvent
        properties:
          ServiceId:
            $ref: '#/definitions/ServiceId'
            description: |-
              The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.
              Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the service name is "fabric:/myapp/app1/svc1",
              the service identity would be "myapp~app1\~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
        required:
          - ServiceId
        type: object
    description: Represents the base for all Service Events.
    x-ms-discriminator-value: ServiceEvent
  ServiceEventList:
    description: A list of ServiceEvent objects.
    items:
      $ref: '#/definitions/ServiceEvent'
    type: array
  ServiceFromTemplateDescription:
    description: Defines description for creating a Service Fabric service from a template defined in the application manifest.
    properties:
      ApplicationName:
        $ref: '#/definitions/ApplicationName'
        description: 'The name of the application, including the ''fabric:'' URI scheme.'
      InitializationData:
        $ref: '#/definitions/ByteArray'
        description: The initialization data for the newly created service instance.
      ServiceDnsName:
        description: The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
        type: string
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
      ServicePackageActivationMode:
        $ref: '#/definitions/ServicePackageActivationMode'
        description: The activation mode of service package to be used for a service.
      ServiceTypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
    required:
      - ApplicationName
      - ServiceName
      - ServiceTypeName
    type: object
  ServiceHealth:
    allOf:
      - $ref: '#/definitions/EntityHealth'
      - description: ServiceHealth
        properties:
          Name:
            $ref: '#/definitions/ServiceName'
            description: The name of the service whose health information is described by this object.
          PartitionHealthStates:
            description: The list of partition health states associated with the service.
            items:
              $ref: '#/definitions/PartitionHealthState'
            type: array
        type: object
    description: Information about the health of a Service Fabric service.
  ServiceHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ServiceHealthEvaluation
        properties:
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: Name of the service whose health evaluation is described by this object.
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the current aggregated health state of the service. The types of the unhealthy evaluations can be PartitionsHealthEvaluation or EventHealthEvaluation.
        type: object
    description: 'Represents health evaluation for a service, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Service
  ServiceHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ServiceEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          InstanceId:
            description: Id of Service instance.
            format: int64
            type: integer
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - InstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Service Health Report Created event.
    x-ms-discriminator-value: ServiceHealthReportCreated
  ServiceHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ServiceEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          InstanceId:
            description: Id of Service instance.
            format: int64
            type: integer
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - InstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Service Health Report Expired event.
    x-ms-discriminator-value: ServiceHealthReportExpired
  ServiceHealthState:
    allOf:
      - $ref: '#/definitions/EntityHealthState'
      - description: ServiceHealthState
        properties:
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: Name of the service whose health state is represented by this object.
        type: object
    description: 'Represents the health state of a service, which contains the service identifier and its aggregated health state.'
  ServiceHealthStateChunk:
    allOf:
      - $ref: '#/definitions/EntityHealthStateChunk'
      - description: ServiceHealthStateChunk
        properties:
          PartitionHealthStateChunks:
            $ref: '#/definitions/PartitionHealthStateChunkList'
            description: The list of partition health state chunks belonging to the service that respect the filters in the cluster health chunk query description.
          ServiceName:
            $ref: '#/definitions/ServiceName'
            description: The name of the service whose health state chunk is provided in this object.
        type: object
    description: 'Represents the health state chunk of a service, which contains the service name, its aggregated health state and any partitions that respect the filters in the cluster health chunk query description.'
  ServiceHealthStateChunkList:
    description: The list of service health state chunks that respect the input filters in the chunk query. Returned by get cluster health state chunks query.
    properties:
      Items:
        description: The list of service health state chunks that respect the input filters in the chunk query.
        items:
          $ref: '#/definitions/ServiceHealthStateChunk'
        type: array
    type: object
  ServiceHealthStateFilter:
    description: |-
      Defines matching criteria to determine whether a service should be included as a child of an application in the cluster health chunk.
      The services are only returned if the parent application matches a filter specified in the cluster health chunk query description.
      One filter can match zero, one or multiple services, depending on its properties.
    properties:
      HealthStateFilter:
        default: 0
        description: |-
          The filter for the health state of the services. It allows selecting services if they match the desired health states.
          The possible values are integer value of one of the following health states. Only services that match the filter are returned. All services are used to evaluate the cluster aggregated health state.
          If not specified, default value is None, unless the service name is specified. If the filter has default value and service name is specified, the matching service is returned.
          The state values are flag-based enumeration, so the value could be a combination of these values obtained using bitwise 'OR' operator.
          For example, if the provided value is 6, it matches services with HealthState value of OK (2) and Warning (4).

          - Default - Default value. Matches any HealthState. The value is zero.
          - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1.
          - Ok - Filter that matches input with HealthState value Ok. The value is 2.
          - Warning - Filter that matches input with HealthState value Warning. The value is 4.
          - Error - Filter that matches input with HealthState value Error. The value is 8.
          - All - Filter that matches input with any HealthState value. The value is 65535.
        type: integer
      PartitionFilters:
        description: |-
          Defines a list of filters that specify which partitions to be included in the returned cluster health chunk as children of the service. The partitions are returned only if the parent service matches a filter.
          If the list is empty, no partitions are returned. All the partitions are used to evaluate the parent service aggregated health state, regardless of the input filters.
          The service filter may specify multiple partition filters.
          For example, it can specify a filter to return all partitions with health state Error and another filter to always include a partition identified by its partition ID.
        items:
          $ref: '#/definitions/PartitionHealthStateFilter'
        type: array
      ServiceNameFilter:
        description: |-
          The name of the service that matches the filter. The filter is applied only to the specified service, if it exists.
          If the service doesn't exist, no service is returned in the cluster health chunk based on this filter.
          If the service exists, it is included as the application's child if the health state matches the other filter properties.
          If not specified, all services that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.
        type: string
    type: object
  ServiceId:
    description: |-
      The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.
      Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the service name is "fabric:/myapp/app1/svc1",
      the service identity would be "myapp~app1\~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
    type: string
  ServiceInfo:
    description: Information about a Service Fabric service.
    discriminator: ServiceKind
    properties:
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      Id:
        $ref: '#/definitions/ServiceId'
        description: |-
          The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the service name is "fabric:/myapp/app1/svc1",
          the service identity would be "myapp~app1\~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
      IsServiceGroup:
        description: Whether the service is in a service group.
        type: boolean
      ManifestVersion:
        description: The version of the service manifest.
        type: string
      Name:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
      ServiceStatus:
        $ref: '#/definitions/ServiceStatus'
        description: The status of the application.
      TypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
    required:
      - ServiceKind
    type: object
  ServiceKind:
    description: The kind of service (Stateless or Stateful).
    enum:
      - Invalid
      - Stateless
      - Stateful
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceKind
      values:
        - description: Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Does not use Service Fabric to make its state highly available or reliable. The value is 1.
          value: Stateless
        - description: Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
          value: Stateful
  ServiceLoadMetricDescription:
    description: Specifies a metric to load balance a service during runtime.
    properties:
      DefaultLoad:
        description: 'Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.'
        type: integer
      Name:
        description: 'The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case-sensitive.'
        type: string
      PrimaryDefaultLoad:
        description: 'Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.'
        type: integer
      SecondaryDefaultLoad:
        description: 'Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.'
        type: integer
      Weight:
        $ref: '#/definitions/ServiceLoadMetricWeight'
        description: 'The service load metric relative weight, compared to other metrics configured for this service, as a number.'
    required:
      - Name
    type: object
  ServiceLoadMetricWeight:
    description: 'Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.'
    enum:
      - Zero
      - Low
      - Medium
      - High
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceLoadMetricWeight
      values:
        - description: Disables resource balancing for this metric. This value is zero.
          value: Zero
        - description: Specifies the metric weight of the service load as Low. The value is 1.
          value: Low
        - description: Specifies the metric weight of the service load as Medium. The value is 2.
          value: Medium
        - description: Specifies the metric weight of the service load as High. The value is 3.
          value: High
  ServiceLoadMetricsList:
    description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    items:
      $ref: '#/definitions/ServiceLoadMetricDescription'
    type: array
  ServiceManifestName:
    description: The name of the service manifest.
    type: string
  ServiceName:
    description: 'The full name of the service with ''fabric:'' URI scheme.'
    type: string
  ServiceNameInfo:
    description: Information about the service name.
    properties:
      Id:
        $ref: '#/definitions/ServiceId'
        description: |-
          The identity of the service. This ID is an encoded representation of the service name. This is used in the REST APIs to identify the service resource.
          Starting in version 6.0, hierarchical names are delimited with the "\~" character. For example, if the service name is "fabric:/myapp/app1/svc1",
          the service identity would be "myapp~app1\~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.
      Name:
        $ref: '#/definitions/ServiceName'
        description: 'The full name of the service with ''fabric:'' URI scheme.'
    type: object
  ServiceOperationName:
    description: Specifies the current active life-cycle operation on a stateful service replica or stateless service instance.
    enum:
      - Unknown
      - None
      - Open
      - ChangeRole
      - Close
      - Abort
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceOperationName
      values:
        - description: Reserved for future use.
          value: Unknown
        - description: The service replica or instance is not going through any life-cycle changes.
          value: None
        - description: The service replica or instance is being opened.
          value: Open
        - description: The service replica is changing roles.
          value: ChangeRole
        - description: The service replica or instance is being closed.
          value: Close
        - description: The service replica or instance is being aborted.
          value: Abort
  ServicePackageActivationId:
    description: |-
      The ActivationId of a deployed service package. If ServicePackageActivationMode specified at the time of creating the service
      is 'SharedProcess' (or if it is not specified, in which case it defaults to 'SharedProcess'), then value of ServicePackageActivationId
      is always an empty string.
    type: string
  ServicePackageActivationMode:
    description: The activation mode of service package to be used for a Service Fabric service. This is specified at the time of creating the Service.
    enum:
      - SharedProcess
      - ExclusiveProcess
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServicePackageActivationMode
      values:
        - description: 'This is the default activation mode. With this activation mode, replicas or instances from different partition(s) of service, on a given node, will share same activation of service package on a node. The value is zero.'
          value: SharedProcess
        - description: 'With this activation mode, each replica or instance of service, on a given node, will have its own dedicated activation of service package on a node. The value is 1.'
          value: ExclusiveProcess
  ServicePartitionInfo:
    description: Information about a partition of a Service Fabric service.
    discriminator: ServiceKind
    properties:
      HealthState:
        $ref: '#/definitions/HealthState'
        description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
      PartitionInformation:
        $ref: '#/definitions/PartitionInformation'
        description: 'Information about the partition identity, partitioning scheme and keys supported by it.'
      PartitionStatus:
        $ref: '#/definitions/ServicePartitionStatus'
        description: The status of the service fabric service partition.
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
    required:
      - ServiceKind
    type: object
  ServicePartitionKind:
    description: The kind of partitioning scheme used to partition the service.
    enum:
      - Invalid
      - Singleton
      - Int64Range
      - Named
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServicePartitionKind
      values:
        - description: Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: 'Indicates that there is only one partition, and SingletonPartitionSchemeDescription was specified while creating the service. The value is 1.'
          value: Singleton
        - description: 'Indicates that the partition is based on Int64 key ranges, and UniformInt64RangePartitionSchemeDescription was specified while creating the service. The value is 2.'
          value: Int64Range
        - description: 'Indicates that the partition is based on string names, and NamedPartitionInformation  was specified while creating the service. The value is 3.'
          value: Named
  ServicePartitionStatus:
    description: The status of the service fabric service partition.
    enum:
      - Invalid
      - Ready
      - NotReady
      - InQuorumLoss
      - Reconfiguring
      - Deleting
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServicePartitionStatus
      values:
        - description: Indicates the partition status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: Indicates that the partition is ready. This means that for a stateless service partition there is at least one instance that is up and for a stateful service partition the number of ready replicas is greater than or equal to the MinReplicaSetSize. The value is 1.
          value: Ready
        - description: Indicates that the partition is not ready. This status is returned when none of the other states apply. The value is 2.
          value: NotReady
        - description: Indicates that the partition is in quorum loss. This means that number of replicas that are up and participating in a replica set is less than MinReplicaSetSize for this partition. The value is 3.
          value: InQuorumLoss
        - description: 'Indicates that the partition is undergoing reconfiguration of its replica sets. This can happen due to failover, upgrade, load balancing or addition or removal of replicas from the replica set. The value is 4.'
          value: Reconfiguring
        - description: Indicates that the partition is being deleted. The value is 5.
          value: Deleting
  ServicePlacementInvalidDomainPolicyDescription:
    allOf:
      - $ref: '#/definitions/ServicePlacementPolicyDescription'
      - description: ServicePlacementInvalidDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should not be used for placement.
            type: string
        type: object
    description: Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.
    x-ms-discriminator-value: InvalidDomain
  ServicePlacementNonPartiallyPlaceServicePolicyDescription:
    allOf:
      - $ref: '#/definitions/ServicePlacementPolicyDescription'
      - description: ServicePlacementNonPartiallyPlaceServicePolicyDescription
        type: object
    description: Describes the policy to be used for placement of a Service Fabric service where all replicas must be able to be placed in order for any replicas to be created.
    x-ms-discriminator-value: NonPartiallyPlaceService
  ServicePlacementPoliciesList:
    description: A list that describes the correlation of the service with other services.
    items:
      $ref: '#/definitions/ServicePlacementPolicyDescription'
    type: array
  ServicePlacementPolicyDescription:
    description: Describes the policy to be used for placement of a Service Fabric service.
    discriminator: Type
    properties:
      Type:
        $ref: '#/definitions/ServicePlacementPolicyType'
        description: The type of placement policy for a service fabric service. Following are the possible values.
    required:
      - Type
    type: object
  ServicePlacementPolicyDescriptionList:
    description: List of service placement policy descriptions.
    items:
      $ref: '#/definitions/ServicePlacementPolicyDescription'
    type: array
  ServicePlacementPolicyType:
    description: The type of placement policy for a service fabric service. Following are the possible values.
    enum:
      - Invalid
      - InvalidDomain
      - RequiredDomain
      - PreferredPrimaryDomain
      - RequiredDomainDistribution
      - NonPartiallyPlaceService
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServicePlacementPolicyType
      values:
        - description: Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: 'Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.'
          value: InvalidDomain
        - description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
          value: RequiredDomain
        - description: 'Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.'
          value: PreferredPrimaryDomain
        - description: 'Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.'
          value: RequiredDomainDistribution
        - description: 'Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.'
          value: NonPartiallyPlaceService
  ServicePlacementPreferPrimaryDomainPolicyDescription:
    allOf:
      - $ref: '#/definitions/ServicePlacementPolicyDescription'
      - description: ServicePlacementPreferPrimaryDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as per this policy.
            type: string
        type: object
    description: |-
      Describes the policy to be used for placement of a Service Fabric service where the service's Primary replicas should optimally be placed in a particular domain.

      This placement policy is usually used with fault domains in scenarios where the Service Fabric cluster is geographically distributed in order to indicate that a service's primary replica should be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica may not end up located in this domain due to failures, capacity limits, or other constraints.
    x-ms-discriminator-value: PreferredPrimaryDomain
  ServicePlacementRequireDomainDistributionPolicyDescription:
    allOf:
      - $ref: '#/definitions/ServicePlacementPolicyDescription'
      - description: ServicePlacementRequireDomainDistributionPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as per this policy.
            type: string
        type: object
    description: |-
      Describes the policy to be used for placement of a Service Fabric service where two replicas from the same partition should never be placed in the same fault or upgrade domain.

      While this is not common it can expose the service to an increased risk of concurrent failures due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider a case where replicas are deployed across different data center, with one replica per location. In the event that one of the datacenters goes offline, normally the replica that was placed in that datacenter will be packed into one of the remaining datacenters. If this is not desirable then this policy should be set.
    x-ms-discriminator-value: RequiredDomainDistribution
  ServicePlacementRequiredDomainPolicyDescription:
    allOf:
      - $ref: '#/definitions/ServicePlacementPolicyDescription'
      - description: ServicePlacementRequiredDomainPolicyDescription
        properties:
          DomainName:
            description: The name of the domain that should used for placement as per this policy.
            type: string
        type: object
    description: Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain
    x-ms-discriminator-value: RequiredDomain
  ServiceReplicaProperties:
    description: Describes the properties of a service replica.
    properties:
      codePackages:
        description: 'Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).'
        items:
          $ref: '#/definitions/ContainerCodePackageProperties'
        type: array
      diagnostics:
        $ref: '#/definitions/DiagnosticsRef'
        description: Reference to sinks in DiagnosticsDescription.
      networkRefs:
        description: The names of the private networks that this service needs to be part of.
        items:
          $ref: '#/definitions/NetworkRef'
        type: array
      osType:
        description: The Operating system type required by the code in service.
        enum:
          - Linux
          - Windows
        type: string
        x-ms-enum:
          modelAsString: true
          name: OperatingSystemTypes
    required:
      - osType
      - codePackages
    type: object
  ServiceResourceDescription:
    description: Describes a service fabric service resource.
    properties:
      name:
        $ref: '#/definitions/ServiceResourceName'
        description: Service resource name.
      properties:
        $ref: '#/definitions/ServiceResourceProperties'
        description: This type describes properties of a service resource.
        x-ms-client-flatten: true
    required:
      - name
      - properties
    type: object
  ServiceResourceName:
    description: Service resource name.
    type: string
  ServiceResourceProperties:
    allOf:
      - $ref: '#/definitions/ServiceReplicaProperties'
      - properties:
          description:
            description: User readable description of the service.
            type: string
          healthState:
            $ref: '#/definitions/HealthState'
            description: 'The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.'
          replicaCount:
            description: The number of replicas of the service to create. Defaults to 1 if not specified.
            type: integer
          status:
            description: Represents the status of the service.
            enum:
              - Unknown
              - Active
              - Upgrading
              - Deleting
              - Creating
              - Failed
            readOnly: true
            type: string
            x-ms-enum:
              modelAsString: true
              name: ServiceResourceStatus
        type: object
    description: This type describes properties of a service resource.
  ServiceResourceReplicaDescription:
    allOf:
      - $ref: '#/definitions/ServiceReplicaProperties'
      - properties:
          replicaName:
            description: Name of the replica.
            type: string
        required:
          - replicaName
        type: object
    description: Describes a replica of a service resource.
    type: object
  ServiceStatus:
    description: The status of the application.
    enum:
      - Unknown
      - Active
      - Upgrading
      - Deleting
      - Creating
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceStatus
      values:
        - description: Indicates the service status is unknown. The value is zero.
          value: Unknown
        - description: Indicates the service status is active. The value is 1.
          value: Active
        - description: Indicates the service is upgrading. The value is 2.
          value: Upgrading
        - description: Indicates the service is being deleted. The value is 3.
          value: Deleting
        - description: Indicates the service is being created. The value is 4.
          value: Creating
        - description: Indicates creation or deletion was terminated due to persistent failures. Another create/delete request can be accepted. The value is 5.
          value: Failed
  ServiceTypeDescription:
    description: Describes a service type defined in the service manifest of a provisioned application type. The properties the ones defined in the service manifest.
    discriminator: Kind
    properties:
      Extensions:
        $ref: '#/definitions/ServiceTypeExtensionDescriptionList'
        description: List of service type extensions.
      IsStateful:
        description: 'Indicates whether the service type is a stateful service type or a stateless service type. This property is true if the service type is a stateful service type, false otherwise.'
        type: boolean
      Kind:
        $ref: '#/definitions/ServiceKind'
        description: The kind of service (Stateless or Stateful).
      LoadMetrics:
        $ref: '#/definitions/ServiceLoadMetricsList'
        description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
      PlacementConstraints:
        description: The placement constraint to be used when instantiating this service in a Service Fabric cluster.
        type: string
      ServicePlacementPolicies:
        $ref: '#/definitions/ServicePlacementPolicyDescriptionList'
        description: List of service placement policy descriptions.
      ServiceTypeName:
        $ref: '#/definitions/ServiceTypeName'
        description: Name of the service type as specified in the service manifest.
    required:
      - Kind
    type: object
  ServiceTypeExtensionDescription:
    description: Describes extension of a service type defined in the service manifest.
    properties:
      Key:
        description: The name of the extension.
        type: string
      Value:
        description: The extension value.
        type: string
    type: object
  ServiceTypeExtensionDescriptionList:
    description: List of service type extensions.
    items:
      $ref: '#/definitions/ServiceTypeExtensionDescription'
    type: array
  ServiceTypeHealthPolicy:
    description: Represents the health policy used to evaluate the health of services belonging to a service type.
    properties:
      MaxPercentUnhealthyPartitionsPerService:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100

          The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
          If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
          The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
          The computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.
        type: integer
      MaxPercentUnhealthyReplicasPerPartition:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.

          The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
          If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
          The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
          The computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.
        type: integer
      MaxPercentUnhealthyServices:
        default: 0
        description: |-
          The maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.

          The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
          If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
          This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
          The computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.
        type: integer
    type: object
  ServiceTypeHealthPolicyMap:
    description: |-
      Defines a ServiceTypeHealthPolicy per service type name.

      The entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.

      If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
    items:
      $ref: '#/definitions/ServiceTypeHealthPolicyMapItem'
    type: array
  ServiceTypeHealthPolicyMapItem:
    description: Defines an item in ServiceTypeHealthPolicyMap.
    properties:
      Key:
        description: The key of the service type health policy map item. This is the name of the service type.
        type: string
      Value:
        $ref: '#/definitions/ServiceTypeHealthPolicy'
        description: The value of the service type health policy map item. This is the ServiceTypeHealthPolicy for this service type.
    required:
      - Key
      - Value
    type: object
  ServiceTypeInfo:
    description: Information about a service type that is defined in a service manifest of a provisioned application type.
    properties:
      IsServiceGroup:
        description: 'Indicates whether the service is a service group. If it is, the property value is true otherwise false.'
        type: boolean
      ServiceManifestName:
        $ref: '#/definitions/ServiceManifestName'
        description: The name of the service manifest in which this service type is defined.
      ServiceManifestVersion:
        description: The version of the service manifest in which this service type is defined.
        type: string
      ServiceTypeDescription:
        $ref: '#/definitions/ServiceTypeDescription'
        description: Describes a service type defined in the service manifest of a provisioned application type. The properties the ones defined in the service manifest.
    type: object
  ServiceTypeInfoList:
    description: List of service type information.
    items:
      $ref: '#/definitions/ServiceTypeInfo'
    type: array
  ServiceTypeManifest:
    description: Contains the manifest describing a service type registered as part of an application in a Service Fabric cluster.
    properties:
      Manifest:
        description: The XML manifest as a string.
        type: string
    type: object
  ServiceTypeName:
    description: Name of the service type as specified in the service manifest.
    type: string
  ServiceTypeRegistrationStatus:
    description: The status of the service type registration on the node.
    enum:
      - Invalid
      - Disabled
      - Enabled
      - Registered
    type: string
    x-ms-enum:
      modelAsString: true
      name: ServiceTypeRegistrationStatus
      values:
        - description: Indicates the registration status is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: 'Indicates that the service type is disabled on this node. A type gets disabled when there are too many failures of the code package hosting the service type. If the service type is disabled, new replicas of that service type will not be placed on the node until it is enabled again. The service type is enabled again after the process hosting it comes up and re-registers the type or a preconfigured time interval has passed. The value is 1.'
          value: Disabled
        - description: Indicates that the service type is enabled on this node. Replicas of this service type can be placed on this node when the code package registers the service type. The value is 2.
          value: Enabled
        - description: Indicates that the service type is enabled and registered on the node by a code package. Replicas of this service type can now be placed on this node. The value is 3.
          value: Registered
  ServiceUpdateDescription:
    description: A ServiceUpdateDescription contains all of the information necessary to update a service.
    discriminator: ServiceKind
    properties:
      CorrelationScheme:
        $ref: '#/definitions/CorrelationSchemeList'
        description: The correlation scheme.
      DefaultMoveCost:
        $ref: '#/definitions/MoveCost'
        description: The move cost for the service.
      Flags:
        description: |-
          Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.
          This property can be a combination of those flags obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then the flags for ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.

          - None - Does not indicate any other properties are set. The value is zero.
          - TargetReplicaSetSize/InstanceCount - Indicates whether the TargetReplicaSetSize property (for Stateful services) or the InstanceCount property (for Stateless services) is set. The value is 1.
          - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is  2.
          - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 4.
          - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 8.
          - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The value is 16.
          - PlacementConstraints - Indicates the PlacementConstraints property is set. The value is 32.
          - PlacementPolicyList - Indicates the ServicePlacementPolicies property is set. The value is 64.
          - Correlation - Indicates the CorrelationScheme property is set. The value is 128.
          - Metrics - Indicates the ServiceLoadMetrics property is set. The value is 256.
          - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value is 512.
          - ScalingPolicy - Indicates the ScalingPolicies property is set. The value is 1024.
        type: string
      LoadMetrics:
        $ref: '#/definitions/ServiceLoadMetricsList'
        description: The service load metrics.
      PlacementConstraints:
        description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        type: string
      ScalingPolicies:
        $ref: '#/definitions/ScalingPolicyDescriptionList'
        description: Scaling policies for this service.
      ServiceKind:
        $ref: '#/definitions/ServiceKind'
        description: The service kind.
      ServicePlacementPolicies:
        $ref: '#/definitions/ServicePlacementPoliciesList'
        description: The service placement policies.
    required:
      - ServiceKind
    type: object
  ServicesHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: ServicesHealthEvaluation
        properties:
          MaxPercentUnhealthyServices:
            description: Maximum allowed percentage of unhealthy services from the ServiceTypeHealthPolicy.
            type: integer
          ServiceTypeName:
            description: Name of the service type of the services.
            type: string
          TotalCount:
            description: Total number of services of the current service type in the application from the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy ServiceHealthEvaluation that impacted the aggregated health.
        type: object
    description: 'Represents health evaluation for services of a certain service type belonging to an application, containing health evaluations for each unhealthy service that impacted current aggregated health state. Can be returned when evaluating application health and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: Services
  Setting:
    description: Describes a setting for the container.
    properties:
      name:
        description: The name of the setting.
        type: string
      value:
        description: The value of the setting.
        type: string
    type: object
  SingletonPartitionInformation:
    allOf:
      - $ref: '#/definitions/PartitionInformation'
      - description: StatelessServicePartitionInfo
        type: object
    description: Information about a partition that is singleton. The services with singleton partitioning scheme are effectively non-partitioned. They only have one partition.
    x-ms-discriminator-value: Singleton
  SingletonPartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: SingletonPartitionSchemeDescription
        type: object
    description: 'Describes the partition scheme of a singleton-partitioned, or non-partitioned service.'
    x-ms-discriminator-value: Singleton
  StartClusterUpgradeDescription:
    description: Describes the parameters for starting a cluster upgrade.
    properties:
      ApplicationHealthPolicyMap:
        $ref: '#/definitions/ApplicationHealthPolicies'
        description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      ClusterUpgradeHealthPolicy:
        $ref: '#/definitions/ClusterUpgradeHealthPolicyObject'
        description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
      CodeVersion:
        description: The cluster code version.
        type: string
      ConfigVersion:
        description: The cluster configuration version.
        type: string
      EnableDeltaHealthEvaluation:
        description: 'When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.'
        type: boolean
      ForceRestart:
        $ref: '#/definitions/ForceRestart'
        description: 'If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).'
      MonitoringPolicy:
        $ref: '#/definitions/MonitoringPolicyDescription'
        description: Describes the parameters for monitoring an upgrade in Monitored mode.
      RollingUpgradeMode:
        $ref: '#/definitions/UpgradeMode'
        description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
      UpgradeKind:
        $ref: '#/definitions/UpgradeKind'
        description: The kind of upgrade out of the following possible values.
      UpgradeReplicaSetCheckTimeoutInSeconds:
        $ref: '#/definitions/UpgradeReplicaSetCheckTimeout'
        description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    type: object
  StartedChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: StartedChaosEvent
        properties:
          ChaosParameters:
            $ref: '#/definitions/ChaosParameters'
            description: Defines all the parameters to configure a Chaos run.
        type: object
    description: Describes a Chaos event that gets generated when Chaos is started.
    x-ms-discriminator-value: Started
  StatefulReplicaHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          ReplicaInstanceId:
            description: Id of Replica instance.
            format: int64
            type: integer
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ReplicaInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Stateful Replica Health Report Created event.
    x-ms-discriminator-value: StatefulReplicaHealthReportCreated
  StatefulReplicaHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          ReplicaInstanceId:
            description: Id of Replica instance.
            format: int64
            type: integer
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - ReplicaInstanceId
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Stateful Replica Health Report Expired event.
    x-ms-discriminator-value: StatefulReplicaHealthReportExpired
  StatefulServiceDescription:
    allOf:
      - $ref: '#/definitions/ServiceDescription'
      - description: StatefulServiceDescription
        type: object
    description: Describes a stateful service.
    properties:
      Flags:
        description: |-
          Flags indicating whether other properties are set. Each of the associated properties corresponds to a flag, specified below, which, if set, indicate that the property is specified.
          This property can be a combination of those flags obtained using bitwise 'OR' operator.
          For example, if the provided value is 6 then the flags for QuorumLossWaitDuration (2) and StandByReplicaKeepDuration(4) are set.

          - None - Does not indicate any other properties are set. The value is zero.
          - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration property is set. The value is 1.
          - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is set. The value is 2.
          - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration property is set. The value is 4.
        type: integer
      HasPersistedState:
        description: 'A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.'
        type: boolean
      MinReplicaSetSize:
        description: The minimum replica set size as a number.
        minimum: 1
        type: integer
      QuorumLossWaitDurationSeconds:
        description: 'The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.'
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      ReplicaRestartWaitDurationSeconds:
        description: 'The duration, in seconds, between when a replica goes down and when a new replica is created.'
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      StandByReplicaKeepDurationSeconds:
        description: The definition on how long StandBy replicas should be maintained before being removed.
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      TargetReplicaSetSize:
        description: The target replica set size as a number.
        minimum: 1
        type: integer
    required:
      - TargetReplicaSetSize
      - MinReplicaSetSize
      - HasPersistedState
    x-ms-discriminator-value: Stateful
  StatefulServiceInfo:
    allOf:
      - $ref: '#/definitions/ServiceInfo'
      - description: StatefulService
        properties:
          HasPersistedState:
            description: Whether the service has persisted state.
            type: boolean
        type: object
    description: Information about a stateful Service Fabric service.
    x-ms-discriminator-value: Stateful
  StatefulServicePartitionInfo:
    allOf:
      - $ref: '#/definitions/ServicePartitionInfo'
      - description: StatefulServicePartitionInfo
        type: object
    description: Information about a partition of a stateful Service Fabric service..
    properties:
      CurrentConfigurationEpoch:
        $ref: '#/definitions/Epoch'
        description: 'An Epoch is a configuration number for the partition as a whole. When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new Epoch from the ones which were sent by the old Primary replica.'
      LastQuorumLossDuration:
        description: 'The duration for which this partition was in quorum loss. If the partition is currently in quorum loss, it returns the duration since it has been in that state. This field is using ISO8601 format for specifying the duration.'
        format: duration
        type: string
      MinReplicaSetSize:
        description: The minimum replica set size as a number.
        format: int64
        type: integer
      TargetReplicaSetSize:
        description: The target replica set size as a number.
        format: int64
        type: integer
    x-ms-discriminator-value: Stateful
  StatefulServiceReplicaHealth:
    allOf:
      - $ref: '#/definitions/ReplicaHealth'
      - description: StatefulServiceReplicaHealth
        properties:
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
        type: object
    description: |-
      Represents the health of the stateful service replica.
      Contains the replica aggregated health state, the health events and the unhealthy evaluations.
    x-ms-discriminator-value: Stateful
  StatefulServiceReplicaHealthState:
    allOf:
      - $ref: '#/definitions/ReplicaHealthState'
      - description: StatefulServiceReplicaHealthState
        properties:
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
        type: object
    description: 'Represents the health state of the stateful service replica, which contains the replica ID and the aggregated health state.'
    x-ms-discriminator-value: Stateful
  StatefulServiceReplicaInfo:
    allOf:
      - $ref: '#/definitions/ReplicaInfo'
      - description: StatefulServiceReplicaInfo
        properties:
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: 'Id of a stateful service replica. ReplicaId is used by Service Fabric to uniquely identify a replica of a partition. It is unique within a partition and does not change for the lifetime of the replica. If a replica gets dropped and another replica gets created on the same node for the same partition, it will get a different value for the id. Sometimes the id of a stateless service instance is also referred as a replica id.'
          ReplicaRole:
            $ref: '#/definitions/ReplicaRole'
            description: The role of a replica of a stateful service.
        type: object
    description: 'Represents a stateful service replica. This includes information about the identity, role, status, health, node name, uptime, and other details about the replica.'
    x-ms-discriminator-value: Stateful
  StatefulServiceTypeDescription:
    allOf:
      - $ref: '#/definitions/ServiceTypeDescription'
      - description: StatefulServiceTypeDescription
        type: object
    description: Describes a stateful service type defined in the service manifest of a provisioned application type.
    properties:
      HasPersistedState:
        description: 'A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.'
        type: boolean
    x-ms-discriminator-value: Stateful
  StatefulServiceUpdateDescription:
    allOf:
      - $ref: '#/definitions/ServiceUpdateDescription'
      - description: StatefulServiceUpdateDescription
        type: object
    description: Describes an update for a stateful service.
    properties:
      MinReplicaSetSize:
        description: The minimum replica set size as a number.
        minimum: 1
        type: integer
      QuorumLossWaitDurationSeconds:
        description: 'The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.'
        type: string
      ReplicaRestartWaitDurationSeconds:
        description: 'The duration, in seconds, between when a replica goes down and when a new replica is created.'
        type: string
      StandByReplicaKeepDurationSeconds:
        description: The definition on how long StandBy replicas should be maintained before being removed.
        type: string
      TargetReplicaSetSize:
        description: The target replica set size as a number.
        minimum: 1
        type: integer
    x-ms-discriminator-value: Stateful
  StatelessReplicaHealthReportCreatedEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Stateless Replica Health Report Created event.
    x-ms-discriminator-value: StatelessReplicaHealthReportCreated
  StatelessReplicaHealthReportExpiredEvent:
    allOf:
      - $ref: '#/definitions/ReplicaEvent'
      - properties:
          Description:
            description: Description of report.
            type: string
          HealthState:
            description: Describes the property health state.
            type: string
          Property:
            description: Describes the property.
            type: string
          RemoveWhenExpired:
            description: Indicates the removal when it expires.
            type: boolean
          SequenceNumber:
            description: Sequence number of report.
            format: int64
            type: integer
          SourceId:
            description: Id of report source.
            type: string
          SourceUtcTimestamp:
            description: Source time.
            format: date-time
            type: string
          TimeToLiveMs:
            description: Time to live in milli-seconds.
            format: int64
            type: integer
        required:
          - SourceId
          - Property
          - HealthState
          - TimeToLiveMs
          - SequenceNumber
          - Description
          - RemoveWhenExpired
          - SourceUtcTimestamp
        type: object
    description: Stateless Replica Health Report Expired event.
    x-ms-discriminator-value: StatelessReplicaHealthReportExpired
  StatelessServiceDescription:
    allOf:
      - $ref: '#/definitions/ServiceDescription'
      - description: StatelessServiceDescription
        type: object
    description: Describes a stateless service.
    properties:
      InstanceCount:
        description: The instance count.
        minimum: -1
        type: integer
    required:
      - InstanceCount
    x-ms-discriminator-value: Stateless
  StatelessServiceInfo:
    allOf:
      - $ref: '#/definitions/ServiceInfo'
      - description: StatelessService
        type: object
    description: Information about a stateless Service Fabric service.
    x-ms-discriminator-value: Stateless
  StatelessServiceInstanceHealth:
    allOf:
      - $ref: '#/definitions/ReplicaHealth'
      - description: StatelessServiceInstanceHealth
        properties:
          InstanceId:
            $ref: '#/definitions/InstanceId'
            description: 'Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.'
        type: object
    description: |-
      Represents the health of the stateless service instance.
      Contains the instance aggregated health state, the health events and the unhealthy evaluations.
    x-ms-discriminator-value: Stateless
  StatelessServiceInstanceHealthState:
    allOf:
      - $ref: '#/definitions/ReplicaHealthState'
      - description: StatelessServiceInstanceHealthState
        properties:
          ReplicaId:
            $ref: '#/definitions/ReplicaId'
            description: Id of the stateless service instance on the wire this field is called ReplicaId.
        type: object
    description: 'Represents the health state of the stateless service instance, which contains the instance ID and the aggregated health state.'
    x-ms-discriminator-value: Stateless
  StatelessServiceInstanceInfo:
    allOf:
      - $ref: '#/definitions/ReplicaInfo'
      - description: StatelessServiceInstanceInfo
        properties:
          InstanceId:
            $ref: '#/definitions/InstanceId'
            description: 'Id of a stateless service instance. InstanceId is used by Service Fabric to uniquely identify an instance of a partition of a stateless service. It is unique within a partition and does not change for the lifetime of the instance. If the instance has failed over on the same or different node, it will get a different value for the InstanceId.'
        type: object
    description: 'Represents a stateless service instance. This includes information about the identity, status, health, node name, uptime, and other details about the instance.'
    x-ms-discriminator-value: Stateless
  StatelessServicePartitionInfo:
    allOf:
      - $ref: '#/definitions/ServicePartitionInfo'
      - description: StatelessServicePartitionInfo
        type: object
    description: Information about a partition of a stateless Service Fabric service.
    properties:
      InstanceCount:
        description: Number of instances of this partition.
        format: int64
        type: integer
    x-ms-discriminator-value: Stateless
  StatelessServiceTypeDescription:
    allOf:
      - $ref: '#/definitions/ServiceTypeDescription'
      - description: StatelessServiceTypeDescription
        type: object
    description: Describes a stateless service type defined in the service manifest of a provisioned application type.
    properties:
      UseImplicitHost:
        description: 'A flag indicating if this type is not implemented and hosted by a user service process, but is implicitly hosted by a system created process. This value is true for services using the guest executable services, false otherwise.'
        type: boolean
    x-ms-discriminator-value: Stateless
  StatelessServiceUpdateDescription:
    allOf:
      - $ref: '#/definitions/ServiceUpdateDescription'
      - description: StatelessServiceUpdateDescription
        type: object
    description: Describes an update for a stateless service.
    properties:
      InstanceCount:
        description: The instance count.
        minimum: -1
        type: integer
    x-ms-discriminator-value: Stateless
  StoppedChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: StoppedChaosEvent
        properties:
          Reason:
            description: Describes why Chaos stopped. Chaos can stop because of StopChaos API call or the timeToRun provided in ChaosParameters is over.
            type: string
        type: object
    description: Describes a Chaos event that gets generated when Chaos stops because either the user issued a stop or the time to run was up.
    x-ms-discriminator-value: Stopped
  StringPropertyValue:
    allOf:
      - $ref: '#/definitions/PropertyValue'
      - description: StringPropertyValue
        type: object
    description: Describes a Service Fabric property value of type String.
    properties:
      Data:
        description: The data of the property value.
        type: string
    required:
      - Data
    x-ms-discriminator-value: String
  SuccessfulPropertyBatchInfo:
    allOf:
      - $ref: '#/definitions/PropertyBatchInfo'
      - description: SuccessfulPropertyBatchInfo
        type: object
    description: Derived from PropertyBatchInfo. Represents the property batch succeeding. Contains the results of any "Get" operations in the batch.
    properties:
      Properties:
        additionalProperties:
          $ref: '#/definitions/PropertyInfo'
        description: 'A map containing the properties that were requested through any "Get" property batch operations. The key represents the index of the "Get" operation in the original request, in string form. The value is the property. If a property is not found, it will not be in the map.'
        type: object
    x-ms-discriminator-value: Successful
  SystemApplicationHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: SystemApplicationHealthEvaluation
        properties:
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: 'List of unhealthy evaluations that led to the current aggregated health state of the system application. The types of the unhealthy evaluations can be DeployedApplicationsHealthEvaluation, ServicesHealthEvaluation or EventHealthEvaluation.'
        type: object
    description: 'Represents health evaluation for the fabric:/System application, containing information about the data and the algorithm used by health store to evaluate health. The evaluation is returned only when the aggregated health state of the cluster is either Error or Warning.'
    x-ms-discriminator-value: SystemApplication
  TargetApplicationName:
    description: 'The name of the target application, including the ''fabric:'' URI scheme.'
    type: string
  TargetApplicationTypeVersion:
    description: The target application type version (found in the application manifest) for the application upgrade.
    type: string
  TargetDeploymentName:
    description: The name of the target deployment.
    type: string
  TestErrorChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: TestErrorChaosEvent
        properties:
          Reason:
            description: 'Describes why TestErrorChaosEvent was generated. For example, Chaos tries to fault a partition but finds that the partition is no longer fault tolerant, then a TestErrorEvent gets generated with the reason stating that the partition is not fault tolerant.'
            type: string
        type: object
    description: |-
      Describes a Chaos event that gets generated when an unexpected event occurs in the Chaos engine.
      For example, due to the cluster snapshot being inconsistent, while faulting an entity, Chaos found that the entity was already faulted -- which would be an unexpected event.
    x-ms-discriminator-value: TestError
  TimeBasedBackupScheduleDescription:
    allOf:
      - $ref: '#/definitions/BackupScheduleDescription'
      - type: object
      - description: TimeBasedBackupScheduleDescription
    description: Describes the time based backup schedule.
    properties:
      RunDays:
        $ref: '#/definitions/DayOfWeekList'
        description: List of days of a week when to trigger the periodic backup. This is valid only when the backup schedule frequency type is weekly.
      RunTimes:
        $ref: '#/definitions/TimeList'
        description: 'Represents the list of exact time during the day in ISO8601 format. Like ''19:00:00'' will represent ''7PM'' during the day. Date specified along with time will be ignored.'
      ScheduleFrequencyType:
        $ref: '#/definitions/BackupScheduleFrequencyType'
        description: Describes the frequency with which to run the time based backup schedule.
    required:
      - ScheduleFrequencyType
      - RunTimes
    type: object
    x-ms-discriminator-value: TimeBased
  TimeList:
    description: 'Represents the list of exact time during the day in ISO8601 format. Like ''19:00:00'' will represent ''7PM'' during the day. Date specified along with time will be ignored.'
    items:
      format: date-time
      type: string
    type: array
  TimeOfDay:
    description: Defines an hour and minute of the day specified in 24 hour time.
    properties:
      Hour:
        description: Represents the hour of the day. Value must be between 0 and 23 inclusive.
        format: int32
        maximum: 23
        minimum: 0
        type: integer
      Minute:
        description: Represents the minute of the hour. Value must be between 0 to 59 inclusive.
        format: int32
        maximum: 59
        minimum: 0
        type: integer
    type: object
  TimeRange:
    description: Defines a time range in a 24 hour day specified by a start and end time.
    properties:
      EndTime:
        $ref: '#/definitions/TimeOfDay'
        description: Defines an hour and minute of the day specified in 24 hour time.
      StartTime:
        $ref: '#/definitions/TimeOfDay'
        description: Defines an hour and minute of the day specified in 24 hour time.
    type: object
  UnhealthyEvaluations:
    description: List of health evaluations that resulted in the current aggregated health state.
    items:
      $ref: '#/definitions/HealthEvaluationWrapper'
    type: array
  UniformInt64RangePartitionSchemeDescription:
    allOf:
      - $ref: '#/definitions/PartitionSchemeDescription'
      - description: UniformInt64RangePartitionSchemeDescription
        type: object
    description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
    properties:
      Count:
        description: The number of partitions.
        type: integer
      HighKey:
        description: |-
          String indicating the upper bound of the partition key range that
          should be split between the partitions.
        type: string
      LowKey:
        description: |-
          String indicating the lower bound of the partition key range that
          should be split between the partitions.
        type: string
    required:
      - Count
      - LowKey
      - HighKey
    x-ms-discriminator-value: UniformInt64Range
  UnprovisionApplicationTypeDescriptionInfo:
    description: Describes the operation to unregister or unprovision an application type and its version that was registered with the Service Fabric.
    properties:
      ApplicationTypeVersion:
        $ref: '#/definitions/ApplicationTypeVersion'
        description: The version of the application type as defined in the application manifest.
      Async:
        description: 'The flag indicating whether or not unprovision should occur asynchronously. When set to true, the unprovision operation returns when the request is accepted by the system, and the unprovision operation continues without any timeout limit. The default value is false. However, we recommend setting it to true for large application packages that were provisioned.'
        type: boolean
    required:
      - ApplicationTypeVersion
    type: object
  UnprovisionFabricDescription:
    description: Describes the parameters for unprovisioning a cluster.
    properties:
      CodeVersion:
        description: The cluster code package version.
        type: string
      ConfigVersion:
        description: The cluster manifest version.
        type: string
    type: object
  UpdateClusterUpgradeDescription:
    description: Parameters for updating a cluster upgrade.
    properties:
      ApplicationHealthPolicyMap:
        $ref: '#/definitions/ApplicationHealthPolicies'
        description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
      ClusterHealthPolicy:
        $ref: '#/definitions/ClusterHealthPolicy'
        description: Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      ClusterUpgradeHealthPolicy:
        $ref: '#/definitions/ClusterUpgradeHealthPolicyObject'
        description: Defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
      EnableDeltaHealthEvaluation:
        $ref: '#/definitions/DeltaHealthEvaluationBool'
        description: 'When true, enables delta health evaluation rather than absolute health evaluation after completion of each upgrade domain.'
      UpdateDescription:
        $ref: '#/definitions/RollingUpgradeUpdateDescription'
        description: Describes the parameters for updating a rolling upgrade of application or cluster.
      UpgradeKind:
        $ref: '#/definitions/UpgradeType'
        description: The type of upgrade out of the following possible values.
  UpgradeDomainDeltaNodesCheckHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: UpgradeDomainDeltaNodesCheckHealthEvaluation
        properties:
          BaselineErrorCount:
            description: Number of upgrade domain nodes with aggregated heath state Error in the health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          BaselineTotalCount:
            description: Total number of upgrade domain nodes in the health store at the beginning of the cluster upgrade.
            format: int64
            type: integer
          MaxPercentDeltaUnhealthyNodes:
            description: Maximum allowed percentage of upgrade domain delta unhealthy nodes from the ClusterUpgradeHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of upgrade domain nodes in the health store.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy NodeHealthEvaluation that impacted the aggregated health.
          UpgradeDomainName:
            description: Name of the upgrade domain where nodes health is currently evaluated.
            type: string
        type: object
    description: |-
      Represents health evaluation for delta unhealthy cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state.
      Can be returned during cluster upgrade when cluster aggregated health state is Warning or Error.
    x-ms-discriminator-value: UpgradeDomainDeltaNodesCheck
  UpgradeDomainDurationString:
    description: The estimated elapsed time spent processing the current upgrade domain.
    type: string
  UpgradeDomainInfo:
    description: Information about an upgrade domain.
    properties:
      Name:
        $ref: '#/definitions/UpgradeDomainName'
        description: The name of the upgrade domain
      State:
        $ref: '#/definitions/UpgradeDomainState'
        description: The state of the upgrade domain.
    type: object
  UpgradeDomainInfoList:
    description: List of upgrade domains and their statuses.
    items:
      $ref: '#/definitions/UpgradeDomainInfo'
    type: array
  UpgradeDomainName:
    description: The name of the upgrade domain
    type: string
  UpgradeDomainNodesHealthEvaluation:
    allOf:
      - $ref: '#/definitions/HealthEvaluation'
      - description: UpgradeDomainNodesHealthEvaluation
        properties:
          MaxPercentUnhealthyNodes:
            description: Maximum allowed percentage of unhealthy nodes from the ClusterHealthPolicy.
            type: integer
          TotalCount:
            description: Total number of nodes in the current upgrade domain.
            format: int64
            type: integer
          UnhealthyEvaluations:
            $ref: '#/definitions/UnhealthyEvaluations'
            description: List of unhealthy evaluations that led to the aggregated health state. Includes all the unhealthy NodeHealthEvaluation that impacted the aggregated health.
          UpgradeDomainName:
            description: Name of the upgrade domain where nodes health is currently evaluated.
            type: string
        type: object
    description: 'Represents health evaluation for cluster nodes in an upgrade domain, containing health evaluations for each unhealthy node that impacted current aggregated health state. Can be returned when evaluating cluster health during cluster upgrade and the aggregated health state is either Error or Warning.'
    x-ms-discriminator-value: UpgradeDomainNodes
  UpgradeDomainState:
    description: The state of the upgrade domain.
    enum:
      - Invalid
      - Pending
      - InProgress
      - Completed
    type: string
    x-ms-enum:
      modelAsString: true
      name: UpgradeDomainState
      values:
        - description: Indicates the upgrade domain state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade domain has not started upgrading yet. The value is 1
          value: Pending
        - description: The upgrade domain is being upgraded but not complete yet. The value is 2
          value: InProgress
        - description: The upgrade domain has completed upgrade. The value is 3
          value: Completed
  UpgradeDomainTimeout:
    default: P10675199DT02H48M05.4775807S
    description: 'The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  UpgradeDuration:
    default: PT0H2M0S
    description: 'The estimated amount of time that the overall upgrade elapsed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  UpgradeDurationString:
    description: The estimated elapsed time spent processing the current overall upgrade.
    type: string
  UpgradeFailureTimeUTCString:
    description: The failure time of the upgrade in UTC.
    type: string
  UpgradeKind:
    default: Rolling
    description: The kind of upgrade out of the following possible values.
    enum:
      - Invalid
      - Rolling
    type: string
    x-ms-enum:
      modelAsString: true
      name: UpgradeKind
      values:
        - description: Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade progresses one upgrade domain at a time. The value is 1
          value: Rolling
  UpgradeMode:
    default: UnmonitoredAuto
    description: 'The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.'
    enum:
      - Invalid
      - UnmonitoredAuto
      - UnmonitoredManual
      - Monitored
    type: string
    x-ms-enum:
      modelAsString: true
      name: UpgradeMode
      values:
        - description: Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade will proceed automatically without performing any health monitoring. The value is 1
          value: UnmonitoredAuto
        - description: 'The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2'
          value: UnmonitoredManual
        - description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
          value: Monitored
  UpgradeOrchestrationServiceState:
    description: Service state of Service Fabric Upgrade Orchestration Service.
    properties:
      ServiceState:
        description: The state of Service Fabric Upgrade Orchestration Service.
        type: string
    type: object
  UpgradeOrchestrationServiceStateSummary:
    description: Service state summary of Service Fabric Upgrade Orchestration Service.
    properties:
      CurrentCodeVersion:
        description: The current code version of the cluster.
        type: string
      CurrentManifestVersion:
        description: The current manifest version of the cluster.
        type: string
      PendingUpgradeType:
        description: The type of the pending upgrade of the cluster.
        type: string
      TargetCodeVersion:
        description: The target code version of  the cluster.
        type: string
      TargetManifestVersion:
        description: The target manifest version of the cluster.
        type: string
    type: object
  UpgradeReplicaSetCheckTimeout:
    default: 42949672925
    description: 'The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).'
    format: int64
    type: integer
  UpgradeStartTimeUTCString:
    description: The start time of the upgrade in UTC.
    type: string
  UpgradeState:
    description: The state of the upgrade domain.
    enum:
      - Invalid
      - RollingBackInProgress
      - RollingBackCompleted
      - RollingForwardPending
      - RollingForwardInProgress
      - RollingForwardCompleted
      - Failed
    type: string
    x-ms-enum:
      modelAsString: true
      name: UpgradeState
      values:
        - description: Indicates the upgrade state is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade is rolling back to the previous version but is not complete yet. The value is 1
          value: RollingBackInProgress
        - description: The upgrade has finished rolling back. The value is 2
          value: RollingBackCompleted
        - description: The current upgrade domain has finished upgrading. The overall upgrade is waiting for an explicit move next request in UnmonitoredManual mode or performing health checks in Monitored mode. The value is 3
          value: RollingForwardPending
        - description: The upgrade is rolling forward to the target version but is not complete yet. The value is 4
          value: RollingForwardInProgress
        - description: The upgrade has finished rolling forward. The value is 5
          value: RollingForwardCompleted
        - description: The upgrade has failed and is unable to execute FailureAction. The value is 6
          value: Failed
  UpgradeTimeout:
    default: P10675199DT02H48M05.4775807S
    description: 'The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.'
    type: string
  UpgradeType:
    default: Rolling
    description: The type of upgrade out of the following possible values.
    enum:
      - Invalid
      - Rolling
      - Rolling_ForceRestart
    type: string
    x-ms-enum:
      modelAsString: true
      name: UpgradeType
      values:
        - description: Indicates the upgrade kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          value: Invalid
        - description: The upgrade progresses one upgrade domain at a time. The value is 1.
          value: Rolling
        - description: The upgrade gets restarted by force. The value is 2.
          value: Rolling_ForceRestart
  UploadChunkRange:
    description: Information about which portion of the file to upload.
    properties:
      EndPosition:
        description: The end position of the portion of the file. It's represented by the number of bytes.
        type: string
      StartPosition:
        description: The start position of the portion of the file. It's represented by the number of bytes.
        type: string
    type: object
  UploadSession:
    description: Information about a image store upload session
    properties:
      UploadSessions:
        description: 'When querying upload session by upload session ID, the result contains only one upload session. When querying upload session by image store relative path, the result might contain multiple upload sessions.'
        items:
          $ref: '#/definitions/UploadSessionInfo'
        type: array
    type: object
  UploadSessionInfo:
    description: Information about an image store upload session. A session is associated with a relative path in the image store.
    properties:
      ExpectedRanges:
        description: List of chunk ranges that image store has not received yet.
        items:
          $ref: '#/definitions/UploadChunkRange'
        type: array
      FileSize:
        description: The size in bytes of the uploading file.
        type: string
      ModifiedDate:
        description: The date and time when the upload session was last modified.
        format: date-time
        type: string
      SessionId:
        description: A unique ID of the upload session. A session ID can be reused only if the session was committed or removed.
        format: uuid
        type: string
      StoreRelativePath:
        description: The remote location within image store. This path is relative to the image store root.
        type: string
    type: object
  ValidationFailedChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: ValidationFailedChaosEvent
        properties:
          Reason:
            description: Describes why the ValidationFailedChaosEvent was generated. This may happen because more than MaxPercentUnhealthyNodes are unhealthy for more than MaxClusterStabilizationTimeout. This reason will be in the Reason property of the ValidationFailedChaosEvent as a string.
            type: string
        type: object
    description: Chaos event corresponding to a failure during validation.
    x-ms-discriminator-value: ValidationFailed
  VolumeProperties:
    description: This type describes properties of a volume resource.
    properties:
      azureFileParameters:
        $ref: '#/definitions/VolumeProviderParametersAzureFile'
        description: This type describes a volume provided by an Azure Files file share.
      description:
        description: User readable description of the volume.
        type: string
      provider:
        description: Provider of the volume.
        enum:
          - SFAzureFile
        type: string
        x-ms-enum:
          modelAsString: true
          name: VolumeProvider
    required:
      - provider
    type: object
  VolumeProviderParametersAzureFile:
    description: This type describes a volume provided by an Azure Files file share.
    properties:
      accountKey:
        description: Access key of the Azure storage account for the File Share.
        type: string
      accountName:
        description: Name of the Azure storage account for the File Share.
        type: string
      shareName:
        description: Name of the Azure Files file share that provides storage for the volume.
        type: string
    required:
      - accountName
      - shareName
    type: object
  VolumeResourceDescription:
    description: Describes a service fabric volume resource.
    properties:
      name:
        $ref: '#/definitions/VolumeResourceName'
        description: Volume resource name.
      properties:
        $ref: '#/definitions/VolumeProperties'
        description: This type describes properties of a volume resource.
        x-ms-client-flatten: true
    required:
      - name
      - properties
    type: object
  VolumeResourceName:
    description: Volume resource name.
    type: string
  WaitForInbuildReplicaSafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: WaitForInbuildReplicaSafetyCheck
        type: object
    description: Safety check that waits for the replica build operation to finish. This indicates that there is a replica that is going through the copy or is providing data for building another replica. Bring the node down will abort this copy operation which are typically expensive involving data movements.
    x-ms-discriminator-value: WaitForInbuildReplica
  WaitForPrimaryPlacementSafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: WaitForPrimaryPlacementSafetyCheck
        type: object
    description: Safety check that waits for the primary replica that was moved out of the node due to upgrade to be placed back again on that node.
    x-ms-discriminator-value: WaitForPrimaryPlacement
  WaitForPrimarySwapSafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: WaitForPrimarySwapSafetyCheck
        type: object
    description: Safety check that waits for the primary replica to be moved out of the node before starting an upgrade to ensure the availability of the primary replica for the partition.
    x-ms-discriminator-value: WaitForPrimarySwap
  WaitForReconfigurationSafetyCheck:
    allOf:
      - $ref: '#/definitions/PartitionSafetyCheck'
      - description: WaitForReconfigurationSafetyCheck
        type: object
    description: Safety check that waits for the current reconfiguration of the partition to be completed before starting an upgrade.
    x-ms-discriminator-value: WaitForReconfiguration
  WaitingChaosEvent:
    allOf:
      - $ref: '#/definitions/ChaosEvent'
      - description: WaitingChaosEvent
        properties:
          Reason:
            description: 'Describes why the WaitingChaosEvent was generated, for example, due to a cluster upgrade.'
            type: string
        type: object
    description: 'Describes a Chaos event that gets generated when Chaos is waiting for the cluster to become ready for faulting, for example, Chaos may be waiting for the on-going upgrade to finish.'
    x-ms-discriminator-value: Waiting
