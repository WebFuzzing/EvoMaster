swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: 'These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>'
  title: Azure ML Web Services Management Client
  version: 2016-05-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearning/resource-manager/Microsoft.MachineLearning/preview/2016-05-01-preview/webservices.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: machinelearning-webservices
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
parameters:
  APIVersionParameter:
    description: The version of the Microsoft.MachineLearning resource provider API to use.
    in: query
    name: api-version
    required: true
    type: string
  ResourceGroupNameParameter:
    description: Name of the resource group in which the web service is located.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: The Azure subscription ID.
    in: path
    name: subscriptionId
    required: true
    type: string
  WebServiceNameParameter:
    description: The name of the web service.
    in: path
    name: webServiceName
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices':
    get:
      description: Gets the web services in the specified subscription.
      operationId: WebServices_List
      parameters:
        - description: Continuation token for pagination.
          in: query
          name: $skiptoken
          required: false
          type: string
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: 'Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service.'
          schema:
            $ref: '#/definitions/PaginatedWebServicesList'
      tags:
        - WebServices
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices':
    get:
      description: Gets the web services in the specified resource group.
      operationId: WebServices_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - description: Continuation token for pagination.
          in: query
          name: $skiptoken
          required: false
          type: string
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: 'Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service.'
          schema:
            $ref: '#/definitions/PaginatedWebServicesList'
      tags:
        - WebServices
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}':
    delete:
      description: Deletes the specified web service.
      operationId: WebServices_Remove
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/WebServiceNameParameter'
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Note that a 202 status is returned even if the service did not exist.
        '204':
          description: No Content.
      tags:
        - WebServices
      x-ms-long-running-operation: true
    get:
      description: 'Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that the storage credentials and web service keys are not returned by this call. To get the web service access keys, call List Keys.'
      operationId: WebServices_Get
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/WebServiceNameParameter'
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: 'Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx.'
          schema:
            $ref: '#/definitions/WebService'
      tags:
        - WebServices
    patch:
      description: 'Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.'
      operationId: WebServices_Patch
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/WebServiceNameParameter'
        - description: The payload to use to patch the web service.
          in: body
          name: patchPayload
          required: true
          schema:
            $ref: '#/definitions/WebService'
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: 'Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx.'
          schema:
            $ref: '#/definitions/WebService'
      tags:
        - WebServices
      x-ms-long-running-operation: true
    put:
      description: 'Create or update a web service. This call will overwrite an existing web service. Note that there is no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new web service, call the Get operation first to verify that it does not exist.'
      operationId: WebServices_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/WebServiceNameParameter'
        - description: The payload that is used to create or update the web service.
          in: body
          name: createOrUpdatePayload
          required: true
          schema:
            $ref: '#/definitions/WebService'
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: 'Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx.'
          schema:
            $ref: '#/definitions/WebService'
        '201':
          description: 'Created. This response is returned for a create web service operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://msdn.microsoft.com/en-us/library/mt742920.aspx.'
          schema:
            $ref: '#/definitions/WebService'
      tags:
        - WebServices
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/listKeys':
    get:
      description: Gets the access keys for the specified web service.
      operationId: WebServices_ListKeys
      parameters:
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/WebServiceNameParameter'
        - $ref: '#/parameters/APIVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/WebServiceKeys'
      tags:
        - WebServices
definitions:
  AssetItem:
    description: Information about an asset associated with the web service.
    properties:
      id:
        description: Asset's Id.
        type: string
      inputPorts:
        additionalProperties:
          $ref: '#/definitions/InputPort'
        description: Information about the asset's input ports.
        type: object
      locationInfo:
        $ref: '#/definitions/AssetLocation'
        description: Access information for the asset.
      metadata:
        additionalProperties:
          type: string
        description: 'If the asset is a custom module, this holds the module''s metadata.'
        type: object
      name:
        description: Asset's friendly name.
        type: string
      outputPorts:
        additionalProperties:
          $ref: '#/definitions/OutputPort'
        description: Information about the asset's output ports.
        type: object
      parameters:
        description: 'If the asset is a custom module, this holds the module''s parameters.'
        items:
          $ref: '#/definitions/ModuleAssetParameter'
        type: array
      type:
        description: Asset's type.
        enum:
          - Module
          - Resource
        type: string
        x-ms-enum:
          modelAsString: true
          name: AssetType
    required:
      - name
      - type
      - locationInfo
    type: object
  AssetLocation:
    description: Describes the access location for a web service asset.
    properties:
      credentials:
        description: 'Access credentials for the asset, if applicable (e.g. asset specified by storage account connection string + blob URI)'
        type: string
      uri:
        description: 'The URI where the asset is accessible from, (e.g. aml://abc for system assets or https://xyz for user assets'
        format: url
        type: string
    required:
      - uri
    type: object
  ColumnSpecification:
    description: 'Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/'
    properties:
      enum:
        description: 'If the data type is categorical, this provides the list of accepted categories.'
        items:
          type: object
        type: array
      format:
        description: Additional format information for the data type.
        enum:
          - Byte
          - Char
          - Complex64
          - Complex128
          - Date-time
          - Date-timeOffset
          - Double
          - Duration
          - Float
          - Int8
          - Int16
          - Int32
          - Int64
          - Uint8
          - Uint16
          - Uint32
          - Uint64
        type: string
        x-ms-enum:
          modelAsString: true
          name: ColumnFormat
      type:
        description: Data type of the column.
        enum:
          - Boolean
          - Integer
          - Number
          - String
        type: string
        x-ms-enum:
          modelAsString: true
          name: ColumnType
      x-ms-isnullable:
        description: Flag indicating if the type supports null values or not.
        type: boolean
      x-ms-isordered:
        description: 'Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.'
        type: boolean
    required:
      - type
    type: object
  CommitmentPlan:
    description: Information about the machine learning commitment plan associated with the web service.
    properties:
      id:
        description: Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
        type: string
    required:
      - id
    type: object
  DiagnosticsConfiguration:
    description: Diagnostics settings for an Azure ML web service.
    properties:
      expiry:
        description: 'Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.'
        format: date-time
        type: string
      level:
        description: 'Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).'
        enum:
          - None
          - Error
          - All
        type: string
        x-ms-enum:
          modelAsString: true
          name: DiagnosticsLevel
    required:
      - level
    type: object
  ExampleRequest:
    description: Sample input data for the service's input(s).
    properties:
      globalParameters:
        additionalProperties:
          type: object
        description: Sample input data for the web service's global parameters
        type: object
      inputs:
        additionalProperties:
          items:
            items:
              type: object
            type: array
          type: array
        description: Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
        type: object
    type: object
  GraphEdge:
    description: Defines an edge within the web service's graph.
    properties:
      sourceNodeId:
        description: The source graph node's identifier.
        type: string
      sourcePortId:
        description: The identifier of the source node's port that the edge connects from.
        type: string
      targetNodeId:
        description: The destination graph node's identifier.
        type: string
      targetPortId:
        description: The identifier of the destination node's port that the edge connects into.
        type: string
    type: object
  GraphNode:
    description: 'Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.'
    properties:
      assetId:
        description: The id of the asset represented by this node.
        type: string
      inputId:
        description: The id of the input element represented by this node.
        type: string
      outputId:
        description: The id of the output element represented by this node.
        type: string
      parameters:
        additionalProperties:
          type: string
        description: 'If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.'
        type: object
    type: object
  GraphPackage:
    description: Defines the graph of modules making up the machine learning solution.
    properties:
      edges:
        description: The list of edges making up the graph.
        items:
          $ref: '#/definitions/GraphEdge'
        type: array
      graphParameters:
        additionalProperties:
          $ref: '#/definitions/GraphParameter'
        description: 'The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.'
        type: object
      nodes:
        additionalProperties:
          $ref: '#/definitions/GraphNode'
        description: 'The set of nodes making up the graph, provided as a nodeId to GraphNode map'
        type: object
    type: object
  GraphParameter:
    description: Defines a global parameter in the graph.
    properties:
      description:
        description: Description of this graph parameter.
        type: string
      links:
        description: Association links for this parameter to nodes in the graph.
        items:
          $ref: '#/definitions/GraphParameterLink'
        type: array
      type:
        description: Graph parameter's type.
        enum:
          - String
          - Int
          - Float
          - Enumerated
          - Script
          - Mode
          - Credential
          - Boolean
          - Double
          - ColumnPicker
          - ParameterRange
          - DataGatewayName
        type: string
        x-ms-enum:
          modelAsString: true
          name: ParameterType
    required:
      - type
      - links
    type: object
  GraphParameterLink:
    description: Association link for a graph global parameter to a node in the graph.
    properties:
      nodeId:
        description: The graph node's identifier
        type: string
      parameterKey:
        description: The identifier of the node parameter that the global parameter maps to.
        type: string
    required:
      - nodeId
      - parameterKey
    type: object
  InputPort:
    description: Asset input port
    properties:
      type:
        default: Dataset
        description: Port data type.
        enum:
          - Dataset
        type: string
        x-ms-enum:
          modelAsString: true
          name: InputPortType
    type: object
  MachineLearningWorkspace:
    description: Information about the machine learning workspace containing the experiment that is source for the web service.
    properties:
      id:
        description: Specifies the workspace ID of the machine learning workspace associated with the web service
        type: string
    required:
      - id
    type: object
  ModeValueInfo:
    description: Nested parameter definition.
    properties:
      interfaceString:
        description: The interface string name for the nested parameter.
        type: string
      parameters:
        description: The definition of the parameter.
        items:
          $ref: '#/definitions/ModuleAssetParameter'
        type: array
    type: object
  ModuleAssetParameter:
    description: Parameter definition for a module asset.
    properties:
      modeValuesInfo:
        additionalProperties:
          $ref: '#/definitions/ModeValueInfo'
        description: Definitions for nested interface parameters if this is a complex module parameter.
        type: object
      name:
        description: Parameter name.
        type: string
      parameterType:
        description: Parameter type.
        type: string
    type: object
  OutputPort:
    description: Asset output port
    properties:
      type:
        default: Dataset
        description: Port data type.
        enum:
          - Dataset
        type: string
        x-ms-enum:
          modelAsString: true
          name: OutputPortType
    type: object
  PaginatedWebServicesList:
    description: Paginated list of web services.
    properties:
      nextLink:
        description: A continuation link (absolute URI) to the next page of results in the list.
        type: string
      value:
        description: An array of web service objects.
        items:
          $ref: '#/definitions/WebService'
        type: array
    type: object
  RealtimeConfiguration:
    description: Holds the available configuration options for an Azure ML web service endpoint.
    properties:
      maxConcurrentCalls:
        description: 'Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.'
        maximum: 200
        minimum: 4
        type: integer
    type: object
  Resource:
    properties:
      id:
        description: Specifies the resource ID.
        readOnly: true
        type: string
      location:
        description: Specifies the location of the resource.
        type: string
      name:
        description: Specifies the name of the resource.
        type: string
      tags:
        additionalProperties:
          type: string
        description: Contains resource tags defined as key/value pairs.
        type: object
      type:
        description: Specifies the type of the resource.
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  ServiceInputOutputSpecification:
    description: 'The swagger 2.0 schema describing the service''s inputs or outputs. See Swagger specification: http://swagger.io/specification/'
    properties:
      description:
        description: The description of the Swagger schema.
        type: string
      properties:
        additionalProperties:
          $ref: '#/definitions/TableSpecification'
        description: 'Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.'
        type: object
      title:
        description: The title of your Swagger schema.
        type: string
      type:
        default: object
        description: The type of the entity described in swagger. Always 'object'.
        type: string
    required:
      - type
      - properties
    type: object
  StorageAccount:
    description: Access information for a storage account.
    properties:
      key:
        description: Specifies the key used to access the storage account.
        type: string
      name:
        description: Specifies the name of the storage account.
        type: string
    type: object
  TableSpecification:
    description: 'The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/'
    properties:
      description:
        description: Swagger schema description.
        type: string
      format:
        description: 'The format, if ''type'' is not ''object'''
        type: string
      properties:
        additionalProperties:
          $ref: '#/definitions/ColumnSpecification'
        description: The set of columns within the data table.
        type: object
      title:
        description: Swagger schema title.
        type: string
      type:
        default: object
        description: The type of the entity described in swagger.
        type: string
    required:
      - type
    type: object
  WebService:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Instance of an Azure ML web service resource.
    properties:
      properties:
        $ref: '#/definitions/WebServiceProperties'
        description: Contains the property payload that describes the web service.
    required:
      - properties
    type: object
  WebServiceKeys:
    description: Access keys for the web service calls.
    properties:
      primary:
        description: The primary access key.
        type: string
      secondary:
        description: The secondary access key.
        type: string
    type: object
  WebServiceProperties:
    description: The set of properties specific to the Azure ML web service resource.
    discriminator: packageType
    properties:
      assets:
        additionalProperties:
          $ref: '#/definitions/AssetItem'
        description: Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
        type: object
      commitmentPlan:
        $ref: '#/definitions/CommitmentPlan'
        description: 'Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.'
      createdOn:
        description: 'Read Only: The date and time when the web service was created.'
        format: date-time
        readOnly: true
        type: string
      description:
        description: The description of the web service.
        type: string
      diagnostics:
        $ref: '#/definitions/DiagnosticsConfiguration'
        description: Settings controlling the diagnostics traces collection for the web service.
      exampleRequest:
        $ref: '#/definitions/ExampleRequest'
        description: Defines sample input data for one or more of the service's inputs.
      exposeSampleData:
        description: 'When set to true, sample data is included in the web service''s swagger definition. The default value is true.'
        type: boolean
      input:
        $ref: '#/definitions/ServiceInputOutputSpecification'
        description: 'Contains the Swagger 2.0 schema describing one or more of the web service''s inputs. For more information, see the Swagger specification.'
      keys:
        $ref: '#/definitions/WebServiceKeys'
        description: 'Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.'
      machineLearningWorkspace:
        $ref: '#/definitions/MachineLearningWorkspace'
        description: Specifies the Machine Learning workspace containing the experiment that is source for the web service.
      modifiedOn:
        description: 'Read Only: The date and time when the web service was last modified.'
        format: date-time
        readOnly: true
        type: string
      output:
        $ref: '#/definitions/ServiceInputOutputSpecification'
        description: 'Contains the Swagger 2.0 schema describing one or more of the web service''s outputs. For more information, see the Swagger specification.'
      packageType:
        description: 'Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.'
        enum:
          - Graph
        type: string
      parameters:
        additionalProperties:
          type: string
        description: 'The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.'
        type: object
      provisioningState:
        description: 'Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.'
        enum:
          - Unknown
          - Provisioning
          - Succeeded
          - Failed
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningState
      readOnly:
        description: 'When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.'
        type: boolean
      realtimeConfiguration:
        $ref: '#/definitions/RealtimeConfiguration'
        description: Contains the configuration settings for the web service endpoint.
      storageAccount:
        $ref: '#/definitions/StorageAccount'
        description: 'Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.'
      swaggerLocation:
        description: 'Read Only: Contains the URI of the swagger spec associated with this web service.'
        readOnly: true
        type: string
      title:
        description: The title of the web service.
        type: string
    required:
      - packageType
    type: object
  WebServicePropertiesForGraph:
    allOf:
      - $ref: '#/definitions/WebServiceProperties'
    description: Properties specific to a Graph based web service.
    properties:
      package:
        $ref: '#/definitions/GraphPackage'
        description: The definition of the graph package making up this web service.
    x-ms-discriminator-value: Graph
