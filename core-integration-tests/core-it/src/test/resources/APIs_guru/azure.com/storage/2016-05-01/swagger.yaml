swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: The Azure Storage Management API.
  title: StorageManagement
  version: '2016-05-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/stable/2016-05-01/storage.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: storage
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
  - text/json
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  ResourceGroupName:
    description: The name of the resource group within the user's subscription. The name is case insensitive.
    in: path
    maxLength: 90
    minLength: 1
    name: resourceGroupName
    pattern: '^[-\w\._\(\)]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability':
    post:
      description: Checks that the storage account name is valid and is not already in use.
      operationId: StorageAccounts_CheckNameAvailability
      parameters:
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: body
          name: accountName
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCheckNameAvailabilityParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Operation to check the storage account name availability was successful.
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResult'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts was retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages':
    get:
      description: Gets the current usage count and the limit for the resources under the subscription.
      operationId: Usage_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- current usage account and limit retrieved and returned successfully.
          schema:
            $ref: '#/definitions/UsageListResult'
      tags:
        - Usage
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts in the given resource group retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}':
    delete:
      description: Deletes a storage account in Microsoft Azure.
      operationId: StorageAccounts_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- storage account deleted successfully.
        '204':
          description: NoContent -- account does not exist in the subscription.
      tags:
        - StorageAccounts
    get:
      description: 'Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
      operationId: StorageAccounts_GetProperties
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- properties retrieved successfully for the storage account.
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    patch:
      description: 'The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.'
      operationId: StorageAccounts_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the updated account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- storage account properties updated successfully.
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    put:
      description: 'Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.'
      operationId: StorageAccounts_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the created account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.
          schema:
            $ref: '#/definitions/StorageAccount'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
      tags:
        - StorageAccounts
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas':
    post:
      description: List SAS credentials of a storage account.
      operationId: StorageAccounts_ListAccountSAS
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide to list SAS credentials for the storage account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/AccountSasParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned the account SAS created for the storage account requested.
          schema:
            $ref: '#/definitions/ListAccountSasResponse'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas':
    post:
      description: List service SAS credentials of a specific resource.
      operationId: StorageAccounts_ListServiceSAS
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide to list service SAS credentials.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ServiceSasParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned the service SAS created for the storage service requested.
          schema:
            $ref: '#/definitions/ListServiceSasResponse'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys':
    post:
      description: Lists the access keys for the specified storage account.
      operationId: StorageAccounts_ListKeys
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- list of keys retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountListKeysResult'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey':
    post:
      description: Regenerates one of the access keys for the specified storage account.
      operationId: StorageAccounts_RegenerateKey
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: Specifies name of the key which should be regenerated -- key1 or key2.
          in: body
          name: regenerateKey
          required: true
          schema:
            $ref: '#/definitions/StorageAccountRegenerateKeyParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- specified key regenerated successfully.
          schema:
            $ref: '#/definitions/StorageAccountListKeysResult'
      tags:
        - StorageAccounts
definitions:
  AccountSasParameters:
    description: The parameters to list SAS credentials of a storage account.
    properties:
      keyToSign:
        description: The key to sign the account SAS token with.
        type: string
      signedExpiry:
        description: The time at which the shared access signature becomes invalid.
        format: date-time
        type: string
        x-ms-client-name: SharedAccessExpiryTime
      signedIp:
        description: An IP address or a range of IP addresses from which to accept requests.
        type: string
        x-ms-client-name: IPAddressOrRange
      signedPermission:
        description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
        enum:
          - r
          - d
          - w
          - l
          - a
          - c
          - u
          - p
        type: string
        x-ms-client-name: Permissions
      signedProtocol:
        description: The protocol permitted for a request made with the account SAS.
        enum:
          - 'https,http'
          - https
        type: string
        x-ms-client-name: Protocols
        x-ms-enum:
          modelAsString: false
          name: HttpProtocol
      signedResourceTypes:
        description: 'The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.'
        enum:
          - s
          - c
          - o
        type: string
        x-ms-client-name: ResourceTypes
      signedServices:
        description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'
        enum:
          - b
          - q
          - t
          - f
        type: string
        x-ms-client-name: Services
      signedStart:
        description: The time at which the SAS becomes valid.
        format: date-time
        type: string
        x-ms-client-name: SharedAccessStartTime
    required:
      - signedServices
      - signedResourceTypes
      - signedPermission
      - signedExpiry
  CheckNameAvailabilityResult:
    description: The CheckNameAvailability operation response.
    properties:
      message:
        description: Gets an error message explaining the Reason value in more detail.
        readOnly: true
        type: string
      nameAvailable:
        description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
        readOnly: true
        type: boolean
      reason:
        description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
          - AccountNameInvalid
          - AlreadyExists
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: Reason
  CustomDomain:
    description: The custom domain assigned to this storage account. This can be set via Update.
    properties:
      name:
        description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
        type: string
      useSubDomainName:
        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
        type: boolean
    required:
      - name
  Encryption:
    description: The encryption settings on the storage account.
    properties:
      keySource:
        description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage'
        enum:
          - Microsoft.Storage
        type: string
      services:
        $ref: '#/definitions/EncryptionServices'
        description: List of services which support encryption.
    required:
      - keySource
  EncryptionService:
    description: A service that allows server-side encryption to be used.
    properties:
      enabled:
        description: A boolean indicating whether or not the service encrypts the data as it is stored.
        type: boolean
      lastEnabledTime:
        description: 'Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.'
        format: date-time
        readOnly: true
        type: string
  EncryptionServices:
    description: A list of services that support encryption.
    properties:
      blob:
        $ref: '#/definitions/EncryptionService'
        description: The encryption function of the blob storage service.
  Endpoints:
    description: 'The URIs that are used to perform a retrieval of a public blob, queue, or table object.'
    properties:
      blob:
        description: Gets the blob endpoint.
        readOnly: true
        type: string
      file:
        description: Gets the file endpoint.
        readOnly: true
        type: string
      queue:
        description: Gets the queue endpoint.
        readOnly: true
        type: string
      table:
        description: Gets the table endpoint.
        readOnly: true
        type: string
  ListAccountSasResponse:
    description: The List SAS credentials operation response.
    properties:
      accountSasToken:
        description: List SAS credentials of storage account.
        readOnly: true
        type: string
  ListServiceSasResponse:
    description: The List service SAS credentials operation response.
    properties:
      serviceSasToken:
        description: List service SAS credentials of specific resource.
        readOnly: true
        type: string
  Resource:
    description: Describes a storage resource.
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Tags assigned to a resource; can be used for viewing and grouping a resource (across resource groups).
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    x-ms-azure-resource: true
  ServiceSasParameters:
    description: The parameters to list service SAS credentials of a specific resource.
    properties:
      canonicalizedResource:
        description: The canonical path to the signed resource.
        type: string
      endPk:
        description: The end of partition key.
        type: string
        x-ms-client-name: PartitionKeyEnd
      endRk:
        description: The end of row key.
        type: string
        x-ms-client-name: RowKeyEnd
      keyToSign:
        description: The key to sign the account SAS token with.
        type: string
      rscc:
        description: The response header override for cache control.
        type: string
        x-ms-client-name: CacheControl
      rscd:
        description: The response header override for content disposition.
        type: string
        x-ms-client-name: ContentDisposition
      rsce:
        description: The response header override for content encoding.
        type: string
        x-ms-client-name: ContentEncoding
      rscl:
        description: The response header override for content language.
        type: string
        x-ms-client-name: ContentLanguage
      rsct:
        description: The response header override for content type.
        type: string
        x-ms-client-name: ContentType
      signedExpiry:
        description: The time at which the shared access signature becomes invalid.
        format: date-time
        type: string
        x-ms-client-name: SharedAccessExpiryTime
      signedIdentifier:
        description: 'A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.'
        maxLength: 64
        type: string
        x-ms-client-name: Identifier
      signedIp:
        description: An IP address or a range of IP addresses from which to accept requests.
        type: string
        x-ms-client-name: IPAddressOrRange
      signedPermission:
        description: 'The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'
        enum:
          - r
          - d
          - w
          - l
          - a
          - c
          - u
          - p
        type: string
        x-ms-client-name: Permissions
      signedProtocol:
        description: The protocol permitted for a request made with the account SAS.
        enum:
          - 'https,http'
          - https
        type: string
        x-ms-client-name: Protocols
        x-ms-enum:
          modelAsString: false
          name: HttpProtocol
      signedResource:
        description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'
        enum:
          - b
          - c
          - f
          - s
        type: string
        x-ms-client-name: Resource
      signedStart:
        description: The time at which the SAS becomes valid.
        format: date-time
        type: string
        x-ms-client-name: SharedAccessStartTime
      startPk:
        description: The start of partition key.
        type: string
        x-ms-client-name: PartitionKeyStart
      startRk:
        description: The start of row key.
        type: string
        x-ms-client-name: RowKeyStart
    required:
      - canonicalizedResource
      - signedResource
  Sku:
    description: The SKU of the storage account.
    properties:
      name:
        description: 'Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.'
        enum:
          - Standard_LRS
          - Standard_GRS
          - Standard_RAGRS
          - Standard_ZRS
          - Premium_LRS
        type: string
        x-ms-enum:
          modelAsString: false
          name: SkuName
      tier:
        description: Gets the sku tier. This is based on the SKU name.
        enum:
          - Standard
          - Premium
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: SkuTier
    required:
      - name
  StorageAccount:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The storage account.
    properties:
      kind:
        description: Gets the Kind.
        enum:
          - Storage
          - BlobStorage
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: Kind
      properties:
        $ref: '#/definitions/StorageAccountProperties'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: Gets the SKU.
        readOnly: true
  StorageAccountCheckNameAvailabilityParameters:
    description: The parameters used to check the availability of the storage account name.
    properties:
      name:
        type: string
      type:
        enum:
          - Microsoft.Storage/storageAccounts
        type: string
    required:
      - name
      - type
  StorageAccountCreateParameters:
    description: The parameters used when creating a storage account.
    properties:
      kind:
        description: Required. Indicates the type of storage account.
        enum:
          - Storage
          - BlobStorage
        type: string
        x-ms-enum:
          modelAsString: false
          name: Kind
      location:
        description: 'Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.'
        type: string
      properties:
        $ref: '#/definitions/StorageAccountPropertiesCreateParameters'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: Required. Gets or sets the sku name.
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
        type: object
    required:
      - sku
      - kind
      - location
  StorageAccountKey:
    description: An access key for the storage account.
    properties:
      keyName:
        description: Name of the key.
        readOnly: true
        type: string
      permissions:
        description: Permissions for the key -- read-only or full permissions.
        enum:
          - Read
          - Full
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: KeyPermission
      value:
        description: Base 64-encoded value of the key.
        readOnly: true
        type: string
  StorageAccountListKeysResult:
    description: The response from the ListKeys operation.
    properties:
      keys:
        description: Gets the list of storage account keys and their properties for the specified storage account.
        items:
          $ref: '#/definitions/StorageAccountKey'
        readOnly: true
        type: array
  StorageAccountListResult:
    description: The response from the List Storage Accounts operation.
    properties:
      value:
        description: Gets the list of storage accounts and their properties.
        items:
          $ref: '#/definitions/StorageAccount'
        readOnly: true
        type: array
  StorageAccountProperties:
    description: Properties of the storage account.
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      creationTime:
        description: Gets the creation date and time of the storage account in UTC.
        format: date-time
        readOnly: true
        type: string
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: Gets the custom domain the user assigned to this storage account.
        readOnly: true
      encryption:
        $ref: '#/definitions/Encryption'
        description: 'Gets the encryption settings on the account. If unspecified, the account is unencrypted.'
        readOnly: true
      lastGeoFailoverTime:
        description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        format: date-time
        readOnly: true
        type: string
      primaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.'
        readOnly: true
      primaryLocation:
        description: Gets the location of the primary data center for the storage account.
        readOnly: true
        type: string
      provisioningState:
        description: Gets the status of the storage account at the time the operation was called.
        enum:
          - Creating
          - ResolvingDNS
          - Succeeded
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: ProvisioningState
      secondaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.'
        readOnly: true
      secondaryLocation:
        description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        readOnly: true
        type: string
      statusOfPrimary:
        description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
        enum:
          - available
          - unavailable
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
      statusOfSecondary:
        description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
        enum:
          - available
          - unavailable
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
  StorageAccountPropertiesCreateParameters:
    description: The parameters used to create the storage account.
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: 'User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
      encryption:
        $ref: '#/definitions/Encryption'
        description: Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
  StorageAccountPropertiesUpdateParameters:
    description: The parameters used when updating a storage account.
    properties:
      accessTier:
        description: Required for storage accounts where kind = BlobStorage. The access tier used for billing.
        enum:
          - Hot
          - Cool
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: 'Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
      encryption:
        $ref: '#/definitions/Encryption'
        description: Provides the encryption settings on the account. The default setting is unencrypted.
  StorageAccountRegenerateKeyParameters:
    description: The parameters used to regenerate the storage account key.
    properties:
      keyName:
        type: string
    required:
      - keyName
  StorageAccountUpdateParameters:
    description: The parameters that can be provided when updating the storage account properties.
    properties:
      properties:
        $ref: '#/definitions/StorageAccountPropertiesUpdateParameters'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: 'Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS or Premium_LRS, nor can accounts of those sku names be updated to any other value.'
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
        type: object
  Usage:
    description: Describes Storage Resource Usage.
    properties:
      currentValue:
        description: Gets the current count of the allocated resources in the subscription.
        format: int32
        readOnly: true
        type: integer
      limit:
        description: Gets the maximum count of the resources that can be allocated in the subscription.
        format: int32
        readOnly: true
        type: integer
      name:
        $ref: '#/definitions/UsageName'
        description: Gets the name of the type of usage.
        readOnly: true
      unit:
        description: Gets the unit of measurement.
        enum:
          - Count
          - Bytes
          - Seconds
          - Percent
          - CountsPerSecond
          - BytesPerSecond
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: UsageUnit
  UsageListResult:
    description: The response from the List Usages operation.
    properties:
      value:
        description: Gets or sets the list of Storage Resource Usages.
        items:
          $ref: '#/definitions/Usage'
        type: array
  UsageName:
    description: The usage names that can be used; currently limited to StorageAccount.
    properties:
      localizedValue:
        description: Gets a localized string describing the resource name.
        readOnly: true
        type: string
      value:
        description: Gets a string describing the resource name.
        readOnly: true
        type: string
