swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: The Azure Storage Management API.
  title: StorageManagement
  version: '2015-06-15'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-ms-code-generation-settings:
    name: StorageManagementClient
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/stable/2015-06-15/storage.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: storage
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  ResourceGroupName:
    description: The name of the resource group within the user's subscription. The name is case insensitive.
    in: path
    maxLength: 90
    minLength: 1
    name: resourceGroupName
    pattern: '^[-\w\._\(\)]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability':
    post:
      description: Checks that the storage account name is valid and is not already in use.
      operationId: StorageAccounts_CheckNameAvailability
      parameters:
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: body
          name: accountName
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCheckNameAvailabilityParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Operation to check the storage account name availability was successful.
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResult'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts was retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages':
    get:
      description: Lists the current usage count and the limit for the resources under the subscription.
      operationId: Usage_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- current usage count and limit retrieved and returned successfully.
          schema:
            $ref: '#/definitions/UsageListResult'
      tags:
        - Usage
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_ListByResourceGroup
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- List of storage accounts in the given resource group retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}':
    delete:
      description: Deletes a storage account in Microsoft Azure.
      operationId: StorageAccounts_Delete
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- storage account deleted successfully.
        '204':
          description: NoContent -- account does not exist in the subscription.
      tags:
        - StorageAccounts
    get:
      description: 'Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
      operationId: StorageAccounts_GetProperties
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- properties retrieved successfully for the storage account.
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    patch:
      description: 'The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.'
      operationId: StorageAccounts_Update
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the updated account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- storage account properties updated successfully.
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    put:
      description: 'Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.'
      operationId: StorageAccounts_Create
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the created account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.
          schema:
            $ref: '#/definitions/StorageAccount'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously.
      tags:
        - StorageAccounts
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys':
    post:
      description: Lists the access keys for the specified storage account.
      operationId: StorageAccounts_ListKeys
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- list of keys retrieved and returned successfully.
          schema:
            $ref: '#/definitions/StorageAccountKeys'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey':
    post:
      description: Regenerates one of the access keys for the specified storage account.
      operationId: StorageAccounts_RegenerateKey
      parameters:
        - $ref: '#/parameters/ResourceGroupName'
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: Specifies name of the key which should be regenerated -- key1 or key2.
          in: body
          name: regenerateKey
          required: true
          schema:
            $ref: '#/definitions/StorageAccountRegenerateKeyParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- specified key regenerated successfully.
          schema:
            $ref: '#/definitions/StorageAccountKeys'
      tags:
        - StorageAccounts
definitions:
  CheckNameAvailabilityResult:
    description: The CheckNameAvailability operation response.
    properties:
      message:
        description: The error message explaining the Reason value in more detail.
        type: string
      nameAvailable:
        description: 'Boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.'
        type: boolean
      reason:
        description: The reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
          - AccountNameInvalid
          - AlreadyExists
        type: string
        x-ms-enum:
          modelAsString: false
          name: Reason
  CustomDomain:
    description: The custom domain assigned to this storage account. This can be set via Update.
    properties:
      name:
        description: The custom domain name. Name is the CNAME source.
        type: string
      useSubDomainName:
        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
        type: boolean
    required:
      - name
  Endpoints:
    description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
    properties:
      blob:
        description: The blob endpoint.
        type: string
      file:
        description: The file endpoint.
        type: string
      queue:
        description: The queue endpoint.
        type: string
      table:
        description: The table endpoint.
        type: string
  Resource:
    description: Describes a storage resource.
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    x-ms-azure-resource: true
  StorageAccount:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The storage account.
    properties:
      properties:
        $ref: '#/definitions/StorageAccountProperties'
        x-ms-client-flatten: true
  StorageAccountCheckNameAvailabilityParameters:
    description: The parameters used to check the availability of the storage account name.
    properties:
      name:
        type: string
      type:
        default: Microsoft.Storage/storageAccounts
        type: string
    required:
      - name
  StorageAccountCreateParameters:
    description: The parameters to provide for the account.
    properties:
      location:
        description: 'The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.'
        type: string
      properties:
        $ref: '#/definitions/StorageAccountPropertiesCreateParameters'
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
        type: object
    required:
      - location
    x-ms-azure-resource: true
  StorageAccountKeys:
    description: The access keys for the storage account.
    properties:
      key1:
        description: The value of key 1.
        type: string
      key2:
        description: The value of key 2.
        type: string
  StorageAccountListResult:
    description: The list storage accounts operation response.
    properties:
      value:
        description: The list of storage accounts and their properties.
        items:
          $ref: '#/definitions/StorageAccount'
        type: array
  StorageAccountProperties:
    description: Properties of the storage account.
    properties:
      accountType:
        description: The type of the storage account.
        enum:
          - Standard_LRS
          - Standard_ZRS
          - Standard_GRS
          - Standard_RAGRS
          - Premium_LRS
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountType
      creationTime:
        description: The creation date and time of the storage account in UTC.
        format: date-time
        type: string
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: The custom domain the user assigned to this storage account.
      lastGeoFailoverTime:
        description: The timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        format: date-time
        type: string
      primaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'The URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.'
      primaryLocation:
        description: The location of the primary data center for the storage account.
        type: string
      provisioningState:
        description: The status of the storage account at the time the operation was called.
        enum:
          - Creating
          - ResolvingDNS
          - Succeeded
        type: string
        x-ms-enum:
          modelAsString: false
          name: ProvisioningState
      secondaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'The URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.'
      secondaryLocation:
        description: The location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
        type: string
      statusOfPrimary:
        description: The status indicating whether the primary location of the storage account is available or unavailable.
        enum:
          - Available
          - Unavailable
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
      statusOfSecondary:
        description: The status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
        enum:
          - Available
          - Unavailable
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
  StorageAccountPropertiesCreateParameters:
    description: The parameters used to create the storage account.
    properties:
      accountType:
        description: 'The sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.'
        enum:
          - Standard_LRS
          - Standard_ZRS
          - Standard_GRS
          - Standard_RAGRS
          - Premium_LRS
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountType
    required:
      - accountType
  StorageAccountPropertiesUpdateParameters:
    description: The parameters used when updating a storage account.
    properties:
      accountType:
        description: 'The account type. Note that StandardZRS and PremiumLRS accounts cannot be changed to other account types, and other account types cannot be changed to StandardZRS or PremiumLRS.'
        enum:
          - Standard_LRS
          - Standard_ZRS
          - Standard_GRS
          - Standard_RAGRS
          - Premium_LRS
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountType
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: 'User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
  StorageAccountRegenerateKeyParameters:
    description: The parameters used to regenerate the storage account key.
    properties:
      keyName:
        type: string
    required:
      - keyName
  StorageAccountUpdateParameters:
    description: The parameters to update on the account.
    properties:
      properties:
        $ref: '#/definitions/StorageAccountPropertiesUpdateParameters'
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
    x-ms-azure-resource: true
  Usage:
    description: Describes Storage Resource Usage.
    properties:
      currentValue:
        description: The current count of the allocated resources in the subscription.
        format: int32
        type: integer
      limit:
        description: The maximum count of the resources that can be allocated in the subscription.
        format: int32
        type: integer
      name:
        $ref: '#/definitions/UsageName'
        description: The name of the type of usage.
      unit:
        description: The unit of measurement.
        enum:
          - Count
          - Bytes
          - Seconds
          - Percent
          - CountsPerSecond
          - BytesPerSecond
        type: string
        x-ms-enum:
          modelAsString: false
          name: UsageUnit
    required:
      - unit
      - currentValue
      - limit
      - name
  UsageListResult:
    description: The List Usages operation response.
    properties:
      value:
        description: The list Storage Resource Usages.
        items:
          $ref: '#/definitions/Usage'
        type: array
  UsageName:
    description: The Usage Names.
    properties:
      localizedValue:
        description: A localized string describing the resource name.
        type: string
      value:
        description: A string describing the resource name.
        type: string
