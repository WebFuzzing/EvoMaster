swagger: '2.0'
schemes:
  - https
host: management.azure.com
basePath: /
info:
  title: ContainerRegistryManagementClient
  version: 2019-06-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/containerregistry_build.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: containerregistry-containerregistry_build
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  ApiVersionParameter:
    description: The client API version.
    in: query
    name: api-version
    required: true
    type: string
  RegistryNameParameter:
    description: The name of the container registry.
    in: path
    maxLength: 50
    minLength: 5
    name: registryName
    pattern: '^[a-zA-Z0-9]*$'
    required: true
    type: string
    x-ms-parameter-location: method
  ResourceGroupNameParameter:
    description: The name of the resource group to which the container registry belongs.
    in: path
    minLength: 1
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: The Microsoft Azure subscription ID.
    in: path
    name: subscriptionId
    required: true
    type: string
  TaskNameParameter:
    description: The name of the container registry task.
    in: path
    maxLength: 50
    minLength: 5
    name: taskName
    pattern: '^[a-zA-Z0-9-_]*$'
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listBuildSourceUploadUrl':
    post:
      description: Get the upload location for the user to be able to upload the source.
      operationId: Registries_GetBuildSourceUploadUrl
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/SourceUploadDefinition'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Registries
      x-ms-examples:
        Registries_GetBuildSourceUploadUrl:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                relativePath: source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz
                uploadUrl: 'https://registrystorageaccount.blob.core.windows.net/registrycontainer/source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs':
    get:
      description: Gets all the runs for a registry.
      operationId: Runs_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: 'The runs filter to apply on the operation. Arithmetic operators are not supported. The allowed string function is ''contains''. All logical operators except ''Not'', ''Has'', ''All'' are allowed.'
          in: query
          name: $filter
          required: false
          type: string
        - description: '$top is supported for get list of runs, which limits the maximum number of runs to return.'
          format: int32
          in: query
          name: $top
          required: false
          type: integer
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/RunListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Runs
      x-ms-examples:
        Runs_List:
          parameters:
            $filter: ''
            $top: 10
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                    name: 0accec26-d6de-4757-8e74-d080f38eaaab
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2018-01-25T05:13:51.618Z'
                      finishTime: '2018-01-25T06:13:51.618Z'
                      imageUpdateTrigger:
                        id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                        images:
                          - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                            registry: registry.hub.docker.com
                            repository: mybaseimage
                            tag: latest
                        timestamp: '2018-01-25T05:13:51.618Z'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                      outputImages:
                        - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                          registry: myregistry.azurecr.io
                          repository: myimage
                          tag: latest
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                      runType: AutoBuild
                      startTime: '2018-01-25T05:50:51.618Z'
                      status: Succeeded
                      task: myTask
                    type: Microsoft.ContainerRegistry/registries/runs
      x-ms-odata: '#/definitions/RunFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}':
    get:
      description: Gets the detailed information for a given run.
      operationId: Runs_Get
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The run ID.
          in: path
          name: runId
          required: true
          type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Run'
        default:
          description: 'Error response describing why the operation failed. If the registry/run doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Runs
      x-ms-examples:
        Runs_Get:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: '2018-01-25T05:13:51.618Z'
                  finishTime: '2018-01-25T06:13:51.618Z'
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                      - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                        registry: registry.hub.docker.com
                        repository: mybaseimage
                        tag: latest
                    timestamp: '2018-01-25T05:13:51.618Z'
                  isArchiveEnabled: true
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  outputImages:
                    - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                      registry: myregistry.azurecr.io
                      repository: myimage
                      tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: '2018-01-25T05:50:51.618Z'
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
    patch:
      description: Patch the run properties.
      operationId: Runs_Update
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The run ID.
          in: path
          name: runId
          required: true
          type: string
        - description: The run update properties.
          in: body
          name: runUpdateParameters
          required: true
          schema:
            $ref: '#/definitions/RunUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Run'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          schema:
            $ref: '#/definitions/Run'
        default:
          description: 'Error response describing why the operation failed. If the registry/build doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Runs
      x-ms-examples:
        Runs_Update:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            runUpdateParameters:
              isArchiveEnabled: true
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: '2018-01-25T05:13:51.618Z'
                  finishTime: '2018-01-25T06:13:51.618Z'
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                      - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                        registry: registry.hub.docker.com
                        repository: mybaseimage
                        tag: latest
                    timestamp: '2018-01-25T05:13:51.618Z'
                  isArchiveEnabled: true
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  outputImages:
                    - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                      registry: myregistry.azurecr.io
                      repository: myimage
                      tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: '2018-01-25T05:50:51.618Z'
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  agentConfiguration:
                    cpu: 2
                  createTime: '2018-01-25T05:13:51.618Z'
                  finishTime: '2018-01-25T06:13:51.618Z'
                  imageUpdateTrigger:
                    id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                    images:
                      - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                        registry: registry.hub.docker.com
                        repository: mybaseimage
                        tag: latest
                    timestamp: '2018-01-25T05:13:51.618Z'
                  isArchiveEnabled: true
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  outputImages:
                    - digest: 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0'
                      registry: myregistry.azurecr.io
                      repository: myimage
                      tag: latest
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Updating
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  runType: AutoBuild
                  startTime: '2018-01-25T05:50:51.618Z'
                  status: Succeeded
                  task: myTask
                type: Microsoft.ContainerRegistry/registries/runs
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/cancel':
    post:
      description: Cancel an existing run.
      operationId: Runs_Cancel
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The run ID.
          in: path
          name: runId
          required: true
          type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        default:
          description: 'Error response describing why the operation failed. If the registry/run doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Runs
      x-ms-examples:
        Runs_Cancel:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200': {}
            '202': {}
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/listLogSasUrl':
    post:
      description: Gets a link to download the run logs.
      operationId: Runs_GetLogSasUrl
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The run ID.
          in: path
          name: runId
          required: true
          type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/RunGetLogResult'
        default:
          description: 'Error response describing why the operation failed. If the registry/run doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Runs
      x-ms-examples:
        Runs_GetLogSasUrl:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runId: 0accec26-d6de-4757-8e74-d080f38eaaab
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                logLink: 'https://registrystorageaccount.blob.core.windows.net/sascontainer/logs/0accec26-d6de-4757-8e74-d080f38eaaab/rawtext.log?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scheduleRun':
    post:
      description: Schedules a new run based on the request parameters and add it to the run queue.
      operationId: Registries_ScheduleRun
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The parameters of a run that needs to scheduled.
          in: body
          name: runRequest
          required: true
          schema:
            $ref: '#/definitions/RunRequest'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Run'
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        default:
          description: 'Error response describing why the operation failed. If the registry/run doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Registries
      x-ms-examples:
        Registries_ScheduleRun:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              arguments:
                - isSecret: false
                  name: mytestargument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  value: mysecrettestvalue
              dockerFilePath: DockerFile
              imageNames:
                - 'azurerest:testtag'
              isArchiveEnabled: true
              isPushEnabled: true
              noCache: true
              platform:
                architecture: amd64
                os: Linux
              sourceLocation: 'https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D'
              type: DockerBuildRequest
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
        Registries_ScheduleRun_EncodedTaskRun:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              encodedTaskContent: c3RlcHM6Cnt7IGlmIFZhbHVlcy5lbnZpcm9ubWVudCA9PSAncHJvZCcgfX0KICAtIHJ1bjogcHJvZCBzZXR1cAp7eyBlbHNlIGlmIFZhbHVlcy5lbnZpcm9ubWVudCA9PSAnc3RhZ2luZycgfX0KICAtIHJ1bjogc3RhZ2luZyBzZXR1cAp7eyBlbHNlIH19CiAgLSBydW46IGRlZmF1bHQgc2V0dXAKe3sgZW5kIH19CgogIC0gcnVuOiBidWlsZCAtdCBGYW5jeVRoaW5nOnt7LlZhbHVlcy5lbnZpcm9ubWVudH19LXt7LlZhbHVlcy52ZXJzaW9ufX0gLgoKcHVzaDogWydGYW5jeVRoaW5nOnt7LlZhbHVlcy5lbnZpcm9ubWVudH19LXt7LlZhbHVlcy52ZXJzaW9ufX0nXQ==
              encodedValuesContent: ZW52aXJvbm1lbnQ6IHByb2QKdmVyc2lvbjogMQ==
              platform:
                os: Linux
              type: EncodedTaskRunRequest
              values:
                - isSecret: false
                  name: mytestargument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  value: mysecrettestvalue
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
        Registries_ScheduleRun_FileTaskRun:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              platform:
                os: Linux
              sourceLocation: 'https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D'
              taskFilePath: acb.yaml
              type: FileTaskRunRequest
              values:
                - isSecret: false
                  name: mytestargument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  value: mysecrettestvalue
              valuesFilePath: prod-values.yaml
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
        Registries_ScheduleRun_Task:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              overrideTaskStepProperties:
                arguments:
                  - isSecret: false
                    name: mytestargument
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestargument
                    value: mysecrettestvalue
                file: overriddenDockerfile
                target: build
                updateTriggerToken: aGVsbG8gd29ybGQ=
                values:
                  - isSecret: false
                    name: mytestname
                    value: mytestvalue
                  - isSecret: true
                    name: mysecrettestname
                    value: mysecrettestvalue
              taskId: myTask
              type: TaskRunRequest
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
        Registries_ScheduleRun_Task_WithCustomCredentials:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              credentials:
                customRegistries:
                  myregistry.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg1
                sourceRegistry:
                  loginMode: Default
              platform:
                os: Linux
              taskFilePath: acb.yaml
              type: FileTaskRunRequest
              values:
                - isSecret: false
                  name: mytestargument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  value: mysecrettestvalue
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
        Registries_ScheduleRun_WithCustomCredentials:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            runRequest:
              agentConfiguration:
                cpu: 2
              arguments:
                - isSecret: false
                  name: mytestargument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  value: mysecrettestvalue
              credentials:
                customRegistries:
                  myregistry.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg1
                  myregistry2.azurecr.io:
                    password:
                      type: Opaque
                      value: '***'
                    userName:
                      type: Opaque
                      value: reg2
                sourceRegistry:
                  loginMode: Default
              dockerFilePath: DockerFile
              imageNames:
                - 'azurerest:testtag'
              isArchiveEnabled: true
              isPushEnabled: true
              noCache: true
              platform:
                architecture: amd64
                os: Linux
              sourceLocation: 'https://myaccount.blob.core.windows.net/sascontainer/source.zip?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D'
              target: stage1
              type: DockerBuildRequest
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/0accec26-d6de-4757-8e74-d080f38eaaab
                name: 0accec26-d6de-4757-8e74-d080f38eaaab
                properties:
                  lastUpdatedTime: '2018-01-25T05:13:51.617Z'
                  provisioningState: Succeeded
                  runId: 0accec26-d6de-4757-8e74-d080f38eaaab
                  status: Succeeded
                type: Microsoft.ContainerRegistry/registries/run
            '202': {}
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns':
    get:
      description: Lists all the task runs for a specified container registry.
      operationId: TaskRuns_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/TaskRunListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - TaskRuns
      x-ms-examples:
        TaskRuns_List:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                    location: WESTUS
                    name: mytestrun
                    properties:
                      provisioningState: Succeeded
                      runRequest:
                        credentials: {}
                        encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                        encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                        isArchiveEnabled: true
                        platform:
                          architecture: amd64
                          os: Linux
                        type: EncodedTaskRunRequest
                        values: []
                      runResult:
                        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd4
                        name: yd4
                        properties:
                          agentConfiguration:
                            cpu: 2
                          createTime: '2019-09-04T17:15:29.2278794+00:00'
                          finishTime: '2019-09-04T17:15:37.0349516+00:00'
                          isArchiveEnabled: true
                          lastUpdatedTime: '2019-09-04T17:15:37+00:00'
                          platform:
                            architecture: amd64
                            os: Linux
                          provisioningState: Succeeded
                          runId: yd4
                          runType: QuickRun
                          startTime: '2019-09-04T17:15:29.4589616+00:00'
                          status: Succeeded
                        type: Microsoft.ContainerRegistry/registries/runs
                    tags:
                      key: value
                    type: Microsoft.ContainerRegistry/registries/TaskRuns
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}':
    delete:
      description: Deletes a specified task run resource.
      operationId: TaskRuns_Delete
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The task run name.
          in: path
          name: taskRunName
          required: true
          type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - TaskRuns
      x-ms-examples:
        TaskRuns_Delete:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskRunName: myRun
          responses:
            '200': {}
            '202': {}
            '204': {}
      x-ms-long-running-operation: true
    get:
      description: Gets the detailed information for a given task run.
      operationId: TaskRuns_Get
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The run request name.
          in: path
          name: taskRunName
          required: true
          type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/TaskRun'
        default:
          description: 'Error response describing why the operation failed. If the registry/run doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - TaskRuns
      x-ms-examples:
        TaskRuns_Get:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskRunName: myRun
          responses:
            '200':
              body:
                id: /subscriptions/3647315e-0c5b-4ce4-8739-b071e144b2c9/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                location: WESTUS
                name: myRun
                properties:
                  provisioningState: Succeeded
                  runRequest:
                    credentials: {}
                    encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                    encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                    isArchiveEnabled: true
                    platform:
                      architecture: amd64
                      os: Linux
                    type: EncodedTaskRunRequest
                    values: []
                  runResult:
                    id: /subscriptions/3647315e-0c5b-4ce4-8739-b071e144b2c9/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd5
                    name: yd5
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2019-09-06T17:23:21.9261521+00:00'
                      finishTime: '2019-09-06T17:23:29.8792157+00:00'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2019-09-06T17:23:29+00:00'
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: yd5
                      runType: QuickRun
                      startTime: '2019-09-06T17:23:22.1348714+00:00'
                      status: Succeeded
                    type: Microsoft.ContainerRegistry/registries/runs
                tags:
                  key: value
                type: Microsoft.ContainerRegistry/registries/TaskRuns
    patch:
      description: Updates a task run with the specified parameters.
      operationId: TaskRuns_Update
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The task run name.
          in: path
          name: taskRunName
          required: true
          type: string
        - description: The parameters for updating a task run.
          in: body
          name: updateParameters
          required: true
          schema:
            $ref: '#/definitions/TaskRunUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/TaskRun'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          schema:
            $ref: '#/definitions/TaskRun'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - TaskRuns
      x-ms-examples:
        TaskRuns_Update:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskRunName: myRun
            updateParameters:
              properties:
                forceUpdateTag: test
                runRequest:
                  credentials: {}
                  encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                  encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                  isArchiveEnabled: true
                  platform:
                    architecture: amd64
                    os: Linux
                  type: EncodedTaskRunRequest
                  values: []
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                location: WESTUS
                name: mytestrun
                properties:
                  provisioningState: Creating
                  runRequest:
                    credentials: {}
                    encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                    encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                    isArchiveEnabled: true
                    platform:
                      architecture: amd64
                      os: Linux
                    type: EncodedTaskRunRequest
                    values: []
                  runResult:
                    id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd6
                    name: yd6
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2019-09-06T17:31:34.1184031+00:00'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2019-09-06T17:31:34+00:00'
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: yd6
                      runType: QuickRun
                      status: Queued
                    type: Microsoft.ContainerRegistry/registries/runs
                tags:
                  key: value
                type: Microsoft.ContainerRegistry/registries/TaskRuns
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                location: WESTUS
                name: mytestrun
                properties:
                  provisioningState: Creating
                  runRequest:
                    credentials: {}
                    encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                    encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                    isArchiveEnabled: true
                    platform:
                      architecture: amd64
                      os: Linux
                    type: EncodedTaskRunRequest
                    values: []
                  runResult:
                    id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd6
                    name: yd6
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2019-09-06T17:31:34.1184031+00:00'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2019-09-06T17:31:34+00:00'
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: yd6
                      runType: QuickRun
                      status: Queued
                    type: Microsoft.ContainerRegistry/registries/runs
                tags:
                  key: value
                type: Microsoft.ContainerRegistry/registries/TaskRuns
      x-ms-long-running-operation: true
    put:
      description: Creates a task run for a container registry with the specified parameters.
      operationId: TaskRuns_Create
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The name of task run.
          in: path
          name: taskRunName
          required: true
          type: string
        - description: The parameters of a run that needs to scheduled.
          in: body
          name: taskRun
          required: true
          schema:
            $ref: '#/definitions/TaskRun'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/TaskRun'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          schema:
            $ref: '#/definitions/TaskRun'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - TaskRuns
      x-ms-examples:
        TaskRuns_Create:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskRun:
              location: westus
              properties:
                forceUpdateTag: test
                runRequest:
                  credentials: {}
                  encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                  encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                  platform:
                    architecture: amd64
                    os: Linux
                  type: EncodedTaskRunRequest
                  values: []
              tags:
                key: value
            taskRunName: myRun
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                location: WESTUS
                name: myrun
                properties:
                  provisioningState: Creating
                  runRequest:
                    credentials: {}
                    encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                    encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                    isArchiveEnabled: true
                    platform:
                      architecture: amd64
                      os: Linux
                    type: EncodedTaskRunRequest
                    values: []
                  runResult:
                    id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd5
                    name: yd5
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2019-09-06T17:23:21.9261521+00:00'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2019-09-06T17:23:21+00:00'
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: yd5
                      runType: QuickRun
                      status: Queued
                    type: Microsoft.ContainerRegistry/registries/runs
                tags:
                  key: value
                type: Microsoft.ContainerRegistry/registries/TaskRuns
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/taskRuns/myRun
                location: WESTUS
                name: myrun
                properties:
                  provisioningState: Creating
                  runRequest:
                    credentials: {}
                    encodedTaskContent: c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K
                    encodedValuesContent: Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==
                    isArchiveEnabled: true
                    platform:
                      architecture: amd64
                      os: Linux
                    type: EncodedTaskRunRequest
                    values: []
                  runResult:
                    id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/runs/yd5
                    name: yd5
                    properties:
                      agentConfiguration:
                        cpu: 2
                      createTime: '2019-09-06T17:23:21.9261521+00:00'
                      isArchiveEnabled: true
                      lastUpdatedTime: '2019-09-06T17:23:21+00:00'
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      runId: yd5
                      runType: QuickRun
                      status: Queued
                    type: Microsoft.ContainerRegistry/registries/runs
                tags:
                  key: value
                type: Microsoft.ContainerRegistry/registries/TaskRuns
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks':
    get:
      description: Lists all the tasks for a specified container registry.
      operationId: Tasks_List
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/TaskListResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_List:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
          responses:
            '200':
              body:
                value:
                  - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                    identity:
                      principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                      tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                      type: SystemAssigned
                    location: eastus
                    name: myTask
                    properties:
                      agentConfiguration:
                        cpu: 2
                      creationDate: '2018-01-25T06:54:23.536Z'
                      credentials:
                        customRegistries:
                          myRegistry.azure.io: null
                        sourceRegistry: null
                      platform:
                        architecture: amd64
                        os: Linux
                      provisioningState: Succeeded
                      status: Enabled
                      step:
                        arguments:
                          - isSecret: false
                            name: mytestargument
                            value: mytestvalue
                        contextPath: src
                        dockerFilePath: src/DockerFile
                        imageNames:
                          - 'azurerest:testtag'
                        isPushEnabled: true
                        noCache: false
                        type: Docker
                      trigger:
                        baseImageTrigger:
                          baseImageTriggerType: Runtime
                          name: myBaseImageTrigger
                          status: Enabled
                          updateTriggerEndpoint: null
                          updateTriggerPayloadType: Default
                        sourceTriggers:
                          - name: mySourceTrigger
                            sourceRepository:
                              branch: master
                              repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                              sourceControlType: Github
                            sourceTriggerEvents:
                              - commit
                            status: Enabled
                        timerTriggers:
                          - name: myTimerTrigger
                            schedule: 30 9 * * 1-5
                            status: Enabled
                    tags:
                      testkey: value
                    type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}':
    delete:
      description: Deletes a specified task.
      operationId: Tasks_Delete
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_Delete:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            '200': {}
            '202': {}
            '204': {}
      x-ms-long-running-operation: true
    get:
      description: Get the properties of a specified task.
      operationId: Tasks_Get
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Task'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_Get:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azure.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
    patch:
      description: Updates a task with the specified parameters.
      operationId: Tasks_Update
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/TaskNameParameter'
        - description: The parameters for updating a task.
          in: body
          name: taskUpdateParameters
          required: true
          schema:
            $ref: '#/definitions/TaskUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Task'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          schema:
            $ref: '#/definitions/Task'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_Update:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: '[system]'
                      password:
                        type: Vaultsecret
                        value: 'https://myacbvault.vault.azure.net/secrets/password'
                      userName:
                        type: Opaque
                        value: username
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag1'
                  type: Docker
                trigger:
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                      sourceTriggerEvents:
                        - commit
              tags:
                testkey: value
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azurecr.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azurecr.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithKeyVaultCustomCredentials:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: '[system]'
                      password:
                        type: Vaultsecret
                        value: 'https://myacbvault.vault.azure.net/secrets/password'
                      userName:
                        type: Vaultsecret
                        value: 'https://myacbvault.vault.azure.net/secrets/username'
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag1'
                  type: Docker
                trigger:
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                      sourceTriggerEvents:
                        - commit
              tags:
                testkey: value
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azurecr.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: 'https://user:pass@mycicd.webhook.com?token=foo'
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azurecr.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithMSICustomCredentials:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      identity: '[system]'
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag1'
                  type: Docker
                trigger:
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                      sourceTriggerEvents:
                        - commit
              tags:
                testkey: value
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azure.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azure.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Update_WithOpaqueCustomCredentials:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
            taskUpdateParameters:
              properties:
                agentConfiguration:
                  cpu: 3
                credentials:
                  customRegistries:
                    myregistry.azurecr.io:
                      password:
                        type: Opaque
                        value: '***'
                      userName:
                        type: Opaque
                        value: username
                status: Enabled
                step:
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag1'
                  type: Docker
                trigger:
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                      sourceTriggerEvents:
                        - commit
              tags:
                testkey: value
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azure.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 3
                  creationDate: '2018-01-25T06:54:23.536Z'
                  credentials:
                    customRegistries:
                      myregistry.azure.io: null
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag1'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-long-running-operation: true
    put:
      description: Creates a task for a container registry with the specified parameters.
      operationId: Tasks_Create
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/TaskNameParameter'
        - description: The parameters for creating a task.
          in: body
          name: taskCreateParameters
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Task'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          schema:
            $ref: '#/definitions/Task'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_Create:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: SystemAssigned
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    - isSecret: true
                      name: mysecrettestargument
                      value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag'
                  isPushEnabled: true
                  noCache: false
                  type: Docker
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                    updateTriggerEndpoint: 'https://user:pass@mycicd.webhook.com?token=foo'
                    updateTriggerPayloadType: Token
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                        sourceControlType: Github
                      sourceTriggerEvents:
                        - commit
                  timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithSystemAndUserIdentities:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: 'SystemAssigned, UserAssigned'
                userAssignedIdentities:
                  /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2: {}
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    - isSecret: true
                      name: mysecrettestargument
                      value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag'
                  isPushEnabled: true
                  noCache: false
                  type: Docker
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                    updateTriggerEndpoint: 'https://user:pass@mycicd.webhook.com?token=foo'
                    updateTriggerPayloadType: Default
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                        sourceControlType: Github
                      sourceTriggerEvents:
                        - commit
                  timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fc99dc67-1ad9-45c8-9ebc-e438081c8e30
                  tenantId: f686d426-8d16-42db-81b7-ab578e110ccd
                  type: 'SystemAssigned, UserAssigned'
                  userAssignedIdentities:
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2:
                      clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fc99dc67-1ad9-45c8-9ebc-e438081c8e30
                  tenantId: f686d426-8d16-42db-81b7-ab578e110ccd
                  type: 'SystemAssigned, UserAssigned'
                  userAssignedIdentities:
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2:
                      clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithUserIdentities:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: UserAssigned
                userAssignedIdentities:
                  /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1: {}
                  /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2: {}
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    - isSecret: true
                      name: mysecrettestargument
                      value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag'
                  isPushEnabled: true
                  noCache: false
                  type: Docker
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                    updateTriggerEndpoint: 'https://user:pass@mycicd.webhook.com?token=foo'
                    updateTriggerPayloadType: Default
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                        sourceControlType: Github
                      sourceTriggerEvents:
                        - commit
                  timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  type: UserAssigned
                  userAssignedIdentities:
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1:
                      clientId: d3ce1bc2-f7d7-4a5b-9979-950f4e57680e
                      principalId: b6p9f58b-6fbf-4efd-a7e0-fvd46911a466
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2:
                      clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  type: UserAssigned
                  userAssignedIdentities:
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1:
                      clientId: d3ce1bc2-f7d7-4a5b-9979-950f4e57680e
                      principalId: b6p9f58b-6fbf-4efd-a7e0-fvd46911a466
                    /subscriptions/f9d7ebed-adbd-4cb4-b973-aaf82c136138/resourcegroups/myResourceGroup1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity2:
                      clientId: e35621a5-f615-4a20-940e-de8a84b15abc
                      principalId: e45e3m7c-176e-416a-b466-0c5ec8298f8a
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: null
                      updateTriggerPayloadType: Default
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
        Tasks_Create_WithUserIdentities_WithSystemIdentity:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskCreateParameters:
              identity:
                type: SystemAssigned
              location: eastus
              properties:
                agentConfiguration:
                  cpu: 2
                platform:
                  architecture: amd64
                  os: Linux
                status: Enabled
                step:
                  arguments:
                    - isSecret: false
                      name: mytestargument
                      value: mytestvalue
                    - isSecret: true
                      name: mysecrettestargument
                      value: mysecrettestvalue
                  contextPath: src
                  dockerFilePath: src/DockerFile
                  imageNames:
                    - 'azurerest:testtag'
                  isPushEnabled: true
                  noCache: false
                  type: Docker
                trigger:
                  baseImageTrigger:
                    baseImageTriggerType: Runtime
                    name: myBaseImageTrigger
                  sourceTriggers:
                    - name: mySourceTrigger
                      sourceRepository:
                        branch: master
                        repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                        sourceControlAuthProperties:
                          token: xxxxx
                          tokenType: PAT
                        sourceControlType: Github
                      sourceTriggerEvents:
                        - commit
                  timerTriggers:
                    - name: myTimerTrigger
                      schedule: 30 9 * * 1-5
              tags:
                testkey: value
            taskName: mytTask
          responses:
            '200':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Succeeded
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
            '201':
              body:
                id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/tasks/myTask
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                name: myTask
                properties:
                  agentConfiguration:
                    cpu: 2
                  creationDate: '2018-01-25T06:54:23.536Z'
                  platform:
                    architecture: amd64
                    os: Linux
                  provisioningState: Creating
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
                type: Microsoft.ContainerRegistry/registries/tasks
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/listDetails':
    post:
      description: Returns a task with extended information that includes all secrets.
      operationId: Tasks_GetDetails
      parameters:
        - $ref: '#/parameters/SubscriptionIdParameter'
        - $ref: '#/parameters/ResourceGroupNameParameter'
        - $ref: '#/parameters/RegistryNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          schema:
            $ref: '#/definitions/Task'
        default:
          description: 'Error response describing why the operation failed. If the registry doesn''t exist, 404 (Not found) is returned.'
          schema:
            $ref: '#/definitions/ErrorSchema'
      tags:
        - Tasks
      x-ms-examples:
        Tasks_GetDetails:
          parameters:
            api-version: 2019-06-01-preview
            registryName: myRegistry
            resourceGroupName: myResourceGroup
            subscriptionId: 4385cf00-2d3a-425a-832f-f4285b1c9dce
            taskName: myTask
          responses:
            '200':
              body:
                identity:
                  principalId: fa153151-b9fd-46f4-9088-5e6600f2689v
                  tenantId: f686d426-8d16-42db-81b7-abu4gm510ccd
                  type: SystemAssigned
                location: eastus
                properties:
                  agentConfiguration:
                    cpu: 2
                  credentials:
                    customRegistries:
                      myregistry.azure-test.io:
                        identity: '[system]'
                        password:
                          type: Vaultsecret
                          value: 'https://myacbvault.vault.azure.net/secrets/username'
                        userName:
                          type: Opaque
                          value: username
                    sourceRegistry: null
                  platform:
                    architecture: amd64
                    os: Linux
                  status: Enabled
                  step:
                    arguments:
                      - isSecret: false
                        name: mytestargument
                        value: mytestvalue
                      - isSecret: true
                        name: mysecrettestargument
                        value: mysecrettestvalue
                    contextPath: src
                    dockerFilePath: src/DockerFile
                    imageNames:
                      - 'azurerest:testtag'
                    isPushEnabled: true
                    noCache: false
                    type: Docker
                  trigger:
                    baseImageTrigger:
                      baseImageTriggerType: Runtime
                      name: myBaseImageTrigger
                      status: Enabled
                      updateTriggerEndpoint: 'https://user:pass@mycicd.webhook.com?token=foo'
                      updateTriggerPayloadType: Token
                    sourceTriggers:
                      - name: mySourceTrigger
                        sourceRepository:
                          branch: master
                          repositoryUrl: 'https://github.com/Azure/azure-rest-api-specs'
                          sourceControlAuthProperties:
                            token: xxxxx
                            tokenType: PAT
                          sourceControlType: Github
                        sourceTriggerEvents:
                          - commit
                        status: Enabled
                    timerTriggers:
                      - name: myTimerTrigger
                        schedule: 30 9 * * 1-5
                        status: Enabled
                tags:
                  testkey: value
definitions:
  AgentProperties:
    description: The properties that determine the run agent configuration.
    properties:
      cpu:
        description: The CPU configuration in terms of number of cores required for the run.
        format: int32
        type: integer
    type: object
  Argument:
    description: The properties of a run argument.
    properties:
      isSecret:
        default: false
        description: Flag to indicate whether the argument represents a secret and want to be removed from build logs.
        type: boolean
      name:
        description: The name of the argument.
        type: string
      value:
        description: The value of the argument.
        type: string
    required:
      - name
      - value
    type: object
  AuthInfo:
    description: The authorization properties for accessing the source code repository.
    properties:
      expiresIn:
        description: Time in seconds that the token remains valid
        format: int32
        type: integer
      refreshToken:
        description: The refresh token used to refresh the access token.
        type: string
      scope:
        description: The scope of the access token.
        type: string
      token:
        description: The access token used to access the source control provider.
        type: string
      tokenType:
        description: The type of Auth token.
        enum:
          - PAT
          - OAuth
        type: string
        x-ms-enum:
          modelAsString: true
          name: TokenType
    required:
      - tokenType
      - token
    type: object
  AuthInfoUpdateParameters:
    description: The authorization properties for accessing the source code repository.
    properties:
      expiresIn:
        description: Time in seconds that the token remains valid
        format: int32
        type: integer
      refreshToken:
        description: The refresh token used to refresh the access token.
        type: string
      scope:
        description: The scope of the access token.
        type: string
      token:
        description: The access token used to access the source control provider.
        type: string
      tokenType:
        description: The type of Auth token.
        enum:
          - PAT
          - OAuth
        type: string
        x-ms-enum:
          modelAsString: true
          name: TokenType
    type: object
  BaseImageDependency:
    description: Properties that describe a base image dependency.
    properties:
      digest:
        description: The sha256-based digest of the image manifest.
        type: string
      registry:
        description: The registry login server.
        type: string
      repository:
        description: The repository name.
        type: string
      tag:
        description: The tag name.
        type: string
      type:
        description: The type of the base image dependency.
        enum:
          - BuildTime
          - RunTime
        type: string
        x-ms-enum:
          modelAsString: true
          name: BaseImageDependencyType
    type: object
  BaseImageTrigger:
    description: The trigger based on base image dependency.
    properties:
      baseImageTriggerType:
        description: The type of the auto trigger for base image dependency updates.
        enum:
          - All
          - Runtime
        type: string
        x-ms-enum:
          modelAsString: true
          name: BaseImageTriggerType
      name:
        description: The name of the trigger.
        type: string
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
      updateTriggerEndpoint:
        description: The endpoint URL for receiving update triggers.
        type: string
      updateTriggerPayloadType:
        description: Type of Payload body for Base image update triggers.
        enum:
          - Default
          - Token
        type: string
        x-ms-enum:
          modelAsString: true
          name: UpdateTriggerPayloadType
    required:
      - baseImageTriggerType
      - name
    type: object
  BaseImageTriggerUpdateParameters:
    description: The properties for updating base image dependency trigger.
    properties:
      baseImageTriggerType:
        description: The type of the auto trigger for base image dependency updates.
        enum:
          - All
          - Runtime
        type: string
        x-ms-enum:
          modelAsString: true
          name: BaseImageTriggerType
      name:
        description: The name of the trigger.
        type: string
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
      updateTriggerEndpoint:
        description: The endpoint URL for receiving update triggers.
        type: string
      updateTriggerPayloadType:
        description: Type of Payload body for Base image update triggers.
        enum:
          - Default
          - Token
        type: string
        x-ms-enum:
          modelAsString: true
          name: UpdateTriggerPayloadType
    required:
      - name
    type: object
  Credentials:
    description: The parameters that describes a set of credentials that will be used when a run is invoked.
    properties:
      customRegistries:
        additionalProperties:
          $ref: '#/definitions/CustomRegistryCredentials'
        description: "Describes the credential parameters for accessing other custom registries. The key\r\nfor the dictionary item will be the registry login server (myregistry.azurecr.io) and\r\nthe value of the item will be the registry credentials for accessing the registry."
        type: object
      sourceRegistry:
        $ref: '#/definitions/SourceRegistryCredentials'
        description: Describes the credential parameters for accessing the source registry.
    type: object
  CustomRegistryCredentials:
    description: Describes the credentials that will be used to access a custom registry during a run.
    properties:
      identity:
        description: "Indicates the managed identity assigned to the custom credential. If a user-assigned identity\r\nthis value is the Client ID. If a system-assigned identity, the value will be `system`. In\r\nthe case of a system-assigned identity, the Client ID will be determined by the runner. This\r\nidentity may be used to authenticate to key vault to retrieve credentials or it may be the only \r\nsource of authentication used for accessing the registry."
        type: string
      password:
        $ref: '#/definitions/SecretObject'
        description: "The password for logging into the custom registry. The password is a secret \r\nobject that allows multiple ways of providing the value for it."
      userName:
        $ref: '#/definitions/SecretObject'
        description: The username for logging into the custom registry.
    type: object
  DockerBuildRequest:
    allOf:
      - $ref: '#/definitions/RunRequest'
    description: The parameters for a docker quick build.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      arguments:
        description: The collection of override arguments to be used when executing the run.
        items:
          $ref: '#/definitions/Argument'
        type: array
      credentials:
        $ref: '#/definitions/Credentials'
        description: The properties that describes a set of credentials that will be used when this run is invoked.
      dockerFilePath:
        description: The Docker file path relative to the source location.
        type: string
      imageNames:
        description: The fully qualified image names including the repository and tag.
        items:
          type: string
        type: array
      isPushEnabled:
        default: true
        description: The value of this property indicates whether the image built should be pushed to the registry or not.
        type: boolean
      noCache:
        default: false
        description: The value of this property indicates whether the image cache is enabled or not.
        type: boolean
      platform:
        $ref: '#/definitions/PlatformProperties'
        description: The platform properties against which the run has to happen.
      sourceLocation:
        description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        type: string
      target:
        description: The name of the target build stage for the docker build.
        type: string
      timeout:
        default: 3600
        description: Run timeout in seconds.
        format: int32
        maximum: 28800
        minimum: 300
        type: integer
    required:
      - type
      - dockerFilePath
      - platform
    type: object
    x-ms-discriminator-value: DockerBuildRequest
  DockerBuildStep:
    allOf:
      - $ref: '#/definitions/TaskStepProperties'
    description: The Docker build step.
    properties:
      arguments:
        description: The collection of override arguments to be used when executing this build step.
        items:
          $ref: '#/definitions/Argument'
        type: array
      dockerFilePath:
        description: The Docker file path relative to the source context.
        type: string
      imageNames:
        description: The fully qualified image names including the repository and tag.
        items:
          type: string
        type: array
      isPushEnabled:
        default: true
        description: The value of this property indicates whether the image built should be pushed to the registry or not.
        type: boolean
      noCache:
        default: false
        description: The value of this property indicates whether the image cache is enabled or not.
        type: boolean
      target:
        description: The name of the target build stage for the docker build.
        type: string
    required:
      - dockerFilePath
      - type
    type: object
    x-ms-discriminator-value: Docker
  DockerBuildStepUpdateParameters:
    allOf:
      - $ref: '#/definitions/TaskStepUpdateParameters'
    description: The properties for updating a docker build step.
    properties:
      arguments:
        description: The collection of override arguments to be used when executing this build step.
        items:
          $ref: '#/definitions/Argument'
        type: array
      dockerFilePath:
        description: The Docker file path relative to the source context.
        type: string
      imageNames:
        description: The fully qualified image names including the repository and tag.
        items:
          type: string
        type: array
      isPushEnabled:
        description: The value of this property indicates whether the image built should be pushed to the registry or not.
        type: boolean
      noCache:
        description: The value of this property indicates whether the image cache is enabled or not.
        type: boolean
      target:
        description: The name of the target build stage for the docker build.
        type: string
    required:
      - type
    type: object
    x-ms-discriminator-value: Docker
  EncodedTaskRunRequest:
    allOf:
      - $ref: '#/definitions/RunRequest'
    description: The parameters for a quick task run request.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      credentials:
        $ref: '#/definitions/Credentials'
        description: The properties that describes a set of credentials that will be used when this run is invoked.
      encodedTaskContent:
        description: Base64 encoded value of the template/definition file content.
        type: string
      encodedValuesContent:
        description: Base64 encoded value of the parameters/values file content.
        type: string
      platform:
        $ref: '#/definitions/PlatformProperties'
        description: The platform properties against which the run has to happen.
      sourceLocation:
        description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        type: string
      timeout:
        default: 3600
        description: Run timeout in seconds.
        format: int32
        maximum: 28800
        minimum: 300
        type: integer
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
    required:
      - type
      - encodedTaskContent
      - platform
    type: object
    x-ms-discriminator-value: EncodedTaskRunRequest
  EncodedTaskStep:
    allOf:
      - $ref: '#/definitions/TaskStepProperties'
    description: The properties of a encoded task step.
    properties:
      encodedTaskContent:
        description: Base64 encoded value of the template/definition file content.
        type: string
      encodedValuesContent:
        description: Base64 encoded value of the parameters/values file content.
        type: string
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
    required:
      - encodedTaskContent
      - type
    type: object
    x-ms-discriminator-value: EncodedTask
  EncodedTaskStepUpdateParameters:
    allOf:
      - $ref: '#/definitions/TaskStepUpdateParameters'
    description: The properties for updating encoded task step.
    properties:
      encodedTaskContent:
        description: Base64 encoded value of the template/definition file content.
        type: string
      encodedValuesContent:
        description: Base64 encoded value of the parameters/values file content.
        type: string
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
    required:
      - type
    type: object
    x-ms-discriminator-value: EncodedTask
  Error:
    description: An error response from the Azure Container Registry service.
    properties:
      code:
        description: error code.
        type: string
      message:
        description: error message.
        type: string
    required:
      - code
      - message
  ErrorSchema:
    description: An error response from the Azure Container Registry service.
    properties:
      error:
        $ref: '#/definitions/Error'
        description: Azure container registry build API error body.
  FileTaskRunRequest:
    allOf:
      - $ref: '#/definitions/RunRequest'
    description: The request parameters for a scheduling run against a task file.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      credentials:
        $ref: '#/definitions/Credentials'
        description: The properties that describes a set of credentials that will be used when this run is invoked.
      platform:
        $ref: '#/definitions/PlatformProperties'
        description: The platform properties against which the run has to happen.
      sourceLocation:
        description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        type: string
      taskFilePath:
        description: The template/definition file path relative to the source.
        type: string
      timeout:
        default: 3600
        description: Run timeout in seconds.
        format: int32
        maximum: 28800
        minimum: 300
        type: integer
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
      valuesFilePath:
        description: The values/parameters file path relative to the source.
        type: string
    required:
      - type
      - taskFilePath
      - platform
    type: object
    x-ms-discriminator-value: FileTaskRunRequest
  FileTaskStep:
    allOf:
      - $ref: '#/definitions/TaskStepProperties'
    description: The properties of a task step.
    properties:
      taskFilePath:
        description: The task template/definition file path relative to the source context.
        type: string
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
      valuesFilePath:
        description: The task values/parameters file path relative to the source context.
        type: string
    required:
      - taskFilePath
      - type
    type: object
    x-ms-discriminator-value: FileTask
  FileTaskStepUpdateParameters:
    allOf:
      - $ref: '#/definitions/TaskStepUpdateParameters'
    description: The properties of updating a task step.
    properties:
      taskFilePath:
        description: The task template/definition file path relative to the source context.
        type: string
      values:
        description: The collection of overridable values that can be passed when running a task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
      valuesFilePath:
        description: The values/parameters file path relative to the source context.
        type: string
    required:
      - type
    type: object
    x-ms-discriminator-value: FileTask
  IdentityProperties:
    description: Managed identity for the resource.
    properties:
      principalId:
        description: The principal ID of resource identity.
        type: string
      tenantId:
        description: The tenant ID of resource.
        type: string
      type:
        description: The identity type.
        enum:
          - SystemAssigned
          - UserAssigned
          - 'SystemAssigned, UserAssigned'
          - None
        type: string
        x-ms-enum:
          modelAsString: false
          name: ResourceIdentityType
      userAssignedIdentities:
        additionalProperties:
          $ref: '#/definitions/UserIdentityProperties'
        description: "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        type: object
    type: object
  ImageDescriptor:
    description: Properties for a registry image.
    properties:
      digest:
        description: The sha256-based digest of the image manifest.
        type: string
      registry:
        description: The registry login server.
        type: string
      repository:
        description: The repository name.
        type: string
      tag:
        description: The tag name.
        type: string
    type: object
  ImageUpdateTrigger:
    description: The image update trigger that caused a build.
    properties:
      id:
        description: The unique ID of the trigger.
        type: string
      images:
        description: The list of image updates that caused the build.
        items:
          $ref: '#/definitions/ImageDescriptor'
        type: array
      timestamp:
        description: The timestamp when the image update happened.
        format: date-time
        type: string
    type: object
  OverrideTaskStepProperties:
    properties:
      arguments:
        description: "Gets or sets the collection of override arguments to be used when\r\nexecuting a build step."
        items:
          $ref: '#/definitions/Argument'
        type: array
      contextPath:
        description: The source context against which run has to be queued.
        type: string
      file:
        description: The file against which run has to be queued.
        type: string
      target:
        description: The name of the target build stage for the docker build.
        type: string
      updateTriggerToken:
        description: Base64 encoded update trigger token that will be attached with the base image trigger webhook.
        type: string
      values:
        description: The collection of overridable values that can be passed when running a Task.
        items:
          $ref: '#/definitions/SetValue'
        type: array
    type: object
  PlatformProperties:
    description: The platform properties against which the run has to happen.
    properties:
      architecture:
        description: The OS architecture.
        enum:
          - amd64
          - x86
          - '386'
          - arm
          - arm64
        type: string
        x-ms-enum:
          modelAsString: true
          name: Architecture
      os:
        description: The operating system type required for the run.
        enum:
          - Windows
          - Linux
        type: string
        x-ms-enum:
          modelAsString: true
          name: OS
      variant:
        description: Variant of the CPU.
        enum:
          - v6
          - v7
          - v8
        type: string
        x-ms-enum:
          modelAsString: true
          name: Variant
    required:
      - os
    type: object
  PlatformUpdateParameters:
    description: The properties for updating the platform configuration.
    properties:
      architecture:
        description: The OS architecture.
        enum:
          - amd64
          - x86
          - '386'
          - arm
          - arm64
        type: string
        x-ms-enum:
          modelAsString: true
          name: Architecture
      os:
        description: The operating system type required for the run.
        enum:
          - Windows
          - Linux
        type: string
        x-ms-enum:
          modelAsString: true
          name: OS
      variant:
        description: Variant of the CPU.
        enum:
          - v6
          - v7
          - v8
        type: string
        x-ms-enum:
          modelAsString: true
          name: Variant
    type: object
  ProxyResource:
    description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags.
    properties:
      id:
        description: The resource ID.
        readOnly: true
        type: string
      name:
        description: The name of the resource.
        readOnly: true
        type: string
      type:
        description: The type of the resource.
        readOnly: true
        type: string
    x-ms-azure-resource: true
  Resource:
    description: An Azure resource.
    properties:
      id:
        description: The resource ID.
        readOnly: true
        type: string
      location:
        description: The location of the resource. This cannot be changed after the resource is created.
        type: string
        x-ms-mutability:
          - read
          - create
      name:
        description: The name of the resource.
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: The tags of the resource.
        type: object
      type:
        description: The type of the resource.
        readOnly: true
        type: string
    required:
      - location
    x-ms-azure-resource: true
  Run:
    allOf:
      - $ref: '#/definitions/ProxyResource'
    description: Run resource properties
    properties:
      properties:
        $ref: '#/definitions/RunProperties'
        description: The properties of a run.
        x-ms-client-flatten: true
    type: object
  RunFilter:
    description: Properties that are enabled for Odata querying on runs.
    properties:
      createTime:
        description: The create time for a run.
        format: date-time
        type: string
      finishTime:
        description: The time the run finished.
        format: date-time
        type: string
      isArchiveEnabled:
        description: The value that indicates whether archiving is enabled or not.
        type: boolean
      outputImageManifests:
        description: "The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of\r\nbuild type."
        type: string
      runId:
        description: The unique identifier for the run.
        type: string
      runType:
        description: The type of run.
        enum:
          - QuickBuild
          - QuickRun
          - AutoBuild
          - AutoRun
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunType
      status:
        description: The current status of the run.
        enum:
          - Queued
          - Started
          - Running
          - Succeeded
          - Failed
          - Canceled
          - Error
          - Timeout
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunStatus
      taskName:
        description: The name of the task that the run corresponds to.
        type: string
    type: object
  RunGetLogResult:
    description: The result of get log link operation.
    properties:
      logLink:
        description: The link to logs for a run on a azure container registry.
        type: string
    type: object
  RunListResult:
    description: Collection of runs.
    properties:
      nextLink:
        description: The URI that can be used to request the next set of paged results.
        type: string
      value:
        description: The collection value.
        items:
          $ref: '#/definitions/Run'
        type: array
    type: object
  RunProperties:
    description: The properties for a run.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      createTime:
        description: The time the run was scheduled.
        format: date-time
        type: string
      customRegistries:
        description: The list of custom registries that were logged in during this run.
        items:
          type: string
        type: array
      finishTime:
        description: The time the run finished.
        format: date-time
        type: string
      imageUpdateTrigger:
        $ref: '#/definitions/ImageUpdateTrigger'
        description: The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
      isArchiveEnabled:
        default: false
        description: The value that indicates whether archiving is enabled or not.
        type: boolean
      lastUpdatedTime:
        description: The last updated time for the run.
        format: date-time
        type: string
      outputImages:
        description: The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        items:
          $ref: '#/definitions/ImageDescriptor'
        type: array
      platform:
        $ref: '#/definitions/PlatformProperties'
        description: The platform properties against which the run will happen.
      provisioningState:
        description: The provisioning state of a run.
        enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningState
      runErrorMessage:
        description: The error message received from backend systems after the run is scheduled.
        readOnly: true
        type: string
      runId:
        description: The unique identifier for the run.
        type: string
      runType:
        description: The type of run.
        enum:
          - QuickBuild
          - QuickRun
          - AutoBuild
          - AutoRun
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunType
      sourceRegistryAuth:
        description: The scope of the credentials that were used to login to the source registry during this run.
        type: string
      sourceTrigger:
        $ref: '#/definitions/SourceTriggerDescriptor'
        description: The source trigger that caused the run.
      startTime:
        description: The time the run started.
        format: date-time
        type: string
      status:
        description: The current status of the run.
        enum:
          - Queued
          - Started
          - Running
          - Succeeded
          - Failed
          - Canceled
          - Error
          - Timeout
        type: string
        x-ms-enum:
          modelAsString: true
          name: RunStatus
      task:
        description: The task against which run was scheduled.
        type: string
      timerTrigger:
        $ref: '#/definitions/TimerTriggerDescriptor'
        description: The timer trigger that caused the run.
      updateTriggerToken:
        description: The update trigger token passed for the Run.
        type: string
    type: object
  RunRequest:
    description: The request parameters for scheduling a run.
    discriminator: type
    properties:
      isArchiveEnabled:
        default: false
        description: The value that indicates whether archiving is enabled for the run or not.
        type: boolean
      type:
        description: The type of the run request.
        type: string
    required:
      - type
    type: object
  RunUpdateParameters:
    description: The set of run properties that can be updated.
    properties:
      isArchiveEnabled:
        description: The value that indicates whether archiving is enabled or not.
        type: boolean
    type: object
  SecretObject:
    description: Describes the properties of a secret object value.
    properties:
      type:
        description: "The type of the secret object which determines how the value of the secret object has to be\r\ninterpreted."
        enum:
          - Opaque
          - Vaultsecret
        type: string
        x-ms-enum:
          modelAsString: true
          name: SecretObjectType
      value:
        description: "The value of the secret. The format of this value will be determined\r\nbased on the type of the secret object. If the type is Opaque, the value will be\r\nused as is without any modification."
        type: string
    type: object
  SetValue:
    description: The properties of a overridable value that can be passed to a task template.
    properties:
      isSecret:
        default: false
        description: Flag to indicate whether the value represents a secret or not.
        type: boolean
      name:
        description: The name of the overridable value.
        type: string
      value:
        description: The overridable value.
        type: string
    required:
      - name
      - value
    type: object
  SourceProperties:
    description: The properties of the source code repository.
    properties:
      branch:
        description: The branch name of the source code.
        type: string
      repositoryUrl:
        description: The full URL to the source code repository
        type: string
      sourceControlAuthProperties:
        $ref: '#/definitions/AuthInfo'
        description: "The authorization properties for accessing the source code repository and to set up\r\nwebhooks for notifications."
      sourceControlType:
        description: The type of source control service.
        enum:
          - Github
          - VisualStudioTeamService
        type: string
        x-ms-enum:
          modelAsString: true
          name: SourceControlType
    required:
      - sourceControlType
      - repositoryUrl
    type: object
  SourceRegistryCredentials:
    description: Describes the credential parameters for accessing the source registry.
    properties:
      loginMode:
        description: "The authentication mode which determines the source registry login scope. The credentials for the source registry\r\nwill be generated using the given scope. These credentials will be used to login to\r\nthe source registry during the run."
        enum:
          - None
          - Default
        type: string
        x-ms-enum:
          modelAsString: true
          name: SourceRegistryLoginMode
    type: object
  SourceTrigger:
    description: The properties of a source based trigger.
    properties:
      name:
        description: The name of the trigger.
        type: string
      sourceRepository:
        $ref: '#/definitions/SourceProperties'
        description: The properties that describes the source(code) for the task.
      sourceTriggerEvents:
        description: The source event corresponding to the trigger.
        items:
          enum:
            - commit
            - pullrequest
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceTriggerEvent
        type: array
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
    required:
      - sourceRepository
      - sourceTriggerEvents
      - name
    type: object
  SourceTriggerDescriptor:
    description: The source trigger that caused a run.
    properties:
      branchName:
        description: The branch name in the repository.
        type: string
      commitId:
        description: The unique ID that identifies a commit.
        type: string
      eventType:
        description: The event type of the trigger.
        type: string
      id:
        description: The unique ID of the trigger.
        type: string
      providerType:
        description: The source control provider type.
        type: string
      pullRequestId:
        description: The unique ID that identifies pull request.
        type: string
      repositoryUrl:
        description: The repository URL.
        type: string
    type: object
  SourceTriggerUpdateParameters:
    description: The properties for updating a source based trigger.
    properties:
      name:
        description: The name of the trigger.
        type: string
      sourceRepository:
        $ref: '#/definitions/SourceUpdateParameters'
        description: The properties that describes the source(code) for the task.
      sourceTriggerEvents:
        description: The source event corresponding to the trigger.
        items:
          enum:
            - commit
            - pullrequest
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceTriggerEvent
        type: array
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
    required:
      - name
    type: object
  SourceUpdateParameters:
    description: The properties for updating the source code repository.
    properties:
      branch:
        description: The branch name of the source code.
        type: string
      repositoryUrl:
        description: The full URL to the source code repository
        type: string
      sourceControlAuthProperties:
        $ref: '#/definitions/AuthInfoUpdateParameters'
        description: "The authorization properties for accessing the source code repository and to set up\r\nwebhooks for notifications."
      sourceControlType:
        description: The type of source control service.
        enum:
          - Github
          - VisualStudioTeamService
        type: string
        x-ms-enum:
          modelAsString: true
          name: SourceControlType
    type: object
  SourceUploadDefinition:
    description: The properties of a response to source upload request.
    properties:
      relativePath:
        description: The relative path to the source. This is used to submit the subsequent queue build request.
        type: string
      uploadUrl:
        description: The URL where the client can upload the source.
        type: string
    type: object
  Task:
    allOf:
      - $ref: '#/definitions/Resource'
    description: "The task that has the ARM resource and task properties. \r\nThe task will have all information to schedule a run against it."
    properties:
      identity:
        $ref: '#/definitions/IdentityProperties'
        description: Identity for the resource.
      properties:
        $ref: '#/definitions/TaskProperties'
        description: The properties of a task.
        x-ms-client-flatten: true
    type: object
  TaskListResult:
    description: The collection of tasks.
    properties:
      nextLink:
        description: The URI that can be used to request the next set of paged results.
        type: string
      value:
        description: The collection value.
        items:
          $ref: '#/definitions/Task'
        type: array
    type: object
  TaskProperties:
    description: The properties of a task.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      creationDate:
        description: The creation date of task.
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/Credentials'
        description: The properties that describes a set of credentials that will be used when this run is invoked.
      platform:
        $ref: '#/definitions/PlatformProperties'
        description: The platform properties against which the run has to happen.
      provisioningState:
        description: The provisioning state of the task.
        enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningState
      status:
        description: The current status of task.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TaskStatus
      step:
        $ref: '#/definitions/TaskStepProperties'
        description: The properties of a task step.
      timeout:
        default: 3600
        description: Run timeout in seconds.
        format: int32
        maximum: 28800
        minimum: 300
        type: integer
      trigger:
        $ref: '#/definitions/TriggerProperties'
        description: The properties that describe all triggers for the task.
    required:
      - platform
      - step
    type: object
  TaskPropertiesUpdateParameters:
    description: The properties for updating a task.
    properties:
      agentConfiguration:
        $ref: '#/definitions/AgentProperties'
        description: The machine configuration of the run agent.
      credentials:
        $ref: '#/definitions/Credentials'
        description: The parameters that describes a set of credentials that will be used when this run is invoked.
      platform:
        $ref: '#/definitions/PlatformUpdateParameters'
        description: The platform properties against which the run has to happen.
      status:
        description: The current status of task.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TaskStatus
      step:
        $ref: '#/definitions/TaskStepUpdateParameters'
        description: The properties for updating a task step.
      timeout:
        description: Run timeout in seconds.
        format: int32
        type: integer
      trigger:
        $ref: '#/definitions/TriggerUpdateParameters'
        description: The properties for updating trigger properties.
    type: object
  TaskRun:
    allOf:
      - $ref: '#/definitions/Resource'
    description: "The task run that has the ARM resource and properties. \r\nThe task run will have the information of request and result of a run."
    properties:
      identity:
        $ref: '#/definitions/IdentityProperties'
        description: Identity for the resource.
      properties:
        $ref: '#/definitions/TaskRunProperties'
        description: 'The properties associated with the task run, i.e., request and result of the run'
        x-ms-client-flatten: true
    type: object
  TaskRunListResult:
    description: The collection of task runs.
    properties:
      nextLink:
        description: The URI that can be used to request the next set of paged results.
        type: string
      value:
        description: The collection value.
        items:
          $ref: '#/definitions/TaskRun'
        type: array
    type: object
  TaskRunProperties:
    description: The properties of task run.
    properties:
      forceUpdateTag:
        description: How the run should be forced to rerun even if the run request configuration has not changed
        type: string
      provisioningState:
        description: The provisioning state of this task run
        enum:
          - Creating
          - Updating
          - Deleting
          - Succeeded
          - Failed
          - Canceled
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: true
          name: ProvisioningState
      runRequest:
        $ref: '#/definitions/RunRequest'
        description: The request (parameters) for the run
      runResult:
        $ref: '#/definitions/Run'
        description: The result of this task run
        readOnly: true
    type: object
  TaskRunPropertiesUpdateParameters:
    description: The properties of a task run update parameters.
    properties:
      forceUpdateTag:
        description: How the run should be forced to rerun even if the run request configuration has not changed
        type: string
      runRequest:
        $ref: '#/definitions/RunRequest'
        description: The request (parameters) for the new run
    type: object
  TaskRunRequest:
    allOf:
      - $ref: '#/definitions/RunRequest'
    description: The parameters for a task run request.
    properties:
      overrideTaskStepProperties:
        $ref: '#/definitions/OverrideTaskStepProperties'
        description: Set of overridable parameters that can be passed when running a Task.
      taskId:
        description: The resource ID of task against which run has to be queued.
        type: string
    required:
      - type
      - taskId
    type: object
    x-ms-discriminator-value: TaskRunRequest
  TaskRunUpdateParameters:
    description: The parameters for updating a task run.
    properties:
      identity:
        $ref: '#/definitions/IdentityProperties'
        description: Identity for the resource.
      properties:
        $ref: '#/definitions/TaskRunPropertiesUpdateParameters'
        description: The properties for updating a task run.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: The ARM resource tags.
        type: object
    type: object
  TaskStepProperties:
    description: Base properties for any task step.
    discriminator: type
    properties:
      baseImageDependencies:
        description: List of base image dependencies for a step.
        items:
          $ref: '#/definitions/BaseImageDependency'
        readOnly: true
        type: array
      contextAccessToken:
        description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
        type: string
      contextPath:
        description: The URL(absolute or relative) of the source context for the task step.
        type: string
      type:
        description: The type of the step.
        enum:
          - Docker
          - FileTask
          - EncodedTask
        type: string
        x-ms-enum:
          modelAsString: true
          name: StepType
    required:
      - type
    type: object
  TaskStepUpdateParameters:
    description: Base properties for updating any task step.
    discriminator: type
    properties:
      contextAccessToken:
        description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
        type: string
      contextPath:
        description: The URL(absolute or relative) of the source context for the task step.
        type: string
      type:
        description: The type of the step.
        enum:
          - Docker
          - FileTask
          - EncodedTask
        type: string
        x-ms-enum:
          modelAsString: true
          name: StepType
    required:
      - type
    type: object
  TaskUpdateParameters:
    description: The parameters for updating a task.
    properties:
      identity:
        $ref: '#/definitions/IdentityProperties'
        description: Identity for the resource.
      properties:
        $ref: '#/definitions/TaskPropertiesUpdateParameters'
        description: The properties for updating a task.
        x-ms-client-flatten: true
      tags:
        additionalProperties:
          type: string
        description: The ARM resource tags.
        type: object
    type: object
  TimerTrigger:
    description: The properties of a timer trigger.
    properties:
      name:
        description: The name of the trigger.
        type: string
      schedule:
        description: The CRON expression for the task schedule
        type: string
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
    required:
      - schedule
      - name
    type: object
  TimerTriggerDescriptor:
    properties:
      scheduleOccurrence:
        description: The occurrence that triggered the run.
        type: string
      timerTriggerName:
        description: The timer trigger name that caused the run.
        type: string
    type: object
  TimerTriggerUpdateParameters:
    description: The properties for updating a timer trigger.
    properties:
      name:
        description: The name of the trigger.
        type: string
      schedule:
        description: The CRON expression for the task schedule
        type: string
      status:
        default: Enabled
        description: The current status of trigger.
        enum:
          - Disabled
          - Enabled
        type: string
        x-ms-enum:
          modelAsString: true
          name: TriggerStatus
    required:
      - name
    type: object
  TriggerProperties:
    description: The properties of a trigger.
    properties:
      baseImageTrigger:
        $ref: '#/definitions/BaseImageTrigger'
        description: The trigger based on base image dependencies.
      sourceTriggers:
        description: The collection of triggers based on source code repository.
        items:
          $ref: '#/definitions/SourceTrigger'
        type: array
      timerTriggers:
        description: The collection of timer triggers.
        items:
          $ref: '#/definitions/TimerTrigger'
        type: array
    type: object
  TriggerUpdateParameters:
    description: The properties for updating triggers.
    properties:
      baseImageTrigger:
        $ref: '#/definitions/BaseImageTriggerUpdateParameters'
        description: The trigger based on base image dependencies.
      sourceTriggers:
        description: The collection of triggers based on source code repository.
        items:
          $ref: '#/definitions/SourceTriggerUpdateParameters'
        type: array
      timerTriggers:
        description: The collection of timer triggers.
        items:
          $ref: '#/definitions/TimerTriggerUpdateParameters'
        type: array
    type: object
  UserIdentityProperties:
    properties:
      clientId:
        description: The client id of user assigned identity.
        type: string
      principalId:
        description: The principal id of user assigned identity.
        type: string
    type: object
