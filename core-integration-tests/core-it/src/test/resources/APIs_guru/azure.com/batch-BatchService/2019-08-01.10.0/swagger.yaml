swagger: '2.0'
schemes:
  - https
host: azure.local
info:
  description: A client for issuing REST requests to the Azure Batch service.
  title: BatchService
  version: 2019-08-01.10.0
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-ms-code-generation-settings:
    name: BatchServiceClient
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/batch/data-plane/Microsoft.Batch/stable/2019-08-01.10.0/BatchService.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: batch-BatchService
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json; odata=minimalmetadata
produces:
  - application/json
securityDefinitions:
  api_key:
    in: header
    name: Authorization
    type: apiKey
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: Impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
  - api_key: []
parameters:
  ApiVersionParameter:
    description: Client API Version.
    in: query
    name: api-version
    required: true
    type: string
  batchUrl:
    description: The base URL for all Azure Batch service requests.
    in: path
    name: batchUrl
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
paths:
  /applications:
    get:
      description: 'This operation returns only Applications and versions that are available for use on Compute Nodes; that is, that can be used in an Package reference. For administrator information about applications and versions that are not yet available to Compute Nodes, use the Azure portal or the Azure Resource Manager API.'
      operationId: Application_List
      parameters:
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 applications can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of applications.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/ApplicationListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the applications available in the specified Account.
      tags:
        - Applications
      x-ms-examples:
        List applications:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - displayName: my_display_name
                    id: my_application_id
                    versions:
                      - v1.0
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/applications/{applicationId}':
    get:
      description: 'This operation returns only Applications and versions that are available for use on Compute Nodes; that is, that can be used in an Package reference. For administrator information about Applications and versions that are not yet available to Compute Nodes, use the Azure portal or the Azure Resource Manager API.'
      operationId: Application_Get
      parameters:
        - description: The ID of the Application.
          in: path
          name: applicationId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the application.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/ApplicationSummary'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets information about the specified Application.
      tags:
        - Applications
      x-ms-examples:
        Get applications:
          parameters:
            api-version: 2019-08-01.10.0
            applicationId: my_application_id
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                displayName: my_display_name
                id: my_application_id
                versions:
                  - v1.0
      x-ms-request-id: request-id
  /certificates:
    get:
      operationId: Certificate_List
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Certificates can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Certificates.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CertificateListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the Certificates that have been added to the specified Account.
      tags:
        - Certificates
      x-ms-examples:
        Certificate list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - deleteCertificateError:
                      code: PoolsReferencingCertificate
                      message: The specified certificate is being used by the below mentioned pool(s)
                      values:
                        - name: Pools
                          value: mypool1
                    previousState: deleting
                    previousStateTransitionTime: '2014-07-31T21:11:58.236Z'
                    publicData: '#####...'
                    state: deletefailed
                    stateTransitionTime: '2014-07-31T21:12:58.236Z'
                    thumbprint: 0123456789abcdef0123456789abcdef01234567
                    thumbprintAlgorithm: sha1
                    url: 'https://account.region.batch.azure.com/certificates(thumbprintAlgorithm=sha1,thumbprint=0123456789abcdef0123456789abcdef01234567)'
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      operationId: Certificate_Add
      parameters:
        - description: The Certificate to be added.
          in: body
          name: certificate
          required: true
          schema:
            $ref: '#/definitions/CertificateAddParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a Certificate to the specified Account.
      tags:
        - Certificates
      x-ms-examples:
        Certificate add:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            certificate:
              certificateFormat: pfx
              data: '#####...'
              password: certpassword
              thumbprint: 0123456789abcdef0123456789abcdef01234567
              thumbprintAlgorithm: sha1
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '201': {}
      x-ms-request-id: request-id
  '/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})':
    delete:
      description: 'You cannot delete a Certificate if a resource (Pool or Compute Node) is using it. Before you can delete a Certificate, you must therefore make sure that the Certificate is not associated with any existing Pools, the Certificate is not installed on any Nodes (even if you remove a Certificate from a Pool, it is not removed from existing Compute Nodes in that Pool until they restart), and no running Tasks depend on the Certificate. If you try to delete a Certificate that is in use, the deletion fails. The Certificate status changes to deleteFailed. You can use Cancel Delete Certificate to set the status back to active if you decide that you want to continue using the Certificate.'
      operationId: Certificate_Delete
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          type: string
        - description: The thumbprint of the Certificate to be deleted.
          in: path
          name: thumbprint
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a Certificate from the specified Account.
      tags:
        - Certificates
      x-ms-examples:
        Certificate delete:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            thumbprint: 0123456789abcdef0123456789abcdef01234567
            thumbprintAlgorithm: sha1
          responses:
            '202': {}
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified Certificate.
      operationId: Certificate_Get
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          type: string
        - description: The thumbprint of the Certificate to get.
          in: path
          name: thumbprint
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Certificate.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/Certificate'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Certificates
      x-ms-examples:
        Certificate get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            thumbprint: 0123456789abcdef0123456789abcdef01234567
            thumbprintAlgorithm: sha1
          responses:
            '200':
              body:
                deleteCertificateError:
                  code: PoolsReferencingCertificate
                  message: The specified certificate is being used by the below mentioned pool(s)
                  values:
                    - name: Pools
                      value: mypool1
                previousState: deleting
                previousStateTransitionTime: '2014-07-31T21:11:58.236Z'
                publicData: '#####...'
                state: deletefailed
                stateTransitionTime: '2014-07-31T21:12:58.236Z'
                thumbprint: 0123456789abcdef0123456789abcdef01234567
                thumbprintAlgorithm: sha1
                url: 'https://account.region.batch.azure.com/certificates(thumbprintAlgorithm=sha1,thumbprint=0123456789abcdef0123456789abcdef01234567)'
      x-ms-request-id: request-id
  '/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete':
    post:
      description: 'If you try to delete a Certificate that is being used by a Pool or Compute Node, the status of the Certificate changes to deleteFailed. If you decide that you want to continue using the Certificate, you can use this operation to set the status of the Certificate back to active. If you intend to delete the Certificate, you do not need to run this operation after the deletion failed. You must make sure that the Certificate is not being used by any resources, and then you can try again to delete the Certificate.'
      operationId: Certificate_CancelDeletion
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          type: string
        - description: The thumbprint of the Certificate being deleted.
          in: path
          name: thumbprint
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Cancels a failed deletion of a Certificate from the specified Account.
      tags:
        - Certificates
      x-ms-examples:
        Certificate cancel delete:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            thumbprint: 0123456789abcdef0123456789abcdef01234567
            thumbprintAlgorithm: sha1
          responses:
            '204': {}
      x-ms-request-id: request-id
  /jobs:
    get:
      operationId: Job_List
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Jobs.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJobListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the Jobs in the specified Account.
      tags:
        - Jobs
      x-ms-examples:
        Job list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - constraints:
                      maxTaskRetryCount: 0
                      maxWallClockTime: P10675199DT2H48M5.4775807S
                    creationTime: '2016-11-19T00:05:25.311915Z'
                    eTag: '0x8D4100FC46D5BF4'
                    executionInfo:
                      poolId: poolId
                      startTime: '2016-11-19T00:05:25.3309105Z'
                    id: jobId
                    lastModified: '2016-11-19T00:05:27.2137716Z'
                    onAllTasksComplete: noaction
                    onTaskFailure: noaction
                    poolInfo:
                      poolId: poolId
                    previousState: disabled
                    previousStateTransitionTime: '2016-11-19T00:05:26.88777Z'
                    priority: 0
                    state: active
                    stateTransitionTime: '2016-11-19T00:05:27.2137716Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId'
                    usesTaskDependencies: false
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: 'The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
      operationId: Job_Add
      parameters:
        - description: The Job to be added.
          in: body
          name: job
          required: true
          schema:
            $ref: '#/definitions/JobAddParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a Job to the specified Account.
      tags:
        - Jobs
      x-ms-examples:
        Add a basic job:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            job:
              id: jobId
              poolInfo:
                poolId: poolId
              priority: 0
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '201': {}
        Add a complex job:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            job:
              constraints:
                maxTaskRetryCount: -1
                maxWallClockTime: PT1H
              id: jobId
              jobManagerTask:
                commandLine: myprogram.exe
                constraints:
                  maxTaskRetryCount: 0
                  maxWallClockTime: PT1H
                  retentionTime: PT1H
                environmentSettings:
                  - name: myvariable
                    value: myvalue
                id: taskId
                killJobOnCompletion: false
                resourceFiles:
                  - filePath: myprogram.exe
                    httpUrl: 'http://mystorage1.blob.core.windows.net/scripts/myprogram.exe?sas'
                  - filePath: datafolder
                    storageContainerUrl: 'http://mystorage1.blob.core.windows.net/data?sas'
                runExclusive: true
                userIdentity:
                  autoUser:
                    elevationLevel: admin
                    scope: task
              metadata:
                - name: myproperty
                  value: myvalue
              poolInfo:
                autoPoolSpecification:
                  autoPoolIdPrefix: mypool
                  pool:
                    certificateReferences:
                      - storeLocation: localmachine
                        storeName: Root
                        thumbprint: 0123456789abcdef0123456789abcdef01234567
                        thumbprintAlgorithm: sha1
                        visibility:
                          - task
                    cloudServiceConfiguration:
                      osFamily: '4'
                      osVersion: '*'
                    enableAutoScale: false
                    enableInterNodeCommunication: true
                    maxTasksPerNode: 2
                    metadata:
                      - name: myproperty
                        value: myvalue
                    resizeTimeout: PT15M
                    startTask:
                      commandLine: myprogram2.exe
                      environmentSettings:
                        - name: myvariable
                          value: myvalue
                      maxTaskRetryCount: 2
                      resourceFiles:
                        - filePath: myprogram2.exe
                          httpUrl: 'http://mystorage1.blob.core.windows.net/scripts/myprogram2.exe?sas'
                      userIdentity:
                        autoUser:
                          elevationLevel: admin
                          scope: task
                      waitForSuccess: true
                    targetDedicatedNodes: 3
                    targetLowPriorityNodes: 0
                    taskSchedulingPolicy:
                      nodeFillType: spread
                    vmSize: small
                  poolLifetimeOption: job
              priority: 100
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '201': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}':
    delete:
      description: 'Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks'' working directories and all their contents.  When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.'
      operationId: Job_Delete
      parameters:
        - description: The ID of the Job to delete.
          in: path
          name: jobId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a Job.
      tags:
        - Jobs
      x-ms-examples:
        Delete Job:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
    get:
      operationId: Job_Get
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Job.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJob'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets information about the specified Job.
      tags:
        - Jobs
      x-ms-examples:
        Job get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                constraints:
                  maxTaskRetryCount: 0
                  maxWallClockTime: P10675199DT2H48M5.4775807S
                creationTime: '2016-11-19T00:05:25.311915Z'
                eTag: '0x8D4100FC49F0278'
                executionInfo:
                  endTime: '2016-11-19T00:05:27.578581Z'
                  poolId: poolId
                  startTime: '2016-11-19T00:05:25.3309105Z'
                  terminateReason: UserTerminate
                id: jobId
                lastModified: '2016-11-19T00:05:27.5391608Z'
                onAllTasksComplete: noaction
                onTaskFailure: noaction
                poolInfo:
                  poolId: poolId
                previousState: active
                previousStateTransitionTime: '2016-11-19T00:05:27.2137716Z'
                priority: 0
                state: completed
                stateTransitionTime: '2016-11-19T00:05:27.578581Z'
                url: 'https://account.region.batch.azure.com/jobs/jobId'
                usesTaskDependencies: false
      x-ms-request-id: request-id
    patch:
      description: 'This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.'
      operationId: Job_Patch
      parameters:
        - description: The ID of the Job whose properties you want to update.
          in: path
          name: jobId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobPatchParameter
          required: true
          schema:
            $ref: '#/definitions/JobPatchParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Job.
      tags:
        - Jobs
      x-ms-examples:
        Job patch:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            jobPatchParameter:
              constraints:
                maxTaskRetryCount: -1
                maxWallClockTime: PT1H
              poolInfo:
                poolId: poolId
              priority: 100
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200': {}
      x-ms-request-id: request-id
    put:
      description: 'This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.'
      operationId: Job_Update
      parameters:
        - description: The ID of the Job whose properties you want to update.
          in: path
          name: jobId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobUpdateParameter
          required: true
          schema:
            $ref: '#/definitions/JobUpdateParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Job.
      tags:
        - Jobs
      x-ms-examples:
        Job update:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            jobUpdateParameter:
              constraints:
                maxTaskRetryCount: -1
                maxWallClockTime: PT1H
              poolInfo:
                poolId: poolId
              priority: 100
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/addtaskcollection':
    post:
      description: 'Note that each Task must have a unique ID. The Batch service may not return the results for each Task in the same order the Tasks were submitted in this request. If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all. In such cases, the user should re-issue the request. Note that it is up to the user to correctly handle failures when re-issuing a request. For example, you should use the same Task IDs during a retry so that if the prior operation succeeded, the retry will not create extra Tasks unexpectedly. If the response contains any Tasks which failed to add, a client can retry the request. In a retry, it is most efficient to resubmit only Tasks that failed to add, and to omit Tasks that were successfully added on the first attempt. The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.'
      operationId: Task_AddCollection
      parameters:
        - description: The ID of the Job to which the Task collection is to be added.
          in: path
          name: jobId
          required: true
          type: string
        - description: The Tasks to be added.
          in: body
          name: taskCollection
          required: true
          schema:
            $ref: '#/definitions/TaskAddCollectionParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the results of the add Task collection operation.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
          schema:
            $ref: '#/definitions/TaskAddCollectionResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a collection of Tasks to the specified Job.
      tags:
        - Tasks
      x-ms-examples:
        Add a basic collection of tasks:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskCollection:
              value:
                - commandLine: cmd /c dir /s
                  id: simple1
                - commandLine: cmd /c dir /s
                  id: simple2
          responses:
            '200':
              body:
                value:
                  - eTag: '0x8D3D623CD661246'
                    lastModified: '2016-09-06T07:02:44.7589958Z'
                    location: 'https://account.region.batch.azure.com/jobs/jobId/tasks/simple1'
                    status: success
                    taskId: simple1
                  - eTag: '0x8D3D623CD7072CC'
                    lastModified: '2016-09-06T07:02:44.8270028Z'
                    location: 'https://account.region.batch.azure.com/jobs/jobId/tasks/simple2'
                    status: success
                    taskId: simple2
        Add a complex collection of tasks:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskCollection:
              value:
                - affinityInfo:
                    affinityId: affinityId
                  commandLine: cmd /c dir /s
                  constraints:
                    maxTaskRetryCount: 5
                    maxWallClockTime: P1D
                    retentionTime: P2D
                  environmentSettings:
                    - name: env1
                      value: value1
                    - name: env2
                      value: value2
                  id: complex1
                  multiInstanceSettings:
                    commonResourceFiles:
                      - filePath: common.exe
                        httpUrl: 'https://common.blob.core.windows.net/'
                    coordinationCommandLine: cmd /c echo coordinating
                    numberOfInstances: 3
                  resourceFiles:
                    - autoStorageContainerName: containerName
                      filePath: data
                - commandLine: cmd /c dir /s
                  id: simple3
          responses:
            '200':
              body:
                value:
                  - eTag: '0x8D3D623CE295629'
                    lastModified: '2016-09-06T07:02:46.0386857Z'
                    location: 'https://account.region.batch.azure.com/jobs/jobId/tasks/simple3'
                    status: success
                    taskId: simple3
                  - eTag: '0x8D3D623CE29A412'
                    lastModified: '2016-09-06T07:02:46.0406802Z'
                    location: 'https://account.region.batch.azure.com/jobs/jobId/tasks/complex1'
                    status: success
                    taskId: complex1
      x-ms-request-id: request-id
  '/jobs/{jobId}/disable':
    post:
      description: 'The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.'
      operationId: Job_Disable
      parameters:
        - description: The ID of the Job to disable.
          in: path
          name: jobId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobDisableParameter
          required: true
          schema:
            $ref: '#/definitions/JobDisableParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: 'Disables the specified Job, preventing new Tasks from running.'
      tags:
        - Jobs
      x-ms-examples:
        Job disable:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobDisableParameter:
              disableTasks: terminate
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/enable':
    post:
      description: 'When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.'
      operationId: Job_Enable
      parameters:
        - description: The ID of the Job to enable.
          in: path
          name: jobId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: 'Enables the specified Job, allowing new Tasks to run.'
      tags:
        - Jobs
      x-ms-examples:
        Job enable:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/jobpreparationandreleasetaskstatus':
    get:
      description: 'This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.'
      operationId: Job_ListPreparationAndReleaseTaskStatus
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing a list of Job Preparation and Job Release Task statuses.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJobListPreparationAndReleaseTaskStatusResult'
        default:
          description: 'The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409.'
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.
      tags:
        - Jobs
      x-ms-examples:
        Job list preparation and release task status:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                odata.nextLink: 'https://account.region.batch.azure.com/jobs/myjob/jobpreparationandreleasestatus?$skipToken=tvm-2167304207_1-20140905t174658z&api-version=2019-08-01.10.0'
                value:
                  - jobPreparationTaskExecutionInfo:
                      endTime: '2015-05-02T20:12:42Z'
                      exitCode: 0
                      retryCount: 0
                      startTime: '2015-05-01T10:20:31Z'
                      state: completed
                      taskRootDirectory: tasks/myjob/job-1/myjobpreptask
                      taskRootDirectoryUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_1-20140905t174658z/files/tasks/myjob/job-1/myjobpreptask'
                    jobReleaseTaskExecutionInfo:
                      endTime: '2015-05-02T20:12:42Z'
                      exitCode: 0
                      startTime: '2015-05-01T10:20:31Z'
                      state: completed
                      taskRootDirectory: tasks/myjob/job-1/myjobreleasetask
                      taskRootDirectoryUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_1-20140905t174658z/files/tasks/myjob/job-1/myjobreleasetask'
                    nodeId: tvm-2167304207_1-20140905t174658z
                    nodeUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_1-20140905t174658z'
                    poolId: poolId
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobs/{jobId}/taskcounts':
    get:
      description: 'Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.'
      operationId: Job_GetTaskCounts
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Task counts for the specified Job.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/TaskCounts'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets the Task counts for the specified Job.
      tags:
        - Jobs
      x-ms-examples:
        Job get task counts:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                active: 5
                completed: 4
                failed: 2
                running: 7
                succeeded: 2
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks':
    get:
      description: 'For multi-instance Tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary Task. Use the list subtasks API to retrieve information about subtasks.'
      operationId: Task_List
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Tasks can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Tasks.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudTaskListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the Tasks that are associated with the specified Job.
      tags:
        - Tasks
      x-ms-examples:
        Task list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - commandLine: cmd /c echo task1
                    constraints:
                      maxTaskRetryCount: 0
                      maxWallClockTime: P10675199DT2H48M5.4775807S
                      retentionTime: P10675199DT2H48M5.4775807S
                    creationTime: '2016-11-21T22:43:31.4733476Z'
                    eTag: '0x8D4125FD1A825A4'
                    executionInfo:
                      requeueCount: 0
                      retryCount: 0
                    id: task1
                    lastModified: '2016-11-21T22:43:31.4733476Z'
                    state: active
                    stateTransitionTime: '2016-11-21T22:43:31.4733476Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId/tasks/task1'
                    userIdentity:
                      autoUser:
                        elevationLevel: nonadmin
                        scope: task
                  - commandLine: cmd /c echo task2
                    constraints:
                      maxTaskRetryCount: 3
                      maxWallClockTime: P10675199DT2H48M5.4775807S
                      retentionTime: P10675199DT2H48M5.4775807S
                    creationTime: '2016-11-21T22:43:31.6736345Z'
                    eTag: '0x8D4125FD2153345'
                    executionInfo:
                      requeueCount: 0
                      retryCount: 0
                    id: task2
                    lastModified: '2016-11-21T22:43:32.1880389Z'
                    state: active
                    stateTransitionTime: '2016-11-21T22:43:31.6736345Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId/tasks/task2'
                    userIdentity:
                      autoUser:
                        elevationLevel: nonadmin
                        scope: task
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: The maximum lifetime of a Task from addition to completion is 180 days. If a Task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.
      operationId: Task_Add
      parameters:
        - description: The ID of the Job to which the Task is to be added.
          in: path
          name: jobId
          required: true
          type: string
        - description: The Task to be added.
          in: body
          name: task
          required: true
          schema:
            $ref: '#/definitions/TaskAddParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a Task to the specified Job.
      tags:
        - Tasks
      x-ms-examples:
        Add a basic task:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            task:
              commandLine: cmd /c echo task1
              id: task1
          responses:
            '201': {}
        Add a task with container settings:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            task:
              commandLine: bash -c 'echo hello'
              containerSettings:
                containerRunOptions: '--rm'
                imageName: ubuntu
              id: taskId
              userIdentity:
                autoUser:
                  elevationLevel: nonadmin
                  scope: task
          responses:
            '201': {}
        Add a task with exit conditions:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            task:
              commandLine: cmd /c exit 3
              exitConditions:
                exitCodeRanges:
                  - end: 4
                    exitOptions:
                      jobAction: terminate
                    start: 2
              id: taskId
              userIdentity:
                autoUser:
                  elevationLevel: nonadmin
                  scope: task
          responses:
            '201': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}':
    delete:
      description: 'When a Task is deleted, all of the files in its directory on the Compute Node where it ran are also deleted (regardless of the retention time). For multi-instance Tasks, the delete Task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.'
      operationId: Task_Delete
      parameters:
        - description: The ID of the Job from which to delete the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task to delete.
          in: path
          name: taskId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a Task from the specified Job.
      tags:
        - Tasks
      x-ms-examples:
        Task delete:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '200': {}
      x-ms-request-id: request-id
    get:
      description: 'For multi-instance Tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary Task. Use the list subtasks API to retrieve information about subtasks.'
      operationId: Task_Get
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task to get information about.
          in: path
          name: taskId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Task.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudTask'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets information about the specified Task.
      tags:
        - Tasks
      x-ms-examples:
        Task get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '200':
              body:
                commandLine: cmd /c hostname
                constraints:
                  maxTaskRetryCount: 0
                  maxWallClockTime: P10675199DT2H48M5.4775807S
                  retentionTime: P10675199DT2H48M5.4775807S
                creationTime: '2016-09-06T06:59:15.1161429Z'
                eTag: '0x8D3D62350711C55'
                executionInfo:
                  requeueCount: 0
                  retryCount: 0
                id: testTask
                lastModified: '2016-09-06T06:59:15.1161429Z'
                multiInstanceSettings:
                  coordinationCommandLine: cmd /c echo coordinating
                  numberOfInstances: 3
                state: active
                stateTransitionTime: '2016-09-06T06:59:15.1161429Z'
                url: 'https://account.region.batch.azure.com/jobs/jobId/tasks/taskId'
                userIdentity:
                  autoUser:
                    elevationLevel: nonadmin
                    scope: task
      x-ms-request-id: request-id
    put:
      description: Updates the properties of the specified Task.
      operationId: Task_Update
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task to update.
          in: path
          name: taskId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: taskUpdateParameter
          required: true
          schema:
            $ref: '#/definitions/TaskUpdateParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Tasks
      x-ms-examples:
        Task update:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
            taskUpdateParameter:
              constraints:
                maxTaskRetryCount: 3
                maxWallClockTime: PT1H
                retentionTime: PT1H
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/files':
    get:
      operationId: File_ListFromTask
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task whose files you want to list.
          in: path
          name: taskId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Whether to list children of the Task directory. This parameter can be used in combination with the filter parameter to list specific type of files.
          in: query
          name: recursive
          required: false
          type: boolean
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of files.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/NodeFileListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists the files in a Task's directory on its Compute Node.
      tags:
        - Files
      x-ms-examples:
        File list from task:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            recursive: false
            taskId: taskId
          responses:
            '200':
              body:
                value:
                  - isDirectory: false
                    name: startup\ProcessEnv.cmd
                    properties:
                      contentLength: 1813
                      contentType: application/octet-stream
                      creationTime: '2014-09-19T21:56:17.679195Z'
                      lastModified: '2014-09-19T21:56:17.679195Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId/tasks/taskId/files/startup\ProcessEnv.cmd'
                  - isDirectory: false
                    name: startup\stderr.txt
                    properties:
                      contentLength: 0
                      contentType: application/octet-stream
                      creationTime: '2014-09-19T21:56:17.5590855Z'
                      lastModified: '2014-09-19T21:56:17.5590855Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId/tasks/taskId/files/startup\stderr.txt'
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/files/{filePath}':
    delete:
      operationId: File_DeleteFromTask
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task whose file you want to delete.
          in: path
          name: taskId
          required: true
          type: string
        - description: The path to the Task file or directory that you want to delete.
          in: path
          name: filePath
          required: true
          type: string
        - description: 'Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail.'
          in: query
          name: recursive
          required: false
          type: boolean
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes the specified Task file from the Compute Node where the Task ran.
      tags:
        - Files
      x-ms-examples:
        File delete from task:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: wd\testFile.txt
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            recursive: false
            taskId: task1
          responses:
            '200': {}
      x-ms-request-id: request-id
    get:
      description: Returns the content of the specified Task file.
      operationId: File_GetFromTask
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task whose file you want to retrieve.
          in: path
          name: taskId
          required: true
          type: string
        - description: The path to the Task file that you want to get the content of.
          in: path
          name: filePath
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: The byte range to be retrieved. The default is to retrieve the entire file. The format is bytes=startRange-endRange.
          in: header
          name: ocp-range
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      produces:
        - application/json
        - application/octet-stream
      responses:
        '200':
          description: A response containing the file content.
          headers:
            Content-Length:
              description: The length of the file.
              format: int64
              type: integer
            Content-Type:
              description: The content type of the file.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              type: string
            ocp-batch-file-url:
              description: The URL of the file.
              type: string
            ocp-creation-time:
              description: The file creation time.
              format: date-time-rfc1123
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            format: file
            type: object
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Files
      x-ms-examples:
        Get File From Task:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: wd\testFile.txt
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: task1
          responses:
            '200':
              Content-Length: '17'
              Content-Type: application/octet-stream
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              body: This is actually a byte stream. This request/response is being presented as a string for readability in the example
              ocp-batch-file-isdirectory: 'false'
              ocp-creation-time: 'Fri, 17 Feb 2017 00:00:00 GMT'
      x-ms-request-id: request-id
    head:
      description: Gets the properties of the specified Task file.
      operationId: File_GetPropertiesFromTask
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task whose file you want to get the properties of.
          in: path
          name: taskId
          required: true
          type: string
        - description: The path to the Task file that you want to get the properties of.
          in: path
          name: filePath
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the file properties.
          headers:
            Content-Length:
              description: The length of the file.
              format: int64
              type: integer
            Content-Type:
              description: The content type of the file.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              type: string
            ocp-batch-file-url:
              description: The URL of the file.
              type: string
            ocp-creation-time:
              description: The file creation time.
              format: date-time-rfc1123
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Files
      x-ms-examples:
        File get properties from task:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: wd\testFile.txt
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '200':
              Content-Length: '17'
              Content-Type: application/octet-stream
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              ocp-batch-file-isdirectory: 'false'
              ocp-creation-time: 'Fri, 17 Feb 2017 00:00:00 GMT'
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/reactivate':
    post:
      description: 'Reactivation makes a Task eligible to be retried again up to its maximum retry count. The Task''s state is changed to active. As the Task is no longer in the completed state, any previous exit code or failure information is no longer available after reactivation. Each time a Task is reactivated, its retry count is reset to 0. Reactivation will fail for Tasks that are not completed or that previously completed successfully (with an exit code of 0). Additionally, it will fail if the Job has completed (or is terminating or deleting).'
      operationId: Task_Reactivate
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task to reactivate.
          in: path
          name: taskId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: 'Reactivates a Task, allowing it to run again even if its retry count has been exhausted.'
      tags:
        - Tasks
      x-ms-examples:
        Task reactivate:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '204': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/subtasksinfo':
    get:
      description: If the Task is not a multi-instance Task then this returns an empty collection.
      operationId: Task_ListSubtasks
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task.
          in: path
          name: taskId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of subtasks.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudTaskListSubtasksResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the subtasks that are associated with the specified multi-instance Task.
      tags:
        - Tasks
      x-ms-examples:
        Task list subtasks:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '200':
              body:
                value:
                  - endTime: '2016-09-06T06:59:20.0242024Z'
                    exitCode: 0
                    id: 1
                    nodeInfo:
                      affinityId: 'TVM:tvm-2544493925_3-20160905t051718z'
                      nodeId: tvm-2544493925_3-20160905t051718z
                      nodeUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_3-20160905t051718z'
                      poolId: mpiPool
                      taskRootDirectory: \workitems\jobId\job-1\taskId\1
                      taskRootDirectoryUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_3-20160905t051718z/files//workitems/jobId/job-1/taskId/1'
                    previousState: running
                    previousStateTransitionTime: '2016-09-06T06:59:16.3139271Z'
                    startTime: '2016-09-06T06:59:16.3139271Z'
                    state: completed
                    stateTransitionTime: '2016-09-06T06:59:20.0242024Z'
                  - id: 2
                    nodeInfo:
                      affinityId: 'TVM:tvm-2544493925_2-20160905t051718z'
                      nodeId: tvm-2544493925_2-20160905t051718z
                      nodeUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_2-20160905t051718z'
                      poolId: mpiPool
                      taskRootDirectory: \workitems\jobId\job-1\taskId\2
                      taskRootDirectoryUrl: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2544493925_2-20160905t051718z/files//workitems/jobId/job-1/taskId/2'
                    startTime: '2016-09-06T06:59:16.9702844Z'
                    state: running
                    stateTransitionTime: '2016-09-06T06:59:16.9702844Z'
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/terminate':
    post:
      description: 'When the Task has been terminated, it moves to the completed state. For multi-instance Tasks, the terminate Task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.'
      operationId: Task_Terminate
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          type: string
        - description: The ID of the Task to terminate.
          in: path
          name: taskId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Terminates the specified Task.
      tags:
        - Tasks
      x-ms-examples:
        Task terminate:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            taskId: taskId
          responses:
            '204': {}
      x-ms-request-id: request-id
  '/jobs/{jobId}/terminate':
    post:
      description: 'When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.'
      operationId: Job_Terminate
      parameters:
        - description: The ID of the Job to terminate.
          in: path
          name: jobId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobTerminateParameter
          required: false
          schema:
            $ref: '#/definitions/JobTerminateParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: 'Terminates the specified Job, marking it as completed.'
      tags:
        - Jobs
      x-ms-examples:
        Job terminate:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobId: jobId
            jobTerminateParameter:
              terminateReason: User supplied termination reason
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
  /jobschedules:
    get:
      operationId: JobSchedule_List
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Job Schedules can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Job Schedules.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJobScheduleListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the Job Schedules in the specified Account.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - creationTime: '2016-11-18T21:52:22.5431125Z'
                    eTag: '0x8D40FFD2E10996A'
                    executionInfo:
                      recentJob:
                        id: 'jobSchedule1:job-1'
                        url: 'https://account.region.batch.azure.com/jobs/jobSchedule1:job-1'
                    id: jobSchedule1
                    jobSpecification:
                      constraints:
                        maxTaskRetryCount: 0
                        maxWallClockTime: P10675199DT2H48M5.4775807S
                      onAllTasksComplete: noaction
                      onTaskFailure: noaction
                      poolInfo:
                        poolId: poolId
                      priority: 0
                      usesTaskDependencies: false
                    lastModified: '2016-11-18T21:52:24.0064874Z'
                    previousState: disabled
                    previousStateTransitionTime: '2016-11-18T21:52:23.6471782Z'
                    state: active
                    stateTransitionTime: '2016-11-18T21:52:24.0064874Z'
                    url: 'https://account.region.batch.azure.com/jobschedules/jobSchedule1'
                  - creationTime: '2016-11-18T21:51:05.8184017Z'
                    eTag: '0x8D40FFCFF760B51'
                    executionInfo:
                      nextRunTime: '2020-01-01T12:30:00Z'
                    id: jobSchedule2
                    jobSpecification:
                      constraints:
                        maxTaskRetryCount: 0
                        maxWallClockTime: P10675199DT2H48M5.4775807S
                      onAllTasksComplete: noaction
                      onTaskFailure: noaction
                      poolInfo:
                        poolId: testPool2
                      priority: 0
                      usesTaskDependencies: false
                    lastModified: '2016-11-18T21:51:05.8184017Z'
                    schedule:
                      doNotRunUntil: '2020-01-01T12:30:00Z'
                    state: active
                    stateTransitionTime: '2016-11-18T21:51:05.8184017Z'
                    url: 'https://account.region.batch.azure.com/jobschedules/jobSchedule2'
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      operationId: JobSchedule_Add
      parameters:
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: The Job Schedule to be added.
          in: body
          name: cloudJobSchedule
          required: true
          schema:
            $ref: '#/definitions/JobScheduleAddParameter'
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a Job Schedule to the specified Account.
      tags:
        - JobSchedules
      x-ms-examples:
        Add a basic JobSchedule:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            cloudJobSchedule:
              id: jobScheduleId
              jobSpecification:
                poolInfo:
                  poolId: poolId
              schedule:
                recurrenceInterval: PT5M
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '201': {}
        Add a complex JobScheduleAdd:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            cloudJobSchedule:
              id: jobScheduleId
              jobSpecification:
                constraints:
                  maxTaskRetryCount: -1
                  maxWallClockTime: PT1H
                jobManagerTask:
                  commandLine: myprogram.exe
                  constraints:
                    maxTaskRetryCount: 0
                    maxWallClockTime: PT1H
                    retentionTime: PT1H
                  environmentSettings:
                    - name: myvariable
                      value: myvalue
                  id: mytask1
                  killJobOnCompletion: true
                  resourceFiles:
                    - filePath: myprogram.exe
                      httpUrl: 'http://mystorage1.blob.core.windows.net/scripts/myprogram.exe?sas'
                    - filePath: test.txt
                      httpUrl: 'http://mystorage1.blob.core.windows.net/scripts/test.txt?sas'
                  runExclusive: true
                  userIdentity:
                    autoUser:
                      elevationLevel: nonadmin
                      scope: task
                poolInfo:
                  autoPoolSpecification:
                    autoPoolIdPrefix: mypool
                    pool:
                      certificateReferences:
                        - storeLocation: localmachine
                          storeName: Root
                          thumbprint: 0123456789abcdef0123456789abcdef01234567
                          thumbprintAlgorithm: sha1
                          visibility:
                            - task
                      cloudServiceConfiguration:
                        osFamily: '4'
                        osVersion: '*'
                      enableAutoScale: false
                      enableInterNodeCommunication: true
                      maxTasksPerNode: 2
                      metadata:
                        - name: myproperty
                          value: myvalue
                      resizeTimeout: PT15M
                      startTask:
                        commandLine: myprogram2.exe
                        environmentSettings:
                          - name: myvariable
                            value: myvalue
                        maxTaskRetryCount: 2
                        resourceFiles:
                          - filePath: myprogram2.exe
                            httpUrl: 'http://mystorage1.blob.core.windows.net/scripts/myprogram2.exe?sas'
                        userIdentity:
                          autoUser:
                            elevationLevel: admin
                            scope: task
                        waitForSuccess: true
                      targetDedicatedNodes: 3
                      targetLowPriorityNodes: 0
                      taskSchedulingPolicy:
                        nodeFillType: spread
                      vmSize: small
                    poolLifetimeOption: jobschedule
                priority: 100
              metadata:
                - name: myproperty
                  value: myvalue
              schedule:
                doNotRunAfter: '2014-09-10T06:30:00.000Z'
                doNotRunUntil: '2014-09-10T02:30:00.000Z'
                recurrenceInterval: PT5M
                startWindow: PT1M
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '201': {}
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}':
    delete:
      description: 'When you delete a Job Schedule, this also deletes all Jobs and Tasks under that schedule. When Tasks are deleted, all the files in their working directories on the Compute Nodes are also deleted (the retention period is ignored). The Job Schedule statistics are no longer accessible once the Job Schedule is deleted, though they are still counted towards Account lifetime statistics.'
      operationId: JobSchedule_Delete
      parameters:
        - description: The ID of the Job Schedule to delete.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a Job Schedule from the specified Account.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule delete:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified Job Schedule.
      operationId: JobSchedule_Get
      parameters:
        - description: The ID of the Job Schedule to get.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Job Schedule.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJobSchedule'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                creationTime: '2016-11-18T21:52:22.5431125Z'
                eTag: '0x8D40FFD2E848323'
                executionInfo:
                  endTime: '2016-11-18T21:52:24.8371778Z'
                  recentJob:
                    id: 'jobScheduleId:job-1'
                    url: 'https://account.region.batch.azure.com/jobschedules/jobScheduleId:job-1'
                id: jobScheduleId
                jobSpecification:
                  constraints:
                    maxTaskRetryCount: 0
                    maxWallClockTime: P10675199DT2H48M5.4775807S
                  onAllTasksComplete: noaction
                  onTaskFailure: noaction
                  poolInfo:
                    poolId: testPool
                  priority: 0
                  usesTaskDependencies: false
                lastModified: '2016-11-18T21:52:24.7661347Z'
                previousState: active
                previousStateTransitionTime: '2016-11-18T21:52:24.0064874Z'
                state: completed
                stateTransitionTime: '2016-11-18T21:52:24.8371778Z'
                url: 'https://account.region.batch.azure.com/jobschedules/jobScheduleId'
      x-ms-request-id: request-id
    head:
      operationId: JobSchedule_Exists
      parameters:
        - description: The ID of the Job Schedule which you want to check.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: 'A response containing headers related to the Job Schedule, if it exists.'
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        '404':
          description: The Job Schedule does not exist.
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Checks the specified Job Schedule exists.
      tags:
        - JobSchedules
      x-ms-examples:
        Check Job Schedule Exists:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200': {}
            '404': {}
      x-ms-request-id: request-id
    patch:
      description: 'This replaces only the Job Schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.'
      operationId: JobSchedule_Patch
      parameters:
        - description: The ID of the Job Schedule to update.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobSchedulePatchParameter
          required: true
          schema:
            $ref: '#/definitions/JobSchedulePatchParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Job Schedule.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule patch:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            jobSchedulePatchParameter:
              jobSpecification:
                constraints:
                  maxTaskRetryCount: 0
                  maxWallClockTime: P10675199DT2H48M5.4775807S
                poolInfo:
                  poolId: poolId
                priority: 0
                usesTaskDependencies: false
              schedule:
                doNotRunUntil: '2025-01-01T12:30:00Z'
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200': {}
      x-ms-request-id: request-id
    put:
      description: 'This fully replaces all the updatable properties of the Job Schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a Job Schedule only impact Jobs created by the schedule after the update has taken place; currently running Jobs are unaffected.'
      operationId: JobSchedule_Update
      parameters:
        - description: The ID of the Job Schedule to update.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: jobScheduleUpdateParameter
          required: true
          schema:
            $ref: '#/definitions/JobScheduleUpdateParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Job Schedule.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule update:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            jobScheduleUpdateParameter:
              jobSpecification:
                constraints:
                  maxTaskRetryCount: 0
                  maxWallClockTime: P10675199DT2H48M5.4775807S
                poolInfo:
                  poolId: poolId
                priority: 0
                usesTaskDependencies: false
              schedule:
                doNotRunUntil: '2025-01-01T12:30:00Z'
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/disable':
    post:
      description: No new Jobs will be created until the Job Schedule is enabled again.
      operationId: JobSchedule_Disable
      parameters:
        - description: The ID of the Job Schedule to disable.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Disables a Job Schedule.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule disable:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '204': {}
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/enable':
    post:
      operationId: JobSchedule_Enable
      parameters:
        - description: The ID of the Job Schedule to enable.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Enables a Job Schedule.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule enable:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '204': {}
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/jobs':
    get:
      operationId: Job_ListFromJobSchedule
      parameters:
        - description: The ID of the Job Schedule from which you want to get a list of Jobs.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Jobs can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Jobs.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudJobListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists the Jobs that have been created under the specified Job Schedule.
      tags:
        - Jobs
      x-ms-examples:
        List Job Under Job Schedule:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - constraints:
                      maxTaskRetryCount: 0
                      maxWallClockTime: P10675199DT2H48M5.4775807S
                    creationTime: '2016-11-19T00:05:25.311915Z'
                    eTag: '0x8D4100FC46D5BF4'
                    executionInfo:
                      poolId: poolId
                      startTime: '2016-11-19T00:05:25.3309105Z'
                    id: jobId
                    lastModified: '2016-11-19T00:05:27.2137716Z'
                    onAllTasksComplete: noaction
                    onTaskFailure: noaction
                    poolInfo:
                      poolId: poolId
                    previousState: disabled
                    previousStateTransitionTime: '2016-11-19T00:05:26.88777Z'
                    priority: 0
                    state: active
                    stateTransitionTime: '2016-11-19T00:05:27.2137716Z'
                    url: 'https://account.region.batch.azure.com/jobs/jobId'
                    usesTaskDependencies: false
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/terminate':
    post:
      operationId: JobSchedule_Terminate
      parameters:
        - description: The ID of the Job Schedule to terminates.
          in: path
          name: jobScheduleId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Terminates a Job Schedule.
      tags:
        - JobSchedules
      x-ms-examples:
        JobSchedule terminate:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            jobScheduleId: jobScheduleId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '202': {}
      x-ms-request-id: request-id
  /lifetimejobstats:
    get:
      description: 'Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.'
      operationId: Job_GetAllLifetimeStatistics
      parameters:
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Job statistics for the lifetime of the Batch Account.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/JobStatistics'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets lifetime summary statistics for all of the Jobs in the specified Account.
      tags:
        - Jobs
      x-ms-examples:
        Job get lifetime statistics:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                kernelCPUTime: PT0S
                lastUpdateTime: '2014-08-04T18:30:00.4345729Z'
                numFailedTasks: 0
                numSucceededTasks: 0
                numTaskRetries: 0
                readIOGiB: 10
                readIOps: 0
                startTime: '2014-08-01T18:30:00.4345729Z'
                url: 'https://account.region.batch.core.windows.net/lifetimejobstats'
                userCPUTime: PT0S
                waitTime: PT0S
                wallClockTime: PT0S
                writeIOGiB: 5
                writeIOps: 0
      x-ms-request-id: request-id
  /lifetimepoolstats:
    get:
      description: 'Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.'
      operationId: Pool_GetAllLifetimeStatistics
      parameters:
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Pool statistics for the lifetime of the Batch Account.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/PoolStatistics'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets lifetime summary statistics for all of the Pools in the specified Account.
      tags:
        - Pools
      x-ms-examples:
        Pool get lifetime statistics:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                lastUpdateTime: '2014-08-04T18:30:00.4345729Z'
                resourceStats:
                  avgCPUPercentage: 40
                  avgDiskGiB: 125
                  avgMemoryGiB: 2
                  diskReadGiB: 10
                  diskReadIOps: 0
                  diskWriteGiB: 1
                  diskWriteIOps: 0
                  lastUpdateTime: '2014-08-04T18:30:00.4345729Z'
                  networkReadGiB: 20
                  networkWriteGiB: 25
                  peakDiskGiB: 240
                  peakMemoryGiB: 4
                  startTime: '2014-08-01T18:30:00.4345729Z'
                startTime: '2014-08-01T18:30:00.4345729Z'
                url: 'https://account.region.batch.core.windows.net/lifetimepoolstats'
                usageStats:
                  dedicatedCoreTime: PT0S
                  lastUpdateTime: '2014-08-04T18:30:00.4345729Z'
                  startTime: '2014-08-01T18:30:00.4345729Z'
      x-ms-request-id: request-id
  /nodecounts:
    get:
      description: 'Gets the number of Compute Nodes in each state, grouped by Pool.'
      operationId: Account_ListPoolNodeCounts
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 10
          description: The maximum number of items to return in the response.
          format: int32
          in: query
          maximum: 10
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: 'The response contains the number of Compute Nodes in each Compute Node state, grouped by Pool.'
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/PoolNodeCountsListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Accounts
      x-ms-examples:
        NodeCountsPayload:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - dedicated:
                      creating: 0
                      idle: 0
                      leavingPool: 0
                      offline: 0
                      preempted: 0
                      rebooting: 0
                      reimaging: 0
                      running: 0
                      startTaskFailed: 0
                      starting: 0
                      total: 0
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    lowPriority:
                      creating: 0
                      idle: 0
                      leavingPool: 0
                      offline: 0
                      preempted: 0
                      rebooting: 0
                      reimaging: 0
                      running: 2
                      startTaskFailed: 0
                      starting: 1
                      total: 3
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    poolId: pool1
                  - dedicated:
                      creating: 0
                      idle: 1
                      leavingPool: 0
                      offline: 3
                      preempted: 0
                      rebooting: 0
                      reimaging: 0
                      running: 0
                      startTaskFailed: 0
                      starting: 0
                      total: 4
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    lowPriority:
                      creating: 0
                      idle: 0
                      leavingPool: 0
                      offline: 0
                      preempted: 0
                      rebooting: 0
                      reimaging: 0
                      running: 0
                      startTaskFailed: 0
                      starting: 0
                      total: 0
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    poolId: pool2
                  - dedicated:
                      creating: 0
                      idle: 5
                      leavingPool: 0
                      offline: 0
                      preempted: 0
                      rebooting: 0
                      reimaging: 4
                      running: 0
                      startTaskFailed: 0
                      starting: 0
                      total: 9
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    lowPriority:
                      creating: 7
                      idle: 0
                      leavingPool: 0
                      offline: 0
                      preempted: 0
                      rebooting: 0
                      reimaging: 0
                      running: 4
                      startTaskFailed: 0
                      starting: 0
                      total: 11
                      unknown: 0
                      unusable: 0
                      waitingForStartTask: 0
                    poolId: pool3
      x-ms-pageable:
        nextLinkName: odata.nextLink
  /pools:
    get:
      operationId: Pool_List
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Pools can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Pools.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudPoolListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the Pools in the specified Account.
      tags:
        - Pools
      x-ms-examples:
        Pool list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - allocationState: steady
                    allocationStateTransitionTime: '2016-11-21T18:27:40.287803Z'
                    cloudServiceConfiguration:
                      osFamily: '4'
                      osVersion: '*'
                    creationTime: '2016-11-21T18:26:39.7108787Z'
                    currentDedicatedNodes: 3
                    currentLowPriorityNodes: 0
                    eTag: '0x8D4123BEF87D233'
                    enableAutoScale: false
                    enableInterNodeCommunication: false
                    id: testPool
                    lastModified: '2016-11-21T18:26:39.7108787Z'
                    maxTasksPerNode: 1
                    resizeTimeout: PT15M
                    startTask:
                      commandLine: cmd /c echo hello
                      maxTaskRetryCount: 0
                      userIdentity:
                        autoUser:
                          elevationLevel: nonadmin
                          scope: task
                      waitForSuccess: false
                    state: active
                    stateTransitionTime: '2016-11-21T18:26:39.7108787Z'
                    targetDedicatedNodes: 3
                    targetLowPriorityNodes: 0
                    taskSchedulingPolicy:
                      nodeFillType: spread
                    url: 'https://accountname.region.batch.azure.com/pools/testPool'
                    vmSize: small
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: 'When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
      operationId: Pool_Add
      parameters:
        - description: The Pool to be added.
          in: body
          name: pool
          required: true
          schema:
            $ref: '#/definitions/PoolAddParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a Pool to the specified Account.
      tags:
        - Pools
      x-ms-examples:
        Add a CloudServiceConfiguration pool:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            pool:
              cloudServiceConfiguration:
                osFamily: '4'
              enableAutoScale: false
              enableInterNodeCommunication: true
              id: poolId
              maxTasksPerNode: 3
              metadata:
                - name: myproperty
                  value: myvalue
              resizeTimeout: PT15M
              targetDedicatedNodes: 5
              targetLowPriorityNodes: 0
              taskSchedulingPolicy:
                nodeFillType: spread
              vmSize: small
          responses:
            '201':
              ETag: '0x8D45765A6A2DC04'
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              request-id: 00000000-0000-0000-0000-000000000000
        Add a VirtualMachineConfiguration pool:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            pool:
              enableAutoScale: false
              enableInterNodeCommunication: true
              id: pool2
              maxTasksPerNode: 3
              metadata:
                - name: myproperty
                  value: myvalue
              resizeTimeout: PT15M
              targetDedicatedNodes: 5
              targetLowPriorityNodes: 0
              taskSchedulingPolicy:
                nodeFillType: spread
              virtualMachineConfiguration:
                imageReference:
                  offer: UbuntuServer
                  publisher: Canonical
                  sku: 16.04.0-LTS
                nodeAgentSKUId: batch.node.ubuntu 16.04
              vmSize: standard_a1
          responses:
            '201':
              ETag: '0x8D45765A6A2DC04'
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              request-id: 00000000-0000-0000-0000-000000000000
        Add a VirtualMachineConfiguration pool with containers:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            pool:
              enableAutoScale: false
              id: pool2
              maxTasksPerNode: 3
              resizeTimeout: PT15M
              targetDedicatedNodes: 5
              targetLowPriorityNodes: 0
              taskSchedulingPolicy:
                nodeFillType: spread
              virtualMachineConfiguration:
                containerConfiguration:
                  containerImageNames:
                    - busybox
                  type: dockerCompatible
                imageReference:
                  offer: UbuntuServer
                  publisher: Canonical
                  sku: 16.04.0-LTS
                nodeAgentSKUId: batch.node.ubuntu 16.04
              vmSize: standard_a1
          responses:
            '201':
              ETag: '0x8D45765A6A2DC04'
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              request-id: 00000000-0000-0000-0000-000000000000
        Add a pool with mount drive specified:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-data: 'Fri, 17 Feb 2017 00:00:00 GMT'
            pool:
              enableAutoScale: false
              id: pool2
              maxTasksPerNode: 3
              mountConfiguration:
                - azureBlobFileSystemConfiguration:
                    accountKey: accountKey
                    accountName: accountName
                    containerName: blobContainerName
                    relativeMountPath: bfusepath
                - azureFileShareConfiguration:
                    accountKey: accountKey
                    accountName: accountName
                    azureFileUrl: 'https://myaccount.file.core.windows.net/fileshare'
                    mountOptions: mount options ver=1.0
                    relativeMountPath: filesharepath
                - nfsMountConfiguration:
                    mountOptions: mount options ver=1.0
                    relativeMountPath: mountpath
                    source: somesource nfs url
                - cifsMountConfiguration:
                    mountOptions: mount options ver=1.0
                    password: password
                    relativeMountPath: mountpath
                    source: //myaccount.file.core.windows.net/file
                    username: accountName
              resizeTimeout: PT15M
              targetDedicatedNodes: 5
              targetLowPriorityNodes: 0
              taskSchedulingPolicy:
                nodeFillType: spread
              virtualMachineConfiguration:
                imageReference:
                  offer: UbuntuServer
                  publisher: Canonical
                  sku: 16.04.0-LTS
                nodeAgentSKUId: batch.node.ubuntu 16.04
              vmSize: standard_a1
          responses:
            '201':
              ETag: '0x8D45765A6A2DC04'
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              request-id: 00000000-0000-0000-0000-000000000000
      x-ms-request-id: request-id
  '/pools/{poolId}':
    delete:
      description: 'When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
      operationId: Pool_Delete
      parameters:
        - description: The ID of the Pool to delete.
          in: path
          name: poolId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a Pool from the specified Account.
      tags:
        - Pools
      x-ms-examples:
        Pool delete:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '202': {}
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified Pool.
      operationId: Pool_Get
      parameters:
        - description: The ID of the Pool to get.
          in: path
          name: poolId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Pool.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/CloudPool'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Pools
      x-ms-examples:
        Pool get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: pool
          responses:
            '200':
              body:
                allocationState: steady
                allocationStateTransitionTime: '2016-11-22T18:55:24.8154041Z'
                creationTime: '2016-11-22T18:55:24.2632496Z'
                currentDedicatedNodes: 0
                currentLowPriorityNodes: 0
                eTag: '0x8D413091E739A56'
                enableAutoScale: false
                enableInterNodeCommunication: false
                id: pool
                lastModified: '2016-11-22T18:55:25.2608598Z'
                maxTasksPerNode: 1
                resizeTimeout: PT15M
                startTask:
                  commandLine: /bin/bash -c 'echo start task'
                  maxTaskRetryCount: 0
                  userIdentity:
                    autoUser:
                      elevationLevel: nonadmin
                      scope: task
                  waitForSuccess: false
                state: active
                stateTransitionTime: '2016-11-22T18:55:24.2632496Z'
                targetDedicatedNodes: 0
                targetLowPriorityNodes: 0
                taskSchedulingPolicy:
                  nodeFillType: spread
                url: 'https://account.region.batch.azure.com/pools/pool'
                virtualMachineConfiguration:
                  imageReference:
                    offer: UbuntuServer
                    publisher: Canonical
                    sku: 16.04.0-LTS
                    version: latest
                  nodeAgentSKUId: batch.node.ubuntu 16.04
                vmSize: standard_a1
      x-ms-request-id: request-id
    head:
      description: Gets basic properties of a Pool.
      operationId: Pool_Exists
      parameters:
        - description: The ID of the Pool to get.
          in: path
          name: poolId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: 'A response containing headers related to the Pool, if it exists.'
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        '404':
          description: The Pool does not exist.
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Pools
      x-ms-examples:
        Check Pool Exists:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200': {}
            '404': {}
      x-ms-request-id: request-id
    patch:
      description: 'This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.'
      operationId: Pool_Patch
      parameters:
        - description: The ID of the Pool to update.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: poolPatchParameter
          required: true
          schema:
            $ref: '#/definitions/PoolPatchParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Pool.
      tags:
        - Pools
      x-ms-examples:
        Patch the Pool:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            poolPatchParameter:
              startTask:
                commandLine: /bin/bash -c 'echo start task'
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/disableautoscale':
    post:
      operationId: Pool_DisableAutoScale
      parameters:
        - description: The ID of the Pool on which to disable automatic scaling.
          in: path
          name: poolId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Disables automatic scaling for a Pool.
      tags:
        - Pools
      x-ms-examples:
        Disable pool autoscale:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/enableautoscale':
    post:
      description: 'You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.'
      operationId: Pool_EnableAutoScale
      parameters:
        - description: The ID of the Pool on which to enable automatic scaling.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: poolEnableAutoScaleParameter
          required: true
          schema:
            $ref: '#/definitions/PoolEnableAutoScaleParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Enables automatic scaling for a Pool.
      tags:
        - Pools
      x-ms-examples:
        Pool enable autoscale:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolEnableAutoScaleParameter:
              autoScaleEvaluationInterval: PT8M
              autoScaleFormula: $TargetDedicated=0
            poolId: poolId
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/evaluateautoscale':
    post:
      description: 'This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.'
      operationId: Pool_EvaluateAutoScale
      parameters:
        - description: The ID of the Pool on which to evaluate the automatic scaling formula.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: poolEvaluateAutoScaleParameter
          required: true
          schema:
            $ref: '#/definitions/PoolEvaluateAutoScaleParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the results of the autoscale evaluation.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/AutoScaleRun'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets the result of evaluating an automatic scaling formula on the Pool.
      tags:
        - Pools
      x-ms-examples:
        Pool evaluate autoscale:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolEvaluateAutoScaleParameter:
              autoScaleFormula: $TargetDedicated=1
            poolId: poolId
          responses:
            '200':
              body:
                results: $TargetDedicated=1;$NodeDeallocationOption=requeue
                timestamp: '2016-11-22T19:39:28.5246331Z'
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes':
    get:
      operationId: ComputeNode_List
      parameters:
        - description: The ID of the Pool from which you want to list Compute Nodes.
          in: path
          name: poolId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 Compute Nodes can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Compute Nodes.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/ComputeNodeListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists the Compute Nodes in the specified Pool.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node list:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              body:
                value:
                  - affinityId: 'TVM:tvm-1695681911_1-20161122t193202z'
                    allocationTime: '2016-11-22T19:32:02.8155319Z'
                    id: tvm-1695681911_1-20161122t193202z
                    ipAddress: 1.1.1.1
                    isDedicated: true
                    lastBootTime: '2016-11-22T22:22:24.4634125Z'
                    nodeAgentInfo:
                      lastUpdateTime: '2016-11-22T22:22:24.4634125Z'
                      version: 1.2.0.0
                    runningTasksCount: 0
                    schedulingState: enabled
                    startTask:
                      commandLine: cmd /c echo hello
                      maxTaskRetryCount: 0
                      userIdentity:
                        autoUser:
                          elevationLevel: nonadmin
                          scope: task
                      waitForSuccess: false
                    startTaskInfo:
                      endTime: '2016-11-22T22:22:27.567189Z'
                      exitCode: 0
                      retryCount: 0
                      startTime: '2016-11-22T22:22:27.2236818Z'
                      state: completed
                    state: idle
                    stateTransitionTime: '2016-11-22T22:22:27.2236818Z'
                    totalTasksRun: 0
                    totalTasksSucceeded: 0
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_1-20161122t193202z'
                    vmSize: small
                  - affinityId: 'TVM:tvm-1695681911_2-20161122t193202z'
                    allocationTime: '2016-11-22T19:32:02.8155319Z'
                    id: tvm-1695681911_2-20161122t193202z
                    ipAddress: 1.1.1.1
                    isDedicated: true
                    lastBootTime: '2016-11-22T19:37:28.623369Z'
                    nodeAgentInfo:
                      lastUpdateTime: '2016-11-22T22:22:24.4634125Z'
                      version: 1.2.0.0
                    runningTasksCount: 0
                    schedulingState: enabled
                    startTask:
                      commandLine: cmd /c echo hello
                      maxTaskRetryCount: 0
                      userIdentity:
                        autoUser:
                          elevationLevel: nonadmin
                          scope: task
                      waitForSuccess: false
                    startTaskInfo:
                      endTime: '2016-11-22T19:37:31.838028Z'
                      exitCode: 0
                      retryCount: 0
                      startTime: '2016-11-22T19:37:31.4285526Z'
                      state: completed
                    state: idle
                    stateTransitionTime: '2016-11-22T19:37:31.4285526Z'
                    totalTasksRun: 0
                    totalTasksSucceeded: 0
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_2-20161122t193202z'
                    vmSize: small
                  - affinityId: 'TVM:tvm-1695681911_3-20161122t193202z'
                    allocationTime: '2016-11-22T19:32:02.8155319Z'
                    id: tvm-1695681911_3-20161122t193202z
                    ipAddress: 1.1.1.1
                    isDedicated: true
                    lastBootTime: '2016-11-22T19:36:48.21721Z'
                    nodeAgentInfo:
                      lastUpdateTime: '2016-11-22T22:22:24.4634125Z'
                      version: 1.2.0.0
                    runningTasksCount: 0
                    schedulingState: enabled
                    startTask:
                      commandLine: cmd /c echo hello
                      maxTaskRetryCount: 0
                      userIdentity:
                        autoUser:
                          elevationLevel: nonadmin
                          scope: task
                      waitForSuccess: false
                    startTaskInfo:
                      endTime: '2016-11-22T19:36:51.2363447Z'
                      exitCode: 0
                      retryCount: 0
                      startTime: '2016-11-22T19:36:51.0013378Z'
                      state: completed
                    state: idle
                    stateTransitionTime: '2016-11-22T19:36:51.0013378Z'
                    totalTasksRun: 0
                    totalTasksSucceeded: 0
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_3-20161122t193202z'
                    vmSize: small
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}':
    get:
      operationId: ComputeNode_Get
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node that you want to get information about.
          in: path
          name: nodeId
          required: true
          type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the Compute Node.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/ComputeNode'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets information about the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node get:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_2-20161122t193202z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              body:
                affinityId: 'TVM:tvm-1695681911_2-20161122t193202z'
                allocationTime: '2016-11-22T19:32:02.8155319Z'
                id: tvm-1695681911_2-20161122t193202z
                ipAddress: 1.1.1.1
                isDedicated: true
                lastBootTime: '2016-11-22T19:37:28.623369Z'
                nodeAgentInfo:
                  lastUpdateTime: '2016-11-22T19:37:28.623369Z'
                  version: 1.2.0.0
                runningTasksCount: 0
                schedulingState: enabled
                startTask:
                  commandLine: cmd /c echo hello
                  maxTaskRetryCount: 0
                  userIdentity:
                    autoUser:
                      elevationLevel: nonadmin
                      scope: task
                  waitForSuccess: false
                startTaskInfo:
                  endTime: '2016-11-22T19:37:31.838028Z'
                  exitCode: 0
                  retryCount: 0
                  startTime: '2016-11-22T19:37:31.4285526Z'
                  state: completed
                state: idle
                stateTransitionTime: '2016-11-22T19:37:31.4285526Z'
                totalTasksRun: 0
                totalTasksSucceeded: 0
                url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-1695681911_2-20161122t193202z'
                vmSize: small
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/disablescheduling':
    post:
      description: You can disable Task scheduling on a Compute Node only if its current scheduling state is enabled.
      operationId: ComputeNode_DisableScheduling
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node on which you want to disable Task scheduling.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: nodeDisableSchedulingParameter
          required: false
          schema:
            $ref: '#/definitions/NodeDisableSchedulingParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Disables Task scheduling on the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node disable scheduling:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeDisableSchedulingParameter:
              nodeDisableSchedulingOption: terminate
            nodeId: tvm-1695681911_1-20161122t193202z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/enablescheduling':
    post:
      description: You can enable Task scheduling on a Compute Node only if its current scheduling state is disabled
      operationId: ComputeNode_EnableScheduling
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node on which you want to enable Task scheduling.
          in: path
          name: nodeId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Enables Task scheduling on the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node enable scheduling:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161122t193202z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/files':
    get:
      operationId: File_ListFromComputeNode
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node whose files you want to list.
          in: path
          name: nodeId
          required: true
          type: string
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Whether to list children of a directory.
          in: query
          name: recursive
          required: false
          type: boolean
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of files.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/NodeFileListResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all of the files in Task directories on the specified Compute Node.
      tags:
        - Files
      x-ms-examples:
        File list from node:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161122t193202z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            recursive: false
          responses:
            '200':
              body:
                value:
                  - isDirectory: true
                    name: shared
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_2-20140919t215614z/files/shared'
                  - isDirectory: false
                    name: startup\ProcessEnv.cmd
                    properties:
                      contentLength: 1813
                      contentType: application/octet-stream
                      creationTime: '2014-09-19T21:56:17.679195Z'
                      lastModified: '2014-09-19T21:56:17.679195Z'
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_2-20140919t215614z/files/startup\ProcessEnv.cmd'
                  - isDirectory: false
                    name: startup\stderr.txt
                    properties:
                      contentLength: 0
                      contentType: application/octet-stream
                      creationTime: '2014-09-19T21:56:17.5590855Z'
                      lastModified: '2014-09-19T21:56:17.5590855Z'
                    url: 'https://account.region.batch.azure.com/pools/poolId/nodes/tvm-2167304207_2-20140919t215614z/files/startup\stderr.txt'
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/files/{filePath}':
    delete:
      operationId: File_DeleteFromComputeNode
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node from which you want to delete the file.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The path to the file or directory that you want to delete.
          in: path
          name: filePath
          required: true
          type: string
        - description: 'Whether to delete children of a directory. If the filePath parameter represents a directory instead of a file, you can set recursive to true to delete the directory and all of the files and subdirectories in it. If recursive is false then the directory must be empty or deletion will fail.'
          in: query
          name: recursive
          required: false
          type: boolean
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes the specified file from the Compute Node.
      tags:
        - Files
      x-ms-examples:
        File delete from node:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: workitems\jobId\job-1\task1\wd\testFile.txt
            nodeId: tvm-1695681911_1-20161122t193202z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            recursive: false
          responses:
            '200': {}
      x-ms-request-id: request-id
    get:
      description: Returns the content of the specified Compute Node file.
      operationId: File_GetFromComputeNode
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node that contains the file.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The path to the Compute Node file that you want to get the content of.
          in: path
          name: filePath
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: The byte range to be retrieved. The default is to retrieve the entire file. The format is bytes=startRange-endRange.
          in: header
          name: ocp-range
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      produces:
        - application/json
        - application/octet-stream
      responses:
        '200':
          description: The file content.
          headers:
            Content-Length:
              description: The length of the file.
              format: int64
              type: integer
            Content-Type:
              description: The content type of the file.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              type: string
            ocp-batch-file-url:
              description: The URL of the file.
              type: string
            ocp-creation-time:
              description: The file creation time.
              format: date-time-rfc1123
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            format: file
            type: object
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Files
      x-ms-examples:
        Get File From Compute Node:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: workitems\jobId\job-1\task1\wd\testFile.txt
            nodeId: nodeId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              Content-Length: '17'
              Content-Type: application/octet-stream
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              body: This is actually a byte stream. This request/response is being presented as a string for readability in the example
              ocp-batch-file-isdirectory: 'false'
              ocp-creation-time: 'Fri, 17 Feb 2017 00:00:00 GMT'
      x-ms-request-id: request-id
    head:
      description: Gets the properties of the specified Compute Node file.
      operationId: File_GetPropertiesFromComputeNode
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node that contains the file.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The path to the Compute Node file that you want to get the properties of.
          in: path
          name: filePath
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the file properties.
          headers:
            Content-Length:
              description: The length of the file.
              format: int64
              type: integer
            Content-Type:
              description: The content type of the file.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              type: string
            ocp-batch-file-url:
              description: The URL of the file.
              type: string
            ocp-creation-time:
              description: The file creation time.
              format: date-time-rfc1123
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      tags:
        - Files
      x-ms-examples:
        File get properties from node:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            filePath: workitems\jobId\job-1\task1\wd\testFile.txt
            nodeId: nodeId
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              Content-Length: '17'
              Content-Type: application/octet-stream
              Last-Modified: 'Fri, 17 Feb 2017 00:00:00 GMT'
              ocp-batch-file-isdirectory: 'false'
              ocp-creation-time: 'Fri, 17 Feb 2017 00:00:00 GMT'
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/rdp':
    get:
      description: 'Before you can access a Compute Node by using the RDP file, you must create a user Account on the Compute Node. This API can only be invoked on Pools created with a cloud service configuration. For Pools created with a virtual machine configuration, see the GetRemoteLoginSettings API.'
      operationId: ComputeNode_GetRemoteDesktop
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.
          in: path
          name: nodeId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      produces:
        - application/json
        - application/octet-stream
      responses:
        '200':
          description: A response containing the RDP information.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            format: file
            type: object
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets the Remote Desktop Protocol file for the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Get RDP file of the compute node:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              body: This is actually a byte stream. This request/response is being presented as a string for readability in the example
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/reboot':
    post:
      description: You can restart a Compute Node only if it is in an idle or running state.
      operationId: ComputeNode_Reboot
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node that you want to restart.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: nodeRebootParameter
          required: false
          schema:
            $ref: '#/definitions/NodeRebootParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Restarts the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node reboot:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161122t193202z
            nodeRebootParameter:
              nodeRebootOption: terminate
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/reimage':
    post:
      description: You can reinstall the operating system on a Compute Node only if it is in an idle or running state. This API can be invoked only on Pools created with the cloud service configuration property.
      operationId: ComputeNode_Reimage
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node that you want to restart.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: nodeReimageParameter
          required: false
          schema:
            $ref: '#/definitions/NodeReimageParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Reinstalls the operating system on the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node reimage:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161122t193202z
            nodeReimageParameter:
              nodeReimageOption: terminate
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/remoteloginsettings':
    get:
      description: 'Before you can remotely login to a Compute Node using the remote login settings, you must create a user Account on the Compute Node. This API can be invoked only on Pools created with the virtual machine configuration property. For Pools created with a cloud service configuration, see the GetRemoteDesktop API.'
      operationId: ComputeNode_GetRemoteLoginSettings
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node for which to obtain the remote login settings.
          in: path
          name: nodeId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the login settings.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/ComputeNodeGetRemoteLoginSettingsResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Gets the settings required for remote login to a Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node get remote login settings:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '200':
              body:
                remoteLoginIPAddress: 1.1.1.1
                remoteLoginPort: 50000
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/uploadbatchservicelogs':
    post:
      description: This is for gathering Azure Batch service log files in an automated fashion from Compute Nodes if you are experiencing an error and wish to escalate to Azure support. The Azure Batch service log files should be shared with Azure support to aid in debugging issues with the Batch service.
      operationId: ComputeNode_UploadBatchServiceLogs
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the Compute Node from which you want to upload the Azure Batch service log files.
          in: path
          name: nodeId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: The Azure Batch service log files upload configuration.
          in: body
          name: uploadBatchServiceLogsConfiguration
          required: true
          schema:
            $ref: '#/definitions/UploadBatchServiceLogsConfiguration'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/UploadBatchServiceLogsResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage.
      tags:
        - ComputeNodes
      x-ms-examples:
        Upload BatchService Logs:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            uploadBatchServiceLogsConfiguration:
              containerUrl: 'https://somestorageacct.blob.core.windows.net/batch-compute-node-logs?se=2017-12-09T18%3A51%3A00Z&sp=w&sv=2016-05-31&sr=c&sig'
              startTime: '2017-11-27T00:00:00Z'
          responses:
            '200':
              body:
                numberOfFilesUploaded: 8
                virtualDirectoryName: poolId/tvm-1695681911-1-20161121t182739z/0795539d-82fe-48e3-bbff-2964905b6de0
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/users':
    post:
      description: You can add a user Account to a Compute Node only when it is in the idle or running state.
      operationId: ComputeNode_AddUser
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the machine on which you want to create a user Account.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The user Account to be created.
          in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/ComputeNodeUser'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Adds a user Account to the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node add user:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            user:
              expiryTime: '2017-08-01T00:00:00Z'
              isAdmin: false
              name: userName
              password: Password
          responses:
            '201': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/users/{userName}':
    delete:
      description: You can delete a user Account to a Compute Node only when it is in the idle or running state.
      operationId: ComputeNode_DeleteUser
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the machine on which you want to delete a user Account.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The name of the user Account to delete.
          in: path
          name: userName
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Deletes a user Account from the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node delete user:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            userName: userName
          responses:
            '200': {}
      x-ms-request-id: request-id
    put:
      description: 'This operation replaces of all the updatable properties of the Account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user Account on a Compute Node only when it is in the idle or running state.'
      operationId: ComputeNode_UpdateUser
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          type: string
        - description: The ID of the machine on which you want to update a user Account.
          in: path
          name: nodeId
          required: true
          type: string
        - description: The name of the user Account to update.
          in: path
          name: userName
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: nodeUpdateUserParameter
          required: true
          schema:
            $ref: '#/definitions/NodeUpdateUserParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the password and expiration time of a user Account on the specified Compute Node.
      tags:
        - ComputeNodes
      x-ms-examples:
        Node update user:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeId: tvm-1695681911_1-20161121t182739z
            nodeUpdateUserParameter:
              expiryTime: '2016-11-27T00:45:48.7320857Z'
              password: '12345'
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            userName: userName
          responses:
            '200': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/removenodes':
    post:
      description: 'This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.'
      operationId: Pool_RemoveNodes
      parameters:
        - description: The ID of the Pool from which you want to remove Compute Nodes.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: nodeRemoveParameter
          required: true
          schema:
            $ref: '#/definitions/NodeRemoveParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Removes Compute Nodes from the specified Pool.
      tags:
        - ComputeNodes
      x-ms-examples:
        Pool remove nodes:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            nodeRemoveParameter:
              nodeList:
                - tvm-1695681911_1-20161122t224741z
                - tvm-1695681911_2-20161122t224741z
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/resize':
    post:
      description: 'You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool''s allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.'
      operationId: Pool_Resize
      parameters:
        - description: The ID of the Pool to resize.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: poolResizeParameter
          required: true
          schema:
            $ref: '#/definitions/PoolResizeParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Changes the number of Compute Nodes that are assigned to a Pool.
      tags:
        - Pools
      x-ms-examples:
        Pool resize:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: resizePool
            poolResizeParameter:
              targetDedicatedNodes: 1
              targetLowPriorityNodes: 0
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/stopresize':
    post:
      description: 'This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
      operationId: Pool_StopResize
      parameters:
        - description: The ID of the Pool whose resizing you want to stop.
          in: path
          name: poolId
          required: true
          type: string
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
          in: header
          name: If-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
          in: header
          name: If-None-Match
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Modified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
          format: date-time-rfc1123
          in: header
          name: If-Unmodified-Since
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: 'The error from the Batch service. If you call this API on a Pool which is not in the resizing state, the request fails with HTTP status code 409.'
          schema:
            $ref: '#/definitions/BatchError'
      summary: Stops an ongoing resize operation on the Pool.
      tags:
        - Pools
      x-ms-examples:
        Pool stop resize:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
          responses:
            '202': {}
      x-ms-request-id: request-id
  '/pools/{poolId}/updateproperties':
    post:
      description: 'This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.'
      operationId: Pool_UpdateProperties
      parameters:
        - description: The ID of the Pool to update.
          in: path
          name: poolId
          required: true
          type: string
        - description: The parameters for the request.
          in: body
          name: poolUpdatePropertiesParameter
          required: true
          schema:
            $ref: '#/definitions/PoolUpdatePropertiesParameter'
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              type: string
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Updates the properties of the specified Pool.
      tags:
        - Pools
      x-ms-examples:
        Pool update:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
            poolId: poolId
            poolUpdatePropertiesParameter:
              applicationPackageReferences: []
              certificateReferences: []
              metadata: []
              startTask:
                commandLine: /bin/bash -c 'echo start task'
          responses:
            '204': {}
      x-ms-request-id: request-id
  /poolusagemetrics:
    get:
      description: 'If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.'
      operationId: Pool_ListUsageMetrics
      parameters:
        - description: The earliest time from which to include metrics. This must be at least two and a half hours before the current time. If not specified this defaults to the start time of the last aggregation interval currently available.
          format: date-time
          in: query
          name: starttime
          required: false
          type: string
          x-ms-client-name: startTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: The latest time from which to include metrics. This must be at least two hours before the current time. If not specified this defaults to the end time of the last aggregation interval currently available.
          format: date-time
          in: query
          name: endtime
          required: false
          type: string
          x-ms-client-name: endTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 results will be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of Pool usage details.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/PoolListUsageMetricsResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: 'Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.'
      tags:
        - Pools
      x-ms-examples:
        Pool list usage metrics:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - endTime: '2013-04-01T00:30:00Z'
                    poolId: p1
                    startTime: '2013-04-01T00:00:00Z'
                    totalCoreHours: 39.384838
                    vmSize: a1
                  - endTime: '2013-04-01T01:00:00Z'
                    poolId: p2
                    startTime: '2013-04-01T00:30:00Z'
                    totalCoreHours: 3039.384838
                    vmSize: a8
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  /supportedimages:
    get:
      operationId: Account_ListSupportedImages
      parameters:
        - description: 'An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.'
          in: query
          name: $filter
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - default: 1000
          description: The maximum number of items to return in the response. A maximum of 1000 results will be returned.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: maxresults
          required: false
          type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - default: 30
          description: 'The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.'
          format: int32
          in: query
          name: timeout
          required: false
          type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: 'The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.'
          format: uuid
          in: header
          name: client-request-id
          required: false
          type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - default: false
          description: Whether the server should return the client-request-id in the response.
          in: header
          name: return-client-request-id
          required: false
          type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
          format: date-time-rfc1123
          in: header
          name: ocp-date
          required: false
          type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the list of supported Virtual Machine Images.
          headers:
            ETag:
              description: 'The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Modified-Since, If-Unmodified-Since, If-Match or If-None-Match headers.'
              type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              format: date-time-rfc1123
              type: string
            client-request-id:
              description: The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
              format: uuid
              type: string
            request-id:
              description: 'A unique identifier for the request that was made to the Batch service. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this request ID, the approximate time that the request was made, the Batch Account against which the request was made, and the region that Account resides in.'
              format: uuid
              type: string
          schema:
            $ref: '#/definitions/AccountListSupportedImagesResult'
        default:
          description: The error from the Batch service.
          schema:
            $ref: '#/definitions/BatchError'
      summary: Lists all Virtual Machine Images supported by the Azure Batch service.
      tags:
        - Accounts
      x-ms-examples:
        Account list node agent skus:
          parameters:
            api-version: 2019-08-01.10.0
            batchUrl: account.region.batch.azure.com
            client-request-id: 00000000-0000-0000-0000-000000000000
            ocp-date: 'Fri, 17 Feb 2017 00:00:00 GMT'
          responses:
            '200':
              body:
                value:
                  - capabilities:
                      - DockerCompatible
                      - NvidiaTeslaDriverInstalled
                    imageReference:
                      offer: CentOS
                      publisher: OpenLogic
                      sku: '7.2'
                      version: latest
                    nodeAgentSKUId: batch.node.centos 7
                    osType: linux
                    verificationType: verified
                  - batchSupportEndOfLife: '2019-11-01T00:00:00.0Z'
                    imageReference:
                      offer: CentOS
                      publisher: OpenLogic
                      sku: '7.1'
                      version: latest
                    nodeAgentSKUId: batch.node.centos 7
                    osType: linux
                    verificationType: unverified
                  - imageReference:
                      offer: Debian
                      publisher: Credativ
                      sku: '8'
                      version: latest
                    nodeAgentSKUId: batch.node.debian 8
                    osType: linux
                    verificationType: verified
                  - imageReference:
                      offer: WindowsServer
                      publisher: MicrosoftWindowsServer
                      sku: 2012-R2-Datacenter
                      version: latest
                    nodeAgentSKUId: batch.node.windows amd64
                    osType: windows
                    verificationType: verified
                  - imageReference:
                      offer: WindowsServer
                      publisher: MicrosoftWindowsServer
                      sku: 2012-Datacenter
                      version: latest
                    nodeAgentSKUId: batch.node.windows amd64
                    osType: windows
                    verificationType: verified
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
definitions:
  AccountListSupportedImagesResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/ImageInformation'
        title: The list of supported Virtual Machine Images.
        type: array
    title: The result of listing the supported Virtual Machine Images.
  AffinityInformation:
    properties:
      affinityId:
        description: 'You can pass the affinityId of a Node to indicate that this Task needs to run on that Compute Node. Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.'
        title: An opaque string representing the location of a Compute Node or a Task that has run previously.
        type: string
    required:
      - affinityId
    title: A locality hint that can be used by the Batch service to select a Compute Node on which to start a Task.
  ApplicationListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/ApplicationSummary'
        title: The list of applications available in the Account.
        type: array
    title: The result of listing the applications available in an Account.
  ApplicationPackageReference:
    properties:
      applicationId:
        title: The ID of the application to deploy.
        type: string
      version:
        description: 'If this is omitted on a Pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a Task, and no default version is specified for this application, the Task fails with a pre-processing error.'
        title: 'The version of the application to deploy. If omitted, the default version is deployed.'
        type: string
    required:
      - applicationId
    title: A reference to an Package to be deployed to Compute Nodes.
  ApplicationSummary:
    properties:
      displayName:
        title: The display name for the application.
        type: string
      id:
        title: A string that uniquely identifies the application within the Account.
        type: string
      versions:
        items:
          type: string
        title: The list of available versions of the application.
        type: array
    required:
      - id
      - displayName
      - versions
    title: Contains information about an application in an Azure Batch Account.
  AuthenticationTokenSettings:
    properties:
      access:
        description: 'The authentication token grants access to a limited set of Batch service operations. Currently the only supported value for the access property is ''job'', which grants access to all operations related to the Job which contains the Task.'
        items:
          enum:
            - job
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessScope
            values:
              - description: Grants access to perform all operations on the Job containing the Task.
                value: job
          x-nullable: false
        title: The Batch resources to which the token grants access.
        type: array
    title: The settings for an authentication token that the Task can use to perform Batch service operations.
  AutoPoolSpecification:
    properties:
      autoPoolIdPrefix:
        description: 'The Batch service assigns each auto Pool a unique identifier on creation. To distinguish between Pools created for different purposes, you can specify this element to add a prefix to the ID that is assigned. The prefix can be up to 20 characters long.'
        title: A prefix to be added to the unique identifier when a Pool is automatically created.
        type: string
      keepAlive:
        description: 'If false, the Batch service deletes the Pool once its lifetime (as determined by the poolLifetimeOption setting) expires; that is, when the Job or Job Schedule completes. If true, the Batch service does not delete the Pool automatically. It is up to the user to delete auto Pools created with this option.'
        title: Whether to keep an auto Pool alive after its lifetime expires.
        type: boolean
      pool:
        $ref: '#/definitions/PoolSpecification'
        title: The Pool specification for the auto Pool.
      poolLifetimeOption:
        enum:
          - jobschedule
          - job
        title: 'The minimum lifetime of created auto Pools, and how multiple Jobs on a schedule are assigned to Pools.'
        type: string
        x-ms-enum:
          modelAsString: false
          name: PoolLifetimeOption
          values:
            - description: 'The Pool exists for the lifetime of the Job Schedule. The Batch Service creates the Pool when it creates the first Job on the schedule. You may apply this option only to Job Schedules, not to Jobs.'
              name: jobSchedule
              value: jobschedule
            - description: 'The Pool exists for the lifetime of the Job to which it is dedicated. The Batch service creates the Pool when it creates the Job. If the ''job'' option is applied to a Job Schedule, the Batch service creates a new auto Pool for every Job created on the schedule.'
              value: job
    required:
      - poolLifetimeOption
    title: Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto Pool when the Job is submitted.
  AutoScaleRun:
    properties:
      error:
        $ref: '#/definitions/AutoScaleRunError'
        title: 'Details of the error encountered evaluating the autoscale formula on the Pool, if the evaluation was unsuccessful.'
      results:
        description: 'Each variable value is returned in the form $variable=value, and variables are separated by semicolons.'
        title: The final values of all variables used in the evaluation of the autoscale formula.
        type: string
      timestamp:
        format: date-time
        title: The time at which the autoscale formula was last evaluated.
        type: string
    required:
      - timestamp
    title: The results and errors from an execution of a Pool autoscale formula.
  AutoScaleRunError:
    properties:
      code:
        title: An identifier for the autoscale error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      message:
        title: 'A message describing the autoscale error, intended to be suitable for display in a user interface.'
        type: string
      values:
        items:
          $ref: '#/definitions/NameValuePair'
        title: A list of additional error details related to the autoscale error.
        type: array
    title: An error that occurred when executing or evaluating a Pool autoscale formula.
  AutoUserSpecification:
    properties:
      elevationLevel:
        $ref: '#/definitions/ElevationLevel'
        description: The default value is nonAdmin.
        title: The elevation level of the auto user.
      scope:
        description: 'The default value is pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by StartTasks.'
        enum:
          - task
          - pool
        title: The scope for the auto user
        type: string
        x-ms-enum:
          modelAsString: false
          name: AutoUserScope
          values:
            - description: Specifies that the service should create a new user for the Task.
              value: task
            - description: Specifies that the Task runs as the common auto user Account which is created on every Compute Node in a Pool.
              value: pool
    title: Specifies the parameters for the auto user that runs a Task on the Batch service.
  AzureBlobFileSystemConfiguration:
    properties:
      accountKey:
        description: This property is mutually exclusive with sasKey and one must be specified.
        title: The Azure Storage Account key.
        type: string
      accountName:
        title: The Azure Storage Account name.
        type: string
      blobfuseOptions:
        description: These are 'net use' options in Windows and 'mount' options in Linux.
        title: Additional command line options to pass to the mount command.
        type: string
      containerName:
        title: The Azure Blob Storage Container name.
        type: string
      relativeMountPath:
        description: 'All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.'
        title: The relative path on the compute node where the file system will be mounted
        type: string
      sasKey:
        description: This property is mutually exclusive with accountKey and one must be specified.
        title: The Azure Storage SAS token.
        type: string
    required:
      - accountName
      - containerName
      - relativeMountPath
    title: Information used to connect to an Azure Storage Container using Blobfuse.
  AzureFileShareConfiguration:
    properties:
      accountKey:
        title: The Azure Storage account key.
        type: string
      accountName:
        title: The Azure Storage account name.
        type: string
      azureFileUrl:
        description: 'This is of the form ''https://{account}.file.core.windows.net/''.'
        title: The Azure Files URL.
        type: string
      mountOptions:
        description: These are 'net use' options in Windows and 'mount' options in Linux.
        title: Additional command line options to pass to the mount command.
        type: string
      relativeMountPath:
        description: 'All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.'
        title: The relative path on the compute node where the file system will be mounted
        type: string
    required:
      - accountName
      - azureFileUrl
      - accountKey
      - relativeMountPath
    title: Information used to connect to an Azure Fileshare.
  BatchError:
    properties:
      code:
        title: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      message:
        $ref: '#/definitions/ErrorMessage'
        title: 'A message describing the error, intended to be suitable for display in a user interface.'
      values:
        items:
          $ref: '#/definitions/BatchErrorDetail'
        title: A collection of key-value pairs containing additional details about the error.
        type: array
    title: An error response received from the Azure Batch service.
  BatchErrorDetail:
    properties:
      key:
        title: An identifier specifying the meaning of the Value property.
        type: string
      value:
        title: The additional information included with the error response.
        type: string
    title: An item of additional information included in an Azure Batch error response.
  CIFSMountConfiguration:
    properties:
      mountOptions:
        description: These are 'net use' options in Windows and 'mount' options in Linux.
        title: Additional command line options to pass to the mount command.
        type: string
      password:
        title: The password to use for authentication against the CIFS file system.
        type: string
      relativeMountPath:
        description: 'All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.'
        title: The relative path on the compute node where the file system will be mounted
        type: string
      source:
        title: The URI of the file system to mount.
        type: string
      username:
        title: The user to use for authentication against the CIFS file system.
        type: string
    required:
      - username
      - source
      - password
      - relativeMountPath
    title: Information used to connect to a CIFS file system.
  CachingType:
    description: 'The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.'
    enum:
      - none
      - readonly
      - readwrite
    title: The type of caching to enable for the disk.
    type: string
    x-ms-enum:
      modelAsString: false
      name: CachingType
      values:
        - description: The caching mode for the disk is not enabled.
          value: none
        - description: The caching mode for the disk is read only.
          name: readOnly
          value: readonly
        - description: The caching mode for the disk is read and write.
          name: readWrite
          value: readwrite
  Certificate:
    description: A Certificate that can be installed on Compute Nodes and can be used to authenticate operations on the machine.
    properties:
      deleteCertificateError:
        $ref: '#/definitions/DeleteCertificateError'
        description: This property is set only if the Certificate is in the DeleteFailed state.
        title: The error that occurred on the last attempt to delete this Certificate.
      previousState:
        $ref: '#/definitions/CertificateState'
        description: This property is not set if the Certificate is in its initial active state.
        title: The previous state of the Certificate.
      previousStateTransitionTime:
        description: This property is not set if the Certificate is in its initial Active state.
        format: date-time
        title: The time at which the Certificate entered its previous state.
        type: string
      publicData:
        title: The public part of the Certificate as a base-64 encoded .cer file.
        type: string
      state:
        $ref: '#/definitions/CertificateState'
        title: The current state of the Certificate.
      stateTransitionTime:
        format: date-time
        title: The time at which the Certificate entered its current state.
        type: string
      thumbprint:
        title: The X.509 thumbprint of the Certificate. This is a sequence of up to 40 hex digits.
        type: string
      thumbprintAlgorithm:
        title: The algorithm used to derive the thumbprint.
        type: string
      url:
        title: The URL of the Certificate.
        type: string
  CertificateAddParameter:
    properties:
      certificateFormat:
        enum:
          - pfx
          - cer
        title: The format of the Certificate data.
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateFormat
          values:
            - description: 'The Certificate is a PFX (PKCS#12) formatted Certificate or Certificate chain.'
              value: pfx
            - description: The Certificate is a base64-encoded X.509 Certificate.
              value: cer
      data:
        title: The base64-encoded contents of the Certificate. The maximum size is 10KB.
        type: string
      password:
        description: This is required if the Certificate format is pfx. It should be omitted if the Certificate format is cer.
        title: The password to access the Certificate's private key.
        type: string
      thumbprint:
        title: The X.509 thumbprint of the Certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
        type: string
      thumbprintAlgorithm:
        title: The algorithm used to derive the thumbprint. This must be sha1.
        type: string
    required:
      - thumbprint
      - thumbprintAlgorithm
      - data
    title: A Certificate that can be installed on Compute Nodes and can be used to authenticate operations on the machine.
  CertificateListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/Certificate'
        title: The list of Certificates.
        type: array
    title: The result of listing the Certificates in the Account.
  CertificateReference:
    properties:
      storeLocation:
        description: 'The default value is currentuser. This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        enum:
          - currentuser
          - localmachine
        title: The location of the Certificate store on the Compute Node into which to install the Certificate.
        type: string
        x-ms-enum:
          modelAsString: false
          name: CertificateStoreLocation
          values:
            - description: Certificates should be installed to the CurrentUser Certificate store.
              name: currentUser
              value: currentuser
            - description: Certificates should be installed to the LocalMachine Certificate store.
              name: localMachine
              value: localmachine
      storeName:
        description: 'This property is applicable only for Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows Image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.'
        title: The name of the Certificate store on the Compute Node into which to install the Certificate.
        type: string
      thumbprint:
        title: The thumbprint of the Certificate.
        type: string
      thumbprintAlgorithm:
        title: The algorithm with which the thumbprint is associated. This must be sha1.
        type: string
      visibility:
        description: You can specify more than one visibility in this collection. The default is all Accounts.
        items:
          enum:
            - starttask
            - task
            - remoteuser
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateVisibility
            values:
              - description: 'The Certificate should be visible to the user account under which the StartTask is run. Note that if AutoUser Scope is Pool for both the StartTask and a Task, this certificate will be visible to the Task as well.'
                name: startTask
                value: starttask
              - description: The Certificate should be visible to the user accounts under which Job Tasks are run.
                value: task
              - description: The Certificate should be visible to the user accounts under which users remotely access the Compute Node.
                name: remoteUser
                value: remoteuser
          x-nullable: false
        title: Which user Accounts on the Compute Node should have access to the private data of the Certificate.
        type: array
    required:
      - thumbprint
      - thumbprintAlgorithm
    title: A reference to a Certificate to be installed on Compute Nodes in a Pool.
  CertificateState:
    enum:
      - active
      - deleting
      - deletefailed
    title: The state of the Certificate.
    type: string
    x-ms-enum:
      modelAsString: false
      name: CertificateState
      values:
        - description: The Certificate is available for use in Pools.
          value: active
        - description: 'The user has requested that the Certificate be deleted, but the delete operation has not yet completed. You may not reference the Certificate when creating or updating Pools.'
          value: deleting
        - description: 'The user requested that the Certificate be deleted, but there are Pools that still have references to the Certificate, or it is still installed on one or more Nodes. (The latter can occur if the Certificate has been removed from the Pool, but the Compute Node has not yet restarted. Compute Nodes refresh their Certificates only when they restart.) You may use the cancel Certificate delete operation to cancel the delete, or the delete Certificate operation to retry the delete.'
          name: deleteFailed
          value: deletefailed
  CloudJob:
    properties:
      commonEnvironmentSettings:
        description: Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: 'The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks).'
        type: array
      constraints:
        $ref: '#/definitions/JobConstraints'
        title: The execution constraints for the Job.
      creationTime:
        format: date-time
        title: The creation time of the Job.
        type: string
      displayName:
        title: The display name for the Job.
        type: string
      eTag:
        description: 'This is an opaque string. You can use it to detect whether the Job has changed between requests. In particular, you can be pass the ETag when updating a Job to specify that your changes should take effect only if nobody else has modified the Job in the meantime.'
        title: The ETag of the Job.
        type: string
      executionInfo:
        $ref: '#/definitions/JobExecutionInformation'
        title: The execution information for the Job.
      id:
        description: 'The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).'
        title: A string that uniquely identifies the Job within the Account.
        type: string
      jobManagerTask:
        $ref: '#/definitions/JobManagerTask'
        title: Details of a Job Manager Task to be launched when the Job is started.
      jobPreparationTask:
        $ref: '#/definitions/JobPreparationTask'
        description: The Job Preparation Task is a special Task run on each Compute Node before any other Task of the Job.
        title: The Job Preparation Task.
      jobReleaseTask:
        $ref: '#/definitions/JobReleaseTask'
        description: The Job Release Task is a special Task run at the end of the Job on each Compute Node that has run any other Task of the Job.
        title: The Job Release Task.
      lastModified:
        description: 'This is the last time at which the Job level data, such as the Job state or priority, changed. It does not factor in task-level changes such as adding new Tasks or Tasks changing state.'
        format: date-time
        title: The last modified time of the Job.
        type: string
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job as metadata.
        type: array
      networkConfiguration:
        $ref: '#/definitions/JobNetworkConfiguration'
        title: The network configuration for the Job.
      onAllTasksComplete:
        $ref: '#/definitions/OnAllTasksComplete'
        description: The default is noaction.
        title: The action the Batch service should take when all Tasks in the Job are in the completed state.
      onTaskFailure:
        $ref: '#/definitions/OnTaskFailure'
        description: 'A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction.'
        title: The action the Batch service should take when any Task in the Job fails.
      poolInfo:
        $ref: '#/definitions/PoolInformation'
        title: The Pool settings associated with the Job.
      previousState:
        $ref: '#/definitions/JobState'
        description: This property is not set if the Job is in its initial Active state.
        title: The previous state of the Job.
      previousStateTransitionTime:
        description: This property is not set if the Job is in its initial Active state.
        format: date-time
        title: The time at which the Job entered its previous state.
        type: string
      priority:
        description: 'Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.'
        format: int32
        title: The priority of the Job.
        type: integer
      state:
        $ref: '#/definitions/JobState'
        title: The current state of the Job.
      stateTransitionTime:
        format: date-time
        title: The time at which the Job entered its current state.
        type: string
      stats:
        $ref: '#/definitions/JobStatistics'
        description: This property is populated only if the CloudJob was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
        title: Resource usage statistics for the entire lifetime of the Job.
      url:
        title: The URL of the Job.
        type: string
      usesTaskDependencies:
        title: Whether Tasks in the Job can define dependencies on each other. The default is false.
        type: boolean
    title: An Azure Batch Job.
  CloudJobListPreparationAndReleaseTaskStatusResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/JobPreparationAndReleaseTaskExecutionInformation'
        title: A list of Job Preparation and Job Release Task execution information.
        type: array
    title: The result of listing the status of the Job Preparation and Job Release Tasks for a Job.
  CloudJobListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/CloudJob'
        title: The list of Jobs.
        type: array
    title: The result of listing the Jobs in an Account.
  CloudJobSchedule:
    properties:
      creationTime:
        format: date-time
        title: The creation time of the Job Schedule.
        type: string
      displayName:
        title: The display name for the schedule.
        type: string
      eTag:
        description: 'This is an opaque string. You can use it to detect whether the Job Schedule has changed between requests. In particular, you can be pass the ETag with an Update Job Schedule request to specify that your changes should take effect only if nobody else has modified the schedule in the meantime.'
        title: The ETag of the Job Schedule.
        type: string
      executionInfo:
        $ref: '#/definitions/JobScheduleExecutionInformation'
        title: Information about Jobs that have been and will be run under this schedule.
      id:
        title: A string that uniquely identifies the schedule within the Account.
        type: string
      jobSpecification:
        $ref: '#/definitions/JobSpecification'
        title: The details of the Jobs to be created on this schedule.
      lastModified:
        description: 'This is the last time at which the schedule level data, such as the Job specification or recurrence information, changed. It does not factor in job-level changes such as new Jobs being created or Jobs changing state.'
        format: date-time
        title: The last modified time of the Job Schedule.
        type: string
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the schedule as metadata.
        type: array
      previousState:
        $ref: '#/definitions/JobScheduleState'
        description: This property is not present if the Job Schedule is in its initial active state.
        title: The previous state of the Job Schedule.
      previousStateTransitionTime:
        description: This property is not present if the Job Schedule is in its initial active state.
        format: date-time
        title: The time at which the Job Schedule entered its previous state.
        type: string
      schedule:
        $ref: '#/definitions/Schedule'
        title: The schedule according to which Jobs will be created.
      state:
        $ref: '#/definitions/JobScheduleState'
        title: The current state of the Job Schedule.
      stateTransitionTime:
        format: date-time
        title: The time at which the Job Schedule entered the current state.
        type: string
      stats:
        $ref: '#/definitions/JobScheduleStatistics'
        title: The lifetime resource usage statistics for the Job Schedule. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
      url:
        title: The URL of the Job Schedule.
        type: string
    title: A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a specification used to create each Job.
  CloudJobScheduleListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/CloudJobSchedule'
        title: The list of Job Schedules.
        type: array
    title: The result of listing the Job Schedules in an Account.
  CloudPool:
    properties:
      allocationState:
        enum:
          - steady
          - resizing
          - stopping
        title: Whether the Pool is resizing.
        type: string
        x-ms-enum:
          modelAsString: false
          name: AllocationState
          values:
            - description: The Pool is not resizing. There are no changes to the number of Compute Nodes in the Pool in progress. A Pool enters this state when it is created and when no operations are being performed on the Pool to change the number of Compute Nodes.
              value: steady
            - description: 'The Pool is resizing; that is, Compute Nodes are being added to or removed from the Pool.'
              value: resizing
            - description: 'The Pool was resizing, but the user has requested that the resize be stopped, but the stop request has not yet been completed.'
              value: stopping
      allocationStateTransitionTime:
        format: date-time
        title: The time at which the Pool entered its current allocation state.
        type: string
      applicationLicenses:
        description: 'The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail.'
        items:
          type: string
        title: The list of application licenses the Batch service will make available on each Compute Node in the Pool.
        type: array
      applicationPackageReferences:
        description: 'Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: The list of Packages to be installed on each Compute Node in the Pool.
        type: array
      autoScaleEvaluationInterval:
        description: 'This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.'
        format: duration
        title: The time interval at which to automatically adjust the Pool size according to the autoscale formula.
        type: string
      autoScaleFormula:
        description: 'This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.'
        title: A formula for the desired number of Compute Nodes in the Pool.
        type: string
      autoScaleRun:
        $ref: '#/definitions/AutoScaleRun'
        description: 'This property is set only if the Pool automatically scales, i.e. enableAutoScale is true.'
        title: The results and errors from the last execution of the autoscale formula.
      certificateReferences:
        description: 'For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: The list of Certificates to be installed on each Compute Node in the Pool.
        type: array
      cloudServiceConfiguration:
        $ref: '#/definitions/CloudServiceConfiguration'
        description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
        title: The cloud service configuration for the Pool.
      creationTime:
        format: date-time
        title: The creation time of the Pool.
        type: string
      currentDedicatedNodes:
        format: int32
        title: The number of dedicated Compute Nodes currently in the Pool.
        type: integer
      currentLowPriorityNodes:
        description: Low-priority Compute Nodes which have been preempted are included in this count.
        format: int32
        title: The number of low-priority Compute Nodes currently in the Pool.
        type: integer
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the Pool.
        type: string
      eTag:
        description: 'This is an opaque string. You can use it to detect whether the Pool has changed between requests. In particular, you can be pass the ETag when updating a Pool to specify that your changes should take effect only if nobody else has modified the Pool in the meantime.'
        title: The ETag of the Pool.
        type: string
      enableAutoScale:
        description: 'If false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false.'
        title: Whether the Pool size should automatically adjust over time.
        type: boolean
      enableInterNodeCommunication:
        description: This imposes restrictions on which Compute Nodes can be assigned to the Pool. Specifying this value can reduce the chance of the requested number of Compute Nodes to be allocated in the Pool.
        title: Whether the Pool permits direct communication between Compute Nodes.
        type: boolean
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).'
        title: A string that uniquely identifies the Pool within the Account.
        type: string
      lastModified:
        description: 'This is the last time at which the Pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a Compute Node changing state.'
        format: date-time
        title: The last modified time of the Pool.
        type: string
      maxTasksPerNode:
        description: The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
        format: int32
        title: The maximum number of Tasks that can run concurrently on a single Compute Node in the Pool.
        type: integer
      metadata:
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Pool as metadata.
        type: array
      mountConfiguration:
        description: 'This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.'
        items:
          $ref: '#/definitions/MountConfiguration'
        title: A list of file systems to mount on each node in the pool.
        type: array
      networkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
        title: The network configuration for the Pool.
      resizeErrors:
        description: 'This property is set only if one or more errors occurred during the last Pool resize, and only when the Pool allocationState is Steady.'
        items:
          $ref: '#/definitions/ResizeError'
        title: A list of errors encountered while performing the last resize on the Pool.
        type: array
      resizeTimeout:
        description: This is the timeout for the most recent resize operation. (The initial sizing when the Pool is created counts as a resize.) The default value is 15 minutes.
        format: duration
        title: The timeout for allocation of Compute Nodes to the Pool.
        type: string
      startTask:
        $ref: '#/definitions/StartTask'
        title: A Task specified to run on each Compute Node as it joins the Pool.
      state:
        enum:
          - active
          - deleting
        title: The current state of the Pool.
        type: string
        x-ms-enum:
          modelAsString: false
          name: PoolState
          values:
            - description: The Pool is available to run Tasks subject to the availability of Compute Nodes.
              value: active
            - description: 'The user has requested that the Pool be deleted, but the delete operation has not yet completed.'
              value: deleting
      stateTransitionTime:
        format: date-time
        title: The time at which the Pool entered its current state.
        type: string
      stats:
        $ref: '#/definitions/PoolStatistics'
        description: This property is populated only if the CloudPool was retrieved with an expand clause including the 'stats' attribute; otherwise it is null. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
        title: Utilization and resource usage statistics for the entire lifetime of the Pool.
      targetDedicatedNodes:
        format: int32
        title: The desired number of dedicated Compute Nodes in the Pool.
        type: integer
      targetLowPriorityNodes:
        format: int32
        title: The desired number of low-priority Compute Nodes in the Pool.
        type: integer
      taskSchedulingPolicy:
        $ref: '#/definitions/TaskSchedulingPolicy'
        description: 'If not specified, the default is spread.'
        title: How Tasks are distributed across Compute Nodes in a Pool.
      url:
        title: The URL of the Pool.
        type: string
      userAccounts:
        items:
          $ref: '#/definitions/UserAccount'
        title: The list of user Accounts to be created on each Compute Node in the Pool.
        type: array
      virtualMachineConfiguration:
        $ref: '#/definitions/VirtualMachineConfiguration'
        description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        title: The virtual machine configuration for the Pool.
      vmSize:
        description: 'For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).'
        title: The size of virtual machines in the Pool. All virtual machines in a Pool are the same size.
        type: string
    title: A Pool in the Azure Batch service.
  CloudPoolListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/CloudPool'
        title: The list of Pools.
        type: array
    title: The result of listing the Pools in an Account.
  CloudServiceConfiguration:
    properties:
      osFamily:
        description: |-
          Possible values are:
          2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1.
          3 - OS Family 3, equivalent to Windows Server 2012.
          4 - OS Family 4, equivalent to Windows Server 2012 R2.
          5 - OS Family 5, equivalent to Windows Server 2016.
          6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
        title: The Azure Guest OS family to be installed on the virtual machines in the Pool.
        type: string
      osVersion:
        description: The default value is * which specifies the latest operating system version for the specified OS family.
        title: The Azure Guest OS version to be installed on the virtual machines in the Pool.
        type: string
    required:
      - osFamily
    title: The configuration for Compute Nodes in a Pool based on the Azure Cloud Services platform.
  CloudTask:
    description: 'Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing.'
    properties:
      affinityInfo:
        $ref: '#/definitions/AffinityInformation'
        title: A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task.
      applicationPackageReferences:
        description: 'Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: A list of Packages that the Batch service will deploy to the Compute Node before running the command line.
        type: array
      authenticationTokenSettings:
        $ref: '#/definitions/AuthenticationTokenSettings'
        description: 'If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.'
        title: The settings for an authentication token that the Task can use to perform Batch service operations.
      commandLine:
        description: 'For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the Task.
        type: string
      constraints:
        $ref: '#/definitions/TaskConstraints'
        title: The execution constraints that apply to this Task.
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn''t have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the Task runs.
      creationTime:
        format: date-time
        title: The creation time of the Task.
        type: string
      dependsOn:
        $ref: '#/definitions/TaskDependencies'
        description: 'This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled.'
        title: The Tasks that this Task depends on.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: A display name for the Task.
        type: string
      eTag:
        description: 'This is an opaque string. You can use it to detect whether the Task has changed between requests. In particular, you can be pass the ETag when updating a Task to specify that your changes should take effect only if nobody else has modified the Task in the meantime.'
        title: The ETag of the Task.
        type: string
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the Task.
        type: array
      executionInfo:
        $ref: '#/definitions/TaskExecutionInformation'
        title: Information about the execution of the Task.
      exitConditions:
        $ref: '#/definitions/ExitConditions'
        description: How the Batch service should respond when the Task completes.
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.'
        title: A string that uniquely identifies the Task within the Job.
        type: string
      lastModified:
        format: date-time
        title: The last modified time of the Task.
        type: string
      multiInstanceSettings:
        $ref: '#/definitions/MultiInstanceSettings'
        title: 'An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task.'
      nodeInfo:
        $ref: '#/definitions/ComputeNodeInformation'
        title: Information about the Compute Node on which the Task ran.
      outputFiles:
        description: 'For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.'
        items:
          $ref: '#/definitions/OutputFile'
        title: A list of files that the Batch service will upload from the Compute Node after running the command line.
        type: array
      previousState:
        $ref: '#/definitions/TaskState'
        description: This property is not set if the Task is in its initial Active state.
        title: The previous state of the Task.
      previousStateTransitionTime:
        description: This property is not set if the Task is in its initial Active state.
        format: date-time
        title: The time at which the Task entered its previous state.
        type: string
      resourceFiles:
        description: 'For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download to the Compute Node before running the command line.
        type: array
      state:
        $ref: '#/definitions/TaskState'
        title: The current state of the Task.
      stateTransitionTime:
        format: date-time
        title: The time at which the Task entered its current state.
        type: string
      stats:
        $ref: '#/definitions/TaskStatistics'
        title: Resource usage statistics for the Task.
      url:
        title: The URL of the Task.
        type: string
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task.'
        title: The user identity under which the Task runs.
    title: An Azure Batch Task.
  CloudTaskListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/CloudTask'
        title: The list of Tasks.
        type: array
    title: The result of listing the Tasks in a Job.
  CloudTaskListSubtasksResult:
    properties:
      value:
        items:
          $ref: '#/definitions/SubtaskInformation'
        title: The list of subtasks.
        type: array
    title: The result of listing the subtasks of a Task.
  ComputeNode:
    properties:
      affinityId:
        description: 'Note that this is just a soft affinity. If the target Compute Node is busy or unavailable at the time the Task is scheduled, then the Task will be scheduled elsewhere.'
        title: An identifier which can be passed when adding a Task to request that the Task be scheduled on this Compute Node.
        type: string
      allocationTime:
        description: This is the time when the Compute Node was initially allocated and doesn't change once set. It is not updated when the Compute Node is service healed or preempted.
        format: date-time
        title: The time at which this Compute Node was allocated to the Pool.
        type: string
      certificateReferences:
        description: 'For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: The list of Certificates installed on the Compute Node.
        type: array
      endpointConfiguration:
        $ref: '#/definitions/ComputeNodeEndpointConfiguration'
        title: The endpoint configuration for the Compute Node.
      errors:
        items:
          $ref: '#/definitions/ComputeNodeError'
        title: The list of errors that are currently being encountered by the Compute Node.
        type: array
      id:
        description: 'Every Compute Node that is added to a Pool is assigned a unique ID. Whenever a Compute Node is removed from a Pool, all of its local files are deleted, and the ID is reclaimed and could be reused for new Compute Nodes.'
        title: The ID of the Compute Node.
        type: string
      ipAddress:
        description: 'Every Compute Node that is added to a Pool is assigned a unique IP address. Whenever a Compute Node is removed from a Pool, all of its local files are deleted, and the IP address is reclaimed and could be reused for new Compute Nodes.'
        title: The IP address that other Nodes can use to communicate with this Compute Node.
        type: string
      isDedicated:
        title: 'Whether this Compute Node is a dedicated Compute Node. If false, the Compute Node is a low-priority Compute Node.'
        type: boolean
      lastBootTime:
        description: This property may not be present if the Compute Node state is unusable.
        format: date-time
        title: The last time at which the Compute Node was started.
        type: string
      nodeAgentInfo:
        $ref: '#/definitions/NodeAgentInformation'
        title: Information about the Compute Node agent version and the time the Compute Node upgraded to a new version.
      recentTasks:
        description: This property is present only if at least one Task has run on this Compute Node since it was assigned to the Pool.
        items:
          $ref: '#/definitions/TaskInformation'
        title: A list of Tasks whose state has recently changed.
        type: array
      runningTasksCount:
        format: int32
        title: 'The total number of currently running Job Tasks on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks.'
        type: integer
      schedulingState:
        enum:
          - enabled
          - disabled
        title: Whether the Compute Node is available for Task scheduling.
        type: string
        x-ms-enum:
          modelAsString: false
          name: SchedulingState
          values:
            - description: Tasks can be scheduled on the Compute Node.
              value: enabled
            - description: No new Tasks will be scheduled on the Compute Node. Tasks already running on the Compute Node may still run to completion. All Compute Nodes start with scheduling enabled.
              value: disabled
      startTask:
        $ref: '#/definitions/StartTask'
        title: The Task specified to run on the Compute Node as it joins the Pool.
      startTaskInfo:
        $ref: '#/definitions/StartTaskInformation'
        title: Runtime information about the execution of the StartTask on the Compute Node.
      state:
        description: The low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was preempted will be rescheduled when another Compute Node becomes available.
        enum:
          - idle
          - rebooting
          - reimaging
          - running
          - unusable
          - creating
          - starting
          - waitingforstarttask
          - starttaskfailed
          - unknown
          - leavingpool
          - offline
          - preempted
        title: The current state of the Compute Node.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ComputeNodeState
          values:
            - description: The Compute Node is not currently running a Task.
              value: idle
            - description: The Compute Node is rebooting.
              value: rebooting
            - description: The Compute Node is reimaging.
              value: reimaging
            - description: The Compute Node is running one or more Tasks (other than a StartTask).
              value: running
            - description: The Compute Node cannot be used for Task execution due to errors.
              value: unusable
            - description: 'The Batch service has obtained the underlying virtual machine from Azure Compute, but it has not yet started to join the Pool.'
              value: creating
            - description: The Batch service is starting on the underlying virtual machine.
              value: starting
            - description: 'The StartTask has started running on the Compute Node, but waitForSuccess is set and the StartTask has not yet completed.'
              name: waitingForStartTask
              value: waitingforstarttask
            - description: 'The StartTask has failed on the Compute Node (and exhausted all retries), and waitForSuccess is set. The Compute Node is not usable for running Tasks.'
              name: startTaskFailed
              value: starttaskfailed
            - description: 'The Batch service has lost contact with the Compute Node, and does not know its true state.'
              value: unknown
            - description: 'The Compute Node is leaving the Pool, either because the user explicitly removed it or because the Pool is resizing or autoscaling down.'
              name: leavingPool
              value: leavingpool
            - description: 'The Compute Node is not currently running a Task, and scheduling of new Tasks to the Compute Node is disabled.'
              value: offline
            - description: The low-priority Compute Node has been preempted. Tasks which were running on the Compute Node when it was preempted will be rescheduled when another Compute Node becomes available.
              value: preempted
      stateTransitionTime:
        format: date-time
        title: The time at which the Compute Node entered its current state.
        type: string
      totalTasksRun:
        format: int32
        title: 'The total number of Job Tasks completed on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks.'
        type: integer
      totalTasksSucceeded:
        format: int32
        title: 'The total number of Job Tasks which completed successfully (with exitCode 0) on the Compute Node. This includes Job Manager Tasks and normal Tasks, but not Job Preparation, Job Release or Start Tasks.'
        type: integer
      url:
        title: The URL of the Compute Node.
        type: string
      vmSize:
        description: 'For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).'
        title: The size of the virtual machine hosting the Compute Node.
        type: string
    title: A Compute Node in the Batch service.
  ComputeNodeDeallocationOption:
    description: The default value is requeue.
    enum:
      - requeue
      - terminate
      - taskcompletion
      - retaineddata
    title: Determines what to do with a Compute Node and its running task(s) after it has been selected for deallocation.
    type: string
    x-ms-enum:
      modelAsString: false
      name: ComputeNodeDeallocationOption
      values:
        - description: Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Remove Compute Nodes as soon as Tasks have been terminated.
          value: requeue
        - description: 'Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Remove Compute Nodes as soon as Tasks have been terminated.'
          value: terminate
        - description: Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Remove Compute Nodes when all Tasks have completed.
          name: taskCompletion
          value: taskcompletion
        - description: 'Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Remove Compute Nodes when all Task retention periods have expired.'
          name: retainedData
          value: retaineddata
  ComputeNodeEndpointConfiguration:
    properties:
      inboundEndpoints:
        items:
          $ref: '#/definitions/InboundEndpoint'
        title: The list of inbound endpoints that are accessible on the Compute Node.
        type: array
    required:
      - inboundEndpoints
    title: The endpoint configuration for the Compute Node.
  ComputeNodeError:
    properties:
      code:
        title: An identifier for the Compute Node error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      errorDetails:
        items:
          $ref: '#/definitions/NameValuePair'
        title: The list of additional error details related to the Compute Node error.
        type: array
      message:
        title: 'A message describing the Compute Node error, intended to be suitable for display in a user interface.'
        type: string
    title: An error encountered by a Compute Node.
  ComputeNodeGetRemoteLoginSettingsResult:
    properties:
      remoteLoginIPAddress:
        title: The IP address used for remote login to the Compute Node.
        type: string
      remoteLoginPort:
        format: int32
        title: The port used for remote login to the Compute Node.
        type: integer
    required:
      - remoteLoginIPAddress
      - remoteLoginPort
    title: The remote login settings for a Compute Node.
  ComputeNodeInformation:
    properties:
      affinityId:
        title: 'An identifier for the Node on which the Task ran, which can be passed when adding a Task to request that the Task be scheduled on this Compute Node.'
        type: string
      nodeId:
        title: The ID of the Compute Node on which the Task ran.
        type: string
      nodeUrl:
        title: 'The URL of the Compute Node on which the Task ran. '
        type: string
      poolId:
        title: The ID of the Pool on which the Task ran.
        type: string
      taskRootDirectory:
        title: The root directory of the Task on the Compute Node.
        type: string
      taskRootDirectoryUrl:
        title: The URL to the root directory of the Task on the Compute Node.
        type: string
    title: Information about the Compute Node on which a Task ran.
  ComputeNodeListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/ComputeNode'
        title: The list of Compute Nodes.
        type: array
    title: The result of listing the Compute Nodes in a Pool.
  ComputeNodeUser:
    properties:
      expiryTime:
        description: 'If omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.'
        format: date-time
        title: The time at which the Account should expire.
        type: string
      isAdmin:
        description: The default value is false.
        title: Whether the Account should be an administrator on the Compute Node.
        type: boolean
      name:
        title: The user name of the Account.
        type: string
      password:
        description: 'The password is required for Windows Compute Nodes (those created with ''cloudServiceConfiguration'', or created with ''virtualMachineConfiguration'' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property.'
        title: The password of the Account.
        type: string
      sshPublicKey:
        description: 'The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        title: The SSH public key that can be used for remote login to the Compute Node.
        type: string
    required:
      - name
    title: A user Account for RDP or SSH access on a Compute Node.
  ContainerConfiguration:
    properties:
      containerImageNames:
        description: 'This is the full Image reference, as would be specified to "docker pull". An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry.'
        items:
          type: string
        title: The collection of container Image names.
        type: array
      containerRegistries:
        description: 'If any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.'
        items:
          $ref: '#/definitions/ContainerRegistry'
        title: Additional private registries from which containers can be pulled.
        type: array
      type:
        enum:
          - dockerCompatible
        title: The container technology to be used.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ContainerType
          values:
            - description: A Docker compatible container technology will be used to launch the containers.
              value: dockerCompatible
    required:
      - type
    title: The configuration for container-enabled Pools.
  ContainerRegistry:
    properties:
      password:
        title: The password to log into the registry server.
        type: string
      registryServer:
        description: 'If omitted, the default is "docker.io".'
        title: The registry URL.
        type: string
      username:
        title: The user name to log into the registry server.
        type: string
        x-ms-client-name: userName
    required:
      - username
      - password
    title: A private container registry.
  DataDisk:
    properties:
      caching:
        $ref: '#/definitions/CachingType'
        description: 'The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.'
        title: The type of caching to be enabled for the data disks.
      diskSizeGB:
        format: int32
        title: The initial disk size in gigabytes.
        type: integer
      lun:
        description: 'The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.'
        format: int32
        title: The logical unit number.
        type: integer
      storageAccountType:
        $ref: '#/definitions/StorageAccountType'
        description: 'If omitted, the default is "standard_lrs".'
        title: The storage Account type to be used for the data disk.
    required:
      - lun
      - diskSizeGB
    title: 'Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.'
  DeleteCertificateError:
    properties:
      code:
        title: An identifier for the Certificate deletion error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      message:
        title: 'A message describing the Certificate deletion error, intended to be suitable for display in a user interface.'
        type: string
      values:
        description: 'This list includes details such as the active Pools and Compute Nodes referencing this Certificate. However, if a large number of resources reference the Certificate, the list contains only about the first hundred.'
        items:
          $ref: '#/definitions/NameValuePair'
        title: A list of additional error details related to the Certificate deletion error.
        type: array
    title: An error encountered by the Batch service when deleting a Certificate.
  ElevationLevel:
    enum:
      - nonadmin
      - admin
    title: The elevation level of the user.
    type: string
    x-ms-enum:
      modelAsString: false
      name: ElevationLevel
      values:
        - description: The user is a standard user without elevated access.
          name: nonAdmin
          value: nonadmin
        - description: The user is a user with elevated access and operates with full Administrator permissions.
          value: admin
  EnvironmentSetting:
    properties:
      name:
        title: The name of the environment variable.
        type: string
      value:
        title: The value of the environment variable.
        type: string
    required:
      - name
    title: An environment variable to be set on a Task process.
  ErrorCategory:
    enum:
      - usererror
      - servererror
    title: The category of the error.
    type: string
    x-ms-enum:
      modelAsString: false
      name: ErrorCategory
      values:
        - description: 'The error is due to a user issue, such as misconfiguration.'
          name: userError
          value: usererror
        - description: The error is due to an internal server issue.
          name: serverError
          value: servererror
  ErrorMessage:
    properties:
      lang:
        title: The language code of the error message
        type: string
      value:
        title: The text of the message.
        type: string
    title: An error message received in an Azure Batch error response.
  ExitCodeMapping:
    properties:
      code:
        format: int32
        title: A process exit code.
        type: integer
      exitOptions:
        $ref: '#/definitions/ExitOptions'
        title: How the Batch service should respond if the Task exits with this exit code.
    required:
      - code
      - exitOptions
    title: How the Batch service should respond if a Task exits with a particular exit code.
  ExitCodeRangeMapping:
    properties:
      end:
        format: int32
        title: The last exit code in the range.
        type: integer
      exitOptions:
        $ref: '#/definitions/ExitOptions'
        title: How the Batch service should respond if the Task exits with an exit code in the range start to end (inclusive).
      start:
        format: int32
        title: The first exit code in the range.
        type: integer
    required:
      - start
      - end
      - exitOptions
    title: A range of exit codes and how the Batch service should respond to exit codes within that range.
  ExitConditions:
    properties:
      default:
        $ref: '#/definitions/ExitOptions'
        description: 'This value is used if the Task exits with any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, with a pre-processing error if the preProcessingError property is not present, or with a file upload error if the fileUploadError property is not present. If you want non-default behavior on exit code 0, you must list it explicitly using the exitCodes or exitCodeRanges collection.'
        title: How the Batch service should respond if the Task fails with an exit condition not covered by any of the other properties.
      exitCodeRanges:
        items:
          $ref: '#/definitions/ExitCodeRangeMapping'
        title: A list of Task exit code ranges and how the Batch service should respond to them.
        type: array
      exitCodes:
        items:
          $ref: '#/definitions/ExitCodeMapping'
        title: A list of individual Task exit codes and how the Batch service should respond to them.
        type: array
      fileUploadError:
        $ref: '#/definitions/ExitOptions'
        description: 'If the Task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence.'
        title: How the Batch service should respond if a file upload error occurs.
      preProcessingError:
        $ref: '#/definitions/ExitOptions'
        title: How the Batch service should respond if the Task fails to start due to an error.
    title: Specifies how the Batch service should respond when the Task completes.
  ExitOptions:
    properties:
      dependencyAction:
        description: Possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks.
        enum:
          - satisfy
          - block
        title: An action that the Batch service performs on Tasks that depend on this Task.
        type: string
        x-ms-enum:
          modelAsString: false
          name: DependencyAction
          values:
            - description: 'Satisfy tasks waiting on this task; once all dependencies are satisfied, the task will be scheduled to run.'
              value: satisfy
            - description: 'Blocks tasks waiting on this task, preventing them from being scheduled.'
              value: block
      jobAction:
        description: 'The default is none for exit code 0 and terminate for all other exit conditions. If the Job''s onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        enum:
          - none
          - disable
          - terminate
        title: 'An action to take on the Job containing the Task, if the Task completes with the given exit condition and the Job''s onTaskFailed property is ''performExitOptionsJobAction''.'
        type: string
        x-ms-enum:
          modelAsString: false
          name: JobAction
          values:
            - description: Take no action.
              value: none
            - description: 'Disable the Job. This is equivalent to calling the disable Job API, with a disableTasks value of requeue.'
              value: disable
            - description: Terminate the Job. The terminateReason in the Job's executionInfo is set to "TaskFailed".
              value: terminate
    title: Specifies how the Batch service responds to a particular exit condition.
  FileProperties:
    properties:
      contentLength:
        format: int64
        title: The length of the file.
        type: integer
      contentType:
        title: The content type of the file.
        type: string
      creationTime:
        description: The creation time is not returned for files on Linux Compute Nodes.
        format: date-time
        title: The file creation time.
        type: string
      fileMode:
        description: The file mode is returned only for files on Linux Compute Nodes.
        title: The file mode attribute in octal format.
        type: string
      lastModified:
        format: date-time
        title: The time at which the file was last modified.
        type: string
    required:
      - lastModified
      - contentLength
    title: The properties of a file on a Compute Node.
  ImageInformation:
    properties:
      batchSupportEndOfLife:
        format: date-time
        title: The time when the Azure Batch service will stop accepting create Pool requests for the Image.
        type: string
      capabilities:
        description: Not every capability of the Image is listed. Capabilities in this list are considered of special interest and are generally related to integration with other features in the Azure Batch service.
        items:
          type: string
        title: The capabilities or features which the Image supports.
        type: array
      imageReference:
        $ref: '#/definitions/ImageReference'
        title: The reference to the Azure Virtual Machine's Marketplace Image.
      nodeAgentSKUId:
        title: The ID of the Compute Node agent SKU which the Image supports.
        type: string
      osType:
        enum:
          - linux
          - windows
        title: The type of operating system (e.g. Windows or Linux) of the Image.
        type: string
        x-ms-enum:
          modelAsString: false
          name: OSType
          values:
            - description: The Linux operating system.
              value: linux
            - description: The Windows operating system.
              value: windows
      verificationType:
        enum:
          - verified
          - unverified
        title: Whether the Azure Batch service actively verifies that the Image is compatible with the associated Compute Node agent SKU.
        type: string
        x-ms-enum:
          modelAsString: false
          name: VerificationType
          values:
            - description: The Image is guaranteed to be compatible with the associated Compute Node agent SKU and all Batch features have been confirmed to work as expected.
              value: verified
            - description: 'The associated Compute Node agent SKU should have binary compatibility with the Image, but specific functionality has not been verified.'
              value: unverified
    required:
      - imageReference
      - verificationType
      - osType
      - nodeAgentSKUId
    title: A reference to the Azure Virtual Machines Marketplace Image and additional information about the Image.
  ImageReference:
    properties:
      offer:
        description: 'For example, UbuntuServer or WindowsServer.'
        title: The offer type of the Azure Virtual Machines Marketplace Image.
        type: string
      publisher:
        description: 'For example, Canonical or MicrosoftWindowsServer.'
        title: The publisher of the Azure Virtual Machines Marketplace Image.
        type: string
      sku:
        description: 'For example, 18.04-LTS or 2019-Datacenter.'
        title: The SKU of the Azure Virtual Machines Marketplace Image.
        type: string
      version:
        description: 'A value of ''latest'' can be specified to select the latest version of an Image. If omitted, the default is ''latest''.'
        title: The version of the Azure Virtual Machines Marketplace Image.
        type: string
      virtualMachineImageId:
        description: 'This property is mutually exclusive with other ImageReference properties. For Virtual Machine Image it must be in the same region and subscription as the Azure Batch account. For SIG image it must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch Compute Node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.'
        title: 'The ARM resource identifier of the Virtual Machine Image or Shared Image Gallery Image. Computes Compute Nodes of the Pool will be created using this Image Id. This is of either the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName} for Virtual Machine Image or /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId} for SIG image.'
        type: string
    title: 'A reference to an Azure Virtual Machines Marketplace Image or a custom Azure Virtual Machine Image. To get the list of all Azure Marketplace Image references verified by Azure Batch, see the ''List supported Images'' operation.'
  InboundEndpoint:
    properties:
      backendPort:
        format: int32
        title: The backend port number of the endpoint.
        type: integer
      frontendPort:
        format: int32
        title: The public port number of the endpoint.
        type: integer
      name:
        title: The name of the endpoint.
        type: string
      protocol:
        $ref: '#/definitions/InboundEndpointProtocol'
        title: The protocol of the endpoint.
      publicFQDN:
        title: The public fully qualified domain name for the Compute Node.
        type: string
      publicIPAddress:
        title: The public IP address of the Compute Node.
        type: string
    required:
      - name
      - protocol
      - publicIPAddress
      - publicFQDN
      - frontendPort
      - backendPort
    title: An inbound endpoint on a Compute Node.
  InboundEndpointProtocol:
    enum:
      - tcp
      - udp
    title: The protocol of the endpoint.
    type: string
    x-ms-enum:
      modelAsString: false
      name: InboundEndpointProtocol
      values:
        - description: Use TCP for the endpoint.
          name: tcp
          value: tcp
        - description: Use UDP for the endpoint.
          name: udp
          value: udp
  InboundNATPool:
    properties:
      backendPort:
        description: 'This must be unique within a Batch Pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.'
        format: int32
        title: The port number on the Compute Node.
        type: integer
      frontendPortRangeEnd:
        description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        format: int32
        title: The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes.
        type: integer
      frontendPortRangeStart:
        description: Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
        format: int32
        title: The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes.
        type: integer
      name:
        description: 'The name must be unique within a Batch Pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.'
        title: The name of the endpoint.
        type: string
      networkSecurityGroupRules:
        description: 'The maximum number of rules that can be specified across all the endpoints on a Batch Pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.'
        items:
          $ref: '#/definitions/NetworkSecurityGroupRule'
        title: A list of network security group rules that will be applied to the endpoint.
        type: array
      protocol:
        $ref: '#/definitions/InboundEndpointProtocol'
        title: The protocol of the endpoint.
    required:
      - name
      - protocol
      - backendPort
      - frontendPortRangeStart
      - frontendPortRangeEnd
    title: A inbound NAT Pool that can be used to address specific ports on Compute Nodes in a Batch Pool externally.
  JobAddParameter:
    properties:
      commonEnvironmentSettings:
        description: Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: 'The list of common environment variable settings. These environment variables are set for all Tasks in the Job (including the Job Manager, Job Preparation and Job Release Tasks).'
        type: array
      constraints:
        $ref: '#/definitions/JobConstraints'
        description: The execution constraints for the Job.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the Job.
        type: string
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).'
        title: A string that uniquely identifies the Job within the Account.
        type: string
      jobManagerTask:
        $ref: '#/definitions/JobManagerTask'
        description: 'If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job. The Job Manager Task''s typical purpose is to control and/or monitor Job execution, for example by deciding what additional Tasks to run, determining when the work is complete, etc. (However, a Job Manager Task is not restricted to these activities - it is a fully-fledged Task in the system and perform whatever actions are required for the Job.) For example, a Job Manager Task might download a file specified as a parameter, analyze the contents of that file and submit additional Tasks based on those contents.'
        title: Details of a Job Manager Task to be launched when the Job is started.
      jobPreparationTask:
        $ref: '#/definitions/JobPreparationTask'
        description: 'If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node.'
        title: The Job Preparation Task.
      jobReleaseTask:
        $ref: '#/definitions/JobReleaseTask'
        description: 'A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Nodes that have run the Job Preparation Task. The primary purpose of the Job Release Task is to undo changes to Compute Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation.'
        title: The Job Release Task.
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job as metadata.
        type: array
      networkConfiguration:
        $ref: '#/definitions/JobNetworkConfiguration'
        title: The network configuration for the Job.
      onAllTasksComplete:
        $ref: '#/definitions/OnAllTasksComplete'
        description: 'Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction.'
        title: The action the Batch service should take when all Tasks in the Job are in the completed state.
      onTaskFailure:
        $ref: '#/definitions/OnTaskFailure'
        description: 'A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction.'
        title: The action the Batch service should take when any Task in the Job fails.
      poolInfo:
        $ref: '#/definitions/PoolInformation'
        title: The Pool on which the Batch service runs the Job's Tasks.
      priority:
        description: 'Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.'
        format: int32
        title: The priority of the Job.
        type: integer
      usesTaskDependencies:
        title: Whether Tasks in the Job can define dependencies on each other. The default is false.
        type: boolean
    required:
      - id
      - poolInfo
    title: An Azure Batch Job to add.
  JobConstraints:
    properties:
      maxTaskRetryCount:
        description: 'Note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries).'
        format: int32
        title: The maximum number of times each Task may be retried. The Batch service retries a Task if its exit code is nonzero.
        type: integer
      maxWallClockTime:
        description: 'If the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run.'
        format: duration
        title: 'The maximum elapsed time that the Job may run, measured from the time the Job is created.'
        type: string
    title: The execution constraints for a Job.
  JobDisableParameter:
    properties:
      disableTasks:
        enum:
          - requeue
          - terminate
          - wait
        title: What to do with active Tasks associated with the Job.
        type: string
        x-ms-enum:
          modelAsString: false
          name: DisableJobOption
          values:
            - description: Terminate running Tasks and requeue them. The Tasks will run again when the Job is enabled.
              value: requeue
            - description: 'Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again.'
              value: terminate
            - description: Allow currently running Tasks to complete.
              value: wait
    required:
      - disableTasks
    title: Options when disabling a Job.
  JobExecutionInformation:
    properties:
      endTime:
        description: This property is set only if the Job is in the completed state.
        format: date-time
        title: The completion time of the Job.
        type: string
      poolId:
        description: 'This element contains the actual Pool where the Job is assigned. When you get Job details from the service, they also contain a poolInfo element, which contains the Pool configuration data from when the Job was added or updated. That poolInfo element may also contain a poolId element. If it does, the two IDs are the same. If it does not, it means the Job ran on an auto Pool, and this property contains the ID of that auto Pool.'
        title: The ID of the Pool to which this Job is assigned.
        type: string
      schedulingError:
        $ref: '#/definitions/JobSchedulingError'
        description: This property is not set if there was no error starting the Job.
        title: Details of any error encountered by the service in starting the Job.
      startTime:
        description: This is the time at which the Job was created.
        format: date-time
        title: The start time of the Job.
        type: string
      terminateReason:
        description: 'This property is set only if the Job is in the completed state. If the Batch service terminates the Job, it sets the reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete - the Job''s onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job are complete. TaskFailed - the Job''s onTaskFailure attribute is set to performExitOptionsJobAction, and a Task in the Job failed with an exit condition that specified a jobAction of terminatejob. Any other string is a user-defined reason specified in a call to the ''Terminate a Job'' operation.'
        title: A string describing the reason the Job ended.
        type: string
    required:
      - startTime
    title: Contains information about the execution of a Job in the Azure Batch service.
  JobManagerTask:
    description: 'The Job Manager Task is automatically started when the Job is created. The Batch service tries to schedule the Job Manager Task before any other Tasks in the Job. When shrinking a Pool, the Batch service tries to preserve Nodes where Job Manager Tasks are running for as long as possible (that is, Compute Nodes running ''normal'' Tasks are removed before Compute Nodes running Job Manager Tasks). When a Job Manager Task fails and needs to be restarted, the system tries to schedule it at the highest priority. If there are no idle Compute Nodes available, the system may terminate one of the running Tasks in the Pool and return it to the queue in order to make room for the Job Manager Task to restart. Note that a Job Manager Task in one Job does not have priority over Tasks in other Jobs. Across Jobs, only Job level priorities are observed. For example, if a Job Manager in a priority 0 Job needs to be restarted, it will not displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing.'
    properties:
      allowLowPriorityNode:
        description: The default value is true.
        title: Whether the Job Manager Task may run on a low-priority Compute Node.
        type: boolean
      applicationPackageReferences:
        description: 'Application Packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced Application Package is already on the Compute Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Application Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: A list of Application Packages that the Batch service will deploy to the Compute Node before running the command line.
        type: array
      authenticationTokenSettings:
        $ref: '#/definitions/AuthenticationTokenSettings'
        description: 'If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.'
        title: The settings for an authentication token that the Task can use to perform Batch service operations.
      commandLine:
        description: 'The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the Job Manager Task.
        type: string
      constraints:
        $ref: '#/definitions/TaskConstraints'
        title: Constraints that apply to the Job Manager Task.
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn''t have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the Job Manager Task runs.
      displayName:
        description: It need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name of the Job Manager Task.
        type: string
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the Job Manager Task.
        type: array
      id:
        description: The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
        title: A string that uniquely identifies the Job Manager Task within the Job.
        type: string
      killJobOnCompletion:
        description: 'If true, when the Job Manager Task completes, the Batch service marks the Job as complete. If any Tasks are still running at this time (other than Job Release), those Tasks are terminated. If false, the completion of the Job Manager Task does not affect the Job status. In this case, you should either use the onAllTasksComplete attribute to terminate the Job, or have a client or user terminate the Job explicitly. An example of this is if the Job Manager creates a set of Tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control Job lifetime, and using the Job Manager Task only to create the Tasks for the Job (not to monitor progress), then it is important to set killJobOnCompletion to false.'
        title: Whether completion of the Job Manager Task signifies completion of the entire Job.
        type: boolean
      outputFiles:
        description: 'For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.'
        items:
          $ref: '#/definitions/OutputFile'
        title: A list of files that the Batch service will upload from the Compute Node after running the command line.
        type: array
      resourceFiles:
        description: 'Files listed under this element are located in the Task''s working directory. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download to the Compute Node before running the command line.
        type: array
      runExclusive:
        description: 'If true, no other Tasks will run on the same Node for as long as the Job Manager is running. If false, other Tasks can run simultaneously with the Job Manager on a Compute Node. The Job Manager Task counts normally against the Compute Node''s concurrent Task limit, so this is only relevant if the Compute Node allows multiple concurrent Tasks. The default value is true.'
        title: Whether the Job Manager Task requires exclusive use of the Compute Node where it runs.
        type: boolean
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task.'
        title: The user identity under which the Job Manager Task runs.
    required:
      - id
      - commandLine
    title: Specifies details of a Job Manager Task.
  JobNetworkConfiguration:
    properties:
      subnetId:
        description: 'The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes which will run Tasks from the Job. This can be up to the number of Compute Nodes in the Pool. The ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual Machine Contributor'' Role-Based Access Control (RBAC) role for the specified VNet so that Azure Batch service can schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication from the Azure Batch service. For Pools created with a Virtual Machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. Port 443 is also required to be open for outbound connections for communications to Azure Storage. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration'
        externalDocs:
          description: Setting up RBAC for Azure Batch VNETs
          url: 'https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor'
        title: The ARM resource identifier of the virtual network subnet which Compute Nodes running Tasks from the Job will join for the duration of the Task. This will only work with a VirtualMachineConfiguration Pool.
        type: string
    required:
      - subnetId
    title: The network configuration for the Job.
  JobPatchParameter:
    properties:
      constraints:
        $ref: '#/definitions/JobConstraints'
        description: 'If omitted, the existing execution constraints are left unchanged.'
        title: The execution constraints for the Job.
      metadata:
        description: 'If omitted, the existing Job metadata is left unchanged.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job as metadata.
        type: array
      onAllTasksComplete:
        $ref: '#/definitions/OnAllTasksComplete'
        description: 'If omitted, the completion behavior is left unchanged. You may not change the value from terminatejob to noaction - that is, once you have engaged automatic Job termination, you cannot turn it off again. If you try to do this, the request fails with an ''invalid property value'' error response; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        title: The action the Batch service should take when all Tasks in the Job are in the completed state.
      poolInfo:
        $ref: '#/definitions/PoolInformation'
        description: 'You may change the Pool for a Job only when the Job is disabled. The Patch Job call will fail if you include the poolInfo element and the Job is not disabled. If you specify an autoPoolSpecification in the poolInfo, only the keepAlive property of the autoPoolSpecification can be updated, and then only if the autoPoolSpecification has a poolLifetimeOption of Job (other job properties can be updated as normal). If omitted, the Job continues to run on its current Pool.'
        title: The Pool on which the Batch service runs the Job's Tasks.
      priority:
        description: 'Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the Job is left unchanged.'
        format: int32
        title: The priority of the Job.
        type: integer
    title: The set of changes to be made to a Job.
  JobPreparationAndReleaseTaskExecutionInformation:
    properties:
      jobPreparationTaskExecutionInfo:
        $ref: '#/definitions/JobPreparationTaskExecutionInformation'
        title: Information about the execution status of the Job Preparation Task on this Compute Node.
      jobReleaseTaskExecutionInfo:
        $ref: '#/definitions/JobReleaseTaskExecutionInformation'
        description: This property is set only if the Job Release Task has run on the Compute Node.
        title: Information about the execution status of the Job Release Task on this Compute Node.
      nodeId:
        title: The ID of the Compute Node to which this entry refers.
        type: string
      nodeUrl:
        title: The URL of the Compute Node to which this entry refers.
        type: string
      poolId:
        title: The ID of the Pool containing the Compute Node to which this entry refers.
        type: string
    title: The status of the Job Preparation and Job Release Tasks on a Compute Node.
  JobPreparationTask:
    description: 'You can use Job Preparation to prepare a Node to run Tasks for the Job. Activities commonly performed in Job Preparation include: Downloading common resource files used by all the Tasks in the Job. The Job Preparation Task can download these common resource files to the shared location on the Node. (AZ_BATCH_NODE_ROOT_DIR\shared), or starting a local service on the Node so that all Tasks of that Job can communicate with it. If the Job Preparation Task fails (that is, exhausts its retry count before exiting with exit code 0), Batch will not run Tasks of this Job on the Node. The Compute Node remains ineligible to run Tasks of this Job until it is reimaged. The Compute Node remains active and can be used for other Jobs. The Job Preparation Task can run multiple times on the same Node. Therefore, you should write the Job Preparation Task to handle re-execution. If the Node is rebooted, the Job Preparation Task is run again on the Compute Node before scheduling any other Task of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job Preparation Task did not previously complete. If the Node is reimaged, the Job Preparation Task is run again before scheduling any Task of the Job. Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing.'
    properties:
      commandLine:
        description: 'The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the Job Preparation Task.
        type: string
      constraints:
        $ref: '#/definitions/TaskConstraints'
        title: Constraints that apply to the Job Preparation Task.
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the Job Preparation Task runs.
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the Job Preparation Task.
        type: array
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of ''jobpreparation''. No other Task in the Job can have the same ID as the Job Preparation Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict).'
        title: A string that uniquely identifies the Job Preparation Task within the Job.
        type: string
      rerunOnNodeRebootAfterSuccess:
        description: 'The Job Preparation Task is always rerun if a Compute Node is reimaged, or if the Job Preparation Task did not complete (e.g. because the reboot occurred while the Task was running). Therefore, you should always write a Job Preparation Task to be idempotent and to behave correctly if run multiple times. The default value is true.'
        title: Whether the Batch service should rerun the Job Preparation Task after a Compute Node reboots.
        type: boolean
      resourceFiles:
        description: 'Files listed under this element are located in the Task''s working directory.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download to the Compute Node before running the command line.
        type: array
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task on Windows Compute Nodes, or a non-administrative user unique to the Pool on Linux Compute Nodes.'
        title: The user identity under which the Job Preparation Task runs.
      waitForSuccess:
        description: 'If true and the Job Preparation Task fails on a Node, the Batch service retries the Job Preparation Task up to its maximum retry count (as specified in the constraints element). If the Task has still not completed successfully after all retries, then the Batch service will not schedule Tasks of the Job to the Node. The Node remains active and eligible to run Tasks of other Jobs. If false, the Batch service will not wait for the Job Preparation Task to complete. In this case, other Tasks of the Job can start executing on the Compute Node while the Job Preparation Task is still running; and even if the Job Preparation Task fails, new Tasks will continue to be scheduled on the Compute Node. The default value is true.'
        title: Whether the Batch service should wait for the Job Preparation Task to complete successfully before scheduling any other Tasks of the Job on the Compute Node. A Job Preparation Task has completed successfully if it exits with exit code 0.
        type: boolean
    required:
      - commandLine
    title: A Job Preparation Task to run before any Tasks of the Job on any given Compute Node.
  JobPreparationTaskExecutionInformation:
    properties:
      containerInfo:
        $ref: '#/definitions/TaskContainerExecutionInformation'
        description: This property is set only if the Task runs in a container context.
        title: Information about the container under which the Task is executing.
      endTime:
        description: This property is set only if the Task is in the Completed state.
        format: date-time
        title: The time at which the Job Preparation Task completed.
        type: string
      exitCode:
        description: 'This parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated.'
        format: int32
        title: The exit code of the program specified on the Task command line.
        type: integer
      failureInfo:
        $ref: '#/definitions/TaskFailureInformation'
        description: This property is set only if the Task is in the completed state and encountered a failure.
        title: 'Information describing the Task failure, if any.'
      lastRetryTime:
        description: 'This property is set only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.'
        format: date-time
        title: The most recent time at which a retry of the Job Preparation Task started running.
        type: string
      result:
        $ref: '#/definitions/TaskExecutionResult'
        description: 'If the value is ''failed'', then the details of the failure can be found in the failureInfo property.'
        title: The result of the Task execution.
      retryCount:
        description: 'Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.'
        format: int32
        title: 'The number of times the Task has been retried by the Batch service. Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.'
        type: integer
      startTime:
        description: 'If the Task has been restarted or retried, this is the most recent time at which the Task started running.'
        format: date-time
        title: The time at which the Task started running.
        type: string
      state:
        enum:
          - running
          - completed
        title: The current state of the Job Preparation Task on the Compute Node.
        type: string
        x-ms-enum:
          modelAsString: false
          name: JobPreparationTaskState
          values:
            - description: The Task is currently running (including retrying).
              value: running
            - description: 'The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures).'
              value: completed
      taskRootDirectory:
        title: 'The root directory of the Job Preparation Task on the Compute Node. You can use this path to retrieve files created by the Task, such as log files.'
        type: string
      taskRootDirectoryUrl:
        title: The URL to the root directory of the Job Preparation Task on the Compute Node.
        type: string
    required:
      - startTime
      - retryCount
      - state
    title: Contains information about the execution of a Job Preparation Task on a Compute Node.
  JobReleaseTask:
    description: 'The Job Release Task runs when the Job ends, because of one of the following: The user calls the Terminate Job API, or the Delete Job API while the Job is still active, the Job''s maximum wall clock time constraint is reached, and the Job is still active, or the Job''s Job Manager Task completed, and the Job is configured to terminate when the Job Manager completes. The Job Release Task runs on each Node where Tasks of the Job have run and the Job Preparation Task ran and completed. If you reimage a Node after it has run the Job Preparation Task, and the Job ends without any further Tasks of the Job running on that Node (and hence the Job Preparation Task does not re-run), then the Job Release Task does not run on that Compute Node. If a Node reboots while the Job Release Task is still running, the Job Release Task runs again when the Compute Node starts up. The Job is not marked as complete until all Job Release Tasks have completed. The Job Release Task runs in the background. It does not occupy a scheduling slot; that is, it does not count towards the maxTasksPerNode limit specified on the Pool.'
    properties:
      commandLine:
        description: 'The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the Job Release Task.
        type: string
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the Job Release Task runs.
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the Job Release Task.
        type: array
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of ''jobrelease''. No other Task in the Job can have the same ID as the Job Release Task. If you try to submit a Task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict).'
        title: A string that uniquely identifies the Job Release Task within the Job.
        type: string
      maxWallClockTime:
        format: duration
        title: 'The maximum elapsed time that the Job Release Task may run on a given Compute Node, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes. You may not specify a timeout longer than 15 minutes. If you do, the Batch service rejects it with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        type: string
      resourceFiles:
        description: Files listed under this element are located in the Task's working directory.
        items:
          $ref: '#/definitions/ResourceFile'
        title: 'A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        type: array
      retentionTime:
        description: 'The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted.'
        format: duration
        title: 'The minimum time to retain the Task directory for the Job Release Task on the Compute Node. After this time, the Batch service may delete the Task directory and all its contents.'
        type: string
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task.'
        title: The user identity under which the Job Release Task runs.
    required:
      - commandLine
    title: A Job Release Task to run on Job completion on any Compute Node where the Job has run.
  JobReleaseTaskExecutionInformation:
    properties:
      containerInfo:
        $ref: '#/definitions/TaskContainerExecutionInformation'
        description: This property is set only if the Task runs in a container context.
        title: Information about the container under which the Task is executing.
      endTime:
        description: This property is set only if the Task is in the Completed state.
        format: date-time
        title: The time at which the Job Release Task completed.
        type: string
      exitCode:
        description: 'This parameter is returned only if the Task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the Compute Node operating system, such as when a process is forcibly terminated.'
        format: int32
        title: The exit code of the program specified on the Task command line.
        type: integer
      failureInfo:
        $ref: '#/definitions/TaskFailureInformation'
        description: This property is set only if the Task is in the completed state and encountered a failure.
        title: 'Information describing the Task failure, if any.'
      result:
        $ref: '#/definitions/TaskExecutionResult'
        description: 'If the value is ''failed'', then the details of the failure can be found in the failureInfo property.'
        title: The result of the Task execution.
      startTime:
        description: 'If the Task has been restarted or retried, this is the most recent time at which the Task started running.'
        format: date-time
        title: The time at which the Task started running.
        type: string
      state:
        enum:
          - running
          - completed
        title: The current state of the Job Release Task on the Compute Node.
        type: string
        x-ms-enum:
          modelAsString: false
          name: JobReleaseTaskState
          values:
            - description: The Task is currently running (including retrying).
              value: running
            - description: 'The Task has exited with exit code 0, or the Task has exhausted its retry limit, or the Batch service was unable to start the Task due to Task preparation errors (such as resource file download failures).'
              value: completed
      taskRootDirectory:
        title: 'The root directory of the Job Release Task on the Compute Node. You can use this path to retrieve files created by the Task, such as log files.'
        type: string
      taskRootDirectoryUrl:
        title: The URL to the root directory of the Job Release Task on the Compute Node.
        type: string
    required:
      - startTime
      - state
    title: Contains information about the execution of a Job Release Task on a Compute Node.
  JobScheduleAddParameter:
    properties:
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the schedule.
        type: string
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case).'
        title: A string that uniquely identifies the schedule within the Account.
        type: string
      jobSpecification:
        $ref: '#/definitions/JobSpecification'
        title: The details of the Jobs to be created on this schedule.
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the schedule as metadata.
        type: array
      schedule:
        $ref: '#/definitions/Schedule'
        title: The schedule according to which Jobs will be created.
    required:
      - id
      - schedule
      - jobSpecification
    title: A Job Schedule that allows recurring Jobs by specifying when to run Jobs and a specification used to create each Job.
  JobScheduleExecutionInformation:
    properties:
      endTime:
        description: This property is set only if the Job Schedule is in the completed state.
        format: date-time
        title: The time at which the schedule ended.
        type: string
      nextRunTime:
        description: 'This property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no Job will be created at nextRunTime unless the Job is enabled before then.'
        format: date-time
        title: The next time at which a Job will be created under this schedule.
        type: string
      recentJob:
        $ref: '#/definitions/RecentJob'
        description: This property is present only if the at least one Job has run under the schedule.
        title: Information about the most recent Job under the Job Schedule.
    title: Contains information about Jobs that have been and will be run under a Job Schedule.
  JobSchedulePatchParameter:
    properties:
      jobSpecification:
        $ref: '#/definitions/JobSpecification'
        description: Updates affect only Jobs that are started after the update has taken place. Any currently active Job continues with the older specification.
        title: The details of the Jobs to be created on this schedule.
      metadata:
        description: 'If you do not specify this element, existing metadata is left unchanged.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job Schedule as metadata.
        type: array
      schedule:
        $ref: '#/definitions/Schedule'
        description: 'If you do not specify this element, the existing schedule is left unchanged.'
        title: The schedule according to which Jobs will be created.
    title: The set of changes to be made to a Job Schedule.
  JobScheduleState:
    enum:
      - active
      - completed
      - disabled
      - terminating
      - deleting
    title: The state of the Job Schedule.
    type: string
    x-ms-enum:
      modelAsString: false
      name: JobScheduleState
      values:
        - description: The Job Schedule is active and will create Jobs as per its schedule.
          value: active
        - description: 'The Job Schedule has terminated, either by reaching its end time or by the user terminating it explicitly.'
          value: completed
        - description: 'The user has disabled the Job Schedule. The scheduler will not initiate any new Jobs will on this schedule, but any existing active Job will continue to run.'
          value: disabled
        - description: 'The Job Schedule has no more work to do, or has been explicitly terminated by the user, but the termination operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, nor is any existing Job active.'
          value: terminating
        - description: 'The user has requested that the Job Schedule be deleted, but the delete operation is still in progress. The scheduler will not initiate any new Jobs for this Job Schedule, and will delete any existing Jobs and Tasks under the Job Schedule, including any active Job. The Job Schedule will be deleted when all Jobs and Tasks under the Job Schedule have been deleted.'
          value: deleting
  JobScheduleStatistics:
    properties:
      kernelCPUTime:
        format: duration
        title: The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in all Jobs created under the schedule.
        type: string
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      numFailedTasks:
        format: int64
        title: The total number of Tasks that failed during the given time range in Jobs created under the schedule. A Task fails if it exhausts its maximum retry count without returning exit code 0.
        type: integer
      numSucceededTasks:
        format: int64
        title: The total number of Tasks successfully completed during the given time range in Jobs created under the schedule. A Task completes successfully if it returns exit code 0.
        type: integer
      numTaskRetries:
        format: int64
        title: The total number of retries during the given time range on all Tasks in all Jobs created under the schedule.
        type: integer
      readIOGiB:
        format: double
        title: The total gibibytes read from disk by all Tasks in all Jobs created under the schedule.
        type: number
      readIOps:
        format: int64
        title: The total number of disk read operations made by all Tasks in all Jobs created under the schedule.
        type: integer
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
      url:
        title: The URL of the statistics.
        type: string
      userCPUTime:
        format: duration
        title: The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in all Jobs created under the schedule.
        type: string
      waitTime:
        description: This value is only reported in the Account lifetime statistics; it is not included in the Job statistics.
        format: duration
        title: 'The total wait time of all Tasks in all Jobs created under the schedule. The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.)'
        type: string
      wallClockTime:
        description: 'The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If a Task was retried, this includes the wall clock time of all the Task retries.'
        format: duration
        title: The total wall clock time of all the Tasks in all the Jobs created under the schedule.
        type: string
      writeIOGiB:
        format: double
        title: The total gibibytes written to disk by all Tasks in all Jobs created under the schedule.
        type: number
      writeIOps:
        format: int64
        title: The total number of disk write operations made by all Tasks in all Jobs created under the schedule.
        type: integer
    required:
      - url
      - startTime
      - lastUpdateTime
      - userCPUTime
      - kernelCPUTime
      - wallClockTime
      - readIOps
      - writeIOps
      - readIOGiB
      - writeIOGiB
      - numSucceededTasks
      - numFailedTasks
      - numTaskRetries
      - waitTime
    title: Resource usage statistics for a Job Schedule.
  JobScheduleUpdateParameter:
    properties:
      jobSpecification:
        $ref: '#/definitions/JobSpecification'
        description: Updates affect only Jobs that are started after the update has taken place. Any currently active Job continues with the older specification.
        title: Details of the Jobs to be created on this schedule.
      metadata:
        description: 'If you do not specify this element, it takes the default value of an empty list; in effect, any existing metadata is deleted.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job Schedule as metadata.
        type: array
      schedule:
        $ref: '#/definitions/Schedule'
        description: 'If you do not specify this element, it is equivalent to passing the default schedule: that is, a single Job scheduled to run immediately.'
        title: The schedule according to which Jobs will be created.
    required:
      - schedule
      - jobSpecification
    title: The set of changes to be made to a Job Schedule.
  JobSchedulingError:
    properties:
      category:
        $ref: '#/definitions/ErrorCategory'
        title: The category of the Job scheduling error.
      code:
        title: An identifier for the Job scheduling error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        items:
          $ref: '#/definitions/NameValuePair'
        title: A list of additional error details related to the scheduling error.
        type: array
      message:
        title: 'A message describing the Job scheduling error, intended to be suitable for display in a user interface.'
        type: string
    required:
      - category
    title: An error encountered by the Batch service when scheduling a Job.
  JobSpecification:
    properties:
      commonEnvironmentSettings:
        description: Individual Tasks can override an environment setting specified here by specifying the same setting name with a different value.
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: 'A list of common environment variable settings. These environment variables are set for all Tasks in Jobs created under this schedule (including the Job Manager, Job Preparation and Job Release Tasks).'
        type: array
      constraints:
        $ref: '#/definitions/JobConstraints'
        title: The execution constraints for Jobs created under this schedule.
      displayName:
        description: The name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for Jobs created under this schedule.
        type: string
      jobManagerTask:
        $ref: '#/definitions/JobManagerTask'
        description: 'If the Job does not specify a Job Manager Task, the user must explicitly add Tasks to the Job using the Task API. If the Job does specify a Job Manager Task, the Batch service creates the Job Manager Task when the Job is created, and will try to schedule the Job Manager Task before scheduling other Tasks in the Job.'
        title: The details of a Job Manager Task to be launched when a Job is started under this schedule.
      jobPreparationTask:
        $ref: '#/definitions/JobPreparationTask'
        description: 'If a Job has a Job Preparation Task, the Batch service will run the Job Preparation Task on a Node before starting any Tasks of that Job on that Compute Node.'
        title: The Job Preparation Task for Jobs created under this schedule.
      jobReleaseTask:
        $ref: '#/definitions/JobReleaseTask'
        description: 'The primary purpose of the Job Release Task is to undo changes to Nodes made by the Job Preparation Task. Example activities include deleting local files, or shutting down services that were started as part of Job preparation. A Job Release Task cannot be specified without also specifying a Job Preparation Task for the Job. The Batch service runs the Job Release Task on the Compute Nodes that have run the Job Preparation Task.'
        title: The Job Release Task for Jobs created under this schedule.
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with each Job created under this schedule as metadata.
        type: array
      networkConfiguration:
        $ref: '#/definitions/JobNetworkConfiguration'
        title: The network configuration for the Job.
      onAllTasksComplete:
        $ref: '#/definitions/OnAllTasksComplete'
        description: 'Note that if a Job contains no Tasks, then all Tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic Job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the Job properties to set onAllTasksComplete to terminatejob once you have finished adding Tasks. The default is noaction.'
        title: The action the Batch service should take when all Tasks in a Job created under this schedule are in the completed state.
      onTaskFailure:
        $ref: '#/definitions/OnTaskFailure'
        description: The default is noaction.
        title: 'The action the Batch service should take when any Task fails in a Job created under this schedule. A Task is considered to have failed if it have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error.'
      poolInfo:
        $ref: '#/definitions/PoolInformation'
        title: The Pool on which the Batch service runs the Tasks of Jobs created under this schedule.
      priority:
        description: 'Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all Jobs under the Job Schedule. You can update a Job''s priority after it has been created using by using the update Job API.'
        format: int32
        title: The priority of Jobs created under this schedule.
        type: integer
      usesTaskDependencies:
        title: Whether Tasks in the Job can define dependencies on each other. The default is false.
        type: boolean
    required:
      - poolInfo
    title: Specifies details of the Jobs to be created on a schedule.
  JobState:
    enum:
      - active
      - disabling
      - disabled
      - enabling
      - terminating
      - completed
      - deleting
    title: The state of the Job.
    type: string
    x-ms-enum:
      modelAsString: false
      name: JobState
      values:
        - description: The Job is available to have Tasks scheduled.
          value: active
        - description: 'A user has requested that the Job be disabled, but the disable operation is still in progress (for example, waiting for Tasks to terminate).'
          value: disabling
        - description: 'A user has disabled the Job. No Tasks are running, and no new Tasks will be scheduled.'
          value: disabled
        - description: 'A user has requested that the Job be enabled, but the enable operation is still in progress.'
          value: enabling
        - description: 'The Job is about to complete, either because a Job Manager Task has completed or because the user has terminated the Job, but the terminate operation is still in progress (for example, because Job Release Tasks are running).'
          value: terminating
        - description: 'All Tasks have terminated, and the system will not accept any more Tasks or any further changes to the Job.'
          value: completed
        - description: 'A user has requested that the Job be deleted, but the delete operation is still in progress (for example, because the system is still terminating running Tasks).'
          value: deleting
  JobStatistics:
    properties:
      kernelCPUTime:
        format: duration
        title: The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in the Job.
        type: string
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      numFailedTasks:
        description: A Task fails if it exhausts its maximum retry count without returning exit code 0.
        format: int64
        title: The total number of Tasks in the Job that failed during the given time range.
        type: integer
      numSucceededTasks:
        description: A Task completes successfully if it returns exit code 0.
        format: int64
        title: The total number of Tasks successfully completed in the Job during the given time range.
        type: integer
      numTaskRetries:
        format: int64
        title: The total number of retries on all the Tasks in the Job during the given time range.
        type: integer
      readIOGiB:
        format: double
        title: The total amount of data in GiB read from disk by all Tasks in the Job.
        type: number
      readIOps:
        format: int64
        title: The total number of disk read operations made by all Tasks in the Job.
        type: integer
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
      url:
        title: The URL of the statistics.
        type: string
      userCPUTime:
        format: duration
        title: The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by all Tasks in the Job.
        type: string
      waitTime:
        description: 'The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.) This value is only reported in the Account lifetime statistics; it is not included in the Job statistics.'
        format: duration
        title: The total wait time of all Tasks in the Job.
        type: string
      wallClockTime:
        description: ' The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If a Task was retried, this includes the wall clock time of all the Task retries.'
        format: duration
        title: The total wall clock time of all Tasks in the Job.
        type: string
      writeIOGiB:
        format: double
        title: The total amount of data in GiB written to disk by all Tasks in the Job.
        type: number
      writeIOps:
        format: int64
        title: The total number of disk write operations made by all Tasks in the Job.
        type: integer
    required:
      - url
      - startTime
      - lastUpdateTime
      - userCPUTime
      - kernelCPUTime
      - wallClockTime
      - readIOps
      - writeIOps
      - readIOGiB
      - writeIOGiB
      - numSucceededTasks
      - numFailedTasks
      - numTaskRetries
      - waitTime
    title: Resource usage statistics for a Job.
  JobTerminateParameter:
    properties:
      terminateReason:
        title: The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'.
        type: string
    title: Options when terminating a Job.
  JobUpdateParameter:
    properties:
      constraints:
        $ref: '#/definitions/JobConstraints'
        description: 'If omitted, the constraints are cleared.'
        title: The execution constraints for the Job.
      metadata:
        description: 'If omitted, it takes the default value of an empty list; in effect, any existing metadata is deleted.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Job as metadata.
        type: array
      onAllTasksComplete:
        $ref: '#/definitions/OnAllTasksComplete'
        description: 'If omitted, the completion behavior is set to noaction. If the current value is terminatejob, this is an error because a Job''s completion behavior may not be changed from terminatejob to noaction. You may not change the value from terminatejob to noaction - that is, once you have engaged automatic Job termination, you cannot turn it off again. If you try to do this, the request fails and Batch returns status code 400 (Bad Request) and an ''invalid property value'' error response. If you do not specify this element in a PUT request, it is equivalent to passing noaction. This is an error if the current value is terminatejob.'
        title: The action the Batch service should take when all Tasks in the Job are in the completed state.
      poolInfo:
        $ref: '#/definitions/PoolInformation'
        description: 'You may change the Pool for a Job only when the Job is disabled. The Update Job call will fail if you include the poolInfo element and the Job is not disabled. If you specify an autoPoolSpecification in the poolInfo, only the keepAlive property of the autoPoolSpecification can be updated, and then only if the autoPoolSpecification has a poolLifetimeOption of Job (other job properties can be updated as normal).'
        title: The Pool on which the Batch service runs the Job's Tasks.
      priority:
        description: 'Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, it is set to the default value 0.'
        format: int32
        title: The priority of the Job.
        type: integer
    required:
      - poolInfo
    title: The set of changes to be made to a Job.
  LinuxUserConfiguration:
    properties:
      gid:
        description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
        format: int32
        title: The group ID for the user Account.
        type: integer
      sshPrivateKey:
        description: 'The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool''s enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user''s .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user''s .ssh directory is done).'
        title: The SSH private key for the user Account.
        type: string
      uid:
        description: The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
        format: int32
        title: The user ID of the user Account.
        type: integer
    title: Properties used to create a user Account on a Linux Compute Node.
  MetadataItem:
    description: The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
    properties:
      name:
        title: The name of the metadata item.
        type: string
      value:
        title: The value of the metadata item.
        type: string
    required:
      - name
      - value
    title: A name-value pair associated with a Batch service resource.
  MountConfiguration:
    properties:
      azureBlobFileSystemConfiguration:
        $ref: '#/definitions/AzureBlobFileSystemConfiguration'
        description: This property is mutually exclusive with all other properties.
        title: The Azure Storage Container to mount using blob FUSE on each node.
      azureFileShareConfiguration:
        $ref: '#/definitions/AzureFileShareConfiguration'
        description: This property is mutually exclusive with all other properties.
        title: The Azure File Share to mount on each node.
      cifsMountConfiguration:
        $ref: '#/definitions/CIFSMountConfiguration'
        description: This property is mutually exclusive with all other properties.
        title: The CIFS/SMB file system to mount on each node.
      nfsMountConfiguration:
        $ref: '#/definitions/NFSMountConfiguration'
        description: This property is mutually exclusive with all other properties.
        title: The NFS file system to mount on each node.
    title: The file system to mount on each node.
  MultiInstanceSettings:
    description: 'Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI case, if any of the subtasks fail (for example due to exiting with a non-zero exit code) the entire multi-instance Task fails. The multi-instance Task is then terminated and retried, up to its retry limit.'
    properties:
      commonResourceFiles:
        description: 'The difference between common resource files and Task resource files is that common resource files are downloaded for all subtasks including the primary, whereas Task resource files are downloaded only for the primary. Also note that these resource files are not downloaded to the Task working directory, but instead are downloaded to the Task root directory (one directory above the working directory).  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download before running the coordination command line.
        type: array
      coordinationCommandLine:
        description: A typical coordination command line launches a background service and verifies that the service is ready to process inter-node messages.
        title: The command line to run on all the Compute Nodes to enable them to coordinate when the primary runs the main Task command.
        type: string
      numberOfInstances:
        description: 'If omitted, the default is 1.'
        format: int32
        title: The number of Compute Nodes required by the Task.
        type: integer
    required:
      - coordinationCommandLine
    title: Settings which specify how to run a multi-instance Task.
  NFSMountConfiguration:
    properties:
      mountOptions:
        description: These are 'net use' options in Windows and 'mount' options in Linux.
        title: Additional command line options to pass to the mount command.
        type: string
      relativeMountPath:
        description: 'All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.'
        title: The relative path on the compute node where the file system will be mounted
        type: string
      source:
        title: The URI of the file system to mount.
        type: string
    required:
      - source
      - relativeMountPath
    title: Information used to connect to an NFS file system.
  NameValuePair:
    properties:
      name:
        title: The name in the name-value pair.
        type: string
      value:
        title: The value in the name-value pair.
        type: string
    title: Represents a name-value pair.
  NetworkConfiguration:
    description: The network configuration for a Pool.
    properties:
      dynamicVNetAssignmentScope:
        enum:
          - none
          - job
        title: The scope of dynamic vnet assignment.
        type: string
        x-ms-enum:
          modelAsString: false
          name: DynamicVNetAssignmentScope
          values:
            - description: No dynamic VNet assignment is enabled.
              value: none
            - description: Dynamic VNet assignment is done per-job.
              value: job
      endpointConfiguration:
        $ref: '#/definitions/PoolEndpointConfiguration'
        description: Pool endpoint configuration is only supported on Pools with the virtualMachineConfiguration property.
        title: The configuration for endpoints on Compute Nodes in the Batch Pool.
      publicIPs:
        description: 'The number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.'
        items:
          type: string
        title: The list of public IPs which the Batch service will use when provisioning Compute Nodes.
        type: array
      subnetId:
        description: 'The virtual network must be in the same region and subscription as the Azure Batch Account. The specified subnet should have enough free IP addresses to accommodate the number of Compute Nodes in the Pool. If the subnet doesn''t have enough free IP addresses, the Pool will partially allocate Nodes, and a resize error will occur. The ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual Machine Contributor'' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule Tasks on the Nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the Nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the Compute Nodes to unusable. For Pools created with virtualMachineConfiguration only ARM virtual networks (''Microsoft.Network/virtualNetworks'') are supported, but for Pools created with cloudServiceConfiguration both ARM and classic virtual networks are supported. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For Pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For Pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration'
        externalDocs:
          description: Setting up RBAC for Azure Batch VNETs
          url: 'https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor'
        title: 'The ARM resource identifier of the virtual network subnet which the Compute Nodes of the Pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.'
        type: string
  NetworkSecurityGroupRule:
    properties:
      access:
        enum:
          - allow
          - deny
        title: 'The action that should be taken for a specified IP address, subnet range or tag.'
        type: string
        x-ms-enum:
          modelAsString: false
          name: NetworkSecurityGroupRuleAccess
          values:
            - description: Allow access.
              value: allow
            - description: Deny access.
              value: deny
      priority:
        description: 'Priorities within a Pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.'
        format: int32
        title: The priority for this rule.
        type: integer
      sourceAddressPrefix:
        description: 'Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.'
        title: The source address prefix or tag to match for the rule.
        type: string
      sourcePortRanges:
        description: 'Valid values are ''*'' (for all ports 0 - 65535), a specific port (i.e. 22), or a port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each entry in this collection must not overlap any other entry (either a range or an individual port). If any other values are provided the request fails with HTTP status code 400. The default value is ''*''.'
        items:
          type: string
        title: The source port ranges to match for the rule.
        type: array
    required:
      - priority
      - access
      - sourceAddressPrefix
    title: A network security group rule to apply to an inbound endpoint.
  NodeAgentInformation:
    description: The Batch Compute Node agent is a program that runs on each Compute Node in the Pool and provides Batch capability on the Compute Node.
    properties:
      lastUpdateTime:
        description: This is the most recent time that the Compute Node agent was updated to a new version.
        format: date-time
        title: The time when the Compute Node agent was updated on the Compute Node.
        type: string
      version:
        description: 'This version number can be checked against the Compute Node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.'
        title: The version of the Batch Compute Node agent running on the Compute Node.
        type: string
    required:
      - version
      - lastUpdateTime
    title: Information about the Compute Node agent.
  NodeCounts:
    properties:
      creating:
        format: int32
        title: The number of Compute Nodes in the creating state.
        type: integer
      idle:
        format: int32
        title: The number of Compute Nodes in the idle state.
        type: integer
      leavingPool:
        format: int32
        title: The number of Compute Nodes in the leavingPool state.
        type: integer
      offline:
        format: int32
        title: The number of Compute Nodes in the offline state.
        type: integer
      preempted:
        format: int32
        title: The number of Compute Nodes in the preempted state.
        type: integer
      rebooting:
        format: int32
        title: The count of Compute Nodes in the rebooting state.
        type: integer
      reimaging:
        format: int32
        title: The number of Compute Nodes in the reimaging state.
        type: integer
      running:
        format: int32
        title: The number of Compute Nodes in the running state.
        type: integer
      startTaskFailed:
        format: int32
        title: The number of Compute Nodes in the startTaskFailed state.
        type: integer
      starting:
        format: int32
        title: The number of Compute Nodes in the starting state.
        type: integer
      total:
        format: int32
        title: The total number of Compute Nodes.
        type: integer
      unknown:
        format: int32
        title: The number of Compute Nodes in the unknown state.
        type: integer
      unusable:
        format: int32
        title: The number of Compute Nodes in the unusable state.
        type: integer
      waitingForStartTask:
        format: int32
        title: The number of Compute Nodes in the waitingForStartTask state.
        type: integer
    required:
      - creating
      - idle
      - offline
      - preempted
      - rebooting
      - reimaging
      - running
      - starting
      - startTaskFailed
      - leavingPool
      - unknown
      - unusable
      - waitingForStartTask
      - total
    title: The number of Compute Nodes in each Compute Node state.
  NodeDisableSchedulingParameter:
    properties:
      nodeDisableSchedulingOption:
        description: The default value is requeue.
        enum:
          - requeue
          - terminate
          - taskcompletion
        title: What to do with currently running Tasks when disabling Task scheduling on the Compute Node.
        type: string
        x-ms-enum:
          modelAsString: false
          name: DisableComputeNodeSchedulingOption
          values:
            - description: 'Terminate running Task processes and requeue the Tasks. The Tasks may run again on other Compute Nodes, or when Task scheduling is re-enabled on this Compute Node. Enter offline state as soon as Tasks have been terminated.'
              value: requeue
            - description: 'Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Enter offline state as soon as Tasks have been terminated.'
              value: terminate
            - description: Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Enter offline state when all Tasks have completed.
              name: taskCompletion
              value: taskcompletion
    title: Options for disabling scheduling on a Compute Node.
  NodeFile:
    properties:
      isDirectory:
        title: Whether the object represents a directory.
        type: boolean
      name:
        title: The file path.
        type: string
      properties:
        $ref: '#/definitions/FileProperties'
        title: The file properties.
      url:
        title: The URL of the file.
        type: string
    title: Information about a file or directory on a Compute Node.
  NodeFileListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/NodeFile'
        title: The list of files.
        type: array
    title: 'The result of listing the files on a Compute Node, or the files associated with a Task on a Compute Node.'
  NodeRebootParameter:
    properties:
      nodeRebootOption:
        description: The default value is requeue.
        enum:
          - requeue
          - terminate
          - taskcompletion
          - retaineddata
        title: When to reboot the Compute Node and what to do with currently running Tasks.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ComputeNodeRebootOption
          values:
            - description: Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Restart the Compute Node as soon as Tasks have been terminated.
              value: requeue
            - description: 'Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Restart the Compute Node as soon as Tasks have been terminated.'
              value: terminate
            - description: Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Restart the Compute Node when all Tasks have completed.
              name: taskCompletion
              value: taskcompletion
            - description: 'Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Restart the Compute Node when all Task retention periods have expired.'
              name: retainedData
              value: retaineddata
    title: Options for rebooting a Compute Node.
  NodeReimageParameter:
    properties:
      nodeReimageOption:
        description: The default value is requeue.
        enum:
          - requeue
          - terminate
          - taskcompletion
          - retaineddata
        title: When to reimage the Compute Node and what to do with currently running Tasks.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ComputeNodeReimageOption
          values:
            - description: Terminate running Task processes and requeue the Tasks. The Tasks will run again when a Compute Node is available. Reimage the Compute Node as soon as Tasks have been terminated.
              value: requeue
            - description: 'Terminate running Tasks. The Tasks will be completed with failureInfo indicating that they were terminated, and will not run again. Reimage the Compute Node as soon as Tasks have been terminated.'
              value: terminate
            - description: Allow currently running Tasks to complete. Schedule no new Tasks while waiting. Reimage the Compute Node when all Tasks have completed.
              name: taskCompletion
              value: taskcompletion
            - description: 'Allow currently running Tasks to complete, then wait for all Task data retention periods to expire. Schedule no new Tasks while waiting. Reimage the Compute Node when all Task retention periods have expired.'
              name: retainedData
              value: retaineddata
    title: Options for reimaging a Compute Node.
  NodeRemoveParameter:
    properties:
      nodeDeallocationOption:
        $ref: '#/definitions/ComputeNodeDeallocationOption'
        description: The default value is requeue.
        title: Determines what to do with a Compute Node and its running task(s) after it has been selected for deallocation.
      nodeList:
        items:
          type: string
        maxItems: 100
        title: A list containing the IDs of the Compute Nodes to be removed from the specified Pool.
        type: array
      resizeTimeout:
        description: 'The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for removal of Compute Nodes to the Pool.
        type: string
    required:
      - nodeList
    title: Options for removing Compute Nodes from a Pool.
  NodeUpdateUserParameter:
    properties:
      expiryTime:
        description: 'If omitted, the default is 1 day from the current time. For Linux Compute Nodes, the expiryTime has a precision up to a day.'
        format: date-time
        title: The time at which the Account should expire.
        type: string
      password:
        description: 'The password is required for Windows Compute Nodes (those created with ''cloudServiceConfiguration'', or created with ''virtualMachineConfiguration'' using a Windows Image reference). For Linux Compute Nodes, the password can optionally be specified along with the sshPublicKey property. If omitted, any existing password is removed.'
        title: The password of the Account.
        type: string
      sshPublicKey:
        description: 'The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux Compute Nodes. If this is specified for a Windows Compute Node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If omitted, any existing SSH public key is removed.'
        title: The SSH public key that can be used for remote login to the Compute Node.
        type: string
    title: The set of changes to be made to a user Account on a Compute Node.
  OnAllTasksComplete:
    enum:
      - noaction
      - terminatejob
    title: The action the Batch service should take when all Tasks in the Job are in the completed state.
    type: string
    x-ms-enum:
      modelAsString: false
      name: OnAllTasksComplete
      values:
        - description: Do nothing. The Job remains active unless terminated or disabled by some other means.
          name: noAction
          value: noaction
        - description: Terminate the Job. The Job's terminateReason is set to 'AllTasksComplete'.
          name: terminateJob
          value: terminatejob
  OnTaskFailure:
    description: 'A Task is considered to have failed if has a failureInfo. A failureInfo is set if the Task completes with a non-zero exit code after exhausting its retry count, or if there was an error starting the Task, for example due to a resource file download error. The default is noaction.'
    enum:
      - noaction
      - performexitoptionsjobaction
    title: The action the Batch service should take when any Task in the Job fails.
    type: string
    x-ms-enum:
      modelAsString: false
      name: OnTaskFailure
      values:
        - description: Do nothing. The Job remains active unless terminated or disabled by some other means.
          name: noAction
          value: noaction
        - description: 'Take the action associated with the Task exit condition in the Task''s exitConditions collection. (This may still result in no action being taken, if that is what the Task specifies.)'
          name: performExitOptionsJobAction
          value: performexitoptionsjobaction
  OutputFile:
    properties:
      destination:
        $ref: '#/definitions/OutputFileDestination'
        title: The destination for the output file(s).
      filePattern:
        description: 'Both relative and absolute paths are supported. Relative paths are relative to the Task working directory. The following wildcards are supported: * matches 0 or more characters (for example pattern abc* would match abc or abcdef), ** matches any directory, ? matches any single character, [abc] matches one character in the brackets, and [a-c] matches one character in the range. Brackets can include a negation to match any character not specified (for example [!abc] matches any character but a, b, or c). If a file name starts with "." it is ignored by default but may be matched by specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple example: **\*.txt matches any file that does not start in ''.'' and ends with .txt in the Task working directory or any subdirectory. If the filename contains a wildcard character it can be escaped using brackets (for example abc[*] would match a file named abc*). Note that both \ and / are treated as directory separators on Windows, but only / is on Linux. Environment variables (%var% on Windows or $var on Linux) are expanded prior to the pattern being applied.'
        title: A pattern indicating which file(s) to upload.
        type: string
      uploadOptions:
        $ref: '#/definitions/OutputFileUploadOptions'
        title: 'Additional options for the upload operation, including under what conditions to perform the upload.'
    required:
      - filePattern
      - destination
      - uploadOptions
    title: A specification for uploading files from an Azure Batch Compute Node to another location after the Batch service has finished executing the Task process.
  OutputFileBlobContainerDestination:
    properties:
      containerUrl:
        description: The URL must include a Shared Access Signature (SAS) granting write permissions to the container.
        title: The URL of the container within Azure Blob Storage to which to upload the file(s).
        type: string
      path:
        description: 'If filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name.'
        title: The destination blob or virtual directory within the Azure Storage container.
        type: string
    required:
      - containerUrl
    title: Specifies a file upload destination within an Azure blob storage container.
  OutputFileDestination:
    properties:
      container:
        $ref: '#/definitions/OutputFileBlobContainerDestination'
        title: A location in Azure blob storage to which files are uploaded.
    title: The destination to which a file should be uploaded.
  OutputFileUploadCondition:
    enum:
      - tasksuccess
      - taskfailure
      - taskcompletion
    title: The conditions under which a Task output file or set of files should be uploaded.
    type: string
    x-ms-enum:
      modelAsString: false
      name: OutputFileUploadCondition
      values:
        - description: Upload the file(s) only after the Task process exits with an exit code of 0.
          name: taskSuccess
          value: tasksuccess
        - description: Upload the file(s) only after the Task process exits with a nonzero exit code.
          name: taskFailure
          value: taskfailure
        - description: 'Upload the file(s) after the Task process exits, no matter what the exit code was.'
          name: taskCompletion
          value: taskcompletion
  OutputFileUploadOptions:
    properties:
      uploadCondition:
        $ref: '#/definitions/OutputFileUploadCondition'
        description: The default is taskcompletion.
        title: The conditions under which the Task output file or set of files should be uploaded.
    required:
      - uploadCondition
    title: 'Details about an output file upload operation, including under what conditions to perform the upload.'
  PoolAddParameter:
    properties:
      applicationLicenses:
        description: 'The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail.'
        items:
          type: string
        title: The list of application licenses the Batch service will make available on each Compute Node in the Pool.
        type: array
      applicationPackageReferences:
        description: 'Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: The list of Packages to be installed on each Compute Node in the Pool.
        type: array
      autoScaleEvaluationInterval:
        description: 'The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The time interval at which to automatically adjust the Pool size according to the autoscale formula.
        type: string
      autoScaleFormula:
        description: 'This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see ''Automatically scale Compute Nodes in an Azure Batch Pool'' (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).'
        title: A formula for the desired number of Compute Nodes in the Pool.
        type: string
      certificateReferences:
        description: 'For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: The list of Certificates to be installed on each Compute Node in the Pool.
        type: array
      cloudServiceConfiguration:
        $ref: '#/definitions/CloudServiceConfiguration'
        description: This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
        title: The cloud service configuration for the Pool.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the Pool.
        type: string
      enableAutoScale:
        description: 'If false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the Pool automatically resizes according to the formula. The default value is false.'
        title: Whether the Pool size should automatically adjust over time.
        type: boolean
      enableInterNodeCommunication:
        description: Enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false.
        title: Whether the Pool permits direct communication between Compute Nodes.
        type: boolean
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two Pool IDs within an Account that differ only by case).'
        title: A string that uniquely identifies the Pool within the Account.
        type: string
      maxTasksPerNode:
        description: The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
        format: int32
        title: The maximum number of Tasks that can run concurrently on a single Compute Node in the Pool.
        type: integer
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Pool as metadata.
        type: array
      mountConfiguration:
        description: 'Mount the storage using Azure fileshare, NFS, CIFS or Blobfuse based file system.'
        items:
          $ref: '#/definitions/MountConfiguration'
        title: Mount storage using specified file system for the entire lifetime of the pool.
        type: array
      networkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
        title: The network configuration for the Pool.
      resizeTimeout:
        description: 'This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for allocation of Compute Nodes to the Pool.
        type: string
      startTask:
        $ref: '#/definitions/StartTask'
        description: The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted.
        title: A Task specified to run on each Compute Node as it joins the Pool.
      targetDedicatedNodes:
        description: 'This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.'
        format: int32
        title: The desired number of dedicated Compute Nodes in the Pool.
        type: integer
      targetLowPriorityNodes:
        description: 'This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.'
        format: int32
        title: The desired number of low-priority Compute Nodes in the Pool.
        type: integer
      taskSchedulingPolicy:
        $ref: '#/definitions/TaskSchedulingPolicy'
        description: 'If not specified, the default is spread.'
        title: How Tasks are distributed across Compute Nodes in a Pool.
      userAccounts:
        items:
          $ref: '#/definitions/UserAccount'
        title: The list of user Accounts to be created on each Compute Node in the Pool.
        type: array
      virtualMachineConfiguration:
        $ref: '#/definitions/VirtualMachineConfiguration'
        description: This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.
        title: The virtual machine configuration for the Pool.
      vmSize:
        description: 'For information about available sizes of virtual machines for Cloud Services Pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for Pools using Images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).'
        title: The size of virtual machines in the Pool. All virtual machines in a Pool are the same size.
        type: string
    required:
      - id
      - vmSize
    title: A Pool in the Azure Batch service to add.
  PoolEnableAutoScaleParameter:
    properties:
      autoScaleEvaluationInterval:
        description: 'The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). If you specify a new interval, then the existing autoscale evaluation schedule will be stopped and a new autoscale evaluation schedule will be started, with its starting time being the time when this request was issued.'
        format: duration
        title: The time interval at which to automatically adjust the Pool size according to the autoscale formula.
        type: string
      autoScaleFormula:
        description: 'The formula is checked for validity before it is applied to the Pool. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).'
        title: The formula for the desired number of Compute Nodes in the Pool.
        type: string
    title: Options for enabling automatic scaling on a Pool.
  PoolEndpointConfiguration:
    properties:
      inboundNATPools:
        description: The maximum number of inbound NAT Pools per Batch Pool is 5. If the maximum number of inbound NAT Pools is exceeded the request fails with HTTP status code 400.
        items:
          $ref: '#/definitions/InboundNATPool'
        title: A list of inbound NAT Pools that can be used to address specific ports on an individual Compute Node externally.
        type: array
    required:
      - inboundNATPools
    title: The endpoint configuration for a Pool.
  PoolEvaluateAutoScaleParameter:
    properties:
      autoScaleFormula:
        description: 'The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, ''Enable automatic scaling on a Pool''. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).'
        title: The formula for the desired number of Compute Nodes in the Pool.
        type: string
    required:
      - autoScaleFormula
    title: Options for evaluating an automatic scaling formula on a Pool.
  PoolInformation:
    properties:
      autoPoolSpecification:
        $ref: '#/definitions/AutoPoolSpecification'
        description: 'If auto Pool creation fails, the Batch service moves the Job to a completed state, and the Pool creation error is set in the Job''s scheduling error property. The Batch service manages the lifetime (both creation and, unless keepAlive is specified, deletion) of the auto Pool. Any user actions that affect the lifetime of the auto Pool while the Job is active will result in unexpected behavior. You must specify either the Pool ID or the auto Pool specification, but not both.'
        title: Characteristics for a temporary 'auto pool'. The Batch service will create this auto Pool when the Job is submitted.
      poolId:
        description: 'You must ensure that the Pool referenced by this property exists. If the Pool does not exist at the time the Batch service tries to schedule a Job, no Tasks for the Job will run until you create a Pool with that id. Note that the Batch service will not reject the Job request; it will simply not run Tasks until the Pool exists. You must specify either the Pool ID or the auto Pool specification, but not both.'
        title: The ID of an existing Pool. All the Tasks of the Job will run on the specified Pool.
        type: string
    title: Specifies how a Job should be assigned to a Pool.
  PoolListUsageMetricsResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        items:
          $ref: '#/definitions/PoolUsageMetrics'
        title: The Pool usage metrics data.
        type: array
    title: The result of a listing the usage metrics for an Account.
  PoolNodeCounts:
    properties:
      dedicated:
        $ref: '#/definitions/NodeCounts'
        title: The number of dedicated Compute Nodes in each state.
      lowPriority:
        $ref: '#/definitions/NodeCounts'
        title: The number of low priority Compute Nodes in each state.
      poolId:
        title: The ID of the Pool.
        type: string
    required:
      - poolId
    title: The number of Compute Nodes in each state for a Pool.
  PoolNodeCountsListResult:
    properties:
      odata.nextLink:
        title: The URL to get the next set of results.
        type: string
      value:
        description: A list of Compute Node counts by Pool.
        items:
          $ref: '#/definitions/PoolNodeCounts'
        type: array
    title: The result of listing the Compute Node counts in the Account.
  PoolPatchParameter:
    properties:
      applicationPackageReferences:
        description: 'Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. If this element is present, it replaces any existing Package references. If you specify an empty collection, then all Package references are removed from the Pool. If omitted, any existing Package references are left unchanged.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: A list of Packages to be installed on each Compute Node in the Pool.
        type: array
      certificateReferences:
        description: 'If this element is present, it replaces any existing Certificate references configured on the Pool. If omitted, any existing Certificate references are left unchanged. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: A list of Certificates to be installed on each Compute Node in the Pool.
        type: array
      metadata:
        description: 'If this element is present, it replaces any existing metadata configured on the Pool. If you specify an empty collection, any metadata is removed from the Pool. If omitted, any existing metadata is left unchanged.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Pool as metadata.
        type: array
      startTask:
        $ref: '#/definitions/StartTask'
        description: 'If this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is left unchanged.'
        title: A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted.
    title: The set of changes to be made to a Pool.
  PoolResizeParameter:
    properties:
      nodeDeallocationOption:
        $ref: '#/definitions/ComputeNodeDeallocationOption'
        description: The default value is requeue.
        title: Determines what to do with a Compute Node and its running task(s) if the Pool size is decreasing.
      resizeTimeout:
        description: 'The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for allocation of Nodes to the Pool or removal of Compute Nodes from the Pool.
        type: string
      targetDedicatedNodes:
        format: int32
        title: The desired number of dedicated Compute Nodes in the Pool.
        type: integer
      targetLowPriorityNodes:
        format: int32
        title: The desired number of low-priority Compute Nodes in the Pool.
        type: integer
    title: Options for changing the size of a Pool.
  PoolSpecification:
    properties:
      applicationLicenses:
        description: 'The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail. The permitted licenses available on the Pool are ''maya'', ''vray'', ''3dsmax'', ''arnold''. An additional charge applies for each application license added to the Pool.'
        items:
          type: string
        title: The list of application licenses the Batch service will make available on each Compute Node in the Pool.
        type: array
      applicationPackageReferences:
        description: 'Changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: The list of Packages to be installed on each Compute Node in the Pool.
        type: array
      autoScaleEvaluationInterval:
        description: 'The default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The time interval at which to automatically adjust the Pool size according to the autoscale formula.
        type: string
      autoScaleFormula:
        description: 'This property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information.'
        title: The formula for the desired number of Compute Nodes in the Pool.
        type: string
      certificateReferences:
        description: 'For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: A list of Certificates to be installed on each Compute Node in the Pool.
        type: array
      cloudServiceConfiguration:
        $ref: '#/definitions/CloudServiceConfiguration'
        description: 'This property must be specified if the Pool needs to be created with Azure PaaS VMs. This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to ''UserSubscription''.'
        title: The cloud service configuration for the Pool.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: The display name for the Pool.
        type: string
      enableAutoScale:
        description: 'If false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula element is required. The Pool automatically resizes according to the formula. The default value is false.'
        title: Whether the Pool size should automatically adjust over time.
        type: boolean
      enableInterNodeCommunication:
        description: Enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false.
        title: Whether the Pool permits direct communication between Compute Nodes.
        type: boolean
      maxTasksPerNode:
        description: The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
        format: int32
        title: The maximum number of Tasks that can run concurrently on a single Compute Node in the Pool.
        type: integer
      metadata:
        description: The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Pool as metadata.
        type: array
      mountConfiguration:
        description: 'This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.'
        items:
          $ref: '#/definitions/MountConfiguration'
        title: A list of file systems to mount on each node in the pool.
        type: array
      networkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
        title: The network configuration for the Pool.
      resizeTimeout:
        description: 'This timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The timeout for allocation of Compute Nodes to the Pool.
        type: string
      startTask:
        $ref: '#/definitions/StartTask'
        title: A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted.
      targetDedicatedNodes:
        description: 'This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.'
        format: int32
        title: The desired number of dedicated Compute Nodes in the Pool.
        type: integer
      targetLowPriorityNodes:
        description: 'This property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.'
        format: int32
        title: The desired number of low-priority Compute Nodes in the Pool.
        type: integer
      taskSchedulingPolicy:
        $ref: '#/definitions/TaskSchedulingPolicy'
        description: 'If not specified, the default is spread.'
        title: How Tasks are distributed across Compute Nodes in a Pool.
      userAccounts:
        items:
          $ref: '#/definitions/UserAccount'
        title: The list of user Accounts to be created on each Compute Node in the Pool.
        type: array
      virtualMachineConfiguration:
        $ref: '#/definitions/VirtualMachineConfiguration'
        description: 'This property must be specified if the Pool needs to be created with Azure IaaS VMs. This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        title: The virtual machine configuration for the Pool.
      vmSize:
        description: 'For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).'
        title: The size of the virtual machines in the Pool. All virtual machines in a Pool are the same size.
        type: string
    required:
      - vmSize
    title: Specification for creating a new Pool.
  PoolStatistics:
    properties:
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      resourceStats:
        $ref: '#/definitions/ResourceStatistics'
        title: Statistics related to resource consumption by Compute Nodes in the Pool.
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
      url:
        title: The URL for the statistics.
        type: string
      usageStats:
        $ref: '#/definitions/UsageStatistics'
        title: 'Statistics related to Pool usage, such as the amount of core-time used.'
    required:
      - url
      - startTime
      - lastUpdateTime
    title: Contains utilization and resource usage statistics for the lifetime of a Pool.
  PoolUpdatePropertiesParameter:
    properties:
      applicationPackageReferences:
        description: 'The list replaces any existing Application Package references on the Pool. Changes to Application Package references affect all new Compute Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Application Package references on any given Pool. If omitted, or if you specify an empty collection, any existing Application Packages references are removed from the Pool. A maximum of 10 references may be specified on a given Pool.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: The list of Application Packages to be installed on each Compute Node in the Pool.
        type: array
      certificateReferences:
        description: 'This list replaces any existing Certificate references configured on the Pool. If you specify an empty collection, any existing Certificate references are removed from the Pool. For Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location. For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created in the user''s home directory (e.g., /home/{user-name}/certs) and Certificates are placed in that directory.'
        items:
          $ref: '#/definitions/CertificateReference'
        title: A list of Certificates to be installed on each Compute Node in the Pool.
        type: array
      metadata:
        description: 'This list replaces any existing metadata configured on the Pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the Pool.'
        items:
          $ref: '#/definitions/MetadataItem'
        title: A list of name-value pairs associated with the Pool as metadata.
        type: array
      startTask:
        $ref: '#/definitions/StartTask'
        description: 'If this element is present, it overwrites any existing StartTask. If omitted, any existing StartTask is removed from the Pool.'
        title: A Task to run on each Compute Node as it joins the Pool. The Task runs when the Compute Node is added to the Pool or when the Compute Node is restarted.
    required:
      - certificateReferences
      - metadata
      - applicationPackageReferences
    title: The set of changes to be made to a Pool.
  PoolUsageMetrics:
    properties:
      endTime:
        format: date-time
        title: The end time of the aggregation interval covered by this entry.
        type: string
      poolId:
        title: The ID of the Pool whose metrics are aggregated in this entry.
        type: string
      startTime:
        format: date-time
        title: The start time of the aggregation interval covered by this entry.
        type: string
      totalCoreHours:
        format: double
        title: The total core hours used in the Pool during this aggregation interval.
        type: number
      vmSize:
        description: 'For information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).'
        title: The size of virtual machines in the Pool. All VMs in a Pool are the same size.
        type: string
    required:
      - poolId
      - startTime
      - endTime
      - vmSize
      - totalCoreHours
    title: Usage metrics for a Pool across an aggregation interval.
  RecentJob:
    properties:
      id:
        title: The ID of the Job.
        type: string
      url:
        title: The URL of the Job.
        type: string
    title: Information about the most recent Job to run under the Job Schedule.
  ResizeError:
    properties:
      code:
        title: An identifier for the Pool resize error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      message:
        title: 'A message describing the Pool resize error, intended to be suitable for display in a user interface.'
        type: string
      values:
        items:
          $ref: '#/definitions/NameValuePair'
        title: A list of additional error details related to the Pool resize error.
        type: array
    title: An error that occurred when resizing a Pool.
  ResourceFile:
    properties:
      autoStorageContainerName:
        description: 'The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.'
        title: The storage container name in the auto storage Account.
        type: string
      blobPrefix:
        description: 'The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.'
        title: The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded.
        type: string
      fileMode:
        description: 'This property applies only to files being downloaded to Linux Compute Nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows Compute Node. If this property is not specified for a Linux Compute Node, then a default value of 0770 is applied to the file.'
        title: The file permission mode attribute in octal format.
        type: string
      filePath:
        description: 'If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the Task''s working directory (for example by using ''..'').'
        title: 'The location on the Compute Node to which to download the file(s), relative to the Task''s working directory.'
        type: string
      httpUrl:
        description: 'The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.'
        title: The URL of the file to download.
        type: string
      storageContainerUrl:
        description: 'The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading blobs from the container. There are two ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, or set the ACL for the container to allow public access.'
        title: The URL of the blob container within Azure Blob Storage.
        type: string
    title: A single file or multiple files to be downloaded to a Compute Node.
  ResourceStatistics:
    properties:
      avgCPUPercentage:
        format: double
        title: The average CPU usage across all Compute Nodes in the Pool (percentage per node).
        type: number
      avgDiskGiB:
        format: double
        title: The average used disk space in GiB across all Compute Nodes in the Pool.
        type: number
      avgMemoryGiB:
        format: double
        title: The average memory usage in GiB across all Compute Nodes in the Pool.
        type: number
      diskReadGiB:
        format: double
        title: The total amount of data in GiB of disk reads across all Compute Nodes in the Pool.
        type: number
      diskReadIOps:
        format: int64
        title: The total number of disk read operations across all Compute Nodes in the Pool.
        type: integer
      diskWriteGiB:
        format: double
        title: The total amount of data in GiB of disk writes across all Compute Nodes in the Pool.
        type: number
      diskWriteIOps:
        format: int64
        title: The total number of disk write operations across all Compute Nodes in the Pool.
        type: integer
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      networkReadGiB:
        format: double
        title: The total amount of data in GiB of network reads across all Compute Nodes in the Pool.
        type: number
      networkWriteGiB:
        format: double
        title: The total amount of data in GiB of network writes across all Compute Nodes in the Pool.
        type: number
      peakDiskGiB:
        format: double
        title: The peak used disk space in GiB across all Compute Nodes in the Pool.
        type: number
      peakMemoryGiB:
        format: double
        title: The peak memory usage in GiB across all Compute Nodes in the Pool.
        type: number
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
    required:
      - startTime
      - lastUpdateTime
      - avgCPUPercentage
      - avgMemoryGiB
      - peakMemoryGiB
      - avgDiskGiB
      - peakDiskGiB
      - diskReadIOps
      - diskWriteIOps
      - diskReadGiB
      - diskWriteGiB
      - networkReadGiB
      - networkWriteGiB
    title: Statistics related to resource consumption by Compute Nodes in a Pool.
  Schedule:
    properties:
      doNotRunAfter:
        description: 'If you do not specify a doNotRunAfter time, and you are creating a recurring Job Schedule, the Job Schedule will remain active until you explicitly terminate it.'
        format: date-time
        title: A time after which no Job will be created under this Job Schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active Job under this Job Schedule.
        type: string
      doNotRunUntil:
        description: 'If you do not specify a doNotRunUntil time, the schedule becomes ready to create Jobs immediately.'
        format: date-time
        title: The earliest time at which any Job may be created under this Job Schedule.
        type: string
      recurrenceInterval:
        description: 'Because a Job Schedule can have at most one active Job under it at any given time, if it is time to create a new Job under a Job Schedule, but the previous Job is still running, the Batch service will not create the new Job until the previous Job finishes. If the previous Job does not finish within the startWindow period of the new recurrenceInterval, then no new Job will be scheduled for that interval. For recurring Jobs, you should normally specify a jobManagerTask in the jobSpecification. If you do not use jobManagerTask, you will need an external process to monitor when Jobs are created, add Tasks to the Jobs and terminate the Jobs ready for the next recurrence. The default is that the schedule does not recur: one Job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that Job finishes. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: The time interval between the start times of two successive Jobs under the Job Schedule. A Job Schedule can have at most one active Job under it at any given time.
        type: string
      startWindow:
        description: 'If a Job is not created within the startWindow interval, then the ''opportunity'' is lost; no Job will be created until the next recurrence of the schedule. If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the Job that is ''due'' in one recurrenceInterval is not carried forward into the next recurrence interval. The default is infinite. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).'
        format: duration
        title: 'The time interval, starting from the time at which the schedule indicates a Job should be created, within which a Job must be created.'
        type: string
    title: The schedule according to which Jobs will be created
  StartTask:
    description: 'Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing. In some cases the StartTask may be re-run even though the Compute Node was not rebooted. Special care should be taken to avoid StartTasks which create breakaway process or install/launch services from the StartTask working directory, as this will block Batch from being able to re-run the StartTask.'
    properties:
      commandLine:
        description: 'The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the StartTask.
        type: string
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the StartTask runs.
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the StartTask.
        type: array
      maxTaskRetryCount:
        description: 'The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task. If the maximum retry count is -1, the Batch service retries the Task without limit.'
        format: int32
        title: The maximum number of times the Task may be retried.
        type: integer
      resourceFiles:
        description: Files listed under this element are located in the Task's working directory.
        items:
          $ref: '#/definitions/ResourceFile'
        title: 'A list of files that the Batch service will download to the Compute Node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        type: array
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task.'
        title: The user identity under which the StartTask runs.
      waitForSuccess:
        description: 'If true and the StartTask fails on a Node, the Batch service retries the StartTask up to its maximum retry count (maxTaskRetryCount). If the Task has still not completed successfully after all retries, then the Batch service marks the Node unusable, and will not schedule Tasks to it. This condition can be detected via the Compute Node state and failure info details. If false, the Batch service will not wait for the StartTask to complete. In this case, other Tasks can start executing on the Compute Node while the StartTask is still running; and even if the StartTask fails, new Tasks will continue to be scheduled on the Compute Node. The default is true.'
        title: 'Whether the Batch service should wait for the StartTask to complete successfully (that is, to exit with exit code 0) before scheduling any Tasks on the Compute Node.'
        type: boolean
    required:
      - commandLine
    title: 'A Task which is run when a Node joins a Pool in the Azure Batch service, or when the Compute Node is rebooted or reimaged.'
  StartTaskInformation:
    properties:
      containerInfo:
        $ref: '#/definitions/TaskContainerExecutionInformation'
        description: This property is set only if the Task runs in a container context.
        title: Information about the container under which the Task is executing.
      endTime:
        description: 'This is the end time of the most recent run of the StartTask, if that run has completed (even if that run failed and a retry is pending). This element is not present if the StartTask is currently running.'
        format: date-time
        title: The time at which the StartTask stopped running.
        type: string
      exitCode:
        description: 'This property is set only if the StartTask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the StartTask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.'
        format: int32
        title: The exit code of the program specified on the StartTask command line.
        type: integer
      failureInfo:
        $ref: '#/definitions/TaskFailureInformation'
        description: This property is set only if the Task is in the completed state and encountered a failure.
        title: 'Information describing the Task failure, if any.'
      lastRetryTime:
        description: 'This element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.'
        format: date-time
        title: The most recent time at which a retry of the Task started running.
        type: string
      result:
        $ref: '#/definitions/TaskExecutionResult'
        description: 'If the value is ''failed'', then the details of the failure can be found in the failureInfo property.'
        title: The result of the Task execution.
      retryCount:
        description: 'Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.'
        format: int32
        title: The number of times the Task has been retried by the Batch service.
        type: integer
      startTime:
        description: 'This value is reset every time the Task is restarted or retried (that is, this is the most recent time at which the StartTask started running).'
        format: date-time
        title: The time at which the StartTask started running.
        type: string
      state:
        enum:
          - running
          - completed
        title: The state of the StartTask on the Compute Node.
        type: string
        x-ms-enum:
          modelAsString: false
          name: StartTaskState
          values:
            - description: The StartTask is currently running.
              value: running
            - description: 'The StartTask has exited with exit code 0, or the StartTask has failed and the retry limit has reached, or the StartTask process did not run due to Task preparation errors (such as resource file download failures).'
              value: completed
    required:
      - state
      - startTime
      - retryCount
    title: Information about a StartTask running on a Compute Node.
  StorageAccountType:
    enum:
      - standard_lrs
      - premium_lrs
    title: The storage Account type for use in creating data disks.
    type: string
    x-ms-enum:
      modelAsString: false
      name: StorageAccountType
      values:
        - description: The data disk should use standard locally redundant storage.
          name: StandardLRS
          value: standard_lrs
        - description: The data disk should use premium locally redundant storage.
          name: PremiumLRS
          value: premium_lrs
  SubtaskInformation:
    properties:
      containerInfo:
        $ref: '#/definitions/TaskContainerExecutionInformation'
        description: This property is set only if the Task runs in a container context.
        title: Information about the container under which the Task is executing.
      endTime:
        description: This property is set only if the subtask is in the Completed state.
        format: date-time
        title: The time at which the subtask completed.
        type: string
      exitCode:
        description: 'This property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.'
        format: int32
        title: The exit code of the program specified on the subtask command line.
        type: integer
      failureInfo:
        $ref: '#/definitions/TaskFailureInformation'
        description: This property is set only if the Task is in the completed state and encountered a failure.
        title: 'Information describing the Task failure, if any.'
      id:
        format: int32
        title: The ID of the subtask.
        type: integer
      nodeInfo:
        $ref: '#/definitions/ComputeNodeInformation'
        title: Information about the Compute Node on which the subtask ran.
      previousState:
        $ref: '#/definitions/SubtaskState'
        description: This property is not set if the subtask is in its initial running state.
        title: The previous state of the subtask.
      previousStateTransitionTime:
        description: This property is not set if the subtask is in its initial running state.
        format: date-time
        title: The time at which the subtask entered its previous state.
        type: string
      result:
        $ref: '#/definitions/TaskExecutionResult'
        description: 'If the value is ''failed'', then the details of the failure can be found in the failureInfo property.'
        title: The result of the Task execution.
      startTime:
        format: date-time
        title: 'The time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running.'
        type: string
      state:
        $ref: '#/definitions/SubtaskState'
        title: The current state of the subtask.
      stateTransitionTime:
        format: date-time
        title: The time at which the subtask entered its current state.
        type: string
    title: Information about an Azure Batch subtask.
  SubtaskState:
    enum:
      - preparing
      - running
      - completed
    title: The state of the subtask.
    type: string
    x-ms-enum:
      modelAsString: false
      name: SubtaskState
      values:
        - description: 'The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node.'
          value: preparing
        - description: The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing.
          value: running
        - description: 'The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated.'
          value: completed
  TaskAddCollectionParameter:
    properties:
      value:
        description: 'The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each Task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer Tasks.'
        items:
          $ref: '#/definitions/TaskAddParameter'
        maxItems: 100
        title: The collection of Tasks to add. The maximum count of Tasks is 100.
        type: array
    required:
      - value
    title: A collection of Azure Batch Tasks to add.
  TaskAddCollectionResult:
    properties:
      value:
        items:
          $ref: '#/definitions/TaskAddResult'
        title: The results of the add Task collection operation.
        type: array
    title: The result of adding a collection of Tasks to a Job.
  TaskAddParameter:
    description: 'Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing.'
    properties:
      affinityInfo:
        $ref: '#/definitions/AffinityInformation'
        title: A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task.
      applicationPackageReferences:
        description: 'Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.'
        items:
          $ref: '#/definitions/ApplicationPackageReference'
        title: A list of Packages that the Batch service will deploy to the Compute Node before running the command line.
        type: array
      authenticationTokenSettings:
        $ref: '#/definitions/AuthenticationTokenSettings'
        description: 'If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.'
        title: The settings for an authentication token that the Task can use to perform Batch service operations.
      commandLine:
        description: 'For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
        title: The command line of the Task.
        type: string
      constraints:
        $ref: '#/definitions/TaskConstraints'
        description: 'If you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days.'
        title: The execution constraints that apply to this Task.
      containerSettings:
        $ref: '#/definitions/TaskContainerSettings'
        description: 'If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn''t have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.'
        title: The settings for the container under which the Task runs.
      dependsOn:
        $ref: '#/definitions/TaskDependencies'
        description: 'This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob.'
        title: The Tasks that this Task depends on.
      displayName:
        description: The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
        title: A display name for the Task.
        type: string
      environmentSettings:
        items:
          $ref: '#/definitions/EnvironmentSetting'
        title: A list of environment variable settings for the Task.
        type: array
      exitConditions:
        $ref: '#/definitions/ExitConditions'
        description: How the Batch service should respond when the Task completes.
      id:
        description: 'The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case).'
        title: A string that uniquely identifies the Task within the Job.
        type: string
      multiInstanceSettings:
        $ref: '#/definitions/MultiInstanceSettings'
        title: 'An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task.'
      outputFiles:
        description: 'For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.'
        items:
          $ref: '#/definitions/OutputFile'
        title: A list of files that the Batch service will upload from the Compute Node after running the command line.
        type: array
      resourceFiles:
        description: 'For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
        items:
          $ref: '#/definitions/ResourceFile'
        title: A list of files that the Batch service will download to the Compute Node before running the command line.
        type: array
      userIdentity:
        $ref: '#/definitions/UserIdentity'
        description: 'If omitted, the Task runs as a non-administrative user unique to the Task.'
        title: The user identity under which the Task runs.
    required:
      - id
      - commandLine
    title: An Azure Batch Task to add.
  TaskAddResult:
    properties:
      eTag:
        description: 'You can use this to detect whether the Task has changed between requests. In particular, you can be pass the ETag with an Update Task request to specify that your changes should take effect only if nobody else has modified the Job in the meantime.'
        title: 'The ETag of the Task, if the Task was successfully added.'
        type: string
      error:
        $ref: '#/definitions/BatchError'
        title: The error encountered while attempting to add the Task.
      lastModified:
        format: date-time
        title: The last modified time of the Task.
        type: string
      location:
        title: 'The URL of the Task, if the Task was successfully added.'
        type: string
      status:
        enum:
          - success
          - clienterror
          - servererror
        title: The status of the add Task request.
        type: string
        x-ms-enum:
          modelAsString: false
          name: TaskAddStatus
          values:
            - description: The Task was added successfully.
              value: success
            - description: The Task failed to add due to a client error and should not be retried without modifying the request as appropriate.
              name: clientError
              value: clienterror
            - description: Task failed to add due to a server error and can be retried without modification.
              name: serverError
              value: servererror
      taskId:
        title: The ID of the Task for which this is the result.
        type: string
    required:
      - status
      - taskId
    title: Result for a single Task added as part of an add Task collection operation.
  TaskConstraints:
    properties:
      maxTaskRetryCount:
        description: 'Note that this value specifically controls the number of retries for the Task executable due to a nonzero exit code. The Batch service will try the Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the Task after the first attempt. If the maximum retry count is -1, the Batch service retries the Task without limit.'
        format: int32
        title: The maximum number of times the Task may be retried. The Batch service retries a Task if its exit code is nonzero.
        type: integer
      maxWallClockTime:
        description: 'If this is not specified, there is no time limit on how long the Task may run.'
        format: duration
        title: 'The maximum elapsed time that the Task may run, measured from the time the Task starts. If the Task does not complete within the time limit, the Batch service terminates it.'
        type: string
      retentionTime:
        description: 'The default is 7 days, i.e. the Task directory will be retained for 7 days unless the Compute Node is removed or the Job is deleted.'
        format: duration
        title: 'The minimum time to retain the Task directory on the Compute Node where it ran, from the time it completes execution. After this time, the Batch service may delete the Task directory and all its contents.'
        type: string
    title: Execution constraints to apply to a Task.
  TaskContainerExecutionInformation:
    properties:
      containerId:
        title: The ID of the container.
        type: string
      error:
        description: 'This is the detailed error string from the Docker service, if available. It is equivalent to the error field returned by "docker inspect".'
        title: Detailed error information about the container.
        type: string
      state:
        description: This is the state of the container according to the Docker service. It is equivalent to the status field returned by "docker inspect".
        title: The state of the container.
        type: string
    title: Contains information about the container which a Task is executing.
  TaskContainerSettings:
    properties:
      containerRunOptions:
        description: 'These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.'
        title: Additional options to the container create command.
        type: string
      imageName:
        description: 'This is the full Image reference, as would be specified to "docker pull". If no tag is provided as part of the Image name, the tag ":latest" is used as a default.'
        title: The Image to use to create the container in which the Task will run.
        type: string
      registry:
        $ref: '#/definitions/ContainerRegistry'
        description: This setting can be omitted if was already provided at Pool creation.
        title: The private registry which contains the container Image.
      workingDirectory:
        description: The default is 'taskWorkingDirectory'.
        enum:
          - taskWorkingDirectory
          - containerImageDefault
        title: The location of the container Task working directory.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ContainerWorkingDirectory
          values:
            - description: 'Use the standard Batch service Task working directory, which will contain the Task Resource Files populated by Batch.'
              value: taskWorkingDirectory
            - description: Use the working directory defined in the container Image. Beware that this directory will not contain the Resource Files downloaded by Batch.
              value: containerImageDefault
    required:
      - imageName
    title: The container settings for a Task.
  TaskCounts:
    properties:
      active:
        format: int32
        title: The number of Tasks in the active state.
        type: integer
      completed:
        format: int32
        title: The number of Tasks in the completed state.
        type: integer
      failed:
        format: int32
        title: The number of Tasks which failed. A Task fails if its result (found in the executionInfo property) is 'failure'.
        type: integer
      running:
        format: int32
        title: The number of Tasks in the running or preparing state.
        type: integer
      succeeded:
        format: int32
        title: The number of Tasks which succeeded. A Task succeeds if its result (found in the executionInfo property) is 'success'.
        type: integer
    required:
      - active
      - running
      - completed
      - succeeded
      - failed
    title: The Task counts for a Job.
  TaskDependencies:
    properties:
      taskIdRanges:
        items:
          $ref: '#/definitions/TaskIdRange'
        title: The list of Task ID ranges that this Task depends on. All Tasks in all ranges must complete successfully before the dependent Task can be scheduled.
        type: array
      taskIds:
        description: 'The taskIds collection is limited to 64000 characters total (i.e. the combined length of all Task IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong. In this case consider using Task ID ranges instead.'
        items:
          type: string
        title: The list of Task IDs that this Task depends on. All Tasks in this list must complete successfully before the dependent Task can be scheduled.
        type: array
    title: Specifies any dependencies of a Task. Any Task that is explicitly specified or within a dependency range must complete before the dependant Task will be scheduled.
  TaskExecutionInformation:
    properties:
      containerInfo:
        $ref: '#/definitions/TaskContainerExecutionInformation'
        description: This property is set only if the Task runs in a container context.
        title: Information about the container under which the Task is executing.
      endTime:
        description: This property is set only if the Task is in the Completed state.
        format: date-time
        title: The time at which the Task completed.
        type: string
      exitCode:
        description: 'This property is set only if the Task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the Task (due to timeout, or user termination via the API) you may see an operating system-defined exit code.'
        format: int32
        title: The exit code of the program specified on the Task command line.
        type: integer
      failureInfo:
        $ref: '#/definitions/TaskFailureInformation'
        description: This property is set only if the Task is in the completed state and encountered a failure.
        title: 'Information describing the Task failure, if any.'
      lastRequeueTime:
        description: This property is set only if the requeueCount is nonzero.
        format: date-time
        title: The most recent time at which the Task has been requeued by the Batch service as the result of a user request.
        type: string
      lastRetryTime:
        description: 'This element is present only if the Task was retried (i.e. retryCount is nonzero). If present, this is typically the same as startTime, but may be different if the Task has been restarted for reasons other than retry; for example, if the Compute Node was rebooted during a retry, then the startTime is updated but the lastRetryTime is not.'
        format: date-time
        title: The most recent time at which a retry of the Task started running.
        type: string
      requeueCount:
        description: 'When the user removes Compute Nodes from a Pool (by resizing/shrinking the pool) or when the Job is being disabled, the user can specify that running Tasks on the Compute Nodes be requeued for execution. This count tracks how many times the Task has been requeued for these reasons.'
        format: int32
        title: The number of times the Task has been requeued by the Batch service as the result of a user request.
        type: integer
      result:
        $ref: '#/definitions/TaskExecutionResult'
        description: 'If the value is ''failed'', then the details of the failure can be found in the failureInfo property.'
        title: The result of the Task execution.
      retryCount:
        description: 'Task application failures (non-zero exit code) are retried, pre-processing errors (the Task could not be run) and file upload errors are not retried. The Batch service will retry the Task up to the limit specified by the constraints.'
        format: int32
        title: The number of times the Task has been retried by the Batch service.
        type: integer
      startTime:
        description: '''Running'' corresponds to the running state, so if the Task specifies resource files or Packages, then the start time reflects the time at which the Task started downloading or deploying these. If the Task has been restarted or retried, this is the most recent time at which the Task started running. This property is present only for Tasks that are in the running or completed state.'
        format: date-time
        title: The time at which the Task started running.
        type: string
    required:
      - requeueCount
      - retryCount
    title: Information about the execution of a Task.
  TaskExecutionResult:
    enum:
      - success
      - failure
    title: The result of Task execution.
    type: string
    x-ms-enum:
      modelAsString: false
      name: TaskExecutionResult
      values:
        - description: The Task ran successfully.
          name: success
          value: success
        - description: 'There was an error during processing of the Task. The failure may have occurred before the Task process was launched, while the Task process was executing, or after the Task process exited.'
          name: failure
          value: failure
  TaskFailureInformation:
    properties:
      category:
        $ref: '#/definitions/ErrorCategory'
        title: The category of the Task error.
      code:
        title: An identifier for the Task error. Codes are invariant and are intended to be consumed programmatically.
        type: string
      details:
        items:
          $ref: '#/definitions/NameValuePair'
        title: A list of additional details related to the error.
        type: array
      message:
        title: 'A message describing the Task error, intended to be suitable for display in a user interface.'
        type: string
    required:
      - category
    title: Information about a Task failure.
  TaskIdRange:
    description: 'The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents Tasks ''9'', ''10'', ''11'' and ''12''.'
    properties:
      end:
        format: int32
        title: The last Task ID in the range.
        type: integer
      start:
        format: int32
        title: The first Task ID in the range.
        type: integer
    required:
      - start
      - end
    title: A range of Task IDs that a Task can depend on. All Tasks with IDs in the range must complete successfully before the dependent Task can be scheduled.
  TaskInformation:
    properties:
      executionInfo:
        $ref: '#/definitions/TaskExecutionInformation'
        title: Information about the execution of the Task.
      jobId:
        title: The ID of the Job to which the Task belongs.
        type: string
      subtaskId:
        format: int32
        title: The ID of the subtask if the Task is a multi-instance Task.
        type: integer
      taskId:
        title: The ID of the Task.
        type: string
      taskState:
        $ref: '#/definitions/TaskState'
        title: The current state of the Task.
      taskUrl:
        title: The URL of the Task.
        type: string
    required:
      - taskState
    title: Information about a Task running on a Compute Node.
  TaskSchedulingPolicy:
    properties:
      nodeFillType:
        description: 'If not specified, the default is spread.'
        enum:
          - spread
          - pack
        title: How Tasks are distributed across Compute Nodes in a Pool.
        type: string
        x-ms-enum:
          modelAsString: false
          name: ComputeNodeFillType
          values:
            - description: Tasks should be assigned evenly across all Compute Nodes in the Pool.
              value: spread
            - description: As many Tasks as possible (maxTasksPerNode) should be assigned to each Compute Node in the Pool before any Tasks are assigned to the next Compute Node in the Pool.
              value: pack
    required:
      - nodeFillType
    title: Specifies how Tasks should be distributed across Compute Nodes.
  TaskState:
    enum:
      - active
      - preparing
      - running
      - completed
    title: The state of the Task.
    type: string
    x-ms-enum:
      modelAsString: false
      name: TaskState
      values:
        - description: 'The Task is queued and able to run, but is not currently assigned to a Compute Node. A Task enters this state when it is created, when it is enabled after being disabled, or when it is awaiting a retry after a failed run.'
          value: active
        - description: 'The Task has been assigned to a Compute Node, but is waiting for a required Job Preparation Task to complete on the Compute Node. If the Job Preparation Task succeeds, the Task will move to running. If the Job Preparation Task fails, the Task will return to active and will be eligible to be assigned to a different Compute Node.'
          value: preparing
        - description: The Task is running on a Compute Node. This includes task-level preparation such as downloading resource files or deploying Packages specified on the Task - it does not necessarily mean that the Task command line has started executing.
          value: running
        - description: 'The Task is no longer eligible to run, usually because the Task has finished successfully, or the Task has finished unsuccessfully and has exhausted its retry limit. A Task is also marked as completed if an error occurred launching the Task, or when the Task has been terminated.'
          value: completed
  TaskStatistics:
    properties:
      kernelCPUTime:
        format: duration
        title: The total kernel mode CPU time (summed across all cores and all Compute Nodes) consumed by the Task.
        type: string
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      readIOGiB:
        format: double
        title: The total gibibytes read from disk by the Task.
        type: number
      readIOps:
        format: int64
        title: The total number of disk read operations made by the Task.
        type: integer
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
      url:
        title: The URL of the statistics.
        type: string
      userCPUTime:
        format: duration
        title: The total user mode CPU time (summed across all cores and all Compute Nodes) consumed by the Task.
        type: string
      waitTime:
        format: duration
        title: 'The total wait time of the Task. The wait time for a Task is defined as the elapsed time between the creation of the Task and the start of Task execution. (If the Task is retried due to failures, the wait time is the time to the most recent Task execution.)'
        type: string
      wallClockTime:
        description: 'The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If the Task was retried, this includes the wall clock time of all the Task retries.'
        format: duration
        title: The total wall clock time of the Task.
        type: string
      writeIOGiB:
        format: double
        title: The total gibibytes written to disk by the Task.
        type: number
      writeIOps:
        format: int64
        title: The total number of disk write operations made by the Task.
        type: integer
    required:
      - url
      - startTime
      - lastUpdateTime
      - userCPUTime
      - kernelCPUTime
      - wallClockTime
      - readIOps
      - writeIOps
      - readIOGiB
      - writeIOGiB
      - waitTime
    title: Resource usage statistics for a Task.
  TaskUpdateParameter:
    properties:
      constraints:
        $ref: '#/definitions/TaskConstraints'
        description: 'If omitted, the Task is given the default constraints. For multi-instance Tasks, updating the retention time applies only to the primary Task and not subtasks.'
        title: Constraints that apply to this Task.
    title: The set of changes to be made to a Task.
  UploadBatchServiceLogsConfiguration:
    properties:
      containerUrl:
        description: The URL must include a Shared Access Signature (SAS) granting write permissions to the container. The SAS duration must allow enough time for the upload to finish. The start time for SAS is optional and recommended to not be specified.
        title: The URL of the container within Azure Blob Storage to which to upload the Batch Service log file(s).
        type: string
      endTime:
        description: 'Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested. If omitted, the default is to upload all logs available after the startTime.'
        format: date-time
        title: The end of the time range from which to upload Batch Service log file(s).
        type: string
      startTime:
        description: 'Any log file containing a log message in the time range will be uploaded. This means that the operation might retrieve more logs than have been requested since the entire log file is always uploaded, but the operation should not retrieve fewer logs than have been requested.'
        format: date-time
        title: The start of the time range from which to upload Batch Service log file(s).
        type: string
    required:
      - containerUrl
      - startTime
    title: The Azure Batch service log files upload configuration for a Compute Node.
  UploadBatchServiceLogsResult:
    properties:
      numberOfFilesUploaded:
        format: int32
        title: The number of log files which will be uploaded.
        type: integer
      virtualDirectoryName:
        description: 'The virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.'
        title: The virtual directory within Azure Blob Storage container to which the Batch Service log file(s) will be uploaded.
        type: string
    required:
      - virtualDirectoryName
      - numberOfFilesUploaded
    title: The result of uploading Batch service log files from a specific Compute Node.
  UsageStatistics:
    properties:
      dedicatedCoreTime:
        format: duration
        title: The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool.
        type: string
      lastUpdateTime:
        format: date-time
        title: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
        type: string
      startTime:
        format: date-time
        title: The start time of the time range covered by the statistics.
        type: string
    required:
      - startTime
      - lastUpdateTime
      - dedicatedCoreTime
    title: Statistics related to Pool usage information.
  UserAccount:
    properties:
      elevationLevel:
        $ref: '#/definitions/ElevationLevel'
        description: The default value is nonAdmin.
        title: The elevation level of the user Account.
      linuxUserConfiguration:
        $ref: '#/definitions/LinuxUserConfiguration'
        description: 'This property is ignored if specified on a Windows Pool. If not specified, the user is created with the default options.'
        title: The Linux-specific user configuration for the user Account.
      name:
        title: The name of the user Account.
        type: string
      password:
        title: The password for the user Account.
        type: string
      windowsUserConfiguration:
        $ref: '#/definitions/WindowsUserConfiguration'
        description: 'This property can only be specified if the user is on a Windows Pool. If not specified and on a Windows Pool, the user is created with the default options.'
        title: The Windows-specific user configuration for the user Account.
    required:
      - name
      - password
    title: Properties used to create a user used to execute Tasks on an Azure Batch Compute Node.
  UserIdentity:
    description: 'Specify either the userName or autoUser property, but not both.'
    properties:
      autoUser:
        $ref: '#/definitions/AutoUserSpecification'
        description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        title: The auto user under which the Task is run.
      username:
        description: The userName and autoUser properties are mutually exclusive; you must specify one but not both.
        title: The name of the user identity under which the Task is run.
        type: string
        x-ms-client-name: userName
    title: The definition of the user identity under which the Task is run.
  VirtualMachineConfiguration:
    properties:
      containerConfiguration:
        $ref: '#/definitions/ContainerConfiguration'
        description: 'If specified, setup is performed on each Compute Node in the Pool to allow Tasks to run in containers. All regular Tasks and Job manager Tasks run on this Pool must specify the containerSettings property, and all other Tasks may specify it.'
        title: The container configuration for the Pool.
      dataDisks:
        description: 'This property must be specified if the Compute Nodes in the Pool need to have empty data disks attached to them. This cannot be updated. Each Compute Node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the Compute Node is removed from the Pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux and https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.'
        items:
          $ref: '#/definitions/DataDisk'
        title: The configuration for data disks attached to the Compute Nodes in the Pool.
        type: array
      imageReference:
        $ref: '#/definitions/ImageReference'
        title: A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.
      licenseType:
        description: |
          This only applies to Images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the Compute Nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:

           Windows_Server - The on-premises license is for Windows Server.
           Windows_Client - The on-premises license is for Windows Client.
        title: The type of on-premises license to be used when deploying the operating system.
        type: string
      nodeAgentSKUId:
        description: 'The Batch Compute Node agent is a program that runs on each Compute Node in the Pool, and provides the command-and-control interface between the Compute Node and the Batch service. There are different implementations of the Compute Node agent, known as SKUs, for different operating systems. You must specify a Compute Node agent SKU which matches the selected Image reference. To get the list of supported Compute Node agent SKUs along with their list of verified Image references, see the ''List supported Compute Node agent SKUs'' operation.'
        title: The SKU of the Batch Compute Node agent to be provisioned on Compute Nodes in the Pool.
        type: string
      windowsConfiguration:
        $ref: '#/definitions/WindowsConfiguration'
        description: This property must not be specified if the imageReference property specifies a Linux OS Image.
        title: Windows operating system settings on the virtual machine.
    required:
      - nodeAgentSKUId
      - imageReference
    title: The configuration for Compute Nodes in a Pool based on the Azure Virtual Machines infrastructure.
  WindowsConfiguration:
    properties:
      enableAutomaticUpdates:
        description: 'If omitted, the default value is true.'
        title: Whether automatic updates are enabled on the virtual machine.
        type: boolean
    title: Windows operating system settings to apply to the virtual machine.
  WindowsUserConfiguration:
    properties:
      loginMode:
        description: The default value for VirtualMachineConfiguration Pools is 'batch' and for CloudServiceConfiguration Pools is 'interactive'.
        enum:
          - batch
          - interactive
        title: The login mode for the user
        type: string
        x-ms-enum:
          modelAsString: false
          name: LoginMode
          values:
            - description: The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode is recommended for long running parallel processes.
              value: batch
            - description: 'The LOGON32_LOGON_INTERACTIVE Win32 login mode. UAC is enabled on Windows VirtualMachineConfiguration Pools. If this option is used with an elevated user identity in a Windows VirtualMachineConfiguration Pool, the user session will not be elevated unless the application executed by the Task command line is configured to always require administrative privilege or to always require maximum privilege.'
              value: interactive
    title: Properties used to create a user Account on a Windows Compute Node.
x-ms-parameterized-host:
  hostTemplate: '{batchUrl}'
  parameters:
    - $ref: '#/parameters/batchUrl'
  useSchemePrefix: false
