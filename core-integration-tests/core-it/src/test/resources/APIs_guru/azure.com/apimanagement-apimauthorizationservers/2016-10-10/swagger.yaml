swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: 'Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).'
  title: ApiManagementClient
  version: '2016-10-10'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimauthorizationservers.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimauthorizationservers
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow.
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  AuthenticationServerIdParameter:
    description: Identifier of the authorization server.
    in: path
    maxLength: 256
    name: authsid
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers':
    get:
      description: Lists a collection of authorization servers defined within a service instance.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/dn879064.aspx'
      operationId: AuthorizationServers_ListByService
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - description: |-
            | Field | Supported operators    | Supported functions                         |
            |-------|------------------------|---------------------------------------------|
            | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
            | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          in: query
          name: $filter
          required: false
          type: string
        - description: Number of records to return.
          format: int32
          in: query
          minimum: 1
          name: $top
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Number of records to skip.
          format: int32
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '200':
          description: A Collection of the Authorization Server entities for the specified API Management service instance.
          schema:
            $ref: '#/definitions/AuthorizationServerCollection'
      tags:
        - AuthorizationServers
      x-ms-odata: '#/definitions/OAuth2AuthorizationServerContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}':
    delete:
      description: Deletes specific authorization server instance.
      operationId: AuthorizationServers_Delete
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - $ref: '#/parameters/AuthenticationServerIdParameter'
        - description: The entity state (Etag) version of the authentication server to delete. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '204':
          description: The authorization server settings were successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - AuthorizationServers
    get:
      description: Gets the details of the authorization server specified by its identifier.
      operationId: AuthorizationServers_Get
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - $ref: '#/parameters/AuthenticationServerIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '200':
          description: Gets the details of the specified authorization server.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/OAuth2AuthorizationServerContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - AuthorizationServers
    patch:
      description: Updates the details of the authorization server specified by its identifier.
      operationId: AuthorizationServers_Update
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - $ref: '#/parameters/AuthenticationServerIdParameter'
        - description: OAuth2 Server settings Update parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/OAuth2AuthorizationServerUpdateContract'
        - description: The entity state (Etag) version of the authorization server to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '204':
          description: The authorization server settings were successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - AuthorizationServers
    put:
      description: Creates new authorization server or updates an existing authorization server.
      operationId: AuthorizationServers_CreateOrUpdate
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
          x-ms-parameter-location: method
        - description: The name of the API Management service.
          in: path
          maxLength: 50
          minLength: 1
          name: serviceName
          pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
          required: true
          type: string
          x-ms-parameter-location: method
        - $ref: '#/parameters/AuthenticationServerIdParameter'
        - description: Create or update parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/OAuth2AuthorizationServerContract'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
        - description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
          in: path
          name: subscriptionId
          required: true
          type: string
      responses:
        '201':
          description: Authorization server was successfully registered.
        '204':
          description: Authorization server is already registered.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - AuthorizationServers
definitions:
  AuthorizationServerCollection:
    description: Paged OAuth2 Authorization Servers list representation.
    properties:
      count:
        description: Total record count number across all pages.
        format: int64
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        description: Page values.
        items:
          $ref: '#/definitions/OAuth2AuthorizationServerContract'
        type: array
  OAuth2AuthorizationServerContract:
    description: External OAuth authorization server settings.
    properties:
      authorizationEndpoint:
        description: 'OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.'
        type: string
      authorizationMethods:
        description: HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
        items:
          enum:
            - HEAD
            - OPTIONS
            - TRACE
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          type: string
          x-ms-enum:
            modelAsString: false
            name: MethodContract
        type: array
      bearerTokenSendingMethods:
        description: 'Specifies the mechanism by which access token is passed to the API. '
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-4'
        items:
          enum:
            - authorizationHeader
            - query
          type: string
          x-ms-enum:
            modelAsString: false
            name: BearerTokenSendingMethodsContract
        type: array
      clientAuthenticationMethod:
        description: 'Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.'
        items:
          enum:
            - Basic
            - Body
          type: string
          x-ms-enum:
            modelAsString: false
            name: ClientAuthenticationMethodContract
        type: array
      clientId:
        description: Client or app id registered with this authorization server.
        type: string
      clientRegistrationEndpoint:
        description: Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
        type: string
      clientSecret:
        description: Client or app secret registered with this authorization server.
        type: string
      defaultScope:
        description: Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.3'
        type: string
      description:
        description: Description of the authorization server. Can contain HTML formatting tags.
        type: string
      grantTypes:
        description: 'Form of an authorization grant, which the client uses to request the access token.'
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-4'
        items:
          enum:
            - authorizationCode
            - implicit
            - resourceOwnerPassword
            - clientCredentials
          type: string
          x-ms-enum:
            modelAsString: false
            name: GrantTypesContract
        type: array
      id:
        description: 'Uniquely identifies the authorization server within the current API Management service instance. The value is a valid relative URL in the format of /authorizationServers/{authsid} where {authsid} is an authorization server identifier.'
        readOnly: true
        type: string
      name:
        description: User-friendly authorization server name.
        maxLength: 50
        minLength: 1
        type: string
      resourceOwnerPassword:
        description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
        type: string
      resourceOwnerUsername:
        description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
        type: string
      supportState:
        description: 'If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.'
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.1'
        type: boolean
      tokenBodyParameters:
        description: 'Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.'
        items:
          $ref: '#/definitions/TokenBodyParameterContract'
        type: array
      tokenEndpoint:
        description: OAuth token endpoint. Contains absolute URI to entity being referenced.
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.1'
        type: string
    required:
      - name
      - clientRegistrationEndpoint
      - authorizationEndpoint
      - clientId
      - grantTypes
  OAuth2AuthorizationServerUpdateContract:
    description: External OAuth authorization server Update settings contract.
    properties:
      authorizationEndpoint:
        description: 'OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.'
        type: string
      authorizationMethods:
        description: HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
        items:
          enum:
            - HEAD
            - OPTIONS
            - TRACE
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          type: string
          x-ms-enum:
            modelAsString: false
            name: MethodContract
        type: array
      bearerTokenSendingMethods:
        description: 'Specifies the mechanism by which access token is passed to the API. '
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-4'
        items:
          enum:
            - authorizationHeader
            - query
          type: string
          x-ms-enum:
            modelAsString: false
            name: BearerTokenSendingMethodsContract
        type: array
      clientAuthenticationMethod:
        description: 'Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.'
        items:
          enum:
            - Basic
            - Body
          type: string
          x-ms-enum:
            modelAsString: false
            name: ClientAuthenticationMethodContract
        type: array
      clientId:
        description: Client or app id registered with this authorization server.
        type: string
      clientRegistrationEndpoint:
        description: Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
        type: string
      clientSecret:
        description: Client or app secret registered with this authorization server.
        type: string
      defaultScope:
        description: Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.3'
        type: string
      description:
        description: Description of the authorization server. Can contain HTML formatting tags.
        type: string
      grantTypes:
        description: 'Form of an authorization grant, which the client uses to request the access token.'
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-4'
        items:
          enum:
            - authorizationCode
            - implicit
            - resourceOwnerPassword
            - clientCredentials
          type: string
          x-ms-enum:
            modelAsString: false
            name: GrantTypesContract
        type: array
      name:
        description: User-friendly authorization server name.
        maxLength: 50
        minLength: 1
        type: string
      resourceOwnerPassword:
        description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
        type: string
      resourceOwnerUsername:
        description: Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
        type: string
      supportState:
        description: 'If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.'
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.1'
        type: boolean
      tokenBodyParameters:
        description: 'Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.'
        items:
          $ref: '#/definitions/TokenBodyParameterContract'
        type: array
      tokenEndpoint:
        description: OAuth token endpoint. Contains absolute URI to entity being referenced.
        externalDocs:
          url: 'http://tools.ietf.org/html/rfc6749#section-3.1'
        type: string
  TokenBodyParameterContract:
    description: OAuth acquire token request body parameter (www-url-form-encoded).
    properties:
      name:
        description: body parameter name.
        type: string
      value:
        description: body parameter value.
        type: string
    required:
      - name
      - value
