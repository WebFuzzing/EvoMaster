openapi: 3.0.0
servers:
  - url: https://news.api.gov.bc.ca/
info:
  description: News API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: BC Gov News API Service 1.0
  version: "1.0"
  x-apisguru-categories:
    - open_data
  x-logo:
    url: https://avatars1.githubusercontent.com/u/916280?v=3&s=200
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 2.6.2
      format: openapi
      url: https://raw.githubusercontent.com/bcgov/api-specs/master/news/news-oas3.yaml
      version: "3.0"
  x-providerName: gov.bc.ca
  x-serviceName: news
paths:
  /api/FacebookPosts/ByUri:
    get:
      operationId: FacebookPosts_GetByUri
      parameters:
        - description: ""
          in: query
          name: uri
          required: false
          schema:
            default: ""
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacebookPost"
            text/json:
              schema:
                $ref: "#/components/schemas/FacebookPost"
            text/plain:
              schema:
                $ref: "#/components/schemas/FacebookPost"
          description: Success
      summary: Get a Facebook post based on a Uri
      tags:
        - FacebookPosts
  /api/Home:
    get:
      operationId: Home_Get
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Home"
            text/json:
              schema:
                $ref: "#/components/schemas/Home"
            text/plain:
              schema:
                $ref: "#/components/schemas/Home"
          description: Success
      summary: Returns the top level content for the home page
      tags:
        - Home
  /api/Ministries:
    get:
      operationId: Ministries_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Ministry"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Ministry"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Ministry"
                type: array
          description: Success
      summary: Get all ministries
      tags:
        - Ministries
  "/api/Ministries/{key}":
    get:
      operationId: Ministries_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ministry"
            text/json:
              schema:
                $ref: "#/components/schemas/Ministry"
            text/plain:
              schema:
                $ref: "#/components/schemas/Ministry"
          description: Success
      summary: Get the Ministry associated with the ministry key
      tags:
        - Ministries
  "/api/Ministries/{key}/Minister":
    get:
      operationId: Ministries_GetMinister
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Minister"
            text/json:
              schema:
                $ref: "#/components/schemas/Minister"
            text/plain:
              schema:
                $ref: "#/components/schemas/Minister"
          description: Success
      summary: Get the Minister associated with the ministry key
      tags:
        - Ministries
  /api/Newsletters:
    get:
      operationId: Newsletters_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Newsletter"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Newsletter"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Newsletter"
                type: array
          description: Success
      summary: Get all newsletters
      tags:
        - Newsletters
  "/api/Newsletters/Images/{guid}":
    get:
      operationId: Newsletters_GetImage
      parameters:
        - description: ""
          in: path
          name: guid
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditionImage"
            text/json:
              schema:
                $ref: "#/components/schemas/EditionImage"
            text/plain:
              schema:
                $ref: "#/components/schemas/EditionImage"
          description: Success
      summary: Get the image object reference by of a Newsletter Edition associated with the image guid
      tags:
        - Newsletters
  "/api/Newsletters/{newsletterKey}":
    get:
      operationId: Newsletters_GetOne
      parameters:
        - in: path
          name: newsletterKey
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Newsletter"
            text/json:
              schema:
                $ref: "#/components/schemas/Newsletter"
            text/plain:
              schema:
                $ref: "#/components/schemas/Newsletter"
          description: Success
      summary: Get a specific newsletter
      tags:
        - Newsletters
  "/api/Newsletters/{newsletterKey}/Editions/{editionKey}":
    get:
      operationId: Newsletters_GetEdition
      parameters:
        - description: ""
          in: path
          name: newsletterKey
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: editionKey
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Edition"
            text/json:
              schema:
                $ref: "#/components/schemas/Edition"
            text/plain:
              schema:
                $ref: "#/components/schemas/Edition"
          description: Success
      summary: Returns a specific edition of a newsletter
      tags:
        - Newsletters
  "/api/Newsletters/{newsletterKey}/Editions/{editionKey}/Articles/{articleKey}":
    get:
      operationId: Newsletters_GetArticle
      parameters:
        - description: ""
          in: path
          name: newsletterKey
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: editionKey
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: articleKey
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
            text/json:
              schema:
                $ref: "#/components/schemas/Article"
            text/plain:
              schema:
                $ref: "#/components/schemas/Article"
          description: Success
      summary: Get an article belonging to a Newsletter edition
      tags:
        - Newsletters
  /api/Posts:
    get:
      operationId: Posts_Get
      parameters:
        - description: ""
          explode: true
          in: query
          name: postKeys
          required: false
          schema:
            default: ""
            items:
              type: string
            type: array
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
          description: Success
      summary: Get the posts associated with the keys in the list passed in.
      tags:
        - Posts
  "/api/Posts/Keys/{indexKind}/{indexKey}":
    get:
      operationId: Posts_GetAllKeys
      parameters:
        - description: home or one of categories
          in: path
          name: indexKind
          required: true
          schema:
            type: string
        - description: default or one key of the categories (ministries, sectors, services, tags, themes)
          in: path
          name: indexKey
          required: true
          schema:
            type: string
        - description: "One of: releases, stories, factsheets, updates or default (releases+stories+factsheets)"
          in: query
          name: postKind
          required: false
          schema:
            default: ""
            type: string
        - description: number of posts to return
          in: query
          name: count
          required: false
          schema:
            default: ""
            format: int32
            type: integer
        - description: number of posts to skip
          in: query
          name: skip
          required: false
          schema:
            default: ""
            format: int32
            type: integer
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KeyValuePair_2"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/KeyValuePair_2"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/KeyValuePair_2"
                type: array
          description: Success
      summary: Get all keys for the specified index (newsroom or category)
      tags:
        - Posts
  "/api/Posts/Keys/{reference}":
    get:
      operationId: Posts_GetKeyFromReference
      parameters:
        - description: ""
          in: path
          name: reference
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValuePair_2"
            text/json:
              schema:
                $ref: "#/components/schemas/KeyValuePair_2"
            text/plain:
              schema:
                $ref: "#/components/schemas/KeyValuePair_2"
          description: Success
      summary: Get the post key associated with the reference.
      tags:
        - Posts
  "/api/Posts/Latest/{indexKind}/{indexKey}":
    get:
      operationId: Posts_GetLatest
      parameters:
        - description: home or one of categories
          in: path
          name: indexKind
          required: true
          schema:
            type: string
        - description: default or one key of the categories (ministries, sectors, services, tags, themes)
          in: path
          name: indexKey
          required: true
          schema:
            type: string
        - description: "One of: releases, stories, factsheets, updates or default (releases+stories except top/feature)"
          in: query
          name: postKind
          required: false
          schema:
            default: ""
            type: string
        - description: number of posts to return
          in: query
          name: count
          required: false
          schema:
            default: ""
            format: int32
            type: integer
        - description: number of posts to skip
          in: query
          name: skip
          required: false
          schema:
            default: ""
            format: int32
            type: integer
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Post"
                type: array
          description: Success
      summary: Get the latest posts of postKind for the specified index (default or category)
      tags:
        - Posts
  "/api/Posts/LatestMediaUri/{mediaType}":
    get:
      operationId: Posts_GetLatestMediaUri
      parameters:
        - description: ""
          in: path
          name: mediaType
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
          description: Success
      summary: Gets the latest Social Media post for the social media type passed in.
      tags:
        - Posts
  "/api/Posts/{key}":
    get:
      operationId: Posts_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
            text/json:
              schema:
                $ref: "#/components/schemas/Post"
            text/plain:
              schema:
                $ref: "#/components/schemas/Post"
          description: Success
      summary: Get the post associated with the key
      tags:
        - Posts
  /api/ResourceLinks:
    get:
      operationId: ResourceLinks_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceLink"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceLink"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceLink"
                type: array
          description: Success
      summary: Get all resource links
      tags:
        - ResourceLinks
  /api/Sectors:
    get:
      operationId: Sectors_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Sector"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Sector"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Sector"
                type: array
          description: Success
      summary: Get all Sectors
      tags:
        - Sectors
  "/api/Sectors/{key}":
    get:
      operationId: Sectors_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sector"
            text/json:
              schema:
                $ref: "#/components/schemas/Sector"
            text/plain:
              schema:
                $ref: "#/components/schemas/Sector"
          description: Success
      summary: Get the sector associated with the key
      tags:
        - Sectors
  /api/Services:
    get:
      operationId: Services_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Service"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Service"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Service"
                type: array
          description: Success
      summary: Get all Services
      tags:
        - Services
  "/api/Services/{key}":
    get:
      operationId: Services_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
            text/json:
              schema:
                $ref: "#/components/schemas/Service"
            text/plain:
              schema:
                $ref: "#/components/schemas/Service"
          description: Success
      summary: Get the service associated with the passed key
      tags:
        - Services
  /api/Slides:
    get:
      operationId: Slides_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Slide"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Slide"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Slide"
                type: array
          description: Success
      summary: Get all Slides
      tags:
        - Slides
  "/api/Slides/{id}":
    get:
      operationId: Slides_GetOne
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide"
            text/json:
              schema:
                $ref: "#/components/schemas/Slide"
            text/plain:
              schema:
                $ref: "#/components/schemas/Slide"
          description: Success
      summary: Get the slide associated to the id
      tags:
        - Slides
  /api/Tags:
    get:
      operationId: Tags_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
          description: Success
      summary: Get all Tags
      tags:
        - Tags
  "/api/Tags/{key}":
    get:
      operationId: Tags_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
            text/json:
              schema:
                $ref: "#/components/schemas/Tag"
            text/plain:
              schema:
                $ref: "#/components/schemas/Tag"
          description: Success
      summary: Get the Tag associated with the key
      tags:
        - Tags
  /api/Themes:
    get:
      operationId: Themes_GetAll
      parameters:
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Theme"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Theme"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Theme"
                type: array
          description: Success
      summary: Get all Themes
      tags:
        - Themes
  "/api/Themes/{key}":
    get:
      operationId: Themes_GetOne
      parameters:
        - description: ""
          in: path
          name: key
          required: true
          schema:
            type: string
        - description: The requested API version
          in: query
          name: api-version
          required: true
          schema:
            default: "1.0"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme"
            text/json:
              schema:
                $ref: "#/components/schemas/Theme"
            text/plain:
              schema:
                $ref: "#/components/schemas/Theme"
          description: Success
      summary: Get the Theme associated with the key
      tags:
        - Themes
components:
  schemas:
    Article:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        editionName:
          type: string
        htmlBody:
          type: string
      type: object
    Asset:
      properties:
        key:
          type: string
        label:
          type: string
        length:
          format: int64
          type: integer
      type: object
    Category:
      allOf:
        - $ref: "#/components/schemas/DataIndex"
      properties:
        audioUri:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        topPostKey:
          type: string
        twitterFeedUsername:
          type: string
        youtubeUri:
          type: string
      type: object
    Contact:
      properties:
        emailAddress:
          type: string
        fullName:
          type: string
        mobileNumber:
          type: string
        phoneNumber:
          type: string
      type: object
    DataIndex:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        featurePostKey:
          type: string
        kind:
          type: string
        name:
          type: string
        topPostKey:
          type: string
      type: object
    DataModel:
      properties:
        key:
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    Document:
      properties:
        byline:
          type: string
        contacts:
          items:
            $ref: "#/components/schemas/DocumentContact"
          type: array
        detailsHtml:
          type: string
        headline:
          type: string
        languageId:
          format: int32
          type: integer
        pageTitle:
          type: string
        subheadline:
          type: string
      type: object
    DocumentContact:
      properties:
        details:
          type: string
        title:
          type: string
      type: object
    Edition:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        htmlBody:
          type: string
        name:
          type: string
      type: object
    EditionImage:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        fileName:
          type: string
        imageBytes:
          format: byte
          type: string
        imageType:
          type: string
      type: object
    FacebookPost:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        content:
          type: string
        facebookObjectId:
          format: int32
          type: integer
        pictureUri:
          type: string
        postComments:
          format: int32
          type: integer
        postLikes:
          format: int32
          type: integer
        postShares:
          format: int32
          type: integer
        poster:
          type: string
        posterLikes:
          format: int32
          type: integer
        posterLogo:
          type: string
        posterSubtitle:
          type: string
        type:
          type: string
      type: object
    Home:
      allOf:
        - $ref: "#/components/schemas/DataIndex"
      properties:
        featurePostKey:
          type: string
        liveWebcastFlashMediaManifestUrl:
          type: string
        liveWebcastM3uPlaylist:
          type: string
        name:
          type: string
        topPostKey:
          type: string
      type: object
    KeyValuePair_2:
      properties:
        key:
          readOnly: true
          type: string
        value:
          readOnly: true
          type: string
      type: object
    Minister:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        details:
          type: string
        emailHtml:
          type: string
        headline:
          type: string
        photo:
          type: string
        post:
          type: string
        summary:
          type: string
      type: object
    Ministry:
      allOf:
        - $ref: "#/components/schemas/Category"
      properties:
        audioUri:
          type: string
        childMinistryKey:
          type: string
        contactUser:
          $ref: "#/components/schemas/Contact"
        displayAdditionalName:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        ministerName:
          type: string
        ministryUrl:
          type: string
        name:
          type: string
        newsletterLinks:
          items:
            $ref: "#/components/schemas/ResourceLink"
          type: array
        parentMinistryKey:
          type: string
        secondContactUser:
          $ref: "#/components/schemas/Contact"
        serviceLinks:
          items:
            $ref: "#/components/schemas/ResourceLink"
          type: array
        topPostKey:
          type: string
        topicLinks:
          items:
            $ref: "#/components/schemas/ResourceLink"
          type: array
        twitterFeedUsername:
          type: string
        weekendContactNumber:
          type: string
        youtubeUri:
          type: string
      type: object
    Newsletter:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        description:
          type: string
        editions:
          items:
            $ref: "#/components/schemas/KeyValuePair_2"
          type: array
        ministryName:
          type: string
        name:
          type: string
      type: object
    Post:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        assetUrl:
          type: string
        atomId:
          type: string
        azureAssets:
          items:
            $ref: "#/components/schemas/Asset"
          type: array
        documents:
          items:
            $ref: "#/components/schemas/Document"
          type: array
        facebookPictureUri:
          type: string
        hasMediaAssets:
          type: boolean
        isNewsOnDemand:
          type: boolean
        keywords:
          type: string
        kind:
          type: string
        leadMinistryKey:
          type: string
        location:
          type: string
        ministryKeys:
          items:
            type: string
          type: array
        publishDate:
          format: date-time
          type: string
        redirectUri:
          type: string
        reference:
          type: string
        sectorKeys:
          items:
            type: string
          type: array
        serviceKeys:
          items:
            type: string
          type: array
        socialMediaHeadline:
          type: string
        socialMediaSummary:
          type: string
        summary:
          type: string
      type: object
    ResourceLink:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        uri:
          type: string
      type: object
    Sector:
      allOf:
        - $ref: "#/components/schemas/Category"
      properties:
        audioUri:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        topPostKey:
          type: string
        twitterFeedUsername:
          type: string
        youtubeUri:
          type: string
      type: object
    Service:
      allOf:
        - $ref: "#/components/schemas/Category"
      properties:
        audioUri:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        topPostKey:
          type: string
        twitterFeedUsername:
          type: string
        youtubeUri:
          type: string
      type: object
    Slide:
      allOf:
        - $ref: "#/components/schemas/DataModel"
      properties:
        actionLabel:
          type: string
        actionUri:
          type: string
        facebookPostUri:
          type: string
        headline:
          type: string
        image:
          format: byte
          type: string
        imageType:
          readOnly: true
          type: string
        justify:
          type: string
        slideId:
          format: uuid
          type: string
        summary:
          type: string
      type: object
    Tag:
      allOf:
        - $ref: "#/components/schemas/Category"
      properties:
        audioUri:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        topPostKey:
          type: string
        twitterFeedUsername:
          type: string
        youtubeUri:
          type: string
      type: object
    Theme:
      allOf:
        - $ref: "#/components/schemas/Category"
      properties:
        audioUri:
          type: string
        featurePostKey:
          type: string
        flickrUri:
          type: string
        isActive:
          type: boolean
        name:
          type: string
        topPostKey:
          type: string
        twitterFeedUsername:
          type: string
        youtubeUri:
          type: string
      type: object
