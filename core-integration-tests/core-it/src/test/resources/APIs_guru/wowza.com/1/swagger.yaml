swagger: "2.0"
schemes:
  - https
host: api-sandbox.cloud.wowza.com
basePath: /api/v1
info:
  contact:
    name: Contact Us
    url: https://www.wowza.com/contact
    x-twitter: wowzamedia
  description: |
    
    # About the REST API

    The Wowza Streaming Cloud<sup>TM</sup> REST API (application programming interface) offers complete programmatic control over live streams, transcoders, stream sources, and stream targets. Anything you can do in the Wowza Streaming Cloud UI can also be achieved by making HTTP-based requests to cloud-based servers through the REST API.

    The Wowza Streaming Cloud REST API features *cross-origin resource sharing*, or CORS.
    CORS is a [W3C specification](https://www.w3.org/TR/cors/) that provides headers in HTTP requests to enable a web server to safely make a network request to another domain.

    In order to protect shared resources, the Wowza Streaming Cloud REST API is subject to limits. For details, see [Wowza Streaming Cloud REST API limits](https://www.wowza.com/docs/wowza-streaming-cloud-rest-api-limits).
    # About this documentation
    This reference documentation is based on the open-source [Swagger framework](http://swagger.io/specification/).
    It allows you to view the operations, parameters, and request and reponse schemas for every resource. Request samples are presented in cURL (Shell) and JavaScript; some samples also include just the JSON object. Response samples are all JSON.

    For more information and examples on using the Wowza Streaming Cloud REST API, see our [library of Wowza Streaming Cloud REST API technical articles](https://www.wowza.com/docs/wowza-streaming-cloud-rest-api).

    # Query requirements
    The Wowza Streaming Cloud REST API uses HTTP requests to retrieve data from cloud-based servers. Requests must contain proper JSON, two authentication keys, and the correct version number in the base path.

    ## JSON
    The Wowza Streaming Cloud REST API uses the [JSON API specification](http://jsonapi.org/format/) to request and return data. This means requests must include the header `Content-Type: application/json` and must include a single resource object in JSON format as primary data.

    Responses include HTTP status codes that indicate whether the query was successful. If there was an error, a description explains the problem so that you can fix it and try again.

    ## Authentication
    Requests to the Wowza Streaming Cloud REST API must be authenticated with two keys: an API key and an access key. Each key is a 64-character alphanumeric string that you can find on the **API Access** page in Wowza Streaming Cloud.

    Use the `wsc-api-key` and `wsc-access-key` headers to authenticate requests, like this (in cURL):

    ```bash
    curl -H 'wsc-api-key: [64-character-api-key-goes-here]' -H 'wsc-access-key: [64-character-access-key-goes-here]'
    ```

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Version
    The Wowza Streaming Cloud API is currently at version 1.0.0. Use `v1` in your base path in every request, like this path to the live_streams endpoint:
    ```
    https://api.cloud.wowza.com/api/v1/live_streams
    ```
    ## Example query
    Here is a complete example POST request, in cURL, with proper JSON syntax, headers, authentication, and version information:
    ```bash
    curl -H 'wsc-api-key: [64-character-api-key-goes-here]' -H 'wsc-access-key: [64-character-access-key-goes-here]'
      -H 'Content-Type: application/json' -X POST -d '{
        "live_stream": {
          "name": "My live Stream",
          "...": "..."
        }
      }' https://api.cloud.wowza.com/api/v1/live_streams
    ```
  license:
    name: Terms of Use
    url: https://www.wowza.com/legal/terms-of-use
  termsOfService: http://www.wowza.com/legal/terms-of-use
  title: Wowza Streaming Cloud REST API Reference Documentation
  version: "1"
  x-apisguru-categories:
    - media
  x-logo:
    url: https://twitter.com/wowzamedia/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://sandbox.cloud.wowza.com/en/docs/api/v1
      version: "2.0"
  x-providerName: wowza.com
externalDocs:
  description: "Quick Start: How to broadcast a live stream by using the Wowza Streaming Cloud REST API"
  url: https://www.wowza.com/docs/how-to-broadcast-a-live-stream-by-using-the-wowza-streaming-cloud-rest-api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  wsc-access-key:
    description: A valid 64-digit, alphanumeric API access key.
    in: header
    name: wsc-access-key
    type: apiKey
  wsc-api-key:
    description: "Your account's 64-digit, alphanumeric API key. "
    in: header
    name: wsc-api-key
    type: apiKey
security:
  - wsc-api-key: []
  - wsc-access-key: []
parameters:
  "filter[from]":
    description: The start of the date and time range for calculating usage. Express the value by using the ISO 8601 standard of **YYYY-MM-DDTHH:MM:SSZ** where **HH** is a 24-hour clock in UTC. The default is the beginning of the current month.
    in: query
    name: filter[from]
    type: string
  "filter[interval]":
    description: The length of time for a block of usage data. Valid values are **year**, **quarter**, **month**, **week**, **day** or **1d** - **364d**, **hour** or **1h** to **23h**, **minute** or **1m** - **59m**, and **second** or **1s** - **59s**. The default is **10m** (10 minutes).
    in: query
    name: filter[interval]
    type: string
  "filter[to]":
    description: The end of the date and time range for calculating usage. Express the value by using the ISO 8601 standard of **YYYY-MM-DDTHH:MM:SSZ** where **HH** is a 24-hour clock in UTC. The default is the current date and time.
    in: query
    name: filter[to]
    type: string
  page:
    description: Returns a paginated view of results from the HTTP request. Specify a positive integer to indicate which page of the results should be displayed first. <strong>Next</strong> and <strong>Previous</strong> links allow you to navigate multiple pages of results. Omit the <em>page</em> parameter or specify an integer that's less than or equal to <strong>0</strong> to view all (unpaginated) results.
    in: query
    name: page
    type: integer
  per_page:
    description: For use with the <em>page</em> parameter. Indicates how many records should be included on each page of results. A valid value is any positive integer. The default is <strong>10</strong>.
    in: query
    name: per_page
    type: integer
tags:
  - description: Operations related to live streams.
    name: live_streams
    x-displayName: Live Streams
  - description: Operations related to players, which are created through the /live_streams resource.
    name: players
    x-displayName: Players
  - description: Operations related to recordings.
    name: recordings
    x-displayName: Recordings
  - description: Operations related to schedules.
    name: schedules
    x-displayName: Schedules
  - description: Operations related to stream sources.
    name: stream_sources
    x-displayName: Stream Sources
  - description: Operations related to stream targets.
    name: stream_targets
    x-displayName: Stream Targets
  - description: Operations related to transcoders, output renditions, and output stream targets.
    name: transcoders
    x-displayName: Transcoders
  - description: Operations related to network usage for an account.
    name: network
    x-displayName: Network
  - description: Operations related to stream processing time for an account.
    name: processing time
    x-displayName: Processing Time
  - description: Operations related to the Swagger specification.
    name: specs
    x-displayName: Specs
  - description: Operations related to peak recording storage for an account.
    name: storage
    x-displayName: Storage
  - description: Operations related to stream target viewer data.
    name: viewer data
    x-displayName: Viewer Data
paths:
  /api/v1/specs:
    get:
      description: |
        This operation shows the details of the Swagger specification.
      operationId: specs
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Spec"
      security:
        - {}
      summary: Fetch Swagger information
      tags:
        - specs
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/specs"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            https.get('https://api-sandbox.cloud.wowza.com/api/v1/specs', function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /live_streams:
    get:
      description: This operation shows the details of all of your live streams.
      operationId: listLiveStreams
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/live_streams"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all live streams
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a live stream.
      operationId: createLiveStream
      parameters:
        - description: Provide the details of the live stream to create in the body of the request.
          in: body
          name: live_stream
          required: true
          schema:
            $ref: "#/definitions/live_stream_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                $ref: "#/definitions/live_stream"
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams" \
                 -d $'{
              "live_stream": {
                "name": "My New Live Stream",
                "transcoder_type": "transcoded",
                "billing_mode": "pay_as_you_go",
                "broadcast_location": "us_west_california",
                "encoder": "other_rtmp",
                "delivery_method": "push",
                "aspect_ratio_width": 1920,
                "aspect_ratio_height": 1080
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams',
              method: 'POST',
              headers: {
                'api-key': 'a726c273...',
                'access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "live_stream": {
                "name": "My New Live Stream"
              }
            }));
            req.end();
  "/live_streams/{id}":
    delete:
      description: This operation deletes a live stream, including all assigned outputs and targets.
      operationId: deleteLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific live stream.
      operationId: showLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                $ref: "#/definitions/live_stream"
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a live stream.
      operationId: updateLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the live stream to update in the body of the request.
          in: body
          name: live_stream
          required: true
          schema:
            $ref: "#/definitions/live_stream_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                $ref: "#/definitions/live_stream"
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17" \
                 -d $'{
              "live_stream": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "live_stream": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/live_streams/{id}/regenerate_connection_code":
    put:
      description: This operation regenerates the connection code of a live stream.
      operationId: regenerateConnectionCodeLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  connection_code:
                    description: A six-character, alphanumeric string that allows certain encoders, including Wowza Streaming Engine and the Wowza GoCoder app, to connect with Wowza Streaming Cloud. The code can be used once and expires 24 hours after it's created.
                    example: 0cd2e8
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Regenerate the connection code for a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/regenerate_connection_code"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/regenerate_connection_code',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/live_streams/{id}/reset":
    put:
      description: This operation resets a live stream.
      operationId: resetLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  state:
                    description: The state of the live stream.
                    enum:
                      - started
                      - stopped
                      - starting
                      - stopping
                      - resetting
                    example: resetting
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Reset a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/reset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/reset',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/live_streams/{id}/start":
    put:
      description: This operation starts a live stream.
      operationId: startLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  state:
                    description: The state of the live stream.
                    enum:
                      - started
                      - stopped
                      - starting
                      - stopping
                      - resetting
                    example: starting
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Start a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/start"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/start',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/live_streams/{id}/state":
    get:
      description: This operation shows the current state of a live stream.
      operationId: showLiveStreamState
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  state:
                    description: The state of the live stream.
                    enum:
                      - started
                      - stopped
                      - starting
                      - stopping
                      - resetting
                    example: stopped
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the state of a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/state"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/state',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/live_streams/{id}/stats":
    get:
      description: This operation returns a hash of metrics keys, each of which identifies a status, text description, unit, and value.
      operationId: showLiveStreamStats
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                $ref: "#/definitions/shm_metrics"
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch metrics for an active live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/stats"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/stats',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/live_streams/{id}/stop":
    put:
      description: This operation stops a live stream.
      operationId: stopLiveStream
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  state:
                    description: The state of the live stream.
                    enum:
                      - started
                      - stopped
                      - starting
                      - stopping
                      - resetting
                    example: stopped
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Stop a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/stop"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/stop',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/live_streams/{id}/thumbnail_url":
    get:
      description: This operation shows the thumbnail URL of a started live stream.
      operationId: showLiveStreamThumbnailUrl
      parameters:
        - description: The unique alphanumeric string that identifies the live stream.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              live_stream:
                properties:
                  thumbnail_url:
                    description: The URL to receive the preview thumbnail.
                    example: https://cloud.wowza.com/proxy/stats/?target=10.11.12.13&app=app-79b8&stream=99b62146@130135.stream&media=json
                    type: string
                title: live_stream
                type: object
            required:
              - live_stream
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the thumbnail URL of a live stream
      tags:
        - live_streams
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/thumbnail_url"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/live_streams/2adffc17/thumbnail_url',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /players:
    get:
      description: This operation shows the details of all of your players.
      operationId: listPlayers
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/players"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all players
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/players"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/players/{id}":
    get:
      description: This operation shows details of a specific player.
      operationId: showPlayer
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              player:
                $ref: "#/definitions/player"
            required:
              - player
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a player
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a player.
      operationId: updatePlayer
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the player to update in the body of the request.
          in: body
          name: player
          required: true
          schema:
            $ref: "#/definitions/player_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              player:
                $ref: "#/definitions/player"
            required:
              - player
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a player
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17" \
                 -d $'{
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/players/{id}/rebuild":
    post:
      description: This operation rebuilds the player with the current configuration.
      operationId: requestPlayerRebuild
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              player:
                properties:
                  state:
                    description: The state of the player.
                    enum:
                      - requested
                      - already_requested
                      - activated
                      - archived
                    example: requested
                    type: string
                title: player
                type: object
            required:
              - player
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Rebuild player code
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/rebuild"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/rebuild',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/players/{id}/state":
    get:
      description: This operation shows the current state of a player.
      operationId: showPlayerState
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              player:
                properties:
                  state:
                    description: The state of the player.
                    enum:
                      - requested
                      - already_requested
                      - activated
                      - archived
                    example: activated
                    type: string
                title: player
                type: object
            required:
              - player
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the state of a player
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/state"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/state',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/players/{player_id}/urls":
    get:
      description: This operation shows the details of all player URLs.
      operationId: listPlayerUrls
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: player_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/urls"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch all player URLs
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/urls',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a new player URL.
      operationId: createPlayerUrl
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: player_id
          required: true
          type: string
        - description: Provide the details of the player URL to create in the body of the request.
          in: body
          name: url
          required: true
          schema:
            $ref: "#/definitions/url_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              url:
                $ref: "#/definitions/url"
            required:
              - url
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a player URL
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls" \
                 -d $'{
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/urls',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/players/{player_id}/urls/{id}":
    delete:
      description: "This operation deletes a player URL. "
      operationId: deletePlayerUrl
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: player_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the player URL.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a player URL
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a player URL.
      operationId: showPlayerUrl
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: player_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the player URL.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              url:
                $ref: "#/definitions/url"
            required:
              - url
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a player URL
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a player URL.
      operationId: updatePlayerUrl
      parameters:
        - description: The unique alphanumeric string that identifies the player.
          in: path
          name: player_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the player URL.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the player URL to update in the body of the request.
          in: body
          name: url
          required: true
          schema:
            $ref: "#/definitions/url_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              url:
                $ref: "#/definitions/url"
            required:
              - url
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a player URL
      tags:
        - players
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset" \
                 -d $'{
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "player": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  /recordings:
    get:
      description: This operation shows the details of all of your recordings.
      operationId: listRecordings
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/recordings"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all recordings
      tags:
        - recordings
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/recordings"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/recordings',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/recordings/{id}":
    delete:
      description: This operation deletes a recording.
      operationId: deleteRecording
      parameters:
        - description: The unique alphanumeric string that identifies the recording.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a recording
      tags:
        - recordings
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/recordings/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific recording.
      operationId: showRecording
      parameters:
        - description: The unique alphanumeric string that identifies the recording.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              recording:
                $ref: "#/definitions/recording"
            required:
              - recording
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a recording
      tags:
        - recordings
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/recordings/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/recordings/{id}/state":
    get:
      description: This operation shows the current state of a recording.
      operationId: showRecordingState
      parameters:
        - description: The unique alphanumeric string that identifies the recording.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              recording:
                properties:
                  state:
                    description: The state of the recording.
                    enum:
                      - uploading
                      - converting
                      - removing
                      - completed
                      - failed
                    example: completed
                    type: string
                title: recording
                type: object
            required:
              - recording
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the state of a recording
      tags:
        - recordings
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17/state"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/recordings/2adffc17/state',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /schedules:
    get:
      description: This operation shows the details of all of your schedules.
      operationId: listSchedules
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/schedules"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all schedules
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/schedules"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a schedule.
      operationId: createSchedule
      parameters:
        - description: Provide the details of the schedule to create in the body of the request.
          in: body
          name: schedule
          required: true
          schema:
            $ref: "#/definitions/schedule_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                $ref: "#/definitions/schedule"
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/schedules" \
                 -d $'{
              "schedule": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "schedule": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/schedules/{id}":
    delete:
      description: This operation deletes a schedule.
      operationId: deleteSchedule
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific schedule.
      operationId: showSchedule
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                $ref: "#/definitions/schedule"
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a schedule.
      operationId: updateSchedule
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the schedule to update in the body of the request.
          in: body
          name: schedule
          required: true
          schema:
            $ref: "#/definitions/schedule_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                $ref: "#/definitions/schedule"
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17" \
                 -d $'{
              "schedule": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "schedule": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/schedules/{id}/disable":
    put:
      description: This operation disables a schedule.
      operationId: disableSchedule
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                properties:
                  state:
                    description: A schedule must be <strong>enabled</strong> to run. Specify <strong>enabled</strong> to run the schedule or <strong>disabled</strong> to turn off the schedule so that it doesn't run.
                    enum:
                      - enabled
                      - disabled
                      - expired
                    example: disabled
                    type: string
                title: schedule
                type: object
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Disable a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/disable"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17/disable',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/schedules/{id}/enable":
    put:
      description: This operation enables a schedule.
      operationId: enableSchedule
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                properties:
                  state:
                    description: A schedule must be <strong>enabled</strong> to run. Specify <strong>enabled</strong> to run the schedule or <strong>disabled</strong> to turn off the schedule so that it doesn't run.
                    enum:
                      - enabled
                      - disabled
                      - expired
                    example: enabled
                    type: string
                title: schedule
                type: object
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Enable a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/enable"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17/enable',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/schedules/{id}/state":
    get:
      description: This operation shows the current state of a schedule.
      operationId: showScheduleState
      parameters:
        - description: The unique alphanumeric string that identifies the schedule.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              schedule:
                properties:
                  state:
                    description: A schedule must be <strong>enabled</strong> to run. Specify <strong>enabled</strong> to run the schedule or <strong>disabled</strong> to turn off the schedule so that it doesn't run.
                    enum:
                      - enabled
                      - disabled
                      - expired
                    example: enabled
                    type: string
                title: schedule
                type: object
            required:
              - schedule
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the state of a schedule
      tags:
        - schedules
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/state"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/schedules/2adffc17/state',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /stream_sources:
    get:
      description: This operation shows the details of all of your stream sources.
      operationId: listStreamSources
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/stream_sources"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all stream sources
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation adds a stream source.
      operationId: createStreamSource
      parameters:
        - description: Provide the details of the stream source to add in the body of the request.
          in: body
          name: stream_source
          required: true
          schema:
            $ref: "#/definitions/stream_source_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_source:
                $ref: "#/definitions/stream_source"
            required:
              - stream_source
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Add a stream source
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources" \
                 -d $'{
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  /stream_sources/add:
    post:
      deprecated: true
      description: POST /stream_sources/add/ is deprecated. To add a stream source, use POST /stream_sources instead.
      operationId: addStreamSource
      parameters:
        - description: Provide the details of the stream source to add in the body of the request.
          in: body
          name: stream_source
          required: true
          schema:
            $ref: "#/definitions/stream_source_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_source:
                $ref: "#/definitions/stream_source"
            required:
              - stream_source
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Deprecated operation
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/add" \
                 -d $'{
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources/add',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/stream_sources/{id}":
    delete:
      description: This operation deletes a stream source.
      operationId: deleteStreamSource
      parameters:
        - description: The unique alphanumeric string that identifies the stream source.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a stream source
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows details of a specific stream source.
      operationId: showStreamSource
      parameters:
        - description: The unique alphanumeric string that identifies the stream source.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_source:
                $ref: "#/definitions/stream_source"
            required:
              - stream_source
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a stream source
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a stream source.
      operationId: updateStreamSource
      parameters:
        - description: The unique alphanumeric string that identifies the stream source.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the stream source to update in the body of the request.
          in: body
          name: stream_source
          required: true
          schema:
            $ref: "#/definitions/stream_source_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_source:
                $ref: "#/definitions/stream_source"
            required:
              - stream_source
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a stream source
      tags:
        - stream_sources
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17" \
                 -d $'{
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_sources/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_source": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  /stream_targets:
    get:
      description: This operation lists the details of all of your stream targets.
      operationId: listStreamTargets
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/stream_targets"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all stream targets
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: "This operation creates a stream target. There are three types of targets that you can create: <strong>CustomStreamTarget</strong> for an an external, third-party destination; <strong>WowzaStreamTarget</strong> for a Wowza CDN target; or <strong>UltraLowLatencyStreamTarget</strong> for an ultra low latency Wowza CDN target. The availability of many parameters depends on the type of target you create."
      operationId: createStreamTarget
      parameters:
        - description: Provide the details of the stream target to create in the body of the request.
          in: body
          name: stream_target
          required: true
          schema:
            $ref: "#/definitions/stream_target_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                $ref: "#/definitions/stream_target"
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  /stream_targets/add:
    post:
      deprecated: true
      description: POST /stream_targets/add/ is deprecated. To add a stream target, use POST /stream_targets instead.
      operationId: addStreamTarget
      parameters:
        - description: Provide the details of the stream target to add in the body of the request.
          in: body
          name: stream_target
          required: true
          schema:
            $ref: "#/definitions/wowza_stream_target_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                $ref: "#/definitions/stream_target"
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Deprecated operation
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/add" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/add',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/stream_targets/{id}":
    delete:
      description: This operation deletes a stream target.
      operationId: deleteStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows details of a specific stream target.
      operationId: showStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                $ref: "#/definitions/stream_target"
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a stream target.
      operationId: updateStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the stream target to update in the body of the request.
          in: body
          name: stream_target
          required: true
          schema:
            $ref: "#/definitions/stream_target_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                $ref: "#/definitions/stream_target"
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/stream_targets/{id}/metrics/current":
    get:
      description: This operation returns a snapshot of the current connection and throughput details for an active target whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. The interval for current metrics is 30 seconds from the moment of the query.
      operationId: showStreamTargetMetricsCurrent
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            example:
              stream_target:
                id: abcd1234
                metrics:
                  average_bytes_in: 456789.123
                  average_total_connections: 10
                  created_at: 2017-08-09T16:18:26.000Z
                  dropped_connections: 0
                  maximum_total_connections: 20
                  minimum_total_connections: 0
                  new_connections: 2
            properties:
              id:
                description: The unique alphanumeric string that identifies the stream target.
                example: abcd1234
                type: string
              metrics:
                $ref: "#/definitions/stream_target_metrics"
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch current health metrics for an active Wowza ultra low latency stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/metrics/current"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/metrics/current',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/stream_targets/{id}/metrics/historic":
    get:
      description: This operation shows historic connection and throughput details for target whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>.
      operationId: showStreamTargetMetricsHistoric
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
        - description: The start of the range of time used to aggregate the metrics. Express the value by using the ISO 8601 standard of <strong>YYYY-MM-DDTHH:MM:SSZ</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time used to aggregate the metrics. Express the value by using the ISO 8601 standard of <strong>YYYY-MM-DDTHH:MM:SSZ</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
          in: query
          name: to
          required: false
          type: string
        - description: The length of time for a block of metrics. The default is **10m** (10 minutes).
          enum:
            - second
            - minute
            - hour
            - day
            - month
            - "#s"
            - "#m"
            - "#h"
            - "#d"
          in: query
          name: interval
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            example:
              stream_target:
                id: abcd1234
                interval: 10m
                metrics:
                  - average_bytes_in: 456789.123
                    average_total_connections: 10.1
                    created_at: 2017-08-09T16:19:17.000Z
                    dropped_connections: 3
                    maximum_total_connections: 20
                    minimum_total_connections: 0
                    new_connections: 8
                  - average_bytes_in: 456789.123
                    average_total_connections: 5.25
                    created_at: 2017-08-09T16:19:07.000Z
                    dropped_connections: 2
                    maximum_total_connections: 10
                    minimum_total_connections: 0
                    new_connections: 7
                  - average_bytes_in: 456789.123
                    average_total_connections: 0
                    created_at: 2017-08-09T16:18:57.000Z
                    dropped_connections: 0
                    maximum_total_connections: 0
                    minimum_total_connections: 0
                    new_connections: 0
            properties:
              id:
                description: The unique alphanumeric string that identifies the stream target.
                example: abcd1234
                type: string
              interval:
                description: The length of time for a block of metrics. The default is **10m** (10 minutes).
                example: 10m
                type: string
              metrics:
                items:
                  $ref: "#/definitions/stream_target_metrics"
                type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch historic health metrics for a Wowza ultra low latency stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/metrics/historic"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/metrics/historic',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/stream_targets/{id}/regenerate_connection_code":
    put:
      description: This operation regenerates the connection code of a stream target.
      operationId: regenerateConnectionCodeStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                properties:
                  connection_code:
                    description: A six-character, alphanumeric string that allows Wowza Streaming Engine to send a transcoded stream to a <strong>WowzaStreamTarget</strong> or for the Wowza GoCoder app to send an encoded stream to a <strong>UltraLowLatencyStreamTarget</strong>. The code can be used once and expires 24 hours after it's created.
                    example: 0cd2e8
                    type: string
                title: stream_target
                type: object
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Regenerate the connection code for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/regenerate_connection_code"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/regenerate_connection_code',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/stream_targets/{stream_target_id}/geoblock":
    get:
      description: This operation shows the details of geo-blocking applied to a specific stream target. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can be geo-blocked.
      operationId: showStreamTargetGeoblock
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              geoblock:
                $ref: "#/definitions/geoblock"
            required:
              - geoblock
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch geo-blocking for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/geoblock',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates the geo-blocking applied to a stream target. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can be geo-blocked.
      operationId: updateStreamTargetGeoblock
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the geo-blocking to update in the body of the request.
          in: body
          name: geoblock
          required: true
          schema:
            $ref: "#/definitions/geoblock_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              geoblock:
                $ref: "#/definitions/geoblock"
            required:
              - geoblock
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update geo-blocking for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/geoblock',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
    post:
      description: This operation allows you to block or whitelist viewing of a stream target by geographic location. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can be geo-blocked. For more information see the technical article [How to geo-block stream targets by using the Wowza Streaming Cloud REST API](https://www.wowza.com/docs/how-to-geo-block-stream-targets-by-using-the-wowza-streaming-cloud-rest-api).
      operationId: createStreamTargetGeoblock
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the geo-blocking to create in the body of the request.
          in: body
          name: geoblock
          required: true
          schema:
            $ref: "#/definitions/geoblock_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              geoblock:
                $ref: "#/definitions/geoblock"
            required:
              - geoblock
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create geo-blocking for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/geoblock',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/stream_targets/{stream_target_id}/properties":
    get:
      description: This operation shows the details of all of the properties assigned to a specific stream target. Properties can be applied to a <strong>CustomStreamTarget</strong> or <strong>WowzaStreamTarget</strong> whose <em>provider</em> is <strong>akamai_cupertino</strong>.
      operationId: listStreamTargetProperties
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/stream_target_properties"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Fetch all properties of a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/properties',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a property for a stream target. Properties can be applied to a <strong>CustomStreamTarget</strong> or <strong>WowzaStreamTarget</strong> whose <em>provider</em> is <strong>akamai_cupertino</strong>. For more information see the technical article [How to set advanced properties by using the Wowza Streaming Cloud REST API](https://www.wowza.com/docs/how-to-set-advanced-properties-by-using-the-wowza-streaming-cloud-rest-api).
      operationId: createStreamTargetProperty
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the property to create in the body of the request.
          in: body
          name: property
          required: true
          schema:
            $ref: "#/definitions/stream_target_property_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              property:
                $ref: "#/definitions/stream_target_property"
            required:
              - property
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a property for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/properties',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/stream_targets/{stream_target_id}/properties/{id}":
    delete:
      description: This operation removes a property from a stream target.
      operationId: deleteStreamTargetProperty
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: The unique string that identifies the stream target property. The string contains the <em>section</em> and the <em>key</em>, connected by a dash. For example, <strong>hls-chunkSize</strong>.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a stream target property
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific property assigned to a specific stream target. Properties can be applied to a <strong>CustomStreamTarget</strong> or <strong>WowzaStreamTarget</strong> whose <em>provider</em> is <strong>akamai_cupertino</strong>.
      operationId: showStreamTargetProperty
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: The unique string that identifies the stream target property. The string contains the <em>section</em> and the <em>key</em>, connected by a dash. For example, <strong>hls-chunkSize</strong>.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              property:
                $ref: "#/definitions/stream_target_property"
            required:
              - property
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a property of a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/stream_targets/{stream_target_id}/token_auth":
    get:
      description: This operation shows the details of the token authorization applied to a stream target. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can use token authorization.
      operationId: showStreamTargetTokenAuth
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              token_auth:
                $ref: "#/definitions/token_auth"
            required:
              - token_auth
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch token authorization for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/token_auth',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates the token authorization applied to a stream target. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can use token authorization.
      operationId: updateStreamTargetTokenAuth
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the token authorization to update in the body of the request.
          in: body
          name: token_auth
          required: true
          schema:
            $ref: "#/definitions/token_auth_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              token_auth:
                $ref: "#/definitions/token_auth"
            required:
              - token_auth
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update token authorization for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/token_auth',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
    post:
      description: This operation creates token authorization for a stream target. Only stream targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> can use token authorization. For more information see the technical article [How to protect stream targets with token authorization by using the Wowza Streaming Cloud REST API](https://www.wowza.com/docs/how-to-protect-streams-with-token-authorization-by-using-the-wowza-streaming-cloud-rest-api).
      operationId: createStreamTargetTokenAuth
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the token authorization to create in the body of the request.
          in: body
          name: token_auth
          required: true
          schema:
            $ref: "#/definitions/token_auth_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              token_auth:
                $ref: "#/definitions/token_auth"
            required:
              - token_auth
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create token authorization for a stream target
      tags:
        - stream_targets
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth" \
                 -d $'{
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/stream_targets/2adffc17/token_auth',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "stream_target": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  /transcoders:
    get:
      description: This operation shows the details of all of your transcoders.
      operationId: listTranscoders
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/transcoders"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch all transcoders
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a transcoder.
      operationId: createTranscoder
      parameters:
        - description: Provide the details of the transcoder to create in the body of the request.
          in: body
          name: transcoder
          required: true
          schema:
            $ref: "#/definitions/transcoder_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                $ref: "#/definitions/transcoder"
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{id}":
    delete:
      description: This operation deletes a transcoder, including all of its assigned output renditions and stream targets.
      operationId: deleteTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific transcoder.
      operationId: showTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                $ref: "#/definitions/transcoder"
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Fetch a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates a transcoder.
      operationId: updateTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the transcoder to update in the body of the request.
          in: body
          name: transcoder
          required: true
          schema:
            $ref: "#/definitions/transcoder_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                $ref: "#/definitions/transcoder"
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{id}/disable_all_stream_targets":
    put:
      description: This operation disables all of the stream targets assigned to a specific transcoder.
      operationId: disableAllStreamTargetsTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  stream_targets:
                    properties:
                      state:
                        description: The state of the transcoder's stream targets.
                        enum:
                          - enabled
                          - disabled
                        example: enabled
                        type: string
                    title: stream_targets
                    type: object
                required:
                  - stream_targets
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Disable a transcoder's stream targets
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/disable_all_stream_targets"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/disable_all_stream_targets',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{id}/enable_all_stream_targets":
    put:
      description: This operation enables all of the stream targets assigned to a specific transcoder.
      operationId: enableAllStreamTargetsTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  stream_targets:
                    properties:
                      state:
                        description: The state of the transcoder's stream targets.
                        enum:
                          - enabled
                          - disabled
                        example: enabled
                        type: string
                    title: stream_targets
                    type: object
                required:
                  - stream_targets
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Enable a transcoder's stream targets
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/enable_all_stream_targets"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/enable_all_stream_targets',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{id}/recordings":
    get:
      description: This operation shows the details of all of the recordings for a specific transcoder.
      operationId: listTranscoderRecordings
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  recordings:
                    description: Array of recordings of this transcoder. See /recordings for more details.
                    items:
                      $ref: "#/definitions/recording"
                    type: array
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a transcoder's recordings
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/recordings"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/recordings',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{id}/reset":
    put:
      description: This operation resets a transcoder.
      operationId: resetTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  state:
                    description: The state of the transcoder.
                    enum:
                      - starting
                      - stopping
                      - started
                      - stopped
                      - resetting
                    example: resetting
                    type: string
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Reset a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/reset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/reset',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{id}/schedules":
    get:
      description: This operation shows the details of all of the schedules for a specific transcoder.
      operationId: listTranscoderSchedules
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  schedules:
                    description: Array of schedules of this transcoder. See /schedules for more details.
                    items:
                      $ref: "#/definitions/schedule"
                    type: array
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch transcoder's schedules
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/schedules"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/schedules',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{id}/start":
    put:
      description: This operation starts a transcoder.
      operationId: startTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  state:
                    description: The state of the transcoder.
                    enum:
                      - starting
                      - stopping
                      - started
                      - stopped
                      - resetting
                    example: starting
                    type: string
                  transcoding_uptime_id:
                    description: <strong>The <em>transcoding_uptime_id</em> parameter is deprecated and is replaced by <em>uptime_id</em>.</strong> The unique identifier associated with a specific uptime period of a transcoder.
                    example: abcd1234
                    type: string
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Start a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/start"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/start',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{id}/state":
    get:
      description: This operation shows the current state and uptime ID of a transcoder.
      operationId: showTranscoderState
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  state:
                    description: The state of the transcoder.
                    enum:
                      - starting
                      - stopping
                      - started
                      - stopped
                      - resetting
                    example: started
                    type: string
                  transcoding_uptime_id:
                    description: <strong>The <em>transcoding_uptime_id</em> parameter is deprecated and is replaced by <em>uptime_id</em>.</strong> The unique identifier associated with a specific uptime period of a transcoder.
                    example: abcd1234
                    type: string
                  uptime_id:
                    description: The unique identifier associated with a specific uptime period of a transcoder.
                    example: abcd1234
                    type: string
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the state and uptime ID of a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/state"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/state',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{id}/stats":
    get:
      description: This operation responds with a hash of metrics (keys) for a currently running transcoder. Each key has a <strong>status</strong>, <strong>text</strong> (description), <strong>units</strong>, and <strong>value</strong>.
      operationId: showTranscoderStats
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                $ref: "#/definitions/shm_metrics"
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch statistics for a current transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/stats"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/stats',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{id}/stop":
    put:
      description: This operation stops a transcoder.
      operationId: stopTranscoder
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  state:
                    description: The state of the transcoder.
                    enum:
                      - starting
                      - stopping
                      - started
                      - stopped
                      - resetting
                    example: starting
                    type: string
                  transcoding_uptime_id:
                    description: <strong>The <em>transcoding_uptime_id</em> parameter is deprecated and is replaced by <em>uptime_id</em>.</strong> The unique identifier associated with a specific uptime period of a transcoder.
                    example: abcd1234
                    type: string
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Stop a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/stop"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/stop',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{id}/thumbnail_url":
    get:
      description: This operation shows the thumbnail URL of a started transcoder.
      operationId: showTranscoderThumbnailUrl
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              transcoder:
                properties:
                  thumbnail_url:
                    description: The URL to receive the preview thumbnail.
                    example: https://cloud.wowza.com/proxy/stats/?target=10.11.12.13&app=app-79b8&stream=99b62146@130135.stream&media=json
                    type: string
                title: transcoder
                type: object
            required:
              - transcoder
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch the thumbnail URL of a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/thumbnail_url"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/thumbnail_url',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{transcoder_id}/outputs":
    get:
      description: This operation shows the details of all of the output renditions of a specific transcoder.
      operationId: listTranscoderOutputs
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/outputs"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch all outputs of a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates an output rendition for a specific transcoder.
      operationId: createTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: Provide the details of the output rendition to create in the body of the request.
          in: body
          name: output
          required: true
          schema:
            $ref: "#/definitions/output_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              output:
                $ref: "#/definitions/output"
            required:
              - output
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create an output
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{id}":
    delete:
      description: This operation deletes an output, including all of its assigned targets.
      operationId: deleteTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete an output
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific output rendition for a specific transcoder.
      operationId: showTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              output:
                $ref: "#/definitions/output"
            required:
              - output
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch an output
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates an output rendition.
      operationId: updateTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the output rendition to update in the body of the request.
          in: body
          name: output
          required: true
          schema:
            $ref: "#/definitions/output_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              output:
                $ref: "#/definitions/output"
            required:
              - output
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update an output
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{id}/add_stream_target":
    post:
      deprecated: true
      description: The operation POST /transcoders/{transcoder_id}/outputs/{id}/add_stream_target is deprecated. Use POST /transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets to add an existing stream target to an output.
      operationId: addStreamTargetToTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the stream target to add in the body of the request.
          in: body
          name: output_stream_target
          required: true
          schema:
            $ref: "#/definitions/output_add_stream_target_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              output_stream_target:
                $ref: "#/definitions/output_stream_target"
            required:
              - output_stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Deprecated operation
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/add_stream_target" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/add_stream_target',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{id}/remove_stream_target":
    delete:
      deprecated: true
      description: The operation DELETE /transcoders/{transcoder_id}/outputs/{id}/remove_stream_target is deprecated. Use DELETE /transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{id} to remove a stream target from an output.
      operationId: removeStreamTargetToTranscoderOutput
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: id
          required: true
          type: string
        - description: Provide the details of the stream target to remove in the body of the request.
          in: body
          name: output_stream_target
          required: true
          schema:
            $ref: "#/definitions/output_remove_stream_target_input"
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Deprecated operation
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/remove_stream_target" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/remove_stream_target',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets":
    get:
      description: This operation shows the details of all of the output stream targets of an output of a transcoder.
      operationId: listTranscoderOutputOutputStreamTargets
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/output_stream_target"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch all output stream targets of an output of a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates an output stream target. Targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> can't be added to output renditions.
      operationId: createTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: Provide the details of the output stream target to create in the body of the request. Targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> can't be added to output renditions.
          in: body
          name: output_stream_target
          required: true
          schema:
            $ref: "#/definitions/output_stream_target_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              output_stream_target:
                $ref: "#/definitions/output_stream_target"
            required:
              - output_stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}":
    delete:
      description: This operation deletes an output stream target, including all of its assigned targets.
      operationId: deleteTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of an output stream target.
      operationId: showTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              output_stream_target:
                $ref: "#/definitions/output_stream_target"
            required:
              - output_stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    patch:
      description: This operation updates an output stream target.
      operationId: updateTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
        - description: Provide the details of the output stream target to update in the body of the request.
          in: body
          name: output_stream_target
          required: true
          schema:
            $ref: "#/definitions/output_stream_target_update_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              output_stream_target:
                $ref: "#/definitions/output_stream_target"
            required:
              - output_stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Update an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PATCH" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',
              method: 'PATCH',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/disable":
    put:
      description: This operation disables an output stream target.
      operationId: disableTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                properties:
                  state:
                    description: The state of the output stream target.
                    enum:
                      - enabled
                      - disabled
                      - restarted
                    example: disabled
                    type: string
                title: stream_target
                type: object
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Disable an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/disable"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/disable',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/enable":
    put:
      description: This operation enables an output stream target.
      operationId: enableTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                properties:
                  state:
                    description: The state of the output stream target.
                    enum:
                      - enabled
                      - disabled
                      - restarted
                    example: enabled
                    type: string
                title: stream_target
                type: object
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Enable an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/enable"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/enable',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/restart":
    put:
      description: This operation restarts an output stream target.
      operationId: restartTranscoderOutputOutputStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the output rendition.
          in: path
          name: output_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: stream_target_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              stream_target:
                properties:
                  state:
                    description: The state of the output stream target.
                    enum:
                      - enabled
                      - disabled
                      - restarted
                    example: restarted
                    type: string
                title: stream_target
                type: object
            required:
              - stream_target
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Restart an output stream target
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "PUT" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/restart"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/restart',
              method: 'PUT',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.end();
  "/transcoders/{transcoder_id}/properties":
    get:
      description: This operation shows all of the properties of a specific transcoder.
      operationId: listTranscoderProperties
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/transcoder_properties"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Fetch a transcoder's properties
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/properties',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
    post:
      description: This operation creates a property for a transcoder. For more information see the technical article [How to set advanced properties by using the Wowza Streaming Cloud REST API](https://www.wowza.com/docs/how-to-set-advanced-properties-by-using-the-wowza-streaming-cloud-rest-api).
      operationId: createTranscoderProperty
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: Provide the details of the property to create in the body of the request.
          in: body
          name: property
          required: true
          schema:
            $ref: "#/definitions/transcoder_property_create_input"
      responses:
        "200":
          description: Success
          schema:
            properties:
              property:
                $ref: "#/definitions/transcoder_property"
            required:
              - property
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Create a property for a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "POST" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties" \
                 -d $'{
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }'
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/properties',
              method: 'POST',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            const req = https.request(options, function(res) {
              var body = '';
              res.on('data', function(data) {
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
            req.write(JSON.stringify({
              "transcoder": {
                "property": "My Value",
                "...": "..."
              }
            }));
            req.end();
  "/transcoders/{transcoder_id}/properties/{id}":
    delete:
      description: This operation deletes a specific property from a specific transcoder.
      operationId: deleteTranscoderProperty
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique string that identifies the transcoder property. The string contains the section and the key, connected by a dash. For example, cupertino-cupertinoProgramDateTimeOffset.
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/Error422"
      summary: Delete a transcoder's property
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "DELETE" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',
              method: 'DELETE',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              // no data being returned, just: 204 NO CONTENT
              console.log(res.statusCode);
            }).on('error', function(e) {
              console.log(e.message);
            });
    get:
      description: This operation shows the details of a specific property for a specific transcoder.
      operationId: showTranscoderProperty
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique string that identifies the transcoder property. The string contains the section and the key, connected by a dash. For example, cupertino-cupertinoProgramDateTimeOffset.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              property:
                $ref: "#/definitions/transcoder_property"
            required:
              - property
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch a property for a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{transcoder_id}/uptimes":
    get:
      description: This operation shows all of the uptime records for a specific transcoder. An <em>uptime record</em> identifies a specific transcoding session.
      operationId: indexUptimes
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/per_page"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/uptimes"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch all uptime records for a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/uptimes',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{transcoder_id}/uptimes/{id}":
    get:
      description: This operation shows the details of a specific uptime record for a specific transcoder. An <em>uptime record</em> identifies a transcoding session.
      operationId: showUptime
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the uptime record.
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/uptime"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch an uptime record
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{transcoder_id}/uptimes/{id}/metrics/current":
    get:
      description: This operation returns a snapshot of the current source connection and processing details of an active (running) transcoder.
      operationId: showUptimeMetricsCurrent
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the uptime record.
          in: path
          name: id
          required: true
          type: string
        - description: A comma-separated list of fields to return.
          in: query
          name: fields
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            example:
              current:
                audio_codec:
                  status: normal
                  text: ""
                  units: ""
                  value: aac
                bits_in_rate:
                  status: normal
                  text: ""
                  units: Kbps
                  value: 317.3
                bits_out_rate:
                  status: normal
                  text: ""
                  units: Kbps
                  value: 856
                bytes_in_rate:
                  status: normal
                  text: ""
                  units: KBps
                  value: 317.3
                bytes_out_rate:
                  status: normal
                  text: ""
                  units: KBps
                  value: 856
                configured_bytes_out_rate:
                  status: warning
                  text: Outbound bitrate is lower than the configured bitrate. There might be a problem with the stream targets.
                  units: Kbps
                  value: 8192
                connected:
                  status: normal
                  text: ""
                  units: ""
                  value: Yes
                cpu:
                  status: normal
                  text: ""
                  units: "%"
                  value: 20
                frame_rate:
                  status: normal
                  text: ""
                  units: FPS
                  value: 30
                frame_size:
                  status: warning
                  text: "Configured frame size is different from what Wowza Streaming Cloud is receiving from the source: 1280x720."
                  units: ""
                  value: 1280x720
                gpu_decoder_usage:
                  status: normal
                  text: ""
                  units: "%"
                  value: 50
                gpu_driver_version:
                  status: normal
                  text: ""
                  units: ""
                  value: not_installed
                gpu_encoder_usage:
                  status: normal
                  text: ""
                  units: "%"
                  value: 50
                gpu_memory_usage:
                  status: normal
                  text: ""
                  units: "%"
                  value: 50
                gpu_usage:
                  status: normal
                  text: ""
                  units: "%"
                  value: 50
                height:
                  status: warning
                  text: "Configured height is different from what Wowza Streaming Cloud is receiving from the source: 720."
                  units: px
                  value: 720
                keyframe_interval:
                  status: normal
                  text: ""
                  units: GOP
                  value: 69
                stream_target_status_OUTPUTIDX_STREAMTARGETIDX:
                  status: normal
                  text: ""
                  units: ""
                  value: Active
                unique_views:
                  status: normal
                  text: ""
                  units: "%"
                  value: 1030
                video_codec:
                  status: normal
                  text: ""
                  units: ""
                  value: avc1
                width:
                  status: warning
                  text: "Configured width is different from what Wowza Streaming Cloud is receiving from the source: 1280."
                  units: px
                  value: 1280
              limits:
                fields:
                  - audio_codec
                  - bits_in_rate
                  - bits_out_rate
                  - bytes_in_rate
                  - bytes_out_rate
                  - configured_bytes_out_rate
                  - connected
                  - cpu
                  - frame_size
                  - frame_rate
                  - gpu_decoder_usage
                  - gpu_driver_version
                  - gpu_encoder_usage
                  - gpu_memory_usage
                  - gpu_usage
                  - height
                  - width
                  - keyframe_interval
                  - unique_views
                  - video_codec
                  - width
                  - stream_target_status_OUTPUTIDX_STREAMTARGETIDX
            properties:
              current:
                $ref: "#/definitions/shm_metrics"
              limits:
                properties:
                  fields:
                    description: A comma-separated list of fields that were returned in the request.
                    title: fields
                    type: string
                required:
                  - fields
                title: limits
                type: object
            required:
              - current
              - limits
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch current stream health metrics for an active transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/current"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/current',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/transcoders/{transcoder_id}/uptimes/{id}/metrics/historic":
    get:
      description: This operation shows the historic source connection and processing details for a transcoding session (uptime record). The transcoder can be running or stopped. Metrics are recorded every 20 seconds.
      operationId: showUptimeMetricsHistoric
      parameters:
        - description: The unique alphanumeric string that identifies the transcoder.
          in: path
          name: transcoder_id
          required: true
          type: string
        - description: The unique alphanumeric string that identifies the uptime record.
          in: path
          name: id
          required: true
          type: string
        - description: A comma-separated list of fields to return.
          in: query
          name: fields
          required: false
          type: string
        - description: The start of the range of time used to aggregate the metrics. Express the value by using the ISO 8601 standard of <strong>YYYY-MM-DDTHH:MM:SSZ</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time used to aggregate the metrics. Express the value by using the ISO 8601 standard of <strong>YYYY-MM-DDTHH:MM:SSZ</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            example:
              historic:
                - audio_codec:
                    status: normal
                    text: ""
                    units: ""
                    value: aac
                  bits_in_rate:
                    status: normal
                    text: ""
                    units: Kbps
                    value: 317.3
                  bits_out_rate:
                    status: normal
                    text: ""
                    units: Kbps
                    value: 856
                  cpu_idle:
                    status: normal
                    text: ""
                    units: "%"
                    value: 20
                  created_at: 2017-07-06T14:20:00Z
                  frame_rate:
                    status: normal
                    text: ""
                    units: FPS
                    value: 30
                  height:
                    status: warning
                    text: "Configured height is different from what Wowza Streaming Cloud is receiving from the source: 720."
                    units: px
                    value: 720
                  keyframe_interval:
                    status: normal
                    text: ""
                    units: GOP
                    value: 69
                  video_codec:
                    status: normal
                    text: ""
                    units: ""
                    value: avc1
                  width:
                    status: warning
                    text: "Configured width is different from what Wowza Streaming Cloud is receiving from the source: 1280."
                    units: px
                    value: 1280
                - audio_codec:
                    status: normal
                    text: ""
                    units: ""
                    value: aac
                  bits_in_rate:
                    status: normal
                    text: ""
                    units: Kbps
                    value: 317.3
                  bits_out_rate:
                    status: normal
                    text: ""
                    units: Kbps
                    value: 856
                  cpu_idle:
                    status: normal
                    text: ""
                    units: "%"
                    value: 20
                  created_at: 2017-07-06T14:20:20Z
                  frame_rate:
                    status: normal
                    text: ""
                    units: FPS
                    value: 30
                  height:
                    status: warning
                    text: "Configured height is different from what Wowza Streaming Cloud is receiving from the source: 720."
                    units: px
                    value: 720
                  keyframe_interval:
                    status: normal
                    text: ""
                    units: GOP
                    value: 69
                  video_codec:
                    status: normal
                    text: ""
                    units: ""
                    value: avc1
                  width:
                    status: warning
                    text: "Configured width is different from what Wowza Streaming Cloud is receiving from the source: 1280."
                    units: px
                    value: 1280
              limits:
                fields:
                  - audio_codec
                  - bits_in_rate
                  - bits_out_rate
                  - cpu_idle
                  - frame_rate
                  - height
                  - keyframe_interval
                  - width
                  - video_codec
                from: 2017-07-06T14:20:00Z
                to: 2017-07-06T14:20:20Z
            properties:
              historic:
                items:
                  $ref: "#/definitions/shm_historic_metrics"
                type: array
              limits:
                properties:
                  fields:
                    description: A comma-separated list of fields that were returned in the request.
                    title: fields
                    type: string
                  from:
                    description: The start of range of time when the metrics were aggregated for the query.
                    format: date-time
                    title: from
                    type: string
                  to:
                    description: The end of the range of time when the metrics were aggregated for the query.
                    format: date-time
                    title: to
                    type: string
                required:
                  - fields
                  - from
                  - to
                title: limits
                type: object
            required:
              - historic
              - limits
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch historic stream health metrics for a transcoder
      tags:
        - transcoders
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/historic"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/historic',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /usage/network/stream_sources:
    get:
      description: This operation shows the amount of network usage for all stream sources in the account. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: usageNetworkStreamSourcesIndex
      parameters:
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_network_stream_sources"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch network usage for all stream sources
      tags:
        - network
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/network/stream_sources"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/network/stream_sources',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /usage/network/stream_targets:
    get:
      description: This operation shows the amount of network usage for all stream targets in the account cumulatively and individually. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: usageNetworkStreamTargetsIndex
      parameters:
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_network_stream_targets"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch network usage for all stream targets
      tags:
        - network
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/network/stream_targets"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/network/stream_targets',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /usage/network/transcoders:
    get:
      description: This operation shows the amount of network usage (egress) for all transcoders in the account. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: usageNetworkTranscodersIndex
      parameters:
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
        - description: The type of transcoder. The default is <strong>transcoded</strong>.
          enum:
            - transcoded
            - passthrough
          in: query
          name: transcoder_type
          required: false
          type: string
        - description: The billing mode for the transcoder. The default is <strong>pay_as_you_go</strong>.
          enum:
            - pay_as_you_go
            - twentyfour_seven
          in: query
          name: billing_mode
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_network_transcoders"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch network usage for all transcoders
      tags:
        - network
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/network/transcoders"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/network/transcoders',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /usage/storage/peak_recording:
    get:
      description: This operation shows the amount of peak recording storage used for the account. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: usageStoragePeakRecordingIndex
      parameters:
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_storage_peak_recording"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
      summary: Fetch peak recording storage
      tags:
        - storage
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/storage/peak_recording"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/storage/peak_recording',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  /usage/time/transcoders:
    get:
      description: This operation shows the amount of stream processing time used by all transcoders in the account. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: usageTimeTranscodersIndex
      parameters:
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
        - description: The type of transcoder. The default is <strong>transcoded</strong>.
          enum:
            - transcoded
            - passthrough
          in: query
          name: transcoder_type
          required: false
          type: string
        - description: The billing mode for the transcoder. The default is <strong>pay_as_you_go</strong>.
          enum:
            - pay_as_you_go
            - twentyfour_seven
          in: query
          name: billing_mode
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_time_transcoders"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "422":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error422InvalidTimeFormat"
      summary: Fetch stream processing time
      tags:
        - processing time
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/time/transcoders"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/time/transcoders',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
  "/usage/viewer_data/stream_targets/{id}":
    get:
      description: This operation shows viewer data for a specific stream target. The default time frame is <em>from</em> the last billing date <em>to</em> the end of the current day.
      operationId: showViewerDataStreamTarget
      parameters:
        - description: The unique alphanumeric string that identifies the stream target.
          in: path
          name: id
          required: true
          type: string
        - description: The start of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>from</em> default is the last billing date.
          format: date-time
          in: query
          name: from
          required: false
          type: string
        - description: The end of the range of time you want to view. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC. The <em>to</em> default is the end of the current day.
          format: date-time
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usage_viewer_data_stream_target"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "410":
          description: Gone
          schema:
            $ref: "#/definitions/Error410"
      summary: Fetch viewer data for a stream target
      tags:
        - viewer data
      x-code-samples:
        - lang: Shell
          source: |
            // Using cURL
            curl -H "wsc-api-key: a726c273..." \
                 -H "wsc-access-key: 68289d8d..." \
                 -H "Content-Type: application/json" \
                 -X "GET" "https://api-sandbox.cloud.wowza.com/api/v1/usage/viewer_data/stream_targets/2adffc17"
        - lang: JavaScript
          source: |
            // Using Node.js
            var https = require('https');
            const options = {
              hostname: 'api-sandbox.cloud.wowza.com',
              path: '/api/v1/usage/viewer_data/stream_targets/2adffc17',
              headers: {
                'wsc-api-key': 'a726c273...',
                'wsc-access-key': '68289d8d...',
                'Content-Type': 'application/json'
              }
            };
            https.get(options, function(res) {
              var body = '';
              res.on('data', function(data){
                body += data;
              });
              res.on('end', function() {
                console.log(JSON.parse(body));
              });
            }).on('error', function(e) {
              console.log(e.message);
            });
definitions:
  Error401:
    example:
      Example Response 1:
        meta:
          code: ERR-401-NoApiKey
          description: ""
          links: []
          message: No API key sent in header.
          status: 401
          title: No API Key Error
      Example Response 2:
        meta:
          code: ERR-401-NoAccessKey
          description: ""
          links: []
          message: No access key sent in header.
          status: 401
          title: No Access Key Error
      Example Response 3:
        meta:
          code: ERR-401-InvalidApiKey
          description: ""
          links: []
          message: Invalid API key.
          status: 401
          title: Invalid Api Key Error
      Example Response 4:
        meta:
          code: ERR-401-InvalidAccessKey
          description: ""
          links: []
          message: Invalid access key.
          status: 401
          title: Invalid Access Key Error
      Example Response 5:
        meta:
          code: ERR-401-BadAccountStatus
          description: ""
          links: []
          message: Your account's status doesn't allow this action.
          status: 401
          title: Bad Account Status Error
      Example Response 6:
        meta:
          code: ERR-401-FeatureNotEnabled
          description: ""
          links: []
          message: This feature isn't enabled.
          status: 401
          title: Feature Not Enabled Error
      Example Response 7:
        meta:
          code: ERR-401-TrialExceeded
          description: ""
          links: []
          message: Your billing status needs attention. You can't start or add live streams until your billing status is updated.
          status: 401
          title: Bad Billing Status Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Error403:
    example:
      Example Response 1:
        meta:
          code: ERR-403-RecordUnaccessible
          description: ""
          links: []
          message: The requested resource isn't accessible.
          status: 403
          title: Record Unaccessible Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Error404:
    example:
      Example Response 1:
        meta:
          code: ERR-404-RecordNotFound
          description: ""
          links: []
          message: The requested resource couldn't be found.
          status: 404
          title: Record Not Found Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Error410:
    example:
      Example Response 1:
        meta:
          code: ERR-410-RecordDeleted
          description: ""
          links: []
          message: The requested resource has been deleted.
          status: 410
          title: Record Deleted Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Error422:
    example:
      Example Response 1:
        meta:
          code: ERR-422-RecordInvalid
          description: ""
          links: []
          message: The request couldn't be processed. ... can't be blank
          status: 422
          title: Record Invalid Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Error422InvalidTimeFormat:
    example:
      Example Response 1:
        meta:
          code: ERR-422-InvalidTimeFormat
          description: ""
          links: []
          message: Invalid time format.
          status: 422
          title: Invalid Time Format Error
    properties:
      meta:
        properties:
          code:
            type: string
          description:
            type: string
          links:
            items:
              type: string
            type: array
          message:
            type: string
          status:
            format: int32
            type: integer
          title:
            type: string
        title: meta
        type: object
    required:
      - meta
  Spec:
    properties:
      basePath:
        description: The base path on which the API is served, relative to the **host**.
        example: /v1
        type: string
      consumes:
        description: A list of MIME types that the API can consume.
        example:
          - application/json
        items:
          type: string
        type: array
      definitions:
        description: The data types produced and consumed by operations.
        type: object
      externalDocs:
        description: Links to and descriptions of related external documentation.
        type: object
      host:
        description: The host (domain name or IP address) serving the API.
        example: api.cloud.wowza.com
        type: string
      info:
        description: Metadata about the API.
        type: object
      paths:
        description: The paths and operations available to the API.
        type: object
      produces:
        description: A list of MIME types that the API can produce.
        example:
          - application/json
        items:
          type: string
        type: array
      schemes:
        description: The transfer protocol being used by the API.
        example: https
        items:
          type: string
        type: array
      security:
        description: A list of the security schemes being used by the API.
        example:
          - wsc-api-key: []
          - wsc-access-key: []
        items:
          type: object
        type: array
      securityDefinitions:
        description: The security scheme definitions being used by the API.
        items:
          type: object
        type: object
      swagger:
        description: The version of the Swagger specification that's being used.
        example: 1.0.0
        type: string
      tags:
        description: A list of tags used by the specification, with metadata.
        items:
          type: object
        type: array
      x-tagGroups:
        description: A list of the groups and tags used in the left column of the Swagger page.
        items:
          type: object
        type: array
    type: object
  audio_codec_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: aac
        type: string
    type: object
  bits_in_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: Kbps
        type: string
      value:
        description: The value of the associated key.
        example: 317.3
        format: float
        type: number
    type: object
  bits_out_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: Kbps
        type: string
      value:
        description: The value of the associated key.
        example: 856
        format: float
        type: number
    type: object
  bytes_in_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: KBps
        type: string
      value:
        description: The value of the associated key.
        example: 317.3
        format: float
        type: number
    type: object
  bytes_out_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: KBps
        type: string
      value:
        description: The value of the associated key.
        example: 856
        format: float
        type: number
    type: object
  configured_bytes_out_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: warning
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: Outbound bitrate is lower than the configured bitrate. There might be a problem with the stream targets.
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: Kbps
        type: string
      value:
        description: The value of the associated key.
        example: 8192
        type: integer
    type: object
  connected_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: Yes
        type: string
    type: object
  cpu_idle_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 20
        type: integer
    type: object
  cpu_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 20
        type: integer
    type: object
  custom_stream_target_input:
    properties:
      stream_target:
        properties:
          backup_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The backup RTMP ingest URL of the target, without the preceding protocol and without the trailing slash (/).
            example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          hds_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. The web address that the target uses to play Adobe HDS streams.
            example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857
            type: string
          hls_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play Apple HLS streams.
            example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m
            type: string
          name:
            description: A descriptive name for the stream target. Maximum 255 characters.
            example: My Custom Stream Target
            type: string
          password:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. A <em>username</em> must also be present. The password associated with the target username for RTMP authentication.
            example: cb1e77e98d
            type: string
          primary_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The primary RTMP ingest URL, without the preceding protocol and without the trailing slash (/).
            example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          provider:
            description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
            example: rtmp
            type: string
          rtmp_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play RTMP streams.
            example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321
            type: string
          stream_name:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The name of the stream as defined in the target's ingestion settings.
            example: c8467d50@337857
            type: string
          type:
            description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
            example: CustomStreamTarget
            type: string
          username:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
            example: "319699"
            type: string
        required:
          - name
          - primary_url
          - provider
          - stream_name
        title: custom_stream_target
        type: object
    required:
      - stream_target
    type: object
  frame_rate_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: FPS
        type: string
      value:
        description: The value of the associated key.
        example: 30
        type: integer
    type: object
  frame_size_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: warning
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: "Configured frame size is different from what Wowza Streaming Cloud is receiving from the source: 1280x720."
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: 1280x720
        type: string
    type: object
  geoblock:
    example:
      countries:
        - us
        - de
      created_at: 2017-11-13T20:00:42.966Z
      state: requested
      stream_target_id: PblTJm1t
      type: allow
      updated_at: 2017-11-15T03:39:40.966Z
      whitelist:
        - 1.2.3.4
        - 9.8.7.6
    properties:
      countries:
        description: Required when <em>type</em> is <strong>allow</strong> or <strong>deny</strong>. The locations affected by the geo-blocking. Enter a comma-separated list (an array) of two-letter ISO 3166-1 country codes. For a list, see <a href='https://en.wikipedia.org/wiki/ISO_3166-1' target='_blank'>ISO 3166-1</a> on wikipedia.
        items:
          type: string
        type: array
      created_at:
        description: The date and time that the geo-blocking rendition was created.
        format: date-time
        type: string
      state:
        description: The state of the geo-blocking.
        enum:
          - requested
          - activated
          - update_requested
          - delete_requested
          - failed
        type: string
      stream_target_id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      type:
        description: The type of geo-blocking to apply. The value <strong>allow</strong> permits viewing only in the locations specified by the <em>countries</em> parameter. The value <strong>deny</strong> prohibits viewing in the locations specified by the <em>countries</em> parameter. The value <strong>disabled</strong> (the default) permits viewing everywhere.
        enum:
          - disabled
          - allow
          - deny
        type: string
      updated_at:
        description: The date and time that the geo-blocking rendition was updated.
        format: date-time
        type: string
      whitelist:
        description: Whitelisted addresses can be viewed even if they're within a geo-blocked location. Enter a comma-separated list (an array) of IP addresses that always allow streaming.
        items:
          type: string
        type: array
    type: object
  geoblock_create_input:
    allOf:
      - $ref: "#/definitions/geoblock_input"
  geoblock_input:
    properties:
      geoblock:
        properties:
          countries:
            description: Required when <em>type</em> is <strong>allow</strong> or <strong>deny</strong>. The locations affected by the geo-blocking. Enter a comma-separated list (an array) of two-letter ISO 3166-1 country codes. For a list, see <a href='https://en.wikipedia.org/wiki/ISO_3166-1' target='_blank'>ISO 3166-1</a> on wikipedia.
            example:
              - us
              - de
            items:
              type: string
            type: array
          type:
            description: The type of geo-blocking to apply. The value <strong>allow</strong> permits viewing only in the locations specified by the <em>countries</em> parameter. The value <strong>deny</strong> prohibits viewing in the locations specified by the <em>countries</em> parameter. The value <strong>disabled</strong> (the default) permits viewing everywhere.
            enum:
              - disabled
              - allow
              - deny
            example: allow
            type: string
          whitelist:
            description: Whitelisted addresses can be viewed even if they're within a geo-blocked location. Enter a comma-separated list (an array) of IP addresses that always allow streaming.
            example:
              - 1.2.3.4
              - 9.8.7.6
            items:
              type: string
            type: array
        required:
          - type
        title: geoblock
        type: object
    required:
      - geoblock
    type: object
  geoblock_update_input:
    allOf:
      - $ref: "#/definitions/geoblock_input"
  gpu_decoder_usage_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 50
        type: integer
    type: object
  gpu_driver_version_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: not_installed
        type: string
    type: object
  gpu_encoder_usage_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 50
        type: integer
    type: object
  gpu_memory_usage_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 50
        type: integer
    type: object
  gpu_usage_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 50
        type: integer
    type: object
  height_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: warning
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: "Configured height is different from what Wowza Streaming Cloud is receiving from the source: 720."
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: px
        type: string
      value:
        description: The value of the associated key.
        example: 720
        type: integer
    type: object
  index_stream_target:
    example:
      connection_code: 133fcc
      connection_code_expires_at: 2018-09-15T20:00:43.306Z
      created_at: 2017-11-13T20:00:43.306Z
      hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m
      hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8
      id: 2adffc17
      location: us_west_california
      name: My RTMP Stream Target
      password: 0c7cba98e7
      primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
      provider: akamai
      secure_ingest_query_param: ...
      stream_name: 76fa8b9c_1_[bitrate]@335304
      type: WowzaStreamTarget
      updated_at: 2017-11-14T22:00:02.306Z
      use_cors: false
      username: "169630"
    properties:
      chunk_size:
        description: <strong>The <em>chunk_size</em> parameter is deprecated. To set the chunk size of a stream target, use the POST /stream_targets/[stream_target_id]/properties endpoint.</strong> Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. The segment duration for HLS encoding. The default is <strong>10</strong>.
        enum:
          - 2
          - 4
          - 6
          - 8
          - 10
        type: string
      connection_code:
        description: A six-character, alphanumeric string that allows Wowza Streaming Engine to send a transcoded stream to a <strong>WowzaStreamTarget</strong> or for the Wowza GoCoder app to send an encoded stream to a <strong>UltraLowLatencyStreamTarget</strong>. The code can be used once and expires 24 hours after it's created.
        type: string
      connection_code_expires_at:
        description: The date and time that the <em>connection_code</em> expires.
        format: date-time
        type: string
      created_at:
        description: The date and time that the stream target was created.
        format: date-time
        type: string
      hds_playback_url:
        description: The web address that the target uses to play Adobe HDS streams.
        type: string
      hls_playback_url:
        description: Only for targets whose <em>provider</em> is <strong>akamai_cupertino</strong>. The web address that the target uses to play Apple HLS streams.
        type: string
      id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      location:
        description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. Choose a location as close as possible to your video source.
        enum:
          - asia_pacific_australia
          - asia_pacific_japan
          - asia_pacific_singapore
          - asia_pacific_taiwan
          - eu_belgium
          - eu_germany
          - eu_ireland
          - south_america_brazil
          - us_central_iowa
          - us_east_s_carolina
          - us_east_virginia
          - us_west_california
          - us_west_oregon
        type: string
      name:
        description: A descriptive name for the stream target. Maximum 255 characters.
        type: string
      primary_url:
        description: The primary ingest URL of the target.
        type: string
      provider:
        description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
        type: string
      rtmp_playback_url:
        description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play RTMP streams.
        type: string
      stream_name:
        description: The name of the stream being ingested into the target. Returned for all targets except those whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and whose <em>source_delivery_method</em> is **pull**.
        type: string
      type:
        description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
        enum:
          - WowzaStreamTarget
          - UltraLowLatencyStreamTarget
          - CustomStreamTarget
        type: string
      updated_at:
        description: The date and time that the stream target was updated.
        format: date-time
        type: string
      username:
        description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
        type: string
    type: object
  keyframe_interval_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: GOP
        type: string
      value:
        description: The value of the associated key.
        example: 69
        type: integer
    type: object
  live_stream:
    example:
      aspect_ratio_height: 1080
      aspect_ratio_width: 1920
      billing_mode: pay_as_you_go
      broadcast_location: us_west_california
      closed_caption_type: cea
      connection_code: 0e15cb
      connection_code_expires_at: 2018-09-15T20:00:43.217Z
      created_at: 2017-11-13T20:00:43.217Z
      delivery_method: push
      delivery_protocols:
        - rtmp
        - rtsp
        - wowz
      delivery_type: multi-bitrate
      direct_playback_urls:
        - rtmp:
            - name: source
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6
        - rtsp:
            - name: source
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
        - wowz:
            - name: source
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
      encoder: wowza_streaming_engine
      hosted_page: true
      hosted_page_description: My Hosted Page Description
      hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
      hosted_page_sharing_icons: true
      hosted_page_title: My Hosted Page
      hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html
      id: wdjfqvsv
      name: My PAYG Transcoded WSE Live Stream
      player_countdown: true
      player_countdown_at: 2017-11-16T20:00:00.000Z
      player_embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
      player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
      player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
      player_id: kwb6pwnv
      player_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
      player_logo_position: top-right
      player_responsive: false
      player_type: original_html5
      player_video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
      player_width: 640
      recording: true
      stream_source_id: 5skrfpyf
      stream_targets:
        - id: klbmg2h8
        - id: bnjtdmmc
      target_delivery_protocol: hls
      transcoder_type: transcoded
      updated_at: 2017-11-15T01:38:04.217Z
      use_stream_source: true
      video_fallback: false
    properties:
      aspect_ratio_height:
        description: The height, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
        format: int32
        type: integer
      aspect_ratio_width:
        description: The width, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
        format: int32
        type: integer
      billing_mode:
        description: The billing mode for the stream. The default is <strong>pay_as_you_go</strong>.
        enum:
          - pay_as_you_go
          - twentyfour_seven
        type: string
      broadcast_location:
        description: The location of your stream. Choose a location as close as possible to your video source.
        enum:
          - asia_pacific_australia
          - asia_pacific_japan
          - asia_pacific_singapore
          - asia_pacific_taiwan
          - eu_belgium
          - eu_germany
          - eu_ireland
          - south_america_brazil
          - us_central_iowa
          - us_east_s_carolina
          - us_east_virginia
          - us_west_california
          - us_west_oregon
        type: string
      closed_caption_type:
        description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
        enum:
          - none
          - cea
          - on_text
          - both
        type: string
      connection_code:
        description: A six-character, alphanumeric string that allows certain encoders, including Wowza Streaming Engine and the Wowza GoCoder app, to connect with Wowza Streaming Cloud. The code can be used once and expires 24 hours after it's created.
        type: string
      connection_code_expires_at:
        description: The date and time that the <em>connection_code</em> expires.
        format: date-time
        type: string
      created_at:
        description: The date and time that the live stream was created.
        format: date-time
        type: string
      delivery_method:
        description: The type of connection between the video source and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
        enum:
          - pull
          - cdn
          - push
        type: string
      delivery_protocol:
        description: <strong>The <em>delivery_protocol</em> parameter is deprecated. To set the delivery protocol of a transcoder's target, use <em>target_delivery_protocol</em>.</strong>
        enum:
          - hls-https
          - hls-hds
        type: string
      delivery_protocols:
        description: An array of direct delivery protocols enabled for this live stream. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are enabled.
        items:
          type: string
        type: array
      delivery_type:
        description: For streams whose <em>encoder</em> is <strong>wowza_streaming_engine</strong>. The default is <strong>multi-bitrate</strong>, which means you're sending one or more bitrate renditions from Wowza Streaming Engine directly to a Wowza CDN target without transcoding in Wowza Streaming Cloud. The value <strong>single-bitrate</strong> means you're sending a single source stream to Wowza Streaming Cloud for transcoding and/or to deliver the source stream to multiple stream targets in Wowza Streaming Cloud.
        enum:
          - single-bitrate
          - multi-bitrate
        type: string
      direct_playback_urls:
        description: An array of direct playback URLs for the live stream's delivery protocols. Each protocol has a URL for the source and a URL for each output rendition.
        items:
          properties:
            name:
              description: "The name of the playback URL: <strong>source</strong>, <strong>default</strong>, <strong>passthrough</strong>, or the output rendition's resolution."
              example: hls
              type: string
            output_id:
              description: Only for output rendition-based playback URLs, not source playback URLs. The unique alphanumeric string that identifies the output rendition.
              example: dcxq5q6c
              type: string
            url:
              description: The playback URL for the source or output rendition.
              example: https://abcdef.dev.entrypoint.cloud.wowza.com/app-16ea/ngrp:43a23e5a_all/playlist.m3u8
              type: string
          title: playback_url
          type: object
        type: array
      encoder:
        description: The video source for the live stream. Choose the type of camera or encoder you're using to connect to the Wowza Streaming Cloud transcoder. If your specific device isn't listed, choose <strong>ipcamera</strong>, <strong>other_rtmp</strong>, or <strong>other_rtsp</strong>.
        enum:
          - wowza_streaming_engine
          - wowza_gocoder
          - media_ds
          - axis
          - epiphan
          - hauppauge
          - jvc
          - live_u
          - matrox
          - newtek_tricaster
          - osprey
          - sony
          - telestream_wirecast
          - teradek_cube
          - vmix
          - x_split
          - ipcamera
          - other_rtmp
          - other_rtsp
        type: string
      hosted_page:
        description: A web page hosted by Wowza Streaming Cloud that includes a player for the live stream. The default, <strong>true</strong>, creates a hosted page. Specify <strong>false</strong> to not create a hosted web page.
        type: boolean
      hosted_page_description:
        description: A description that appears on the hosted page below the player. Can't include custom HTML, JavaScript, or other tags.
        type: string
      hosted_page_logo_image_url:
        description: The path to a GIF, JPEG, or PNG logo file that appears in the upper-left corner of the hosted page. Logo file must be 2.5 MB or smaller.
        type: string
      hosted_page_sharing_icons:
        description: Icons that let viewers share the stream on Facebook, Google+, Twitter, and by email. The default, <strong>true</strong>, includes sharing icons on the hosted page. Specify <strong>false</strong> to omit sharing icons.
        type: boolean
      hosted_page_title:
        description: A title for the page that appears above the player. Can't include custom HTML, JavaScript, or other tags.
        type: string
      hosted_page_url:
        description: The URL of the Wowza Streaming Cloud-hosted webpage that viewers can visit to watch the stream.
        type: string
      id:
        description: The unique alphanumeric string that identifies the live stream.
        type: string
      low_latency:
        description: For streams whose <em>target_delivery_protocol</em> is <strong>hls-https</strong>. If <strong>true</strong>, turns off incoming and sort packet buffers and delivers smaller video packets to the player, which can reduce latency as long as networks can handle the increased overhead. The default is <strong>false</strong>. <br /><br />This parameter only affects streams played over a target whose <em>type</em> is <strong>WowzaStreamTarget</strong> and whose <em>provider</em> is <strong>akamai_cupertino</strong>. It does <em>not</em> reduce latency in streams played over a hosted page and is unrelated to Wowza ultra low latency stream targets.
        type: boolean
      name:
        description: A descriptive name for the live stream. Maximum 200 characters.
        type: string
      player_countdown:
        description: A clock that appears in the player before the event and counts down to the start of the stream. Specify <strong>true</strong> to display the countdown clock. The default is <strong>false</strong>.
        type: boolean
      player_countdown_at:
        description: The date and time that the event starts, used by the countdown clock. Specify <strong>YYYY-MM-DD HH:MM:SS</strong>, where <strong>HH</strong> is a 24-hour clock in UTC.
        format: date-time
        type: string
      player_embed_code:
        description: The HTML code that can be used in an external webpage to host the Wowza Streaming Cloud player.
        type: string
      player_hds_playback_url:
        description: The address that can be used to configure playback of the stream using the Adobe HDS protocol.
        type: string
      player_hls_playback_url:
        description: The address that can be used to configure playback of the stream using the Apple HLS protocol.
        type: string
      player_id:
        description: The unique alphanumeric string that identifies the player.
        type: string
      player_logo_image_url:
        description: The path to a GIF, JPEG, or PNG logo file that appears partially transparent in a corner of the player throughout playback. Logo file must be 2.5 MB or smaller.
        type: string
      player_logo_position:
        description: The corner of the player in which you want the player logo to appear. The default is <strong>top-left</strong>.
        enum:
          - top-left
          - top-right
          - bottom-left
          - bottom-right
        type: string
      player_responsive:
        description: A player whose size adjusts according to the device on which it's being viewed. If <strong>true</strong>, creates a responsive player. If <strong>false</strong>, specify a <em>player_width</em>.
        type: boolean
      player_type:
        description: The player you want to use. Valid values are <strong>original_html5</strong>, which provides HTML5 playback and falls back to Flash on older browsers, and <strong>wowza_player</strong>, which provides HTML5 playback over Apple HLS. <strong>wowza_player</strong> requires that <strong>target_delivery_protocol</strong> be <strong>hls-https</strong> and <strong>closed_caption_type</strong> be <strong>none</strong>. The default is <strong>original_html5</strong>.
        type: string
      player_video_poster_image_url:
        description: The path to a GIF, JPEG, or PNG poster image that appears in the player before the stream begins. Poster image files must be 2.5 MB or smaller.
        type: string
      player_width:
        description: The width, in pixels, of a fixed-size player. The default is <strong>640</strong>.
        format: int32
        type: integer
      recording:
        description: If <strong>true</strong>, creates a recording of the live stream. The default is <strong>false</strong>.
        type: boolean
      source_connection_information:
        description: Details that you can use to manually configure and connect a video source to the live stream.
        type: object
      stream_source_id:
        description: The unique alphanumeric string that identifies the stream source, if a stream source is used.
        type: string
      stream_targets:
        description: An array of unique alphanumeric strings that identify the stream targets used by the live stream.
        items:
          properties:
            id:
              description: The unique alphanumeric string that identifies the stream target.
              example: dcxq5q6c
              type: string
          title: stream_targets
          type: object
        type: array
      target_delivery_protocol:
        description: The type of stream being delivered from Wowza Streaming Cloud. The default is <strong>hls-https</strong>.
        enum:
          - hls-https
          - hls-hds
        type: string
      transcoder_type:
        description: The type of transcoder, either <strong>transcoded</strong> for streams that are transcoded into adaptive bitrate renditions or <strong>passthrough</strong> for streams that aren't processed by the transcoder. The default is <strong>transcoded</strong>.
        enum:
          - transcoded
          - passthrough
        type: string
      updated_at:
        description: The date and time that the live stream was updated.
        format: date-time
        type: string
      use_stream_source:
        description: If <strong>true</strong>, uses a stream source to deliver the stream to Wowza Streaming Cloud. The default, <strong>false</strong>, pushes directly to Wowza Streaming Cloud.
        type: boolean
      video_fallback:
        description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with HLS stream targets.
        type: boolean
    type: object
  live_stream_create_input:
    properties:
      live_stream:
        properties:
          aspect_ratio_height:
            description: The height, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
            example: 1080
            format: int32
            type: integer
          aspect_ratio_width:
            description: The width, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
            example: 1920
            format: int32
            type: integer
          billing_mode:
            description: The billing mode for the stream. The default is <strong>pay_as_you_go</strong>.
            enum:
              - pay_as_you_go
              - twentyfour_seven
            example: pay_as_you_go
            type: string
          broadcast_location:
            description: The location of your stream. Choose a location as close as possible to your video source.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: eu_germany
            type: string
          closed_caption_type:
            description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
            enum:
              - none
              - cea
              - on_text
              - both
            example: none
            type: string
          delivery_method:
            description: The type of connection between the video source and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
            enum:
              - pull
              - cdn
              - push
            example: push
            type: string
          delivery_protocols:
            description: An array of direct delivery protocols enabled for this live stream. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are enabled.
            example:
              - rtmp
              - rtsp
              - wowz
            items:
              type: string
            type: array
          delivery_type:
            description: For streams whose <em>encoder</em> is <strong>wowza_streaming_engine</strong>. The default is <strong>multi-bitrate</strong>, which means you're sending one or more bitrate renditions from Wowza Streaming Engine directly to a Wowza CDN target without transcoding in Wowza Streaming Cloud. The value <strong>single-bitrate</strong> means you're sending a single source stream to Wowza Streaming Cloud for transcoding and/or to deliver the source stream to multiple stream targets in Wowza Streaming Cloud.
            enum:
              - single-bitrate
              - multi-bitrate
            example: single-bitrate
            type: string
          disable_authentication:
            description: Authentication is required by default for RTMP and RTSP push connections from a video source to Wowza Streaming Cloud. Specify <strong>true</strong> to disable authentication with the video source.
            example: false
            type: boolean
          encoder:
            description: The video source for the live stream. Choose the type of camera or encoder you're using to connect to the Wowza Streaming Cloud transcoder. If your specific device isn't listed, choose <strong>ipcamera</strong>, <strong>other_rtmp</strong>, or <strong>other_rtsp</strong>.
            enum:
              - wowza_streaming_engine
              - wowza_gocoder
              - media_ds
              - axis
              - epiphan
              - hauppauge
              - jvc
              - live_u
              - matrox
              - newtek_tricaster
              - osprey
              - sony
              - telestream_wirecast
              - teradek_cube
              - vmix
              - x_split
              - ipcamera
              - other_rtmp
              - other_rtsp
            example: wowza_gocoder
            type: string
          hosted_page:
            description: A web page hosted by Wowza Streaming Cloud that includes a player for the live stream. The default, <strong>true</strong>, creates a hosted page. Specify <strong>false</strong> to not create a hosted web page.
            example: true
            type: boolean
          hosted_page_description:
            description: A description that appears on the hosted page below the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page Description
            type: string
          hosted_page_logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that that appears in the upper-left corner of the hosted page. Logo file must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
            type: string
          hosted_page_sharing_icons:
            description: Icons that let viewers share the stream on Facebook, Google+, Twitter, and by email. The default, <strong>true</strong>, includes sharing icons on the hosted page. Specify <strong>false</strong> to omit sharing icons.
            example: true
            type: boolean
          hosted_page_title:
            description: A title for the page that appears above the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page
            type: string
          low_latency:
            description: For streams whose <em>target_delivery_protocol</em> is <strong>hls-https</strong>. If <strong>true</strong>, turns off incoming and sort packet buffers and delivers smaller video packets to the player, which can reduce latency as long as networks can handle the increased overhead. The default is <strong>false</strong>. <br /><br />This parameter only affects streams played over a target whose <em>type</em> is <strong>WowzaStreamTarget</strong> and whose <em>provider</em> is <strong>akamai_cupertino</strong>. It does <em>not</em> reduce latency in streams played over a hosted page and is unrelated to Wowza ultra low latency stream targets.
            example: false
            type: boolean
          name:
            description: A descriptive name for the live stream. Maximum 200 characters.
            example: My Live Stream
            type: string
          password:
            description: A password for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: "68332313"
            type: string
          player_countdown:
            description: A clock that appears in the player before the event and counts down to the start of the stream. Specify <strong>true</strong> to display the countdown clock. The default is <strong>false</strong>.
            example: true
            type: boolean
          player_countdown_at:
            description: The date and time that the event starts, used by the countdown clock. Specify <strong>YYYY-MM-DD HH:MM:SS</strong>, where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-11-16T20:00:00.000Z
            format: date-time
            type: string
          player_logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that appears partially transparent in a corner of the player throughout playback. Logo file must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
            type: string
          player_logo_position:
            description: The corner of the player in which you want the player logo to appear. The default is <strong>top-left</strong>.
            enum:
              - top-left
              - top-right
              - bottom-left
              - bottom-right
            example: top-right
            type: string
          player_responsive:
            description: A player whose size adjusts according to the device on which it's being viewed. If <strong>true</strong>, creates a responsive player. If <strong>false</strong>, specify a <em>player_width</em>.
            example: false
            type: boolean
          player_type:
            description: The player you want to use. Valid values are <strong>original_html5</strong>, which provides HTML5 playback and falls back to Flash on older browsers, and <strong>wowza_player</strong>, which provides HTML5 playback over Apple HLS. <strong>wowza_player</strong> requires that <strong>target_delivery_protocol</strong> be <strong>hls-https</strong> and <strong>closed_caption_type</strong> be <strong>none</strong>. The default is <strong>original_html5</strong>.
            example: wowza_player
            type: string
          player_video_poster_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG poster image that appears in the player before the stream begins. Poster image files must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
            type: string
          player_width:
            description: The width, in pixels, of a fixed-size player. The default is <strong>640</strong>.
            example: 640
            format: int32
            type: integer
          recording:
            description: If <strong>true</strong>, creates a recording of the live stream. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_hosted_page_logo_image:
            description: If <strong>true</strong>, removes the logo file from the hosted page. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_player_logo_image:
            description: If <strong>true</strong>, removes the logo file from the player. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_player_video_poster_image:
            description: If <strong>true</strong>, removes the poster image. The default is <strong>false</strong>.
            example: true
            type: boolean
          source_url:
            description: The URL of an IP camera or video encoder using an RTMP and RTSP pull connection to Wowza Streaming Cloud. Consult the camera or encoder documentation for the URL syntax.
            example: xyz.streamlock.net/vod/mp4:Movie.mov
            type: string
          target_delivery_protocol:
            description: The type of stream being delivered from Wowza Streaming Cloud. The default is <strong>hls-https</strong>.
            enum:
              - hls-https
              - hls-hds
            example: hls-https
            type: string
          transcoder_type:
            description: The type of transcoder, either <strong>transcoded</strong> for streams that are transcoded into adaptive bitrate renditions or <strong>passthrough</strong> for streams that aren't processed by the transcoder. The default is <strong>transcoded</strong>.
            enum:
              - transcoded
              - passthrough
            example: transcoded
            type: string
          use_stream_source:
            description: If <strong>true</strong>, uses a stream source to deliver the stream to Wowza Streaming Cloud. The default, <strong>false</strong>, pushes directly to Wowza Streaming Cloud.
            example: false
            type: boolean
          username:
            description: A username for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: client2
            type: string
          video_fallback:
            description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with HLS stream targets.
            example: false
            type: boolean
        required:
          - name
          - transcoder_type
          - billing_mode
          - broadcast_location
          - encoder
          - aspect_ratio_width
          - aspect_ratio_height
        title: live_stream
        type: object
    required:
      - live_stream
    type: object
  live_stream_update_input:
    properties:
      live_stream:
        properties:
          aspect_ratio_height:
            description: The height, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
            example: 1080
            format: int32
            type: integer
          aspect_ratio_width:
            description: The width, in pixels, of the video source. Should correspond to a widescreen (16:9) or standard (4:3) aspect ratio and be divisible by 8.
            example: 1920
            format: int32
            type: integer
          closed_caption_type:
            description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
            enum:
              - none
              - cea
              - on_text
              - both
            example: cea
            type: string
          delivery_method:
            description: The type of connection between the video source and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
            enum:
              - pull
              - cdn
              - push
            example: push
            type: string
          delivery_protocols:
            description: An array of direct delivery protocols enabled for this live stream. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are enabled.
            example:
              - rtmp
              - rtsp
              - wowz
            items:
              type: string
            type: array
          disable_authentication:
            description: Authentication is required by default for RTMP and RTSP push connections from a video source to Wowza Streaming Cloud. Specify <strong>true</strong> to disable authentication with the video source.
            example: false
            type: boolean
          encoder:
            description: The video source for the live stream. Choose the type of camera or encoder you're using to connect to the Wowza Streaming Cloud transcoder. If your specific device isn't listed, choose <strong>ipcamera</strong>, <strong>other_rtmp</strong>, or <strong>other_rtsp</strong>.
            enum:
              - wowza_streaming_engine
              - wowza_gocoder
              - media_ds
              - axis
              - epiphan
              - hauppauge
              - jvc
              - live_u
              - matrox
              - newtek_tricaster
              - osprey
              - sony
              - telestream_wirecast
              - teradek_cube
              - vmix
              - x_split
              - ipcamera
              - other_rtmp
              - other_rtsp
            example: wowza_gocoder
            type: string
          hosted_page_description:
            description: A description that appears on the hosted page below the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page Description
            type: string
          hosted_page_logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that that appears in the upper-left corner of the hosted page. Logo file must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
            type: string
          hosted_page_sharing_icons:
            description: Icons that let viewers share the stream on Facebook, Google+, Twitter, and by email. The default, <strong>true</strong>, includes sharing icons on the hosted page. Specify <strong>false</strong> to omit sharing icons.
            example: true
            type: boolean
          hosted_page_title:
            description: A title for the page that appears above the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page
            type: string
          name:
            description: A descriptive name for the live stream. Maximum 200 characters.
            example: My Live Stream
            type: string
          password:
            description: A password for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: "68332313"
            type: string
          player_countdown:
            description: A clock that appears in the player before the event and counts down to the start of the stream. Specify <strong>true</strong> to display the countdown clock. The default is <strong>false</strong>.
            example: true
            type: boolean
          player_countdown_at:
            description: The date and time that the event starts, used by the countdown clock. Specify <strong>YYYY-MM-DD HH:MM:SS</strong>, where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-11-16T20:00:00.000Z
            format: date-time
            type: string
          player_logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that appears partially transparent in a corner of the player throughout playback. Logo file must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
            type: string
          player_logo_position:
            description: The corner of the player in which you want the player logo to appear. The default is <strong>top-left</strong>.
            enum:
              - top-left
              - top-right
              - bottom-left
              - bottom-right
            example: top-right
            type: string
          player_responsive:
            description: A player whose size adjusts according to the device on which it's being viewed. If <strong>true</strong>, creates a responsive player. If <strong>false</strong>, specify a <em>player_width</em>.
            example: false
            type: boolean
          player_type:
            description: The player you want to use. Valid values are <strong>original_html5</strong>, which provides HTML5 playback and falls back to Flash on older browsers, and <strong>wowza_player</strong>, which provides HTML5 playback over Apple HLS. <strong>wowza_player</strong> requires that <strong>target_delivery_protocol</strong> be <strong>hls-https</strong> and <strong>closed_caption_type</strong> be <strong>none</strong>. The default is <strong>original_html5</strong>.
            example: wowza_player
            type: string
          player_video_poster_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG poster image that appears in the player before the stream begins. Poster image files must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
            type: string
          player_width:
            description: The width, in pixels, of a fixed-size player. The default is <strong>640</strong>.
            example: 640
            format: int32
            type: integer
          recording:
            description: If <strong>true</strong>, creates a recording of the live stream. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_hosted_page_logo_image:
            description: If <strong>true</strong>, removes the logo file from the hosted page. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_player_logo_image:
            description: If <strong>true</strong>, removes the logo file from the player. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_player_video_poster_image:
            description: If <strong>true</strong>, removes the poster image. The default is <strong>false</strong>.
            example: true
            type: boolean
          source_url:
            description: The URL of an IP camera or video encoder using an RTMP and RTSP pull connection to Wowza Streaming Cloud. Consult the camera or encoder documentation for the URL syntax.
            example: xyz.streamlock.net/vod/mp4:Movie.mov
            type: string
          target_delivery_protocol:
            description: The type of stream being delivered from Wowza Streaming Cloud. The default is <strong>hls-https</strong>.
            enum:
              - hls-https
              - hls-hds
            example: hls-https
            type: string
          use_stream_source:
            description: If <strong>true</strong>, uses a stream source to deliver the stream to Wowza Streaming Cloud. The default, <strong>false</strong>, pushes directly to Wowza Streaming Cloud.
            example: false
            type: boolean
          username:
            description: A username for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: client2
            type: string
          video_fallback:
            description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with HLS stream targets.
            example: false
            type: boolean
        required:
          - name
          - encoder
          - aspect_ratio_width
          - aspect_ratio_height
        title: live_stream
        type: object
    required:
      - live_stream
    type: object
  live_streams:
    example:
      live_streams:
        - aspect_ratio_height: 1080
          aspect_ratio_width: 1920
          billing_mode: pay_as_you_go
          broadcast_location: us_west_california
          closed_caption_type: cea
          connection_code: 0e15cb
          connection_code_expires_at: 2018-09-15T20:00:42.970Z
          created_at: 2017-11-13T20:00:42.970Z
          delivery_method: push
          delivery_protocols:
            - rtmp
            - rtsp
            - wowz
          delivery_type: multi-bitrate
          direct_playback_urls:
            - rtmp:
                - name: source
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6
            - rtsp:
                - name: source
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
            - wowz:
                - name: source
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
          encoder: wowza_streaming_engine
          hosted_page: true
          hosted_page_description: My Hosted Page Description
          hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
          hosted_page_sharing_icons: true
          hosted_page_title: My Hosted Page
          hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html
          id: wdjfqvsv
          name: My PAYG Transcoded WSE Live Stream
          player_countdown: true
          player_countdown_at: 2017-11-16T20:00:00.000Z
          player_embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
          player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
          player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
          player_id: kwb6pwnv
          player_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
          player_logo_position: top-right
          player_responsive: false
          player_type: original_html5
          player_video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
          player_width: 640
          recording: true
          stream_source_id: 5skrfpyf
          stream_targets:
            - id: klbmg2h8
            - id: bnjtdmmc
          target_delivery_protocol: hls
          transcoder_type: transcoded
          updated_at: 2017-11-15T17:49:14.970Z
          use_stream_source: true
          video_fallback: false
        - aspect_ratio_height: 1080
          aspect_ratio_width: 1920
          billing_mode: twentyfour_seven
          broadcast_location: eu_germany
          closed_caption_type: none
          connection_code: "170153"
          connection_code_expires_at: 2018-09-15T20:00:42.970Z
          created_at: 2017-11-13T20:00:42.970Z
          delivery_method: push
          delivery_protocols:
            - rtmp
            - rtsp
            - wowz
          direct_playback_urls:
            - {}
          encoder: wowza_gocoder
          hosted_page: false
          id: KyxWKtHQ
          name: My 24x7 Passthrough GoCoder Live Stream
          player_countdown: false
          player_embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
          player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
          player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
          player_id: r2wjnclg
          player_responsive: true
          player_type: original_html5
          recording: false
          source_connection_information:
            host_port: 1935
            password: 51eac9b5
            primary_server: rtsp://ff5ccd.qa.entrypoint.cloud.wowza.com/app-0279
            stream_name: 62bbe7c6
            username: client1
          stream_targets:
            - id: klbmg2h8
            - id: bnjtdmmc
          target_delivery_protocol: hls-hds
          transcoder_type: passthrough
          updated_at: 2017-11-15T12:58:27.971Z
          use_stream_source: false
          video_fallback: false
        - aspect_ratio_height: 1080
          aspect_ratio_width: 1920
          billing_mode: pay_as_you_go
          broadcast_location: us_east_virginia
          closed_caption_type: none
          connection_code: already_used
          connection_code_expires_at: 2017-10-15T20:00:42.971Z
          created_at: 2017-11-13T20:00:42.971Z
          delivery_method: cdn
          delivery_protocols:
            - rtmp
            - rtsp
            - wowz
          direct_playback_urls:
            - {}
          encoder: teradek_cube
          hosted_page: false
          id: Ly40ZDSg
          name: My PAYG Transcoded Teradek Cube Live Stream
          player_countdown: false
          player_embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
          player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
          player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
          player_id: vbfnfmbx
          player_responsive: true
          player_type: original_html5
          recording: true
          source_connection_information:
            backup_server: rtmp://b.ep118446.i.akamaientrypoint.net/EntryPoint
            host_port: 1935
            password: 164edc9d58
            primary_server: rtmp://p.ep118446.i.akamaientrypoint.net/EntryPoint
            stream_name: e1a34178@118446
            teradek_cube_config_url: https://westre.am/T1xEa8pV
            username: "310232"
          stream_source_id: 5skrfpyf
          stream_targets:
            - id: klbmg2h8
            - id: bnjtdmmc
          target_delivery_protocol: hls-https
          transcoder_type: transcoded
          updated_at: 2017-11-15T14:33:13.971Z
          use_stream_source: true
          video_fallback: false
    properties:
      live_streams:
        items:
          $ref: "#/definitions/live_stream"
        type: array
    required:
      - live_streams
    type: object
  output:
    example:
      aspect_ratio_height: 480
      aspect_ratio_width: 848
      bitrate_audio: 128
      bitrate_video: 1600
      created_at: 2017-11-13T20:00:43.237Z
      framerate_reduction: 1/2
      h264_profile: main
      id: w9vJm3BJ
      keyframes: follow_source
      name: Video+Audio=1600+128, main, 848 x 480
      output_stream_targets:
        - {}
      passthrough_audio: false
      passthrough_video: false
      stream_format: audiovideo
      transcoder_id: PblTJm1t
      updated_at: 2017-11-15T03:31:50.237Z
    properties:
      aspect_ratio_height:
        description: The height, in pixels, of the output rendition. Should correspond to a widescreen or standard aspect ratio and be divisible by 8. The default is <strong>1080</strong>.
        format: int32
        type: integer
      aspect_ratio_width:
        description: The width, in pixels, of the output rendition. Should correspond to a widescreen or standard aspect ratio and be divisible by 8. The default is <strong>1980</strong>.
        format: int32
        type: integer
      bitrate_audio:
        description: The audio bitrate, in kilobits per second (Kbps). Must be between <strong>0</strong> (for passthrough audio) and <strong>1000</strong>. The default is <strong>128</strong>.
        format: int32
        type: integer
      bitrate_video:
        description: The video bitrate, in kilobits per second (Kbps). Must be between <strong>0</strong> (for passthrough video) and <strong>10240</strong>. The default is <strong>4000</strong>.
        format: int32
        type: integer
      created_at:
        description: The date and time that the output rendition was created.
        format: date-time
        type: string
      framerate_reduction:
        description: Reduce the frame rate of the transcoded output rendition. The default, <strong>0</strong>, uses the encoded stream's frame rate without reduction.
        enum:
          - "0"
          - 1/2
          - 1/4
          - 1/25
          - 1/30
          - 1/50
          - 1/60
        type: string
      h264_profile:
        description: The encoding method. Specify <strong>main</strong> for desktop streaming, <strong>baseline</strong> for playback on mobile devices, or <strong>high</strong> for HD playback. The default is <strong>high</strong>.
        enum:
          - main
          - baseline
          - high
        type: string
      id:
        description: The unique alphanumeric string that identifies the output rendition.
        type: string
      keyframes:
        description: The interval used to define the compression applied to a group of frames. The default, <strong>follow_source</strong>, uses the keyframe interval of the source video.
        enum:
          - follow_source
          - "25"
          - "30"
          - "50"
          - "60"
          - "100"
          - "120"
        type: string
      name:
        description: A descriptive name for the output (generated, not writable).
        type: string
      output_stream_targets:
        items:
          $ref: "#/definitions/output_stream_target"
        type: array
      passthrough_audio:
        description: If <strong>true</strong>, sends the audio track to the target without transcoding. The default is <strong>false</strong>.
        type: boolean
      passthrough_video:
        description: If <strong>true</strong>, sends the video track to the target without transcoding. The default is <strong>false</strong>.
        type: boolean
      stream_format:
        description: The contents of the stream. The default is both audio and video (<strong>audiovideo</strong>).
        enum:
          - audiovideo
          - videoonly
          - audioonly
        type: string
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder.
        type: string
      updated_at:
        description: The date and time that the output rendition was updated.
        format: date-time
        type: string
    type: object
  output_add_stream_target_input:
    properties:
      output_stream_target:
        properties:
          stream_target_id:
            description: The unique alphanumeric string that identifies the stream target.
            example: jfbKkrTL
            type: string
            x-lookup-uri: stream_targets
          use_stream_target_backup_url:
            description: Use the target's backup URL. Not available for targets whose <em>provider</em> is <strong>akamai_cupertino</strong>. The default is <strong>false</strong>.
            example: true
            type: boolean
        required:
          - stream_target_id
        title: output_stream_target
        type: object
    required:
      - output_stream_target
    type: object
  output_create_input:
    allOf:
      - $ref: "#/definitions/output_input"
  output_input:
    properties:
      output:
        properties:
          aspect_ratio_height:
            description: The height, in pixels, of the output rendition. Should correspond to a widescreen or standard aspect ratio and be divisible by 8. The default is <strong>1080</strong>.
            example: 480
            format: int32
            type: integer
          aspect_ratio_width:
            description: The width, in pixels, of the output rendition. Should correspond to a widescreen or standard aspect ratio and be divisible by 8. The default is <strong>1980</strong>.
            example: 848
            format: int32
            type: integer
          bitrate_audio:
            description: The audio bitrate, in kilobits per second (Kbps). Must be between <strong>0</strong> (for passthrough audio) and <strong>1000</strong>. The default is <strong>128</strong>.
            example: 128
            format: int32
            type: integer
          bitrate_video:
            description: The video bitrate, in kilobits per second (Kbps). Must be between <strong>0</strong> (for passthrough video) and <strong>10240</strong>. The default is <strong>4000</strong>.
            example: 1600
            format: int32
            type: integer
          framerate_reduction:
            description: Reduce the frame rate of the transcoded output rendition. The default, <strong>0</strong>, uses the encoded stream's frame rate without reduction.
            enum:
              - "0"
              - 1/2
              - 1/4
              - 1/25
              - 1/30
              - 1/50
              - 1/60
            example: 1/2
            type: string
          h264_profile:
            description: The encoding method. Specify <strong>main</strong> for desktop streaming, <strong>baseline</strong> for playback on mobile devices, or <strong>high</strong> for HD playback. The default is <strong>high</strong>.
            enum:
              - main
              - baseline
              - high
            example: main
            type: string
          keyframes:
            description: The interval used to define the compression applied to a group of frames. The default, <strong>follow_source</strong>, uses the keyframe interval of the source video.
            enum:
              - follow_source
              - "25"
              - "30"
              - "50"
              - "60"
              - "100"
              - "120"
            example: follow_source
            type: string
          passthrough_audio:
            description: If <strong>true</strong>, sends the audio track to the target without transcoding. The default is <strong>false</strong>.
            example: false
            type: boolean
          passthrough_video:
            description: If <strong>true</strong>, sends the video track to the target without transcoding. The default is <strong>false</strong>.
            example: false
            type: boolean
          stream_format:
            description: The contents of the stream. The default is both audio and video (<strong>audiovideo</strong>).
            enum:
              - audiovideo
              - videoonly
              - audioonly
            example: audiovideo
            type: string
        required:
          - stream_format
        title: output
        type: object
    required:
      - output
    type: object
  output_remove_stream_target_input:
    properties:
      output_stream_target:
        properties:
          stream_target_id:
            description: The unique alphanumeric string that identifies the stream target.
            example: jfbKkrTL
            type: string
            x-lookup-uri: /transcoders/{transcoder_id}/outputs/{id}.targets
        required:
          - stream_target_id
        title: output_stream_target
        type: object
    required:
      - output_stream_target
    type: object
  output_stream_target:
    example:
      id: 4Gp5rF23
      output_id: w9vJm3BJ
      stream_target:
        connection_code: 133fcc
        connection_code_expires_at: 2018-09-15T20:00:43.239Z
        created_at: 2017-11-13T20:00:43.239Z
        hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8
        hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m
        id: QvvJYJjk
        location: us_west_california
        name: My provisioned RTMP Stream Target
        password: 0c7cba98e7
        primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
        provider: akamai
        stream_name: 76fa8b9c_1_[BITRATE]@335304
        type: WowzaStreamTarget
        updated_at: 2017-11-14T19:55:19.239Z
        username: "169630"
      stream_target_id: QvvJYJjk
      use_stream_target_backup_url: false
    properties:
      created_at:
        description: The date and time that the output stream target was created.
        format: date-time
        type: string
      id:
        description: The unique alphanumeric string that identifies the output stream target.
        type: string
      output_id:
        description: The unique alphanumeric string that identifies the output rendition.
        type: string
      stream_target:
        $ref: "#/definitions/stream_target"
      stream_target_id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      updated_at:
        description: The date and time that the output stream target was updated.
        format: date-time
        type: string
      use_stream_target_backup_url:
        description: Specifies whether to use the stream target's primary or backup URL.
        type: boolean
    type: object
  output_stream_target_create_input:
    allOf:
      - $ref: "#/definitions/output_stream_target_input"
  output_stream_target_input:
    properties:
      output_stream_target:
        properties:
          stream_target_id:
            description: The unique alphanumeric string that identifies the stream target.
            example: 1234abcd
            type: string
          use_stream_target_backup_url:
            description: Specifies whether to use the stream target's primary or backup URL.
            example: true
            type: boolean
        required:
          - stream_target_id
        title: output_stream_target
        type: object
    required:
      - output_stream_target
    type: object
  output_stream_target_update_input:
    allOf:
      - $ref: "#/definitions/output_stream_target_input"
  output_stream_targets:
    example:
      output_stream_targets:
        - id: 4Gp5rF23
          output_id: w9vJm3BJ
          stream_target:
            connection_code: 133fcc
            connection_code_expires_at: 2018-09-15T20:00:43.239Z
            created_at: 2017-11-13T20:00:43.239Z
            hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8
            hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m
            id: QvvJYJjk
            location: us_west_california
            name: My provisioned RTMP Stream Target
            password: 0c7cba98e7
            primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
            provider: akamai
            stream_name: 76fa8b9c_1_[BITRATE]@335304
            type: WowzaStreamTarget
            updated_at: 2017-11-14T21:41:35.239Z
            username: "169630"
          stream_target_id: QvvJYJjk
          use_stream_target_backup_url: false
        - id: 345Gd9Hs
          output_id: w9vJm3BJ
          stream_target:
            connection_code: 133fcc
            connection_code_expires_at: 2018-09-15T20:00:43.239Z
            created_at: 2017-11-13T20:00:43.239Z
            hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8
            hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m
            id: R32u8HDk
            location: us_west_california
            name: My other provisioned RTMP Stream Target
            password: 0c7cba98e7
            primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
            provider: akamai
            secure_ingest_query_param: ...
            stream_name: 76fa8b9c_1_[BITRATE]@335304
            type: WowzaStreamTarget
            updated_at: 2017-11-14T19:43:14.239Z
            username: "169630"
          stream_target_id: R32u8HDk
          use_stream_target_backup_url: false
    properties:
      output_stream_targets:
        items:
          $ref: "#/definitions/output_stream_target"
        type: array
    required:
      - output_stream_targets
    type: object
  output_update_input:
    allOf:
      - $ref: "#/definitions/output_input"
  outputs:
    example:
      outputs:
        - aspect_ratio_height: 480
          aspect_ratio_width: 848
          bitrate_audio: 128
          bitrate_video: 1600
          created_at: 2017-11-13T20:00:43.228Z
          framerate_reduction: 1/2
          h264_profile: main
          id: w9vJm3BJ
          keyframes: follow_source
          name: Video+Audio=1600+128, main, 848 x 480
          output_stream_targets:
            - {}
          passthrough_audio: false
          passthrough_video: false
          stream_format: audiovideo
          transcoder_id: PblTJm1t
          updated_at: 2017-11-14T17:27:27.228Z
        - created_at: 2017-11-13T20:00:43.228Z
          id: PPqV0kcm
          name: Video+Audio=Passthrough+Passthrough
          output_stream_targets:
            - {}
          passthrough_audio: true
          passthrough_video: true
          stream_format: audiovideo
          transcoder_id: Yf5lyjCV
          updated_at: 2017-11-15T13:40:58.228Z
    properties:
      outputs:
        items:
          $ref: "#/definitions/output"
        type: array
    required:
      - outputs
    type: object
  player:
    example:
      countdown: true
      countdown_at: 2017-11-16T20:00:00.000Z
      created_at: 2017-11-13T20:00:43.277Z
      embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
      hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
      hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
      hosted_page: true
      hosted_page_description: My Hosted Page Description
      hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
      hosted_page_sharing_icons: false
      hosted_page_title: My Hosted Page
      hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html
      id: e8dk5bf6
      logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
      logo_position: bottom-left
      responsive: false
      transcoder_id: 6Qbymbbq
      type: original_html5
      updated_at: 2017-11-14T17:55:32.277Z
      video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
      width: 640
    properties:
      countdown:
        description: A clock that appears in the player before the event and counts down to the start of the stream. Specify <strong>true</strong> to display the countdown clock. The default is <strong>false</strong>.
        type: boolean
      countdown_at:
        description: The date and time that the event starts, used by the countdown clock. Enter <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
        format: date-time
        type: string
      created_at:
        description: The date and time that the player was created.
        format: date-time
        type: string
      embed_code:
        description: The HTML code that can be used in an external webpage to host the Wowza Streaming Cloud player.
        type: string
      hds_playback_url:
        description: The address that can be used to configure playback of the stream using the Adobe HDS protocol.
        type: string
      hls_playback_url:
        description: The address that can be used to configure playback of the stream using the Apple HLS protocol.
        type: string
      hosted_page:
        description: A web page hosted by Wowza Streaming Cloud that includes a player for the live stream. The default, <strong>true</strong>, creates a hosted page. Specify <strong>false</strong> to not create a hosted web page.
        type: boolean
      hosted_page_description:
        description: A description that appears on the hosted page below the player. Can't include custom HTML, JavaScript, or other tags.
        type: string
      hosted_page_logo_image_url:
        description: The path to a GIF, JPEG, or PNG logo file that appears in the upper-left corner of the hosted page. Logo file must be 2.5 MB or smaller.
        type: string
      hosted_page_sharing_icons:
        description: Icons that let viewers share the stream on Facebook, Google+, Twitter, and by email. The default, <strong>true</strong>, includes sharing icons on the hosted page. Specify <strong>false</strong> to omit sharing icons.
        type: string
      hosted_page_title:
        description: A title for the page that appears above the player. Can't include custom HTML, JavaScript, or other tags.
        type: string
      hosted_page_url:
        description: The URL of the Wowza Streaming Cloud-hosted webpage that viewers can visit to watch the stream.
        type: string
      id:
        description: The unique alphanumeric string that identifies the player.
        type: string
      logo_image_url:
        description: The path to a GIF, JPEG, or PNG logo file that appears partially transparent in a corner of the player throughout playback. Logo file must be 2.5 MB or smaller.
        type: string
      logo_position:
        description: The corner of the player in which you want the player logo to appear. The default is <strong>top-left</strong>.
        type: string
      responsive:
        description: A player whose size adjusts according to the device on which it's being viewed. If <strong>true</strong>, creates a responsive player. If <strong>false</strong>, specify a <strong>width</strong>.
        type: boolean
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder.
        type: string
      type:
        description: The player you want to use. Valid values are <strong>original_html5</strong>, which provides HTML5 playback and falls back to Flash on older browsers, and <strong>wowza_player</strong>, which provides HTML5 playback over Apple HLS. <strong>wowza_player</strong> requires that <em>target_delivery_protocol</em> be <strong>hls-https</strong> and <em>closed_caption_type</em> be <strong>none</strong>. The default is <strong>original_html5</strong>.
        type: string
      updated_at:
        description: The date and time that the player was updated.
        format: date-time
        type: string
      video_poster_image_url:
        description: The path to a GIF, JPEG, or PNG poster image that appears in the player before the stream begins. Poster image files must be 2.5 MB or smaller.
        type: string
      width:
        description: The width, in pixels, of a fixed-size player. The default is <strong>640</strong>.
        format: int32
        type: integer
    type: object
  player_update_input:
    properties:
      player:
        properties:
          countdown:
            description: A clock that appears in the player before the event and counts down to the start of the stream. Specify <strong>true</strong> to display the countdown clock. The default is <strong>false</strong>.
            example: true
            type: boolean
          countdown_at:
            description: The date and time that the event starts, used by the countdown clock. Enter <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-11-16T20:00:00.000Z
            format: date-time
            type: string
          hosted_page:
            description: A web page hosted by Wowza Streaming Cloud that includes a player for the live stream. The default, <strong>true</strong>, creates a hosted page. Specify <strong>false</strong> to not create a hosted web page.
            example: true
            type: boolean
          hosted_page_description:
            description: A description that appears on the hosted page below the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page Description
            type: string
          hosted_page_logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that appears in the upper-left corner of the hosted page. Logo file must be 2.5 MB or smaller.
            example: "[Base64-encoded string representation of an image]"
            type: string
          hosted_page_sharing_icons:
            description: Icons that let viewers share the stream on Facebook, Google+, Twitter, and by email. The default, <strong>true</strong>, includes sharing icons on the hosted page. Specify <strong>false</strong> to omit sharing icons.
            example: true
            type: boolean
          hosted_page_title:
            description: A title for the page that appears above the player. Can't include custom HTML, JavaScript, or other tags.
            example: My Hosted Page
            type: string
          logo_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG logo file that appears partially transparent in a corner of the player throughout playback. Logo file must be 2.5 MB or smaller.
            example: "[Base64-encoded string representation of an image]"
            type: string
          logo_position:
            description: The corner of the player in which you want the player logo to appear. The default is <strong>top-left</strong>.
            example: top-right
            type: string
          remove_hosted_page_logo_image:
            description: If <strong>true</strong>, removes the logo file from the output. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_logo_image:
            description: If <strong>true</strong>, removes the logo file from the output. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_video_poster_image:
            description: If <strong>true</strong>, removes the poster image from the output. The default is <strong>false</strong>.
            example: true
            type: boolean
          responsive:
            description: A player whose size adjusts according to the device on which it's being viewed. If <strong>true</strong>, creates a responsive player. If <strong>false</strong>, specify a <strong>width</strong>.
            example: false
            type: boolean
          type:
            description: The player you want to use. Valid values are <strong>original_html5</strong>, which provides HTML5 playback and falls back to Flash on older browsers, and <strong>wowza_player</strong>, which provides HTML5 playback over Apple HLS. <strong>wowza_player</strong> requires that <em>target_delivery_protocol</em> be <strong>hls-https</strong> and <em>closed_caption_type</em> be <strong>none</strong>. The default is <strong>original_html5</strong>.
            example: wowza_player
            type: string
          video_poster_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG poster image that appears in the player before the stream begins. Poster image files must be 2.5 MB or smaller.
            example: "[Base64-encoded string representation of an image]"
            type: string
          width:
            description: The width, in pixels, of a fixed-size player. The default is <strong>640</strong>.
            example: 640
            format: int32
            type: integer
        title: player
        type: object
    required:
      - player
    type: object
  players:
    example:
      players:
        - countdown: true
          countdown_at: 2017-11-16T20:00:00.000Z
          created_at: 2017-11-13T20:00:43.244Z
          embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js' type='text/javascript'></script>
          hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m
          hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8
          hosted_page: true
          hosted_page_description: My Hosted Page Description
          hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg
          hosted_page_sharing_icons: false
          hosted_page_title: My Hosted Page
          hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html
          id: e8dk5bf6
          logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg
          logo_position: top-right
          responsive: false
          transcoder_id: 6Qbymbbq
          type: original_html5
          updated_at: 2017-11-14T20:15:05.276Z
          video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg
          width: 640
        - countdown: false
          created_at: 2017-11-13T20:00:43.276Z
          embed_code: <div id='wowza_player'></div><script id='player_embed' src='//player.cloud.wowza.com/hosted/s3jmdnbl/wowza.js' type='text/javascript'></script>
          hds_playback_url: http://wowza-lh.akamaihd.net/z/e32c4b20_1@123456/manifest.f4m
          hls_playback_url: http://wowza-lh.akamaihd.net/z/e32c4b20_1@123456/master.m3u8
          hosted_page: false
          id: s3jmdnbl
          responsive: true
          transcoder_id: 3kbb0hvf
          updated_at: 2017-11-15T03:22:52.276Z
    properties:
      players:
        items:
          $ref: "#/definitions/player"
        type: array
    required:
      - players
    type: object
  recording:
    example:
      created_at: 2017-11-13T20:00:43.281Z
      download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_035163/64886_00a613bf@367500.stream.0.mp4
      duration: 362905
      file_name: 00a613bf@367500.stream.0.mp4
      file_size: 53113429
      id: 4Jjzstdt
      reason: ""
      starts_at: 2017-11-16T00:00:00.000Z
      state: completed
      transcoder_id: bjQplmRw
      transcoder_name: My Camera
      transcoding_uptime_id: vxyz9876
      updated_at: 2017-11-15T07:13:04.281Z
    properties:
      created_at:
        description: The date and time that the recording was created.
        format: date-time
        type: string
      download_url:
        description: The URL that can be used to download the recording.
        type: string
      duration:
        description: The length of the recording, in hours, minutes, and seconds.
        format: int64
        type: integer
      file_name:
        description: The file name of the recording.
        type: string
      file_size:
        description: The file size of the recording.
        format: int64
        type: integer
      id:
        description: The unique alphanumeric string that identifies the recording.
        type: string
      reason:
        description: The reason that a recording has the state <strong>failed</strong>.
        type: string
      starts_at:
        description: The date and time that the recording started.
        type: string
      state:
        description: The state of the recording.
        enum:
          - uploading
          - converting
          - removing
          - completed
          - failed
        type: string
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder that was recorded.
        type: string
      transcoder_name:
        description: The descriptive name of the transcoder that was recorded.
        type: string
      transcoding_uptime_id:
        description: The unique identifier associated with the transcoding uptime for this recording.
        format: date-time
        type: string
      updated_at:
        description: The date and time that the recording was updated.
        format: date-time
        type: string
    type: object
  recordings:
    example:
      recordings:
        - created_at: 2017-11-13T20:00:43.281Z
          download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_035163/64886_00a613bf@367500.stream.0.mp4
          duration: 362905
          file_name: 00a613bf@367500.stream.0.mp4
          file_size: 53113429
          id: 4Jjzstdt
          reason: ""
          starts_at: 2017-11-16T00:00:00.000Z
          state: completed
          transcoder_id: bjQplmRw
          transcoder_name: My Camera
          transcoding_uptime_id: vxyz9876
          updated_at: 2017-11-15T15:37:56.281Z
        - created_at: 2017-11-12T20:00:43.281Z
          download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_014877/62726_bfcc36a2@196282.stream.0.mp4
          duration: 28455905
          file_name: bfcc36a2@196282.stream.0.mp4
          file_size: 7109841765
          id: fFWxVsyj
          reason: ""
          starts_at: 2017-11-16T00:00:00.000Z
          state: archived
          transcoder_id: PMNVbL4n
          transcoder_name: My Other Camera
          transcoding_uptime_id: abcd1234
          updated_at: 2017-11-14T18:28:11.281Z
    properties:
      recordings:
        items:
          $ref: "#/definitions/recording"
        type: array
    required:
      - recordings
    type: object
  schedule:
    example:
      action_type: start_stop
      begins_at: 2017-11-16T00:00:00.000Z
      created_at: 2017-11-13T20:00:43.284Z
      end_repeat: 2017-12-15
      ends_at: 2017-12-15T23:59:59.999Z
      id: 28bwb5WT
      name: Scheduled recurring start for my camera
      recurrence_data: monday,tuesday,wednesday,thursday,friday
      recurrence_type: recur
      start_repeat: 2017-11-16
      state: disabled
      transcoder_id: VGB21JFJ
      transcoder_name: My Camera
      updated_at: 2017-11-15T08:51:36.284Z
    properties:
      action_type:
        description: The type of action that the schedule should trigger on the transcoder. The default is <strong>start</strong>.
        enum:
          - start
          - stop
          - start_stop
        example: start_stop
        type: string
      created_at:
        description: The date and time that the schedule was created.
        example: 2017-11-13T20:00:43.283Z
        format: date-time
        type: string
      end_repeat:
        description: The month, day, and year that a recurring schedule should stop running. Specify <strong>YYYY-MM-DD</strong>.
        example: 2017-12-15
        format: date
        type: string
      id:
        description: The unique alphanumeric string that identifies the schedule.
        example: 9w49LQ8L
        type: string
      name:
        description: A descriptive name for the schedule. Maximum 255 characters.
        example: Scheduled start for my camera
        type: string
      recurrence_data:
        description: The day or days of the week that a recurring schedule should run.
        enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
        example: monday,tuesday,wednesday,thursday,friday
        type: string
      recurrence_type:
        description: A schedule can run one time only (<strong>once</strong>) or repeat (<strong>recur</strong>) until a specified <em>end_repeat</em> date. The default is <strong>once</strong>.
        enum:
          - once
          - recur
        example: recur
        type: string
      start_repeat:
        description: The month, day, and year that the recurring schedule should go into effect. Specify <strong>YYYY-MM-DD</strong>.
        example: 2017-11-16
        format: date
        type: string
      start_transcoder:
        description: The month, day, year, and time of day that the <em>action_type</em> <strong>start</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
        example: 2017-11-16T00:00:00.000Z
        format: date-time
        type: string
      state:
        description: A schedule must be <strong>enabled</strong> to run. Specify <strong>enabled</strong> to run the schedule or <strong>disabled</strong> to turn off the schedule so that it doesn't run.
        enum:
          - enabled
          - disabled
          - expired
        example: enabled
        type: string
      stop_transcoder:
        description: The month, day, year, and time of day that the <em>action_type</em> <strong>stop</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
        example: 2017-12-15T23:59:59.999Z
        format: date-time
        type: string
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder being scheduled.
        example: kZjkbPS3
        type: string
      transcoder_name:
        description: The name of the transcoder being scheduled.
        example: My Camera
        type: string
      updated_at:
        description: The date and time that the schedule was updated.
        example: 2017-11-14T18:26:18.284Z
        format: date-time
        type: string
    type: object
  schedule_create_input:
    properties:
      schedule:
        properties:
          action_type:
            description: The type of action that the schedule should trigger on the transcoder. The default is <strong>start</strong>.
            enum:
              - start
              - stop
              - start_stop
            example: start_stop
            type: string
          end_repeat:
            description: The month, day, and year that a recurring schedule should stop running. Specify <strong>YYYY-MM-DD</strong>.
            example: 2017-12-15
            format: date
            type: string
          name:
            description: A descriptive name for the schedule. Maximum 255 characters.
            example: Scheduled start for my camera
            type: string
          recurrence_data:
            description: The day or days of the week that a recurring schedule should run.
            enum:
              - sunday
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
            example: monday,tuesday,wednesday,thursday,friday
            type: string
          recurrence_type:
            description: A schedule can run one time only (<strong>once</strong>) or repeat (<strong>recur</strong>) until a specified <em>end_repeat</em> date. The default is <strong>once</strong>.
            enum:
              - once
              - recur
            example: recur
            type: string
          start_repeat:
            description: The month, day, and year that the recurring schedule should go into effect. Specify <strong>YYYY-MM-DD</strong>.
            example: 2017-11-16
            format: date
            type: string
          start_transcoder:
            description: The month, day, year, and time of day that the <em>action_type</em> <strong>start</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-11-16T00:00:00.000Z
            format: date-time
            type: string
          stop_transcoder:
            description: The month, day, year, and time of day that the <em>action_type</em> <strong>stop</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-12-15T23:59:59.999Z
            format: date-time
            type: string
          transcoder_id:
            description: The unique alphanumeric string that identifies the transcoder being scheduled.
            example: Vq7zwF1P
            type: string
        required:
          - name
          - transcoder_id
          - action_type
          - recurrence_type
        title: schedule
        type: object
    required:
      - schedule
    type: object
  schedule_update_input:
    properties:
      schedule:
        properties:
          action_type:
            description: The type of action that the schedule should trigger on the transcoder. The default is <strong>start</strong>.
            enum:
              - start
              - stop
              - start_stop
            example: start_stop
            type: string
          end_repeat:
            description: The month, day, and year that a recurring schedule should stop running. Specify <strong>YYYY-MM-DD</strong>.
            example: 2017-12-15
            format: date
            type: string
          name:
            description: A descriptive name for the schedule. Maximum 255 characters.
            example: Scheduled start for my camera
            type: string
          recurrence_data:
            description: The day or days of the week that a recurring schedule should run.
            enum:
              - sunday
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
            example: monday,tuesday,wednesday,thursday,friday
            type: string
          start_repeat:
            description: The month, day, and year that the recurring schedule should go into effect. Specify <strong>YYYY-MM-DD</strong>.
            example: 2017-11-16
            format: date
            type: string
          start_transcoder:
            description: The month, day, year, and time of day that the <em>action_type</em> <strong>start</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-11-16T00:00:00.000Z
            format: date-time
            type: string
          stop_transcoder:
            description: The month, day, year, and time of day that the <em>action_type</em> <strong>stop</strong> should occur. Specify <strong>YYYY-MM-DD HH:MM:SS</strong> where <strong>HH</strong> is a 24-hour clock in UTC.
            example: 2017-12-15T23:59:59.999Z
            format: date-time
            type: string
        required:
          - name
          - action_type
        title: schedule
        type: object
    required:
      - schedule
    type: object
  schedules:
    example:
      schedules:
        - action_type: start_stop
          begins_at: 2017-11-16T00:00:00.000Z
          created_at: 2017-11-13T20:00:43.283Z
          end_repeat: 2017-12-15
          ends_at: 2017-12-15T23:59:59.999Z
          id: 28bwb5WT
          name: Scheduled recurring start for my camera
          recurrence_data: monday,tuesday,wednesday,thursday,friday
          recurrence_type: recur
          start_repeat: 2017-11-16
          state: disabled
          transcoder_id: VGB21JFJ
          transcoder_name: My Camera
          updated_at: 2017-11-15T00:43:42.283Z
        - action_type: stop
          begins_at: 2017-11-16T00:00:00.000Z
          created_at: 2017-11-13T20:00:43.283Z
          ends_at: 2017-12-15T23:59:59.999Z
          id: 4RCWgfS5
          name: Scheduled stop for my live event
          recurrence_type: once
          state: enabled
          transcoder_id: Qjl5J38Z
          transcoder_name: Awesome Live Event
          updated_at: 2017-11-14T22:04:48.283Z
    properties:
      schedules:
        items:
          $ref: "#/definitions/schedule"
        type: array
    required:
      - schedules
    type: object
  shm_historic_metrics:
    properties:
      audio_codec:
        $ref: "#/definitions/audio_codec_metric"
        description: The audio codec of the video source.
      bits_in_rate:
        $ref: "#/definitions/bits_in_rate_metric"
        description: The rate of the stream traveling from the source encoder to Wowza Streaming Cloud, in kilobits per second.
      bits_out_rate:
        $ref: "#/definitions/bits_out_rate_metric"
        description: The total actual bitrate of all outbound video streams, in kilobits per second.
      cpu_idle:
        $ref: "#/definitions/cpu_idle_metric"
        description: "translation missing: en.docs.api.v1.metrics.shm.params.cpu_idle"
      created_at:
        description: The date and time that the stream health record was created.
        example: 2017-07-06T14:20:00Z
        type: string
      frame_rate:
        $ref: "#/definitions/frame_rate_metric"
        description: The frame rate of the video source, in frames per second.
      height:
        $ref: "#/definitions/height_metric"
        description: The height of the frame of the video source frame, in pixels.
      keyframe_interval:
        $ref: "#/definitions/keyframe_interval_metric"
        description: The number of video frames compressed in a group of pictures (GOP) between keyframes.
      video_codec:
        $ref: "#/definitions/video_codec_metric"
        description: The video codec of the video source.
      width:
        $ref: "#/definitions/width_metric"
        description: The width of the frame of the video source, in pixels.
    type: object
  shm_metrics:
    properties:
      audio_codec:
        $ref: "#/definitions/audio_codec_metric"
        description: The audio codec of the video source.
      bits_in_rate:
        $ref: "#/definitions/bits_in_rate_metric"
        description: The rate of the stream traveling from the source encoder to Wowza Streaming Cloud, in kilobits per second.
      bits_out_rate:
        $ref: "#/definitions/bits_out_rate_metric"
        description: The total actual bitrate of all outbound video streams, in kilobits per second.
      bytes_in_rate:
        $ref: "#/definitions/bytes_in_rate_metric"
        description: The rate of the stream traveling from the source encoder to Wowza Streaming Cloud, in kilobytes per second.
      bytes_out_rate:
        $ref: "#/definitions/bytes_out_rate_metric"
        description: The total actual bitrate of all outbound video streams, in kilobytes per second.
      configured_bytes_out_rate:
        $ref: "#/definitions/configured_bytes_out_rate_metric"
        description: The total configured bitrate of all outbound video streams, in kilobits per second.
      connected:
        $ref: "#/definitions/connected_metric"
        description: The connection status of the video source. <strong>Yes</strong> means the source is connected. <strong>No</strong> means the source is not connected.
      cpu:
        $ref: "#/definitions/cpu_metric"
        description: The percentage of available CPU power on the virtual host being used by the transcoder.
      frame_rate:
        $ref: "#/definitions/frame_rate_metric"
        description: The frame rate of the video source, in frames per second.
      frame_size:
        $ref: "#/definitions/frame_size_metric"
        description: The frame size of the video source, in pixels.
      gpu_decoder_usage:
        $ref: "#/definitions/gpu_decoder_usage_metric"
        description: The percentage of the GPU decoding power on the virtual host being used by the transcoder.
      gpu_driver_version:
        $ref: "#/definitions/gpu_driver_version_metric"
        description: The version of the GPU driver on the virtual host.
      gpu_encoder_usage:
        $ref: "#/definitions/gpu_encoder_usage_metric"
        description: The percentage of available GPU encoding power on the virtual host being used by the transcoder.
      gpu_memory_usage:
        $ref: "#/definitions/gpu_memory_usage_metric"
        description: The percentage of the GPU memory usage on the virtual host being used by the transcoder.
      gpu_usage:
        $ref: "#/definitions/gpu_usage_metric"
        description: The percentage of the total GPU usage on the virtual host being used by the transcoder.
      height:
        $ref: "#/definitions/height_metric"
        description: The height of the frame of the video source frame, in pixels.
      keyframe_interval:
        $ref: "#/definitions/keyframe_interval_metric"
        description: The number of video frames compressed in a group of pictures (GOP) between keyframes.
      stream_target_status_OUTPUTIDX_STREAMTARGETIDX:
        $ref: "#/definitions/stream_target_status_OUTPUTIDX_STREAMTARGETIDX_metric"
        description: The status of the identified stream target assigned to the identified output. OUTPUTIDX identifies the output and STREAMTARGETIDX identifies the stream target. A status is returned for every stream target used by the transcoder.
      unique_views:
        $ref: "#/definitions/unique_views_metric"
        description: The number of IP addresses that received at least one chunk of the stream on any player or device in a 24-hour period.
      video_codec:
        $ref: "#/definitions/video_codec_metric"
        description: The video codec of the video source.
      width:
        $ref: "#/definitions/width_metric"
        description: The width of the frame of the video source, in pixels.
    type: object
  stream_source:
    example:
      backup_ip_address: 54.183.109.82
      backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint
      created_at: 2017-11-13T20:00:43.296Z
      id: cJYndjJt
      ip_address: 54.183.109.81
      location: us_west_california
      location_method: region
      name: My region-based Stream Source
      password: 0da80af99e
      playback_url: rtmp://cp319499.live.edgefcs.net/live/148e575d@335658
      primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint
      provider: akamai
      stream_name: 148e575d@335658
      updated_at: 2017-11-15T19:26:08.296Z
      username: "383435"
    properties:
      backup_ip_address:
        description: If <em>location_method</em> is <strong>ip_address</strong>, specify the backup IP address of the source encoder.
        type: string
      backup_url:
        description: The backup RTMP playback URL of the transcoded stream.
        type: string
      created_at:
        description: The date and time that the stream source was created.
        format: date-time
        type: string
      id:
        description: The unique alphanumeric string that identifies the stream source.
        type: string
      ip_address:
        description: If <em>location_method</em> is <strong>ip_address</strong>, specify the primary IP address of the source encoder.
        type: string
      location:
        description: If <em>location_method</em> is <strong>region</strong>, specify a location as close as possible to the source encoder.
        enum:
          - asia_pacific_australia
          - asia_pacific_japan
          - asia_pacific_singapore
          - asia_pacific_taiwan
          - eu_belgium
          - eu_germany
          - eu_ireland
          - south_america_brazil
          - us_central_iowa
          - us_east_s_carolina
          - us_east_virginia
          - us_west_california
          - us_west_oregon
        type: string
      location_method:
        description: The method used to determine the location of the stream source, either by <strong>region</strong> or based on the source encoder's <strong>ip_address</strong>.
        enum:
          - region
          - ip_address
        type: string
      name:
        description: A descriptive name for the stream source. Maximum 255 characters.
        type: string
      password:
        description: The password that you can use to configure the source encoder to authenticate to the stream source.
        type: string
      playback_url:
        description: The full RTMP playback URL.
        type: string
      primary_url:
        description: The primary RTMP playback URL of the transcoded stream.
        type: string
      provider:
        description: The provider of the Wowza Streaming Cloud stream source.
        type: string
      stream_name:
        description: The name of the stream that you can use to configure the source encoder to connect to the stream source.
        type: string
      updated_at:
        description: The date and time that the stream source was updated.
        format: date-time
        type: string
      username:
        description: The username that you can use to configure the source encoder to authenticate to the stream source.
        type: string
    type: object
  stream_source_create_input:
    properties:
      stream_source:
        properties:
          backup_ip_address:
            description: If <em>location_method</em> is <strong>ip_address</strong>, specify the backup IP address of the source encoder.
            example: 12.13.14.16
            type: string
          ip_address:
            description: If <em>location_method</em> is <strong>ip_address</strong>, specify the primary IP address of the source encoder.
            example: 12.13.14.16
            type: string
          location:
            description: If <em>location_method</em> is <strong>region</strong>, specify a location as close as possible to the source encoder.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: us_west_california
            type: string
          location_method:
            description: The method used to determine the location of the stream source, either by <strong>region</strong> or based on the source encoder's <strong>ip_address</strong>.
            enum:
              - region
              - ip_address
            example: region
            type: string
          name:
            description: A descriptive name for the stream source. Maximum 255 characters.
            example: My Stream Source
            type: string
        required:
          - name
          - location_method
        title: stream_source
        type: object
    required:
      - stream_source
    type: object
  stream_source_update_input:
    properties:
      stream_source:
        properties:
          name:
            description: A descriptive name for the stream source. Maximum 255 characters.
            example: My Stream Source
            type: string
        required:
          - name
        title: stream_source
        type: object
    required:
      - stream_source
    type: object
  stream_sources:
    example:
      stream_sources:
        - backup_ip_address: 54.183.109.82
          backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint
          created_at: 2017-11-13T20:00:43.293Z
          id: cJYndjJt
          ip_address: 54.183.109.81
          location: us_west_california
          location_method: region
          name: My region-based Stream Source
          password: 0da80af99e
          playback_url: rtmp://cp319499.live.edgefcs.net/live/148e575d@335658
          primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint
          provider: akamai
          stream_name: 148e575d@335658
          updated_at: 2017-11-15T10:10:12.293Z
          username: "383435"
        - backup_ip_address: 70.36.141.78
          backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint
          created_at: 2017-11-12T20:00:43.293Z
          id: pvVWPLZC
          ip_address: 70.36.141.78
          location_method: ip_address
          name: My IP address based Stream Source
          password: 384edc9f58
          playback_url: rtmp://cp319499.live.edgefcs.net/live/37d5f10e@156549
          primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint
          provider: akamai
          stream_name: 37d5f10e@156549
          updated_at: 2017-11-15T17:02:32.293Z
          username: "319399"
    properties:
      stream_sources:
        items:
          $ref: "#/definitions/stream_source"
        type: array
    required:
      - stream_sources
    type: object
  stream_target:
    example:
      connection_code: 133fcc
      connection_code_expires_at: 2018-09-15T20:00:43.309Z
      created_at: 2017-11-13T20:00:43.309Z
      hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m
      hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8
      id: 2adffc17
      location: us_west_california
      name: My RTMP Stream Target
      password: 0c7cba98e7
      primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
      provider: akamai
      secure_ingest_query_param: ...
      stream_name: 76fa8b9c_1_[bitrate]@335304
      type: WowzaStreamTarget
      updated_at: 2017-11-14T20:03:45.309Z
      use_cors: false
      username: "169630"
    properties:
      backup_url:
        description: The backup ingest URL for a target whose <em>type</em> is <strong>WowzaStreamTarget</strong> or <strong>CustomStreamTarget</strong>.
        type: string
      chunk_size:
        description: <strong>The <em>chunk_size</em> parameter is deprecated. To set the chunk size of a stream target, use the POST /stream_targets/[stream_target_id]/properties endpoint.</strong> Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. The segment duration for HLS encoding. The default is <strong>10</strong>.
        enum:
          - 2
          - 4
          - 6
          - 8
          - 10
        type: string
      connection_code:
        description: A six-character, alphanumeric string that allows Wowza Streaming Engine to send a transcoded stream to a <strong>WowzaStreamTarget</strong> or for the Wowza GoCoder app to send an encoded stream to a <strong>UltraLowLatencyStreamTarget</strong>. The code can be used once and expires 24 hours after it's created.
        type: string
      connection_code_expires_at:
        description: The date and time that the <em>connection_code</em> expires.
        format: date-time
        type: string
      created_at:
        description: The date and time that the stream target was created.
        format: date-time
        type: string
      enable_hls:
        description: Returned only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. Indicates whether Apple HLS playback is enabled for the stream target.
        type: boolean
      enabled:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong> (the default), the source stream is ready to be ingested. If **false**, the source stream won't be ingested by the target's origin server.
        type: boolean
      hds_playback_url:
        description: The web address that the target uses to play Adobe HDS streams.
        type: string
      hls_playback_url:
        description: Only for targets whose <em>provider</em> is <strong>akamai_cupertino</strong>. The web address that the target uses to play Apple HLS streams.
        type: string
      id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      ingest_ip_whitelist:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **push**. A list of IP addresses that can be used to connect to the target's origin server.
        items:
          type: string
        type: array
      location:
        description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. Choose a location as close as possible to your video source.
        enum:
          - asia_pacific_australia
          - asia_pacific_japan
          - asia_pacific_singapore
          - asia_pacific_taiwan
          - eu_belgium
          - eu_germany
          - eu_ireland
          - south_america_brazil
          - us_central_iowa
          - us_east_s_carolina
          - us_east_virginia
          - us_west_california
          - us_west_oregon
        type: string
      name:
        description: A descriptive name for the stream target. Maximum 255 characters.
        type: string
      password:
        description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. A <em>username</em> must also be present. The password associated with the target username for RTMP authentication.
        type: string
      playback_urls:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. A hash of **hls**, **wowz**, and **ws** URLs that can be used by the player.
        properties:
          hls:
            description: The web address that the ultra low latency target can use to play the Apple HLS stream.
            example: https://wowzasubdomain-i.akamaihd.net/hls/live/268548/0P1q1S0lVTE5MQmZVRWM1UXB0Z3V5e3b/playlist.m3u8
            type: string
          wowz:
            description: The **wowz** and **wowzs** web addresses that the ultra low latency target can use to play WOWZ streams.
            example: wowz://edge-subdomain.cdn.wowza.com/live/_definst_/0P1q1bGo4YmR1bGNKWW9nWVVodHJ6010
            type: string
          ws:
            description: The **ws** and **wss** web addresses that the ultra low latency target can use to play the WebSocket stream.
            example: ws://edge-subdomain.cdn.wowza.com/live/_definst_/0P1q1bGo4YmR1bGNKWW9nWVVodHJ6010
            type: string
        title: Hash of playback URLs
        type: object
      primary_url:
        description: The primary ingest URL of the target.
        type: string
      provider:
        description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
        type: string
      region_override:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The location of the stream target's origin server. If unspecified, Wowza Streaming Cloud determines the optimal region for the origin server.
        enum:
          - azure-westus
          - azure-eastus2
          - azure-northeurope
          - "null"
        type: string
      rtmp_playback_url:
        description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play RTMP streams.
        type: string
      secure_ingest_query_param:
        description: Only for targets whose <em>use_secure_ingest</em> is <strong>true</strong>. The query parameter needed for secure stream delivery between the transcoder and the target.
        type: string
      source_delivery_method:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. The type of connection between the stream source and the stream target. **push** instructs the source to push the stream to the stream target. **pull** instructs the stream target to pull the stream from the source.
        enum:
          - push
          - pull
        type: string
      source_url:
        description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The URL of a source IP camera or encoder connecting to the stream target.
        type: string
      stream_name:
        description: The name of the stream being ingested into the target. Returned for all targets except those whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and whose <em>source_delivery_method</em> is **pull**.
        type: string
      type:
        description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
        enum:
          - WowzaStreamTarget
          - UltraLowLatencyStreamTarget
          - CustomStreamTarget
        type: string
      updated_at:
        description: The date and time that the stream target was updated.
        format: date-time
        type: string
      use_cors:
        description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. CORS, or cross-origin resource sharing, allows streams to be sent to providers such as Peer5, Viblast, and Streamroot, which implement a peer-to-peer grid delivery system.
        type: boolean
      use_https:
        description: <strong>The <em>use_https</em> parameter is deprecated. Use the POST /stream_targets/[<em>stream_target_id</em>]/properties endpoint and the <em>relative_playlists</em> parameter instead.</strong>
        type: boolean
      use_secure_ingest:
        description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. If <strong>true</strong>, generates a <em>secure_ingest_query_param</em> to securely deliver the stream from the transcoder to the provider.
        type: boolean
      username:
        description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
        type: string
    type: object
  stream_target_create_input:
    allOf:
      - $ref: "#/definitions/stream_target_input"
    example:
      stream_target:
        location: us_west_california
        name: My RTMP Stream Target
        provider: akamai
        type: WowzaStreamTarget
  stream_target_input:
    properties:
      stream_target:
        properties:
          backup_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The backup RTMP ingest URL of the target, without the preceding protocol and without the trailing slash (/).
            example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          chunk_size:
            description: <strong>The <em>chunk_size</em> parameter is deprecated. To set the chunk size of a stream target, use the POST /stream_targets/[stream_target_id]/properties endpoint.</strong> Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. The segment duration for HLS encoding. The default is <strong>10</strong>.
            enum:
              - 2
              - 4
              - 6
              - 8
              - 10
            example: 10
            type: string
          enable_hls:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong>, creates an Apple HLS URL for playback on iOS devices (<em>hls_playback_url</em>). The default is <strong>false</strong>.
            example: true
            type: boolean
          enabled:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong> (the default), the source stream is ready to be ingested. If **false**, the source stream won't be ingested by the target's origin server.
            example: true
            type: boolean
          hds_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. The web address that the target uses to play Adobe HDS streams.
            example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857
            type: string
          hls_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play Apple HLS streams.
            example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m
            type: string
          ingest_ip_whitelist:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **push**. A list of IP addresses that can be used to connect to the target's origin server.
            example:
              - 10.11.12.*
              - 13.12.11.10
            items:
              type: string
            type: array
          location:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. Choose a location as close as possible to your video source.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: eu_germany
            type: string
          name:
            description: A descriptive name for the stream target. Maximum 255 characters.
            example: My Custom Stream Target
            type: string
          password:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. A <em>username</em> must also be present. The password associated with the target username for RTMP authentication.
            example: cb1e77e98d
            type: string
          primary_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The primary RTMP ingest URL, without the preceding protocol and without the trailing slash (/).
            example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          provider:
            description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
            example: rtmp
            type: string
          region_override:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The location of the stream target's origin server. If unspecified, Wowza Streaming Cloud determines the optimal region for the origin server.
            enum:
              - azure-westus
              - azure-eastus2
              - azure-northeurope
            example: azure-westus
            type: string
          rtmp_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play RTMP streams.
            example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321
            type: string
          source_delivery_method:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. The type of connection between the stream source and the stream target. **push** instructs the source to push the stream to the stream target. **pull** instructs the stream target to pull the stream from the source.
            enum:
              - push
              - pull
            example: pull
            type: string
          source_url:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The URL of a source IP camera or encoder connecting to the stream target.
            example: rtsp://example.com/video
            type: string
          stream_name:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The name of the stream as defined in the target's ingestion settings.
            example: c8467d50@337857
            type: string
          type:
            description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
            enum:
              - WowzaStreamTarget
              - UltraLowLatencyStreamTarget
              - CustomStreamTarget
            example: CustomStreamTarget
            type: string
          use_cors:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. CORS, or cross-origin resource sharing, allows streams to be sent to providers such as Peer5, Viblast, and Streamroot, which implement a peer-to-peer grid delivery system.
            example: true
            type: boolean
          use_https:
            description: <strong>The <em>use_https</em> parameter is deprecated. Use the POST /stream_targets/[<em>stream_target_id</em>]/properties endpoint and the <em>relative_playlists</em> parameter instead.</strong>
            example: true
            type: boolean
          use_secure_ingest:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. If <strong>true</strong>, generates a <em>secure_ingest_query_param</em> to securely deliver the stream from the transcoder to the provider.
            example: true
            type: boolean
          username:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
            example: "319699"
            type: string
        required:
          - name
          - location
          - primary_url
          - source_delivery_method
          - source_url
          - stream_name
        title: stream_target
        type: object
    required:
      - stream_target
    type: object
  stream_target_metrics:
    properties:
      average_bytes_in:
        description: The average number of bytes transfered to the origin server by the source.
        example: 456789.123
        format: float
        type: number
      average_total_connections:
        description: The total number of current connections.
        example: 10
        format: float
        type: number
      created_at:
        description: The date and time, in UTC, that the metrics were recorded.
        format: date-time
        type: string
      dropped_connections:
        description: The total number of dropped connections since the last interval.
        example: 0
        type: integer
      maximum_total_connections:
        description: The maximum number of connections during the interval.
        example: 20
        type: integer
      minimum_total_connections:
        description: The minimum number of connections during the interval.
        example: 0
        type: integer
      new_connections:
        description: The total number of new connections since the last interval.
        example: 0
        type: integer
    type: object
  stream_target_properties:
    example:
      properties:
        - key: chunkSize
          section: hls
          value: "6"
        - key: relativePlaylists
          section: playlist
          value: "true"
    properties:
      properties:
        items:
          $ref: "#/definitions/stream_target_property"
        type: array
    required:
      - properties
    type: object
  stream_target_property:
    example:
      key: chunkSize
      section: hls
      value: "6"
    properties:
      key:
        description: <strong>chunkSize</strong> defines the duration of the time-based audio and video chunks that Wowza Streaming Cloud delivers to the target. <strong>playSSL</strong> determines whether Wowza Streaming Cloud sends the stream from the target to the player by using SSL (HTTPS). <strong>relativePlaylists</strong> allows the viewer to watch the stream over HTTP and HTTPS, whichever protocol their browser calls. <strong>sendSSL</strong> determines whether Wowza Streaming Cloud sends the stream from the transcoder to the target by using SSL (HTTPS).
        enum:
          - chunkSize
          - playSSL
          - relativePlaylists
          - sendSSL
        type: string
      section:
        description: The section of the stream target configuration table that contains the property. For <strong>chunkSize</strong> and <strong>sendSSL</strong>, use <strong>hls</strong>. For <strong>playSSL</strong> and <strong>relativePlaylists</strong>, use <strong>playlist</strong>.
        enum:
          - hls
          - playlist
        type: string
      stream_target_id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      value:
        description: For <strong>chunkSize</strong> use <strong>2</strong>, <strong>4</strong>, <strong>6</strong>, <strong>8</strong>, or <strong>10</strong>. For <strong>playSSL</strong>, <strong>relativePlaylists</strong>, and <strong>sendSSL</strong> use <strong>true</strong> or <strong>false</strong>.
        enum:
          - "2"
          - "4"
          - "6"
          - "8"
          - "10"
          - "true"
          - "false"
        type: string
    type: object
  stream_target_property_create_input:
    properties:
      property:
        properties:
          key:
            description: <strong>chunkSize</strong> defines the duration of the time-based audio and video chunks that Wowza Streaming Cloud delivers to the target. <strong>playSSL</strong> determines whether Wowza Streaming Cloud sends the stream from the target to the player by using SSL (HTTPS). <strong>relativePlaylists</strong> allows the viewer to watch the stream over HTTP and HTTPS, whichever protocol their browser calls. <strong>sendSSL</strong> determines whether Wowza Streaming Cloud sends the stream from the transcoder to the target by using SSL (HTTPS).
            enum:
              - chunkSize
              - playSSL
              - relativePlaylists
              - sendSSL
            example: chunkSize
            type: string
          section:
            description: The section of the stream target configuration table that contains the property. For <strong>chunkSize</strong> and <strong>sendSSL</strong>, use <strong>hls</strong>. For <strong>playSSL</strong> and <strong>relativePlaylists</strong>, use <strong>playlist</strong>.
            enum:
              - hls
              - playlist
            example: hls
            type: string
          value:
            description: For <strong>chunkSize</strong> use <strong>2</strong>, <strong>4</strong>, <strong>6</strong>, <strong>8</strong>, or <strong>10</strong>. For <strong>playSSL</strong>, <strong>relativePlaylists</strong>, and <strong>sendSSL</strong> use <strong>true</strong> or <strong>false</strong>.
            enum:
              - "2"
              - "4"
              - "6"
              - "8"
              - "10"
              - "true"
              - "false"
            example: "6"
            type: string
        required:
          - section
          - key
          - value
        title: property
        type: object
    required:
      - property
    type: object
  stream_target_status_OUTPUTIDX_STREAMTARGETIDX_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: Active
        type: string
    type: object
  stream_target_update_input:
    properties:
      stream_target:
        properties:
          backup_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The backup RTMP ingest URL of the target, without the preceding protocol and without the trailing slash (/).
            example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          chunk_size:
            description: <strong>The <em>chunk_size</em> parameter is deprecated. To set the chunk size of a stream target, use the POST /stream_targets/[stream_target_id]/properties endpoint.</strong> Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. The segment duration for HLS encoding. The default is <strong>10</strong>.
            enum:
              - 2
              - 4
              - 6
              - 8
              - 10
            example: 10
            type: string
          enabled:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong> (the default), the source stream is ready to be ingested. If **false**, the source stream won't be ingested by the target's origin server.
            example: true
            type: boolean
          hds_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. The web address that the target uses to play Adobe HDS streams.
            example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857
            type: string
          hls_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play Apple HLS streams.
            example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m
            type: string
          ingest_ip_whitelist:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **push**. A list of IP addresses that can be used to connect to the target's origin server.
            example:
              - 10.11.12.*
              - 13.12.11.10
            items:
              type: string
            type: array
          name:
            description: A descriptive name for the stream target. Maximum 255 characters.
            example: My Custom Stream Target
            type: string
          password:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. A <em>username</em> must also be present. The password associated with the target username for RTMP authentication.
            example: cb1e77e98d
            type: string
          primary_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The primary RTMP ingest URL, without the preceding protocol and without the trailing slash (/).
            example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint
            type: string
          provider:
            description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
            example: rtmp
            type: string
          rtmp_playback_url:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The web address that the target uses to play RTMP streams.
            example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321
            type: string
          source_url:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The URL of a source IP camera or encoder connecting to the stream target.
            example: ws://example.com/stream/stream1
            type: string
          stream_name:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. The name of the stream as defined in the target's ingestion settings.
            example: c8467d50@337857
            type: string
          username:
            description: Only for targets whose <em>type</em> is <strong>CustomStreamTarget</strong> and <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
            example: "319699"
            type: string
        title: stream_target
        type: object
    required:
      - stream_target
    type: object
  stream_targets:
    example:
      stream_targets:
        - connection_code: 133fcc
          connection_code_expires_at: 2018-09-15T20:00:43.303Z
          created_at: 2017-11-13T20:00:43.303Z
          hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m
          hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8
          id: QvvJYJjk
          location: us_west_california
          name: My Provisioned RTMP Stream Target
          primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint
          provider: akamai
          stream_name: 76fa8b9c_1_[bitrate]@335304
          type: WowzaStreamTarget
          updated_at: 2017-11-14T22:22:44.303Z
          username: "169630"
        - backup_url: http://post-b.ingest1-i.akamaihd.net/228559-b/4a1799
          connection_code: 16da69
          connection_code_expires_at: 2018-09-15T20:00:43.303Z
          created_at: 2017-11-12T20:00:43.303Z
          hls_playback_url: http://ingest1-i.akamaihd.net/hls/live/228559/5f6712/playlist.m3u8
          id: J75Mlh3V
          name: My Provisioned HLS Push Stream Target
          primary_url: http://post.ingest1-i.akamaihd.net/228559/5f6712
          provider: akamai_cupertino
          stream_name: a535aa63
          type: WowzaStreamTarget
          updated_at: 2017-11-15T03:25:07.303Z
        - backup_url: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint
          created_at: 2017-11-12T20:00:43.303Z
          hds_playback_url: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857
          hls_playback_url: http://[subdomain].akamaihd.net/z/723a8b9c_1@337857/master.m3u8
          id: J75Mlh3V
          name: My Custom Stream Target
          primary_url: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint
          provider: rtmp
          stream_name: c8467d50@337857
          type: CustomStreamTarget
          updated_at: 2017-11-15T07:41:21.303Z
          username: "319699"
        - connection_code: 25ddf4
          connection_code_expires_at: 2018-09-15T20:00:43.303Z
          created_at: 2017-11-12T20:00:43.303Z
          id: K3MRRlfvx
          name: My Wowza Ultra Low Latency Stream Target
          primary_url: rtmp://origin-subdomain.cdn.wowza.com:1935/live/0I0q1bjZhRzZtfSdv4TpCnlmwQT16236
          provider: wowza
          stream_name: 0I0q1bjZhRzZtfSdv4TpCnlmwQT16236
          type: UltraLowLatencyStreamTarget
          updated_at: 2017-11-14T17:24:14.303Z
    properties:
      stream_targets:
        items:
          $ref: "#/definitions/index_stream_target"
        type: array
    required:
      - stream_targets
    type: object
  token_auth:
    example:
      created_at: 2017-11-13T20:00:43.322Z
      enabled: true
      stream_target_id: PblTJm1t
      trusted_shared_secret: 499602D2
      updated_at: 2017-11-14T16:59:47.322Z
    properties:
      created_at:
        description: The date and time that the token authorization was created.
        format: date-time
        type: string
      enabled:
        description: Specify <strong>true</strong> to enable token authorization or <strong>false</strong> to disable.
        type: boolean
      stream_target_id:
        description: The unique alphanumeric string that identifies the stream target.
        type: string
      trusted_shared_secret:
        description: The trusted shared secret of the token authorization. Must contain only hexadecimal characters and be an even number of total characters not exceeding 32.
        type: string
      updated_at:
        description: The date and time that the token authorization was updated.
        format: date-time
        type: string
    type: object
  token_auth_create_input:
    properties:
      token_auth:
        properties:
          enabled:
            description: Specify <strong>true</strong> to enable token authorization or <strong>false</strong> to disable.
            example: true
            type: boolean
          trusted_shared_secret:
            description: The trusted shared secret of the token authorization. Must contain only hexadecimal characters and be an even number of total characters not exceeding 32.
            example: 499602D2
            type: string
        required:
          - enabled
          - trusted_shared_secret
        title: token_auth
        type: object
    required:
      - token_auth
    type: object
  token_auth_update_input:
    properties:
      token_auth:
        properties:
          enabled:
            description: Specify <strong>true</strong> to enable token authorization or <strong>false</strong> to disable.
            example: true
            type: boolean
          trusted_shared_secret:
            description: The trusted shared secret of the token authorization. Must contain only hexadecimal characters and be an even number of total characters not exceeding 32.
            example: 499602D2
            type: string
        title: token_auth
        type: object
    required:
      - token_auth
    type: object
  transcoder:
    example:
      application_name: app-3757
      billing_mode: pay_as_you_go
      broadcast_location: us_central_iowa
      buffer_size: 4000
      closed_caption_type: cea
      created_at: 2017-11-12T20:00:43.329Z
      delivery_method: push
      delivery_protocols:
        - rtmp
        - rtsp
        - wowz
      description: My Transcoder Description
      direct_playback_urls:
        - rtmp:
            - name: source
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6
        - rtsp:
            - name: source
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
        - wowz:
            - name: source
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
            - name: 1920x1080
              output_id: dcxq5q6c
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
            - name: 1280x720
              output_id: 0g116zkf
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
            - name: 854x480
              output_id: 4qqkwndt
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
            - name: 640x360
              output_id: 0pv8djpg
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
            - name: 512x288
              output_id: b09xrxjf
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
            - name: 320x180
              output_id: bvkh2nsz
              url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
      disable_authentication: false
      domain_name: f92334.entrypoint.cloud.wowza.com
      id: 2lsWj3F9
      idle_timeout: 1200
      low_latency: false
      name: My PAYG Transcoder
      outputs:
        - {}
      password: 82e0e971
      protocol: rtmp
      recording: true
      source_port: 1935
      stream_extension: .sdp
      stream_name: 10eb0ed8
      stream_smoother: false
      suppress_stream_target_start: false
      transcoder_type: transcoded
      updated_at: 2017-11-14T18:16:07.329Z
      username: client2
      video_fallback: false
      watermark: true
      watermark_height: 80
      watermark_image_url: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg
      watermark_opacity: 75
      watermark_position: top-right
      watermark_width: 100
    properties:
      application_name:
        description: The application name from the pull stream source URL.
        type: string
      billing_mode:
        description: The billing mode for the transcoder. The default is <strong>pay_as_you_go</strong>.
        enum:
          - pay_as_you_go
          - twentyfour_seven
        type: string
      broadcast_location:
        description: The location where Wowza Streaming Cloud transcodes your stream. Choose a location as close as possible to your video source.
        enum:
          - asia_pacific_australia
          - asia_pacific_japan
          - asia_pacific_singapore
          - asia_pacific_taiwan
          - eu_belgium
          - eu_germany
          - eu_ireland
          - south_america_brazil
          - us_central_iowa
          - us_east_s_carolina
          - us_east_virginia
          - us_west_california
          - us_west_oregon
        type: string
      buffer_size:
        description: The size, in milliseconds, of the incoming buffer. <strong>0</strong> means no buffer. The default is <strong>4000</strong> (4 seconds).
        enum:
          - 0
          - 1000
          - 2000
          - 3000
          - 4000
          - 5000
          - 6000
          - 7000
          - 8000
        format: int32
        type: integer
      closed_caption_type:
        description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
        enum:
          - none
          - cea
          - on_text
          - both
        type: string
      created_at:
        description: The date and time that the transcoder was created.
        format: date-time
        type: string
      delivery_method:
        description: The type of connection between the source encoder and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
        enum:
          - pull
          - cdn
          - push
        type: string
      delivery_protocols:
        description: An array of playback protocols enabled for this transcoder. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are returned.
        items:
          type: string
        type: array
      description:
        description: An optional description of the transcoder.
        type: string
      direct_playback_urls:
        description: An array of direct playback URLs the transcoder's delivery protocols. Each protocol has a URL for the source and a URL for each output rendition.
        items:
          properties:
            name:
              description: "The name of the playback URL: <strong>source</strong>, <strong>passthrough</strong>, or the output rendition's resolution."
              example: hls
              type: string
            output_id:
              description: Only for output rendition-based playback URLs, not source playback URLs. The unique alphanumeric string that identifies the output rendition.
              example: dcxq5q6c
              type: string
            url:
              description: The playback URL for the source or output rendition.
              example: https://abcdef.dev.entrypoint.cloud.wowza.com/app-16ea/ngrp:43a23e5a_all/playlist.m3u8
              type: string
          title: playback_url
          type: object
        type: array
      disable_authentication:
        description: Authentication is required by default for RTMP and RTSP push connections from a video source to the transcoder. Specify <strong>true</strong> to disable authentication with the video source.
        type: boolean
      domain_name:
        description: The domain name from the pull stream source URL.
        type: string
      id:
        description: The unique alphanumeric string that identifies the transcoder.
        type: string
      idle_timeout:
        description: The amount of idle time, in seconds, before the transcoder automatically shuts down. Valid values are the integers <strong>0</strong> (never shuts down) to <strong>172800</strong> (48 hours). The default is <strong>1200</strong> (20 minutes).
        format: int32
        type: integer
      low_latency:
        description: If <strong>true</strong>, turns off the sort packet buffer and speeds the time it takes to decode and deliver video data to the player. The default is <strong>false</strong>.
        type: boolean
      name:
        description: A descriptive name for the transcoder. Maximum 200 characters.
        type: string
      outputs:
        description: Output renditions associated with the transcoder.
        items:
          $ref: "#/definitions/output"
        type: array
      password:
        description: A password for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
        type: string
      play_maximum_connections:
        description: The number of users who are allowed to connect directly to the transcoder.
        enum:
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31
          - 32
          - 33
          - 34
          - 35
          - 36
          - 37
          - 38
          - 39
          - 40
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 47
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          - 78
          - 79
          - 80
          - 81
          - 82
          - 83
          - 84
          - 85
          - 86
          - 87
          - 88
          - 89
          - 90
          - 91
          - 92
          - 93
          - 94
          - 95
          - 96
          - 97
          - 98
          - 99
          - 100
        format: int32
        type: integer
      protocol:
        description: The transport protocol for the source video. The default is <strong>rtmp</strong>.
        enum:
          - rtmp
          - rtsp
        type: string
      recording:
        description: If <strong>true</strong>, creates a recording of the transcoded output. The default is <strong>false</strong>.
        type: boolean
      source_port:
        description: The port used for RTMP pull connections to Wowza Streaming Cloud.
        format: int32
        type: integer
      source_url:
        description: For the <em>delivery_method</em> <strong>pull</strong>. Enter the source's web address without the preceding protocol or the trailing slash (/).
        type: string
      stream_extension:
        description: For the <em>delivery_method</em> <strong>push</strong>. Some encoders append an extension to their stream names. If the device you're using does this, enter the extension.
        type: string
      stream_name:
        description: The stream name from the pull stream source URL.
        type: string
      stream_smoother:
        description: A dynamic buffer that helps stabilize streams in rough network conditions, but adds latency. Specify <strong>true</strong> to enable stream smoothing. The default is <strong>false</strong>.
        type: boolean
      stream_source_id:
        description: For the <em>delivery_method</em> <strong>cdn</strong>. The alphanumeric string that identifies the stream source that you want to use to deliver the stream to the transcoder.
        type: string
      suppress_stream_target_start:
        description: If <strong>true</strong>, disables stream targets when the transcoder starts. If <strong>false</strong> (the default), the targets start when the transcoder starts.
        type: boolean
      transcoder_type:
        description: The type of transcoder, either <strong>transcoded</strong> for streams that are transcoded into adaptive bitrate renditions or <strong>passthrough</strong> for streams that aren't processed by the transcoder. The default is <strong>transcoded</strong>.
        enum:
          - transcoded
          - passthrough
        type: string
      updated_at:
        description: The date and time that the transcoder was updated.
        format: date-time
        type: string
      username:
        description: A username for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
        type: string
      video_fallback:
        description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with stream targets whose <em>provider</em> is <strong>akamai_cupertino</strong>.
        type: boolean
      watermark:
        description: Embeds an image into the transcoded stream for copyright protection. Specify <strong>true</strong> to embed a watermark image.
        type: boolean
      watermark_height:
        description: The height, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image height.
        format: int32
        type: integer
      watermark_image_url:
        description: The path to a GIF, JPEG, or PNG image that is embedded in all bitrate renditions of the stream. Watermark image files must be 2.5 MB or smaller.
        type: string
      watermark_opacity:
        description: The opacity, or percentage of transparency, of the watermark. <strong>0</strong> is fully transparent; <strong>100</strong> is fully opaque.
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31
          - 32
          - 33
          - 34
          - 35
          - 36
          - 37
          - 38
          - 39
          - 40
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 47
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
          - 78
          - 79
          - 80
          - 81
          - 82
          - 83
          - 84
          - 85
          - 86
          - 87
          - 88
          - 89
          - 90
          - 91
          - 92
          - 93
          - 94
          - 95
          - 96
          - 97
          - 98
          - 99
          - 100
        format: int32
        type: integer
      watermark_position:
        description: The corner of the video frame in which you want the watermark to appear. The default is <strong>top-left</strong>.
        enum:
          - top-left
          - top-right
          - bottom-left
          - bottom-right
        type: string
      watermark_width:
        description: The width, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image width.
        format: int32
        type: integer
    type: object
  transcoder_create_input:
    properties:
      transcoder:
        properties:
          billing_mode:
            description: The billing mode for the transcoder. The default is <strong>pay_as_you_go</strong>.
            enum:
              - pay_as_you_go
              - twentyfour_seven
            example: pay_as_you_go
            type: string
          broadcast_location:
            description: The location where Wowza Streaming Cloud transcodes your stream. Choose a location as close as possible to your video source.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: us_central_iowa
            type: string
          buffer_size:
            description: The size, in milliseconds, of the incoming buffer. <strong>0</strong> means no buffer. The default is <strong>4000</strong> (4 seconds).
            enum:
              - 0
              - 1000
              - 2000
              - 3000
              - 4000
              - 5000
              - 6000
              - 7000
              - 8000
            example: 4000
            format: int32
            type: integer
          closed_caption_type:
            description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
            enum:
              - none
              - cea
              - on_text
              - both
            example: cea
            type: string
          delivery_method:
            description: The type of connection between the source encoder and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
            enum:
              - pull
              - cdn
              - push
            example: pull
            type: string
          delivery_protocols:
            description: An array of playback protocols enabled for this transcoder. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are returned.
            example:
              - rtmp
              - rtsp
              - wowz
            items:
              type: string
            type: array
          description:
            description: An optional description of the transcoder.
            example: My Transcoder Description
            type: string
          disable_authentication:
            description: Authentication is required by default for RTMP and RTSP push connections from a video source to the transcoder. Specify <strong>true</strong> to disable authentication with the video source.
            example: false
            type: boolean
          idle_timeout:
            description: The amount of idle time, in seconds, before the transcoder automatically shuts down. Valid values are the integers <strong>0</strong> (never shuts down) to <strong>172800</strong> (48 hours). The default is <strong>1200</strong> (20 minutes).
            example: 1200
            format: int32
            type: integer
          low_latency:
            description: If <strong>true</strong>, turns off the sort packet buffer and speeds the time it takes to decode and deliver video data to the player. The default is <strong>false</strong>.
            example: false
            type: boolean
          name:
            description: A descriptive name for the transcoder. Maximum 200 characters.
            example: My PAYG Transcoder
            type: string
          password:
            description: A password for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: 82e0e971
            type: string
          play_maximum_connections:
            description: The number of users who are allowed to connect directly to the transcoder.
            enum:
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
              - 23
              - 24
              - 25
              - 26
              - 27
              - 28
              - 29
              - 30
              - 31
              - 32
              - 33
              - 34
              - 35
              - 36
              - 37
              - 38
              - 39
              - 40
              - 41
              - 42
              - 43
              - 44
              - 45
              - 46
              - 47
              - 48
              - 49
              - 50
              - 51
              - 52
              - 53
              - 54
              - 55
              - 56
              - 57
              - 58
              - 59
              - 60
              - 61
              - 62
              - 63
              - 64
              - 65
              - 66
              - 67
              - 68
              - 69
              - 70
              - 71
              - 72
              - 73
              - 74
              - 75
              - 76
              - 77
              - 78
              - 79
              - 80
              - 81
              - 82
              - 83
              - 84
              - 85
              - 86
              - 87
              - 88
              - 89
              - 90
              - 91
              - 92
              - 93
              - 94
              - 95
              - 96
              - 97
              - 98
              - 99
              - 100
            example: 20
            format: int32
            type: integer
          protocol:
            description: The transport protocol for the source video. The default is <strong>rtmp</strong>.
            enum:
              - rtmp
              - rtsp
            example: rtmp
            type: string
          recording:
            description: If <strong>true</strong>, creates a recording of the transcoded output. The default is <strong>false</strong>.
            example: true
            type: boolean
          source_url:
            description: For the <em>delivery_method</em> <strong>pull</strong>. Enter the source's web address without the preceding protocol or the trailing slash (/).
            example: cp12345.live.edgefcs.net/live/redcarpet@123456
            type: string
          stream_extension:
            description: For the <em>delivery_method</em> <strong>push</strong>. Some encoders append an extension to their stream names. If the device you're using does this, enter the extension.
            example: .sdp
            type: string
          stream_smoother:
            description: A dynamic buffer that helps stabilize streams in rough network conditions, but adds latency. Specify <strong>true</strong> to enable stream smoothing. The default is <strong>false</strong>.
            example: false
            type: boolean
          stream_source_id:
            description: For the <em>delivery_method</em> <strong>cdn</strong>. The alphanumeric string that identifies the stream source that you want to use to deliver the stream to the transcoder.
            example: rxHQQpWw
            type: string
          suppress_stream_target_start:
            description: If <strong>true</strong>, disables stream targets when the transcoder starts. If <strong>false</strong> (the default), the targets start when the transcoder starts.
            example: false
            type: boolean
          transcoder_type:
            description: The type of transcoder, either <strong>transcoded</strong> for streams that are transcoded into adaptive bitrate renditions or <strong>passthrough</strong> for streams that aren't processed by the transcoder. The default is <strong>transcoded</strong>.
            enum:
              - transcoded
              - passthrough
            example: transcoded
            type: string
          username:
            description: A username for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: client2
            type: string
          video_fallback:
            description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with stream targets whose <em>provider</em> is <strong>akamai_cupertino</strong>.
            example: false
            type: boolean
          watermark:
            description: Embeds an image into the transcoded stream for copyright protection. Specify <strong>true</strong> to embed a watermark image.
            example: true
            type: boolean
          watermark_height:
            description: The height, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image height.
            example: 80
            format: int32
            type: integer
          watermark_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG image that is embedded in all bitrate renditions of the stream. Watermark image files must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg
            type: string
          watermark_opacity:
            description: The opacity, or percentage of transparency, of the watermark. <strong>0</strong> is fully transparent; <strong>100</strong> is fully opaque.
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
              - 23
              - 24
              - 25
              - 26
              - 27
              - 28
              - 29
              - 30
              - 31
              - 32
              - 33
              - 34
              - 35
              - 36
              - 37
              - 38
              - 39
              - 40
              - 41
              - 42
              - 43
              - 44
              - 45
              - 46
              - 47
              - 48
              - 49
              - 50
              - 51
              - 52
              - 53
              - 54
              - 55
              - 56
              - 57
              - 58
              - 59
              - 60
              - 61
              - 62
              - 63
              - 64
              - 65
              - 66
              - 67
              - 68
              - 69
              - 70
              - 71
              - 72
              - 73
              - 74
              - 75
              - 76
              - 77
              - 78
              - 79
              - 80
              - 81
              - 82
              - 83
              - 84
              - 85
              - 86
              - 87
              - 88
              - 89
              - 90
              - 91
              - 92
              - 93
              - 94
              - 95
              - 96
              - 97
              - 98
              - 99
              - 100
            example: 75
            format: int32
            type: integer
          watermark_position:
            description: The corner of the video frame in which you want the watermark to appear. The default is <strong>top-left</strong>.
            enum:
              - top-left
              - top-right
              - bottom-left
              - bottom-right
            example: bottom-left
            type: string
          watermark_width:
            description: The width, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image width.
            example: 100
            format: int32
            type: integer
        required:
          - name
          - transcoder_type
          - billing_mode
          - broadcast_location
          - protocol
          - delivery_method
        title: transcoder
        type: object
    required:
      - transcoder
    type: object
  transcoder_properties:
    example:
      properties:
        - key: cupertinoProgramDateTimeOffset
          section: cupertino
          value: "50"
        - key: rtpIgnoreProfileLevelId
          section: rtsp
          value: "true"
    properties:
      properties:
        items:
          $ref: "#/definitions/transcoder_property"
        type: array
    required:
      - properties
    type: object
  transcoder_property:
    example:
      key: cupertinoProgramDateTimeOffset
      section: cupertino
      value: "50"
    properties:
      key:
        description: The key of the property. For <strong>rtsp</strong>, valid values are <strong>debugRtspSession</strong>, <strong>maxRtcpWaitTime</strong>, <strong>avSyncMethod</strong>, <strong>rtspValidationFrequency</strong>, <strong>rtpTransportMode</strong>, <strong>rtspFilterUnknownTracks</strong>, <strong>rtpIgnoreSpropParameterSets</strong>, and <strong>rtpIgnoreProfileLevelId</strong>. For <strong>cupertino</strong>, valid values are <strong>cupertinoEnableProgramDateTime</strong>, <strong>cupertinoEnableId3ProgramDateTime</strong>, and <strong>cupertinoProgramDateTimeOffset</strong>.
        type: string
      section:
        description: The section of the transcoder configuration table that contains the property. Valid values are <strong>rtsp</strong> and <strong>cupertino</strong>.
        type: string
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder.
        type: string
      value:
        description: The value of the property. For <strong>debugRtspSession</strong>, <strong>avSyncMethod</strong>, <strong>rtspFilterUnknownTracks</strong>, <strong>rtpIgnoreSpropParameterSets</strong>, <strong>rtpIgnoreProfileLevelId</strong>, <strong>cupertinoEnableProgramDateTime</strong>, and <strong>cupertinoEnableId3ProgramDateTime</strong>, valid values are <strong>true</strong> or <strong>false</strong>. <strong>maxRtcpWaitTime</strong> must be <strong>0</strong> (ms, off) or greater. The default is <strong>2000</strong>. Valid values for <strong>rtpTransportMode</strong> are <strong>udp</strong> or <strong>interleave</strong> (the default). <strong>rtspValidationFrequency</strong> must be <strong>0</strong> (ms, off) or greater. The default is <strong>15000</strong>. <strong>cupertinoProgramDateTimeOffset</strong> must be an integer, positive or negative. The default is <strong>0</strong> (ms).
        type: string
    type: object
  transcoder_property_create_input:
    properties:
      property:
        properties:
          key:
            description: The key of the property. For <strong>rtsp</strong>, valid values are <strong>debugRtspSession</strong>, <strong>maxRtcpWaitTime</strong>, <strong>avSyncMethod</strong>, <strong>rtspValidationFrequency</strong>, <strong>rtpTransportMode</strong>, <strong>rtspFilterUnknownTracks</strong>, <strong>rtpIgnoreSpropParameterSets</strong>, and <strong>rtpIgnoreProfileLevelId</strong>. For <strong>cupertino</strong>, valid values are <strong>cupertinoEnableProgramDateTime</strong>, <strong>cupertinoEnableId3ProgramDateTime</strong>, and <strong>cupertinoProgramDateTimeOffset</strong>.
            example: rtpIgnoreProfileLevelId
            type: string
          section:
            description: The section of the transcoder configuration table that contains the property. Valid values are <strong>rtsp</strong> and <strong>cupertino</strong>.
            example: rtsp
            type: string
          value:
            description: The value of the property. For <strong>debugRtspSession</strong>, <strong>avSyncMethod</strong>, <strong>rtspFilterUnknownTracks</strong>, <strong>rtpIgnoreSpropParameterSets</strong>, <strong>rtpIgnoreProfileLevelId</strong>, <strong>cupertinoEnableProgramDateTime</strong>, and <strong>cupertinoEnableId3ProgramDateTime</strong>, valid values are <strong>true</strong> or <strong>false</strong>. <strong>maxRtcpWaitTime</strong> must be <strong>0</strong> (ms, off) or greater. The default is <strong>2000</strong>. Valid values for <strong>rtpTransportMode</strong> are <strong>udp</strong> or <strong>interleave</strong> (the default). <strong>rtspValidationFrequency</strong> must be <strong>0</strong> (ms, off) or greater. The default is <strong>15000</strong>. <strong>cupertinoProgramDateTimeOffset</strong> must be an integer, positive or negative. The default is <strong>0</strong> (ms).
            example: "1"
            type: string
        required:
          - section
          - key
          - value
        title: property
        type: object
    required:
      - property
    type: object
  transcoder_update_input:
    properties:
      transcoder:
        properties:
          broadcast_location:
            description: The location where Wowza Streaming Cloud transcodes your stream. Choose a location as close as possible to your video source.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: us_central_iowa
            type: string
          buffer_size:
            description: The size, in milliseconds, of the incoming buffer. <strong>0</strong> means no buffer. The default is <strong>4000</strong> (4 seconds).
            enum:
              - 0
              - 1000
              - 2000
              - 3000
              - 4000
              - 5000
              - 6000
              - 7000
              - 8000
            example: 4000
            format: int32
            type: integer
          closed_caption_type:
            description: The type of closed caption data being passed from the source. The default, <strong>none</strong>, indicates that no data is being provided. <strong>cea</strong> indicates that a CEA closed captioning data stream is being provided. <strong>on_text</strong> indicates that an onTextData closed captioning data stream is being provided. <strong>both</strong> indicates that both CEA and onTextData closed captioing data streams are being provided.
            enum:
              - none
              - cea
              - on_text
              - both
            example: cea
            type: string
          delivery_method:
            description: The type of connection between the source encoder and the transcoder. The default, <strong>pull</strong>, instructs the transcoder to pull the video from the source. <strong>push</strong> instructs the source to push the stream to the transcoder. <strong>cdn</strong> uses a stream source to deliver the stream to the transcoder.
            enum:
              - pull
              - cdn
              - push
            example: pull
            type: string
          delivery_protocols:
            description: An array of playback protocols enabled for this transcoder. By default, <strong>rtmp</strong>, <strong>rtsp</strong>, and <strong>wowz</strong> are returned.
            example:
              - rtmp
              - rtsp
              - wowz
            items:
              type: string
            type: array
          description:
            description: An optional description of the transcoder.
            example: My Transcoder Description
            type: string
          disable_authentication:
            description: Authentication is required by default for RTMP and RTSP push connections from a video source to the transcoder. Specify <strong>true</strong> to disable authentication with the video source.
            example: false
            type: boolean
          idle_timeout:
            description: The amount of idle time, in seconds, before the transcoder automatically shuts down. Valid values are the integers <strong>0</strong> (never shuts down) to <strong>172800</strong> (48 hours). The default is <strong>1200</strong> (20 minutes).
            example: 1200
            format: int32
            type: integer
          low_latency:
            description: If <strong>true</strong>, turns off the sort packet buffer and speeds the time it takes to decode and deliver video data to the player. The default is <strong>false</strong>.
            example: false
            type: boolean
          name:
            description: A descriptive name for the transcoder. Maximum 200 characters.
            example: My PAYG Transcoder
            type: string
          password:
            description: A password for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: 82e0e971
            type: string
          play_maximum_connections:
            description: The number of users who are allowed to connect directly to the transcoder.
            enum:
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
              - 23
              - 24
              - 25
              - 26
              - 27
              - 28
              - 29
              - 30
              - 31
              - 32
              - 33
              - 34
              - 35
              - 36
              - 37
              - 38
              - 39
              - 40
              - 41
              - 42
              - 43
              - 44
              - 45
              - 46
              - 47
              - 48
              - 49
              - 50
              - 51
              - 52
              - 53
              - 54
              - 55
              - 56
              - 57
              - 58
              - 59
              - 60
              - 61
              - 62
              - 63
              - 64
              - 65
              - 66
              - 67
              - 68
              - 69
              - 70
              - 71
              - 72
              - 73
              - 74
              - 75
              - 76
              - 77
              - 78
              - 79
              - 80
              - 81
              - 82
              - 83
              - 84
              - 85
              - 86
              - 87
              - 88
              - 89
              - 90
              - 91
              - 92
              - 93
              - 94
              - 95
              - 96
              - 97
              - 98
              - 99
              - 100
            example: 20
            format: int32
            type: integer
          protocol:
            description: The transport protocol for the source video. The default is <strong>rtmp</strong>.
            enum:
              - rtmp
              - rtsp
            example: rtmp
            type: string
          recording:
            description: If <strong>true</strong>, creates a recording of the transcoded output. The default is <strong>false</strong>.
            example: true
            type: boolean
          remove_watermark_image:
            description: If <strong>true</strong>, removes the watermark from the output. The default is <strong>false</strong>.
            example: true
            type: boolean
          source_url:
            description: For the <em>delivery_method</em> <strong>pull</strong>. Enter the source's web address without the preceding protocol or the trailing slash (/).
            example: cp12345.live.edgefcs.net/live/redcarpet@123456
            type: string
          stream_extension:
            description: For the <em>delivery_method</em> <strong>push</strong>. Some encoders append an extension to their stream names. If the device you're using does this, enter the extension.
            example: .sdp
            type: string
          stream_smoother:
            description: A dynamic buffer that helps stabilize streams in rough network conditions, but adds latency. Specify <strong>true</strong> to enable stream smoothing. The default is <strong>false</strong>.
            example: false
            type: boolean
          stream_source_id:
            description: For the <em>delivery_method</em> <strong>cdn</strong>. The alphanumeric string that identifies the stream source that you want to use to deliver the stream to the transcoder.
            example: rxHQQpWw
            type: string
          suppress_stream_target_start:
            description: If <strong>true</strong>, disables stream targets when the transcoder starts. If <strong>false</strong> (the default), the targets start when the transcoder starts.
            example: false
            type: boolean
          username:
            description: A username for authenticating an RTMP or RTSP push connection. Can contain only uppercase and lowercase letters; numbers; and the period (.), underscore (_), and hyphen (-) characters. No other special characters can be used.
            example: client2
            type: string
          video_fallback:
            description: If <strong>true</strong>, black video plays if the video source disconnects from the transcoder. If <strong>false</strong> (the default), a stream-not-available message appears. Works only with stream targets whose <em>provider</em> is <strong>akamai_cupertino</strong>.
            example: false
            type: boolean
          watermark:
            description: Embeds an image into the transcoded stream for copyright protection. Specify <strong>true</strong> to embed a watermark image.
            example: true
            type: boolean
          watermark_height:
            description: The height, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image height.
            example: 80
            format: int32
            type: integer
          watermark_image:
            description: A Base64-encoded string representation of a GIF, JPEG, or PNG image that is embedded in all bitrate renditions of the stream. Watermark image files must be 2.5 MB or smaller.
            example: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg
            type: string
          watermark_opacity:
            description: The opacity, or percentage of transparency, of the watermark. <strong>0</strong> is fully transparent; <strong>100</strong> is fully opaque.
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
              - 23
              - 24
              - 25
              - 26
              - 27
              - 28
              - 29
              - 30
              - 31
              - 32
              - 33
              - 34
              - 35
              - 36
              - 37
              - 38
              - 39
              - 40
              - 41
              - 42
              - 43
              - 44
              - 45
              - 46
              - 47
              - 48
              - 49
              - 50
              - 51
              - 52
              - 53
              - 54
              - 55
              - 56
              - 57
              - 58
              - 59
              - 60
              - 61
              - 62
              - 63
              - 64
              - 65
              - 66
              - 67
              - 68
              - 69
              - 70
              - 71
              - 72
              - 73
              - 74
              - 75
              - 76
              - 77
              - 78
              - 79
              - 80
              - 81
              - 82
              - 83
              - 84
              - 85
              - 86
              - 87
              - 88
              - 89
              - 90
              - 91
              - 92
              - 93
              - 94
              - 95
              - 96
              - 97
              - 98
              - 99
              - 100
            example: 75
            format: int32
            type: integer
          watermark_position:
            description: The corner of the video frame in which you want the watermark to appear. The default is <strong>top-left</strong>.
            enum:
              - top-left
              - top-right
              - bottom-left
              - bottom-right
            example: bottom-left
            type: string
          watermark_width:
            description: The width, in pixels, of the watermark image. If blank, Wowza Streaming Cloud uses the original image width.
            example: 100
            format: int32
            type: integer
        required:
          - name
          - protocol
          - delivery_method
        title: transcoder
        type: object
    required:
      - transcoder
    type: object
  transcoders:
    example:
      transcoders:
        - application_name: app-3757
          billing_mode: pay_as_you_go
          broadcast_location: us_central_iowa
          buffer_size: 4000
          closed_caption_type: cea
          created_at: 2017-11-12T20:00:43.325Z
          delivery_method: push
          delivery_protocols:
            - rtmp
            - rtsp
            - wowz
          description: My Transcoder Description
          direct_playback_urls:
            - rtmp:
                - name: source
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6
            - rtsp:
                - name: source
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
            - wowz:
                - name: source
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789
                - name: 1920x1080
                  output_id: dcxq5q6c
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1
                - name: 1280x720
                  output_id: 0g116zkf
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2
                - name: 854x480
                  output_id: 4qqkwndt
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3
                - name: 640x360
                  output_id: 0pv8djpg
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4
                - name: 512x288
                  output_id: b09xrxjf
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5
                - name: 320x180
                  output_id: bvkh2nsz
                  url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6
          disable_authentication: false
          domain_name: f92334.entrypoint.cloud.wowza.com
          id: 2lsWj3F9
          idle_timeout: 1200
          low_latency: false
          name: My PAYG Transcoder
          outputs:
            - {}
          password: 82e0e971
          protocol: rtmp
          recording: true
          source_port: 1935
          stream_extension: .sdp
          stream_name: 10eb0ed8
          stream_smoother: false
          suppress_stream_target_start: false
          transcoder_type: transcoded
          updated_at: 2017-11-15T10:51:00.325Z
          username: client2
          video_fallback: false
          watermark: true
          watermark_height: 80
          watermark_image_url: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg
          watermark_opacity: 75
          watermark_position: top-right
          watermark_width: 100
        - application_name: app-3757
          billing_mode: twentyfour_seven
          broadcast_location: asia_pacific_australia
          buffer_size: 4000
          closed_caption_type: none
          created_at: 2017-11-12T20:00:43.325Z
          delivery_method: pull
          delivery_protocols:
            - rtmp
            - rtsp
            - wowz
          direct_playback_urls:
            - {}
          disable_authentication: true
          domain_name: f34523.entrypoint.cloud.wowza.com
          id: VJbkhjzl
          idle_timeout: 1200
          low_latency: false
          name: My 24x7 Passthrough
          outputs:
            - {}
          play_maximum_connections: 20
          protocol: rtmp
          recording: false
          source_port: 1935
          source_url: cp12345.live.edgefcs.net/live/redcarpet@123456
          stream_extension: ""
          stream_name: 10eb1ed8
          stream_smoother: false
          transcoder_type: passthrough
          updated_at: 2017-11-14T18:42:51.325Z
          video_fallback: false
          watermark: false
    properties:
      transcoders:
        items:
          $ref: "#/definitions/transcoder"
        type: array
    required:
      - transcoders
    type: object
  ull_stream_target_input:
    properties:
      stream_target:
        properties:
          enable_hls:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong>, creates an Apple HLS URL for playback on iOS devices (<em>hls_playback_url</em>). The default is <strong>false</strong>.
            example: true
            type: boolean
          enabled:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. If <strong>true</strong> (the default), the source stream is ready to be ingested. If **false**, the source stream won't be ingested by the target's origin server.
            example: true
            type: boolean
          ingest_ip_whitelist:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **push**. A list of IP addresses that can be used to connect to the target's origin server.
            example:
              - 10.11.12.*
              - 13.12.11.10
            items:
              type: string
            type: array
          name:
            description: A descriptive name for the stream target. Maximum 255 characters.
            example: My Ultra Low Latency Stream Target
            type: string
          provider:
            description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
            example: wowza
            type: string
          region_override:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The location of the stream target's origin server. If unspecified, Wowza Streaming Cloud determines the optimal region for the origin server.
            example: azure-westus
            type: string
          source_delivery_method:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong>. The type of connection between the stream source and the stream target. **push** instructs the source to push the stream to the stream target. **pull** instructs the stream target to pull the stream from the source.
            example: pull
            type: string
          source_url:
            description: Only for targets whose <em>type</em> is <strong>UltraLowLatencyStreamTarget</strong> and <em>source_delivery_method</em> is **pull**. The URL of a source IP camera or encoder connecting to the stream target.
            example: rtsp://example.com/video
            type: string
          type:
            description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
            example: UltraLowLatencyStreamTarget
            type: string
        required:
          - name
          - source_delivery_method
          - source_url
        title: custom_stream_target
        type: object
    required:
      - stream_target
    type: object
  unique_views_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: "%"
        type: string
      value:
        description: The value of the associated key.
        example: 1030
        type: integer
    type: object
  uptime:
    example:
      billed: false
      created_at: 2017-07-06T14:22:00Z
      id: 5678wxyz
      running: true
      started_at: 2017-07-06T14:22:00Z
      transcoder_id: 1234abcd
      updated_at: 2017-07-06T14:22:00Z
    properties:
      billed:
        description: A Boolean value that indicates if the usage generated by this uptime has been sent for billing processing.
        type: boolean
      created_at:
        description: The date and time that the uptime record was created.
        format: date-time
        type: string
      ended_at:
        description: The date and time that the transcoder was stopped for this uptime. If this value is not present, it indicates that the transcoder is currently running.
        format: date-time
        type: string
      id:
        description: The unique alphanumeric string that identifies the uptime record.
        type: string
      running:
        description: A Boolean value that indicates if the transcoder is still running for this uptime.
        type: boolean
      started_at:
        description: The date and time that the transcoder started for this uptime.
        format: date-time
        type: string
      transcoder_id:
        description: The unique alphanumeric string that identifies the transcoder.
        type: string
      updated_at:
        description: The date and time that the uptime record was updated.
        type: string
    type: object
  uptimes:
    example:
      uptimes:
        - billed: false
          created_at: 2017-07-06T14:22:00Z
          id: 5678wxyz
          running: true
          started_at: 2017-07-06T14:22:00Z
          transcoder_id: 1234abcd
          updated_at: 2017-07-06T14:22:00Z
        - billed: true
          created_at: 2017-07-08T14:22:00Z
          ended_at: 2017-07-08T16:40:00Z
          id: 5679wxyz
          running: false
          started_at: 2017-07-08T14:22:00Z
          transcoder_id: 1234abcd
          updated_at: 2017-07-08T16:40:00Z
    properties:
      uptimes:
        items:
          $ref: "#/definitions/uptime"
        type: array
    required:
      - uptimes
    type: object
  url:
    example:
      bitrate: 4138
      height: 1080
      id: w9vJm3BJ
      label: "1920"
      player_id: Jm1tPblTJm1t
      url: http://someurl.com/some/path/to/a/stream.f4m
      width: 1920
    properties:
      bitrate:
        description: The video bitrate, in kilobits per second (Kbps), of the output rendition that will be played at the URL. May correspond to the bitrate of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
        format: int32
        type: integer
      created_at:
        description: The date and time that the player URL was created.
        format: date-time
        type: string
      height:
        description: The height, in pixels, of the output rendition that will be played at the URL. May correspond to the height of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
        format: int32
        type: integer
      id:
        description: The unique alphanumeric string that identifies the player URL.
        type: string
      label:
        description: A descriptive name for the player URL. Maximum 255 characters.
        type: string
      player_id:
        description: The unique alphanumeric string that identifies the player.
        type: string
      updated_at:
        description: The date and time that the player URL was updated.
        format: date-time
        type: string
      url:
        description: The URL of the player. If using a Wowza CDN target, the URL format is `http://[wowzasubdomain]-f.akamaihd.net/z/[stream_name]_[angle]@[stream_id]/manifest.f4m` for Adobe HDS playback or `http://[wowzasubdomain]-f.akamaihd.net/i/[stream_name]_[angle]@[stream_id]/master.m3u8` for Apple HLS playback.
        type: string
      width:
        description: The width, in pixels, of the output rendition that will be played at the URL. May correspond to the width of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
        format: int32
        type: integer
    type: object
  url_create_input:
    allOf:
      - $ref: "#/definitions/url_input"
  url_input:
    properties:
      url:
        properties:
          bitrate:
            description: The video bitrate, in kilobits per second (Kbps), of the output rendition that will be played at the URL. May correspond to the bitrate of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
            example: 4128
            format: int32
            type: integer
          height:
            description: The height, in pixels, of the output rendition that will be played at the URL. May correspond to the height of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
            example: 1080
            format: int32
            type: integer
          label:
            description: A descriptive name for the player URL. Maximum 255 characters.
            example: "1920"
            type: string
          url:
            description: The URL of the player. If using a Wowza CDN target, the URL format is `http://[wowzasubdomain]-f.akamaihd.net/z/[stream_name]_[angle]@[stream_id]/manifest.f4m` for Adobe HDS playback or `http://[wowzasubdomain]-f.akamaihd.net/i/[stream_name]_[angle]@[stream_id]/master.m3u8` for Apple HLS playback.
            example: http://somedomain.com/path/to/stream.m3u8
            type: string
          width:
            description: The width, in pixels, of the output rendition that will be played at the URL. May correspond to the width of an output rendition being used by the live stream or transcoder. Must be greater than <strong>0</strong>.
            example: 1920
            format: int32
            type: integer
        title: url
        type: object
    required:
      - url
    type: object
  url_update_input:
    allOf:
      - $ref: "#/definitions/url_input"
  urls:
    example:
      urls:
        - bitrate: 4138
          height: 1080
          id: w9vJm3BJ
          label: "1920"
          player_id: Jm1tPblTJm1t
          url: http://someurl.com/some/path/to/a/stream.f4m
          width: 1920
        - bitrate: 4138
          height: 1080
          id: PPqV0kcm
          label: iPhone
          player_id: Jm1tPblTJm1t
          transcoder_id: yjCVYf5l
          url: http://someurl.com/some/path/to/a/stream.m3u8
          width: 1920
    properties:
      urls:
        items:
          $ref: "#/definitions/url"
        type: array
    required:
      - urls
    type: object
  usage_network_stream_source:
    properties:
      bytes_billed:
        description: The amount of usage, in bytes, that was billed for the stream source during the selected time frame.
        format: int32
        type: integer
      bytes_used:
        description: The amount of content, in bytes, that went through the stream source during the selected time frame.
        format: int32
        type: integer
      deleted:
        description: A value of <strong>true</strong> indicates that the stream source has been removed from Wowza Streaming Cloud.
        type: boolean
      id:
        description: The unique alphanumeric string that identifies the stream source.
        format: int32
        type: string
      name:
        description: A descriptive name for the stream source.
        type: string
    type: object
  usage_network_stream_sources:
    example:
      stream_sources:
        - bytes_billed: 4567890
          bytes_used: 4567890
          deleted: true
          id: Y8jZdBQd
          name: My Stream Source
        - bytes_billed: 876543
          bytes_used: 987654
          deleted: false
          id: jJkFChfv
          name: My Other Stream Source
    properties:
      stream_sources:
        items:
          $ref: "#/definitions/usage_network_stream_source"
        type: array
    type: object
  usage_network_stream_target:
    properties:
      stream_targets:
        description: An array of stream targets and their usage by protocol and zone.
        properties:
          bytes_billed:
            description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
            format: int32
            type: integer
          bytes_used:
            description: The amount of content, in bytes, that went through the stream target during the selected time frame.
            format: int32
            type: integer
          deleted:
            description: A value of <strong>true</strong> indicates that the stream target has been removed from Wowza Streaming Cloud.
            type: boolean
          id:
            description: The unique alphanumeric string that identifies the stream target.
            format: int32
            type: string
          name:
            description: A descriptive name for the stream target.
            type: string
          protocols:
            description: A hash of protocols that accrued network usage, keyed by the name of the protocol that generated the usage.
            properties:
              zones:
                description: A hash of zones with network usage, keyed by the name of the billing zone where the usage was generated.
                properties:
                  bytes_billed:
                    description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
                    format: int32
                    type: integer
                  bytes_used:
                    description: The amount of content, in bytes, that went through the stream target during the selected time frame.
                    format: int32
                    type: integer
                title: Hash of zones
                type: object
            title: Hash of protocols
            type: object
        title: Array of stream targets
        type: object
      total:
        description: A hash of total usage, including overall total billed and used for all targets, and totals by zone for each protocol.
        properties:
          bytes_billed:
            description: The amount of usage, in bytes, that was billed for all stream targets during the selected time frame.
            format: int32
            type: integer
          bytes_used:
            description: The amount of content, in bytes, that went through all stream targets during the selected time frame.
            format: int32
            type: integer
          protocols:
            description: A hash of protocols that accrued network usage, keyed by the name of the protocol that generated the usage.
            properties:
              zones:
                description: A hash of zones with network usage, keyed by the name of the billing zone where the usage was generated.
                properties:
                  bytes_billed:
                    description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
                    format: int32
                    type: integer
                  bytes_used:
                    description: The amount of content, in bytes, that went through the stream target during the selected time frame.
                    format: int32
                    type: integer
                title: Hash of zones
                type: object
            title: Hash of protocols
            type: object
        title: Hash of totals
        type: object
    type: object
  usage_network_stream_targets:
    example:
      stream_targets:
        - bytes_billed: 4567890
          bytes_used: 4567890
          deleted: true
          id: p3NBkd4L
          name: My Stream Target
          protocols:
            hls:
              zones:
                global:
                  bytes_billed: 1072506176
                  bytes_used: 1093617287
        - bytes_billed: 876543
          bytes_used: 987654
          deleted: false
          id: MZLfHjLH
          name: My Wowza Ultra Low Latency Stream Target
          protocols:
            hls:
              zones:
                global:
                  bytes_billed: 72506176
                  bytes_used: 93617287
            ull:
              zones:
                azure-northeurope:
                  bytes_billed: -1
                  bytes_used: 17673242
                azure-westus:
                  bytes_billed: -1
                  bytes_used: 1093617287
        - bytes_billed: 876543
          bytes_used: 987654
          deleted: false
          id: MZLfHjLH
          name: My Other Stream Target
          protocols:
            hls:
              zones:
                global:
                  bytes_billed: 72506176
                  bytes_used: 93617287
      total:
        bytes_billed: 4567890
        bytes_used: 4567890
        protocols:
          hls:
            zones:
              global:
                bytes_billed: 72506176
                bytes_used: 93617287
          hls_hds:
            zones:
              global:
                bytes_billed: 72506176
                bytes_used: 93617287
          ull:
            zones:
              azure-northeurope:
                bytes_billed: -1
                bytes_used: 17673242
              azure-westus:
                bytes_billed: -1
                bytes_used: 1093617287
    properties:
      stream_targets:
        description: An array of stream targets and their usage by protocol and zone.
        properties:
          bytes_billed:
            description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
            format: int32
            type: integer
          bytes_used:
            description: The amount of content, in bytes, that went through the stream target during the selected time frame.
            format: int32
            type: integer
          deleted:
            description: A value of <strong>true</strong> indicates that the stream target has been removed from Wowza Streaming Cloud.
            type: boolean
          id:
            description: The unique alphanumeric string that identifies the stream target.
            format: int32
            type: string
          name:
            description: A descriptive name for the stream target.
            type: string
          protocols:
            description: A hash of protocols that accrued network usage, keyed by the name of the protocol that generated the usage.
            properties:
              zones:
                description: A hash of zones with network usage, keyed by the name of the billing zone where the usage was generated.
                properties:
                  bytes_billed:
                    description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
                    format: int32
                    type: integer
                  bytes_used:
                    description: The amount of content, in bytes, that went through the stream target during the selected time frame.
                    format: int32
                    type: integer
                title: Hash of zones
                type: object
            title: Hash of protocols
            type: object
        title: Array of stream targets
        type: object
      total:
        description: A hash of total usage, including overall total billed and used for all targets, and totals by zone for each protocol.
        properties:
          bytes_billed:
            description: The amount of usage, in bytes, that was billed for all stream targets during the selected time frame.
            format: int32
            type: integer
          bytes_used:
            description: The amount of content, in bytes, that went through all stream targets during the selected time frame.
            format: int32
            type: integer
          protocols:
            description: A hash of protocols that accrued network usage, keyed by the name of the protocol that generated the usage.
            properties:
              zones:
                description: A hash of zones with network usage, keyed by the name of the billing zone where the usage was generated.
                properties:
                  bytes_billed:
                    description: The amount of usage, in bytes, that was billed for the stream target during the selected time frame.
                    format: int32
                    type: integer
                  bytes_used:
                    description: The amount of content, in bytes, that went through the stream target during the selected time frame.
                    format: int32
                    type: integer
                title: Hash of zones
                type: object
            title: Hash of protocols
            type: object
        title: Hash of totals
        type: object
    type: object
  usage_network_transcoder:
    properties:
      bytes_billed:
        description: The amount of usage, in bytes, that was billed for the live stream or transcoder during the selected time frame.
        format: int32
        type: integer
      bytes_used:
        description: The amount of content, in bytes, that went through the live stream or transcoder during the selected time frame.
        format: int32
        type: integer
      deleted:
        description: A value of <strong>true</strong> indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.
        type: boolean
      id:
        description: The unique alphanumeric string that identifies the live stream or transcoder.
        format: int32
        type: integer
      name:
        description: A descriptive name for the live stream or transcoder.
        type: string
    type: object
  usage_network_transcoders:
    example:
      transcoders:
        - bytes_billed: 4567890
          bytes_used: 4567890
          deleted: true
          id: 4FLNJvn6
          name: My Transcoder
        - bytes_billed: 876543
          bytes_used: 987654
          deleted: false
          id: pJ8hHY70
          name: My Other Transcoder
    properties:
      transcoders:
        items:
          $ref: "#/definitions/usage_network_transcoder"
        type: array
    type: object
  usage_storage_peak_recording:
    example:
      peak_recording:
        bytes_total: 32429386811
    properties:
      peak_recording:
        properties:
          bytes_total:
            description: The amount, in bytes, used to store recordings during the selected time frame. If the time frame is in the past, <em>bytes_total</em> is the amount of storage that was used and billed. If the time frame includes the current billing period, <em>bytes_total</em> is the greatest amount of content stored in Wowza Streaming Cloud at any point to date in the billing period.
            format: int32
            type: integer
        title: peak_recording
        type: object
    type: object
  usage_time_transcoder:
    properties:
      deleted:
        description: A value of <strong>true</strong> indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.
        type: boolean
      id:
        description: The unique alphanumeric string that identifies the live stream or transcoder.
        format: int32
        type: integer
      name:
        description: A descriptive name for the live stream or transcoder.
        type: string
      seconds_billed:
        description: The amount of stream processing time, in seconds, that was billed for the live stream or transcoder.
        format: int32
        type: integer
      seconds_used:
        description: The amount of time, in seconds, that it took for the live stream or transcoder to be processed.
        format: int32
        type: integer
    type: object
  usage_time_transcoders:
    example:
      transcoders:
        - deleted: true
          id: zBR2LfvH
          name: My Transcoder
          seconds_billed: 12345
          seconds_used: 12345
        - deleted: false
          id: 7JlNqKfB
          name: My Other Transcoder
          seconds_billed: 4321
          seconds_used: 4321
    properties:
      transcoders:
        items:
          $ref: "#/definitions/usage_time_transcoder"
        type: array
    type: object
  usage_viewer_data_countries:
    items:
      properties:
        country_code:
          properties:
            name:
              description: The name of the country.
              type: string
            percentage_viewers:
              description: Total percentage of viewers (<strong>100</strong>).
              format: int32
              type: integer
            percentage_viewing_time:
              description: The percentage of total viewing time that the protocol or rendition was viewed. Always <strong>100</strong> for <em>stream_target</em>.
              format: int32
              type: integer
            protocols:
              $ref: "#/definitions/usage_viewer_data_protocols"
              description: An array of the protocols that were viewed.
            seconds_avg_viewing_time:
              description: The average length of time, in seconds, that viewers played the stream at the target.
              format: int32
              type: integer
            seconds_total_viewing_time:
              description: The total length of time, in seconds, that all viewers played the stream at the target. <em>seconds_total_viewing_time</em> may be longer than the duration of the stream.
              format: int32
              type: integer
            total_unique_viewers:
              description: The total number of unique viewers that downloaded at least one chunk of the stream at the target (for HTTP streams) or connected to and viewed the stream (for ultra low latency streams). A unique viewer is a single IP address; multiple users that share the same IP address are counted once.
              format: int32
              type: integer
          title: The country code of the country
          type: object
      title: country object
      type: object
    type: array
  usage_viewer_data_protocols:
    items:
      properties:
        protocol_name:
          properties:
            name:
              description: The name of the protocol.
              type: string
            percentage_viewers:
              description: Total percentage of viewers (<strong>100</strong>).
              format: int32
              type: integer
            percentage_viewing_time:
              description: The percentage of total viewing time that the protocol or rendition was viewed. Always <strong>100</strong> for <em>stream_target</em>.
              format: int32
              type: integer
            seconds_avg_viewing_time:
              description: The average length of time, in seconds, that viewers played the stream at the target.
              format: int32
              type: integer
            seconds_total_viewing_time:
              description: The total length of time, in seconds, that all viewers played the stream at the target. <em>seconds_total_viewing_time</em> may be longer than the duration of the stream.
              format: int32
              type: integer
            total_unique_viewers:
              description: The total number of unique viewers that downloaded at least one chunk of the stream at the target (for HTTP streams) or connected to and viewed the stream (for ultra low latency streams). A unique viewer is a single IP address; multiple users that share the same IP address are counted once.
              format: int32
              type: integer
          title: The name of the protocol
          type: object
      title: protocol object
      type: object
    type: array
  usage_viewer_data_renditions:
    items:
      properties:
        rendition_name:
          properties:
            countries:
              $ref: "#/definitions/usage_viewer_data_countries"
              description: An array of the countries where the stream was viewed. Includes breakdown by protocol.
            name:
              description: The name of the rendition.
              type: string
            percentage_viewers:
              description: Total percentage of viewers (<strong>100</strong>).
              format: int32
              type: integer
            percentage_viewing_time:
              description: The percentage of total viewing time that the protocol or rendition was viewed. Always <strong>100</strong> for <em>stream_target</em>.
              format: int32
              type: integer
            protocols:
              $ref: "#/definitions/usage_viewer_data_protocols"
              description: An array of the protocols that were viewed.
            seconds_avg_viewing_time:
              description: The average length of time, in seconds, that viewers played the stream at the target.
              format: int32
              type: integer
            seconds_total_viewing_time:
              description: The total length of time, in seconds, that all viewers played the stream at the target. <em>seconds_total_viewing_time</em> may be longer than the duration of the stream.
              format: int32
              type: integer
            total_unique_viewers:
              description: The total number of unique viewers that downloaded at least one chunk of the stream at the target (for HTTP streams) or connected to and viewed the stream (for ultra low latency streams). A unique viewer is a single IP address; multiple users that share the same IP address are counted once.
              format: int32
              type: integer
          title: The name of the rendition
          type: object
      title: rendition object
      type: object
    type: array
  usage_viewer_data_stream_target:
    example:
      stream_target:
        countries:
          - US:
              ...: ...
              name: United States of America
              protocols:
                - hds:
                    ...: ...
                    name: Adobe HDS
                - hls:
                    ...: ...
                    name: Apple HLS
                - rtmp:
                    ...: ...
                    name: RTMP
          - CA:
              ...: ...
              name: Canada
        country_list:
          - AU
          - CA
          - CH
          - CZ
          - DE
          - FI
          - GB
          - IE
          - IL
          - IN
          - MX
          - PL
          - SE
          - US
        percentage_viewers: 100
        percentage_viewing_time: 100
        protocols:
          - hds:
              name: Adobe HDS
              percentage_viewers: 39
              percentage_viewing_time: 55
              seconds_avg_viewing_time: 3689.7337516808607
              seconds_total_viewing_time: 24695388
              total_unique_viewers: 6693
          - hls:
              name: Apple HLS
              percentage_viewers: 67
              percentage_viewing_time: 45
              seconds_avg_viewing_time: 1775.0381679389313
              seconds_total_viewing_time: 20230110
              total_unique_viewers: 11397
          - rtmp:
              name: RTMP
              percentage_viewers: 0
              percentage_viewing_time: 0
              seconds_avg_viewing_time: 0
              seconds_total_viewing_time: 0
              total_unique_viewers: 0
        rendition_list:
          - 4128
          - 2728
          - 1728
          - 1152
          - 640
          - 448
        renditions:
          - "448":
              countries:
                - US:
                    ...: ...
                    name: United States of America
              percentage_viewers: 100
              percentage_viewing_time: 100
              protocols:
                - hds:
                    ...: ...
                    name: Adobe HDS
                - hls:
                    ...: ...
                    name: Apple HLS
                - rtmp:
                    ...: ...
                    name: RTMP
              seconds_avg_viewing_time: 387.3736449048422
              seconds_total_viewing_time: 4823964
              total_unique_viewers: 12453
          - "640":
              ...: ...
        seconds_avg_viewing_time: 2633.690819556806
        seconds_total_viewing_time: 44925498
        total_unique_viewers: 17058
    properties:
      stream_target:
        properties:
          countries:
            $ref: "#/definitions/usage_viewer_data_countries"
            description: An array of the countries where the stream was viewed. Includes breakdown by protocol.
          country_list:
            description: A comma-separated list of all viewed country codes shown as strings, for quick reference.
            items:
              type: string
            type: array
          percentage_viewers:
            description: Total percentage of viewers (<strong>100</strong>).
            format: int32
            type: integer
          percentage_viewing_time:
            description: The percentage of total viewing time that the protocol or rendition was viewed. Always <strong>100</strong> for <em>stream_target</em>.
            format: int32
            type: integer
          protocols:
            $ref: "#/definitions/usage_viewer_data_protocols"
            description: An array of the protocols that were viewed.
          rendition_list:
            description: A comma-separated list of all viewed renditions shown as numbers, for quick reference.
            items:
              type: string
            type: array
          renditions:
            $ref: "#/definitions/usage_viewer_data_renditions"
            description: An array of the renditions that were viewed. Includes breakdown by protocol.
          seconds_avg_viewing_time:
            description: The average length of time, in seconds, that viewers played the stream at the target.
            format: int32
            type: integer
          seconds_total_viewing_time:
            description: The total length of time, in seconds, that all viewers played the stream at the target. <em>seconds_total_viewing_time</em> may be longer than the duration of the stream.
            format: int32
            type: integer
          total_unique_viewers:
            description: The total number of unique viewers that downloaded at least one chunk of the stream at the target (for HTTP streams) or connected to and viewed the stream (for ultra low latency streams). A unique viewer is a single IP address; multiple users that share the same IP address are counted once.
            format: int32
            type: integer
        title: stream_target
        type: object
    type: object
  video_codec_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: normal
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: ""
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: ""
        type: string
      value:
        description: The value of the associated key.
        example: avc1
        type: string
    type: object
  width_metric:
    properties:
      status:
        description: The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).
        example: warning
        type: string
      text:
        description: A message related to the value and status of the current key. Usually blank unless there's a warning status.
        example: "Configured width is different from what Wowza Streaming Cloud is receiving from the source: 1280."
        type: string
      units:
        description: The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.
        example: px
        type: string
      value:
        description: The value of the associated key.
        example: 1280
        type: integer
    type: object
  wowza_stream_target_input:
    properties:
      stream_target:
        properties:
          chunk_size:
            description: <strong>The <em>chunk_size</em> parameter is deprecated. To set the chunk size of a stream target, use the POST /stream_targets/[stream_target_id]/properties endpoint.</strong> Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. The segment duration for HLS encoding. The default is <strong>10</strong>.
            enum:
              - 2
              - 4
              - 6
              - 8
              - 10
            example: 10
            type: string
          location:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. Choose a location as close as possible to your video source.
            enum:
              - asia_pacific_australia
              - asia_pacific_japan
              - asia_pacific_singapore
              - asia_pacific_taiwan
              - eu_belgium
              - eu_germany
              - eu_ireland
              - south_america_brazil
              - us_central_iowa
              - us_east_s_carolina
              - us_east_virginia
              - us_west_california
              - us_west_oregon
            example: eu_germany
            type: string
          name:
            description: A descriptive name for the stream target. Maximum 255 characters.
            example: My Stream Target
            type: string
          provider:
            description: The CDN for the target. <br /><br />Required for targets whose <em>type</em> is <strong>CustomStreamTarget</strong>. Valid values for <strong>CustomStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong>, <strong>akamai_rtmp</strong>, <strong>limelight</strong>, <strong>rtmp</strong>, and <strong>ustream</strong>. Values can be appended with **_mock** to use in the sandbox environment. <br /><br />Valid values for <strong>WowzaStreamTarget</strong> are <strong>akamai</strong>, <strong>akamai_cupertino</strong> (default), <strong>akamai_legacy_rtmp</strong>, and <strong>wowza</strong>. <br /><br /><strong>UltraLowLatencyStreamTarget</strong> defaults to and must be <strong>wowza</strong>.
            example: akamai
            type: string
          type:
            description: <strong>WowzaStreamTarget</strong> is a Wowza CDN target. <strong>UltraLowLatencyStreamTarget</strong> is an ultra low latency Wowza stream target. <strong>CustomStreamTarget</strong> (the default) is an external, third-party destination. <!--and <strong>FacebookStreamTarget</strong> (a Facebook Live target).-->
            example: WowzaStreamTarget
            type: string
          use_cors:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. CORS, or cross-origin resource sharing, allows streams to be sent to providers such as Peer5, Viblast, and Streamroot, which implement a peer-to-peer grid delivery system.
            example: true
            type: boolean
          use_https:
            description: <strong>The <em>use_https</em> parameter is deprecated. Use the POST /stream_targets/[<em>stream_target_id</em>]/properties endpoint and the <em>relative_playlists</em> parameter instead.</strong>
            example: true
            type: boolean
          use_secure_ingest:
            description: Only for targets whose <em>type</em> is <strong>WowzaStreamTarget</strong> and <em>provider</em> is <strong>akamai_cupertino</strong>. If <strong>true</strong>, generates a <em>secure_ingest_query_param</em> to securely deliver the stream from the transcoder to the provider.
            example: true
            type: boolean
        required:
          - name
          - location
        title: wowza_stream_target
        type: object
    required:
      - stream_target
    type: object
x-tagGroups:
  - name: Resource Management
    tags:
      - live_streams
      - players
      - transcoders
      - stream_sources
      - stream_targets
      - recordings
      - schedules
  - name: Usage
    tags:
      - processing time
      - network
      - storage
      - viewer data
  - name: Non-Auth Endpoints
    tags:
      - specs
