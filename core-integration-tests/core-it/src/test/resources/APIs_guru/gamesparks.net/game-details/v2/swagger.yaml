swagger: "2.0"
host: config2.gamesparks.net
basePath: /
info:
  contact:
    x-twitter: GameSparksltd
  description: The API to manage the GameSparks game details
  license:
    name: " "
  termsOfService: http://www.gamesparks.com/gamesparks-terms-of-use
  title: GameSparks Game Details API
  version: v2
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://twitter.com/GameSparksltd/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://config2.gamesparks.net/restv2/admin/api/schema
      version: "2.0"
  x-providerName: gamesparks.net
  x-serviceName: game-details
securityDefinitions:
  accessToken:
    in: header
    name: accessToken
    type: apiKey
  basic:
    type: basic
  jwt:
    in: header
    name: jwt
    type: apiKey
tags:
  - description: Scripts Restv 2 Controller
    name: scripts
  - description: Experiment Rest Controller
    name: experiments
  - description: Billing Details Rest V 2 Controller
    name: billingDetails
  - description: Manage Restv 2 Controller
    name: manage
  - description: Analytics Restv 2 Controller
    name: analytics
  - description: Push Notification Test Controller
    name: pushNotificationTest
  - description: Game Credentials Rest V 2 Controller
    name: credentials
  - name: snapshots
  - description: Games Admin Restv 2 Controller
    name: gamesAdmin
  - description: Region Restv 2 Controller
    name: region
  - description: Test Harness Restv 2 Controller
    name: testHarness
  - description: Segment Query Filter Restv 2 Controller
    name: segmentQueryFilters
  - description: Log Summary Restv 2 Controller
    name: notifications
paths:
  /restv2/game/regions:
    get:
      consumes:
        - application/json
      operationId: getRegionOptionsUsingGET
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GameRegionOptionsDTO"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getRegionOptions
      tags:
        - region
  "/restv2/game/{apiKey}/admin/analytics":
    get:
      consumes:
        - application/json
      operationId: getAnalyticsDataUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: stage
          enum:
            - LIVE
            - PREVIEW
          in: query
          name: stage
          required: true
          type: string
        - description: dataType
          enum:
            - activeDevices
            - activeLocations
            - activeUsers
            - averageBandwidthPerUser
            - averageDauOverMau
            - averageJsExecutionTime
            - averageRequestsPerUser
            - averageResponseTime
            - averageResponseTimePerType
            - scriptLogLevelsCount
            - sessionAnalytic
            - storagePerUser
            - customAnalyticTotal
            - customAnalyticUser
            - timedAnalyticTotal
            - sessionAnalyticTotal
            - connectedUsers
          in: query
          name: dataType
          required: true
          type: string
        - description: precision
          enum:
            - HOURLY
            - DAILY
            - MONTHLY
          in: query
          name: precision
          required: true
          type: string
        - description: yyyy-MM-dd
          format: date
          in: query
          name: startDate
          required: true
          type: string
        - description: yyyy-MM-dd
          format: date
          in: query
          name: endDate
          required: true
          type: string
        - description: the keys to select. For example "ReturningUsers", "NewUsers", etc
          in: query
          name: keys
          required: false
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/AnalyticsDataSwaggerModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Returns the results of executed query defined by the parameters passed in
      tags:
        - analytics
  "/restv2/game/{apiKey}/admin/analytics/count":
    get:
      consumes:
        - application/json
      operationId: getDataCountUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: stage
          enum:
            - LIVE
            - PREVIEW
          in: query
          name: stage
          required: true
          type: string
        - description: queryName
          enum:
            - activeUsersNow
            - dailyActiveUsers
            - averageDailyActiveUsers
            - lastMonthlyActiveUsers
            - monthlyActiveUsers
            - averageSessionDuration
          in: query
          name: queryName
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/AnalyticsDataCountSwaggerModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Returns the count of executed query
      tags:
        - analytics
  "/restv2/game/{apiKey}/admin/analytics/rollingRetention":
    get:
      consumes:
        - application/json
      operationId: getRetentionUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: stage
          enum:
            - LIVE
            - PREVIEW
          in: query
          name: stage
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/AnalyticsDataCountSwaggerModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Returns the percentage of user retention over the last 30 days
      tags:
        - analytics
  "/restv2/game/{apiKey}/admin/billingDetails":
    get:
      consumes:
        - application/json
      description: Retrieves the Billing Details.
      operationId: getBillingDetails
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BillingDetailsModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Retrieves the Billing Details
      tags:
        - billingDetails
    put:
      consumes:
        - application/json
      description: Updates the Billing Details.
      operationId: putBillingDetails
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: billingDetails
          in: body
          name: billingDetails
          required: true
          schema:
            $ref: "#/definitions/BillingDetailsModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/BillingDetailsModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Updates the Billing Details
      tags:
        - billingDetails
  "/restv2/game/{apiKey}/admin/notifications/summary":
    get:
      consumes:
        - application/json
      operationId: getGameSummaryUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: stage
          enum:
            - LIVE
            - PREVIEW
          in: query
          name: stage
          required: true
          type: string
        - description: yyyy-MM-dd
          format: date
          in: query
          name: startDate
          required: true
          type: string
        - description: yyyy-MM-dd
          format: date
          in: query
          name: endDate
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GameSummaryModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getGameSummary
      tags:
        - notifications
  "/restv2/game/{apiKey}/admin/pushNotifications/test/amazon":
    post:
      consumes:
        - application/json
      operationId: testPushAmazonNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testPushAmazonNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/apple/development":
    post:
      consumes:
        - application/json
      operationId: testPushAppleDevNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testPushAppleDevNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/apple/production":
    post:
      consumes:
        - application/json
      operationId: testPushAppleProdNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testPushAppleProdNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/google":
    post:
      consumes:
        - application/json
      operationId: testPushGoogleNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testPushGoogleNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/microsoft/windows8":
    post:
      consumes:
        - application/json
      operationId: testWindows8NotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testWindows8Notifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/microsoft/windowsPhone8":
    post:
      consumes:
        - application/json
      operationId: testWindowsPhone8NotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testWindowsPhone8Notifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/viber/integration":
    post:
      consumes:
        - application/json
      operationId: testViberIntegrationNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testViberIntegrationNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/pushNotifications/test/viber/production":
    post:
      consumes:
        - application/json
      operationId: testViberProductionNotificationsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: messageDetails
          in: body
          name: messageDetails
          required: true
          schema:
            $ref: "#/definitions/PushNotificationTestModel"
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/PushNotificationTestSummaryListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: testViberProductionNotifications
      tags:
        - pushNotificationTest
  "/restv2/game/{apiKey}/admin/scripts/differences/{snapshotId1}/{snapshotId2}":
    get:
      consumes:
        - application/json
      operationId: getScriptDifferencesUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId1
          in: path
          name: snapshotId1
          required: true
          type: string
        - description: snapshotId2
          in: path
          name: snapshotId2
          required: true
          type: string
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ScriptsDifferenceListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getScriptDifferences
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/scripts/export":
    get:
      consumes:
        - application/json
      operationId: exportZipUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: exportZip
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/scripts/import/accept":
    post:
      consumes:
        - multipart/form-data
      operationId: importAcceptUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: body
          in: query
          name: body
          required: true
          type: string
        - description: file
          in: formData
          name: file
          required: true
          type: file
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: importAccept
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/scripts/import/preview":
    post:
      consumes:
        - multipart/form-data
      operationId: importZipUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: file
          in: formData
          name: file
          required: true
          type: file
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ScriptsDifferenceListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: importZip
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/scripts/versions":
    get:
      consumes:
        - application/json
      operationId: getScriptVersionsUsingGET_1
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - default: 100
          description: pageSize
          format: int32
          in: query
          name: pageSize
          required: false
          type: integer
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SnapshotScriptVersionListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getScriptVersions
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/scripts/versions/{page}":
    get:
      consumes:
        - application/json
      operationId: getScriptVersionsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: page
          format: int32
          in: path
          name: page
          required: true
          type: integer
        - default: 100
          description: pageSize
          format: int32
          in: query
          name: pageSize
          required: false
          type: integer
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SnapshotScriptVersionListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getScriptVersions
      tags:
        - scripts
  "/restv2/game/{apiKey}/admin/segmentQueryFilters":
    get:
      consumes:
        - application/json
      operationId: getSegmentQueryFiltersUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SegmentQueryFilterListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSegmentQueryFilters
      tags:
        - segmentQueryFilters
  "/restv2/game/{apiKey}/admin/segmentQueryFilters/config":
    get:
      consumes:
        - application/json
      operationId: getSegmentQueryFiltersConfigUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SegmentQueryFilterConfigModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSegmentQueryFiltersConfig
      tags:
        - segmentQueryFilters
    put:
      consumes:
        - application/json
      operationId: updateSegmentQueryFiltersConfigUsingPUT
      parameters:
        - description: segmentQueryConfig
          in: body
          name: segmentQueryConfig
          required: true
          schema:
            $ref: "#/definitions/SegmentQueryFilterConfigModel"
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SegmentQueryFilterConfigModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateSegmentQueryFiltersConfig
      tags:
        - segmentQueryFilters
  "/restv2/game/{apiKey}/admin/segmentQueryFilters/standardFilters":
    get:
      consumes:
        - application/json
      operationId: getSegmentQueryStandardFiltersUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SegmentQueryFilterListModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSegmentQueryStandardFilters
      tags:
        - segmentQueryFilters
  "/restv2/game/{apiKey}/admin/snapshots":
    get:
      consumes:
        - application/json
      operationId: getSnapshotsUsingGET_1
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - default: 20
          description: pageSize
          format: int32
          in: query
          name: pageSize
          required: false
          type: integer
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/SnapshotModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSnapshots
      tags:
        - snapshots
    post:
      consumes:
        - application/json
      operationId: createSnapshotsUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: description
          in: body
          name: description
          required: true
          schema:
            $ref: "#/definitions/SnapshotCreationModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/SnapshotModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createSnapshots
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/liveSnapshotId":
    get:
      consumes:
        - application/json
      operationId: getLiveSnapshotIdUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getLiveSnapshotId
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/page/{page}":
    get:
      consumes:
        - application/json
      operationId: getSnapshotsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: page
          format: int32
          in: path
          name: page
          required: true
          type: integer
        - default: 20
          description: pageSize
          format: int32
          in: query
          name: pageSize
          required: false
          type: integer
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/SnapshotModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSnapshots
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/revert/to/{snapshotId}":
    post:
      consumes:
        - application/json
      operationId: revertToSnapshotUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: revertToSnapshot
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/{snapshotId}":
    delete:
      consumes:
        - application/json
      operationId: deleteSnapshotUsingDELETE_1
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteSnapshot
      tags:
        - snapshots
    get:
      consumes:
        - application/json
      operationId: getSnapshotUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SnapshotModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSnapshot
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/{snapshotId}/copy":
    post:
      consumes:
        - application/json
      operationId: copySnapshotToNewGameUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
        - default: true
          description: includeGameConfig
          in: query
          name: includeGameConfig
          required: false
          type: boolean
        - default: true
          description: includeMetadata
          in: query
          name: includeMetadata
          required: false
          type: boolean
        - default: true
          description: includeBinaries
          in: query
          name: includeBinaries
          required: false
          type: boolean
        - default: true
          description: includeCollaborators
          in: query
          name: includeCollaborators
          required: false
          type: boolean
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SnapshotCreationSuccessModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: copySnapshotToNewGame
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/{snapshotId}/copy/to/{targetApiKey}":
    post:
      consumes:
        - application/json
      operationId: copySnapshotToExistingGameUsingPOST_1
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
        - description: targetApiKey
          in: path
          name: targetApiKey
          required: true
          type: string
        - default: true
          description: includeGameConfig
          in: query
          name: includeGameConfig
          required: false
          type: boolean
        - default: true
          description: includeMetadata
          in: query
          name: includeMetadata
          required: false
          type: boolean
        - default: true
          description: includeBinaries
          in: query
          name: includeBinaries
          required: false
          type: boolean
        - default: true
          description: includeCollaborators
          in: query
          name: includeCollaborators
          required: false
          type: boolean
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SnapshotCreationSuccessModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: copySnapshotToExistingGame
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/{snapshotId}/publish":
    post:
      consumes:
        - application/json
      operationId: publishSnapshotUsingPOST_1
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: publishSnapshot
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/snapshots/{snapshotId}/unpublish":
    post:
      consumes:
        - application/json
      operationId: unpublishSnapshotUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: unpublishSnapshot
      tags:
        - snapshots
  "/restv2/game/{apiKey}/admin/testHarness/scenarios":
    get:
      consumes:
        - application/json
      operationId: getTestHarnessScenariosUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/TestHarnessScenarioModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getTestHarnessScenarios
      tags:
        - testHarness
    post:
      consumes:
        - application/json
      operationId: createTestHarnessScenarioUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: testHarnessScenarioDTO
          in: body
          name: testHarnessScenarioDTO
          required: true
          schema:
            $ref: "#/definitions/TestHarnessScenarioModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/TestHarnessScenarioModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createTestHarnessScenario
      tags:
        - testHarness
  "/restv2/game/{apiKey}/admin/testHarness/scenarios/{scenarioName}":
    delete:
      consumes:
        - application/json
      operationId: deleteTestHarnessScenarioUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: scenarioName
          in: path
          name: scenarioName
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteTestHarnessScenario
      tags:
        - testHarness
    get:
      consumes:
        - application/json
      operationId: getTestHarnessScenarioUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: scenarioName
          in: path
          name: scenarioName
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TestHarnessScenarioModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getTestHarnessScenario
      tags:
        - testHarness
    put:
      consumes:
        - application/json
      operationId: updateTestHarnessScenarioUsingPUT
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: scenarioName
          in: path
          name: scenarioName
          required: true
          type: string
        - description: testHarnessScenarioDTO
          in: body
          name: testHarnessScenarioDTO
          required: true
          schema:
            $ref: "#/definitions/TestHarnessScenarioModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TestHarnessScenarioModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateTestHarnessScenario
      tags:
        - testHarness
  "/restv2/game/{apiKey}/config/~credentials/{credentialName}/resetSecret":
    post:
      consumes:
        - application/json
      operationId: updateCredentialSecretUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: credentialName
          in: path
          name: credentialName
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: Resets the secret of a credential
      tags:
        - credentials
  "/restv2/game/{apiKey}/endpoints":
    get:
      consumes:
        - application/json
      operationId: getGamesEndpointsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GameEndpointsModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getGamesEndpoints
      tags:
        - gamesAdmin
  "/restv2/game/{apiKey}/manage/experiments":
    get:
      consumes:
        - application/json
      operationId: getExperimentsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ExperimentModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getExperiments
      tags:
        - experiments
    post:
      consumes:
        - application/json
      operationId: createExperimentUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: input
          in: body
          name: input
          required: true
          schema:
            $ref: "#/definitions/ExperimentModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ExperimentModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createExperiment
      tags:
        - experiments
  "/restv2/game/{apiKey}/manage/experiments/{id}":
    delete:
      consumes:
        - application/json
      operationId: deleteExperimentUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: id
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteExperiment
      tags:
        - experiments
    get:
      consumes:
        - application/json
      operationId: getExperimentUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: id
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ExperimentModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getExperiment
      tags:
        - experiments
    put:
      consumes:
        - application/json
      operationId: updateExperimentUsingPUT
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: id
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: input
          in: body
          name: input
          required: true
          schema:
            $ref: "#/definitions/ExperimentModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ExperimentModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateExperiment
      tags:
        - experiments
  "/restv2/game/{apiKey}/manage/experiments/{id}/{action}":
    post:
      consumes:
        - application/json
      operationId: doActionExperimentUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: id
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: action
          enum:
            - start
            - stop
            - publish
            - unpublish
          in: path
          name: action
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ExperimentModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: doActionExperiment
      tags:
        - experiments
  "/restv2/game/{apiKey}/manage/queries":
    get:
      consumes:
        - application/json
      operationId: listQueriesUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ManageItemSummary"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listQueries
      tags:
        - manage
    post:
      consumes:
        - application/json
      operationId: createQueryUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: query
          in: body
          name: query
          required: true
          schema:
            $ref: "#/definitions/ManageQuery"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageQuery"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createQuery
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/queries/{shortCode}":
    delete:
      consumes:
        - application/json
      operationId: deleteQueryUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteQuery
      tags:
        - manage
    get:
      consumes:
        - application/json
      operationId: getQueryUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageQuery"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getQuery
      tags:
        - manage
    put:
      consumes:
        - application/json
      operationId: updateQueryUsingPUT
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
        - description: query
          in: body
          name: query
          required: true
          schema:
            $ref: "#/definitions/ManageQuery"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageQuery"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateQuery
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/screens":
    get:
      consumes:
        - application/json
      operationId: listScreensUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ManageItemSummary"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listScreens
      tags:
        - manage
    post:
      consumes:
        - application/json
      operationId: createScreenUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: screen
          in: body
          name: screen
          required: true
          schema:
            $ref: "#/definitions/ManageScreen"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageScreen"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createScreen
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/screens/executable":
    get:
      consumes:
        - application/json
      operationId: listExecutableScreensUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ManageItemSummary"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listExecutableScreens
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/screens/{shortCode}":
    delete:
      consumes:
        - application/json
      operationId: deleteScreenUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteScreen
      tags:
        - manage
    get:
      consumes:
        - application/json
      operationId: getScreenUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageScreen"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getScreen
      tags:
        - manage
    put:
      consumes:
        - application/json
      operationId: updateScreenUsingPUT
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
        - description: screen
          in: body
          name: screen
          required: true
          schema:
            $ref: "#/definitions/ManageScreen"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageScreen"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateScreen
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snapshots":
    get:
      consumes:
        - application/json
      operationId: listSnapshotsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ManageSnapshot"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listSnapshots
      tags:
        - manage
    post:
      consumes:
        - application/json
      operationId: createSnapshotUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: model
          in: body
          name: model
          required: true
          schema:
            $ref: "#/definitions/SnapshotCreationModel"
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ManageSnapshot"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createSnapshot
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snapshots/{snapshotId}":
    delete:
      consumes:
        - application/json
      operationId: deleteSnapshotUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: success
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteSnapshot
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snapshots/{snapshotId}/copy/to/{targetApiKey}":
    post:
      consumes:
        - application/json
      operationId: copySnapshotToExistingGameUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
        - description: targetApiKey
          in: path
          name: targetApiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: copySnapshotToExistingGame
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snapshots/{snapshotId}/publish":
    post:
      consumes:
        - application/json
      operationId: publishSnapshotUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: publishSnapshot
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snapshots/{snapshotId}/revert":
    post:
      consumes:
        - application/json
      operationId: revertSnapshotUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snapshotId
          in: path
          name: snapshotId
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: revertSnapshot
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snippets":
    get:
      consumes:
        - application/json
      operationId: listSnippetsUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/ManageItemSummary"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listSnippets
      tags:
        - manage
    post:
      consumes:
        - application/json
      operationId: createSnippetUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: snippet
          in: body
          name: snippet
          required: true
          schema:
            $ref: "#/definitions/ManageSnippet"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageSnippet"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: createSnippet
      tags:
        - manage
  "/restv2/game/{apiKey}/manage/snippets/{shortCode}":
    delete:
      consumes:
        - application/json
      operationId: deleteSnippetUsingDELETE
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: deleteSnippet
      tags:
        - manage
    get:
      consumes:
        - application/json
      operationId: getSnippetUsingGET
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageSnippet"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getSnippet
      tags:
        - manage
    put:
      consumes:
        - application/json
      operationId: updateSnippetUsingPUT
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
        - description: shortCode
          in: path
          name: shortCode
          required: true
          type: string
        - description: snippet
          in: body
          name: snippet
          required: true
          schema:
            $ref: "#/definitions/ManageSnippet"
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ManageSnippet"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: updateSnippet
      tags:
        - manage
  "/restv2/game/{apiKey}/restore":
    post:
      consumes:
        - application/json
      operationId: restoreDeletedGameUsingPOST
      parameters:
        - description: apiKey
          in: path
          name: apiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/MessageModel"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: restoreDeletedGame
      tags:
        - gamesAdmin
  "/restv2/game/{gameApiKey}/region/{regionCode}":
    post:
      consumes:
        - application/json
      operationId: setGameRegionUsingPOST
      parameters:
        - description: gameApiKey
          in: path
          name: gameApiKey
          required: true
          type: string
        - description: regionCode
          in: path
          name: regionCode
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/RegionResult"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: setGameRegion
      tags:
        - region
  "/restv2/game/{gameApiKey}/regions":
    get:
      consumes:
        - application/json
      operationId: getGameRegionOptionsUsingGET
      parameters:
        - description: gameApiKey
          in: path
          name: gameApiKey
          required: true
          type: string
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GameRegionOptionsDTO"
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: getGameRegionOptions
      tags:
        - region
  /restv2/games:
    get:
      consumes:
        - application/json
      operationId: listUsingGET
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/GameModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: list
      tags:
        - gamesAdmin
  /restv2/games/deleted:
    get:
      consumes:
        - application/json
      operationId: listDeletedUsingGET
      produces:
        - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/DeletedGameModel"
            type: array
        "400":
          description: json error
          schema:
            $ref: "#/definitions/MessageModel"
        "403":
          description: not allowed
        "404":
          description: not found
      summary: listDeleted
      tags:
        - gamesAdmin
definitions:
  AnalyticsDataCountSwaggerModel:
    properties:
      result:
        type: string
    type: object
  AnalyticsDataSwaggerModel:
    properties:
      _id:
        type: string
    type: object
  BillingDetailsModel:
    properties:
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      email1:
        type: string
      email2:
        type: string
      email3:
        type: string
      firstName1:
        type: string
      firstName2:
        type: string
      firstName3:
        type: string
      lastName1:
        type: string
      lastName2:
        type: string
      lastName3:
        type: string
      postcode:
        type: string
      state:
        type: string
      street:
        type: string
      taxNumber:
        type: string
    required:
      - building
      - city
      - companyName
      - country
      - email1
      - firstName1
      - lastName1
      - postcode
      - street
    type: object
  DeletedGameModel:
    properties:
      apiKey:
        type: string
      name:
        type: string
    type: object
  ExperimentConfigModel:
    properties:
      playerMongoQuery:
        type: string
      playerQuery:
        type: string
      variants:
        type: string
    type: object
  ExperimentModel:
    properties:
      active:
        type: boolean
      changedFieldsAndInitialValues:
        type: object
      complete:
        type: boolean
      config:
        $ref: "#/definitions/ExperimentConfigModel"
      endDate:
        format: date-time
        type: string
      id:
        format: int64
        type: integer
      measurements:
        type: string
      measurementsEsQuery:
        type: string
      name:
        type: string
      percentHash:
        type: string
      publishedStages:
        items:
          type: string
        type: array
      startDate:
        format: date-time
        type: string
    type: object
  GameEndpointsModel:
    properties:
      liveElasticSearch:
        type: string
      liveNosql:
        type: string
      previewElasticSearch:
        type: string
      previewNosql:
        type: string
    type: object
  GameModel:
    properties:
      "@id":
        type: string
      name:
        type: string
    type: object
  GameRegionOptionDTO:
    properties:
      regionCode:
        type: string
      regionName:
        type: string
      selected:
        type: boolean
    type: object
  GameRegionOptionsDTO:
    properties:
      locked:
        type: boolean
      options:
        items:
          $ref: "#/definitions/GameRegionOptionDTO"
        type: array
    type: object
  GameSummaryModel:
    properties:
      logLevelData:
        items:
          type: object
        type: array
      logLevelSummary:
        items:
          $ref: "#/definitions/LogLevelSummaryModel"
        type: array
      message:
        type: string
    type: object
  LogLevelSummaryModel:
    properties:
      count:
        format: int64
        type: integer
      level:
        type: string
    type: object
  ManageItemSummary:
    properties:
      name:
        type: string
      shortCode:
        type: string
    type: object
  ManageQuery:
    properties:
      esRules:
        type: string
      name:
        type: string
      qbRules:
        type: string
      shortCode:
        type: string
    type: object
  ManageResult:
    properties:
      message:
        type: string
    type: object
  ManageScreen:
    properties:
      groups:
        items:
          type: string
        type: array
      name:
        type: string
      shortCode:
        type: string
      template:
        type: string
    type: object
  ManageSnapshot:
    properties:
      date:
        format: date-time
        type: string
      description:
        type: string
      id:
        type: string
      published:
        type: boolean
    type: object
  ManageSnippet:
    properties:
      groups:
        items:
          type: string
        type: array
      name:
        type: string
      script:
        type: string
      scriptData:
        type: string
      shortCode:
        type: string
      template:
        type: string
    type: object
  MessageModel:
    properties:
      message:
        type: string
    type: object
  Number:
    type: object
  PushNotificationTestModel:
    properties:
      customJson:
        type: string
      messageId:
        type: string
      pushId:
        type: string
      subtitle:
        type: string
      summary:
        type: string
      title:
        type: string
    type: object
  PushNotificationTestSummaryListModel:
    properties:
      summaries:
        items:
          $ref: "#/definitions/PushNotificationTestSummaryModel"
        type: array
    type: object
  PushNotificationTestSummaryModel:
    properties:
      error:
        type: boolean
      outgoingMessageParts:
        additionalProperties:
          type: string
        type: object
      resultParts:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  RegionResult:
    properties:
      message:
        type: string
    type: object
  ScriptsDifferenceListModel:
    properties:
      differences:
        items:
          $ref: "#/definitions/ScriptsDifferenceModel"
        type: array
    type: object
  ScriptsDifferenceModel:
    properties:
      bind:
        type: string
      changeType:
        enum:
          - NOCHANGE
          - ADDED
          - CHANGED
          - DELETED
          - IGNORED
          - CHANGED_CODE_INVALID
          - CHANGED_NAME_INVALID
        type: string
      fileName:
        type: string
      script1:
        type: string
      script2:
        type: string
      type:
        type: string
    type: object
  SegmentQueryFilterConfigModel:
    properties:
      customFilters:
        items:
          $ref: "#/definitions/SegmentQueryFilterModel"
        type: array
      hiddenFilters:
        items:
          type: string
        type: array
    type: object
  SegmentQueryFilterListModel:
    properties:
      filters:
        items:
          $ref: "#/definitions/SegmentQueryFilterModel"
        type: array
    type: object
  SegmentQueryFilterModel:
    properties:
      key:
        type: string
      name:
        type: string
      options:
        items:
          type: object
        type: array
      type:
        type: string
    type: object
  SnapshotCreationModel:
    properties:
      description:
        type: string
    type: object
  SnapshotCreationSuccessModel:
    properties:
      targetGameApiKey:
        type: string
    type: object
  SnapshotModel:
    properties:
      created:
        format: date-time
        type: string
      createdBy:
        type: string
      description:
        type: string
      id:
        type: string
      indexProgress:
        additionalProperties:
          format: int64
          type: integer
        type: object
      published:
        type: boolean
      status:
        type: string
    type: object
  SnapshotScriptVersionListModel:
    properties:
      scriptVersions:
        items:
          $ref: "#/definitions/SnapshotScriptVersionModel"
        type: array
    type: object
  SnapshotScriptVersionModel:
    properties:
      cloudCodeVersion:
        format: int64
        type: integer
      createdDate:
        format: date-time
        type: string
      description:
        type: string
      id:
        type: string
      live:
        type: boolean
    type: object
  TestHarnessScenarioModel:
    properties:
      scenarioJson:
        type: object
      scenarioName:
        type: string
    type: object
