openapi: 3.0.0
servers:
  - url: https://southcentralus.api.cognitive.microsoft.com/customvision/v3.0/training
  - url: "{Endpoint}/customvision/v3.0/training"
    variables:
      Endpoint:
        default: ""
        description: Supported Cognitive Services endpoints.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
info:
  contact:
    x-twitter: microsoft
  title: Custom Vision Training Client
  version: "3.0"
  x-apisguru-categories:
    - developer_tools
    - cloud
  x-logo:
    url: https://twitter.com/microsoft/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Training/stable/v3.0/Training.json
      version: "3.0"
  x-preferred: false
  x-providerName: microsoft.com
  x-serviceName: cognitiveservices-Training
  x-tags:
    - Microsoft
paths:
  /domains:
    get:
      operationId: GetDomains
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
            application/xml:
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
            text/xml:
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get a list of the available domains.
      tags:
        - DomainsApi
  "/domains/{domainId}":
    get:
      operationId: GetDomain
      parameters:
        - description: The id of the domain to get information about.
          examples:
            Successful GetDomain request:
              value: b30a91ae-e3c1-4f73-a81e-c270bff27c39
          in: path
          name: domainId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
              schema:
                $ref: "#/components/schemas/Domain"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get information about a specific domain.
      tags:
        - DomainsApi
  /projects:
    get:
      operationId: GetProjects
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
            application/xml:
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
            text/xml:
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get your projects.
      tags:
        - ProjectApi
    post:
      operationId: CreateProject
      parameters:
        - description: Name of the project.
          examples:
            Successful CreateProject request:
              value: My New Project
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The description of the project.
          examples:
            Successful CreateProject request:
              value: A test project
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: The id of the domain to use for this project. Defaults to General.
          examples:
            Successful CreateProject request:
              value: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          in: query
          name: domainId
          required: false
          schema:
            format: uuid
            type: string
        - description: The type of classifier to create for this project.
          in: query
          name: classificationType
          required: false
          schema:
            enum:
              - Multiclass
              - Multilabel
            type: string
        - description: List of platforms the trained model is intending exporting to.
          explode: false
          in: query
          name: targetExportPlatforms
          required: false
          schema:
            items:
              enum:
                - CoreML
                - TensorFlow
                - DockerFile
                - ONNX
                - VAIDK
              type: string
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            application/xml:
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            text/xml:
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Create a project.
      tags:
        - ProjectApi
  "/projects/{projectId}":
    delete:
      operationId: DeleteProject
      parameters:
        - description: The project id.
          examples:
            Successful DeleteProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete a specific project.
      tags:
        - ProjectApi
    get:
      operationId: GetProject
      parameters:
        - description: The id of the project to get.
          examples:
            Successful GetProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            application/xml:
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            text/xml:
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
              schema:
                $ref: "#/components/schemas/Project"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get a specific project.
      tags:
        - ProjectApi
    patch:
      operationId: UpdateProject
      parameters:
        - description: The id of the project to update.
          examples:
            Successful UpdateProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Project"
          application/xml:
            schema:
              $ref: "#/components/schemas/Project"
          text/xml:
            schema:
              $ref: "#/components/schemas/Project"
        description: The updated project model.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            application/xml:
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
            text/xml:
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
              schema:
                $ref: "#/components/schemas/Project"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Update a specific project.
      tags:
        - ProjectApi
  "/projects/{projectId}/images":
    delete:
      operationId: DeleteImages
      parameters:
        - description: The project id.
          examples:
            Successful DeleteImages request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Ids of the images to be deleted. Limited to 256 images per batch.
          examples:
            Successful DeleteImages request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          explode: false
          in: query
          name: imageIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 256
            minItems: 0
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete images from the set of training images.
      tags:
        - ImageApi
    post:
      description: "This API accepts body content as multipart/form-data and application/octet-stream. When using multipart\r

        multiple image files can be sent at once, with a maximum of 64 files"
      operationId: CreateImagesFromData
      parameters:
        - description: The project id.
          examples:
            Successful CreateImagesFromData request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tags ids with which to tag each image. Limited to 20.
          examples:
            Successful CreateImagesFromData request:
              value:
                - b607964f-7bd6-4a3b-a869-6791fb6aab87
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            application/xml:
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            text/xml:
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Add the provided images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/files":
    post:
      description: This API accepts a batch of files, and optionally tags, to create images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromFiles
      parameters:
        - description: The project id.
          examples:
            Successful CreateImagesFromFiles request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
        description: The batch of image files to add. Limited to 64 images and 20 tags per batch.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            application/xml:
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            text/xml:
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Add the provided batch of images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/id":
    get:
      description: "This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetImagesByIds
      parameters:
        - description: The project id.
          examples:
            Successful GetImagesByIds request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The list of image ids to retrieve. Limited to 256.
          explode: false
          in: query
          name: imageIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 256
            minItems: 0
            type: array
          style: form
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetImagesByIds request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            application/xml:
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            text/xml:
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get images by id for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/predictions":
    post:
      description: This API creates a batch of images from predicted images specified. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromPredictions
      parameters:
        - description: The project id.
          examples:
            Successful CreateImagesFromPredictions request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
        description: Image and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictions_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            application/xml:
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictions_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            text/xml:
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictions_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Add the specified predicted images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/regions":
    delete:
      operationId: DeleteImageRegions
      parameters:
        - description: The project id.
          examples:
            Successful DeleteImageRegions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Regions to delete. Limited to 64.
          examples:
            Successful DeleteImageRegions request:
              value:
                - ""
          explode: false
          in: query
          name: regionIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete a set of image regions.
      tags:
        - ImageApi
    post:
      description: "This API accepts a batch of image regions, and optionally tags, to update existing images with region information.\r

        There is a limit of 64 entries in the batch."
      operationId: CreateImageRegions
      parameters:
        - description: The project id.
          examples:
            Successful CreateImageRegions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
        description: Batch of image regions which include a tag and bounding box. Limited to 64.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
            application/xml:
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
            text/xml:
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Create a set of image regions.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tagged":
    get:
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetTaggedImages
      parameters:
        - description: The project id.
          examples:
            Successful GetTaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetTaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: A list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20.
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: Number of images to skip before beginning the image batch. Defaults to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            application/xml:
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            text/xml:
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get tagged images for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tagged/count":
    get:
      description: "The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetTaggedImageCount
      parameters:
        - description: The project id.
          examples:
            Successful GetTaggedImageCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetTaggedImageCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: A list of tags ids to filter the images to count. Defaults to all tags when null.
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_request"
              schema:
                format: int32
                type: integer
            application/xml:
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_request"
              schema:
                format: int32
                type: integer
            text/xml:
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_request"
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Gets the number of images tagged with the provided {tagIds}.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tags":
    delete:
      operationId: DeleteImageTags
      parameters:
        - description: The project id.
          examples:
            Successful DeleteImageTags request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Image ids. Limited to 64 images.
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          explode: false
          in: query
          name: imageIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - description: Tags to be deleted from the specified images. Limited to 20 tags.
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          explode: false
          in: query
          name: tagIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Remove a set of tags from a set of images.
      tags:
        - ImageApi
    post:
      operationId: CreateImageTags
      parameters:
        - description: The project id.
          examples:
            Successful CreateImageTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
        description: Batch of image tags. Limited to 128 tags per batch.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
            application/xml:
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
            text/xml:
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Associate a set of images with a set of tags.
      tags:
        - ImageApi
  "/projects/{projectId}/images/untagged":
    get:
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images to return in a given batch."
      operationId: GetUntaggedImages
      parameters:
        - description: The project id.
          examples:
            Successful GetUntaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetUntaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: Number of images to skip before beginning the image batch. Defaults to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            application/xml:
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
            text/xml:
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get untagged images for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/untagged/count":
    get:
      description: "This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetUntaggedImageCount
      parameters:
        - description: The project id.
          examples:
            Successful GetUntaggedImageCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetUntaggedImageCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_request"
              schema:
                format: int32
                type: integer
            application/xml:
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_request"
              schema:
                format: int32
                type: integer
            text/xml:
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_request"
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Gets the number of untagged images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/urls":
    post:
      description: This API accepts a batch of urls, and optionally tags, to create images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromUrls
      parameters:
        - description: The project id.
          examples:
            Successful CreateImagesFromUrls request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
        description: Image urls and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            application/xml:
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
            text/xml:
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_request"
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Add the provided images urls to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/{imageId}/regionproposals":
    post:
      description: This API will get region proposals for an image along with confidences for the region. It returns an empty array if no proposals are found.
      operationId: GetImageRegionProposals
      parameters:
        - description: The project id.
          examples:
            Successful GetImageRegionProposals request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The image id.
          examples:
            Successful GetImageRegionProposals request:
              value: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
          in: path
          name: imageId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetImageRegionProposals request:
                  $ref: "#/components/examples/Successful_GetImageRegionProposals_request"
              schema:
                $ref: "#/components/schemas/ImageRegionProposal"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get region proposals for an image. Returns empty array if no proposals are found.
      tags:
        - ImageRegionProposalApi
  "/projects/{projectId}/iterations":
    get:
      operationId: GetIterations
      parameters:
        - description: The project id.
          examples:
            Successful GetIterations request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
            application/xml:
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
            text/xml:
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get iterations for the project.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}":
    delete:
      operationId: DeleteIteration
      parameters:
        - description: The project id.
          examples:
            Successful DeleteIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          examples:
            Successful DeleteIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete a specific iteration of a project.
      tags:
        - ProjectApi
    get:
      operationId: GetIteration
      parameters:
        - description: The id of the project the iteration belongs to.
          examples:
            Successful GetIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the iteration to get.
          examples:
            Successful GetIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            application/xml:
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            text/xml:
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get a specific iteration.
      tags:
        - ProjectApi
    patch:
      operationId: UpdateIteration
      parameters:
        - description: Project id.
          examples:
            Successful UpdateIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Iteration id.
          examples:
            Successful UpdateIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
          text/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
        description: The updated iteration model.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            application/xml:
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            text/xml:
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
              schema:
                $ref: "#/components/schemas/Iteration"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Update a specific iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/export":
    get:
      operationId: GetExports
      parameters:
        - description: The project id.
          examples:
            Successful GetExports request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          examples:
            Successful GetExports request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
            application/xml:
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
            text/xml:
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get the list of exports for a specific iteration.
      tags:
        - ProjectApi
    post:
      operationId: ExportIteration
      parameters:
        - description: The project id.
          examples:
            Successful ExportIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          examples:
            Successful ExportIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The target platform.
          examples:
            Successful ExportIteration request:
              value: TensorFlow
          in: query
          name: platform
          required: true
          schema:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            type: string
        - description: The flavor of the target platform.
          in: query
          name: flavor
          required: false
          schema:
            enum:
              - Linux
              - Windows
              - ONNX10
              - ONNX12
              - ARM
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
              schema:
                $ref: "#/components/schemas/Export"
            application/xml:
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
              schema:
                $ref: "#/components/schemas/Export"
            text/xml:
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
              schema:
                $ref: "#/components/schemas/Export"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Export a trained iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance":
    get:
      operationId: GetIterationPerformance
      parameters:
        - description: The id of the project the iteration belongs to.
          examples:
            Successful GetIterationPerformance request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the iteration to get.
          examples:
            Successful GetIterationPerformance request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The threshold used to determine true predictions.
          examples:
            Successful GetIterationPerformance request:
              value: 0.9
          in: query
          name: threshold
          required: false
          schema:
            format: float
            type: number
        - description: If applicable, the bounding box overlap threshold used to determine true predictions.
          in: query
          name: overlapThreshold
          required: false
          schema:
            format: float
            type: number
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_request"
              schema:
                $ref: "#/components/schemas/IterationPerformance"
            application/xml:
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_request"
              schema:
                $ref: "#/components/schemas/IterationPerformance"
            text/xml:
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_request"
              schema:
                $ref: "#/components/schemas/IterationPerformance"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get detailed performance information about an iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance/images":
    get:
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetImagePerformances
      parameters:
        - description: The project id.
          examples:
            Successful GetImagePerformances request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetImagePerformances request:
              value: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: A list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20.
          examples:
            Successful GetImagePerformances request:
              value:
                - ""
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - description: The ordering. Defaults to newest.
          examples:
            Successful GetImagePerformances request:
              value: Newest
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: Number of images to skip before beginning the image batch. Defaults to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_request"
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
            application/xml:
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_request"
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
            text/xml:
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_request"
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get image with its prediction for a given project iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance/images/count":
    get:
      description: "The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetImagePerformanceCount
      parameters:
        - description: The project id.
          examples:
            Successful GetImagePerformanceCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          examples:
            Successful GetImagePerformanceCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: A list of tags ids to filter the images to count. Defaults to all tags when null.
          examples:
            Successful GetImagePerformanceCount request:
              value:
                - b5f7e6a2-a481-49a6-afec-a7cef1af3544
          explode: false
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_request"
              schema:
                format: int32
                type: integer
            application/xml:
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_request"
              schema:
                format: int32
                type: integer
            text/xml:
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_request"
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: "Gets the number of images tagged with the provided {tagIds} that have prediction results from\r

        training for the provided iteration {iterationId}."
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/publish":
    delete:
      operationId: UnpublishIteration
      parameters:
        - description: The project id.
          examples:
            Successful UnpublishIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          examples:
            Successful UnpublishIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Unpublish a specific iteration.
      tags:
        - ProjectApi
    post:
      operationId: PublishIteration
      parameters:
        - description: The project id.
          examples:
            Successful PublishIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          examples:
            Successful PublishIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The name to give the published iteration.
          examples:
            Successful PublishIteration request:
              value: Model1
          in: query
          name: publishName
          required: true
          schema:
            type: string
        - description: The id of the prediction resource to publish to.
          examples:
            Successful PublishIteration request:
              value: /subscriptions/{subscription}/resourceGroups/{resource group name}/providers/Microsoft.CognitiveServices/accounts/{resource name}
          in: query
          name: predictionId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
              schema:
                type: boolean
            application/xml:
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
              schema:
                type: boolean
            text/xml:
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
              schema:
                type: boolean
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Publish a specific iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/predictions":
    delete:
      operationId: DeletePrediction
      parameters:
        - description: The project id.
          examples:
            Successful DeletePrediction request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The prediction ids. Limited to 64.
          examples:
            Successful DeletePrediction request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
          explode: false
          in: query
          name: ids
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete a set of predicted images and their associated prediction results.
      tags:
        - PredictionsApi
  "/projects/{projectId}/predictions/query":
    post:
      operationId: QueryPredictions
      parameters:
        - description: The project id.
          examples:
            Successful QueryPredictions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          text/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
        description: Parameters used to query the predictions. Limited to combining 2 tags.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
            application/xml:
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
            text/xml:
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get images that were sent to your prediction endpoint.
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/image":
    post:
      operationId: QuickTestImage
      parameters:
        - description: The project id.
          examples:
            Successful QuickTestImage request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified."
          examples:
            Successful QuickTestImage request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Quick test an image.
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/url":
    post:
      operationId: QuickTestImageUrl
      parameters:
        - description: The project to evaluate against.
          examples:
            Successful QuickTestImageUrl request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified."
          examples:
            Successful QuickTestImageUrl request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
        description: An ImageUrl that contains the url of the image to be evaluated.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Quick test an image url.
      tags:
        - PredictionsApi
  "/projects/{projectId}/tags":
    get:
      operationId: GetTags
      parameters:
        - description: The project id.
          examples:
            Successful GetTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
            application/xml:
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
            text/xml:
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get the tags for a given project and iteration.
      tags:
        - TagsApi
    post:
      operationId: CreateTag
      parameters:
        - description: The project id.
          examples:
            Successful CreateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag name.
          examples:
            Successful CreateTag request:
              value: Tag1
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Optional description for the tag.
          examples:
            Successful CreateTag request:
              value: Description of Tag1
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Optional type for the tag.
          in: query
          name: type
          required: false
          schema:
            enum:
              - Regular
              - Negative
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            application/xml:
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            text/xml:
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Create a tag for the project.
      tags:
        - TagsApi
  "/projects/{projectId}/tags/{tagId}":
    delete:
      operationId: DeleteTag
      parameters:
        - description: The project id.
          examples:
            Successful DeleteTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Id of the tag to be deleted.
          examples:
            Successful DeleteTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Delete a tag from the project.
      tags:
        - TagsApi
    get:
      operationId: GetTag
      parameters:
        - description: The project this tag belongs to.
          examples:
            Successful GetTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag id.
          examples:
            Successful GetTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration to retrieve this tag from. Optional, defaults to current training set.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            application/xml:
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            text/xml:
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Get information about a specific tag.
      tags:
        - TagsApi
    patch:
      operationId: UpdateTag
      parameters:
        - description: The project id.
          examples:
            Successful UpdateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the target tag.
          examples:
            Successful UpdateTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Tag"
          application/xml:
            schema:
              $ref: "#/components/schemas/Tag"
          text/xml:
            schema:
              $ref: "#/components/schemas/Tag"
        description: The updated tag model.
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            application/xml:
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
            text/xml:
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
              schema:
                $ref: "#/components/schemas/Tag"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Update a tag.
      tags:
        - TagsApi
  "/projects/{projectId}/train":
    post:
      operationId: TrainProject
      parameters:
        - description: The project id.
          examples:
            Successful TrainProject request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "The type of training to use to train the project (default: Regular)."
          in: query
          name: trainingType
          required: false
          schema:
            enum:
              - Regular
              - Advanced
            type: string
        - description: The number of hours reserved as budget for training (if applicable).
          in: query
          name: reservedBudgetInHours
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: "Whether to force train even if dataset and configuration does not change (default: false)."
          in: query
          name: forceTrain
          required: false
          schema:
            default: false
            type: boolean
        - description: "The email address to send notification to when training finishes (default: null)."
          in: query
          name: notificationEmailAddress
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            application/xml:
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
              schema:
                $ref: "#/components/schemas/Iteration"
            text/xml:
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
              schema:
                $ref: "#/components/schemas/Iteration"
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
          description: Error response
      summary: Queues project for training.
      tags:
        - ProjectApi
components:
  examples:
    Successful_CreateImageRegions_request:
      value:
        created: []
        duplicated: []
        exceeded: []
    Successful_CreateImageTags_request:
      value:
        created:
          - imageId: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
    Successful_CreateImagesFromData_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
          - image:
              created: 2017-12-19T15:56:10Z
              height: 1531
              id: f1855a92-b873-47e7-b513-f07a667ceda1
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 900
            sourceUrl: '"hemlock_6.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_CreateImagesFromFiles_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_CreateImagesFromPredictions_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_CreateImagesFromUrls_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag name
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: "{url to image}"
            status: OK
        isBatchSuccessful: true
    Successful_CreateProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A test project
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:18Z
        name: My New Project
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_CreateTag_request:
      value:
        description: Description of Tag1
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Tag1
        type: Regular
    Successful_ExportIteration_request:
      value:
        downloadUri: ""
        newerVersionAvailable: false
        platform: TensorFlow
        status: Exporting
    Successful_GetDomain_request:
      value:
        enabled: true
        exportable: false
        id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
        name: Retail
        type: Classification
    Successful_GetDomains_request:
      value:
        - enabled: true
          exportable: false
          id: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          name: General
          type: Classification
        - enabled: true
          exportable: false
          id: c151d5b5-dd07-472a-acc8-15d29dea8518
          name: Food
          type: Classification
        - enabled: true
          exportable: false
          id: ca455789-012d-4b50-9fec-5bb63841c793
          name: Landmarks
          type: Classification
        - enabled: true
          exportable: false
          id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
          name: Retail
          type: Classification
        - enabled: true
          exportable: false
          id: 45badf75-3591-4f26-a705-45678d3e9f5f
          name: Adult
          type: Classification
        - enabled: true
          exportable: false
          id: 0732100f-1a38-4e49-a514-c9b44c697ab5
          name: General (compact)
          type: Classification
        - enabled: true
          exportable: false
          id: b5cfd229-2ac7-4b2b-8d0a-2b0661344894
          name: Landmarks (compact)
          type: Classification
        - enabled: true
          exportable: false
          id: 6b4faeda-8396-481b-9f8b-177b9fa3097f
          name: Retail (compact)
          type: Classification
    Successful_GetExports_request:
      value:
        - downloadUri: "{Download URI}"
          newerVersionAvailable: false
          platform: TensorFlow
          status: Done
    Successful_GetImagePerformanceCount_request:
      value: "1"
    Successful_GetImagePerformances_request:
      value:
        - created: 2018-01-31T20:18:26Z
          height: 1600
          id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
          imageUri: <image uri>
          predictions:
            - boundingBox:
                height: 0.25
                left: 0.25
                top: 0.25
                width: 0.25
              probability: 1
              tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              tagName: Tag 1
          regions: []
          tags: []
          thumbnailUri: <thumbnail uri>
          width: 600
    Successful_GetImageRegionProposals_request:
      value:
        imageId: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
        projectId: bc3f7dad-5544-468c-8573-3ef04d55463e
        proposals:
          - boundingBox:
              height: 0.25
              left: 0.25
              top: 0.25
              width: 0.25
            confidence: 0.25
    Successful_GetImagesByIds_request:
      value: []
    Successful_GetIterationPerformance_request:
      value:
        perTagPerformance:
          - id: e31ff107-5505-4753-be42-b369b21b026c
            name: Hemlock
            precision: 1
            precisionStdDeviation: 0
            recall: 1
            recallStdDeviation: 0
          - id: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            name: Japanese Cherry
            precision: 1
            precisionStdDeviation: 0
            recall: 1
            recallStdDeviation: 0
        precision: 1
        precisionStdDeviation: 0
        recall: 1
        recallStdDeviation: 0
    Successful_GetIteration_request:
      value:
        created: 2017-12-18T22:40:36Z
        domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:47:02Z
        name: Iteration 2
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Completed
        trainedAt: 2017-12-19T15:47:02Z
        trainingType: Regular
    Successful_GetIterations_request:
      value:
        - created: 2017-12-18T22:40:29Z
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          lastModified: 2017-12-18T22:40:41Z
          name: Iteration 1
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: ""
          reservedBudgetInHours: 0
          status: Completed
          trainedAt: 2017-12-18T22:40:41Z
          trainingType: Regular
        - created: 2017-12-18T22:40:36Z
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          lastModified: 2017-12-19T15:47:02Z
          name: Iteration 2
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: model1
          reservedBudgetInHours: 5
          status: Completed
          trainedAt: 2017-12-19T15:47:02Z
          trainingType: Regular
        - created: 2017-12-19T15:46:59Z
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: 3adaf7b2-18fc-4376-9da4-b5ea160a7cf5
          lastModified: 2017-12-19T15:46:59Z
          name: Iteration 3
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: ""
          reservedBudgetInHours: 0
          status: New
          trainingType: Regular
    Successful_GetProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A test project
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:18Z
        name: My New Project
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_GetProjects_request:
      value:
        - created: 2017-12-18T05:43:18Z
          description: ""
          id: bc3f7dad-5544-468c-8573-3ef04d55463e
          lastModified: 2017-12-18T05:43:18Z
          name: My New Project
          settings:
            domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          thumbnailUri: ""
    Successful_GetTag_request:
      value:
        description: Description of Tag1
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Tag1
        type: Regular
    Successful_GetTaggedImageCount_request:
      value: "10"
    Successful_GetTaggedImages_request:
      value: []
    Successful_GetTags_request:
      value:
        - description: Description of Tag1
          id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
          imageCount: 0
          name: Tag1
          type: Regular
    Successful_GetUntaggedImageCount_request:
      value: "10"
    Successful_GetUntaggedImages_request:
      value: []
    Successful_PublishIteration_request:
      value: true
    Successful_QueryPredictions_request:
      value:
        results:
          - created: 2018-01-31T20:18:26Z
            domain: b30a91ae-e3c1-4f73-a81e-c270bff27c39
            id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
            iteration: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
            originalImageUri: <image uri>
            predictions:
              - probability: 1
                tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
                tagName: Tag 1
              - probability: 3.60627153e-12
                tagId: 45619cda-d1c9-4bc8-a3e1-87c5d81adbc3
                tagName: Tag 2
            project: 8988643a-ae70-447d-9a22-15c4255e5ecb
            resizedImageUri: <resized image uri>
            thumbnailUri: <thumbnail uri>
        token:
          application: ""
          continuation: ""
          maxCount: 0
          orderBy: Newest
          session: 1:286613
          tags:
            - id: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              maxThreshold: 1
              minThreshold: 0.9
    Successful_QuickTestImageUrl_request:
      value:
        created: 2017-12-19T14:21:41Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_QuickTestImage_request:
      value:
        created: 2017-12-19T14:21:41Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_TrainProject_request:
      value:
        created: 2017-12-18T22:40:36Z
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:46:58Z
        name: Iteration 2
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Training
        trainingType: Regular
    Successful_UpdateIteration_request:
      value:
        created: 2017-12-18T22:40:36Z
        domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:53:07Z
        name: Best Iteration
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Completed
        trainedAt: 2017-12-19T15:47:02Z
        trainingType: Regular
    Successful_UpdateProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A new Description
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:19Z
        name: New Project Name
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_UpdateTag_request:
      value:
        description: Better description
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Better Tag Name
        type: Regular
  parameters:
    ApiKey:
      description: API key.
      examples:
        Successful CreateImageRegions request:
          value: "{API Key}"
        Successful CreateImageTags request:
          value: "{API Key}"
        Successful CreateImagesFromData request:
          value: "{API Key}"
        Successful CreateImagesFromFiles request:
          value: "{API Key}"
        Successful CreateImagesFromPredictions request:
          value: "{API Key}"
        Successful CreateImagesFromUrls request:
          value: "{API Key}"
        Successful CreateProject request:
          value: "{API Key}"
        Successful CreateTag request:
          value: "{API Key}"
        Successful DeleteImageRegions request:
          value: "{API Key}"
        Successful DeleteImageTags request:
          value: "{API Key}"
        Successful DeleteImages request:
          value: "{API Key}"
        Successful DeleteIteration request:
          value: "{API Key}"
        Successful DeletePrediction request:
          value: "{API Key}"
        Successful DeleteProject request:
          value: "{API Key}"
        Successful DeleteTag request:
          value: "{API Key}"
        Successful ExportIteration request:
          value: "{API Key}"
        Successful GetDomain request:
          value: "{API Key}"
        Successful GetDomains request:
          value: "{API Key}"
        Successful GetExports request:
          value: "{API Key}"
        Successful GetImagePerformanceCount request:
          value: "{API Key}"
        Successful GetImagePerformances request:
          value: "{API Key}"
        Successful GetImageRegionProposals request:
          value: "{API Key}"
        Successful GetImagesByIds request:
          value: "{API Key}"
        Successful GetIteration request:
          value: "{API Key}"
        Successful GetIterationPerformance request:
          value: "{API Key}"
        Successful GetIterations request:
          value: "{API Key}"
        Successful GetProject request:
          value: "{API Key}"
        Successful GetProjects request:
          value: "{API Key}"
        Successful GetTag request:
          value: "{API Key}"
        Successful GetTaggedImageCount request:
          value: "{API Key}"
        Successful GetTaggedImages request:
          value: "{API Key}"
        Successful GetTags request:
          value: "{API Key}"
        Successful GetUntaggedImageCount request:
          value: "{API Key}"
        Successful GetUntaggedImages request:
          value: "{API Key}"
        Successful PublishIteration request:
          value: "{API Key}"
        Successful QueryPredictions request:
          value: "{API Key}"
        Successful QuickTestImage request:
          value: "{API Key}"
        Successful QuickTestImageUrl request:
          value: "{API Key}"
        Successful TrainProject request:
          value: "{API Key}"
        Successful UnpublishIteration request:
          value: "{API Key}"
        Successful UpdateIteration request:
          value: "{API Key}"
        Successful UpdateProject request:
          value: "{API Key}"
        Successful UpdateTag request:
          value: "{API Key}"
      in: header
      name: Training-Key
      required: true
      schema:
        type: string
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
    Endpoint:
      description: Supported Cognitive Services endpoints.
      in: path
      name: Endpoint
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    CreateImagesFromData:
      content:
        multipart/form-data:
          schema:
            properties:
              imageData:
                description: Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 6MB.
                format: binary
                type: string
            required:
              - imageData
            type: object
      required: true
  schemas:
    BoundingBox:
      description: Bounding box that defines a region of an image.
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - left
        - top
        - width
        - height
      type: object
    CustomVisionError:
      properties:
        code:
          description: The error code.
          enum:
            - NoError
            - BadRequest
            - BadRequestExceededBatchSize
            - BadRequestNotSupported
            - BadRequestInvalidIds
            - BadRequestProjectName
            - BadRequestProjectNameNotUnique
            - BadRequestProjectDescription
            - BadRequestProjectUnknownDomain
            - BadRequestProjectUnknownClassification
            - BadRequestProjectUnsupportedDomainTypeChange
            - BadRequestProjectUnsupportedExportPlatform
            - BadRequestIterationName
            - BadRequestIterationNameNotUnique
            - BadRequestIterationDescription
            - BadRequestIterationIsNotTrained
            - BadRequestWorkspaceCannotBeModified
            - BadRequestWorkspaceNotDeletable
            - BadRequestTagName
            - BadRequestTagNameNotUnique
            - BadRequestTagDescription
            - BadRequestTagType
            - BadRequestMultipleNegativeTag
            - BadRequestImageTags
            - BadRequestImageRegions
            - BadRequestNegativeAndRegularTagOnSameImage
            - BadRequestRequiredParamIsNull
            - BadRequestIterationIsPublished
            - BadRequestInvalidPublishName
            - BadRequestInvalidPublishTarget
            - BadRequestUnpublishFailed
            - BadRequestIterationNotPublished
            - BadRequestSubscriptionApi
            - BadRequestExceedProjectLimit
            - BadRequestExceedIterationPerProjectLimit
            - BadRequestExceedTagPerProjectLimit
            - BadRequestExceedTagPerImageLimit
            - BadRequestExceededQuota
            - BadRequestCannotMigrateProjectWithName
            - BadRequestNotLimitedTrial
            - BadRequestImageBatch
            - BadRequestImageStream
            - BadRequestImageUrl
            - BadRequestImageFormat
            - BadRequestImageSizeBytes
            - BadRequestImageExceededCount
            - BadRequestTrainingNotNeeded
            - BadRequestTrainingNotNeededButTrainingPipelineUpdated
            - BadRequestTrainingValidationFailed
            - BadRequestClassificationTrainingValidationFailed
            - BadRequestMultiClassClassificationTrainingValidationFailed
            - BadRequestMultiLabelClassificationTrainingValidationFailed
            - BadRequestDetectionTrainingValidationFailed
            - BadRequestTrainingAlreadyInProgress
            - BadRequestDetectionTrainingNotAllowNegativeTag
            - BadRequestInvalidEmailAddress
            - BadRequestDomainNotSupportedForAdvancedTraining
            - BadRequestExportPlatformNotSupportedForAdvancedTraining
            - BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
            - BadRequestExportValidationFailed
            - BadRequestExportAlreadyInProgress
            - BadRequestPredictionIdsMissing
            - BadRequestPredictionIdsExceededCount
            - BadRequestPredictionTagsExceededCount
            - BadRequestPredictionResultsExceededCount
            - BadRequestPredictionInvalidApplicationName
            - BadRequestPredictionInvalidQueryParameters
            - BadRequestInvalid
            - UnsupportedMediaType
            - Forbidden
            - ForbiddenUser
            - ForbiddenUserResource
            - ForbiddenUserSignupDisabled
            - ForbiddenUserSignupAllowanceExceeded
            - ForbiddenUserDoesNotExist
            - ForbiddenUserDisabled
            - ForbiddenUserInsufficientCapability
            - ForbiddenDRModeEnabled
            - ForbiddenInvalid
            - NotFound
            - NotFoundProject
            - NotFoundProjectDefaultIteration
            - NotFoundIteration
            - NotFoundIterationPerformance
            - NotFoundTag
            - NotFoundImage
            - NotFoundDomain
            - NotFoundApimSubscription
            - NotFoundInvalid
            - Conflict
            - ConflictInvalid
            - ErrorUnknown
            - ErrorProjectInvalidWorkspace
            - ErrorProjectInvalidPipelineConfiguration
            - ErrorProjectInvalidDomain
            - ErrorProjectTrainingRequestFailed
            - ErrorProjectExportRequestFailed
            - ErrorFeaturizationServiceUnavailable
            - ErrorFeaturizationQueueTimeout
            - ErrorFeaturizationInvalidFeaturizer
            - ErrorFeaturizationAugmentationUnavailable
            - ErrorFeaturizationUnrecognizedJob
            - ErrorFeaturizationAugmentationError
            - ErrorExporterInvalidPlatform
            - ErrorExporterInvalidFeaturizer
            - ErrorExporterInvalidClassifier
            - ErrorPredictionServiceUnavailable
            - ErrorPredictionModelNotFound
            - ErrorPredictionModelNotCached
            - ErrorPrediction
            - ErrorPredictionStorage
            - ErrorRegionProposal
            - ErrorInvalid
          type: string
          x-ms-enum:
            modelAsString: true
            name: CustomVisionErrorCodes
        message:
          description: A message explaining the error reported by the service.
          type: string
      required:
        - code
        - message
      type: object
    Domain:
      properties:
        enabled:
          nullable: false
          readOnly: true
          type: boolean
        exportable:
          nullable: false
          readOnly: true
          type: boolean
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        name:
          nullable: false
          readOnly: true
          type: string
        type:
          enum:
            - Classification
            - ObjectDetection
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: DomainType
      type: object
    Export:
      properties:
        downloadUri:
          description: URI used to download the model.
          nullable: false
          readOnly: true
          type: string
        flavor:
          description: Flavor of the export.
          enum:
            - Linux
            - Windows
            - ONNX10
            - ONNX12
            - ARM
          nullable: true
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportFlavor
        newerVersionAvailable:
          description: Indicates an updated version of the export package is available and should be re-exported for the latest changes.
          nullable: false
          readOnly: true
          type: boolean
        platform:
          description: Platform of the export.
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportPlatform
        status:
          description: Status of the export.
          enum:
            - Exporting
            - Failed
            - Done
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportStatus
      type: object
    Image:
      description: Image model to be sent as JSON.
      properties:
        created:
          description: Date the image was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height of the image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        id:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        originalImageUri:
          description: The URI to the original uploaded image.
          nullable: false
          readOnly: true
          type: string
        regions:
          description: Regions associated with this image.
          items:
            $ref: "#/components/schemas/ImageRegion"
          nullable: true
          readOnly: true
          type: array
        resizedImageUri:
          description: The URI to the (resized) image used for training.
          nullable: false
          readOnly: true
          type: string
        tags:
          description: Tags associated with this image.
          items:
            $ref: "#/components/schemas/ImageTag"
          nullable: true
          readOnly: true
          type: array
        thumbnailUri:
          description: The URI to the thumbnail of the original image.
          nullable: false
          readOnly: true
          type: string
        width:
          description: Width of the image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    ImageCreateResult:
      properties:
        image:
          $ref: "#/components/schemas/Image"
        sourceUrl:
          description: Source URL of the image.
          nullable: false
          readOnly: true
          type: string
        status:
          description: Status of the image creation.
          enum:
            - OK
            - OKDuplicate
            - ErrorSource
            - ErrorImageFormat
            - ErrorImageSize
            - ErrorStorage
            - ErrorLimitExceed
            - ErrorTagLimitExceed
            - ErrorRegionLimitExceed
            - ErrorUnknown
            - ErrorNegativeAndRegularTagOnSameImage
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ImageCreateStatus
      type: object
    ImageCreateSummary:
      properties:
        images:
          description: List of the image creation results.
          items:
            $ref: "#/components/schemas/ImageCreateResult"
          readOnly: true
          type: array
        isBatchSuccessful:
          description: True if all of the images in the batch were created successfully, otherwise false.
          nullable: false
          readOnly: true
          type: boolean
      type: object
    ImageFileCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageFileCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageFileCreateEntry:
      properties:
        contents:
          format: byte
          nullable: false
          readOnly: false
          type: string
        name:
          nullable: false
          readOnly: false
          type: string
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageIdCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageIdCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageIdCreateEntry:
      properties:
        id:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImagePerformance:
      description: Image performance model.
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        imageUri:
          nullable: false
          readOnly: true
          type: string
        predictions:
          items:
            $ref: "#/components/schemas/Prediction"
          nullable: true
          readOnly: true
          type: array
        regions:
          items:
            $ref: "#/components/schemas/ImageRegion"
          nullable: true
          readOnly: true
          type: array
        tags:
          items:
            $ref: "#/components/schemas/ImageTag"
          nullable: true
          readOnly: true
          type: array
        thumbnailUri:
          nullable: false
          readOnly: true
          type: string
        width:
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    ImagePrediction:
      description: Result of an image prediction request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageRegion:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        regionId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateBatch:
      description: Batch of image region information to create.
      properties:
        regions:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          readOnly: false
          type: array
      type: object
    ImageRegionCreateEntry:
      description: Entry associating a region to an image.
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        imageId:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - imageId
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateResult:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        imageId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        regionId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateSummary:
      properties:
        created:
          items:
            $ref: "#/components/schemas/ImageRegionCreateResult"
          nullable: true
          readOnly: false
          type: array
        duplicated:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          nullable: true
          readOnly: false
          type: array
        exceeded:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          nullable: true
          readOnly: false
          type: array
      type: object
    ImageRegionProposal:
      properties:
        imageId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        projectId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        proposals:
          items:
            $ref: "#/components/schemas/RegionProposal"
          readOnly: true
          type: array
      type: object
    ImageTag:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        tagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageTagCreateBatch:
      description: Batch of image tags.
      properties:
        tags:
          description: Image Tag entries to include in this batch.
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          readOnly: false
          type: array
      type: object
    ImageTagCreateEntry:
      description: Entry associating a tag to an image.
      properties:
        imageId:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagId:
          description: Id of the tag.
          format: uuid
          nullable: false
          readOnly: false
          type: string
      type: object
    ImageTagCreateSummary:
      properties:
        created:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          nullable: true
          readOnly: false
          type: array
        duplicated:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          nullable: true
          readOnly: false
          type: array
        exceeded:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          nullable: true
          readOnly: false
          type: array
      type: object
    ImageUrl:
      description: Image url.
      properties:
        url:
          description: Url of the image.
          nullable: false
          readOnly: false
          type: string
      required:
        - url
      type: object
    ImageUrlCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageUrlCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageUrlCreateEntry:
      properties:
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
        url:
          description: Url of the image.
          nullable: false
          readOnly: false
          type: string
      required:
        - url
      type: object
    Iteration:
      description: Iteration model to be sent over JSON.
      properties:
        classificationType:
          description: Gets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          nullable: true
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
        created:
          description: Gets the time this iteration was completed.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        domainId:
          description: Get or sets a guid of the domain the iteration has been trained on.
          format: uuid
          nullable: true
          readOnly: true
          type: string
        exportable:
          description: Whether the iteration can be exported to another format for download.
          nullable: false
          readOnly: true
          type: boolean
        exportableTo:
          description: A set of platforms this iteration can export to.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            nullable: false
            type: string
          readOnly: true
          type: array
        id:
          description: Gets the id of the iteration.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        lastModified:
          description: Gets the time this iteration was last modified.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        name:
          description: Gets or sets the name of the iteration.
          nullable: false
          readOnly: false
          type: string
        originalPublishResourceId:
          description: Resource Provider Id this iteration was originally published to.
          nullable: true
          readOnly: true
          type: string
        projectId:
          description: Gets the project id of the iteration.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        publishName:
          description: Name of the published model.
          nullable: true
          readOnly: true
          type: string
        reservedBudgetInHours:
          description: Gets the reserved advanced training budget for the iteration.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        status:
          description: Gets the current iteration status.
          nullable: false
          readOnly: true
          type: string
        trainedAt:
          description: Gets the time this iteration was last modified.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        trainingType:
          description: Gets the training type of the iteration.
          enum:
            - Regular
            - Advanced
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: TrainingType
      required:
        - name
      type: object
    IterationPerformance:
      description: Represents the detailed performance data for a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          nullable: true
          readOnly: true
          type: number
        perTagPerformance:
          description: Gets the per-tag performance details for this iteration.
          items:
            $ref: "#/components/schemas/TagPerformance"
          readOnly: true
          type: array
        precision:
          description: Gets the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        recall:
          description: Gets the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    Prediction:
      description: Prediction result.
      properties:
        boundingBox:
          $ref: "#/components/schemas/BoundingBox"
        probability:
          description: Probability of the tag.
          format: float
          nullable: false
          readOnly: true
          type: number
        tagId:
          description: Id of the predicted tag.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagName:
          description: Name of the predicted tag.
          nullable: true
          readOnly: true
          type: string
      type: object
    PredictionQueryResult:
      properties:
        results:
          items:
            $ref: "#/components/schemas/StoredImagePrediction"
          readOnly: true
          type: array
        token:
          $ref: "#/components/schemas/PredictionQueryToken"
      type: object
    PredictionQueryTag:
      properties:
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        maxThreshold:
          format: float
          nullable: false
          readOnly: true
          type: number
        minThreshold:
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    PredictionQueryToken:
      properties:
        application:
          nullable: false
          readOnly: false
          type: string
        continuation:
          nullable: false
          readOnly: false
          type: string
        endTime:
          format: date-time
          nullable: true
          readOnly: false
          type: string
        iterationId:
          format: uuid
          nullable: true
          readOnly: false
          type: string
        maxCount:
          format: int32
          nullable: false
          readOnly: false
          type: integer
        orderBy:
          enum:
            - Newest
            - Oldest
            - Suggested
          nullable: false
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: OrderBy
        session:
          nullable: false
          readOnly: false
          type: string
        startTime:
          format: date-time
          nullable: true
          readOnly: false
          type: string
        tags:
          items:
            $ref: "#/components/schemas/PredictionQueryTag"
          readOnly: false
          type: array
      type: object
    Project:
      description: Represents a project.
      properties:
        created:
          description: Gets the date this project was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        description:
          description: Gets or sets the description of the project.
          nullable: false
          readOnly: false
          type: string
        drModeEnabled:
          description: Gets if the DR mode is on.
          nullable: true
          readOnly: true
          type: boolean
        id:
          description: Gets the project id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        lastModified:
          description: Gets the date this project was last modified.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        name:
          description: Gets or sets the name of the project.
          nullable: false
          readOnly: false
          type: string
        settings:
          $ref: "#/components/schemas/ProjectSettings"
        thumbnailUri:
          description: Gets the thumbnail url representing the image.
          nullable: false
          readOnly: true
          type: string
      required:
        - name
        - description
        - settings
      type: object
    ProjectSettings:
      description: Represents settings associated with a project.
      properties:
        classificationType:
          description: Gets or sets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          nullable: true
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
        domainId:
          description: Gets or sets the id of the Domain to use with this project.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        targetExportPlatforms:
          description: A list of ExportPlatform that the trained model should be able to support.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    Region:
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    RegionProposal:
      properties:
        boundingBox:
          $ref: "#/components/schemas/BoundingBox"
        confidence:
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    StoredImagePrediction:
      description: result of an image classification request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        domain:
          description: Domain used for the prediction.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        originalImageUri:
          description: The URI to the original prediction image.
          nullable: false
          readOnly: true
          type: string
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        resizedImageUri:
          description: The URI to the (resized) prediction image.
          nullable: false
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original prediction image.
          nullable: false
          readOnly: true
          type: string
      type: object
    Tag:
      description: Represents a Tag.
      properties:
        description:
          description: Gets or sets the description of the tag.
          nullable: false
          readOnly: false
          type: string
        id:
          description: Gets the Tag ID.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        imageCount:
          description: Gets the number of images with this tag.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        name:
          description: Gets or sets the name of the tag.
          nullable: false
          readOnly: false
          type: string
        type:
          description: Gets or sets the type of the tag.
          enum:
            - Regular
            - Negative
          nullable: false
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: TagType
      required:
        - name
        - description
        - type
      type: object
    TagPerformance:
      description: Represents performance data for a particular tag in a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          nullable: true
          readOnly: true
          type: number
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        name:
          nullable: false
          readOnly: true
          type: string
        precision:
          description: Gets the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        recall:
          description: Gets the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
