openapi: 3.0.3
servers:
  - description: Production
    url: https://api.journy.io
info:
  contact:
    email: hi@journy.io
    name: Support
    url: https://help.journy.io
  description: |-
    # Introduction

    The journy.io API is organized around REST. Our API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.

    The API is hosted on api.journy.io.

    # Official SDKs

    Our SDKs are designed to help you interact with our APIs with less friction. They are written in several different languages and help bridge the gap between your application and journy.io APIs. They take away the need to know the exact URL and HTTP method to use for each API call among other things leaving you more time to focus on making your application.

    | Language   | Package                                                                        | Source code                                                                |
    |------------|--------------------------------------------------------------------------------|----------------------------------------------------------------------------|
    | üíö Node.js | [npm install @journyio/sdk ](https://www.npmjs.com/package/@journyio/sdk)      | [github.com/journy-io/js-sdk](https://github.com/journy-io/js-sdk)         |
    | üêò PHP     | [composer require journy-io/sdk](https://packagist.org/packages/journy-io/sdk) | [github.com/journy-io/php-sdk](https://github.com/journy-io/php-sdk)       |
    | üêç Python  | [pip install journyio-sdk](https://pypi.org/project/journyio-sdk/)             | [github.com/journy-io/python-sdk](https://github.com/journy-io/python-sdk) |
    | üíé Ruby    | Coming soon                                                                    | Coming soon                                                                |

    Your favourite programming language not included? [Let us know!](mailto:hi@journy.io)

    In the meanwhile, you can use [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) to generate a client for your programming language.

    # Authentication

    The journy.io API uses API keys to authenticate requests. You can view and manage your API keys in the [connections screen](https://system.journy.io).

    Your API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.

    All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.

    For every request send to the API we expect a header `X-Api-Key` to be set with the API Key.

    ## Permissions

    When creating an API Key in [the application](https://system.journy.io) you will have the choice to give permissions to an API Key (which you can change later on). These permissions restrict the API Key from different actions. When an API Key tries to perform a certain action it doesn't have the permissions for, you will receive a `401: Unauthorized` response.

    # Rate limiting

    To prevent abuse of the API there is a maximum throughput of 100 requests per minute. If you need a higher throughput, please contact us.

    To keep our platform healthy and stable, we'll block API keys that consistently hit our rate limits. Therefore, please consider taking this throughput into account.

    In every response the headers `X-RateLimit-Limit` and `X-RateLimit-Remaining` will be set. The `X-RateLimit-Limit`-header will always contain the current limit of requests per minute. The `X-RateLimit-Remaining`-header will always contain the amount of requests you have left in the current sliding window.

    # Errors

    journy.io uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g. a required parameter was omitted). Codes in the 5xx range indicate an error with journy.io's servers (these are rare).

    When performing a `POST`- or `PUT`-request with a requestBody, or when including parameters, these parameters and fields will automatically be checked and validated against the API Spec. When any error occurs, you will get a response with an `errors`-field, structured as follows:

    ```json
    {
      "errors": {
        "parameters": {
          "header": {
            "headerParameterName": "Describe what's wrong with the header parameter.",
            ...
          },
          "query": {
            "queryParameterName": "Describe what's wrong with the query parameter.",
            ...
          },
          "path": {
            "pathParameterName": "Describe what's wrong with the path parameter.",
            ...
          },
        },
        "fields": {
          "fieldName": "Describe what's wrong with the fieldName.",
          "object.fieldName": "Describe what's wrong with the fieldName of the included object.",
           ...
        }
      }
    }
    ```

    # Support

    Looking for a specific endpoint? Documentation not clear? [We would love to help!](mailto:hi@journy.io)
  termsOfService: https://www.journy.io/terms-of-use/
  title: journy.io API docs
  version: 1.0.0
  x-apisguru-categories:
    - customer_relation
  x-logo:
    altText: Journy.io
    url: https://developers.journy.io/developers.png
  x-origin:
    - format: openapi
      url: https://api.journy.io/spec.json
      version: "3.0"
  x-providerName: journy.io
externalDocs:
  description: API Documentation
  url: https://developers.journy.io
tags:
  - description: Endpoints for creating or updating users
    name: Users
  - description: Endpoints for creating or updating accounts
    name: Accounts
  - description: Endpoints for adding events
    name: Events
  - description: Endpoints for managing websites
    name: Websites
  - description: Endpoints for validating API keys
    name: Validation
paths:
  /accounts/upsert:
    post:
      description: Endpoint used to create or update an account.
      operationId: upsertAccount
      requestBody:
        content:
          application/json:
            schema:
              description: Update properties and/or members of an account
              properties:
                identification:
                  description: Account identification requires an accountId, domain or both
                  minProperties: 1
                  properties:
                    accountId:
                      description: Unique identifier for the account in your database
                      format: account-id
                      type: string
                    domain:
                      description: The domain associated with the account (e.g. acme-inc.com)
                      format: top-level-domain
                      type: string
                  type: object
                members:
                  description: The users that are member of this account
                  items:
                    description: Identification requires an accountId, domain or both
                    properties:
                      identification:
                        description: User identification requires a userId, email or both
                        minProperties: 1
                        properties:
                          email:
                            description: Email address of the user
                            format: email
                            type: string
                          userId:
                            description: Unique identifier for the user in your database
                            format: user-id
                            type: string
                        type: object
                    required:
                      - identification
                    type: object
                  type: array
                properties:
                  additionalProperties:
                    oneOf:
                      - nullable: true
                        type: string
                      - type: boolean
                      - type: number
                      - format: datetime
                        type: string
                      - items:
                          format: non-empty-string
                          type: string
                        type: array
                  description: The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)
                  type: object
              required:
                - identification
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Create or update account
      tags:
        - Accounts
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.upsertAccount({
              // required
              accountId: "accountId",
              domain: "acme-inc.com",

              // optional
              properties: {
                name: "ACME, Inc",
                mrr: 399,
                plan: "Pro",
                registered_at: new Date(...),
                is_paying: true,
                key_with_empty_value: "",
                array_of_values: ["value1", "value2"],
                this_property_will_be_deleted: null,
              },

              // optional
              members: [
                { userId: "userId" },
                { userId: "userId" }
              ]
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->upsertAccount([
                "accountId" => "accountId",
                "domain" => "acme-inc.com",

                // optional
                "properties" => [
                    "name" => "ACME, Inc",
                    "mrr" => 399,
                    "plan" => "Pro",
                    "registered_at" => new \DateTimeImmutable("..."),
                    "is_paying" => true,
                    "key_with_empty_value" => "",
                    "array_of_values" => ["value1", "value2"],
                    "this_property_will_be_deleted" => null,
                ],

                // optional
                "members" => [
                    ["userId" => "userId"],
                    ["userId" => "userId"],
                ],
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.client import Properties
            from journyio.account_identified import AccountIdentified
            from journyio.user_identified import UserIdentified
            from datetime import datetime

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            account = AccountIdentified("accountId", "acme-inc.com")
            # or
            account = AccountIdentified.by_account_id("accountId")
            # or
            account = AccountIdentified.by_domain("acme-inc.com")

            properties = Properties()
            properties["name"] = "ACME, Inc"
            properties["mrr"] = 399
            properties["plan"] = "Pro"
            properties["registered_at"] = datetime.now()
            properties["is_paying"] = True
            properties["key_with_empty_value"] = ""
            properties["this_property_will_be_deleted"] = None
            properties["array_of_values"] = ["value1", "value2"]

            member1 = UserIdentified.by_user_id("userId")
            member2 = UserIdentified.by_user_id("userId")

            client.upsert_account(account, properties, [member1, member2])
      x-key-permissions:
        - TrackData
  "/accounts/{accountId}/users":
    delete:
      description: Endpoint used to remove a user from an account.
      operationId: removeUserFromAccount
      parameters:
        - description: Unique identifier for the account in your database
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: The user being added/removed from the account
              properties:
                userId:
                  description: Unique identifier for the user in your database
                  format: user-id
                  type: string
              required:
                - userId
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Remove user from account
      tags:
        - Accounts
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk
            import { Client } from "@journyio/sdk";
            const client = Client.withDefaults('your-api-key');
            await client.removeUserFromAccount({
              accountId: "accountId",
              userId: "userId"
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->removeUserFromAccount(
                "accountId",
                "userId"
            );
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.remove_user_from_account("accountId", "userId")
      x-key-permissions:
        - TrackData
    post:
      description: Endpoint used to add a user to an account.
      operationId: addUserToAccount
      parameters:
        - description: Unique identifier for the account in your database
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: The user being added/removed from the account
              properties:
                userId:
                  description: Unique identifier for the user in your database
                  format: user-id
                  type: string
              required:
                - userId
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Add user to account
      tags:
        - Accounts
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk
            import { Client } from "@journyio/sdk";
            const client = Client.withDefaults('your-api-key');
            await client.addUserToAccount({
              accountId: "accountId",
              userId: "userId"
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->addUserToAccount(
                "accountId",
                "userId"
            );
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.add_user_to_account("accountId", "userId")
      x-key-permissions:
        - TrackData
  /events:
    post:
      description: Endpoint used to push an event for a user or an account.
      operationId: trackJourneyEvent
      requestBody:
        content:
          application/json:
            schema:
              description: Event for a user or an account
              properties:
                identification:
                  description: Event identification requires a user, account or both
                  minProperties: 1
                  properties:
                    account:
                      description: Account identification requires an accountId, domain or both
                      minProperties: 1
                      properties:
                        accountId:
                          description: Unique identifier for the account in your database
                          format: account-id
                          type: string
                        domain:
                          description: The domain associated with the account (e.g. acme-inc.com)
                          format: top-level-domain
                          type: string
                      type: object
                    user:
                      description: User identification requires a userId, email or both
                      minProperties: 1
                      properties:
                        email:
                          description: Email address of the user
                          format: email
                          type: string
                        userId:
                          description: Unique identifier for the user in your database
                          format: user-id
                          type: string
                      type: object
                  type: object
                metadata:
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: boolean
                      - type: number
                      - format: datetime
                        type: string
                  description: Event metadata, possible values are strings, booleans, numbers and datetimes (ISO 8601)
                  type: object
                name:
                  format: event-name
                  type: string
                triggeredAt:
                  description: If left blank this defaults to the current datetime
                  format: datetime
                  type: string
              required:
                - identification
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Push event
      tags:
        - Events
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client, Event, UserIdentified, AccountIdentified } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            event = Event.forUser("login", UserIdentified.byUserId("userId"));

            event = Event.forUser("some_historic_event", UserIdentified.byUserId("userId"))
              .happenedAt(new Date(...))
            ;

            event = Event.forAccount("reached_monthly_volume", AccountIdentified.byAccountId("accountId"))
              .withMetadata({
                "number": 1313,
                "string": "string",
                "boolean": true,
              })
            ;

            event = Event.forUserInAccount(
              "updated_settings",
              UserIdentified.byUserId("userId"),
              AccountIdentified.byAccountId("accountId")
            );

            await client.addEvent(event);
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;
            use JournyIO\SDK\Event;
            use JournyIO\SDK\UserIdentified;
            use JournyIO\SDK\AccountIdentified;

            $client = Client::withDefaults("your-api-key");

            $event = Event::forUser("login", UserIdentified::byUserId("userId"));

            $event = Event::forUser("some_historic_event", UserIdentified::byUserId("userId"))
                ->happenedAt(new \DateTimeImmutable("now"))
            ;

            $event = Event::forAccount("reached_monthly_volume", AccountIdentified::byAccountId("accountId"))
                ->withMetadata([
                    "number" => 13313,
                    "string" => "string",
                    "boolean" => true,
                ])
            ;

            $event = Event::forUserInAccount(
                "updated_settings",
                UserIdentified::byUserId("userId"),
                AccountIdentified::byAccountId("accountId")
            );

            $client->addEvent($event);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from datetime import datetime
            from journyio.events import Event, Metadata
            from journyio.account_identified import AccountIdentified
            from journyio.user_identified import UserIdentified

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            account = AccountIdentified("accountId", "www.domain.tld")
            user = UserIdentified("userId", "name@domain.tld")

            metadata = Metadata()
            metadata["number"] = 454554
            metadata["boolean"] = False
            metadata["string"] = "string"

            event = Event()
                .for_user_in_account("settings_updated", user, account)
                .happened_at(datetime.now())
                .with_metadata(metadata)

            client.add_event(event)
      x-key-permissions:
        - TrackData
  /link:
    post:
      description: Endpoint used to link web activity to a user.
      operationId: link
      requestBody:
        content:
          application/json:
            schema:
              description: Link web activity to user
              properties:
                deviceId:
                  format: non-empty-string
                  type: string
                identification:
                  description: User identification requires a userId, email or both
                  minProperties: 1
                  properties:
                    email:
                      description: Email address of the user
                      format: email
                      type: string
                    userId:
                      description: Unique identifier for the user in your database
                      format: user-id
                      type: string
                  type: object
              required:
                - deviceId
                - identification
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Link web activity to user
      tags:
        - Users
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.link({
              deviceId: request.cookies["__journey"],

              userId: request.user.id,
              // or
              email: request.user.email,
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->link([
                "deviceId" => "deviceId",

                "userId" => "userId",
                // or
                "email" => "email",
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.user_identified import UserIdentified

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            user = UserIdentified("userId", "name@domain.tld")
            # or
            user = UserIdentified.by_user_id("userId")
            # or
            user = UserIdentified.by_email("name@domain.tld")

            client.link(user, "deviceId")
      x-key-permissions:
        - TrackData
  /tracking/snippet:
    get:
      description: Endpoint used to get a snippet for a website.
      operationId: getTrackingSnippet
      parameters:
        - description: The domain you want to receive a snippet for
          in: query
          name: domain
          required: true
          schema:
            format: domain
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - properties:
                      data:
                        description: A snippet
                        properties:
                          domain:
                            format: domain
                            type: string
                          snippet:
                            type: string
                        required:
                          - domain
                          - snippet
                        type: object
                    required:
                      - data
                    type: object
          description: Snippet
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "404":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Not found
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Get snippet for a website
      tags:
        - Websites
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            const result = await client.getTrackingSnippet({
              domain: "www.journy.io",
            });

            if (result.success) {
              console.log(result.data.snippet); // string
              console.log(result.data.domain); // string
            }
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $call = $client->getTrackingSnippet("blog.acme.com");

            if ($call->succeeded()) {
                $result = $call->result();

                if ($result instanceof TrackingSnippet) {
                    var_dump($result->getSnippet()); // string
                    var_dump($result->getDomain()); // string
                }
            } else {
                var_dump($call->errors());
            }
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.results import Success

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.get_tracking_snippet("blog.acme.com")

            if isinstance(result, Success):
              print(result.request_id)  # str
              print(result.calls_remaining)  # int
              print(result.data)  # TrackingSnippetResonse
              print(result.domain)  # str
              print(result.snippet)  # str
      x-key-permissions:
        - GetTrackingSnippet
  /users/upsert:
    post:
      description: Endpoint to create or update a user.
      operationId: upsertUser
      requestBody:
        content:
          application/json:
            schema:
              description: Update properties of a user
              properties:
                identification:
                  description: User identification requires a userId, email or both
                  minProperties: 1
                  properties:
                    email:
                      description: Email address of the user
                      format: email
                      type: string
                    userId:
                      description: Unique identifier for the user in your database
                      format: user-id
                      type: string
                  type: object
                properties:
                  additionalProperties:
                    oneOf:
                      - nullable: true
                        type: string
                      - type: boolean
                      - type: number
                      - format: datetime
                        type: string
                      - items:
                          format: non-empty-string
                          type: string
                        type: array
                  description: The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)
                  type: object
              required:
                - identification
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The object was created
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Object was created
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - description: The basic response containing the unique ID of the request and the response status
                        properties:
                          meta:
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                            required:
                              - requestId
                              - status
                            type: object
                        required:
                          - meta
                        type: object
                      - description: The error message should specify what cause the error
                        properties:
                          message:
                            type: string
                        required:
                          - message
                        type: object
                  - description: Specify the fields and/ or parameters that had errors
                    properties:
                      errors:
                        description: Map that sums up all received values that seemed incorrect
                        properties:
                          fields:
                            additionalProperties:
                              type: string
                            description: All input fields that seemed incorrect
                            type: object
                          parameters:
                            description: All query-, header- and path- parameters that seemed incorrect
                            properties:
                              header:
                                additionalProperties:
                                  type: string
                                type: object
                              path:
                                additionalProperties:
                                  type: string
                                type: object
                              query:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                    required:
                      - errors
                    type: object
          description: Bad request, some fields or parameters are incorrect
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Create or update user
      tags:
        - Users
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.upsertUser({
              // required
              userId: "userId",
              email: "name@domain.tld",

              // optional
              properties: {
                full_name: "John Doe",
                first_name: "John",
                last_name: "Doe",
                phone: "123",
                registered_at: new Date(/* ... */),
                is_admin: true,
                age: 26,
                array_of_values: ["value1", "value2"],
                key_with_empty_value: "",
                this_property_will_be_deleted: null,
              },
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->upsertUser([
                // required
                "userId" => "userId",
                "email" => "name@domain.tld",

                // optional
                "properties" => [
                    "full_name" => "John Doe",
                    "first_name" => "John",
                    "last_name" => "Doe",
                    "phone" => "123",
                    "is_admin" => true,
                    "registered_at" => new \DateTimeImmutable("..."),
                    "age" => 26,
                    "array_of_values" => ["value1", "value2"],
                    "key_with_empty_value" => "",
                    "this_property_will_be_deleted" => null,
                ],
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.client import Properties
            from journyio.user_identified import UserIdentified
            from datetime import datetime

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            user = UserIdentified("userId", "name@domain.tld")
            # or
            user = UserIdentified.by_user_id("userId")
            # or
            user = UserIdentified.by_email("name@domain.tld")

            properties = Properties()
            properties["full_name"] = "John Doe"
            properties["first_name"] = "John"
            properties["last_name"] = "Doe"
            properties["phone"] = "123"
            properties["is_admin"] = True
            properties["registered_at"] = datetime.now()
            properties["age"] = 26
            properties["array_of_values"] = ["value1", "value2"]
            properties["key_with_empty_value"] = ""
            properties["this_property_will_be_deleted"] = None

            client.upsert_user(user, properties)
      x-key-permissions:
        - TrackData
  /validate:
    get:
      description: Endpoint used to test the validity and some basic information about a specific API Key.
      operationId: getValidity
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - properties:
                      data:
                        description: Validation of API Key
                        properties:
                          permissions:
                            items:
                              type: string
                            type: array
                        required:
                          - permissions
                        type: object
                    required:
                      - data
                    type: object
          description: Key validation
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "401":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: No API Key was provided or the key is not authorised to perform the action
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "403":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "429":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
        "500":
          content:
            application/json:
              schema:
                allOf:
                  - description: The basic response containing the unique ID of the request and the response status
                    properties:
                      meta:
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                        required:
                          - requestId
                          - status
                        type: object
                    required:
                      - meta
                    type: object
                  - description: The error message should specify what cause the error
                    properties:
                      message:
                        type: string
                    required:
                      - message
                    type: object
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              description: Request limit per minute.
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of requests left for the time window.
              schema:
                type: integer
      summary: Validate API key
      tags:
        - Validation
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            const result = await client.getApiKeyDetails();

            if (result.success) {
              console.log(result.data.permissions); // string[]
            }
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $call = $client->getApiKeyDetails();

            if ($call->succeeded()) {
                $result = $call->result();

                if ($result instanceof ApiKeyDetails) {
                    var_dump($result->getPermissions()); // string[]
                }
            } else {
                var_dump($call->errors());
            }
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.results import Success

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.get_api_key_details()

            if isinstance(result, Success):
                print(result.request_id)  # str
                print(result.calls_remaining)  # int
                print(result.data)  # ApiKeyDetails
                print(result.permissions)  # list of strings denoting the permissions
