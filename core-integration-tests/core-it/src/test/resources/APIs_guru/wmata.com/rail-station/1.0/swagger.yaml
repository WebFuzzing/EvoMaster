swagger: "2.0"
schemes:
  - http
  - https
host: api.wmata.com
basePath: /Rail.svc
info:
  description: Rail line and station information, including locations, fares, times, and parking.
  title: Rail Station Information
  version: "1.0"
  x-apisguru-categories:
    - transport
  x-logo:
    url: https://twitter.com/wmata/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://developer.wmata.com/docs/services/5476364f031f590f38092507/export?DocumentFormat=Swagger
      version: "2.0"
  x-providerName: wmata.com
  x-serviceName: rail-station
securityDefinitions:
  apiKeyHeader:
    in: header
    name: api_key
    type: apiKey
  apiKeyQuery:
    in: query
    name: api_key
    type: apiKey
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
tags: []
paths:
  /Lines:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns information about all rail lines.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Lines</td>\r

        \r

        <td>\r

        Array containing line information (<a href=\"#Line\">Line</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"Line\" name=\"Line\">Line Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DisplayName</td>\r

        \r

        <td>Full name of line color.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>EndStationCode</td>\r

        \r

        <td>End station code. For example, will be E10 (Greenbelt) for the\r

        Green Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>InternalDestination1</td>\r

        \r

        <td>Intermediate terminal station code. During normal service, some\r

        trains on some lines might end their trip prior to the\r

        StartStationCode or EndStationCode. A good example is on the Red\r

        Line where some trains stop at A11 (Grosvenor) or B08 (Silver\r

        Spring). Empty string if not defined.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>InternalDestination2</td>\r

        \r

        <td>Similar to InternalDestination1.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LineCode</td>\r

        \r

        <td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r

        or SV).</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StartStationCode</td>\r

        \r

        <td>Start station code. For example, will be F11 (Branch Avenue)\r

        for the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r

        this value in other rail-related APIs to retrieve data about a\r

        station.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe3314
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <LinesResp xmlns="http://www.wmata.com" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <Lines>
                      <Line>
                          <DisplayName>Green</DisplayName>
                          <EndStationCode>E10</EndStationCode>
                          <InternalDestination1/>
                          <InternalDestination2/>
                          <LineCode>GR</LineCode>
                          <StartStationCode>F11</StartStationCode>
                      </Line>
                      <Line>
                          <DisplayName>Blue</DisplayName>
                          <EndStationCode>G05</EndStationCode>
                          <InternalDestination1/>
                          <InternalDestination2/>
                          <LineCode>BL</LineCode>
                          <StartStationCode>J03</StartStationCode>
                      </Line>
                      <Line>
                          <DisplayName>Silver</DisplayName>
                          <EndStationCode>G05</EndStationCode>
                          <InternalDestination1/>
                          <InternalDestination2/>
                          <LineCode>SV</LineCode>
                          <StartStationCode>N06</StartStationCode>
                      </Line>
                      <Line>
                          <DisplayName>Red</DisplayName>
                          <EndStationCode>B11</EndStationCode>
                          <InternalDestination1>A11</InternalDestination1>
                          <InternalDestination2>B08</InternalDestination2>
                          <LineCode>RD</LineCode>
                          <StartStationCode>A15</StartStationCode>
                      </Line>
                      <Line>
                          <DisplayName>Orange</DisplayName>
                          <EndStationCode>D13</EndStationCode>
                          <InternalDestination1/>
                          <InternalDestination2/>
                          <LineCode>OR</LineCode>
                          <StartStationCode>K08</StartStationCode>
                      </Line>
                      <Line>
                          <DisplayName>Yellow</DisplayName>
                          <EndStationCode>E06</EndStationCode>
                          <InternalDestination1>E01</InternalDestination1>
                          <InternalDestination2/>
                          <LineCode>YL</LineCode>
                          <StartStationCode>C15</StartStationCode>
                      </Line>
                  </Lines>
              </LinesResp>
      summary: XML - Lines
  /Path:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns a set of ordered stations and distances between two stations on the\r

        <em>same line</em>.</p>\r

        \r

        <p>Note that this method is not suitable on its own as a pathfinding solution\r

        between stations.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Path</td>\r

        \r

        <td>\r

        Array containing path details (<a href=\r

        \"#MetroPathItem\">MetroPathItem</a>)\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DistanceToPrev</td>\r

        \r

        <td>Distance in feet to the previous station in the list.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LineCode</td>\r

        \r

        <td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r

        or SV) this station's platform is on.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>SeqNum</td>\r

        \r

        <td>Ordered sequence number.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode</td>\r

        \r

        <td>Station code for this station. Use this value in other\r

        rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationName</td>\r

        \r

        <td>Full name for this station, as shown on the WMATA website.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe3316
      parameters:
        - default: N06
          description: Station code for the origin station.  Use the Station List method to return a list of all station codes.
          enum:
            - N06
          in: query
          name: FromStationCode
          required: true
          type: string
        - default: G05
          description: Station code for the origin station.  Use the Station List method to return a list of all station codes.
          enum:
            - G05
          in: query
          name: ToStationCode
          required: true
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              

              <PathResp
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <Path>
                      <MetroPathItem>
                          <DistanceToPrev>0</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>1</SeqNum>
                          <StationCode>N06</StationCode>
                          <StationName>Wiehle-Reston East</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>30867</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>2</SeqNum>
                          <StationCode>N04</StationCode>
                          <StationName>Spring Hill</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3634</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>3</SeqNum>
                          <StationCode>N03</StationCode>
                          <StationName>Greensboro</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3902</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>4</SeqNum>
                          <StationCode>N02</StationCode>
                          <StationName>Tysons Corner</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3440</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>5</SeqNum>
                          <StationCode>N01</StationCode>
                          <StationName>McLean</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>24745</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>6</SeqNum>
                          <StationCode>K05</StationCode>
                          <StationName>E Falls Church</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>13156</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>7</SeqNum>
                          <StationCode>K04</StationCode>
                          <StationName>Ballston</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2980</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>8</SeqNum>
                          <StationCode>K03</StationCode>
                          <StationName>Virginia Square</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2473</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>9</SeqNum>
                          <StationCode>K02</StationCode>
                          <StationName>Clarendon</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2687</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>10</SeqNum>
                          <StationCode>K01</StationCode>
                          <StationName>Court House</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>4936</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>11</SeqNum>
                          <StationCode>C05</StationCode>
                          <StationName>Rosslyn</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>6993</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>12</SeqNum>
                          <StationCode>C04</StationCode>
                          <StationName>Foggy Bottom</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2783</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>13</SeqNum>
                          <StationCode>C03</StationCode>
                          <StationName>Farragut West</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2001</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>14</SeqNum>
                          <StationCode>C02</StationCode>
                          <StationName>McPherson Square</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2359</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>15</SeqNum>
                          <StationCode>C01</StationCode>
                          <StationName>Metro Center</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>1561</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>16</SeqNum>
                          <StationCode>D01</StationCode>
                          <StationName>Federal Triangle</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2016</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>17</SeqNum>
                          <StationCode>D02</StationCode>
                          <StationName>Smithsonian</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2643</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>18</SeqNum>
                          <StationCode>D03</StationCode>
                          <StationName>L'Enfant Plaza</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>1757</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>19</SeqNum>
                          <StationCode>D04</StationCode>
                          <StationName>Federal Center SW</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3052</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>20</SeqNum>
                          <StationCode>D05</StationCode>
                          <StationName>Capitol South</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>2703</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>21</SeqNum>
                          <StationCode>D06</StationCode>
                          <StationName>Eastern Market</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3289</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>22</SeqNum>
                          <StationCode>D07</StationCode>
                          <StationName>Potomac Avenue</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>3750</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>23</SeqNum>
                          <StationCode>D08</StationCode>
                          <StationName>Stadium Armory</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>12162</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>24</SeqNum>
                          <StationCode>G01</StationCode>
                          <StationName>Benning Road</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>7779</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>25</SeqNum>
                          <StationCode>G02</StationCode>
                          <StationName>Capitol Heights</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>5215</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>26</SeqNum>
                          <StationCode>G03</StationCode>
                          <StationName>Addison Road</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>7960</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>27</SeqNum>
                          <StationCode>G04</StationCode>
                          <StationName>Morgan Blvd</StationName>
                      </MetroPathItem>
                      <MetroPathItem>
                          <DistanceToPrev>7256</DistanceToPrev>
                          <LineCode>SV</LineCode>
                          <SeqNum>28</SeqNum>
                          <StationCode>G05</StationCode>
                          <StationName>Largo Town Center</StationName>
                      </MetroPathItem>
                  </Path>
              </PathResp>
      summary: XML - Path Between Stations
  /SrcStationToDstStationInfo:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns a distance, fare information, and estimated travel time between any
        two stations, including those on different lines. Omit both parameters to
        retrieve data for all stations.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>StationToStationInfos</td>

        <td>
        Array containing station to station information (<a href=
        "#StationToStationInfo">StationToStationInfo</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="StationToStationInfo" name=
        "StationToStationInfo">StationToStationInfo Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>CompositeMiles</td>

        <td>Average of distance traveled between two stations and straight-line distance (as used for WMATA fare calculations).  For more details, please refer to WMATA's <a href="https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6" target="_blank" rel="noopener noreferrer">Tariff on Fares</a>.</td>
        </tr>

        <tr>
        <td>DestinationStation</td>

        <td>Destination station code. Use this value in other rail-related
        APIs to retrieve data about a station.</td>
        </tr>

        <tr>
        <td>RailFare</td>

        <td>
        Structure containing <a href="#RailFare">fare</a> information.
        </td>
        </tr>

        <tr>
        <td>RailTime</td>

        <td>Estimated travel time (schedule time) in minutes between the source and
        destination station. This is not correlated to minutes <span class="text-info">(Min)</span> in Real-Time Rail Predictions.</td>
        </tr>

        <tr>
        <td>SourceStation</td>

        <td>Origin station code. Use this value in other rail-related APIs
        to retrieve data about a station.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="RailFare" name="RailFare">RailFare Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>OffPeakTime</td>

        <td>Fare during off-peak times (times other than the ones described
        below).</td>
        </tr>

        <tr>
        <td>PeakTime</td>

        <td>Fare during peak times (weekdays from opening to 9:30 AM and
        3-7 PM, and weekends from midnight to closing).</td>
        </tr>

        <tr>
        <td>SeniorDisabled</td>

        <td>
        Reduced fare for <a href=
        "http://www.wmata.com/fares/reduced.cfm">senior citizens or
        people with disabilities</a>.
        </td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe331b
      parameters:
        - default: E10
          description: Station code for the origin station.  Use the Station List method to return a list of all station codes.
          enum:
            - E10
          in: query
          name: FromStationCode
          type: string
        - default: J03
          description: Station code for the destination station.  Use the Station List method to return a list of all station codes.
          enum:
            - J03
          in: query
          name: ToStationCode
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <StationToStationInfoResp xmlns="http://www.wmata.com" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <StationToStationInfos>
                      <StationToStationInfo>
                          <CompositeMiles>25.41</CompositeMiles>
                          <DestinationStation>J03</DestinationStation>
                          <RailFare>
                              <OffPeakTime>3.60</OffPeakTime>
                              <PeakTime>5.90</PeakTime>
                              <SeniorDisabled>2.95</SeniorDisabled>
                          </RailFare>
                          <RailTime>66</RailTime>
                          <SourceStation>E10</SourceStation>
                      </StationToStationInfo>
                  </StationToStationInfos>
              </StationToStationInfoResp>
      summary: XML - Station to Station Information
  /StationEntrances:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns a list of nearby station entrances based on latitude, longitude, and\r

        radius (meters). Omit search parameters to return all station entrances.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Entrances</td>\r

        \r

        <td>\r

        Array containing detailed information about station entrances\r

        (<a href=\"#StationEntrance\">StationEntrance</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"StationEntrance\" name=\r

        \"StationEntrance\">StationEntrance Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Description</td>\r

        \r

        <td>Additional information for the entrance, if available.\r

        Currently available data usually shows the same value as the Name\r

        element.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td style=\"text-decoration: line-through\">ID</td>\r

        \r

        <td><span class=\"text-danger\">Deprecated.</span></td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Lat</td>\r

        \r

        <td>Latitude.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Lon</td>\r

        \r

        <td>Longitude.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Name</td>\r

        \r

        <td>Name of the entrance (usually the station name and nearest\r

        intersection).</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode1</td>\r

        \r

        <td>The station code associated with this entrance. Use this value\r

        in other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode2</td>\r

        \r

        <td>For stations containing multiple platforms (e.g.: Gallery\r

        Place, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r

        station code.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe3317
      parameters:
        - default: 38.8978168
          description: Center point Latitude, required if Longitude and Radius are specified.
          enum:
            - 38.8978168
          in: query
          name: Lat
          type: number
        - default: -77.0404246
          description: Center point Longitude, required if Latitude and Radius are specified.
          enum:
            - -77.0404246
          in: query
          name: Lon
          type: number
        - default: 500
          description: Radius (meters) to include in the search area, required if Latitude and Longitude are specified.
          enum:
            - 500
          in: query
          name: Radius
          type: number
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <StationEntrancesResp
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <Entrances>
                      <StationEntrance>
                          <Description>Farragut West, 17th &amp; I St</Description>
                          <ID>100</ID>
                          <Lat>38.901098</Lat>
                          <Lon>-77.039293</Lon>
                          <Name>Farragut West 17th &amp; I St</Name>
                          <StationCode1>C03</StationCode1>
                          <StationCode2/>
                      </StationEntrance>
                      <StationEntrance>
                          <Description>Farragut West, 18th &amp; I St</Description>
                          <ID>101</ID>
                          <Lat>38.901453</Lat>
                          <Lon>-77.042093</Lon>
                          <Name>Farragut West 18th &amp; I St</Name>
                          <StationCode1>C03</StationCode1>
                          <StationCode2/>
                      </StationEntrance>
                  </Entrances>
              </StationEntrancesResp>
      summary: XML - Station Entrances
  /StationInfo:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns station location and address information based on a given
        StationCode.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>Address</td>

        <td>
        Structure describing <a href="#Address">address</a> information.
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Repeated from input.</td>
        </tr>

        <tr>
        <td>Lat</td>

        <td>Latitude.</td>
        </tr>

        <tr>
        <td>LineCode1</td>

        <td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>
        </tr>

        <tr>
        <td>LineCode2</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode3</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode4</td>

        <td>Additional line served by this station, if applicable. Currently not in use.</td>
        </tr>

        <td>Lon</td>

        <td>Longitude.</td>
        </tr>

        <tr>
        <td>Name</td>

        <td>Station name.</td>
        </tr>

        <tr>
        <td>StationTogether1</td>

        <td>For stations with multiple platforms (e.g.: Gallery Place, Fort
        Totten, L'Enfant Plaza, and Metro Center), the additional
        StationCode will be listed here.</td>
        </tr>

        <tr>
        <td>StationTogether2</td>

        <td>Similar in function to StationTogether2. Currently not in
        use.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a name="Address">Address Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>City</td>

        <td>City.</td>
        </tr>

        <tr>
        <td>State</td>

        <td>State (abbreviated).</td>
        </tr>

        <tr>
        <td>Street</td>

        <td>Street address (for GPS use).</td>
        </tr>

        <tr>
        <td>Zip</td>

        <td>Zip code.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3318
      parameters:
        - default: A01
          description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - A01
          in: query
          name: StationCode
          required: true
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <Station
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <Address>
                      <City>Washington</City>
                      <State>DC</State>
                      <Street>607 13th St. NW</Street>
                      <Zip>20005</Zip>
                  </Address>
                  <Code>A01</Code>
                  <Lat>38.8983144732</Lat>
                  <LineCode1>RD</LineCode1>
                  <LineCode2 i:nil="true"/>
                  <LineCode3 i:nil="true"/>
                  <LineCode4 i:nil="true"/>
                  <Lon>-77.0280779971</Lon>
                  <Name>Metro Center</Name>
                  <StationTogether1>C01</StationTogether1>
                  <StationTogether2/>
              </Station>
      summary: XML - Station Information
  /StationParking:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns parking information at a station based on a given StationCode. Omit
        the StationCode to return parking information for all stations.</p>

        <p>If a station has no parking, the StationsParking element will contain no
        child elements.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>StationsParking</td>

        <td>
        Array containing station parking information (<a href=
        "#StationParking">StationParking</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="StationParking" name="StationParking">StationParking
        Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Useful when returning parking information for all
        stations. Use this value in other rail-related APIs to retrieve
        data about a station.</td>
        </tr>

        <tr>
        <td>Notes</td>

        <td>When not NULL, provides additional parking resources such as
        nearby lots.</td>
        </tr>

        <tr>
        <td>AllDayParking</td>

        <td>
        Structure describing <a href="#AllDayParking">all-day
        parking</a> options.
        </td>
        </tr>

        <tr>
        <td>ShortTermParking</td>

        <td>
        Structure describing <a href="#ShortTermParking">short-term
        parking</a> options.
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="AllDayParking" name="AllDayParking">AllDayParking
        Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>TotalCount</td>

        <td>Number of all-day parking spots available at a station.</td>
        </tr>

        <tr>
        <td>RiderCost</td>

        <td>All-day cost per day (weekday) for Metro riders. NULL when no all-day
        spots are available. For most stations, this value is identical to
        the NonRiderCost.<br>
        <br>
        For cases where the NonRiderCost is different, the lower cost per
        day requires a valid rail trip using a SmarTrip&reg; card
        originating from a station other than the one where the patron
        parked. To receive this lower rate, patrons must pay for their
        parking with the same SmarTrip&reg; card used to enter/exit
        Metrorail, and must exit the parking lot within two hours of
        exiting Metrorail.</td>
        </tr>

        <tr>
        <td>NonRiderCost</td>

        <td>All-day cost per day (weekday) for non-Metro riders. NULL when no all-day
        spots are available.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="ShortTermParking" name=
        "ShortTermParking">ShortTermParking Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>SaturdayRiderCost</td>

        <td>Similar to RiderCost, except denoting Saturday prices.</td>
        </tr>

        <tr>
        <td>SaturdayNonRiderCost</td>

        <td>Similar to NonRiderCost, except denoting Saturday prices.</td>
        </tr>

        <tr>
        <td>TotalCount</td>

        <td>Number of short-term parking spots available at a station
        (parking meters).</td>
        </tr>

        <tr>
        <td>Notes</td>

        <td>Misc. information relating to short-term parking. NULL when no
        short-term spots are available.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3315
      parameters:
        - description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - E08
            - F06
          in: query
          name: StationCode
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <StationParkingResp
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <StationsParking>
                      <StationParking>
                          <Code>F06</Code>
                          <Notes>325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.</Notes>
                          <AllDayParking>
                              <TotalCount>808</TotalCount>
                              <RiderCost>4.45</RiderCost>
                              <NonRiderCost>4.45</NonRiderCost>
                              <SaturdayRiderCost>2.00</SaturdayRiderCost>
                              <SaturdayNonRiderCost>2.00</SaturdayNonRiderCost>
                          </AllDayParking>
                          <ShortTermParking>
                              <TotalCount>15</TotalCount>
                              <Notes>Short term parking available 5 am - 2 am, time limit 12 hours</Notes>
                          </ShortTermParking>
                      </StationParking>
                  </StationsParking>
              </StationParkingResp>
      summary: XML - Parking Information
  /StationTimes:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns opening and scheduled first/last train times based on a given\r

        StationCode. Omit the StationCode to return timing information for all\r

        stations.</p>\r

        \r

        <p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r

        Plaza, etc.), a distinct call is required for each StationCode to retrieve the\r

        full set of train times at such stations.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>StationTimes</td>\r

        \r

        <td>\r

        Array containing station timing information (<a href=\r

        \"#StationTime\">StationTime</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"StationTime\" name=\"StationTime\">StationTime\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Code</td>\r

        \r

        <td>Station code for this station. Use this value in other\r

        rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationName</td>\r

        \r

        <td>Full name of the station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>*Day Elements</td>\r

        \r

        <td>\r

        Container elements containing timing information based on\r

        <a href=\"#dow\">day of the week.</a>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>OpeningTime</td>\r

        \r

        <td>Station opening time. Format is HH:mm.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>FirstTrains</td>\r

        \r

        <td>\r

        Structure containing <a href=\"#first\">first train</a>\r

        information.\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LastTrains</td>\r

        \r

        <td>\r

        Structure containing <a href=\"#last\">last train</a>\r

        information.\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"first\" name=\"first\">FirstTrains Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Time</td>\r

        \r

        <td>First train leaves the station at this time. Format is\r

        HH:mm.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DestinationStation</td>\r

        \r

        <td>Station code for the train's destination. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"last\" name=\"last\">LastTrains Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Time</td>\r

        \r

        <td>Last train leaves the station at this time. Format is HH:mm.\r

        Note that when the time is AM, it signifies the next day. For\r

        example, a value of 02:30 under a Saturday element means the last\r

        train leaves on Sunday at 2:30 AM.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DestinationStation</td>\r

        \r

        <td>Station code for the train's destination. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe331a
      parameters:
        - default: E10
          description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - E10
          in: query
          name: StationCode
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              <StationTimeResp
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <StationTimes>
                      <StationTime>
                          <Code>E10</Code>
                          <StationName>Greenbelt</StationName>
                          <Monday>
                              <OpeningTime>04:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>05:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>23:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Monday>
                          <Tuesday>
                              <OpeningTime>04:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>05:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>23:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Tuesday>
                          <Wednesday>
                              <OpeningTime>04:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>05:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>23:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Wednesday>
                          <Thursday>
                              <OpeningTime>04:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>05:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>23:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Thursday>
                          <Friday>
                              <OpeningTime>04:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>05:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>02:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Friday>
                          <Saturday>
                              <OpeningTime>06:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>07:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>02:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Saturday>
                          <Sunday>
                              <OpeningTime>06:50</OpeningTime>
                              <FirstTrains>
                                  <Train>
                                      <Time>07:00</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </FirstTrains>
                              <LastTrains>
                                  <Train>
                                      <Time>23:30</Time>
                                      <DestinationStation>F11</DestinationStation>
                                  </Train>
                              </LastTrains>
                          </Sunday>
                      </StationTime>
                  </StationTimes>
              </StationTimeResp>
      summary: XML - Station Timings
  /Stations:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns a list of station location and address information based on a given
        LineCode. Omit the LineCode to return all stations. The response is an array of
        objects identical to those returned in the Station Information method.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>Stations</td>

        <td>
        Array containing station information (<a href=
        "#Station">Station</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="Station" name="Station">Station Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>Address</td>

        <td>
        Structure describing <a href="#Address">address</a> information.
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Repeated from input.</td>
        </tr>

        <tr>
        <td>Lat</td>

        <td>Latitude.</td>
        </tr>

        <tr>
        <td>LineCode1</td>

        <td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>
        </tr>

        <tr>
        <td>LineCode2</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode3</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode4</td>

        <td>Additional line served by this station, if applicable. Currently not in use.</td>
        </tr>

        <tr>
        <td>Lon</td>

        <td>Longitude.</td>
        </tr>

        <tr>
        <td>Name</td>

        <td>Station name.</td>
        </tr>

        <tr>
        <td>StationTogether1</td>

        <td>For stations with multiple platforms (e.g.: Gallery Place, Fort
        Totten, L'Enfant Plaza, and Metro Center), the additional
        StationCode will be listed here.</td>
        </tr>

        <tr>
        <td>StationTogether2</td>

        <td>Similar in function to StationTogether2. Currently not in
        use.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="Address" name="Address">Address Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>City</td>

        <td>City.</td>
        </tr>

        <tr>
        <td>State</td>

        <td>State (abbreviated).</td>
        </tr>

        <tr>
        <td>Street</td>

        <td>Street address (for GPS use).</td>
        </tr>

        <tr>
        <td>Zip</td>

        <td>Zip code.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3319
      parameters:
        - description: |-
            Two-letter line code abbreviation:

            <ul>
            <li>RD - Red</li>
            <li>YL - Yellow</li>
            <li>GR - Green</li>
            <li>BL - Blue</li>
            <li>OR - Orange</li>
            <li>SV - Silver</li>
            </ul>
          enum:
            - RD
            - YL
            - GR
            - BL
            - OR
            - SV
          in: query
          name: LineCode
          type: string
      produces:
        - application/xml
      responses:
        "200":
          description: Default response code.
          examples:
            application/xml: |-
              

              <StationsResp
                  xmlns="http://www.wmata.com"
                  xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
                  <Stations>
                      <Station>
                          <Address>
                              <City>Rockville</City>
                              <State>MD</State>
                              <Street>15903 Somerville Drive</Street>
                              <Zip>20855</Zip>
                          </Address>
                          <Code>A15</Code>
                          <Lat>39.1199273249</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.1646273343</Lon>
                          <Name>Shady Grove</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Rockville</City>
                              <State>MD</State>
                              <Street>251 Hungerford Drive</Street>
                              <Zip>20850</Zip>
                          </Address>
                          <Code>A14</Code>
                          <Lat>39.0843216075</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.1461253392</Lon>
                          <Name>Rockville</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Rockville</City>
                              <State>MD</State>
                              <Street>1600 Chapman Avenue</Street>
                              <Zip>20852</Zip>
                          </Address>
                          <Code>A13</Code>
                          <Lat>39.0624676517</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.1208179517</Lon>
                          <Name>Twinbrook</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Rockville</City>
                              <State>MD</State>
                              <Street>5500 Marinelli Road</Street>
                              <Zip>20852</Zip>
                          </Address>
                          <Code>A12</Code>
                          <Lat>39.0481513573</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.112829859</Lon>
                          <Name>White Flint</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Bethesda</City>
                              <State>MD</State>
                              <Street>10300 Rockville Pike</Street>
                              <Zip>20852</Zip>
                          </Address>
                          <Code>A11</Code>
                          <Lat>39.02926895</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.10384972</Lon>
                          <Name>Grosvenor</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Bethesda</City>
                              <State>MD</State>
                              <Street>8810 Rockville Pike</Street>
                              <Zip>20814</Zip>
                          </Address>
                          <Code>A10</Code>
                          <Lat>39.0000564843</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0969522905</Lon>
                          <Name>Medical Center</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Bethesda</City>
                              <State>MD</State>
                              <Street>7450 Wisconsin Avenue</Street>
                              <Zip>20814</Zip>
                          </Address>
                          <Code>A09</Code>
                          <Lat>38.9843936603</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0941291922</Lon>
                          <Name>Bethesda</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>5337 Wisconsin Avenue NW</Street>
                              <Zip>20015</Zip>
                          </Address>
                          <Code>A08</Code>
                          <Lat>38.9594838736</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.084995805</Lon>
                          <Name>Friendship Heights</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>4501 Wisconsin Avenue NW</Street>
                              <Zip>20016</Zip>
                          </Address>
                          <Code>A07</Code>
                          <Lat>38.9488514351</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0795873255</Lon>
                          <Name>Tenleytown</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>4200 Connecticut Avenue NW</Street>
                              <Zip>20008</Zip>
                          </Address>
                          <Code>A06</Code>
                          <Lat>38.9432652883</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0629861805</Lon>
                          <Name>Van Ness UDC</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>3599 Connecticut Avenue NW</Street>
                              <Zip>20008</Zip>
                          </Address>
                          <Code>A05</Code>
                          <Lat>38.9347628908</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0580425191</Lon>
                          <Name>Cleveland Park</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>2700 Connecticut Ave., NW</Street>
                              <Zip>20008</Zip>
                          </Address>
                          <Code>A04</Code>
                          <Lat>38.9250851371</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0524180207</Lon>
                          <Name>Woodley Park Zoo</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>1525 20th St. NW</Street>
                              <Zip>20036</Zip>
                          </Address>
                          <Code>A03</Code>
                          <Lat>38.9095980575</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0434143597</Lon>
                          <Name>Dupont Circle</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>1001 Connecticut Avenue NW</Street>
                              <Zip>20036</Zip>
                          </Address>
                          <Code>A02</Code>
                          <Lat>38.9032019462</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0397008272</Lon>
                          <Name>Farragut North</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>607 13th St. NW</Street>
                              <Zip>20005</Zip>
                          </Address>
                          <Code>A01</Code>
                          <Lat>38.8983144732</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0280779971</Lon>
                          <Name>Metro Center</Name>
                          <StationTogether1>C01</StationTogether1>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>630 H St. NW</Street>
                              <Zip>20001</Zip>
                          </Address>
                          <Code>B01</Code>
                          <Lat>38.8983168097</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0219153904</Lon>
                          <Name>Gallery Place</Name>
                          <StationTogether1>F01</StationTogether1>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>450 F Street NW</Street>
                              <Zip>20001</Zip>
                          </Address>
                          <Code>B02</Code>
                          <Lat>38.8960903176</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0166389566</Lon>
                          <Name>Judiciary Square</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>701 First St. NE</Street>
                              <Zip>20002</Zip>
                          </Address>
                          <Code>B03</Code>
                          <Lat>38.8977660392</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0074142921</Lon>
                          <Name>Union Station</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>200 Florida Ave N.E.</Street>
                              <Zip>20002</Zip>
                          </Address>
                          <Code>B35</Code>
                          <Lat>38.9070162121</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0030204472</Lon>
                          <Name>New York Avenue</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>919 Rhode Island Avenue NE</Street>
                              <Zip>20018</Zip>
                          </Address>
                          <Code>B04</Code>
                          <Lat>38.9210596891</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-76.9959369166</Lon>
                          <Name>Rhode Island Avenue</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>801 Michigan Avenue NE</Street>
                              <Zip>20017</Zip>
                          </Address>
                          <Code>B05</Code>
                          <Lat>38.9332109913</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-76.9945342851</Lon>
                          <Name>Brookland</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>550 Galloway Street NE</Street>
                              <Zip>20011</Zip>
                          </Address>
                          <Code>B06</Code>
                          <Lat>38.9518467675</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0022030768</Lon>
                          <Name>Fort Totten</Name>
                          <StationTogether1>E06</StationTogether1>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Washington</City>
                              <State>DC</State>
                              <Street>327 Cedar Street NW</Street>
                              <Zip>20012</Zip>
                          </Address>
                          <Code>B07</Code>
                          <Lat>38.976078531</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0181766987</Lon>
                          <Name>Takoma</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Silver Spring</City>
                              <State>MD</State>
                              <Street>8400 Colesville Road</Street>
                              <Zip>20910</Zip>
                          </Address>
                          <Code>B08</Code>
                          <Lat>38.9939493747</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0310178268</Lon>
                          <Name>Silver Spring</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Forest Glen</City>
                              <State>MD</State>
                              <Street>9730 Georgia Avenue</Street>
                              <Zip>20910</Zip>
                          </Address>
                          <Code>B09</Code>
                          <Lat>39.0149542752</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0429165548</Lon>
                          <Name>Forest Glen</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Silver Spring</City>
                              <State>MD</State>
                              <Street>11171 Georgia Avenue</Street>
                              <Zip>20902</Zip>
                          </Address>
                          <Code>B10</Code>
                          <Lat>39.0375271436</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0501070535</Lon>
                          <Name>Wheaton</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                      <Station>
                          <Address>
                              <City>Silver Spring</City>
                              <State>MD</State>
                              <Street>12501 Georgia Avenue</Street>
                              <Zip>20906</Zip>
                          </Address>
                          <Code>B11</Code>
                          <Lat>39.0617837655</Lat>
                          <LineCode1>RD</LineCode1>
                          <LineCode2 i:nil="true"/>
                          <LineCode3 i:nil="true"/>
                          <LineCode4 i:nil="true"/>
                          <Lon>-77.0535573593</Lon>
                          <Name>Glenmont</Name>
                          <StationTogether1/>
                          <StationTogether2/>
                      </Station>
                  </Stations>
              </StationsResp>
      summary: XML - Station List
  /json/jLines:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns information about all rail lines.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Lines</td>\r

        \r

        <td>\r

        Array containing line information (<a href=\"#Line\">Line</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"Line\" name=\"Line\">Line Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DisplayName</td>\r

        \r

        <td>Full name of line color.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>EndStationCode</td>\r

        \r

        <td>End station code. For example, will be E10 (Greenbelt) for the\r

        Green Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>InternalDestination1</td>\r

        \r

        <td>Intermediate terminal station code. During normal service, some\r

        trains on some lines might end their trip prior to the\r

        StartStationCode or EndStationCode. A good example is on the Red\r

        Line where some trains stop at A11 (Grosvenor) or B08 (Silver\r

        Spring). Empty string if not defined.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>InternalDestination2</td>\r

        \r

        <td>Similar to InternalDestination1.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LineCode</td>\r

        \r

        <td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r

        or SV).</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StartStationCode</td>\r

        \r

        <td>Start station code. For example, will be F11 (Branch Avenue)\r

        for the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r

        this value in other rail-related APIs to retrieve data about a\r

        station.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe330c
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "Lines": [
                      {
                          "DisplayName": "Green",
                          "EndStationCode": "E10",
                          "InternalDestination1": "",
                          "InternalDestination2": "",
                          "LineCode": "GR",
                          "StartStationCode": "F11"
                      },
                      {
                          "DisplayName": "Blue",
                          "EndStationCode": "G05",
                          "InternalDestination1": "",
                          "InternalDestination2": "",
                          "LineCode": "BL",
                          "StartStationCode": "J03"
                      },
                      {
                          "DisplayName": "Silver",
                          "EndStationCode": "G05",
                          "InternalDestination1": "",
                          "InternalDestination2": "",
                          "LineCode": "SV",
                          "StartStationCode": "N06"
                      },
                      {
                          "DisplayName": "Red",
                          "EndStationCode": "B11",
                          "InternalDestination1": "A11",
                          "InternalDestination2": "B08",
                          "LineCode": "RD",
                          "StartStationCode": "A15"
                      },
                      {
                          "DisplayName": "Orange",
                          "EndStationCode": "D13",
                          "InternalDestination1": "",
                          "InternalDestination2": "",
                          "LineCode": "OR",
                          "StartStationCode": "K08"
                      },
                      {
                          "DisplayName": "Yellow",
                          "EndStationCode": "E06",
                          "InternalDestination1": "E01",
                          "InternalDestination2": "",
                          "LineCode": "YL",
                          "StartStationCode": "C15"
                      }
                  ]
              }
      summary: JSON - Lines
  /json/jPath:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns a set of ordered stations and distances between two stations on the\r

        <em>same line</em>.</p>\r

        \r

        <p>Note that this method is not suitable on its own as a pathfinding solution\r

        between stations.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Path</td>\r

        \r

        <td>\r

        Array containing path details (<a href=\r

        \"#MetroPathItem\">MetroPathItem</a>)\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DistanceToPrev</td>\r

        \r

        <td>Distance in feet to the previous station in the list.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LineCode</td>\r

        \r

        <td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r

        or SV) this station's platform is on.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>SeqNum</td>\r

        \r

        <td>Ordered sequence number.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode</td>\r

        \r

        <td>Station code for this station. Use this value in other\r

        rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationName</td>\r

        \r

        <td>Full name for this station, as shown on the WMATA website.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe330e
      parameters:
        - default: N06
          description: Station code for the origin station.  Use the Station List method to return a list of all station codes.
          enum:
            - N06
          in: query
          name: FromStationCode
          required: true
          type: string
        - default: G05
          description: Station code for the destination station.  Use the Station List method to return a list of all station codes.
          enum:
            - G05
          in: query
          name: ToStationCode
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "Path": [
                      {
                          "DistanceToPrev": 0,
                          "LineCode": "SV",
                          "SeqNum": 1,
                          "StationCode": "N06",
                          "StationName": "Wiehle-Reston East"
                      },
                      {
                          "DistanceToPrev": 30867,
                          "LineCode": "SV",
                          "SeqNum": 2,
                          "StationCode": "N04",
                          "StationName": "Spring Hill"
                      },
                      {
                          "DistanceToPrev": 3634,
                          "LineCode": "SV",
                          "SeqNum": 3,
                          "StationCode": "N03",
                          "StationName": "Greensboro"
                      },
                      {
                          "DistanceToPrev": 3902,
                          "LineCode": "SV",
                          "SeqNum": 4,
                          "StationCode": "N02",
                          "StationName": "Tysons Corner"
                      },
                      {
                          "DistanceToPrev": 3440,
                          "LineCode": "SV",
                          "SeqNum": 5,
                          "StationCode": "N01",
                          "StationName": "McLean"
                      },
                      {
                          "DistanceToPrev": 24745,
                          "LineCode": "SV",
                          "SeqNum": 6,
                          "StationCode": "K05",
                          "StationName": "E Falls Church"
                      },
                      {
                          "DistanceToPrev": 13156,
                          "LineCode": "SV",
                          "SeqNum": 7,
                          "StationCode": "K04",
                          "StationName": "Ballston"
                      },
                      {
                          "DistanceToPrev": 2980,
                          "LineCode": "SV",
                          "SeqNum": 8,
                          "StationCode": "K03",
                          "StationName": "Virginia Square"
                      },
                      {
                          "DistanceToPrev": 2473,
                          "LineCode": "SV",
                          "SeqNum": 9,
                          "StationCode": "K02",
                          "StationName": "Clarendon"
                      },
                      {
                          "DistanceToPrev": 2687,
                          "LineCode": "SV",
                          "SeqNum": 10,
                          "StationCode": "K01",
                          "StationName": "Court House"
                      },
                      {
                          "DistanceToPrev": 4936,
                          "LineCode": "SV",
                          "SeqNum": 11,
                          "StationCode": "C05",
                          "StationName": "Rosslyn"
                      },
                      {
                          "DistanceToPrev": 6993,
                          "LineCode": "SV",
                          "SeqNum": 12,
                          "StationCode": "C04",
                          "StationName": "Foggy Bottom"
                      },
                      {
                          "DistanceToPrev": 2783,
                          "LineCode": "SV",
                          "SeqNum": 13,
                          "StationCode": "C03",
                          "StationName": "Farragut West"
                      },
                      {
                          "DistanceToPrev": 2001,
                          "LineCode": "SV",
                          "SeqNum": 14,
                          "StationCode": "C02",
                          "StationName": "McPherson Square"
                      },
                      {
                          "DistanceToPrev": 2359,
                          "LineCode": "SV",
                          "SeqNum": 15,
                          "StationCode": "C01",
                          "StationName": "Metro Center"
                      },
                      {
                          "DistanceToPrev": 1561,
                          "LineCode": "SV",
                          "SeqNum": 16,
                          "StationCode": "D01",
                          "StationName": "Federal Triangle"
                      },
                      {
                          "DistanceToPrev": 2016,
                          "LineCode": "SV",
                          "SeqNum": 17,
                          "StationCode": "D02",
                          "StationName": "Smithsonian"
                      },
                      {
                          "DistanceToPrev": 2643,
                          "LineCode": "SV",
                          "SeqNum": 18,
                          "StationCode": "D03",
                          "StationName": "L'Enfant Plaza"
                      },
                      {
                          "DistanceToPrev": 1757,
                          "LineCode": "SV",
                          "SeqNum": 19,
                          "StationCode": "D04",
                          "StationName": "Federal Center SW"
                      },
                      {
                          "DistanceToPrev": 3052,
                          "LineCode": "SV",
                          "SeqNum": 20,
                          "StationCode": "D05",
                          "StationName": "Capitol South"
                      },
                      {
                          "DistanceToPrev": 2703,
                          "LineCode": "SV",
                          "SeqNum": 21,
                          "StationCode": "D06",
                          "StationName": "Eastern Market"
                      },
                      {
                          "DistanceToPrev": 3289,
                          "LineCode": "SV",
                          "SeqNum": 22,
                          "StationCode": "D07",
                          "StationName": "Potomac Avenue"
                      },
                      {
                          "DistanceToPrev": 3750,
                          "LineCode": "SV",
                          "SeqNum": 23,
                          "StationCode": "D08",
                          "StationName": "Stadium Armory"
                      },
                      {
                          "DistanceToPrev": 12162,
                          "LineCode": "SV",
                          "SeqNum": 24,
                          "StationCode": "G01",
                          "StationName": "Benning Road"
                      },
                      {
                          "DistanceToPrev": 7779,
                          "LineCode": "SV",
                          "SeqNum": 25,
                          "StationCode": "G02",
                          "StationName": "Capitol Heights"
                      },
                      {
                          "DistanceToPrev": 5215,
                          "LineCode": "SV",
                          "SeqNum": 26,
                          "StationCode": "G03",
                          "StationName": "Addison Road"
                      },
                      {
                          "DistanceToPrev": 7960,
                          "LineCode": "SV",
                          "SeqNum": 27,
                          "StationCode": "G04",
                          "StationName": "Morgan Blvd"
                      },
                      {
                          "DistanceToPrev": 7256,
                          "LineCode": "SV",
                          "SeqNum": 28,
                          "StationCode": "G05",
                          "StationName": "Largo Town Center"
                      }
                  ]
              }
      summary: JSON - Path Between Stations
  /json/jSrcStationToDstStationInfo:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns a distance, fare information, and estimated travel time between any
        two stations, including those on different lines. Omit both parameters to
        retrieve data for all stations.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>StationToStationInfos</td>

        <td>
        Array containing station to station information (<a href=
        "#StationToStationInfo">StationToStationInfo</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="StationToStationInfo" name=
        "StationToStationInfo">StationToStationInfo Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>CompositeMiles</td>

        <td>Average of distance traveled between two stations and straight-line distance (as used for WMATA fare calculations).  For more details, please refer to WMATA's <a href="https://www.wmata.com/about/records/public_docs/upload/Tariff-on-Fares-Annotated-2-12-18.pdf#page=6" target="_blank" rel="noopener noreferrer">Tariff on Fares</a>.</td>
        </tr>

        <tr>
        <td>DestinationStation</td>

        <td>Destination station code. Use this value in other rail-related
        APIs to retrieve data about a station.</td>
        </tr>

        <tr>
        <td>RailFare</td>

        <td>
        Structure containing <a href="#RailFare">fare</a> information.
        </td>
        </tr>

        <tr>
        <td>RailTime</td>

        <td>Estimated travel time (schedule time) in minutes between the source and
        destination station. This is not correlated to minutes <span class="text-info">(Min)</span> in Real-Time Rail Predictions.</td>
        </tr>

        <tr>
        <td>SourceStation</td>

        <td>Origin station code. Use this value in other rail-related APIs
        to retrieve data about a station.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="RailFare" name="RailFare">RailFare Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>OffPeakTime</td>

        <td>Fare during off-peak times (times other than the ones described
        below).</td>
        </tr>

        <tr>
        <td>PeakTime</td>

        <td>Fare during peak times (weekdays from opening to 9:30 AM and
        3-7 PM, and weekends from midnight to closing).</td>
        </tr>

        <tr>
        <td>SeniorDisabled</td>

        <td>
        Reduced fare for <a href=
        "http://www.wmata.com/fares/reduced.cfm">senior citizens or
        people with disabilities</a>.
        </td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3313
      parameters:
        - default: E10
          description: Station code for the origin station.  Use the Station List method to return a list of all station codes.
          enum:
            - E10
          in: query
          name: FromStationCode
          type: string
        - default: J03
          description: Station code for the destination station.  Use the Station List method to return a list of all station codes.
          enum:
            - J03
          in: query
          name: ToStationCode
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "StationToStationInfos": [
                      {
                          "CompositeMiles": 25.41,
                          "DestinationStation": "J03",
                          "RailFare": {
                              "OffPeakTime": 3.6,
                              "PeakTime": 5.9,
                              "SeniorDisabled": 2.95
                          },
                          "RailTime": 66,
                          "SourceStation": "E10"
                      }
                  ]
              }
      summary: JSON - Station to Station Information
  /json/jStationEntrances:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns a list of nearby station entrances based on latitude, longitude, and\r

        radius (meters). Omit search parameters to return all station entrances.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>Entrances</td>\r

        \r

        <td>\r

        Array containing detailed information about station entrances\r

        (<a href=\"#StationEntrance\">StationEntrance</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"StationEntrance\" name=\r

        \"StationEntrance\">StationEntrance Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Description</td>\r

        \r

        <td>Additional information for the entrance, if available.\r

        Currently available data usually shows the same value as the Name\r

        element.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td style=\"text-decoration: line-through\">ID</td>\r

        \r

        <td><span class=\"text-danger\">Deprecated.</span></td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Lat</td>\r

        \r

        <td>Latitude.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Lon</td>\r

        \r

        <td>Longitude.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Name</td>\r

        \r

        <td>Name of the entrance (usually the station name and nearest\r

        intersection).</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode1</td>\r

        \r

        <td>The station code associated with this entrance. Use this value\r

        in other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationCode2</td>\r

        \r

        <td>For stations containing multiple platforms (e.g.: Gallery\r

        Place, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r

        station code.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe330f
      parameters:
        - default: 38.8978168
          description: Center point Latitude, required if Longitude and Radius are specified.
          enum:
            - 38.8978168
          in: query
          name: Lat
          type: number
        - default: -77.0404246
          description: Center point Longitude, required if Latitude and Radius are specified.
          enum:
            - -77.0404246
          in: query
          name: Lon
          type: number
        - default: 500
          description: Radius (meters) to include in the search area, required if Latitude and Longitude are specified.
          enum:
            - 500
          in: query
          name: Radius
          type: number
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "Entrances": [
                      {
                          "Description": "Farragut West, 17th & I St",
                          "ID": "100",
                          "Lat": 38.901098,
                          "Lon": -77.039293,
                          "Name": "Farragut West 17th & I St",
                          "StationCode1": "C03",
                          "StationCode2": ""
                      },
                      {
                          "Description": "Farragut West, 18th & I St",
                          "ID": "101",
                          "Lat": 38.901453,
                          "Lon": -77.042093,
                          "Name": "Farragut West 18th & I St",
                          "StationCode1": "C03",
                          "StationCode2": ""
                      }
                  ]
              }
      summary: JSON - Station Entrances
  /json/jStationInfo:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns station location and address information based on a given
        StationCode.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>Address</td>

        <td>
        Structure describing <a href="#Address">address</a> information.
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Repeated from input.</td>
        </tr>

        <tr>
        <td>Lat</td>

        <td>Latitude.</td>
        </tr>

        <tr>
        <td>LineCode1</td>

        <td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>
        </tr>

        <tr>
        <td>LineCode2</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode3</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode4</td>

        <td>Additional line served by this station, if applicable. Currently not in use.</td>
        </tr>

        <tr>
        <td>Lon</td>

        <td>Longitude.</td>
        </tr>

        <tr>
        <td>Name</td>

        <td>Station name.</td>
        </tr>

        <tr>
        <td>StationTogether1</td>

        <td>For stations with multiple platforms (e.g.: Gallery Place, Fort
        Totten, L'Enfant Plaza, and Metro Center), the additional
        StationCode will be listed here.</td>
        </tr>

        <tr>
        <td>StationTogether2</td>

        <td>Similar in function to StationTogether2. Currently not in
        use.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a name="Address">Address Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>City</td>

        <td>City.</td>
        </tr>

        <tr>
        <td>State</td>

        <td>State (abbreviated).</td>
        </tr>

        <tr>
        <td>Street</td>

        <td>Street address (for GPS use).</td>
        </tr>

        <tr>
        <td>Zip</td>

        <td>Zip code.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3310
      parameters:
        - default: A01
          description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - A01
          in: query
          name: StationCode
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "Address": {
                      "City": "Washington",
                      "State": "DC",
                      "Street": "607 13th St. NW",
                      "Zip": "20005"
                  },
                  "Code": "A01",
                  "Lat": 38.8983144732,
                  "LineCode1": "RD",
                  "LineCode2": null,
                  "LineCode3": null,
                  "LineCode4": null,
                  "Lon": -77.0280779971,
                  "Name": "Metro Center",
                  "StationTogether1": "C01",
                  "StationTogether2": ""
              }
      summary: JSON - Station Information
  /json/jStationParking:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns parking information at a station based on a given StationCode. Omit
        the StationCode to return parking information for all stations.</p>

        <p>If a station has no parking, the StationsParking element will contain no
        child elements.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>StationsParking</td>

        <td>
        Array containing station parking information (<a href=
        "#StationParking">StationParking</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="StationParking" name="StationParking">StationParking
        Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Useful when returning parking information for all
        stations. Use this value in other rail-related APIs to retrieve
        data about a station.</td>
        </tr>

        <tr>
        <td>Notes</td>

        <td>When not NULL, provides additional parking resources such as
        nearby lots.</td>
        </tr>

        <tr>
        <td>AllDayParking</td>

        <td>
        Structure describing <a href="#AllDayParking">all-day
        parking</a> options.
        </td>
        </tr>

        <tr>
        <td>ShortTermParking</td>

        <td>
        Structure describing <a href="#ShortTermParking">short-term
        parking</a> options.
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="AllDayParking" name="AllDayParking">AllDayParking
        Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>TotalCount</td>

        <td>Number of all-day parking spots available at a station.</td>
        </tr>

        <tr>
        <td>RiderCost</td>

        <td>All-day cost per day (weekday) for Metro riders. NULL when no all-day
        spots are available. For most stations, this value is identical to
        the NonRiderCost.<br>
        <br>
        For cases where the NonRiderCost is different, the lower cost per
        day requires a valid rail trip using a SmarTrip&reg; card
        originating from a station other than the one where the patron
        parked. To receive this lower rate, patrons must pay for their
        parking with the same SmarTrip&reg; card used to enter/exit
        Metrorail, and must exit the parking lot within two hours of
        exiting Metrorail.</td>
        </tr>

        <tr>
        <td>NonRiderCost</td>

        <td>All-day cost per day (weekday) for non-Metro riders. NULL when no all-day
        spots are available.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="ShortTermParking" name=
        "ShortTermParking">ShortTermParking Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>SaturdayRiderCost</td>

        <td>Similar to RiderCost, except denoting Saturday prices.</td>
        </tr>

        <tr>
        <td>SaturdayNonRiderCost</td>

        <td>Similar to NonRiderCost, except denoting Saturday prices.</td>
        </tr>

        <tr>
        <td>TotalCount</td>

        <td>Number of short-term parking spots available at a station
        (parking meters).</td>
        </tr>

        <tr>
        <td>Notes</td>

        <td>Misc. information relating to short-term parking. NULL when no
        short-term spots are available.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe330d
      parameters:
        - description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - E08
            - F06
          in: query
          name: StationCode
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "StationsParking": [
                      {
                          "Code": "F06",
                          "Notes": "325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.",
                          "AllDayParking": {
                              "TotalCount": 808,
                              "RiderCost": 4.45,
                              "NonRiderCost": 4.45,
                              "SaturdayRiderCost": 2,
                              "SaturdayNonRiderCost": 2,
                          },
                          "ShortTermParking": {
                              "TotalCount": 15,
                              "Notes": "Short term parking available 5 am - 2 am, time limit 12 hours"
                          }
                      }
                  ]
              }
      summary: JSON - Parking Information
  /json/jStationTimes:
    get:
      description: "<h4 class=\"text-primary\">Description</h4>\r

        \r

        <p>Returns opening and scheduled first/last train times based on a given\r

        StationCode. Omit the StationCode to return timing information for all\r

        stations.</p>\r

        \r

        <p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r

        Plaza, etc.), a distinct call is required for each StationCode to retrieve the\r

        full set of train times at such stations.</p>\r

        \r

        <h4 class=\"text-primary\">Response Elements</h4>\r

        \r

        <table class=\"table table-condensed table-hover\">\r

        <thead>\r

        <tr>\r

        <th class=\"col-md-3\">Element</th>\r

        \r

        <th>Description</th>\r

        </tr>\r

        </thead>\r

        \r

        <tbody>\r

        <tr>\r

        <td>StationTimes</td>\r

        \r

        <td>\r

        Array containing station timing information (<a href=\r

        \"#StationTime\">StationTime</a>).\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"StationTime\" name=\"StationTime\">StationTime\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Code</td>\r

        \r

        <td>Station code for this station. Use this value in other\r

        rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>StationName</td>\r

        \r

        <td>Full name of the station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>*Day Elements</td>\r

        \r

        <td>\r

        Container elements containing timing information based on\r

        <a href=\"#dow\">day of the week.</a>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r

        Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>OpeningTime</td>\r

        \r

        <td>Station opening time. Format is HH:mm.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>FirstTrains</td>\r

        \r

        <td>\r

        Structure containing <a href=\"#first\">first train</a>\r

        information.\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>LastTrains</td>\r

        \r

        <td>\r

        Structure containing <a href=\"#last\">last train</a>\r

        information.\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"first\" name=\"first\">FirstTrains Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Time</td>\r

        \r

        <td>First train leaves the station at this time. Format is\r

        HH:mm.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DestinationStation</td>\r

        \r

        <td>Station code for the train's destination. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td colspan=\"2\">\r

        <div class=\"text-primary\" style=\"margin-top: 1em\">\r

        <a id=\"last\" name=\"last\">LastTrains Elements</a>\r

        </div>\r

        </td>\r

        </tr>\r

        \r

        <tr>\r

        <td>Time</td>\r

        \r

        <td>Last train leaves the station at this time. Format is HH:mm.\r

        Note that when the time is AM, it signifies the next day. For\r

        example, a value of 02:30 under a Saturday element means the last\r

        train leaves on Sunday at 2:30 AM.</td>\r

        </tr>\r

        \r

        <tr>\r

        <td>DestinationStation</td>\r

        \r

        <td>Station code for the train's destination. Use this value in\r

        other rail-related APIs to retrieve data about a station.</td>\r

        </tr>\r

        </tbody>\r

        </table>"
      operationId: 5476364f031f5909e4fe3312
      parameters:
        - default: E10
          description: Station code.  Use the Station List method to return a list of all station codes.
          enum:
            - E10
          in: query
          name: StationCode
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "StationTimes": [
                      {
                          "Code": "E10",
                          "StationName": "Greenbelt",
                          "Monday": {
                              "OpeningTime": "04:50",
                              "FirstTrains": [
                                  {
                                      "Time": "05:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "23:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Tuesday": {
                              "OpeningTime": "04:50",
                              "FirstTrains": [
                                  {
                                      "Time": "05:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "23:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Wednesday": {
                              "OpeningTime": "04:50",
                              "FirstTrains": [
                                  {
                                      "Time": "05:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "23:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Thursday": {
                              "OpeningTime": "04:50",
                              "FirstTrains": [
                                  {
                                      "Time": "05:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "23:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Friday": {
                              "OpeningTime": "04:50",
                              "FirstTrains": [
                                  {
                                      "Time": "05:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "02:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Saturday": {
                              "OpeningTime": "06:50",
                              "FirstTrains": [
                                  {
                                      "Time": "07:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "02:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          },
                          "Sunday": {
                              "OpeningTime": "06:50",
                              "FirstTrains": [
                                  {
                                      "Time": "07:00",
                                      "DestinationStation": "F11"
                                  }
                              ],
                              "LastTrains": [
                                  {
                                      "Time": "23:30",
                                      "DestinationStation": "F11"
                                  }
                              ]
                          }
                      }
                  ]
              }
      summary: JSON - Station Timings
  /json/jStations:
    get:
      description: |-
        <h4 class="text-primary">Description</h4>

        <p>Returns a list of station location and address information based on a given
        LineCode. Omit the LineCode to return all stations. The response is an array of
        objects identical to those returned in the Station Information method.</p>

        <h4 class="text-primary">Response Elements</h4>

        <table class="table table-condensed table-hover">
        <thead>
        <tr>
        <th class="col-md-3">Element</th>

        <th>Description</th>
        </tr>
        </thead>

        <tbody>
        <tr>
        <td>Stations</td>

        <td>
        Array containing station information (<a href=
        "#Station">Station</a>).
        </td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="Station" name="Station">Station Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>Address</td>

        <td>
        Structure describing <a href="#Address">address</a> information.
        </td>
        </tr>

        <tr>
        <td>Code</td>

        <td>Station code. Repeated from input.</td>
        </tr>

        <tr>
        <td>Lat</td>

        <td>Latitude.</td>
        </tr>

        <tr>
        <td>LineCode1</td>

        <td>Two-letter abbreviation for one line (e.g.: RD, BL, YL, OR, GR, or SV) served by this station. If the station has an additional platform, the lines served by the other platform are listed in the LineCodeX values for the record associated with the StationCode found in StationTogether1.</td>
        </tr>

        <tr>
        <td>LineCode2</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode3</td>

        <td>Additional line served by this station, if applicable.</td>
        </tr>

        <tr>
        <td>LineCode4</td>

        <td>Additional line served by this station, if applicable. Currently not in use.</td>
        </tr>

        <tr>
        <td>Lon</td>

        <td>Longitude.</td>
        </tr>

        <tr>
        <td>Name</td>

        <td>Station name.</td>
        </tr>

        <tr>
        <td>StationTogether1</td>

        <td>For stations with multiple platforms (e.g.: Gallery Place, Fort
        Totten, L'Enfant Plaza, and Metro Center), the additional
        StationCode will be listed here.</td>
        </tr>

        <tr>
        <td>StationTogether2</td>

        <td>Similar in function to StationTogether2. Currently not in
        use.</td>
        </tr>

        <tr>
        <td colspan="2">
        <div class="text-primary" style="margin-top: 1em">
        <a id="Address" name="Address">Address Elements</a>
        </div>
        </td>
        </tr>

        <tr>
        <td>City</td>

        <td>City.</td>
        </tr>

        <tr>
        <td>State</td>

        <td>State (abbreviated).</td>
        </tr>

        <tr>
        <td>Street</td>

        <td>Street address (for GPS use).</td>
        </tr>

        <tr>
        <td>Zip</td>

        <td>Zip code.</td>
        </tr>
        </tbody>
        </table>
      operationId: 5476364f031f5909e4fe3311
      parameters:
        - description: |-
            Two-letter line code abbreviation:

            <ul>
            <li>RD - Red</li>
            <li>YL - Yellow</li>
            <li>GR - Green</li>
            <li>BL - Blue</li>
            <li>OR - Orange</li>
            <li>SV - Silver</li>
            </ul>
          enum:
            - RD
            - YL
            - GR
            - BL
            - OR
            - SV
          in: query
          name: LineCode
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Default response code.
          examples:
            application/json: |-
              {
                  "Stations": [
                      {
                          "Address": {
                              "City": "Rockville",
                              "State": "MD",
                              "Street": "15903 Somerville Drive",
                              "Zip": "20855"
                          },
                          "Code": "A15",
                          "Lat": 39.1199273249,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.1646273343,
                          "Name": "Shady Grove",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Rockville",
                              "State": "MD",
                              "Street": "251 Hungerford Drive",
                              "Zip": "20850"
                          },
                          "Code": "A14",
                          "Lat": 39.0843216075,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.1461253392,
                          "Name": "Rockville",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Rockville",
                              "State": "MD",
                              "Street": "1600 Chapman Avenue",
                              "Zip": "20852"
                          },
                          "Code": "A13",
                          "Lat": 39.0624676517,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.1208179517,
                          "Name": "Twinbrook",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Rockville",
                              "State": "MD",
                              "Street": "5500 Marinelli Road",
                              "Zip": "20852"
                          },
                          "Code": "A12",
                          "Lat": 39.0481513573,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.112829859,
                          "Name": "White Flint",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Bethesda",
                              "State": "MD",
                              "Street": "10300 Rockville Pike",
                              "Zip": "20852"
                          },
                          "Code": "A11",
                          "Lat": 39.02926895,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.10384972,
                          "Name": "Grosvenor",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Bethesda",
                              "State": "MD",
                              "Street": "8810 Rockville Pike",
                              "Zip": "20814"
                          },
                          "Code": "A10",
                          "Lat": 39.0000564843,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0969522905,
                          "Name": "Medical Center",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Bethesda",
                              "State": "MD",
                              "Street": "7450 Wisconsin Avenue",
                              "Zip": "20814"
                          },
                          "Code": "A09",
                          "Lat": 38.9843936603,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0941291922,
                          "Name": "Bethesda",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "5337 Wisconsin Avenue NW",
                              "Zip": "20015"
                          },
                          "Code": "A08",
                          "Lat": 38.9594838736,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.084995805,
                          "Name": "Friendship Heights",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "4501 Wisconsin Avenue NW",
                              "Zip": "20016"
                          },
                          "Code": "A07",
                          "Lat": 38.9488514351,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0795873255,
                          "Name": "Tenleytown",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "4200 Connecticut Avenue NW",
                              "Zip": "20008"
                          },
                          "Code": "A06",
                          "Lat": 38.9432652883,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0629861805,
                          "Name": "Van Ness UDC",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "3599 Connecticut Avenue NW",
                              "Zip": "20008"
                          },
                          "Code": "A05",
                          "Lat": 38.9347628908,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0580425191,
                          "Name": "Cleveland Park",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "2700 Connecticut Ave., NW",
                              "Zip": "20008"
                          },
                          "Code": "A04",
                          "Lat": 38.9250851371,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0524180207,
                          "Name": "Woodley Park Zoo",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "1525 20th St. NW",
                              "Zip": "20036"
                          },
                          "Code": "A03",
                          "Lat": 38.9095980575,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0434143597,
                          "Name": "Dupont Circle",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "1001 Connecticut Avenue NW",
                              "Zip": "20036"
                          },
                          "Code": "A02",
                          "Lat": 38.9032019462,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0397008272,
                          "Name": "Farragut North",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "607 13th St. NW",
                              "Zip": "20005"
                          },
                          "Code": "A01",
                          "Lat": 38.8983144732,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0280779971,
                          "Name": "Metro Center",
                          "StationTogether1": "C01",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "630 H St. NW",
                              "Zip": "20001"
                          },
                          "Code": "B01",
                          "Lat": 38.8983168097,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0219153904,
                          "Name": "Gallery Place",
                          "StationTogether1": "F01",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "450 F Street NW",
                              "Zip": "20001"
                          },
                          "Code": "B02",
                          "Lat": 38.8960903176,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0166389566,
                          "Name": "Judiciary Square",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "701 First St. NE",
                              "Zip": "20002"
                          },
                          "Code": "B03",
                          "Lat": 38.8977660392,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0074142921,
                          "Name": "Union Station",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "200 Florida Ave N.E.",
                              "Zip": "20002"
                          },
                          "Code": "B35",
                          "Lat": 38.9070162121,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0030204472,
                          "Name": "New York Avenue",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "919 Rhode Island Avenue NE",
                              "Zip": "20018"
                          },
                          "Code": "B04",
                          "Lat": 38.9210596891,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -76.9959369166,
                          "Name": "Rhode Island Avenue",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "801 Michigan Avenue NE",
                              "Zip": "20017"
                          },
                          "Code": "B05",
                          "Lat": 38.9332109913,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -76.9945342851,
                          "Name": "Brookland",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "550 Galloway Street NE",
                              "Zip": "20011"
                          },
                          "Code": "B06",
                          "Lat": 38.9518467675,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0022030768,
                          "Name": "Fort Totten",
                          "StationTogether1": "E06",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Washington",
                              "State": "DC",
                              "Street": "327 Cedar Street NW",
                              "Zip": "20012"
                          },
                          "Code": "B07",
                          "Lat": 38.976078531,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0181766987,
                          "Name": "Takoma",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Silver Spring",
                              "State": "MD",
                              "Street": "8400 Colesville Road",
                              "Zip": "20910"
                          },
                          "Code": "B08",
                          "Lat": 38.9939493747,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0310178268,
                          "Name": "Silver Spring",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Forest Glen",
                              "State": "MD",
                              "Street": "9730 Georgia Avenue",
                              "Zip": "20910"
                          },
                          "Code": "B09",
                          "Lat": 39.0149542752,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0429165548,
                          "Name": "Forest Glen",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Silver Spring",
                              "State": "MD",
                              "Street": "11171 Georgia Avenue",
                              "Zip": "20902"
                          },
                          "Code": "B10",
                          "Lat": 39.0375271436,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0501070535,
                          "Name": "Wheaton",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      },
                      {
                          "Address": {
                              "City": "Silver Spring",
                              "State": "MD",
                              "Street": "12501 Georgia Avenue",
                              "Zip": "20906"
                          },
                          "Code": "B11",
                          "Lat": 39.0617837655,
                          "LineCode1": "RD",
                          "LineCode2": null,
                          "LineCode3": null,
                          "LineCode4": null,
                          "Lon": -77.0535573593,
                          "Name": "Glenmont",
                          "StationTogether1": "",
                          "StationTogether2": ""
                      }
                  ]
              }
      summary: JSON - Station List
