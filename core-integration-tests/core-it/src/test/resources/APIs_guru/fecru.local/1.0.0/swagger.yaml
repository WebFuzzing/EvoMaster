swagger: "2.0"
schemes:
  - http
host: fecru.local
basePath: /context/
info:
  contact:
    x-twitter: Atlassian
  title: Fisheye Crucible
  version: 1.0.0
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://twitter.com/Atlassian/profile_image?size=original
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.18
      format: wadl
      url: https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fecru.wadl
      version: "1.0"
  x-providerName: fecru.local
paths:
  /rest-service-fecru/admin/groups/:
    get:
      description: Retrieve a page of groups.
      parameters:
        - description: filter groups by name prefix
          in: query
          name: prefix
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters: []
    post:
      description: Creates a new user group.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/groups/{name}":
    delete:
      description: Deletes a group by name
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a group by name.
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: group name
        in: path
        name: name
        required: true
        type: string
    put:
      description: Updates an existing group.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/groups/{name}/users":
    delete:
      description: Removes user from group
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Lists group's user names
      operationId: listGroupUsers
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: group name
        in: path
        name: name
        required: true
        type: string
    put:
      description: Adds user to group
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/permission-schemes:
    get:
      description: Retrieve a page of permission schemes.
      parameters:
        - description: permission scheme name part filter, case insensitive, optional
          in: query
          name: name
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters: []
    post:
      description: Creates a new permission scheme. The new permission scheme is blank or can be created from another existing permission scheme.
      parameters:
        - description: if set, the new permission scheme will be a copy of permissionSchemeName
          in: query
          name: copyFrom
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}":
    delete:
      description: Deletes a permission scheme by name
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a permission scheme by name
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: Updates an existing permission scheme.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}/anonymous-users":
    delete:
      description: Removes anonymous-user permission [action name] from given permission scheme
      operationId: deletePermissionSchemeAnonymousUsers
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a page of anonymous users permissions [action name] for given permission scheme.
      operationId: listAnonymousUsersPrincipalAssociation
      parameters:
        - description: action name
          in: query
          name: action
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: |-
        Add anonymous-user permission [action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeAnonymousUsers
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}/groups":
    delete:
      description: Removes group permission [group name, action name] from given permission scheme
      operationId: deletePermissionSchemeGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a page of group permissions [group name, action name] for given permission scheme.
      operationId: listGroupPrincipalAssociation
      parameters:
        - description: group name
          in: query
          name: name
          required: false
          type: string
        - description: action name
          in: query
          name: action
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: |-
        Add group permission [group name, action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}/logged-in-users":
    delete:
      description: Removes logged-in-users permission [action name] from given permission scheme
      operationId: deletePermissionSchemeLoggedUsers
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a page of logged in users permissions [action name] for given permission scheme.
      operationId: listLoggedUsersPrincipalAssociation
      parameters:
        - description: action name
          in: query
          name: action
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: |-
        Add logged-in-users permission [action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeLoggedUsers
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}/projects":
    get:
      description: Retrieve a page of projects for given permission scheme.
      operationId: listProjects
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
  "/rest-service-fecru/admin/permission-schemes/{name}/review-roles":
    delete:
      description: Removes review-role permission [role name, action name] from given permission scheme
      operationId: deletePermissionSchemeRole
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a page of review-roles permissions [role name, action name] for given permission scheme.
      operationId: listRolesPrincipalAssociation
      parameters:
        - description: role name
          in: query
          name: name
          required: false
          type: string
        - description: action name
          in: query
          name: action
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: |-
        Add review-role permission [role name, action name] to given permission scheme
         List of available action names:
         

         List of available role names:
      operationId: addPermissionSchemeReviewRole
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/permission-schemes/{name}/users":
    delete:
      description: Removes user permission [username, action name] from given permission scheme
      operationId: deletePermissionSchemeUser
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a page of user permissions [username, action name] for given permission scheme.
      operationId: listUserPrincipalAssociation
      parameters:
        - description: permission scheme name
          in: query
          name: name
          required: false
          type: string
        - description: action name
          in: query
          name: action
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: permission scheme name
        in: path
        name: name
        required: true
        type: string
    put:
      description: |-
        Add user permission [username, action name] to given permission scheme
         List of available action names:
      operationId: addPermissionSchemeUser
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/projects:
    get:
      description: Retrieve a page of projects.
      parameters:
        - description: project's name part filter, optional
          in: query
          name: name
          required: false
          type: string
        - description: project's key part filter, optional
          in: query
          name: key
          required: false
          type: string
        - description: project's default repository key part filter, optional
          in: query
          name: defaultRepositoryName
          required: false
          type: string
        - description: project's permission scheme pare name filter, optional
          in: query
          name: permissionSchemeName
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
    parameters: []
    post:
      description: Creates a new project.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{key}":
    delete:
      description: |-
        Deletes a project by key (including all reviews in this project).
         Use 
         to move reviews to another project.
      parameters:
        - default: false
          description: if true deletes reviews in project
          in: query
          name: deleteProjectReviews
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a project by key.
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: project key
        in: path
        name: key
        required: true
        type: string
    put:
      description: Updates an existing project.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{key}/allowed-reviewer-groups":
    delete:
      description: Delete group from project's allowed reviewer group list
      operationId: deleteAllowedReviewerGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieves project's allowed reviewer groups
      operationId: allowedReviewerGroups
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: project key
        in: path
        name: key
        required: true
        type: string
    put:
      description: Add group to project's allowed reviewer group list
      operationId: addAllowedReviewerGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{key}/allowed-reviewer-users":
    delete:
      description: Remove user from project's allowed reviewer users list
      operationId: deleteAllowedReviewerUser
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieves project's allowed reviewer users
      operationId: allowedReviewerUsers
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: project key
        in: path
        name: key
        required: true
        type: string
    put:
      description: Add user to project's allowed reviewer users list
      operationId: addAllowedReviewerUser
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{key}/default-reviewer-groups":
    delete:
      description: Delete group from project's default reviewer group list
      operationId: deleteDefaultReviewerGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieves project's default reviewer groups
      operationId: defaultReviewerGroups
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: project key
        in: path
        name: key
        required: true
        type: string
    put:
      description: Add group to project's default reviewer group list
      operationId: addDefaultReviewerGroup
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{key}/default-reviewer-users":
    delete:
      description: Remove user from project's default reviewer users list
      operationId: deleteDefaultReviewerUser
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieves project's default reviewer users
      operationId: listDefaultReviewerUsers
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: project key
        in: path
        name: key
        required: true
        type: string
    put:
      description: Add user to project's default reviewer users list
      operationId: addDefaultReviewerUser
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/projects/{sourceProjectKey}/move-reviews/{destinationProjectKey}":
    parameters:
      - description: project key of reviews and snippets source project
        in: path
        name: sourceProjectKey
        required: true
        type: string
      - description: project key of reviews and snippets destination project
        in: path
        name: destinationProjectKey
        required: true
        type: string
    put:
      description: Move reviews and snippets from source project to destination project
      operationId: moveAllReviews
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/repositories:
    get:
      description: Retrieve a page of repositories. Repository properties with default values may not be returned.
      parameters:
        - description: "filter repositories by repository type: svn, git, hg, cvs, p4, ..."
          in: query
          name: type
          required: false
          type: string
        - description: filter repositories by enabled flag
          in: query
          name: enabled
          required: false
          type: boolean
        - description: filter repositories by started flag
          in: query
          name: started
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
    parameters: []
    post:
      description: Creates a repository.
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/repositories-v1:
    parameters: []
    post:
      description: Adds repository
      operationId: addRepository
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}":
    get:
      description: Returns information about the status of the repository and the current indexing status
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        type: string
  "/rest-service-fecru/admin/repositories-v1/{repository}/":
    delete:
      description: |-
        Deletes repository.
         Warning: you can not undo this operation
      operationId: deleteRepository
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository to delete
        in: path
        name: repository
        required: true
        type: string
  "/rest-service-fecru/admin/repositories-v1/{repository}/disable":
    parameters:
      - description: the key of the repository to disable
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Disables repository.
      operationId: disableRepository
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/enable":
    parameters:
      - description: the key of the repository to enable
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Enables repository.
      operationId: enableRepository
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/reindex-discussions":
    parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        type: string
    post:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindexChangesetComments
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/reindex-linecount":
    parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        type: string
    post:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/reindex-reviews":
    parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Re-indexes all the Crucible revision data (which revisions have been reviewed)
      operationId: doReviewRevisionReindex
      parameters:
        - default: false
          description: if true will wait for the indexing to finish before returning
          in: query
          name: synchronous
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/reindex-search":
    parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        type: string
    post:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and comitter, also used for activity streams and JIRA integration.
      operationId: rebuildSearchIndex
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/reindex-source":
    parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        type: string
    post:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      parameters:
        - default: false
          description: |-
            if true and the repository is a dvcs repository (git or mercurial) it will re-clone the repository
             before re-indexing
          in: query
          name: clone
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/rescan-metadata":
    parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Re-scans the repository metadata for SVN and Perforce repositories. Only valid for Perforce and SVN repositories.
      parameters:
        - description: the revision number to start at
          format: int64
          in: query
          name: from
          required: false
          type: integer
        - description: the revision number to end at
          format: int64
          in: query
          name: to
          required: false
          type: integer
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/scan":
    parameters:
      - description: the key of the repository to run scan for
        in: path
        name: repository
        required: true
        type: string
    post:
      description: |-
        Runs an incremental repository index now.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST Api Token to authorize.
      operationId: scan
      parameters:
        - default: false
          description: if true will wait for the indexing to finish before returning
          in: query
          name: synchronous
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/scan-cvs":
    parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Scans the whole CVS repository for any changes since the last scan. Only valid for CVS repositories.
      operationId: scanCvs
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/start":
    parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Starts the repository.
      operationId: startRepository
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories-v1/{repository}/stop":
    parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        type: string
    post:
      description: Stops the repository. Does not wait for the repository to stop before returning.
      operationId: stopRepository
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}":
    delete:
      description: Deletes a repository by key
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a repository by key. Repository properties with default values may not be returned.
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        type: string
    put:
      description: Updates an existing repository.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/full-incremental-index":
    parameters:
      - description: the key of the repository to scan
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Runs an full incremental repository index.
         For CVS: scans the whole CVS repository for any changes since the last scan.
         For other repository types will trigger an incremental index.
      operationId: fullIncrementalIndex
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/incremental-index":
    parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Runs an incremental repository index.  This is the same operation as triggered by scheduled indexing.
         Can be called using the REST API Token to authorize.
      operationId: incrementalIndex
      parameters:
        - default: false
          description: if true will wait for the indexing to finish before returning
          in: query
          name: wait
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/permissions":
    get:
      description: Retrieve repository permissions properties.
      operationId: permissions
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Updates repository permissions properties.

         Valid permission settings: any combination of useDefaults, allowAnonymous, allowLoggedIn.
      operationId: updatePermissions
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/permissions/groups":
    delete:
      description: Delete group from repository allowed groups
      operationId: removeGroupToPermissions
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Lists groups allowed to access repository.
      operationId: permissionsGroups
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for full repository permission administration functionality
         Adds group to repository allowed groups
      operationId: addGroupToPermissions
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/reindex-changeset-discussion":
    parameters:
      - description: the key of the repository to perform the operation for
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Rebuilds the changeset discussion index for the specified repository. The index is used to display changeset
         discussions in activity streams.
      operationId: reindexChangesetDiscussion
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/reindex-linecount":
    parameters:
      - description: the key of the repository to re-index
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Re-indexes the linecount data used to generate the LOC graphs. The linecount data will be recalculated in daily
         buckets based on the server timezone.
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/reindex-reviews":
    parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        type: string
    put:
      description: Re-indexes all the Crucible revision data (which revisions have been reviewed)
      operationId: reindexReviews
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/reindex-search":
    parameters:
      - description: the key of the repository to re-index.
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Rebuilds the search index data for the given repository. This will rebuild the data used to search by path,
         commit message and committer, also used for activity streams and JIRA integration.
      operationId: reindexSearch
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/reindex-source":
    parameters:
      - description: the key of the repository to reindex
        in: path
        name: repository
        required: true
        type: string
    put:
      description: |-
        Deletes the existing cache and re-indexes the repository from scratch.
         For large or slow repositories this may take some time, during which some functionality will be unavailable.
         This action will also restart the repository.
      parameters:
        - default: false
          description: if true and the repository is a dvcs repository (git or mercurial) it will re-clone the repository before re-indexing
          in: query
          name: clone
          required: false
          type: boolean
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/rescan-metadata":
    parameters:
      - description: the key of the repository to re-scan
        in: path
        name: repository
        required: true
        type: string
    put:
      description: Re-scans the repository metadata. Only valid for Perforce and SVN repositories.
      parameters:
        - description: the revision number to start at
          in: query
          name: from
          required: false
          type: string
        - description: the revision number to end at
          in: query
          name: to
          required: false
          type: string
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/start":
    parameters:
      - description: the key of the repository to start
        in: path
        name: repository
        required: true
        type: string
    put:
      description: Starts repository. Does not wait for the repository to start before returning.
      operationId: start
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/stop":
    parameters:
      - description: the key of the repository to stop
        in: path
        name: repository
        required: true
        type: string
    put:
      description: Stops repository. Does not wait for the repository to stop before returning.
      operationId: stop
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/repositories/{repository}/updates":
    get:
      description: Retrieves repository updates properties.
      operationId: repositoryUpdates
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: repository key
        in: path
        name: repository
        required: true
        type: string
    put:
      operationId: updateRepositoryUpdates
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/repositories/~defaults/permissions:
    get:
      description: Retrieve default repository permissions properties.
      operationId: defaultPermissions
      responses:
        "200":
          description: Successful Response
    parameters: []
    put:
      description: |-
        Updates default repository permissions properties.

         Valid permission settings: any combination of allowAnonymous, allowLoggedIn
      operationId: updateDefaultPermissions
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/admin/users/:
    get:
      description: Retrieve a page of users.
      responses:
        "200":
          description: Successful Response
    parameters: []
    post:
      description: Creates a new user. Tries to add the user to fisheye-users and crucible-users groups if those exist.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/users/{name}":
    delete:
      description: Deletes a user by name
      responses:
        "200":
          description: Successful Response
    get:
      description: Retrieve a user by name.
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: user name
        in: path
        name: name
        required: true
        type: string
    put:
      description: Updates an existing user.
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/admin/users/{name}/groups":
    delete:
      description: Removes user from group
      parameters: []
      responses:
        "200":
          description: Successful Response
    get:
      description: Lists user's group names
      operationId: listUserGroups
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: user name
        in: path
        name: name
        required: true
        type: string
    put:
      description: Adds user to group
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/auth/login:
    parameters: []
    post:
      description: Get the user authentication token.
      operationId: login
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/indexing-status-v1/status/{repository}":
    get:
      description: Returns indexing status of given repository.
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the key of the repository to get status of
        in: path
        name: repository
        required: true
        type: string
  /rest-service-fecru/recently-visited-v1:
    get:
      description: Get a list of recently visited items for the currently logged in user.
      operationId: getRecent
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/detailed:
    get:
      description: Get a list of recently visisted items for the currently logged in user, including the detailed entities.
      operationId: getRecentDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/projects:
    get:
      description: Get a list of recently visited projects for the currently logged in user.
      operationId: getRecentProjects
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/projects/detailed:
    get:
      description: Get a list of recently visited projects for the currently logged in Project, including the detailed entities.
      operationId: getRecentProjectsDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/repositories:
    get:
      description: Get a list of recently visited repositories for the currently logged in user.
      operationId: getRecentRepositories
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/repositories/detailed:
    get:
      description: Get a list of recently visisted repositories for the currently logged in user, including the detailed entities.
      operationId: getRecentRepositoriesDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/reviews:
    get:
      description: Get a list of recently visited reviews for the currently logged in user.
      operationId: getRecentReviews
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/reviews/detailed:
    get:
      description: Get a list of recently visited reviews for the currently logged in user, including the detailed entities.
      operationId: getRecentReviewsDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/snippets:
    get:
      description: Get a list of recently visited snippets for the currently logged in user.
      operationId: getRecentSnippets
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/snippets/detailed:
    get:
      description: Get a list of recently visited snippets for the currently logged in user, including the detailed entities.
      operationId: getRecentSnippetsDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/users:
    get:
      description: Get a list of recently visited users for the currently logged in user.
      operationId: getRecentUsers
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/recently-visited-v1/users/detailed:
    get:
      description: Get a list of recently visited users for the currently logged in user, including the detailed entities.
      operationId: getRecentUsersDetailed
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/server-v1:
    get:
      description: Provides general information about the server's configuration.
      operationId: getInfo
      responses:
        "200":
          description: Successful Response
    parameters: []
  /rest-service-fecru/share-content-v1/share:
    parameters: []
    post:
      operationId: doShareContent
      parameters: []
      responses:
        "200":
          description: Successful Response
  /rest-service-fecru/user-prefs-v1:
    parameters: []
    post:
      description: |-
        Using POST method to set a user preference.
         If repo is not set, the preference will be recognised as a global preference.
      operationId: setPref
      parameters: []
      responses:
        "200":
          description: Successful Response
  "/rest-service-fecru/user-prefs-v1/{property}":
    get:
      description: Getting user's global preference
      operationId: getGlobalPref
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        type: string
  "/rest-service-fecru/user-prefs-v1/{repository}/{property}":
    get:
      description: Getting user's preference related to a certain repository
      operationId: getRepoPref
      responses:
        "200":
          description: Successful Response
    parameters:
      - description: the property(preference) name
        in: path
        name: property
        required: true
        type: string
      - description: the key of the repository
        in: path
        name: repository
        required: true
        type: string
