openapi: 3.0.1
servers:
  - url: https://api.soundcloud.com
info:
  contact:
    name: API issue tracker
    url: https://github.com/soundcloud/api
  termsOfService: https://developers.soundcloud.com/docs/api/terms-of-use
  title: SoundCloud Public API Specification
  version: 1.0.0
  x-apisguru-categories:
    - media
  x-logo:
    url: https://a-v2.sndcdn.com/assets/images/sc-icons/ios-a62dfc8fe7.png
  x-origin:
    - format: openapi
      url: https://gist.githubusercontent.com/MikeRalphson/a9eb3040cb611121b568844958564849/raw/d0996b827b9eb2ae4fa946b9aacf02b03dc3d933/openapi.json
      version: "3.0"
  x-providerName: soundcloud.com
tags:
  - description: Authentication and Authorization Endpoints.
    name: oauth
  - description: Own User Endpoints.
    name: me
  - description: Search Endpoints.
    name: search
  - description: Playlists Endpoints.
    name: playlists
  - description: Tracks Endpoints.
    name: tracks
  - description: SoundCloud Users Endpoints.
    name: users
  - description: Liking Tracks & Playlists.
    name: likes
  - description: Reposting Tracks & Playlists.
    name: reposts
  - description: Miscellaneous Endpoints.
    name: miscellaneous
paths:
  /connect:
    get:
      description: |
        <h3>Security Advice</h3>
        * Using the [implicit OAuth authorization flow](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-16#section-2.1.2) (`response_type=token`)  is **not recommended**. It can suffer from access token leakage and access token replay attacks. Use `response_type=code` instead.
        * Use the `state` parameter for [CSRF protection](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-16#section-4.7). Pass a sufficient  random nonce here and verify this nonce again after retrieving the token.
      parameters:
        - $ref: "#/components/parameters/client_id"
        - $ref: "#/components/parameters/redirect_uri"
        - $ref: "#/components/parameters/response_type"
        - $ref: "#/components/parameters/scope"
        - $ref: "#/components/parameters/state"
      responses:
        "302":
          $ref: "#/components/responses/FoundHtml"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: The OAuth2 authorization endpoint. Your app redirects a user to this endpoint, allowing them to delegate access to their account.
      tags:
        - oauth
  "/likes/playlists/{playlist_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/playlist_id"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Unlikes a playlist.
      tags:
        - likes
    post:
      parameters:
        - $ref: "#/components/parameters/playlist_id"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      security:
        - AuthHeader: []
      summary: Likes a playlist.
      tags:
        - likes
  "/likes/tracks/{track_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/test_track_id"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Unlikes a track.
      tags:
        - likes
    post:
      parameters:
        - $ref: "#/components/parameters/test_track_id"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      security:
        - AuthHeader: []
      summary: Likes a track.
      tags:
        - likes
  /me:
    get:
      responses:
        "200":
          $ref: "#/components/responses/CompleteUser"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns the authenticated user’s information.
      tags:
        - me
  /me/activities:
    get:
      parameters:
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Activities"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns the authenticated user's activities.
      tags:
        - me
  /me/activities/all/own:
    get:
      parameters:
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Activities"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Recent the authenticated user's activities.
      tags:
        - me
  /me/activities/tracks:
    get:
      parameters:
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Activities"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns the authenticated user's recent track related activities.
      tags:
        - me
  /me/connections:
    get:
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/Connections"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of the authenticated user's connected social accounts.
      tags:
        - me
  "/me/connections/{connection_id}":
    get:
      parameters:
        - $ref: "#/components/parameters/connection_id"
      responses:
        "200":
          $ref: "#/components/responses/Connection"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Returns the authenticated user's connected social account.
      tags:
        - me
  /me/favorites/ids:
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
        "404":
          description: The user could not be found
      security:
        - AuthHeader: []
      summary: Returns user’s favorites ids. (use /me/likes/tracks instead to fetch the authenticated user's likes)
      tags:
        - me
  /me/followers:
    get:
      parameters:
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Users"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of users who are following the authenticated user.
      tags:
        - me
  "/me/followers/{follower_id}":
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/follower_id"
      responses:
        "200":
          $ref: "#/components/responses/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a user who is following the authenticated user. (use /users/{user_id} instead, to fetch the user details)
      tags:
        - me
  /me/followings:
    get:
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/Users"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of users who are followed by the authenticated user.
      tags:
        - me
  /me/followings/tracks:
    get:
      parameters:
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/TracksList"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of recent tracks from users followed by the authenticated user.
      tags:
        - me
  "/me/followings/{user_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/user_id_to_follow"
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                "200":
                  $ref: "#/components/examples/OK"
          description: Success
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      security:
        - AuthHeader: []
      summary: Deletes a user who is followed by the authenticated user.
      tags:
        - me
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        "200":
          $ref: "#/components/responses/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Returns a user who is followed by the authenticated user. (use /users/{user_id} instead, to fetch the user details)
      tags:
        - me
    put:
      parameters:
        - $ref: "#/components/parameters/user_id_to_follow"
      responses:
        "200":
          $ref: "#/components/responses/Successful"
        "201":
          $ref: "#/components/responses/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Follows a user.
      tags:
        - me
  /me/likes/tracks:
    get:
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of favorited or liked tracks of the authenticated user.
      tags:
        - me
  /me/playlists:
    get:
      description: Returns playlist info, playlist tracks and tracks owner info.
      parameters:
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/PlaylistsArray"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Returns user’s playlists (sets).
      tags:
        - me
  "/me/playlists/{playlist_id}":
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/playlist_id"
      responses:
        "200":
          $ref: "#/components/responses/Playlist"
      security:
        - AuthHeader: []
      summary: Returns playlist. (use /playlists/{playlist_id} instead, to fetch the playlist details)
      tags:
        - me
  /me/tracks:
    get:
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Returns a list of user's tracks.
      tags:
        - me
  "/me/tracks/{track_id}":
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/track_id"
      responses:
        "200":
          $ref: "#/components/responses/Track"
      security:
        - AuthHeader: []
      summary: Returns a specified track. (use /tracks/{track_id} instead, to fetch the track details)
      tags:
        - me
  /oauth2/token:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            examples:
              AuthorizationCode:
                $ref: "#/components/examples/AuthorizationCode"
              ClientCredentials:
                $ref: "#/components/examples/ClientCredentials"
              Password:
                $ref: "#/components/examples/Password"
              RefreshToken:
                $ref: "#/components/examples/RefreshToken"
            schema:
              oneOf:
                - $ref: "#/components/schemas/AuthorizationCode"
                - $ref: "#/components/schemas/RefreshToken"
                - $ref: "#/components/schemas/Password"
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                ExpiringToken:
                  $ref: "#/components/examples/ExpiringToken"
                NonExpiringToken:
                  $ref: "#/components/examples/NonExpiringToken"
          description: Success
        "400":
          content:
            application/json:
              examples:
                BadRequest:
                  $ref: "#/components/examples/BadRequest"
                ErrorInvalidGrant:
                  $ref: "#/components/examples/ErrorInvalidGrant"
                ErrorUnsupportedGrant:
                  $ref: "#/components/examples/ErrorUnsupportedGrant"
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Error"
          description: Bad Request
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - ClientId: []
      summary: This endpoint accepts POST requests and is used to provision access tokens once a user has authorized your application.
      tags:
        - oauth
  /playlists:
    get:
      parameters:
        - $ref: "#/components/parameters/q"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Playlists"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Performs a playlist search based on a query
      tags:
        - search
    post:
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: "#/components/examples/CreateUpdatePlaylistRequest"
            schema:
              $ref: "#/components/schemas/CreateUpdatePlaylistRequest"
        description: Create Playlist request
      responses:
        "201":
          $ref: "#/components/responses/LegacyPlaylist"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Creates a playlist.
      tags:
        - playlists
  "/playlists/{playlist_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/fake_playlist_id"
      responses:
        "200":
          description: Success
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Deletes a playlist.
      tags:
        - playlists
    get:
      parameters:
        - $ref: "#/components/parameters/playlist_id"
        - $ref: "#/components/parameters/secret_token"
        - $ref: "#/components/parameters/access"
      responses:
        "200":
          $ref: "#/components/responses/Playlist"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a playlist.
      tags:
        - playlists
    put:
      parameters:
        - $ref: "#/components/parameters/fake_playlist_id"
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: "#/components/examples/CreateUpdatePlaylistRequest"
            schema:
              $ref: "#/components/schemas/CreateUpdatePlaylistRequest"
        description: Playlist payload
      responses:
        "200":
          $ref: "#/components/responses/LegacyPlaylist"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Updates a playlist.
      tags:
        - playlists
  "/playlists/{playlist_id}/reposters":
    get:
      parameters:
        - $ref: "#/components/parameters/playlist_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/MetaUsers"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns a collection of playlist's reposters.
      tags:
        - playlists
  "/playlists/{playlist_id}/tracks":
    get:
      parameters:
        - $ref: "#/components/parameters/playlist_id"
        - $ref: "#/components/parameters/secret_token"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns tracks under a playlist.
      tags:
        - playlists
  "/reposts/playlists/{playlist_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/repost_playlist_id"
      responses:
        "200":
          description: Success
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Removes a repost on a playlist as the authenticated user
      tags:
        - reposts
    post:
      parameters:
        - $ref: "#/components/parameters/repost_playlist_id"
      responses:
        "201":
          description: Created
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Reposts a playlist as the authenticated user
      tags:
        - reposts
  "/reposts/tracks/{track_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/test_track_id"
      responses:
        "200":
          description: Success
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Removes a repost on a track as the authenticated user
      tags:
        - reposts
    post:
      parameters:
        - $ref: "#/components/parameters/test_track_id"
      responses:
        "201":
          description: Created
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Reposts a track as the authenticated user
      tags:
        - reposts
  /resolve:
    get:
      parameters:
        - $ref: "#/components/parameters/url"
      responses:
        "302":
          $ref: "#/components/responses/Found"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Resolves soundcloud.com URLs to Resource URLs to use with the API.
      tags:
        - miscellaneous
  /tracks:
    get:
      parameters:
        - $ref: "#/components/parameters/q"
        - $ref: "#/components/parameters/ids"
        - $ref: "#/components/parameters/genres"
        - $ref: "#/components/parameters/tags"
        - $ref: "#/components/parameters/bpm"
        - $ref: "#/components/parameters/duration"
        - $ref: "#/components/parameters/created_at"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          description: Internal Server Error
      security:
        - AuthHeader: []
          ClientId: []
      summary: Performs a track search based on a query
      tags:
        - search
    post:
      requestBody:
        content:
          multipart/form-data:
            examples:
              default:
                $ref: "#/components/examples/TrackDataRequest"
            schema:
              $ref: "#/components/schemas/TrackDataRequest"
              required:
                - track[title]
                - track[asset_data]
          multipart/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TrackDataRequest"
              required:
                - track[title]
                - track[asset_data]
      responses:
        "201":
          $ref: "#/components/responses/Track"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Uploads a new track.
      tags:
        - tracks
  "/tracks/{track_id}":
    delete:
      parameters:
        - $ref: "#/components/parameters/track_id"
      responses:
        "200":
          description: Success
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
      summary: Deletes a track.
      tags:
        - tracks
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/secret_token"
      responses:
        "200":
          $ref: "#/components/responses/Track"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns a track.
      tags:
        - tracks
    put:
      parameters:
        - $ref: "#/components/parameters/track_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrackMetadataRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TrackDataRequest"
          multipart/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TrackDataRequest"
        description: Track payload
      responses:
        "200":
          $ref: "#/components/responses/Track"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
      summary: Updates a track's information.
      tags:
        - tracks
  "/tracks/{track_id}/comments":
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Comments"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns the comments posted on the track(track_id).
      tags:
        - tracks
    post:
      parameters:
        - $ref: "#/components/parameters/track_id"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              properties:
                comment:
                  properties:
                    body:
                      description: Comment's content
                      example: test comment
                      type: string
                    timestamp:
                      description: Timestamp of a comment. String or float representation is supported
                      oneOf:
                        - type: string
                        - type: number
                  required:
                    - body
                  type: object
              type: object
        description: |
          Body of a comment
        required: true
      responses:
        "201":
          $ref: "#/components/responses/Comment"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns the newly created comment on success
      tags:
        - tracks
  "/tracks/{track_id}/favoriters":
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/UsersList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns a list of users who have favorited or liked the track.
      tags:
        - tracks
  "/tracks/{track_id}/related":
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns all related tracks of track on SoundCloud.
      tags:
        - tracks
  "/tracks/{track_id}/reposters":
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/MetaUsers"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns a collection of track's reposters.
      tags:
        - tracks
  "/tracks/{track_id}/streams":
    get:
      parameters:
        - $ref: "#/components/parameters/track_id"
        - $ref: "#/components/parameters/secret_token"
      responses:
        "200":
          $ref: "#/components/responses/Streams"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - ClientId: []
      summary: Returns a track's streamable URLs
      tags:
        - tracks
  /users:
    get:
      parameters:
        - $ref: "#/components/parameters/q"
        - $ref: "#/components/parameters/ids"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Users"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Performs a user search based on a query
      tags:
        - search
  "/users/{user_id}":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        "200":
          $ref: "#/components/responses/CompleteUser"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a user.
      tags:
        - users
  "/users/{user_id}/comments":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/CommentsList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user's comments.
      tags:
        - users
  "/users/{user_id}/favorites":
    get:
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user's favorited or liked tracks. (use /users/:userId/likes/tracks instead, to fetch a user's likes)
      tags:
        - users
  "/users/{user_id}/followers":
    get:
      description: Returns a list of users that follows (user_id).
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Users"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user’s followers.
      tags:
        - users
  "/users/{user_id}/followings":
    get:
      description: Returns list of users that (user_id) follows.
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Users"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user’s followings.
      tags:
        - users
  "/users/{user_id}/followings/{following_id}":
    get:
      deprecated: true
      description: Returns (following_id) that is followed by (user_id).
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/following_id"
      responses:
        "200":
          $ref: "#/components/responses/CompleteUser"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a user's following. (use /users/{user_id} instead, to fetch the user details)
      tags:
        - users
  "/users/{user_id}/likes/tracks":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user's liked tracks.
      tags:
        - users
  "/users/{user_id}/playlists":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Playlists"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user's playlists.
      tags:
        - users
  "/users/{user_id}/tracks":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/access"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/linked_partitioning"
      responses:
        "200":
          $ref: "#/components/responses/Tracks"
        "401":
          $ref: "#/components/responses/Unauthorized"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns a list of user's tracks.
      tags:
        - users
  "/users/{user_id}/web-profiles":
    get:
      parameters:
        - $ref: "#/components/parameters/user_id"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/WebProfiles"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      security:
        - AuthHeader: []
          ClientId: []
      summary: Returns list of user's links added to their profile (website, facebook, instagram).
      tags:
        - users
components:
  examples:
    Accepted:
      value:
        status: 202 - Accepted
    Activities:
      value:
        collection:
          - created_at: 2020/10/12 12:02:44 +0000
            origin:
              allOf:
                - $ref: "#/components/examples/Track/value"
            type: track:repost
          - created_at: 2020/10/12 12:02:44 +0000
            origin:
              allOf:
                - $ref: "#/components/examples/Playlist/value"
            type: playlist
        future_href: https://api.soundcloud.com/me/activities?limit=10&cursor=000001
        next_href: https://api.soundcloud.com/me/activities?limit=10&cursor=00000
    AuthorizationCode:
      value:
        client_id: CLIENT_ID
        client_secret: CLIENT_SECRET
        code: 1-123456-12345678-FAbcfbe9ir2wdj0
        grant_type: authorization_code
        redirect_uri: https://mywebsite/auth/soundcloud
    BadRequest:
      value:
        code: 400
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
        message: Detailed message of errors, when available
    ClientCredentials:
      value:
        client_id: CLIENT_ID
        client_secret: CLIENT_SECRET
        grant_type: client_credentials
    Comment:
      value:
        body: comment body
        created_at: 2007/09/11 15:40:24 +0000
        id: 1234
        kind: comment
        timestamp: 4960
        track_id: 123456
        uri: https://api.soundcloud.com/comments/1234
        user:
          avatar_url: https://i1.sndcdn.com/avatars-large.jpg
          followers_count: 138
          followings_count: 172
          id: 12345
          kind: user
          last_modified: 2017/04/10 14:48:03 +0000
          permalink: permalink
          permalink_url: https://soundcloud.com/permalink
          public_favorites_count: 5
          reposts_count: 0
          uri: https://api.soundcloud.com/users/12345
          username: user name
        user_id: 12345
    Comments:
      value:
        collection:
          $ref: "#/components/examples/Comment/value"
        next_href: https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567
    CommentsList:
      description: Deprecated, use Comments instead.
      value:
        $ref: "#/components/examples/Comment/value"
    CompleteUser:
      value:
        avatar_url: https://i1.sndcdn.com/avatars.jpg
        city: City
        country: Country
        description: null
        discogs_name: null
        first_name: First_name
        followers_count: 0
        followings_count: 0
        full_name: Full Name
        id: 12345
        kind: user
        last_modified: 2020/01/03 12:08:25 +0000
        last_name: Last_name
        locale: en
        myspace_name: null
        permalink: permalink
        permalink_url: https://soundcloud.com/permalink
        plan: Free
        playlist_count: 3
        primary_email_confirmed: true
        private_playlists_count: 0
        private_tracks_count: 0
        public_favorites_count: 20
        quota:
          unlimited_upload_quota: false
          upload_seconds_left: 10800
          upload_seconds_used: 0
        reposts_count: 0
        subscriptions:
          - product:
              id: some-id
              name: some.name
        track_count: 0
        upload_seconds_left: 10800
        uri: https://api.soundcloud.com/users/1234
        username: some.user
        website: null
        website_title: null
    Connection:
      value:
        created_at: 1995/07/24 08:55:02 +0000
        display_name: Full Name
        id: 123456
        kind: connection
        post_favorite: true
        post_publish: true
        service: google_plus
        type: google_plus
        uri: https://api.soundcloud.com/connections/123456
    Connections:
      value:
        $ref: "#/components/examples/Connection/value"
    CreateUpdatePlaylistRequest:
      value:
        playlist:
          description: Playlist for test purposes
          sharing: private
          title: Test Auto-created Playlist
          tracks:
            - id: 219787221
            - id: 783019264
            - id: 870073492
    Created:
      value:
        status: 201 - Created
    ErrorInvalidGrant:
      value:
        code: 400
        link: https://developers.soundcloud.com/docs/api/guide#authentication
        message: invalid_grant
    ErrorUnsupportedGrant:
      value:
        code: 400
        link: https://developers.soundcloud.com/docs/api/guide#authentication
        message: unsupported_grant
    ExpiringToken:
      value:
        access_token: some string
        expires_in: 21599
        refresh_token: some string
        scope: ""
    Forbidden:
      value:
        code: 403
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
        message: Detailed message of errors, when available
    MetaUsers:
      value:
        collection:
          $ref: "#/components/examples/UserOf/value"
        next_href: https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567
    NonExpiringToken:
      value:
        access_token: some string
        scope: non-expiring
    NotFound:
      value:
        code: 404
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
        message: Detailed message of errors, when available
    OK:
      value:
        status: Status(200) - OK
    Password:
      value:
        client_id: CLIENT_ID
        client_secret: CLIENT_SECRET
        password: my-password
        username: my-user-name
    Playlist:
      value:
        artwork_url: ""
        created_at: 2020/07/16 16:09:54 +0000
        description: null
        downloadable: true
        duration: 11000
        ean: null
        embeddable_by: all
        genre: ""
        id: 12345
        kind: playlist
        label: null
        label_id: null
        label_name: null
        last_modified: 2020/09/08 09:13:00 +0000
        license: all-rights-reserved
        likes_count: 0
        permalink: permalink
        permalink_url: https://soundcloud.com/userPermalink/sets/permalink
        playlist_type: ""
        purchase_title: null
        purchase_url: null
        release: null
        release_day: null
        release_month: null
        release_year: null
        sharing: public
        streamable: true
        tag_list: ""
        tags: ""
        title: permalink
        track_count: 2
        tracks:
          $ref: "#/components/examples/Track/value"
        tracks_uri: https://api.soundcloud.com/playlists/12345/tracks
        type: ""
        uri: https://api.soundcloud.com/playlists/12345
        user:
          $ref: "#/components/examples/UserOf/value"
        user_id: 1234
    Playlists:
      value:
        collection:
          $ref: "#/components/examples/Playlist/value"
        next_href: https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567
    PlaylistsArray:
      description: Deprecated, use Playlists instead.
      value:
        $ref: "#/components/examples/Playlist/value"
    RefreshToken:
      value:
        client_id: CLIENT_ID
        client_secret: CLIENT_SECRET
        grant_type: refresh_token
        refresh_token: 1234c331329477150e7b6056ff212345
    Streams:
      value:
        hls_mp3_128_url: https://cf-media.sndcdn.com/
        hls_opus_64_url: https://cf-media.sndcdn.com/
        http_mp3_128_url: https://cf-media.sndcdn.com/
        preview_mp3_128_url: https://cf-media.sndcdn.com/
    Success:
      value:
        status: 200 - OK
    Successful:
      value:
        status: 200 - Successful
    TooManyRequests:
      value:
        code: 429
        link: https://developers.soundcloud.com/docs/api/rate-limits#errors
        message: Detailed message of errors, when available
        spam_warning_urn: soundcloud:spam-warnings:1
    Track:
      value:
        access: playable
        artwork_url: https://i1.sndcdn.com/artworks-large.jpg
        available_country_codes: null
        bpm: null
        comment_count: 4
        commentable: true
        created_at: 2019/01/15 15:40:49 +0000
        description: null
        download_count: 0
        download_url: https://api.soundcloud.com/tracks/1234/download
        downloadable: false
        duration: 40000
        embeddable_by: all
        favoritings_count: 271
        genre: Rock
        id: 1234
        isrc: null
        key_signature: null
        kind: track
        label_name: some label
        license: all-rights-reserved
        permalink_url: https://soundcloud.com/userPermalink/trackPermalink
        playback_count: 8027
        purchase_title: null
        purchase_url: null
        release: null
        release_day: 22
        release_month: 8
        release_year: 2019
        reposts_count: 18
        secret_uri: null
        sharing: public
        stream_url: https://api.soundcloud.com/tracks/1234/stream
        streamable: true
        tag_list: ""
        title: Some title
        uri: https://api.soundcloud.com/tracks/1234
        user:
          $ref: "#/components/examples/UserOf/value"
        user_favorite: true
        user_playback_count: 1
        waveform_url: https://wave.sndcdn.com/someString.png
    TrackDataRequest:
      value:
        "track[artwork_data]": null
        "track[asset_data]": <binary string>
        "track[commentable]": true
        "track[description]": Public-api test sample upload
        "track[downloadable]": false
        "track[embeddable_by]": me
        "track[genre]": Pop
        "track[isrc]": null
        "track[label_name]": null
        "track[license]": no-rights-reserved
        "track[permalink]": test-drum-sample
        "track[purchase_url]": null
        "track[release]": null
        "track[release_date]": 2021-02-18T00:00:00.000Z
        "track[sharing]": private
        "track[streamable]": true
        "track[tag_list]": null
        "track[title]": Test drum sample
    TrackMetadataRequest:
      value:
        "track[title]": Updated Test Track
    Tracks:
      value:
        collection:
          $ref: "#/components/examples/Track/value"
        next_href: https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567
    TracksList:
      description: Deprecated, use Tracks instead.
      value:
        $ref: "#/components/examples/Track/value"
    Unauthorized:
      value:
        code: 401
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
        message: Detailed message of errors, when available
    UnprocessableEntity:
      value:
        code: 422
        link: https://developers.soundcloud.com/docs/api/explorer/open-api
        message: Detailed message of errors, when available
    User:
      value:
        avatar_url: https://i1.sndcdn.com/avatars.jpg
        city: City
        country: Country
        created_at: 2018/01/01 12:08:25 +0000
        description: null
        discogs_name: null
        first_name: First_name
        followers_count: 0
        followings_count: 0
        full_name: Full Name
        id: 12345
        kind: user
        last_modified: 2020/01/03 12:08:25 +0000
        last_name: Last_name
        myspace_name: null
        permalink: permalink
        permalink_url: https://soundcloud.com/permalink
        plan: Free
        playlist_count: 3
        public_favorites_count: 20
        reposts_count: 0
        subscriptions:
          - product:
              id: some-id
              name: some.name
        track_count: 0
        upload_seconds_left: 10800
        uri: https://api.soundcloud.com/users/1234
        username: some.user
        website: null
        website_title: null
    UserOf:
      value:
        avatar_url: https://i1.sndcdn.com/avatars-large.jpg
        id: 12345
        kind: user
        last_modified: 2020/09/03 14:08:25 +0000
        permalink: permalink
        permalink_url: https://soundcloud.com/permalink
        uri: https://api.soundcloud.com/users/12345
        username: user.name
    Users:
      value:
        collection:
          $ref: "#/components/examples/User/value"
        next_href: https://api.soundcloud.com/collection?client_id=client_id&page_size=10&cursor=1234567
    UsersList:
      description: Deprecated, use Users instead.
      value:
        $ref: "#/components/examples/User/value"
    WebProfiles:
      value:
        - created_at: 1995/10/20 12:10:39 +0000
          id: 1234
          kind: web-profile
          service: facebook
          title: my facebook
          url: http://facebook.com
          username: username
  parameters:
    access:
      description: |
        Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
      explode: false
      in: query
      name: access
      schema:
        default: playable,preview
        items:
          enum:
            - playable
            - preview
            - blocked
          type: string
        type: array
      style: form
    bpm:
      description: Return tracks with a specified bpm[from], bpm[to]
      in: query
      name: bpm
      required: false
      schema:
        properties:
          from:
            description: Return tracks with at least this bpm value
            example: 123
            type: integer
          to:
            description: Return tracks with at most this bpm value
            example: 456
            type: integer
        type: object
      style: deepObject
    client_id:
      description: The client id belonging to your application
      example: some client
      in: query
      name: client_id
      required: true
      schema:
        type: string
    comment_id:
      description: SoundCloud comment id
      example: 123456
      in: path
      name: comment_id
      required: true
      schema:
        type: integer
    connection_id:
      description: SoundCloud connection id
      example: 123456
      in: path
      name: connection_id
      required: true
      schema:
        type: integer
    created_at:
      description: (yyyy-mm-dd hh:mm:ss) return tracks created within the specified dates
      in: query
      name: created_at
      required: false
      schema:
        properties:
          from:
            description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date or later
            example: 2020-12-24T00:00:00.000Z
            type: string
          to:
            description: (yyyy-mm-dd hh:mm:ss) return tracks created at this date or earlier
            example: 2020-12-26T00:00:00.000Z
            type: string
        type: object
      style: deepObject
    duration:
      description: Return tracks within a specified duration range
      in: query
      name: duration
      required: false
      schema:
        properties:
          from:
            description: Return tracks with at least this duration value
            example: 123456
            type: integer
          to:
            description: Return tracks with at most this duration value
            example: 456789
            type: integer
        type: object
      style: deepObject
    fake_playlist_id:
      description: SoundCloud playlist id
      example: 10
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
    follower_id:
      description: SoundCloud User id to denote a Follower
      example: 743372812
      in: path
      name: follower_id
      required: true
      schema:
        type: integer
    following_id:
      description: SoundCloud User id to denote a Following of a user
      example: 25219981
      in: path
      name: following_id
      required: true
      schema:
        type: integer
    genres:
      description: A comma separated list of genres
      example: Pop,House
      in: query
      name: genres
      required: false
      schema:
        type: string
    ids:
      description: A comma separated list of track ids to filter on
      example: 1,2,3
      in: query
      name: ids
      required: false
      schema:
        type: string
    limit:
      description: Number of results to return in the collection.
      example: 2
      in: query
      name: limit
      required: false
      schema:
        default: 50
        maximum: 200
        minimum: 1
        type: integer
    linked_partitioning:
      description: Returns paginated collection of items (recommended, returning a list without pagination is deprecated and should not be used)
      example: true
      in: query
      name: linked_partitioning
      required: false
      schema:
        type: boolean
    offset:
      deprecated: true
      description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      example: 0
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
    playlist_id:
      description: SoundCloud playlist id
      example: 1212781357
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
    q:
      description: search
      example: hello
      in: query
      name: q
      required: true
      schema:
        type: string
    redirect_uri:
      description: The redirect uri you have configured for your application
      example: https://soundcloud.com
      in: query
      name: redirect_uri
      required: true
      schema:
        type: string
    repost_playlist_id:
      description: SoundCloud playlist id
      example: 1205584273
      in: path
      name: playlist_id
      required: true
      schema:
        type: integer
    response_type:
      description: It's recommended to use "code" here
      example: code
      in: query
      name: response_type
      required: true
      schema:
        enum:
          - code
          - token
          - code_and_token
        type: string
    scope:
      description: Scope
      example: default
      in: query
      name: scope
      required: true
      schema:
        type: string
    secret_token:
      description: A secret token to fetch private playlists/tracks
      in: query
      name: secret_token
      required: false
      schema:
        type: string
    state:
      description: Any value included here will be appended to the redirect URI. Use this for CSRF protection.
      example: encrypted_session_info
      in: query
      name: state
      required: false
      schema:
        type: string
    tag:
      description: tag
      example: some tag
      in: path
      name: tag
      required: true
      schema:
        type: string
    tags:
      description: A comma separated list of tags
      example: test
      in: query
      name: tags
      required: false
      schema:
        type: string
    test_track_id:
      description: SoundCloud Track id
      example: 1015448728
      in: path
      name: track_id
      required: true
      schema:
        type: integer
    track_id:
      description: SoundCloud Track id
      example: 308946187
      in: path
      name: track_id
      required: true
      schema:
        type: integer
    url:
      description: SoundCloud URL
      example: https://soundcloud.com/user-434241656
      in: query
      name: url
      required: true
      schema:
        type: string
    user_id:
      description: SoundCloud User id
      example: 948745750
      in: path
      name: user_id
      required: true
      schema:
        type: integer
    user_id_to_follow:
      description: SoundCloud User id
      example: 743372812
      in: path
      name: user_id
      required: true
      schema:
        type: integer
  responses:
    Accepted:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Accepted"
      description: Accepted
    Activities:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Activities"
          schema:
            $ref: "#/components/schemas/Activities"
      description: Success
    BadRequest:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/BadRequest"
          schema:
            $ref: "#/components/schemas/Error"
      description: Bad Request
    Comment:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Comment"
          schema:
            $ref: "#/components/schemas/Comment"
      description: Success
    Comments:
      content:
        application/json; charset=utf-8:
          examples:
            commentsList:
              $ref: "#/components/examples/CommentsList"
            default:
              $ref: "#/components/examples/Comments"
          schema:
            oneOf:
              - $ref: "#/components/schemas/Comments"
              - $ref: "#/components/schemas/CommentsList"
      description: Success
    CommentsList:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/CommentsList"
          schema:
            $ref: "#/components/schemas/CommentsList"
      description: Success
    CompleteUser:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/CompleteUser"
          schema:
            $ref: "#/components/schemas/CompleteUser"
      description: Success
    Connection:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Connection"
          schema:
            $ref: "#/components/schemas/Connection"
      description: Success
    Connections:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Connections"
          schema:
            $ref: "#/components/schemas/Connections"
      description: Success
    Created:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Created"
      description: Created
    Forbidden:
      content:
        application/json:
          examples:
            default:
              $ref: "#/components/examples/Forbidden"
          schema:
            $ref: "#/components/schemas/Error"
      description: Forbidden
    Found:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: "#/components/schemas/Found"
      description: Found
    FoundHtml:
      content:
        application/json; charset=utf-8:
          schema:
            type: string
      description: Found
    LegacyPlaylist:
      content:
        application/json; charset=utf-8:
          schema:
            description: Soundcloud Playlist Object
            properties:
              artwork_url:
                description: URL to a JPEG image.
                type: string
              created_at:
                description: Created timestamp.
                type: string
              description:
                description: Playlist description.
                type: string
              downloadable:
                description: is downloadable.
                type: boolean
              duration:
                description: Playlist duration.
                type: integer
              ean:
                description: European Article Number.
                type: string
              embeddable_by:
                description: Embeddable by.
                type: string
              genre:
                description: Playlist genre.
                type: string
              id:
                description: Playlist identifier.
                type: integer
              kind:
                description: Type of Soundcloud object (playlist).
                type: string
              label_id:
                description: Label user identifier.
                type: integer
              label_name:
                description: Label name.
                type: string
              last_modified:
                description: Last modified timestamp.
                type: string
              license:
                description: License.
                type: string
              permalink:
                description: Playlist permalink.
                type: string
              permalink_url:
                description: Playlist permalink URL.
                type: string
              playlist_type:
                description: Type of playlist.
                type: string
              purchase_title:
                description: Purchase title.
                type: string
              purchase_url:
                description: Purchase URL.
                type: string
              release:
                description: Release.
                type: string
              release_day:
                description: Day of release.
                type: integer
              release_month:
                description: Month of release.
                type: integer
              release_year:
                description: Year of release.
                type: integer
              sharing:
                description: Type of sharing (private/public).
                type: string
              streamable:
                description: Is streamable.
                type: boolean
              tag_list:
                description: Tags.
                type: string
              title:
                description: Playlist title.
                type: string
              track_count:
                description: Count of tracks.
                type: integer
              tracks:
                description: List of tracks.
                items:
                  description: Soundcloud Track object.
                  properties:
                    artwork_url:
                      description: URL to a JPEG image.
                      type: string
                    bpm:
                      description: Tempo.
                      type: integer
                    comment_count:
                      description: Number of comments.
                      type: integer
                    commentable:
                      description: Is commentable.
                      type: boolean
                    created_at:
                      description: Created timestamp.
                      type: string
                    description:
                      description: Track description.
                      type: string
                    download_count:
                      description: NUmber of downloads.
                      type: integer
                    downloadable:
                      description: Is downloadable.
                      type: string
                    duration:
                      description: Track duration.
                      type: integer
                    embeddable_by:
                      deprecated: true
                      description: Embeddable by.
                      type: string
                    favoritings_count:
                      description: Number of favoritings.
                      type: integer
                    genre:
                      description: Genre
                      type: string
                    id:
                      description: Track identifier.
                      type: integer
                    isrc:
                      description: ISRC code.
                      type: string
                    key_signature:
                      description: Key signature.
                      type: string
                    kind:
                      description: Type of object (track).
                      type: string
                    label_name:
                      description: Label user name.
                      type: string
                    license:
                      description: License
                      type: string
                    permalink_url:
                      description: Permalink URL.
                      type: string
                    playback_count:
                      description: Number of plays.
                      type: integer
                    purchase_title:
                      description: Purchase title.
                      type: string
                    purchase_url:
                      description: Purchase URL.
                      type: string
                    release:
                      description: Release.
                      type: string
                    release_day:
                      description: Day of release.
                      type: integer
                    release_month:
                      description: Month of release.
                      type: integer
                    release_year:
                      description: Year of release.
                      type: integer
                    sharing:
                      description: Type of sharing (public/private).
                      type: string
                    stream_url:
                      description: URL to stream.
                      type: string
                    streamable:
                      description: Is streamable.
                      type: boolean
                    tag_list:
                      description: Tags.
                      type: string
                    title:
                      description: Track title.
                      type: string
                    uri:
                      description: Track URI.
                      type: string
                    user:
                      $ref: "#/components/schemas/MetaUser"
                      description: User who uploaded a track
                    user_favorite:
                      description: Is user's favourite.
                      type: boolean
                    user_playback_count:
                      description: Number of plays by a user.
                      type: integer
                    waveform_url:
                      description: Waveform URL.
                      type: string
                  type: object
                type: array
              type:
                description: Playlist type.
                type: string
              uri:
                description: Playlist URI.
                type: string
              user:
                $ref: "#/components/schemas/MetaUser"
              user_id:
                description: User identifier.
                type: integer
            type: object
      description: Success
    MetaUser:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/UserOf"
          schema:
            $ref: "#/components/schemas/MetaUser"
      description: Success
    MetaUsers:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/MetaUsers"
          schema:
            $ref: "#/components/schemas/MetaUsers"
      description: Success
    NotFound:
      content:
        application/json:
          examples:
            default:
              $ref: "#/components/examples/NotFound"
          schema:
            $ref: "#/components/schemas/Error"
      description: Not Found
    Playlist:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Playlist"
          schema:
            $ref: "#/components/schemas/Playlist"
      description: Success
    Playlists:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Playlists"
            playlistsArray:
              $ref: "#/components/examples/PlaylistsArray"
          schema:
            oneOf:
              - $ref: "#/components/schemas/Playlists"
              - $ref: "#/components/schemas/PlaylistsArray"
      description: Success
    PlaylistsArray:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/PlaylistsArray"
          schema:
            $ref: "#/components/schemas/PlaylistsArray"
      description: Success
    Streams:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Streams"
          schema:
            $ref: "#/components/schemas/Streams"
      description: Success
    Success:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Success"
      description: Success
    Successful:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Successful"
      description: Success
    TooManyRequests:
      content:
        application/json:
          examples:
            default:
              $ref: "#/components/examples/TooManyRequests"
          schema:
            $ref: "#/components/schemas/TooManyRequests"
      description: Too Many Requests
    Track:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Track"
          schema:
            $ref: "#/components/schemas/Track"
      description: Success
    Tracks:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Tracks"
            tracksList:
              $ref: "#/components/examples/TracksList"
          schema:
            oneOf:
              - $ref: "#/components/schemas/Tracks"
              - $ref: "#/components/schemas/TracksList"
      description: Success
    TracksList:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/TracksList"
          schema:
            $ref: "#/components/schemas/TracksList"
      description: Success
    Unauthorized:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Unauthorized"
          schema:
            $ref: "#/components/schemas/Error"
      description: Unauthorized
    UnprocessableEntity:
      content:
        application/json:
          examples:
            default:
              $ref: "#/components/examples/UnprocessableEntity"
          schema:
            $ref: "#/components/schemas/Error"
      description: Unprocessable Entity
    User:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/User"
          schema:
            $ref: "#/components/schemas/User"
      description: Success
    Users:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/Users"
            usersList:
              $ref: "#/components/examples/UsersList"
          schema:
            oneOf:
              - $ref: "#/components/schemas/Users"
              - $ref: "#/components/schemas/UsersList"
      description: Success
    UsersList:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/UsersList"
          schema:
            $ref: "#/components/schemas/UsersList"
      description: Success
    WebProfiles:
      content:
        application/json; charset=utf-8:
          examples:
            default:
              $ref: "#/components/examples/WebProfiles"
          schema:
            $ref: "#/components/schemas/WebProfiles"
      description: Success
  schemas:
    Activities:
      description: User's activities.
      properties:
        collection:
          items:
            properties:
              created_at:
                description: Created timestamp.
                type: string
              origin:
                anyOf:
                  - $ref: "#/components/schemas/Track"
                  - $ref: "#/components/schemas/Playlist"
                description: Origin.
                type: object
              type:
                description: Type of activity (track).
                type: string
            type: object
          type: array
        future_href:
          type: string
        next_href:
          type: string
      type: object
    AuthorizationCode:
      properties:
        authorization_code:
          description: Authorization code
          type: string
        client_id:
          description: Client ID
          type: string
        client_secret:
          description: Client secret
          type: string
        grant_type:
          enum:
            - authorization_code
            - client_credentials
          type: string
        redirect_uri:
          description: Redirect URI
          type: string
      type: object
    Comment:
      description: User's Comment
      properties:
        body:
          description: Comment body.
          type: string
        created_at:
          description: Created timestamp.
          type: string
        id:
          description: Identifier.
          type: integer
        kind:
          description: Kind (comment).
          type: string
        timestamp:
          description: Timestamp.
          type: string
        track_id:
          description: Track's identifier.
          type: integer
        uri:
          description: Comment's URL.
          type: string
        user:
          description: SoundCloud User object
          properties:
            avatar_url:
              description: URL to a JPEG image.
              type: string
            followers_count:
              description: number of followers.
              type: integer
            followings_count:
              description: number of followed users.
              type: integer
            id:
              description: unique identifier
              type: integer
            kind:
              description: kind of resource.
              type: string
            last_modified:
              description: last modified timestamp.
              type: string
            permalink:
              description: permalink of the resource.
              type: string
            permalink_url:
              description: URL to the SoundCloud.com page.
              type: string
            reposts_count:
              description: number of reposts from user
              type: integer
            uri:
              description: API resource URL.
              type: string
            username:
              description: username
              type: string
          type: object
        user_id:
          description: User's identifier.
          type: integer
      type: object
    Comments:
      properties:
        collection:
          items:
            $ref: "#/components/schemas/Comment"
          type: array
        next_href:
          nullable: true
          type: string
      type: object
    CommentsList:
      deprecated: true
      items:
        $ref: "#/components/schemas/Comment"
      type: array
    CompleteUser:
      description: SoundCloud Complete User object
      properties:
        avatar_url:
          description: URL to a JPEG image.
          type: string
        city:
          description: city.
          type: string
        country:
          description: country.
          type: string
        description:
          description: description.
          type: string
        discogs_name:
          description: discogs name.
          type: string
        first_name:
          description: first name.
          type: string
        followers_count:
          description: number of followers.
          type: integer
        followings_count:
          description: number of followed users.
          type: integer
        full_name:
          description: first and last name.
          type: string
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource.
          type: string
        last_modified:
          description: last modified timestamp.
          type: string
        last_name:
          description: last name.
          type: string
        locale:
          description: locale.
          type: string
        myspace_name:
          deprecated: true
          description: myspace name
          type: string
        permalink:
          description: permalink of the resource.
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page.
          type: string
        plan:
          description: subscription plan of the user.
          type: string
        playlist_count:
          description: number of public playlists.
          type: integer
        primary_email_confirmed:
          description: boolean if email is confirmed.
          type: boolean
        private_playlists_count:
          description: number of private playlists.
          type: integer
        private_tracks_count:
          description: number of private tracks.
          type: integer
        public_favorites_count:
          description: number of favorited public tracks
          type: integer
        quota:
          description: user's upload quota
          properties:
            unlimited_upload_quota:
              description: unlimited upload quota.
              type: boolean
            upload_seconds_used:
              description: upload seconds used.
              type: integer
          type: object
        reposts_count:
          description: number of reposts from user
          type: integer
        subscriptions:
          description: a list subscriptions associated with the user
          items:
            anyOf:
              - description: subscription
                properties:
                  product:
                    description: product
                    properties:
                      id:
                        description: subscription id instance.
                        type: string
                      name:
                        description: subscription name instance.
                        type: string
                    type: object
                  recurring:
                    description: if the subscription is recurring or not
                    type: boolean
                type: object
            items: {}
            type: array
        track_count:
          description: number of public tracks.
          type: integer
        uri:
          description: API resource URL.
          type: string
        username:
          description: username
          type: string
        website:
          description: a URL to the website.
          type: string
        website_title:
          description: a custom title for the website.
          type: string
      type: object
    Connection:
      properties:
        created_at:
          description: Created timestamp.
          type: string
        display_name:
          description: Full Name.
          type: string
        id:
          description: Unique identifier
          type: integer
        kind:
          description: Kind of resource.
          type: string
        post_favorite:
          deprecated: true
          type: boolean
        post_publish:
          deprecated: true
          type: boolean
        service:
          description: Service.
          type: string
        type:
          description: Type.
          type: string
        uri:
          description: The external link URI.
          type: string
      type: object
    Connections:
      items:
        $ref: "#/components/schemas/Connection"
      type: array
    CreateUpdatePlaylistRequest:
      properties:
        playlist:
          properties:
            description:
              description: Description of the playlist
              type: string
            sharing:
              description: public or private
              enum:
                - public
                - private
              type: string
            title:
              description: Title of the playlist
              type: string
            tracks:
              description: List of tracks to add to playlist
              items:
                properties:
                  id:
                    description: SoundCloud track id
                    type: string
                required:
                  - id
                type: object
              type: array
          type: object
      type: object
    Error:
      properties:
        code:
          type: integer
        error:
          deprecated: true
          nullable: true
          type: string
        errors:
          deprecated: true
          items: {}
          type: array
        link:
          type: string
        message:
          type: string
        status:
          deprecated: true
          type: string
      type: object
    Found:
      properties:
        location:
          description: Location URL of the resource.
          type: string
        status:
          description: Status code.
          type: string
      type: object
    MetaUser:
      description: SoundCloud User object.
      nullable: true
      properties:
        avatar_url:
          description: URL to a JPEG image
          type: string
        created_at:
          description: profile creation datetime
          format: date-time
          type: string
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource
          type: string
        last_modified:
          description: last modified datetime
          format: date-time
          type: string
        permalink:
          description: permalink of the resource
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page
          type: string
        uri:
          description: API resource URL
          type: string
        username:
          description: username
          type: string
      type: object
    MetaUsers:
      properties:
        collection:
          items:
            $ref: "#/components/schemas/MetaUser"
          type: array
        next_href:
          type: string
      type: object
    Password:
      deprecated: true
      properties:
        client_id:
          description: Client ID
          type: string
        client_secret:
          description: Client secret
          type: string
        grant_type:
          enum:
            - password
          type: string
        password:
          description: User password
          type: string
        redirect_uri:
          description: Redirect URI
          type: string
        user_name:
          description: User name
          type: string
      type: object
    Playlist:
      description: Soundcloud Playlist Object
      properties:
        artwork_url:
          description: URL to a JPEG image.
          type: string
        created_at:
          description: Created timestamp.
          type: string
        description:
          description: Playlist description.
          type: string
        downloadable:
          description: is downloadable.
          type: boolean
        duration:
          description: Playlist duration.
          type: integer
        ean:
          description: European Article Number.
          type: string
        embeddable_by:
          description: Embeddable by.
          type: string
        genre:
          description: Playlist genre.
          type: string
        id:
          description: Playlist identifier.
          type: integer
        kind:
          description: Type of Soundcloud object (playlist).
          type: string
        label:
          $ref: "#/components/schemas/MetaUser"
        label_id:
          description: Label user identifier.
          type: integer
        label_name:
          description: Label name.
          type: string
        last_modified:
          description: Last modified timestamp.
          type: string
        license:
          description: License.
          type: string
        likes_count:
          description: Count of playlist likes.
          type: integer
        permalink:
          description: Playlist permalink.
          type: string
        permalink_url:
          description: Playlist permalink URL.
          type: string
        playlist_type:
          description: Type of playlist.
          type: string
        purchase_title:
          description: Purchase title.
          type: string
        purchase_url:
          description: Purchase URL.
          type: string
        release:
          description: Release.
          type: string
        release_day:
          description: Day of release.
          type: integer
        release_month:
          description: Month of release.
          type: integer
        release_year:
          description: Year of release.
          type: integer
        sharing:
          description: Type of sharing (private/public).
          type: string
        streamable:
          description: Is streamable.
          type: boolean
        tag_list:
          description: Tags.
          type: string
        tags:
          description: Tags.
          nullable: true
          type: string
        title:
          description: Playlist title.
          type: string
        track_count:
          description: Count of tracks.
          type: integer
        tracks:
          description: List of tracks.
          items:
            $ref: "#/components/schemas/Track"
          type: array
        tracks_uri:
          description: tracks URI.
          nullable: true
          type: string
        type:
          description: Playlist type.
          type: string
        uri:
          description: Playlist URI.
          type: string
        user:
          $ref: "#/components/schemas/MetaUser"
        user_id:
          description: User identifier.
          type: integer
      type: object
    Playlists:
      properties:
        collection:
          items:
            $ref: "#/components/schemas/Playlist"
          type: array
        next_href:
          type: string
      type: object
    PlaylistsArray:
      deprecated: true
      items:
        $ref: "#/components/schemas/Playlist"
      type: array
    RefreshToken:
      properties:
        client_id:
          description: Client ID
          type: string
        client_secret:
          description: Client secret
          type: string
        grant_type:
          enum:
            - refresh_token
          type: string
        redirect_uri:
          description: Redirect URI
          type: string
        refresh_token:
          description: Refresh token
          type: string
      type: object
    Streams:
      properties:
        hls_mp3_128_url:
          type: string
        hls_opus_64_url:
          type: string
        http_mp3_128_url:
          type: string
        preview_mp3_128_url:
          type: string
      type: object
    TooManyRequests:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            spam_warning_urn:
              type: string
          type: object
    Track:
      description: Soundcloud Track object.
      properties:
        access:
          description: |
            Level of access the user (logged in or anonymous) has to the track.
              * `playable` - user is allowed to listen to a full track.
              * `preview` - user is allowed to preview a track, meaning a snippet is available
              * `blocked` - user can only see the metadata of a track, no streaming is possible
          enum:
            - playable
            - preview
            - blocked
            - null
          nullable: true
          type: string
        artwork_url:
          description: URL to a JPEG image.
          type: string
        available_country_codes:
          description: List of countries where track is available.
          type: string
        bpm:
          description: Tempo.
          type: integer
        comment_count:
          description: Number of comments.
          type: integer
        commentable:
          description: Is commentable.
          type: boolean
        created_at:
          description: Created timestamp.
          type: string
        description:
          description: Track description.
          type: string
        download_count:
          description: NUmber of downloads.
          type: integer
        download_url:
          description: URL to download a track.
          type: string
        downloadable:
          description: Is downloadable.
          type: string
        duration:
          description: Track duration.
          type: integer
        embeddable_by:
          deprecated: true
          description: Embeddable by.
          type: string
        favoritings_count:
          description: Number of favoritings.
          type: integer
        genre:
          description: Genre
          type: string
        id:
          description: Track identifier.
          type: integer
        isrc:
          description: ISRC code.
          type: string
        key_signature:
          description: Key signature.
          type: string
        kind:
          description: Type of object (track).
          type: string
        label_name:
          description: Label user name.
          type: string
        license:
          description: License
          type: string
        permalink_url:
          description: Permalink URL.
          type: string
        playback_count:
          description: Number of plays.
          type: integer
        purchase_title:
          description: Purchase title.
          type: string
        purchase_url:
          description: Purchase URL.
          type: string
        release:
          description: Release.
          type: string
        release_day:
          description: Day of release.
          type: integer
        release_month:
          description: Month of release.
          type: integer
        release_year:
          description: Year of release.
          type: integer
        reposts_count:
          description: Number of reposts.
          type: integer
        secret_uri:
          description: Secret URL.
          type: string
        sharing:
          description: Type of sharing (public/private).
          type: string
        stream_url:
          description: URL to stream.
          type: string
        streamable:
          description: Is streamable.
          type: boolean
        tag_list:
          description: Tags.
          type: string
        title:
          description: Track title.
          type: string
        uri:
          description: Track URI.
          type: string
        user:
          $ref: "#/components/schemas/MetaUser"
          description: User who uploaded a track
        user_favorite:
          description: Is user's favourite.
          type: boolean
        user_playback_count:
          description: Number of plays by a user.
          type: integer
        waveform_url:
          description: Waveform URL.
          type: string
      type: object
    TrackDataRequest:
      properties:
        "track[artwork_data]":
          format: binary
          title: Only for uploading, for PRO users
          type: string
        "track[asset_data]":
          format: binary
          title: Only for uploading
          type: string
        "track[commentable]":
          default: true
          type: boolean
        "track[description]":
          type: string
        "track[downloadable]":
          default: true
          type: boolean
        "track[embeddable_by]":
          description: who can embed this track "all", "me", or "none"
          enum:
            - all
            - me
            - none
          type: string
        "track[genre]":
          type: string
        "track[isrc]":
          type: string
        "track[label_name]":
          type: string
        "track[license]":
          description: "Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
          enum:
            - no-rights-reserved
            - all-rights-reserved
            - cc-by
            - cc-by-nc
            - cc-by-nd
            - cc-by-sa
            - cc-by-nc-nd
            - cc-by-nc-sa
          type: string
        "track[permalink]":
          type: string
        "track[purchase_url]":
          type: string
        "track[release]":
          type: string
        "track[release_date]":
          description: string, formatted as yyyy-mm-dd, representing release date
          title: write only!
          type: string
        "track[sharing]":
          default: public
          enum:
            - public
            - private
          type: string
        "track[streamable]":
          default: true
          type: boolean
        "track[tag_list]":
          description: "The tag_list property contains a list of tags separated by spaces. Multiword tags are quoted in double quotes. We also support machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example: geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags are not revealed to the user on the track pages."
          type: string
        "track[title]":
          type: string
      type: object
    TrackMetadataRequest:
      properties:
        track:
          properties:
            commentable:
              default: true
              type: boolean
            description:
              type: string
            downloadable:
              default: true
              type: boolean
            embeddable_by:
              description: who can embed this track "all", "me", or "none"
              enum:
                - all
                - me
                - none
              type: string
            genre:
              type: string
            isrc:
              type: string
            label_name:
              type: string
            license:
              description: "Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"
              enum:
                - no-rights-reserved
                - all-rights-reserved
                - cc-by
                - cc-by-nc
                - cc-by-nd
                - cc-by-sa
                - cc-by-nc-nd
                - cc-by-nc-sa
              type: string
            permalink:
              type: string
            purchase_url:
              type: string
            release:
              type: string
            release_date:
              description: string, formatted as yyyy-mm-dd, representing release date
              title: write only!
              type: string
            sharing:
              default: public
              enum:
                - public
                - private
              type: string
            streamable:
              default: true
              type: boolean
            tag_list:
              description: "The tag_list property contains a list of tags separated by spaces. Multiword tags are quoted in double quotes. We also support machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example: geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags are not revealed to the user on the track pages."
              type: string
            title:
              type: string
          type: object
      type: object
    Tracks:
      properties:
        collection:
          items:
            $ref: "#/components/schemas/Track"
          type: array
        next_href:
          type: string
      type: object
    TracksList:
      deprecated: true
      items:
        $ref: "#/components/schemas/Track"
      type: array
    User:
      description: SoundCloud User object
      properties:
        avatar_url:
          description: URL to a JPEG image
          type: string
        city:
          description: city
          type: string
        country:
          description: country
          type: string
        created_at:
          description: profile creation datetime
          format: date-time
          type: string
        description:
          description: description
          type: string
        discogs_name:
          description: discogs name
          type: string
        first_name:
          description: first name
          type: string
        followers_count:
          description: number of followers
          type: integer
        followings_count:
          description: number of followed users
          type: integer
        full_name:
          description: first and last name
          type: string
        id:
          description: unique identifier
          type: integer
        kind:
          description: kind of resource
          type: string
        last_modified:
          description: last modified datetime
          format: date-time
          type: string
        last_name:
          description: last name
          type: string
        myspace_name:
          deprecated: true
          description: myspace name
          type: string
        permalink:
          description: permalink of the resource
          type: string
        permalink_url:
          description: URL to the SoundCloud.com page
          type: string
        plan:
          description: subscription plan of the user
          type: string
        playlist_count:
          description: number of public playlists
          type: integer
        public_favorites_count:
          description: number of favorited public tracks
          type: integer
        reposts_count:
          description: number of reposts from user
          type: integer
        subscriptions:
          deprecated: true
          description: a list subscriptions associated with the user
          items:
            anyOf:
              - description: subscription
                properties:
                  product:
                    description: product
                    properties:
                      id:
                        description: subscription id instance.
                        type: string
                      name:
                        description: subscription name instance.
                        type: string
                    type: object
                  recurring:
                    description: if the subscription is recurring or not
                    type: boolean
                type: object
            items: {}
            type: array
        track_count:
          description: number of public tracks
          type: integer
        uri:
          description: API resource URL
          type: string
        username:
          description: username
          type: string
        website:
          description: a URL to the website
          type: string
        website_title:
          description: a custom title for the website
          type: string
      type: object
    Users:
      properties:
        collection:
          items:
            $ref: "#/components/schemas/User"
          type: array
        next_href:
          type: string
      type: object
    UsersList:
      deprecated: true
      items:
        description: SoundCloud User object
        properties:
          avatar_url:
            description: URL to a JPEG image
            type: string
          city:
            description: city
            type: string
          country:
            description: country
            type: string
          description:
            description: description
            type: string
          discogs_name:
            description: discogs name
            type: string
          first_name:
            description: first name
            type: string
          followers_count:
            description: number of followers
            type: integer
          followings_count:
            description: number of followed users
            type: integer
          full_name:
            description: first and last name
            type: string
          id:
            description: unique identifier
            type: integer
          kind:
            description: kind of resource
            type: string
          last_modified:
            description: last modified datetime
            format: date-time
            type: string
          last_name:
            description: last name
            type: string
          myspace_name:
            deprecated: true
            description: myspace name
            type: string
          permalink:
            description: permalink of the resource
            type: string
          permalink_url:
            description: URL to the SoundCloud.com page
            type: string
          plan:
            description: subscription plan of the user
            type: string
          playlist_count:
            description: number of public playlists
            type: integer
          public_favorites_count:
            description: number of favorited public tracks
            type: integer
          reposts_count:
            description: number of reposts from user
            type: integer
          subscriptions:
            deprecated: true
            description: a list subscriptions associated with the user
            items:
              anyOf:
                - description: subscription
                  properties:
                    product:
                      description: product
                      properties:
                        id:
                          description: subscription id instance.
                          type: string
                        name:
                          description: subscription name instance.
                          type: string
                      type: object
                    recurring:
                      description: if the subscription is recurring or not
                      type: boolean
                  type: object
              items: {}
              type: array
          track_count:
            description: number of public tracks
            type: integer
          uri:
            description: API resource URL
            type: string
          username:
            description: username
            type: string
          website:
            description: a URL to the website
            type: string
          website_title:
            description: a custom title for the website
            type: string
        type: object
      type: array
    WebProfiles:
      description: User's links added to their profile
      items:
        properties:
          created_at:
            description: Timestamp of when the link was added to the profile.
            type: string
          id:
            description: Id
            type: integer
          kind:
            description: Kind
            type: string
          service:
            description: Service or platform
            type: string
          title:
            description: Link's title
            type: string
          url:
            description: URL of the external link
            type: string
          username:
            description: Username extracted from the external link
            type: string
        type: object
      type: array
  securitySchemes:
    AuthHeader:
      description: 'The string "OAuth" followed by the user’s token: OAuth ACCESS_TOKEN'
      in: header
      name: Authorization
      type: apiKey
    ClientId:
      description: Your product key. This is not the same as the API key used for most requests
      in: query
      name: client_id
      type: apiKey
