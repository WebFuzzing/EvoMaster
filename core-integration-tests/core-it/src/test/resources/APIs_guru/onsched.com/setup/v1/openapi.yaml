openapi: 3.0.1
info:
  description: "Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.\r

    <br><br>\r

    Take the API for a test drive. Just click on the Authorize button below and authenticate. \r

    You can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.\r

    <br><br>\r

    The API has two interfaces, consumer and setup. \r

    <ul>\r

    <li>\r

    The consumer interface provides all the endpoints required for implementing consumer booking flows.\r

    </li>\r

    <li>\r

    The setup interface provides endpoints for profile configuration and setup.\r

    </li>\r

    </ul>\r

    Toggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.\r\n"
  title: OnSched API
  version: v1
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: https://onsched.com/img/apple-touch-icon-57x57-precomposed.ico
  x-origin:
    - format: openapi
      url: https://sandbox-api.onsched.com/swagger/setup/swagger.json
      version: "3.0"
  x-providerName: onsched.com
  x-serviceName: setup
security:
  - oauth2:
      - OnSchedApi
paths:
  /setup/v1/appointments:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Leave blank for company wide search.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter appointments by email address.
          in: query
          name: email
          schema:
            type: string
        - description: Filter appointments by lastname or part of.
          in: query
          name: lastname
          schema:
            type: string
        - description: Filter appointments by service.
          in: query
          name: serviceId
          schema:
            type: string
        - description: Filter appointments by calendar.
          in: query
          name: calendarId
          schema:
            type: string
        - description: Filter appointments by resource.
          in: query
          name: resourceId
          schema:
            type: string
        - description: Filter appointments by customer.
          in: query
          name: customerId
          schema:
            type: string
        - description: Filter appointments by service allocation.
          in: query
          name: serviceAllocationId
          schema:
            type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate.
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: "Filter appointments by status: IN, BK, CN, RE, RS."
          in: query
          name: status
          schema:
            type: string
        - description: Filter appointments by user email who booked.
          in: query
          name: bookedBy
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentListViewModel"
          description: Success
      summary: Returns a list of appointments.
      tags:
        - Appointments
  "/setup/v1/appointments/{id}":
    get:
      description: "The result returned is a single appointment object. A valid id is required to find the appointment. \r

        \r

        Find appointment id's using the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the appointment object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentViewModel"
          description: Success
      summary: Returns an appointment object.
      tags:
        - Appointments
  "/setup/v1/appointments/{id}/reassign/resource/{resourceId}":
    put:
      description: "The result returned is a single appointment object. A valid id is required to find the appointment. \r

        \r

        Find appointment id's using the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the appointment object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id target resource.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentViewModel"
          description: Success
      summary: Reassigns the appointment to the supplied resourceId
      tags:
        - Appointments
  /setup/v1/businessusers:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter businessUsers by email address.
          in: query
          name: email
          schema:
            type: string
        - description: Filter businessUsers by user role.
          in: query
          name: role
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessUserListViewModel"
          description: Success
      summary: Returns a list of business users.
      tags:
        - BusinessUsers
    post:
      description: "Use this endpoint to create a new businessUser. If not specified the business location id defaults to the first location in the company.\r

        Name, Email Address and role are required for creating a new businessUser. If the businessUser is a bookable resource then resourceId is required. \r

        For role, use one of the values listed below. Do not include what is shown in brackets, this is there for description of the role only.\r

        \r

        Business Roles:\r

        bizowner (Business Owner)\r

        bizadmin (Business Administrator)\r

        bizresource (Business User - Bookable Resource)\r

        bizclerk (Business User - Portal Booking Privileges)\r

        bizuser (Business User - Portal View Only Privileges)"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/BusinessUserInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessUserInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BusinessUserInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/BusinessUserInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessUserViewModel"
          description: Success
      summary: Creates a new businessUser object.
      tags:
        - BusinessUsers
  /setup/v1/businessusers/permissions:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: Filter permissions by role.
          in: query
          name: role
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessPermissionListViewModel"
          description: Success
      summary: Returns a list of system roles and permission.
      tags:
        - BusinessUsers
  "/setup/v1/businessusers/{email}/companies":
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: Email address business user.
          in: path
          name: email
          required: true
          schema:
            type: string
        - description: All or part of company name.
          in: query
          name: searchText
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizedCompanyListViewModel"
          description: Success
      summary: Returns a list of companies for the business user.
      tags:
        - BusinessUsers
  "/setup/v1/businessusers/{id}":
    delete:
      description: Use this endpoint to permanently delete a businessUser.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      summary: Permanently deletes businessUser object.
      tags:
        - BusinessUsers
    get:
      description: The result returned is a single businessUser object. An id is required to find the businessUser. Find businessUser id's using the GET setup/v1/businessuserts end point,
      parameters:
        - description: The id of the businessUser object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessUserViewModel"
          description: Success
      summary: Returns a businessUser object.
      tags:
        - BusinessUsers
    put:
      description: Use this endpoint to update a businessUser.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/BusinessUserUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessUserUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BusinessUserUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/BusinessUserUpdateModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessUserViewModel"
          description: Success
      summary: Updates a businessUser object.
      tags:
        - BusinessUsers
  /setup/v1/calendars:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter by deleted status
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleListViewModel"
          description: Success
      summary: Returns a list of calendars.
      tags:
        - Calendars
    post:
      description: "Use this endpoint to create an additional calendar. If not specified, the business location id defaults to the primary location of the company.<br /><br />\r

        Note: Every location has a primary calendar. All appointments will be booked to that calendar unless otherwise specified with a linked service.<br /><br />\r

        name is a required parameter<br /><br />\r

        type is a required parameter with a value of “resource”<br /><br />\r

        interval is a required parameter with a value of 1,5,10,15,20,30,60<br /><br />\r

        bookingsPerSlot is a required parameter with a value between 1 and 20<br /><br />\r

        scheduleGroupId is an optional parameter.If supplied, it must be a valid Resource Group Id<br /><br />\r

        weekly availability is optional.If this element is not populated, then weekly availability defaults to the business hours<br /><br />"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ScheduleInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ScheduleInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ScheduleInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleViewModel"
          description: Success
      summary: Creates a new calendar object.
      tags:
        - Calendars
  "/setup/v1/calendars/block/{id}":
    delete:
      description: Deletes a calendar block.
      parameters:
        - description: Valid id of a schedule block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarBlockViewModel"
          description: Success
      summary: Delete a calendar block object
      tags:
        - Calendars
    put:
      description: Updates a calendar block. Refer to the details in the POST calendar block for setting each of the required parameters.
      parameters:
        - description: Valid id of a schedule block object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
        description: Resource Block input model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarBlockViewModel"
          description: Success
      summary: Update a calendar block
      tags:
        - Calendars
  "/setup/v1/calendars/blocks/{id}":
    get:
      description: ""
      parameters:
        - description: Valid id of a calendar block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarBlockViewModel"
          description: Success
      summary: Update a calendar block
      tags:
        - Calendars
  "/setup/v1/calendars/{id}":
    delete:
      description: Use this endpoint to delete a calendar. The calendar is not permanently deleted and can be recovered.
      parameters:
        - description: The id of the calendar to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleViewModel"
          description: Success
      summary: Deletes a calendar object.
      tags:
        - Calendars
    get:
      description: The result returned is a single calendar object. An id is required to find the calendar.
      parameters:
        - description: The id of the calendar object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleViewModel"
          description: Success
      summary: Returns a calendar object.
      tags:
        - Calendars
    put:
      description: "Use this endpoint to update a calendar. \r

        Calendar availability is optional. If this element is not populated then weekly availability is not updated"
      parameters:
        - description: Id of the calendar object.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ScheduleUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ScheduleUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ScheduleUpdateModel"
        description: Input model for the calendar object.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleViewModel"
          description: Success
      summary: Updates a calendar object.
      tags:
        - Calendars
  "/setup/v1/calendars/{id}/block":
    post:
      description: "Creates a new calendar block. You must specify a StartDateTime and EndDateTime.\r

        A reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r

        \r

        Calendar blocks can be set to specific time ranges or for the whole day. \r

        \r

        Calendar blocks can be for a specific date range instance or set to repeat at a specified frequency.\r

        The frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r

        \r

        Daily blocks will repeat for each day of the week for the date range specified.\r

        \r

        Weekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r

        you must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r

        of the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r

        For example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r

        \r

        Use the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r

        the block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r

        repeat every 10 days. The interval property applies to all repeat frequencies.\r

        \r

        Monthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r

        the start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r

        \r

        Repeat blocks will end on the date specified by the end date. You can specify never in the EndDateTime field to indicate the repeating block\r

        should continue indefinitely."
      parameters:
        - description: Valid id of a calendar object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CalendarBlockInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Create a new calendar block
      tags:
        - Calendars
  "/setup/v1/calendars/{id}/blocks":
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the calendar to list blocks
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarBlockListViewModel"
          description: Valid response
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Resource was not found
      summary: Returns a list of calendar blocks.
      tags:
        - Calendars
  "/setup/v1/calendars/{id}/recover":
    put:
      description: Use this endpoint to recover a deleted calendar.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleViewModel"
          description: Success
      summary: Recovers a calendar object.
      tags:
        - Calendars
  "/setup/v1/calendars/{id}/services":
    get:
      description: The result returned is a list of services. An id is required to find the service. Find calendar id's using either the GET setup/v1/calendars end point
      parameters:
        - description: The id of the calendar object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceListViewModel"
          description: Success
      summary: Returns a list of services linked to a calendar.
      tags:
        - Calendars
  /setup/v1/companies:
    get:
      description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyViewModel"
          description: Success
      summary: Returns a company profile information of the authorized company
      tags:
        - Companies
    post:
      description: "Use this endpoint to create a new Company Profile. \r

        This endpoint is restricted by scope and limited to use by OnSched internal apps\r

        \r

        The timezoneName can be expressed as an Iana Timezone e.g. America/New_York\r

        or a Microsoft Timezone e.g. Eastern Standard Time"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CompanyInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CompanyInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CompanyInputModel"
        description: Company Input Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyViewModel"
          description: Success
      summary: Creates a company profile.
      tags:
        - Companies
    put:
      description: "Use this endpoint to update the authorized company. \r

        \r

        Your client credentials resolve to a single company.\r

        \r

        The timezoneName can be expressed as an Iana Timezone e.g. America/New_York\r

        or a Microsoft Timezone e.g. Eastern Standard Time"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CompanyUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CompanyUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CompanyUpdateModel"
        description: Company Update Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyViewModel"
          description: Success
      summary: Updates a company object.
      tags:
        - Companies
  /setup/v1/companies/domains:
    get:
      description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyDomainListViewModel"
          description: Success
      summary: Returns a list of whitelisted domains for the authorized company
      tags:
        - Companies
    post:
      description: ""
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CompanyDomainInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyDomainInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CompanyDomainInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CompanyDomainInputModel"
        description: Company Domain Input Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyDomainViewModel"
          description: Success
      summary: "Creates a whitelisted domain for the authorized company\r

        Returns view of domain created"
      tags:
        - Companies
  "/setup/v1/companies/domains/{id}":
    delete:
      description: ""
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyDomainViewModel"
          description: Success
      summary: "Deletes a whitelisted domain for the authorized company\r

        Returns view of domain deleted"
      tags:
        - Companies
    get:
      description: ""
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyDomainViewModel"
          description: Success
      summary: Returns a whitelisted domain for the authorized company
      tags:
        - Companies
    put:
      description: ""
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/CompanyDomainUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyDomainUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CompanyDomainUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/CompanyDomainUpdateModel"
        description: Company Domain Update Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyDomainViewModel"
          description: Success
      summary: "Updates a whitelisted domain for the authorized company\r

        Returns view of domain updated"
      tags:
        - Companies
  /setup/v1/companies/email/templates:
    get:
      description: "Returns a list of email templates that may be customized\r

        If the template has been customized, the customized property is true.\r

        The scope parameter indicates if the email template has been customized\r

        at Business Location level or Company level.\r

        This endpoint returns only company level templates so the scope is always company"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateListViewModel"
          description: Success
      summary: Returns email template list from the authorized company
      tags:
        - Companies
  /setup/v1/companies/email/templates/master:
    delete:
      description: "Settings exist for showing or hiding panels\r

        and for changing color schemes"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Deletes custom master email template settings reverting to the default
      tags:
        - Companies
    get:
      description: "Settings exist for showing or hiding panels\r

        and for changing color schemes"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Returns master email template settings
      tags:
        - Companies
    post:
      description: "Settings exist for showing or hiding panels\r

        and for changing color schemes"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Updates / creates custom master email template settings
      tags:
        - Companies
  "/setup/v1/companies/email/templates/{templateName}":
    get:
      description: "The default email template is returned when a custom template is not found\r

        The response content is in html format."
      parameters:
        - description: Email template name
          in: path
          name: templateName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentResult"
          description: Success
      summary: Returns default or custom email template from the authorized company
      tags:
        - Companies
  /setup/v1/companies/regions:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionListViewModel"
          description: region object's
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Resource was not found
      summary: Returns a list of regions.
      tags:
        - Companies
    post:
      description: "Creates a new region.\r

        \r

        Regions can be mapped to business locations. Locations can be filtered by region id"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/RegionInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RegionInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/RegionInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionViewModel"
          description: Success
      summary: Create a new region
      tags:
        - Companies
  "/setup/v1/companies/regions/{id}":
    delete:
      description: "Deletes a region.\r

        \r

        If the region is related to any business locations it cannot be deleted"
      parameters:
        - description: Valid Id of Region
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionViewModel"
          description: Success
      summary: Delete a region
      tags:
        - Companies
    get:
      description: ""
      parameters:
        - description: Valid id of a region object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionViewModel"
          description: Success
      summary: Get a Region
      tags:
        - Companies
    put:
      description: "Updates a region.\r

        \r

        Regions can be mapped to business locations. Locations can be filtered by region id."
      parameters:
        - description: Valid Id of Region
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/RegionUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/RegionUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RegionUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/RegionUpdateModel"
        description: Region Update Model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionViewModel"
          description: Success
      summary: Update a region
      tags:
        - Companies
  "/setup/v1/companies/timezones/{date}":
    get:
      description: The result returned is a single location object. An id is required to find the location. Find location id's using the GET consumer/v1/locations end point,
      parameters:
        - description: The date the.
          in: path
          name: date
          required: true
          schema:
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimezoneViewModel"
          description: Success
      summary: Returns timezone information for all supported Timezone's
      tags:
        - Companies
  /setup/v1/customers:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter customers by group.
          in: query
          name: groupId
          schema:
            type: string
        - description: Filter customers by email address.
          in: query
          name: email
          schema:
            type: string
        - description: Search customers by lastname.
          in: query
          name: lastname
          schema:
            type: string
        - description: Filter customers by deleted status.
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerListViewModel"
          description: Success
      summary: Returns a list of customers.
      tags:
        - Customers
  "/setup/v1/customers/{id}":
    get:
      description: "The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\r

        or the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist."
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerViewModel"
          description: Success
      summary: Returns a customer object.
      tags:
        - Customers
  "/setup/v1/customers/{id}/privacy":
    get:
      description: The result returned contains customer data and customer appointments data
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPrivacyViewModel"
          description: Success
      summary: Returns a customer privacy report data.
      tags:
        - Customers
  /setup/v1/locations:
    get:
      description: "Use this api end point if you have multiple business locations in your company.\r

        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: Location name(full or partial) to filter on
          in: query
          name: name
          schema:
            type: string
        - description: Find locations that offer this service
          in: query
          name: serviceId
          schema:
            type: string
        - description: Filter locations on deleted status
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationListViewModel"
          description: Success
      summary: Returns a list of business locations.
      tags:
        - Locations
    post:
      description: "Use this endpoint to create a new business location.\r

        \r

        Settings can be scoped to company or location. You can have all locations use the defined company settings or individual locations\r

        can define their own settings that override the company level settings.\r

        \r

        If you wish to update settings then pass in the settings element in the input.\r

        When you are working with the Primary location, then the settings will update the company level settings.\r

        Otherwise, the settings will update business location settings.\r

        \r

        If you wish to create a new location and want to just use the company wide settings, don't pass in the settings element in the input."
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/LocationInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/LocationInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/LocationInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/LocationInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Creates a new location object.
      tags:
        - Locations
  /setup/v1/locations/bulk:
    post:
      description: "Use this endpoint to create new business locations. The incoming list of \r

        locations cannot exceed 100 location objects for performance purposes.\r

        \r

        Each location object may consist of:\r

        Name: The Name of the location.\r

        AdminName: The Name of the location admin.\r

        AdminEmail: The email address of the location admin.\r

        TimezoneName: The IANA formatted name of the locations timezone.\r

        FriendlyId: A friendly id to use to refer to the location.\r

        Address: The physical address of the location.\r

        BusinessHours: The hours of operation of the location.\r

        Settings: Additional location options that can affect things like \r

        the book ahead restrictions, customer bookings per day, etc."
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/LocationsInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/LocationsInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/LocationsInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/LocationsInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocationViewModel"
                type: array
          description: Success
      summary: Creates new location objects.
      tags:
        - Locations
  "/setup/v1/locations/services/{id}":
    delete:
      description: Use this endpoint to delete a location service for a location
      parameters:
        - description: Valid id of a location service object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Deletes a location service from the specified location
      tags:
        - Locations
    get:
      description: ""
      parameters:
        - description: The id of the location service object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessServiceViewModel"
          description: location service objects
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Location was not found
      summary: Returns a single location services.
      tags:
        - Locations
  "/setup/v1/locations/{id}":
    delete:
      description: Use this endpoint to delete a location. The location is not permanently deleted and can be recovered.
      parameters:
        - description: The id of the location
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Deletes a location object.
      tags:
        - Locations
    get:
      description: The result returned is a single location object. An id is required to find the location. Find location id's using the GET consumer/v1/locations end point,
      parameters:
        - description: The id of the business location object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Returns a business location object.
      tags:
        - Locations
    put:
      description: "Use this endpoint to update a business location. \r

        \r

        The optional removeRegion query parameter is used to remove the region relationship from the location\r

        \r

        If the settings element is populated the scope will be set to location with the settings supplied, otherwise it will be company scope.\r

        \r

        If all your settings are uniform across all locations then do not pass settings and the location will use the settings\r

        defined on the primary location. This is company scope. Settings cascade down to the locations. You can override any location\r

        that needs different settings by providing settings in the update model."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: removeRegion
          schema:
            type: boolean
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/LocationUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/LocationUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Use this endpoint to change the scope of online booking settings
      tags:
        - Locations
  "/setup/v1/locations/{id}/deleteallimages":
    delete:
      description: "An option exists to use upper case for matching the subdirectory name\r

        Legacy apps stored pics using upper case externalId. Api uses lower case names."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: uppercase
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: Success
      summary: Deletes all images from location blob storage container
      tags:
        - Locations
  "/setup/v1/locations/{id}/deleteimage":
    delete:
      description: Use this endpoint to delete a previously uploaded location image.
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Removes a location image
      tags:
        - Locations
  "/setup/v1/locations/{id}/email/templates":
    get:
      description: "Returns a list of email templates that may be customized\r

        If the template has been customized, the customized property is true.\r

        The scope parameter indicates if the email template has been customized\r

        at Business Location level or Company level.\r

        Only when querying the primary business location will company scope\r

        customized templates display. Otherwise, the scope shows if a template has been customized\r

        at the business location level."
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateListViewModel"
          description: Success
      summary: Returns email template list from the authorized company
      tags:
        - Locations
    post:
      description: "Use this endpoint to a create a custom email template. You must convert the content to a base64 encoded string.\r

        Updates to the primary business location create company scoped custom templates\r

        Updates to non primary business locations create business location scoped custom templates\r

        The master template cannot be updated with this endpoint."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/EmailTemplateInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/EmailTemplateInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/EmailTemplateInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/EmailTemplateInputModel"
        description: Input model for email template
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentResult"
          description: Success
      summary: Uploads a custom email template
      tags:
        - Locations
  "/setup/v1/locations/{id}/email/templates/master":
    delete:
      description: "Settings exist for showing or hiding panels\r

        and for changing color schemes"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Deletes custom master email template settings reverting to the default
      tags:
        - Locations
    get:
      description: "Settings exist for showing or hiding panels\r

        and for changing color schemes"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Returns master email template settings
      tags:
        - Locations
    post:
      description: "Use this endpoint to a customize the master email template settings. \r

        Updates to the primary business location create company scoped master email template custom settings\r

        Updates to non primary business locations create business location scoped master email template custom settings"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/MasterTemplateSettingsInputModel"
        description: Input model for master email template settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterEmailTemplateSettingsViewModel"
          description: Success
      summary: Saves settings for the master email template
      tags:
        - Locations
  "/setup/v1/locations/{id}/email/templates/{templateName}":
    delete:
      description: "Use this endpoint to remove a custom email template. \r

        \r

        Custom email templates created in the primary location are company scope and inherited by all locations\r

        unless overriden in a location. Templates created in any location other than the primary apply to that location only."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of the email template
          in: path
          name: templateName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentResult"
          description: Success
      summary: Deletes a custom email template
      tags:
        - Locations
    get:
      description: "These are custom email templates defined with Business Scope at a location other than the primary.\r

        The default email template is returned when a custom email template is not found."
      parameters:
        - description: The id of the business location object or "default" as id.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The name of the email template.
          in: path
          name: templateName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentResult"
          description: Success
      summary: Returns company default or custom email template from the specified location
      tags:
        - Locations
  "/setup/v1/locations/{id}/google/service/account":
    delete:
      description: "Use this endpoint to remove authorized access to all google calendar users.\r

        Calendars will no longer be synced for resources"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      summary: Remove authorized access to all google calendar users in an organization
      tags:
        - Locations
    get:
      description: This endpoint will not go to production. It is temporary.
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleServiceAccountCreds"
          description: Success
      summary: Returns google service account info
      tags:
        - Locations
    post:
      description: "Use this endpoint to authorize access to all google calendar users.\r

        You must create a Google Service account as an admin of your GSuite,\r

        then save credentials as a Json Key file"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/GoogleServiceAccountCreds"
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleServiceAccountCreds"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/GoogleServiceAccountCreds"
          text/json:
            schema:
              $ref: "#/components/schemas/GoogleServiceAccountCreds"
        description: Generated Json Key file from Google
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleServiceAccountCreds"
          description: Success
      summary: Authorize access to all google calendar users in an organization
      tags:
        - Locations
  "/setup/v1/locations/{id}/holidays/{holidayId}/{closed}":
    put:
      description: "Use this endpoint to set business holidays to open or closed. \r

        \r

        If you pass in an asterisk for the holidayId then all business holidays\r

        will be set to the valaue"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: holidayId
          required: true
          schema:
            type: string
        - in: path
          name: closed
          required: true
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Sets a business holiday to open or closed.
      tags:
        - Locations
  "/setup/v1/locations/{id}/recover":
    put:
      description: Use this endpoint to recover a deleted business location.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Recovers a location object.
      tags:
        - Locations
  "/setup/v1/locations/{id}/services":
    delete:
      description: Use this endpoint to delete all location services for a location
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Deletes all location services from the specified location
      tags:
        - Locations
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the location
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessServiceListViewModel"
          description: location service objects
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Location was not found
      summary: Returns a list of location services.
      tags:
        - Locations
    post:
      description: "Use this endpoint to explicitly define what company scoped services\r

        at this location are offered. GET locations allows serviceId as a \r

        search parameter."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                type: string
              type: array
          application/json:
            schema:
              items:
                type: string
              type: array
          application/json-patch+json:
            schema:
              items:
                type: string
              type: array
          text/json:
            schema:
              items:
                type: string
              type: array
        description: Array of valid service object id's
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Adds location services to the specified location
      tags:
        - Locations
  "/setup/v1/locations/{id}/settings/scope/{settingsScope}":
    put:
      description: "Use this endpoint to update a business location. \r

        \r

        settingsScope values are 0 = company scope, 1 = business location scope\r

        if you wish to inherit the online settings defined in the primary location then use value 0 for company scope.\r

        Otherwise if you wish to override the settings for a specific location then use value = 1 for business location scope\r

        ///"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: settingsScope
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Changes the scope of OnlineBooking Settings.
      tags:
        - Locations
  "/setup/v1/locations/{id}/uploadimage":
    post:
      description: "Use this endpoint to upload a location image. You must convert the image to a base64 encoded string\r

        and pass that string as input along with your filename."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
        description: Input model for image upload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationViewModel"
          description: Success
      summary: Uploads a location image
      tags:
        - Locations
  /setup/v1/resourcegroups:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter results by deleted status.
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupListViewModel"
          description: Success
      summary: Returns a list of resourcegroups.
      tags:
        - ResourceGroups
    post:
      description: "Use this endpoint to create a new resource. If not specified the business location id defaults to the first location in the company.\r

        Email Address and a Name are required for creating a new resource."
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceGroupInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceGroupInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceGroupInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceGroupInputModel"
        description: Resource input model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupViewModel"
          description: Success
      summary: Creates a new resource group object.
      tags:
        - ResourceGroups
  "/setup/v1/resourcegroups/{id}":
    delete:
      description: Use this endpoint to delete a resource group. The resource group is not permanently deleted and can be recovered.
      parameters:
        - description: The id of the resource group to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupViewModel"
          description: Success
      summary: Deletes a resource group object.
      tags:
        - ResourceGroups
    get:
      description: The result returned is a single resourceGroup object. An id is required to find the service. Find resourceGroup id's using the GET setup/v1/resourceGroups end point
      parameters:
        - description: The id of the resourceGroup object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupViewModel"
          description: Success
      summary: Returns a resourceGroup object.
      tags:
        - ResourceGroups
    put:
      description: Use this endpoint to update a resource group.
      parameters:
        - description: Id of the resource group object.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceGroupUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceGroupUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceGroupUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceGroupUpdateModel"
        description: Resource Group Update Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupViewModel"
          description: Success
      summary: Updates a resource group object.
      tags:
        - ResourceGroups
  "/setup/v1/resourcegroups/{id}/recover":
    put:
      description: Use this endpoint to recover a deleted resource group.
      parameters:
        - description: Id of the resource group object.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Recovers a resource group object.
      tags:
        - ResourceGroups
  /setup/v1/resources:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter resources by group.
          in: query
          name: resourceGroupId
          schema:
            type: string
        - description: Filter resources by email address.
          in: query
          name: email
          schema:
            type: string
        - description: Search resources by name.
          in: query
          name: name
          schema:
            type: string
        - description: Show resources by deleted status. Default is false.
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceListViewModel"
          description: resource object
        "400":
          description: Missing or invalid values in the request
        "404":
          description: Resource was not found
      summary: Returns a list of resources.
      tags:
        - Resources
    post:
      description: "Use this endpoint to create a new resource. If not specified, the business location id defaults to the first location in the company.<br /><br /> \r

        Email Address and a Name are required for creating a new resource. <br /><br />\r

        Passing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resource, \r

        while passing in an empty array will result in all services being selected. This includes company and business scoped services. <br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceInputModel"
        description: Resource input model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Creates a new resource object.
      tags:
        - Resources
  "/setup/v1/resources/allocations/{id}":
    delete:
      description: Deletes a resource allocation.
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Delete a resource allocation object
      tags:
        - Resources
    get:
      description: ""
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAllocationViewModel"
          description: Success
      summary: Update a resource allocation
      tags:
        - Resources
    put:
      description: Updates a resource allocation. Refer to the details in the POST resource allocation for setting each of the required parameters.
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationUpdateModel"
        description: Resource allocation update model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Update a resource allocation
      tags:
        - Resources
  "/setup/v1/resources/block/{id}":
    delete:
      description: Deletes a resource block.
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Delete a resource block object
      tags:
        - Resources
    put:
      description: Updates a resource block. Refer to the details in the POST resource block for setting each of the required parameters.
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceBlockUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceBlockUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceBlockUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceBlockUpdateModel"
        description: Resource Block update model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Update a resource block
      tags:
        - Resources
  "/setup/v1/resources/blocks/{id}":
    get:
      description: ""
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Update a resource block
      tags:
        - Resources
  /setup/v1/resources/bulk:
    post:
      description: "Use this endpoint to create new resources. If not specified the business location id defaults to the first location in the company.<br /><br />\r

        Email Address and a Name are required for creating each new resource.<br /><br />\r

        Passing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resources,\r

        while passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourcesInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcesInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourcesInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourcesInputModel"
        description: Resources input model.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceViewModel"
                type: array
          description: Success
      summary: Creates new resource objects.
      tags:
        - Resources
    put:
      description: "Use this endpoint to update multiple resources.<br /><br /> \r

        Passing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the each resource, \r

        while passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourcesUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcesUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourcesUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourcesUpdateModel"
        description: Resources update model.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourceViewModel"
                type: array
          description: Success
      summary: Updates resource objects.
      tags:
        - Resources
  /setup/v1/resources/timezones:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemTimezoneViewModel"
          description: Success
      tags:
        - Resources
  "/setup/v1/resources/{id}":
    delete:
      description: Use this endpoint to delete a resource. The resource is not permanently deleted and can be recovered.
      parameters:
        - description: The id of the resource to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Deletes a resource object.
      tags:
        - Resources
    get:
      description: "The result returned is a single resource object. An id is required to find the resource. Find customer id's using either the GET consumer/v1/resources end point,\r

        or the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Returns a resource object.
      tags:
        - Resources
    put:
      description: "Use this endpoint to update a resource. <br /><br />\r

        Passing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resource,\r

        while passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Id of the resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceUpdateModel"
        description: Resource Update Model.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Updates a resource object.
      tags:
        - Resources
  "/setup/v1/resources/{id}/allocations":
    get:
      description: "Resource allocations allow you to specify explicitly the times you are available as opposed to \r

        generating resource availability from the times that are not unavailable.\r

        \r

        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the resource to list allocations
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Format yyyy-mm-dd. Filter allocations on/after startDate
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format yyyy-mm-dd. Filter on/before endDate
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAllocationListViewModel"
          description: resource allocation objects
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Resource was not found
      summary: Returns a list of resource allocations.
      tags:
        - Resources
    post:
      description: "Creates a new resource allocation. You must specify a StartDateTime and EndDateTime.\r

        A reason for the block is optional. This reason will display in the OnSched Portal Calendar.\r

        \r

        Resource allocations can be set to specific time ranges or for the whole day. \r

        \r

        Resource allocations can repeat for a specific date range instance or set to repeat at a specified frequency.\r

        The frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r

        \r

        Daily allocations will repeat for each day of the week for the date range specified.\r

        \r

        Weekly allocations will repeat only on the specified days of the week for the date range specified. For a weekly block\r

        you must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r

        of the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r

        For example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r

        \r

        Use the interval property to specify the interval that the allocation repeats. For example an interval of 2 for a weekly allocation means that\r

        the allocation will repeat every second week beginning at the day specified. A daily allocation with an interval of 10 means the allocation will\r

        repeat every 10 days. The interval property applies to all repeat frequencies.\r

        \r

        Monthly allocations repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r

        the start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r

        \r

        Repeat allocations will end on the date specified by the end date. You can specify 9999-12-31 in \r

        the EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceAllocationInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Create a new resource allocation
      tags:
        - Resources
  "/setup/v1/resources/{id}/availability":
    get:
      description: "Use this endpoint to get weekly availability for a resource. The displayed\r

        available times represent the resource timezone. The resource timezone can\r

        be set to any world timezone. By default it is set to the Business timezone."
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAvailabilityViewModel"
          description: Success
      summary: Returns a list of weekly availability
      tags:
        - Resources
    put:
      description: "Use this endpoint to update resource availability. The Id parameter specifies the resource\r

        for which you are updating availability. Availability day entries do not need to be created. \r

        The availbility day entries are created when a resource object is created. They default to\r

        the business hours.\r

        \r

        Create an entry for each weekday you wish to update. Days are defined as sun,mon,tue,wed,thu,fri,sat.\r

        Start and End Times are entered in miltary format. e.g 2230 is 10:30pm. \r

        \r

        OnSched API provides support for 24 hour availability. For midnight start of day use 0. For midnight end of day use 2400.\r

        \r

        To set a day as unavailable, set both the StartTime and EndTime to 0. If you require times in between specified hours\r

        to be unavailable, use the resource blocks endpoints. \r

        \r

        Times entered represent the\r

        timezone of the resource. Resources can belong to any world timezone."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
        description: Resource Availability Input Model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAvailabilityViewModel"
          description: Success
      summary: Updates Weekly Availability
      tags:
        - Resources
  "/setup/v1/resources/{id}/block":
    post:
      description: "Creates a new resource block. You must specify a StartDateTime and EndDateTime.\r

        A reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r

        \r

        Resource blocks can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r

        \r

        Resource blocks can be for a specific date range instance or set to repeat at a specified frequency.\r

        The frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r

        \r

        Daily blocks will repeat for each day of the week for the date range specified.\r

        \r

        Weekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r

        you must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r

        of the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r

        For example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r

        \r

        Use the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r

        the block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r

        repeat every 10 days. The interval property applies to all repeat frequencies.\r

        \r

        Monthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r

        the start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r

        \r

        Repeat blocks will end on the date specified by the end date. You can specify 9999-12-31 in \r

        the EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceBlockInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceBlockInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceBlockInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceBlockInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Create a new resource block
      tags:
        - Resources
  "/setup/v1/resources/{id}/blocks":
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the resource to list blocks
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Format YYYY-MM-DD. Filter blocks on/after startDate
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format YYYY-MM-DD. Filter on/before endDate
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockListViewModel"
          description: resource block object's
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Resource was not found
      summary: Returns a list of resource blocks.
      tags:
        - Resources
  "/setup/v1/resources/{id}/calendar/auth/google/{googleEmailAddress}":
    get:
      description: The result returned contains the google calendar authorization url
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The email address of Google Calendar.
          in: path
          name: googleEmailAddress
          required: true
          schema:
            type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarAuthViewModel"
          description: Success
      summary: Returns a resource object.
      tags:
        - Resources
  "/setup/v1/resources/{id}/calendar/auth/outlook/{outlookEmailAddress}":
    get:
      description: The result returned contains the outlook calendar authorization url
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The email address of Outlook Calendar.
          in: path
          name: outlookEmailAddress
          required: true
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarAuthViewModel"
          description: Success
      summary: Returns a resource object.
      tags:
        - Resources
  "/setup/v1/resources/{id}/deleteimage":
    delete:
      description: Use this endpoint to delete a previously uploaded resource image.
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Removes a resource image
      tags:
        - Resources
  "/setup/v1/resources/{id}/reassign/appointments/{resourceId}":
    put:
      description: "Use this endpoint to reassign appointments from one resource to another.\r

        If the startDate is not supplied, the default is today's date + 1 day;\r

        If the endDate is not supplied, all future appointments from the start date will be reassigned\r

        If the calendarId is not supplied the default is the primary calendar of the location."
      parameters:
        - description: Id of the source resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Id of the target resource object.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
        - description: Format YYYY-MM-DD. Appointment start date range.
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format YYYY-MM-DD. Appointment end date range.
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: CalendarId of calendar containing appointments.
          in: query
          name: calendarId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AppointmentViewModel"
                type: array
          description: Success
      summary: Reassigns appointments to another resource
      tags:
        - Resources
  "/setup/v1/resources/{id}/recover":
    put:
      description: Use this endpoint to recover a deleted resource.
      parameters:
        - description: Id of the resource object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Recovers a resource object.
      tags:
        - Resources
  "/setup/v1/resources/{id}/services":
    delete:
      description: Use this endpoint to delete all resource services for a resource
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Deletes resource services from the specified resource
      tags:
        - Resources
    post:
      description: Use this endpoint to add resource services
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                type: string
              type: array
          application/json:
            schema:
              items:
                type: string
              type: array
          application/json-patch+json:
            schema:
              items:
                type: string
              type: array
          text/json:
            schema:
              items:
                type: string
              type: array
        description: Array of valid service object id's
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Adds resource services to the specified resource
      tags:
        - Resources
  "/setup/v1/resources/{id}/uploadimage":
    post:
      description: "Use this endpoint to upload a resource image. You must convert the image to a base64 encoded string\r

        and pass that string as input along with your filename."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceImageInputModel"
        description: Input model for image upload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceViewModel"
          description: Success
      summary: Uploads a resource image
      tags:
        - Resources
  /setup/v1/services:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
        - description: Filter services by group.
          in: query
          name: serviceGroupId
          schema:
            format: int32
            type: integer
        - description: Filter services by deleted status.
          in: query
          name: deleted
          schema:
            type: boolean
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceListViewModel"
          description: Success
      summary: Returns a list of services.
      tags:
        - Services
    post:
      description: "Use this endpoint to create a new service. If not specified the business location id defaults to the first location in the company.\r

        The service Type defaults to 1 if not entered.\r

        The service Type can be one of the following values:\r

        1 = Appointment\r

        2 = Event\r

        3 = Meeting"
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Creates a new service object.
      tags:
        - Services
  "/setup/v1/services/allocations/{id}":
    delete:
      description: Deletes a service allocation.
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAllocationViewModel"
          description: Success
      summary: Delete a service allocation object
      tags:
        - Services
    get:
      description: ""
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAllocationViewModel"
          description: Success
      summary: Get a service allocation
      tags:
        - Services
    put:
      description: Updates a service allocation. Refer to the details in the POST service allocation for setting each of the required parameters.
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationUpdateModel"
        description: Service allocation update model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAllocationViewModel"
          description: Success
      summary: Update a service allocation
      tags:
        - Services
  "/setup/v1/services/block/{id}":
    delete:
      description: Deletes a service block.
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Delete a service block object
      tags:
        - Services
    put:
      description: Updates a resource block. Refer to the details in the POST resource block for setting each of the required parameters.
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceBlockUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceBlockUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceBlockUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceBlockUpdateModel"
        description: Service Block update model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceBlockViewModel"
          description: Success
      summary: Update a service block
      tags:
        - Services
  "/setup/v1/services/blocks/{id}":
    get:
      description: ""
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceBlockViewModel"
          description: Success
      summary: Get a service block
      tags:
        - Services
  /setup/v1/services/bookingwindows:
    post:
      description: Use this endpoint to create a new bookingWindow.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/BookingWindowInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/BookingWindowInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BookingWindowInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/BookingWindowInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingWindowViewModel"
          description: Success
      summary: Creates a new bookingWindow object.
      tags:
        - Services
  "/setup/v1/services/bookingwindows/{id}":
    delete:
      description: Use this endpoint to permanently delete a bookingWindow.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      summary: Permanently deletes bookingWindow object.
      tags:
        - Services
    get:
      description: ""
      parameters:
        - description: Valid id of a booking window object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingWindowViewModel"
          description: Success
      summary: Get a booking window
      tags:
        - Services
    put:
      description: Use this endpoint to update a booking window
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/BookingWindowUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/BookingWindowUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/BookingWindowUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/BookingWindowUpdateModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingWindowViewModel"
          description: Success
      summary: Updates a bookingWindow object.
      tags:
        - Services
  /setup/v1/services/calendar:
    post:
      description: Use this endpoint to link a service to a calendar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceCalendarInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCalendarInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceCalendarInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceCalendarInputModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCalendarViewModel"
          description: Success
      summary: Links the service to a calendar
      tags:
        - Services
  "/setup/v1/services/calendar/{id}":
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCalendarViewModel"
          description: Success
      tags:
        - Services
  "/setup/v1/services/{id}":
    delete:
      description: Use this endpoint to delete a service. The service is not permanently deleted and can be recovered.
      parameters:
        - description: The id of the service object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Deletes a service object.
      tags:
        - Services
    get:
      description: "The result returned is a single service object. An id is required to find the service. Find service id's using either the GET consumer/v1/service end point,\r

        or the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the service object.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Returns a service object.
      tags:
        - Services
    put:
      description: Use this endpoint to update a service.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceUpdateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceUpdateModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceUpdateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceUpdateModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Updates a service object.
      tags:
        - Services
  "/setup/v1/services/{id}/allocations":
    get:
      description: "This endpoint is used primarily for event booking. When you create service type events, you allocation specific occurrences of the event \r

        against the service. \r

        \r

        You can retrieve all allocations for a location by passing in zero as the service id. Otherwise, to get allocations for a specific service\r

        pass in the service id.\r

        \r

        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list allocations. Zero for all allocations.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id of the location. Defaults to the primary location.
          in: query
          name: locationId
          schema:
            type: string
        - description: The id of the resource to filter on.
          in: query
          name: resourceId
          schema:
            type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAllocationListViewModel"
          description: service alloaction object
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Service was not found
      summary: Returns a list of service allocations.
      tags:
        - Services
    post:
      description: "Creates a new service allocation. You must specify a StartDate and EndDate.\r

        A reason for the allocation is also required. This reason will display in the OnSched Portal Calendar.\r

        \r

        Service allocations are used primarily for event type services. The allocation represents an occurrence of an allocation.\r

        \r

        Service allocations can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r

        \r

        Service allocations can be for a specific date range instance or set to repeat at a specified frequency.\r

        The frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r

        \r

        Daily allocations will repeat for each day of the week for the date range specified.\r

        \r

        Weekly allocations will repeat only on the specified days of the week for the date range specified. For a weekly block\r

        you must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r

        of the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r

        For example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r

        \r

        Use the interval property to specify the interval that the allocation repeats. For example an interval of 2 for a weekly block means that\r

        the block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r

        repeat every 10 days. The interval property applies to all repeat frequencies.\r

        \r

        Monthly allocations repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r

        the start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r

        \r

        Repeat allocations will end on the date specified by the end date. You can specify 9999-12-31 in the EndDate field to indicate the repeating block\r

        should continue indefinitely."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAllocationViewModel"
          description: Success
      summary: Create a new service allocation
      tags:
        - Services
  "/setup/v1/services/{id}/allocations/bulk":
    post:
      description: "Creates new service allocations in bulk. Refer to documentation\r

        for creating a single Service Allocation POST /setup/v1/services/{id}/allocations\r

        for understanding how to populate the properties\r

        \r

        Use this endpoint only if you need to POST multiple allocations in one call"
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationsInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationsInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationsInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceAllocationsInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceAllocationViewModel"
                type: array
          description: Success
      summary: Create new service allocations in bulk
      tags:
        - Services
  "/setup/v1/services/{id}/availability":
    get:
      description: Use this endpoint to get weekly availability for a service.
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAvailabilityViewModel"
          description: Success
      summary: Returns a list of weekly availability
      tags:
        - Services
    put:
      description: "Use this endpoint to update service availability. The Id parameter specifies the service\r

        for which you are updating availability. Availability day entries do not need to be created. \r

        The availbility day entries are created when a service object is created. They default to\r

        the business hours.\r

        \r

        Create an entry for each weekday you wish to update. Days are defined as sun,mon,tue,wed,thu,fri,sat.\r

        Start and End Times are entered in miltary format. e.g 2230 is 10:30pm. \r

        \r

        OnSched API provides support for 24 hour availability. For midnight start of day use 0. For midnight end of day use 2400.\r

        \r

        To set a day as unavailable, set both the StartTime and EndTime to 0. If you require times in between specified hours\r

        to be unavailable, use the resource blocks endpoints. \r

        \r

        Times entered represent the timezone of the business location."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/AvailabilityInputModel"
        description: Service Availability Input Model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAvailabilityViewModel"
          description: Success
      summary: Updates Weekly Availability
      tags:
        - Services
  "/setup/v1/services/{id}/block":
    post:
      description: "Creates a new service block. You must specify a StartDateTime and EndDateTime.\r

        A reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r

        \r

        Service blocks can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r

        \r

        Service blocks can be for a specific date range instance or set to repeat at a specified frequency.\r

        The frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r

        \r

        Daily blocks will repeat for each day of the week for the date range specified.\r

        \r

        Weekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r

        you must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r

        of the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r

        For example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r

        \r

        Use the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r

        the block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r

        repeat every 10 days. The interval property applies to all repeat frequencies.\r

        \r

        Monthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r

        the start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r

        \r

        Repeat blocks will end on the date specified by the end date. You can specify 9999-12-31 in \r

        the EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceBlockInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceBlockInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceBlockInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceBlockInputModel"
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceBlockViewModel"
          description: Success
      summary: Create a new service block
      tags:
        - Services
  "/setup/v1/services/{id}/blocks":
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list blocks
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Format YYYY-MM-DD. Filter blocks on/after startDate
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: Format YYYY-MM-DD. Filter on/before endDate
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceBlockListViewModel"
          description: service block object's
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Service was not found
      summary: Returns a list of service blocks.
      tags:
        - Services
  "/setup/v1/services/{id}/bookingwindows":
    get:
      description: "This endpoint is used to retrieve any booking windows related to the service\r

        \r

        The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list booking windows
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingWindowViewModel"
          description: service alloaction object
        "400":
          description: Missing or invalid values in the request
        "401":
          description: Authorization error.
        "404":
          description: Service was not found
      summary: Returns a list of service booking windows.
      tags:
        - Services
  "/setup/v1/services/{id}/calendar":
    get:
      description: "Use this endpoint to get the linked calendar for the service.\r

        A service can only be linked to one calendar in a location."
      parameters:
        - description: Id of the Service object
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id of the business location. Defaults to first business location.
          in: query
          name: locationId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCalendarViewModel"
          description: Success
      summary: Returns the linked calendar for the service
      tags:
        - Services
  "/setup/v1/services/{id}/deleteimage":
    delete:
      description: Use this endpoint to delete a previously uploaded service image.
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Removes a service image
      tags:
        - Services
  "/setup/v1/services/{id}/recover":
    put:
      description: Use this endpoint to recover a deleted service.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Recovers a service object.
      tags:
        - Services
  "/setup/v1/services/{id}/resources":
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r

        Use the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service object.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Starting row of page, default 0
          in: query
          name: offset
          schema:
            format: int32
            type: integer
        - description: Page limit, default 20. Maximum 100.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          schema:
            type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceListViewModel"
          description: Success
      summary: Returns a list of resources for the specified service.
      tags:
        - Services
  "/setup/v1/services/{id}/uploadimage":
    post:
      description: "Use this endpoint to upload a service image. You must convert the image to a base64 encoded string\r

        and pass that string as input along with your filename."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceImageInputModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceImageInputModel"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceImageInputModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceImageInputModel"
        description: Input model for image upload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceViewModel"
          description: Success
      summary: Uploads a service image
      tags:
        - Services
  "/{planId}":
    get:
      parameters:
        - in: path
          name: planId
          required: true
          schema:
            type: string
        - in: query
          name: locationId
          schema:
            type: string
      responses:
        "200":
          description: Success
      tags:
        - StripePlans
components:
  schemas:
    AddressInputModel:
      additionalProperties: false
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
      type: object
    AddressUpdateModel:
      additionalProperties: false
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
      type: object
    AppointmentAuditViewModel:
      additionalProperties: false
      properties:
        appointmentId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        modificationType:
          nullable: true
          type: string
        modifiedBy:
          nullable: true
          type: string
        modifiedOn:
          format: date-time
          nullable: true
          type: string
        notesAfter:
          nullable: true
          type: string
        notesBefore:
          nullable: true
          type: string
        statusAfter:
          nullable: true
          type: string
        statusBefore:
          nullable: true
          type: string
      type: object
    AppointmentCustomerViewModel:
      additionalProperties: false
      properties:
        appointmentId:
          nullable: true
          type: string
        customerId:
          nullable: true
          type: string
      type: object
    AppointmentListViewModel:
      additionalProperties: false
      type: object
    AppointmentResourceViewModel:
      additionalProperties: false
      properties:
        appointmentId:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
      type: object
    AppointmentViewModel:
      additionalProperties: false
      properties:
        auditTrail:
          items:
            $ref: "#/components/schemas/AppointmentAuditViewModel"
          nullable: true
          type: array
        bookedBy:
          nullable: true
          type: string
        businessName:
          nullable: true
          type: string
        calendarId:
          nullable: true
          type: string
        confirmationNumber:
          nullable: true
          type: string
        confirmed:
          type: boolean
        createDate:
          nullable: true
          type: string
        customFields:
          additionalProperties:
            $ref: "#/components/schemas/CustomFieldViewModel"
          nullable: true
          type: object
        customerId:
          nullable: true
          type: string
        customerMessage:
          nullable: true
          type: string
        customers:
          items:
            $ref: "#/components/schemas/AppointmentCustomerViewModel"
          nullable: true
          type: array
        date:
          nullable: true
          type: string
        dateInternational:
          nullable: true
          type: string
        downloadIcsUrl:
          nullable: true
          type: string
        duration:
          format: int32
          type: integer
        email:
          nullable: true
          type: string
        emailConfirmationSent:
          nullable: true
          type: string
        emailReminderSent:
          nullable: true
          type: string
        endDateTime:
          nullable: true
          type: string
        firstname:
          nullable: true
          type: string
        groupSize:
          format: int32
          nullable: true
          type: integer
        id:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedOn:
          nullable: true
          type: string
        lastname:
          nullable: true
          type: string
        latitude:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        longitude:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notes:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        onlineBooking:
          nullable: true
          type: boolean
        paymentStatus:
          format: int32
          type: integer
        phone:
          nullable: true
          type: string
        phoneExt:
          nullable: true
          type: string
        phoneType:
          nullable: true
          type: string
        rescheduledId:
          nullable: true
          type: string
        resourceGroupId:
          nullable: true
          type: string
        resourceGroupName:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        resourceImageUrl:
          nullable: true
          type: string
        resourceName:
          nullable: true
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AppointmentResourceViewModel"
          nullable: true
          type: array
        serviceAllocationId:
          nullable: true
          type: string
        serviceId:
          nullable: true
          type: string
        serviceImageUrl:
          nullable: true
          type: string
        serviceName:
          nullable: true
          type: string
        smsConfirmationSent:
          nullable: true
          type: string
        smsReminderSent:
          nullable: true
          type: string
        startDateTime:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        stripeChargeId:
          nullable: true
          type: string
        stripeRefundId:
          nullable: true
          type: string
        time:
          format: int32
          type: integer
        timezone:
          format: int32
          nullable: true
          type: integer
        timezoneIana:
          nullable: true
          type: string
        timezoneId:
          nullable: true
          type: string
      type: object
    AuthorizedCompanyListViewModel:
      additionalProperties: false
      properties:
        email:
          nullable: true
          type: string
      type: object
    AvailabilityInputModel:
      additionalProperties: false
      properties:
        fri:
          $ref: "#/components/schemas/WeekDayInputModel"
        mon:
          $ref: "#/components/schemas/WeekDayInputModel"
        sat:
          $ref: "#/components/schemas/WeekDayInputModel"
        sun:
          $ref: "#/components/schemas/WeekDayInputModel"
        thu:
          $ref: "#/components/schemas/WeekDayInputModel"
        tue:
          $ref: "#/components/schemas/WeekDayInputModel"
        wed:
          $ref: "#/components/schemas/WeekDayInputModel"
      type: object
    BookingWindowInputModel:
      additionalProperties: false
      properties:
        fromTime:
          format: int32
          type: integer
        maxBookings:
          format: int32
          type: integer
        serviceId:
          nullable: true
          type: string
        toTime:
          format: int32
          type: integer
      type: object
    BookingWindowUpdateModel:
      additionalProperties: false
      properties:
        fromTime:
          format: int32
          type: integer
        maxBookings:
          format: int32
          type: integer
        serviceId:
          nullable: true
          type: string
        toTime:
          format: int32
          type: integer
      type: object
    BookingWindowViewModel:
      additionalProperties: false
      properties:
        fromTime:
          format: int32
          type: integer
        id:
          nullable: true
          type: string
        maxBookings:
          format: int32
          type: integer
        objectName:
          nullable: true
          type: string
        serviceId:
          nullable: true
          type: string
        toTime:
          format: int32
          type: integer
      type: object
    BusinessDefaultsInputModel:
      additionalProperties: false
      properties:
        autoUpdateCustomer:
          nullable: true
          type: boolean
        businessNotification:
          nullable: true
          type: boolean
        customerCity:
          nullable: true
          type: boolean
        customerState:
          nullable: true
          type: boolean
        emailInfo:
          nullable: true
          type: boolean
        enableUtcTimezone:
          nullable: true
          type: boolean
      type: object
    BusinessDefaultsUpdateModel:
      additionalProperties: false
      properties:
        autoUpdateCustomer:
          nullable: true
          type: boolean
        businessNotification:
          nullable: true
          type: boolean
        customerCity:
          nullable: true
          type: boolean
        customerState:
          nullable: true
          type: boolean
        emailInfo:
          nullable: true
          type: boolean
        enableUtcTimezone:
          nullable: true
          type: boolean
      type: object
    BusinessHourInputModel:
      additionalProperties: false
      properties:
        endTime:
          description: "endTime is entered in military format. e.g. 1800 = 6pm end, 2400 = midnight end of day.\r

            For 24 hours enter startTime = 0 and endTime = 2400"
          format: int32
          type: integer
        is24Hours:
          description: If true then available for 24 hours. startTime must be zero and endTime must be 2400.
          type: boolean
        isOpen:
          description: If false, then not available entire day, starTime and endTime must both be zero. If true, then available between startTime and endTime.
          type: boolean
        startTime:
          description: startTime is entered in military format. e.g. 0 = midnight start, 900 = 9am start
          format: int32
          type: integer
      type: object
    BusinessHoursInputModel:
      additionalProperties: false
      properties:
        fri:
          $ref: "#/components/schemas/BusinessHourInputModel"
        mon:
          $ref: "#/components/schemas/BusinessHourInputModel"
        sat:
          $ref: "#/components/schemas/BusinessHourInputModel"
        sun:
          $ref: "#/components/schemas/BusinessHourInputModel"
        thu:
          $ref: "#/components/schemas/BusinessHourInputModel"
        tue:
          $ref: "#/components/schemas/BusinessHourInputModel"
        wed:
          $ref: "#/components/schemas/BusinessHourInputModel"
      type: object
    BusinessHoursUpdateModel:
      additionalProperties: false
      properties:
        fri:
          $ref: "#/components/schemas/BusinessHourInputModel"
        mon:
          $ref: "#/components/schemas/BusinessHourInputModel"
        sat:
          $ref: "#/components/schemas/BusinessHourInputModel"
        sun:
          $ref: "#/components/schemas/BusinessHourInputModel"
        thu:
          $ref: "#/components/schemas/BusinessHourInputModel"
        tue:
          $ref: "#/components/schemas/BusinessHourInputModel"
        wed:
          $ref: "#/components/schemas/BusinessHourInputModel"
      type: object
    BusinessPermissionListViewModel:
      additionalProperties: false
      type: object
    BusinessServiceListViewModel:
      additionalProperties: false
      type: object
    BusinessServiceViewModel:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        objectName:
          nullable: true
          type: string
        serviceId:
          format: int32
          type: integer
        serviceName:
          nullable: true
          type: string
      type: object
    BusinessUserInputModel:
      additionalProperties: false
      properties:
        email:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        sendRegistrationInvite:
          type: boolean
      type: object
    BusinessUserListViewModel:
      additionalProperties: false
      type: object
    BusinessUserUpdateModel:
      additionalProperties: false
      properties:
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        sendRegistrationInvite:
          type: boolean
      type: object
    BusinessUserViewModel:
      additionalProperties: false
      properties:
        accountId:
          format: uuid
          nullable: true
          type: string
        businessName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        identityAccount:
          type: boolean
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        resourceName:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      type: object
    CalendarAuthViewModel:
      additionalProperties: false
      properties:
        calendarAuthUrl:
          nullable: true
          type: string
        calendarId:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
      type: object
    CalendarBlockInputModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    CalendarBlockListViewModel:
      additionalProperties: false
      type: object
    CalendarBlockViewModel:
      additionalProperties: false
      properties:
        calendarId:
          nullable: true
          type: string
        endDate:
          format: date-time
          type: string
        endTime:
          format: int32
          type: integer
        id:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatViewModel"
        repeats:
          type: boolean
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    CompanyDomainInputModel:
      additionalProperties: false
      properties:
        domain:
          nullable: true
          type: string
      type: object
    CompanyDomainListViewModel:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: "#/components/schemas/CompanyDomainViewModel"
          nullable: true
          type: array
        objectName:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    CompanyDomainUpdateModel:
      additionalProperties: false
      properties:
        domain:
          nullable: true
          type: string
      type: object
    CompanyDomainViewModel:
      additionalProperties: false
      properties:
        domain:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
      type: object
    CompanyInputModel:
      additionalProperties: false
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        bookingWebhookUrl:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        customerWebhookUrl:
          nullable: true
          type: string
        disableEmailAndSmsNotifications:
          type: boolean
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notificationFromEmailAddress:
          nullable: true
          type: string
        notificationFromName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        registrationEmail:
          nullable: true
          type: string
        reminderWebhookUrl:
          nullable: true
          type: string
        resourceWebhookUrl:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        timezoneName:
          nullable: true
          type: string
        webhookSignatureHash:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    CompanyUpdateModel:
      additionalProperties: false
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        bookingWebhookUrl:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        customerWebhookUrl:
          nullable: true
          type: string
        disableEmailAndSmsNotifications:
          type: boolean
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notificationFromEmailAddress:
          nullable: true
          type: string
        notificationFromName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        registrationEmail:
          nullable: true
          type: string
        reminderWebhookUrl:
          nullable: true
          type: string
        resourceWebhookUrl:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        timezoneName:
          nullable: true
          type: string
        webhookSignatureHash:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    CompanyViewModel:
      additionalProperties: false
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        bookingWebhookUrl:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        customerWebhookUrl:
          nullable: true
          type: string
        deletedStatus:
          type: boolean
        deletedTime:
          nullable: true
          type: string
        disableEmailAndSmsNotifications:
          type: boolean
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notificationFromEmailAddress:
          nullable: true
          type: string
        notificationFromName:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        registrationDate:
          nullable: true
          type: string
        registrationEmail:
          nullable: true
          type: string
        reminderWebhookUrl:
          nullable: true
          type: string
        resourceWebhookUrl:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        timezoneId:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    ContactInputModel:
      additionalProperties: false
      properties:
        businessPhone:
          nullable: true
          type: string
        businessPhoneExt:
          nullable: true
          type: string
        conferenceInfo:
          nullable: true
          type: string
        homePhone:
          nullable: true
          type: string
        mobilePhone:
          nullable: true
          type: string
        preferredPhoneType:
          nullable: true
          type: string
        skypeUsername:
          nullable: true
          type: string
      type: object
    ContactUpdateModel:
      additionalProperties: false
      properties:
        businessPhone:
          nullable: true
          type: string
        businessPhoneExt:
          nullable: true
          type: string
        conferenceInfo:
          nullable: true
          type: string
        homePhone:
          nullable: true
          type: string
        mobilePhone:
          nullable: true
          type: string
        preferredPhoneType:
          nullable: true
          type: string
        skypeUsername:
          nullable: true
          type: string
      type: object
    ContentResult:
      additionalProperties: false
      properties:
        content:
          nullable: true
          type: string
        contentType:
          nullable: true
          type: string
        statusCode:
          format: int32
          nullable: true
          type: integer
      type: object
    CustomFieldInputModel:
      additionalProperties: false
      properties:
        field1:
          nullable: true
          type: string
        field10:
          nullable: true
          type: string
        field2:
          nullable: true
          type: string
        field3:
          nullable: true
          type: string
        field4:
          nullable: true
          type: string
        field5:
          nullable: true
          type: string
        field6:
          nullable: true
          type: string
        field7:
          nullable: true
          type: string
        field8:
          nullable: true
          type: string
        field9:
          nullable: true
          type: string
      type: object
    CustomFieldUpdateModel:
      additionalProperties: false
      properties:
        field1:
          nullable: true
          type: string
        field10:
          nullable: true
          type: string
        field2:
          nullable: true
          type: string
        field3:
          nullable: true
          type: string
        field4:
          nullable: true
          type: string
        field5:
          nullable: true
          type: string
        field6:
          nullable: true
          type: string
        field7:
          nullable: true
          type: string
        field8:
          nullable: true
          type: string
        field9:
          nullable: true
          type: string
      type: object
    CustomFieldViewModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    CustomerListViewModel:
      additionalProperties: false
      type: object
    CustomerPrivacyViewModel:
      additionalProperties: false
      type: object
    CustomerViewModel:
      additionalProperties: false
      properties:
        birthdate:
          nullable: true
          type: string
        businessName:
          nullable: true
          type: string
        companyName:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        createdOn:
          nullable: true
          type: string
        deletedStatus:
          type: boolean
        deletedTime:
          nullable: true
          type: string
        disabled:
          nullable: true
          type: boolean
        email:
          nullable: true
          type: string
        emailInfo:
          nullable: true
          type: boolean
        emailPromotion:
          nullable: true
          type: boolean
        firstname:
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
        groupId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        inviteEmailSent:
          nullable: true
          type: string
        lastVisitDate:
          nullable: true
          type: string
        lastname:
          nullable: true
          type: string
        latitude:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        longitude:
          nullable: true
          type: string
        modifiedBy:
          nullable: true
          type: string
        modifiedOn:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notificationType:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        registeredBy:
          nullable: true
          type: string
        registrationDate:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        stripeCustomerId:
          nullable: true
          type: string
        subscriptionId:
          nullable: true
          type: string
        verificationDate:
          nullable: true
          type: string
        verifiedBy:
          nullable: true
          type: string
        welcomeEmailSent:
          nullable: true
          type: string
      type: object
    EmailTemplateInputModel:
      additionalProperties: false
      type: object
    EmailTemplateListViewModel:
      additionalProperties: false
      type: object
    GoogleServiceAccountCreds:
      additionalProperties: false
      properties:
        auth_provider_x509_cert_url:
          nullable: true
          type: string
        auth_uri:
          nullable: true
          type: string
        client_email:
          nullable: true
          type: string
        client_id:
          nullable: true
          type: string
        client_x509_cert_url:
          nullable: true
          type: string
        private_key:
          nullable: true
          type: string
        private_key_id:
          nullable: true
          type: string
        project_id:
          nullable: true
          type: string
        token_uri:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    LocationInputModel:
      additionalProperties: false
      properties:
        address:
          $ref: "#/components/schemas/AddressInputModel"
        adminEmail:
          description: Field is required.
          nullable: true
          type: string
        adminName:
          description: This field is no longer required and has been deprecated.
          nullable: true
          type: string
        businessHours:
          $ref: "#/components/schemas/BusinessHoursInputModel"
        defaults:
          $ref: "#/components/schemas/BusinessDefaultsInputModel"
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        friendlyId:
          description: "Use the friendlyId as an alternative to the assigned locationId\r

            Choose something easy and meaningful. Must be unique within your company.\r

            FriendlyId's are limited to maximum of 64 characters."
          nullable: true
          type: string
        maxCapacity:
          format: int32
          nullable: true
          type: integer
        maxGroupSize:
          description: "GroupSize Limits the number of people that can come\r

            along on a single appointment"
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        regionId:
          nullable: true
          type: string
        settings:
          $ref: "#/components/schemas/OnlineSettingsInputModel"
        timezoneName:
          description: Field is required. It is in Iana format. e.g. America/New_York. Use moment.js in your client for ease of timezone detection and selection
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    LocationListViewModel:
      additionalProperties: false
      type: object
    LocationUpdateModel:
      additionalProperties: false
      properties:
        address:
          $ref: "#/components/schemas/AddressUpdateModel"
        adminEmail:
          nullable: true
          type: string
        adminName:
          nullable: true
          type: string
        businessHours:
          $ref: "#/components/schemas/BusinessHoursUpdateModel"
        defaults:
          $ref: "#/components/schemas/BusinessDefaultsUpdateModel"
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        friendlyId:
          nullable: true
          type: string
        maxCapacity:
          format: int32
          nullable: true
          type: integer
        maxGroupSize:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        regionId:
          nullable: true
          type: string
        settings:
          $ref: "#/components/schemas/OnlineSettingsUpdateModel"
        timezoneName:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    LocationViewModel:
      additionalProperties: false
      properties:
        adminEmail:
          nullable: true
          type: string
        adminName:
          nullable: true
          type: string
        companyId:
          nullable: true
          type: string
        companyName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        fax:
          nullable: true
          type: string
        friendlyId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        imageUrl:
          nullable: true
          type: string
        latitude:
          format: double
          type: number
        logo:
          nullable: true
          type: string
        longitude:
          format: double
          type: number
        maxCapacity:
          format: int32
          type: integer
        maxGroupSize:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        primaryBusiness:
          type: boolean
        primaryCalendarId:
          nullable: true
          type: string
        regionId:
          nullable: true
          type: string
        timezoneIana:
          nullable: true
          type: string
        timezoneId:
          nullable: true
          type: string
        timezoneOffset:
          format: int32
          nullable: true
          type: integer
        website:
          nullable: true
          type: string
      type: object
    LocationsInputModel:
      additionalProperties: false
      type: object
    MasterEmailTemplateSettingsViewModel:
      additionalProperties: false
      properties:
        centerEmailContent:
          type: boolean
        centerEmailContentPanel:
          type: boolean
        centerEmailFooter:
          type: boolean
        contentBackgroundColor:
          nullable: true
          type: string
        contentColor:
          nullable: true
          type: string
        contentLinkColor:
          nullable: true
          type: string
        emailBackgroundColor:
          nullable: true
          type: string
        emailColor:
          nullable: true
          type: string
        emailLinkColor:
          nullable: true
          type: string
        footerFontSize:
          nullable: true
          type: string
        footerLogoHeight:
          nullable: true
          type: string
        footerLogoPadding:
          nullable: true
          type: string
        footerPanelEmailContact:
          type: boolean
        footerPanelPhoneContact:
          type: boolean
        footerPanelWebsiteContact:
          type: boolean
        headerLogoHeight:
          nullable: true
          type: string
        headerLogoPadding:
          nullable: true
          type: string
        panelBackgroundColor:
          nullable: true
          type: string
        panelColor:
          nullable: true
          type: string
        panelLinkColor:
          nullable: true
          type: string
        privacyPolicyLink:
          nullable: true
          type: string
        showContentPanel:
          type: boolean
        showFooterLogo:
          type: boolean
        showFooterPanel:
          type: boolean
        showHeaderLogo:
          type: boolean
        showHeaderPanel:
          type: boolean
        version:
          nullable: true
          type: string
      type: object
    MasterTemplateSettingsInputModel:
      additionalProperties: false
      properties:
        centerEmailContent:
          nullable: true
          type: boolean
        centerEmailContentPanel:
          nullable: true
          type: boolean
        centerEmailFooter:
          nullable: true
          type: boolean
        contentBackgroundColor:
          nullable: true
          type: string
        contentColor:
          nullable: true
          type: string
        contentLinkColor:
          nullable: true
          type: string
        emailBackgroundColor:
          nullable: true
          type: string
        emailColor:
          nullable: true
          type: string
        emailLinkColor:
          nullable: true
          type: string
        footerFontSize:
          nullable: true
          type: string
        footerLogoHeight:
          nullable: true
          type: string
        footerLogoPadding:
          nullable: true
          type: string
        footerPanelEmailContact:
          nullable: true
          type: boolean
        footerPanelPhoneContact:
          nullable: true
          type: boolean
        footerPanelWebsiteContact:
          nullable: true
          type: boolean
        headerLogoHeight:
          nullable: true
          type: string
        headerLogoPadding:
          nullable: true
          type: string
        panelBackgroundColor:
          nullable: true
          type: string
        panelColor:
          nullable: true
          type: string
        panelLinkColor:
          nullable: true
          type: string
        privacyPolicyLink:
          nullable: true
          type: string
        showContentPanel:
          nullable: true
          type: boolean
        showFooterLogo:
          nullable: true
          type: boolean
        showFooterPanel:
          nullable: true
          type: boolean
        showHeaderLogo:
          nullable: true
          type: boolean
        showHeaderPanel:
          nullable: true
          type: boolean
      type: object
    OnlineSettingsInputModel:
      additionalProperties: false
      properties:
        bookAheadUnit:
          format: int32
          nullable: true
          type: integer
        bookAheadValue:
          format: int32
          nullable: true
          type: integer
        bookInAdvance:
          format: int32
          nullable: true
          type: integer
        bookingTimerMins:
          format: int32
          nullable: true
          type: integer
        customerBookingsPerDay:
          format: int32
          nullable: true
          type: integer
        enableWorldTimezones:
          nullable: true
          type: boolean
      type: object
    OnlineSettingsUpdateModel:
      additionalProperties: false
      properties:
        bookAheadUnit:
          format: int32
          nullable: true
          type: integer
        bookAheadValue:
          format: int32
          nullable: true
          type: integer
        bookInAdvance:
          format: int32
          nullable: true
          type: integer
        bookingTimerMins:
          format: int32
          nullable: true
          type: integer
        customerBookingsPerDay:
          format: int32
          nullable: true
          type: integer
        enableWorldTimezones:
          nullable: true
          type: boolean
      type: object
    RegionInputModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
      type: object
    RegionListViewModel:
      additionalProperties: false
      type: object
    RegionUpdateModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
      type: object
    RegionViewModel:
      additionalProperties: false
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
      type: object
    RepeatInputModel:
      additionalProperties: false
      properties:
        frequency:
          nullable: true
          type: string
        interval:
          format: int32
          nullable: true
          type: integer
        monthDay:
          format: int32
          nullable: true
          type: integer
        monthType:
          nullable: true
          type: string
        weekdays:
          nullable: true
          type: string
      type: object
    RepeatUpdateModel:
      additionalProperties: false
      properties:
        frequency:
          nullable: true
          type: string
        interval:
          format: int32
          nullable: true
          type: integer
        monthDay:
          format: int32
          nullable: true
          type: integer
        monthType:
          nullable: true
          type: string
        weekdays:
          nullable: true
          type: string
      type: object
    RepeatViewModel:
      additionalProperties: false
      properties:
        frequency:
          nullable: true
          type: string
        interval:
          format: int32
          type: integer
        monthDay:
          nullable: true
          type: string
        monthType:
          nullable: true
          type: string
        weekdays:
          nullable: true
          type: string
      type: object
    ResourceAllocationInputModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceAllocationListViewModel:
      additionalProperties: false
      type: object
    ResourceAllocationUpdateModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceAllocationViewModel:
      additionalProperties: false
      properties:
        businessId:
          format: int32
          type: integer
        endDate:
          format: date-time
          type: string
        endTime:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        objectName:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatViewModel"
        repeats:
          type: boolean
        resourceId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceAvailabilityViewModel:
      additionalProperties: false
      properties:
        businessId:
          format: int32
          type: integer
        ignoreBusinessHours:
          type: boolean
        resourceId:
          format: int32
          type: integer
        resourceName:
          nullable: true
          type: string
        resourceTzo:
          format: int32
          type: integer
      type: object
    ResourceBlockInputModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceBlockListViewModel:
      additionalProperties: false
      type: object
    ResourceBlockUpdateModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceBlockViewModel:
      additionalProperties: false
      properties:
        businessId:
          format: int32
          type: integer
        endDate:
          format: date-time
          type: string
        endTime:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        objectName:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatViewModel"
        repeats:
          type: boolean
        resourceId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ResourceGroupInputModel:
      additionalProperties: false
      properties:
        description:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ResourceGroupListViewModel:
      additionalProperties: false
      type: object
    ResourceGroupUpdateModel:
      additionalProperties: false
      properties:
        description:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ResourceGroupViewModel:
      additionalProperties: false
      properties:
        bookingNotification:
          format: int32
          type: integer
        deletedStatus:
          type: boolean
        deletedTime:
          format: date-time
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
      type: object
    ResourceImageInputModel:
      additionalProperties: false
      properties:
        imageFileData:
          nullable: true
          type: string
        imageFileName:
          nullable: true
          type: string
      type: object
    ResourceInputModel:
      additionalProperties: false
      properties:
        address:
          $ref: "#/components/schemas/AddressInputModel"
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        contact:
          $ref: "#/components/schemas/ContactInputModel"
        customFields:
          $ref: "#/components/schemas/CustomFieldInputModel"
        description:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        groupId:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        options:
          $ref: "#/components/schemas/ResourceOptionsInputModel"
        serviceIds:
          items:
            type: string
          nullable: true
          type: array
        timezoneId:
          nullable: true
          type: string
      type: object
    ResourceListViewModel:
      additionalProperties: false
      type: object
    ResourceOptionsInputModel:
      additionalProperties: false
      description: Options for the new resource
      properties:
        bioLink:
          nullable: true
          type: string
        bookingNotification:
          format: int32
          nullable: true
          type: integer
        calendarAvailability:
          description: 0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar
          format: int32
          nullable: true
          type: integer
        displayColor:
          nullable: true
          type: string
        effectiveDate:
          format: date-time
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
        googleCalendarId:
          nullable: true
          type: string
        hourly:
          format: double
          nullable: true
          type: number
        ignoreBusinessHours:
          nullable: true
          type: boolean
        notificationType:
          description: 0 = None, 1=Online Bookings 2=All Bookings.
          format: int32
          nullable: true
          type: integer
        outlookCalendarId:
          nullable: true
          type: string
        sortKey:
          format: int32
          nullable: true
          type: integer
      type: object
    ResourceOptionsUpdateModel:
      additionalProperties: false
      properties:
        bioLink:
          nullable: true
          type: string
        bookingNotification:
          format: int32
          nullable: true
          type: integer
        calendarAvailability:
          description: 0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar
          format: int32
          nullable: true
          type: integer
        displayColor:
          nullable: true
          type: string
        effectiveDate:
          format: date-time
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
        googleCalendarId:
          nullable: true
          type: string
        hourly:
          format: double
          nullable: true
          type: number
        ignoreBusinessHours:
          nullable: true
          type: boolean
        notificationType:
          description: 0 = None, 1=Online Bookings 2=All Bookings.
          format: int32
          nullable: true
          type: integer
        outlookCalendarId:
          nullable: true
          type: string
        sortKey:
          format: int32
          nullable: true
          type: integer
      type: object
    ResourceUpdateModel:
      additionalProperties: false
      properties:
        address:
          $ref: "#/components/schemas/AddressUpdateModel"
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        contact:
          $ref: "#/components/schemas/ContactUpdateModel"
        customFields:
          $ref: "#/components/schemas/CustomFieldUpdateModel"
        description:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        groupId:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        options:
          $ref: "#/components/schemas/ResourceOptionsUpdateModel"
        serviceIds:
          items:
            type: string
          nullable: true
          type: array
        timezoneId:
          nullable: true
          type: string
      type: object
    ResourceViewModel:
      additionalProperties: false
      properties:
        bioLink:
          nullable: true
          type: string
        bookingNotification:
          format: int32
          type: integer
        calendarAvailability:
          format: int32
          type: integer
        deletedStatus:
          type: boolean
        deletedTime:
          format: date-time
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        effectiveDate:
          format: date-time
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
        googleCalendarAuthUrl:
          nullable: true
          type: string
        googleCalendarAuthorized:
          type: boolean
        googleCalendarId:
          nullable: true
          type: string
        groupId:
          format: int32
          nullable: true
          type: integer
        hourly:
          format: double
          nullable: true
          type: number
        id:
          nullable: true
          type: string
        ignoreBusinessHours:
          type: boolean
        imageUrl:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        notificationType:
          format: int32
          type: integer
        objectName:
          nullable: true
          type: string
        outlookCalendarAuthUrl:
          nullable: true
          type: string
        outlookCalendarAuthorized:
          type: boolean
        outlookCalendarId:
          nullable: true
          type: string
        skypeName:
          nullable: true
          type: string
        sortKey:
          format: int32
          type: integer
        timezoneIana:
          nullable: true
          type: string
        timezoneId:
          nullable: true
          type: string
        timezoneOffset:
          format: int32
          nullable: true
          type: integer
      type: object
    ResourcesInputModel:
      additionalProperties: false
      type: object
    ResourcesUpdateModel:
      additionalProperties: false
      type: object
    ScheduleInputModel:
      additionalProperties: false
      properties:
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        bookingsPerSlot:
          format: int32
          type: integer
        interval:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        resourceGroupId:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ScheduleListViewModel:
      additionalProperties: false
      type: object
    ScheduleUpdateModel:
      additionalProperties: false
      properties:
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        bookingsPerSlot:
          format: int32
          type: integer
        interval:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        resourceGroupId:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ScheduleViewModel:
      additionalProperties: false
      properties:
        bookingsPerSlot:
          format: int32
          type: integer
        deletedStatus:
          type: boolean
        deletedTime:
          format: date-time
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        interval:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        primary:
          type: boolean
        resourceGroupId:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ServiceAllocationInputModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        bookingLimit:
          format: int32
          type: integer
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        resourceId:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ServiceAllocationListViewModel:
      additionalProperties: false
      type: object
    ServiceAllocationUpdateModel:
      additionalProperties: false
      properties:
        allDay:
          nullable: true
          type: boolean
        bookingLimit:
          format: int32
          type: integer
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeats:
          nullable: true
          type: boolean
        resourceId:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ServiceAllocationViewModel:
      additionalProperties: false
      properties:
        bookingCount:
          format: int32
          type: integer
        bookingLimit:
          format: int32
          type: integer
        endDate:
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        id:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatViewModel"
        repeats:
          type: boolean
        resourceDescription:
          nullable: true
          type: string
        resourceId:
          nullable: true
          type: string
        resourceImageUrl:
          nullable: true
          type: string
        resourceName:
          nullable: true
          type: string
        serviceDescription:
          nullable: true
          type: string
        serviceDuration:
          format: int32
          type: integer
        serviceId:
          nullable: true
          type: string
        serviceImageUrl:
          nullable: true
          type: string
        serviceName:
          nullable: true
          type: string
        startDate:
          nullable: true
          type: string
        startTime:
          format: int32
          type: integer
        timezoneName:
          nullable: true
          type: string
        timezoneOffset:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceAllocationsInputModel:
      additionalProperties: false
      type: object
    ServiceAvailabilityViewModel:
      additionalProperties: false
      properties:
        ignoreBusinessHours:
          type: boolean
        serviceId:
          format: int32
          type: integer
        serviceName:
          nullable: true
          type: string
      type: object
    ServiceBlockInputModel:
      additionalProperties: false
      properties:
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          type: integer
        locationId:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatInputModel"
        repeats:
          type: boolean
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ServiceBlockListViewModel:
      additionalProperties: false
      type: object
    ServiceBlockUpdateModel:
      additionalProperties: false
      properties:
        endDate:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: int32
          nullable: true
          type: integer
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatUpdateModel"
        repeats:
          nullable: true
          type: boolean
        startDate:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceBlockViewModel:
      additionalProperties: false
      properties:
        deletedStatus:
          type: boolean
        deletedTime:
          nullable: true
          type: string
        endDate:
          format: date-time
          type: string
        endTime:
          format: int32
          type: integer
        id:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        repeat:
          $ref: "#/components/schemas/RepeatViewModel"
        repeats:
          type: boolean
        serviceId:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        startTime:
          format: int32
          type: integer
      type: object
    ServiceCalendarInputModel:
      additionalProperties: false
      properties:
        calendarId:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        serviceId:
          nullable: true
          type: string
      type: object
    ServiceCalendarViewModel:
      additionalProperties: false
      properties:
        calendarId:
          nullable: true
          type: string
        calendarName:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        serviceId:
          nullable: true
          type: string
        serviceName:
          nullable: true
          type: string
      type: object
    ServiceFeesInputModel:
      additionalProperties: false
      properties:
        cancellationFeeAmount:
          format: double
          type: number
        cancellationFeeTaxable:
          type: boolean
        feeAmount:
          format: double
          type: number
        feeTaxable:
          type: boolean
        nonRefundable:
          type: boolean
      type: object
    ServiceFeesUpdateModel:
      additionalProperties: false
      properties:
        cancellationFeeAmount:
          format: double
          nullable: true
          type: number
        cancellationFeeTaxable:
          nullable: true
          type: boolean
        feeAmount:
          format: double
          nullable: true
          type: number
        feeTaxable:
          nullable: true
          type: boolean
        nonRefundable:
          nullable: true
          type: boolean
      type: object
    ServiceImageInputModel:
      additionalProperties: false
      properties:
        imageFileData:
          nullable: true
          type: string
        imageFileName:
          nullable: true
          type: string
      type: object
    ServiceInputModel:
      additionalProperties: false
      properties:
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        bookingInterval:
          format: int32
          type: integer
        bookingLimit:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        duration:
          format: int32
          type: integer
        fees:
          $ref: "#/components/schemas/ServiceFeesInputModel"
        locationId:
          nullable: true
          type: string
        maxCapacity:
          format: int32
          type: integer
        maxGroupSize:
          format: int32
          type: integer
        mediaPageUrl:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        options:
          $ref: "#/components/schemas/ServiceOptionsInputModel"
        public:
          type: boolean
        serviceGroupId:
          nullable: true
          type: string
        settings:
          $ref: "#/components/schemas/ServiceSettingsInputModel"
        type:
          nullable: true
          type: string
      type: object
    ServiceListViewModel:
      additionalProperties: false
      type: object
    ServiceOptionsInputModel:
      additionalProperties: false
      properties:
        consumerPadding:
          nullable: true
          type: boolean
        defaultService:
          nullable: true
          type: boolean
        durationInterval:
          format: int32
          nullable: true
          type: integer
        durationMax:
          format: int32
          nullable: true
          type: integer
        durationMin:
          format: int32
          nullable: true
          type: integer
        durationSelect:
          nullable: true
          type: boolean
        padding:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceOptionsUpdateModel:
      additionalProperties: false
      properties:
        consumerPadding:
          nullable: true
          type: boolean
        defaultService:
          nullable: true
          type: boolean
        durationInterval:
          format: int32
          nullable: true
          type: integer
        durationMax:
          format: int32
          nullable: true
          type: integer
        durationMin:
          format: int32
          nullable: true
          type: integer
        durationSelect:
          nullable: true
          type: boolean
        padding:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceSettingsInputModel:
      additionalProperties: false
      properties:
        bookAheadUnit:
          format: int32
          nullable: true
          type: integer
        bookAheadValue:
          format: int32
          nullable: true
          type: integer
        bookInAdvance:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceSettingsUpdateModel:
      additionalProperties: false
      properties:
        bookAheadUnit:
          format: int32
          nullable: true
          type: integer
        bookAheadValue:
          format: int32
          nullable: true
          type: integer
        bookInAdvance:
          format: int32
          nullable: true
          type: integer
      type: object
    ServiceUpdateModel:
      additionalProperties: false
      properties:
        availability:
          $ref: "#/components/schemas/AvailabilityInputModel"
        bookingInterval:
          format: int32
          nullable: true
          type: integer
        bookingLimit:
          format: int32
          nullable: true
          type: integer
        description:
          nullable: true
          type: string
        duration:
          format: int32
          nullable: true
          type: integer
        fees:
          $ref: "#/components/schemas/ServiceFeesUpdateModel"
        locationId:
          nullable: true
          type: string
        maxCapacity:
          format: int32
          nullable: true
          type: integer
        maxGroupSize:
          format: int32
          nullable: true
          type: integer
        mediaPageUrl:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        options:
          $ref: "#/components/schemas/ServiceOptionsUpdateModel"
        public:
          nullable: true
          type: boolean
        serviceGroupId:
          nullable: true
          type: string
        settings:
          $ref: "#/components/schemas/ServiceSettingsUpdateModel"
        type:
          nullable: true
          type: string
      type: object
    ServiceViewModel:
      additionalProperties: false
      properties:
        bookAheadUnit:
          format: int32
          type: integer
        bookAheadValue:
          format: int32
          type: integer
        bookInAdvance:
          format: int32
          type: integer
        bookingInterval:
          format: int32
          type: integer
        bookingLimit:
          format: int32
          type: integer
        calendarId:
          nullable: true
          type: string
        calendarResourceGroupId:
          nullable: true
          type: string
        cancellationFeeAmount:
          format: double
          type: number
        cancellationFeeTaxable:
          type: boolean
        companyId:
          nullable: true
          type: string
        consumerPadding:
          type: boolean
        dailyBookingLimitCount:
          format: int32
          type: integer
        dailyBookingLimitMinutes:
          format: int32
          type: integer
        defaultService:
          type: boolean
        description:
          nullable: true
          type: string
        duration:
          format: int32
          type: integer
        durationInterval:
          format: int32
          type: integer
        durationMax:
          format: int32
          type: integer
        durationMin:
          format: int32
          type: integer
        durationSelect:
          type: boolean
        feeAmount:
          format: double
          type: number
        feeTaxable:
          type: boolean
        id:
          nullable: true
          type: string
        imageUrl:
          nullable: true
          type: string
        locationId:
          nullable: true
          type: string
        maxBookingLimit:
          format: int32
          type: integer
        maxCapacity:
          format: int32
          type: integer
        maxGroupSize:
          format: int32
          type: integer
        maxResourceBookingLimit:
          format: int32
          type: integer
        mediaPageUrl:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        nonRefundable:
          type: boolean
        objectName:
          nullable: true
          type: string
        padding:
          format: int32
          type: integer
        roundRobin:
          format: int32
          type: integer
        serviceGroupId:
          format: int32
          nullable: true
          type: integer
        serviceGroupName:
          nullable: true
          type: string
        showOnline:
          type: boolean
        type:
          nullable: true
          type: string
      type: object
    SystemTimezoneViewModel:
      additionalProperties: false
      properties:
        baseUtcOffset:
          format: int32
          type: integer
        daylightName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        standardName:
          nullable: true
          type: string
        supportsDaylightSavingTime:
          type: boolean
        timezoneIana:
          nullable: true
          type: string
        timezoneId:
          nullable: true
          type: string
      type: object
    TimezoneViewModel:
      additionalProperties: false
      properties:
        regions:
          items:
            type: string
          nullable: true
          type: array
        timezones:
          items:
            $ref: "#/components/schemas/TimezonesViewModel"
          nullable: true
          type: array
      type: object
    TimezonesViewModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        timezoneIanna:
          nullable: true
          type: string
        tzOffset:
          format: int32
          type: integer
      type: object
    WeekDayInputModel:
      additionalProperties: false
      properties:
        endTime:
          format: int32
          type: integer
        startTime:
          format: int32
          type: integer
      type: object
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            OnSchedApi: Consumer and Setup Interface
          tokenUrl: https://sandbox-identity.onsched.com/connect/token
      type: oauth2
