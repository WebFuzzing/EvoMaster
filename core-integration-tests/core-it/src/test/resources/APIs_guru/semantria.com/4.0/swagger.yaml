swagger: "2.0"
schemes:
  - https
host: api.semantria.com
basePath: /
info:
  contact:
    x-twitter: semantria
  description: Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
  title: Semantria
  version: "4.0"
  x-apisguru-categories:
    - social
    - text
  x-logo:
    url: https://twitter.com/semantria/profile_image?size=original
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.11
      format: swagger
      url: https://semantria.com/developer/api-docs-prod
      version: "1.2"
  x-providerName: semantria.com
externalDocs:
  url: https://semantria.com/support/developer/
produces:
  - application/json
  - application/xml
tags:
  - description: Blacklisted output
    name: Blacklist
  - description: User categories
    name: Categories
  - description: Configurations
    name: Configuration
  - description: User entities
    name: Entities
  - description: Supported features
    name: Features
  - description: Sentiment-Bearing Phrases
    name: Phrases
  - description: Discovery analysis
    name: ProcessingCollections
  - description: Basic analysis
    name: ProcessingDocuments
  - description: Queries
    name: Queries
  - description: Usage statistics
    name: Statistics
  - description: API status
    name: Status
  - description: Subscription details
    name: Subscription
  - description: Taxonomy
    name: Taxonomy
paths:
  "/blacklist.{content_type}":
    delete:
      description: This method removes certain blacklisted items by their values on Semantria side.
      operationId: deleteBlacklistItems
      parameters:
        - description: Identifier of configuration blacklist items linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of unique blacklisted item identifiers (string).
          in: body
          name: Blacklisted item IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove items from blacklist
      tags:
        - Blacklist
    get:
      description: This method retrieves all backlisted items available on Semantria side.
      operationId: getBlacklist
      parameters:
        - description: Identifier of configuration blacklist linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the blacklist.
          schema:
            items:
              $ref: "#/definitions/BlacklistItem_ResponseVersion"
            type: array
        "202":
          description: Client request accepted, no blacklist found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve blacklisted items
      tags:
        - Blacklist
    post:
      description: This method adds new unique items to the backlist on Semantria side.
      operationId: addBlacklist
      parameters:
        - description: Identifier of configuration blacklist linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Blacklisted items
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/BlacklistItem_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed blacklisted items per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add items to blacklist
      tags:
        - Blacklist
    put:
      description: This method updates existing items by unique IDs in the backlist on Semantria side.
      operationId: updateBlacklist
      parameters:
        - description: Identifier of configuration blacklist linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Blacklisted items
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/BlacklistItem_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed blacklisted items per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Update items in blacklist
      tags:
        - Blacklist
  "/categories.{content_type}":
    delete:
      description: This method removes certain user categories by their IDs on Semantria side.
      operationId: deleteCategories
      parameters:
        - description: Identifier of configuration user categories linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of user category identifiers.
          in: body
          name: Category IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove user categories
      tags:
        - Categories
    get:
      description: This method retrieves list of user categories available on Semantria side.
      operationId: getCategories
      parameters:
        - description: Identifier of configuration user categories linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the categories list.
          schema:
            items:
              $ref: "#/definitions/Category_ResponseVersion"
            type: array
        "202":
          description: Client request accepted, no categories found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve user categories
      tags:
        - Categories
    post:
      description: This method adds user categories on Semantria side.
      operationId: addCategories
      parameters:
        - description: Identifier of configuration user categories linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Categories
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Category_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed categories per configuration or samples per category achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add user categories
      tags:
        - Categories
    put:
      description: This method updates user categories by unique IDs on Semantria side.
      operationId: updateCategories
      parameters:
        - description: Identifier of configuration user categories linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Categories
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Category_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed categories per configuration or samples per category achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Updates user categories
      tags:
        - Categories
  "/collection.{content_type}":
    post:
      description: This method queues collection of documents onto the server for analysis. Queued collection of documents analyzes in common context as entire thing. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Collection IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing collection with the new Data
      operationId: queueCollection
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Parametrized JSON or XML object.
          in: body
          name: Collection
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
          schema:
            $ref: "#/definitions/Collection"
        "202":
          description: Client request accepted and queued for processing.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Documents limit per collection is achieved.
        "413":
          description: Characters limit for single document exceeded.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Queue collection for analysis
      tags:
        - ProcessingCollections
  "/collection/processed.{content_type}":
    get:
      description: This method retrieves analysis results for processed collections from Semantria. FAILED collections will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the collections, which were queued using the same configuration ID, in opposite Primary configuration uses.
      operationId: retrieveProcessedCollections
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with processed collections.
          schema:
            $ref: "#/definitions/CollectionAnalyticData"
        "202":
          description: Client request accepted, no processed collections found on the server.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve collections analysis
      tags:
        - ProcessingCollections
  "/collection/{collection_id}.{content_type}":
    delete:
      description: This method cancels collection analysis by unique ID on Semantria side if it is waiting for analysis in queue.
      operationId: cancelCollection
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Collection ID
          in: path
          name: collection_id
          required: true
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Document canceled from processing on the server.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "404":
          description: No collections with provided ID found on server.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Cancel collection analysis
      tags:
        - ProcessingCollections
    get:
      description: This method retrieves analysis results for documents collection by its unique ID or the collection’s status in queue if it did not analyzed yet. Semantria guarantees delivering of all collections back to the client even if they FAILED on Semantria side due to some reason.
      operationId: receiveCollectionAnalyticData
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Collection ID
          in: path
          name: collection_id
          required: true
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Server responds with processed document or its status.
          schema:
            $ref: "#/definitions/CollectionAnalyticData"
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "404":
          description: No collections with provided ID found on server.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve collection analysis or its status in queue
      tags:
        - ProcessingCollections
  "/configurations.{content_type}":
    delete:
      description: This method removes certain configuration by unique ID on Semantria side.
      operationId: deleteConfigurations
      parameters:
        - description: List of configuration identifiers.
          in: body
          name: Configuration IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove user configurations
      tags:
        - Configuration
    get:
      description: This method retrieves all user configurations available on Semantria side.
      operationId: getConfigurations
      parameters:
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Server responds with status object.
          schema:
            items:
              $ref: "#/definitions/Configuration_ResponseVersion"
            type: array
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve user configurations
      tags:
        - Configuration
    post:
      description: This method creates configurations on Semantria side.
      operationId: addConfigurations
      parameters:
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Configurations
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Configuration_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed configurations for user subscription is reached.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Create user configurations
      tags:
        - Configuration
    put:
      description: This method updates specific configurations by unique IDs on Semantria side.
      operationId: updateConfigurations
      parameters:
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Configurations
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Configuration_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed configurations for user subscription is reached.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Update user configurations
      tags:
        - Configuration
  "/document.{content_type}":
    post:
      description: This method queues document onto the server for analysis. Queued document analyzes individually and will have its own set of results. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Document IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing document with the new Data.
      operationId: queueDocument
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Parametrized JSON or XML object.
          in: body
          name: Document
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
          schema:
            $ref: "#/definitions/Document"
        "202":
          description: Client request accepted and queued for processing.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "413":
          description: Characters limit for the document exceeded.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Queue document for analysis
      tags:
        - ProcessingDocuments
  "/document/batch.{content_type}":
    post:
      description: This method queues batch of documents for analysis. The rules are the same as for single document mode but here the documents ordered into the batch.
      operationId: queueBatchOfDocuments
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Batch of Documents
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
          schema:
            $ref: "#/definitions/Document"
        "202":
          description: Client request accepted and queued for processing.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Request is forbidden for selected processing mode.
        "406":
          description: Documents limit per batch is achieved.
        "413":
          description: Characters limit for the document exceeded.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Queue batch of documents for analysis
      tags:
        - ProcessingDocuments
  "/document/processed.{content_type}":
    get:
      description: This method retrieves analysis results for processed documents from Semantria. FAILED documents will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the document, which were queued using the same configuration ID, in opposite Primary.
      operationId: retrieveProcessedDocuments
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with processed documents.
          schema:
            $ref: "#/definitions/DocumentAnalyticData"
        "202":
          description: Client request accepted, no processed documents found on the server.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve documents analysis
      tags:
        - ProcessingDocuments
  "/document/{document_id}.{content_type}":
    delete:
      description: This method cancels document analysis by unique ID on Semantria side if it is waiting for analysis in queue.
      operationId: cancelDocument
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Document ID
          in: path
          name: document_id
          required: true
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Document canceled from processing on the server.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "404":
          description: No documents with provided ID found on server.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Cancel document analysis
      tags:
        - ProcessingDocuments
    get:
      description: This method retrieves analysis results for the single document by its unique ID or the document’s status in queue if it did not analyzed yet. Semantria guarantees delivering of all documents back to the client even if they FAILED on Semantria side due to some reason.
      operationId: receiveDocumentAnalyticData
      parameters:
        - description: Identifier of configuration used for analysis.
          in: query
          name: config_id
          required: false
          type: string
        - description: Document ID
          in: path
          name: document_id
          required: true
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Server responds with processed document or its status.
          schema:
            $ref: "#/definitions/DocumentAnalyticData"
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "404":
          description: No documents with provided ID found on server.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve document analysis or its status in queue
      tags:
        - ProcessingDocuments
  "/entities.{content_type}":
    delete:
      description: This method removes certain user entities by their names on Semantria side.
      operationId: deleteEntities
      parameters:
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove user entities
      tags:
        - Entities
    get:
      description: This method retrieves list of user entities available on Semantria side.
      operationId: getEntities
      parameters:
        - description: Identifier of configuration user entities linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the entities list.
          schema:
            items:
              $ref: "#/definitions/Entity_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and no entities found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve user entities
      tags:
        - Entities
    post:
      description: This method adds user entities on Semantria side.
      operationId: addEntities
      parameters:
        - description: Identifier of configuration user entities linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: User entities
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Entity_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed entities per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add user entities
      tags:
        - Entities
    put:
      description: This method updates user entities by unique IDs on Semantria side.
      operationId: updateEntities
      parameters:
        - description: Identifier of configuration user entities linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: User entities
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Entity_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed entities per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Update user entities
      tags:
        - Entities
  "/features.{content_type}":
    get:
      description: This method returns list of supported features per languages supported by Semantria API. Let the users know about API capabilities.
      operationId: getFeatures
      parameters:
        - description: Filter features by specified language
          in: query
          name: language
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with subscription details.
          schema:
            items:
              $ref: "#/definitions/Feature"
            type: array
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve supported features
      tags:
        - Features
  "/phrases.{content_type}":
    delete:
      description: This method removes certain sentiment-bearing phrases by their names on Semantria side.
      operationId: deletePhrases
      parameters:
        - description: Identifier of configuration phrases linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of sentiment-bearing phrase identifiers.
          in: body
          name: Sentiment phrase IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove sentiment-bearing phrases
      tags:
        - Phrases
    get:
      description: This method retrieves list of sentiment-bearing phrases available on Semantria side.
      operationId: getPhrases
      parameters:
        - description: Identifier of configuration phrases linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the sentiment-bearing phrases list.
          schema:
            items:
              $ref: "#/definitions/Phrase_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and no sentiment-bearing phrases found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve sentiment-bearing phrases
      tags:
        - Phrases
    post:
      description: This method adds sentiment-bearing phrases on Semantria side.
      operationId: addPhrases
      parameters:
        - description: Identifier of configuration phrases linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Sentiment phrases
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Phrase_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed sentiment-bearing phrases per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add sentiment-bearing phrases
      tags:
        - Phrases
    put:
      description: This method updates sentiment-bearing phrases by unique IDs on Semantria side.
      operationId: updatePhrases
      parameters:
        - description: Identifier of configuration phrases linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Sentiment phrases
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Phrase_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed sentiment-bearing phrases per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Updates sentiment-bearing phrases
      tags:
        - Phrases
  "/queries.{content_type}":
    delete:
      description: This method removes certain queries by their IDs on Semantria side.
      operationId: deleteQueries
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of query identifiers.
          in: body
          name: Query IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove queries
      tags:
        - Queries
    get:
      description: This method retrieves list of queries available on Semantria side.
      operationId: getQueries
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the queries list.
          schema:
            items:
              $ref: "#/definitions/Query_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and no queries found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve queries
      tags:
        - Queries
    post:
      description: This method adds queries on Semantria side.
      operationId: addQueries
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Queries
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Query_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed queries per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add or update queries
      tags:
        - Queries
    put:
      description: This method updates queries by unique IDs on Semantria side.
      operationId: updateQueries
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Queries
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/Query_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed queries per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Update queries
      tags:
        - Queries
  "/statistics.{content_type}":
    get:
      description: This method retrieves overall and per configuration usage statistics for specific timeframe. Statistics ordered per available configurations. Available interval values are current <b>hour</b>, <b>day</b>, <b>week</b>, <b>month</b> and <b>year</b>.
      operationId: getStatistic
      parameters:
        - description: Configuration identifier for usage statistics retrieving.
          in: query
          name: config_id
          required: false
          type: string
        - description: Hour, Day, Week, Month, Year values are supported.
          in: query
          name: interval
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Server responds with statistics details.
          schema:
            $ref: "#/definitions/Statistic"
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve usage statistics
      tags:
        - Statistics
  "/status.{content_type}":
    get:
      description: This method retrieves API status information such as the app version, current API version, supported languages and encodings, the overall service status, etc.
      operationId: getStatus
      parameters:
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted. Server responds with status object.
          schema:
            $ref: "#/definitions/Status"
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve API status
      tags:
        - Status
  "/subscription.{content_type}":
    get:
      description: This method retrieves user's subscription details that consist of the list of allowed features, configured limits and options on Semantria side.
      operationId: getSubscription
      parameters:
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with subscription details.
          schema:
            $ref: "#/definitions/Subscription"
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve subscription details
      tags:
        - Subscription
  "/taxonomy.{content_type}":
    delete:
      description: This method removes certain taxonomy nodes by their IDs on Semantria side.
      operationId: deleteTaxonomy
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of taxonomy node identifiers.
          in: body
          name: Taxonomy node IDs
          required: true
          schema:
            items:
              type: string
            type: array
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "403":
          description: Forbidden. Server responds if client tries to remove primary configuration.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Remove taxonomy nodes
      tags:
        - Taxonomy
    get:
      description: This method retrieves list of taxonomy available on Semantria side.
      operationId: getTaxonomy
      parameters:
        - description: Identifier of configuration taxonomy linked to.
          in: query
          name: config_id
          required: false
          type: string
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: Client request accepted and queued. Server responds with the taxonomy list.
          schema:
            items:
              $ref: "#/definitions/TaxonomyNode_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and no taxonomy found. Server responds with empty body.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Retrieve taxonomy
      tags:
        - Taxonomy
    post:
      description: This method adds taxonomy nodes on Semantria side.
      operationId: addTaxonomy
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Taxonomy
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/TaxonomyNode_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed queries per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Add taxonomy nodes
      tags:
        - Taxonomy
    put:
      description: This method updates taxonomy nodes on Semantria side.
      operationId: updateTaxonomy
      parameters:
        - description: Identifier of configuration queries linked to.
          in: query
          name: config_id
          required: false
          type: string
        - description: List of parametrized JSON or XML objects.
          in: body
          name: Taxonomy
          required: true
          schema:
            $ref: "#/definitions/Request%20class"
        - in: path
          name: content_type
          required: true
          type: string
      responses:
        "200":
          description: No response was specified
          schema:
            items:
              $ref: "#/definitions/TaxonomyNode_ResponseVersion"
            type: array
        "202":
          description: Client request accepted and queued.
        "400":
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          description: Authentication failed.
        "402":
          description: Unauthorized. Limit of system calls is reached or subscription is expired.
        "406":
          description: Number of allowed queries per configuration achieved.
        "500":
          description: Server side issue. Server may respond with the details in response body.
      summary: Update taxonomy nodes
      tags:
        - Taxonomy
definitions:
  Attribute:
    properties:
      count:
        description: The count of occurrences of the attribute across the documents
        minimum: 0
        type: integer
      label:
        description: The text of the attribute
        type: string
      mentions:
        description: Returns genuine forms of attribute mentioned across the documents
        items:
          $ref: "#/definitions/Mention"
        type: array
    required:
      - count
      - label
      - mentions
  AutoCategory:
    properties:
      categories:
        description: List of sub-categories of the current category if applicable
        items:
          $ref: "#/definitions/SubCategory"
        type: array
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with this category
        format: double
        type: number
      strength_score:
        description: Strength of the category matches with the document content
        format: double
        type: number
      title:
        description: The category title, which is its label in the text
        type: string
      type:
        description: Type of category; can be either "node" (root level) or "leaf" (nested) value
        type: string
    required:
      - categories
      - sentiment_polarity
      - sentiment_score
      - strength_score
      - title
      - type
  BlacklistItem_InsertVersion:
    properties:
      name:
        description: Blacklist item name
        type: string
    required:
      - name
  BlacklistItem_ResponseVersion:
    properties:
      id:
        description: Unique blacklist item identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Blacklist item name
        type: string
    required:
      - id
      - modified
      - name
  BlacklistItem_UpdateVersion:
    properties:
      id:
        description: Unique blacklist item identifier
        type: string
      name:
        description: Blacklist item name
        type: string
    required:
      - id
      - name
  Category_InsertVersion:
    properties:
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
    required:
      - name
      - samples
      - weight
  Category_ResponseVersion:
    properties:
      id:
        description: Unique category identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
    required:
      - id
      - modified
      - name
      - samples
      - weight
  Category_UpdateVersion:
    properties:
      id:
        description: Unique category identifier
        type: string
      name:
        description: Category name
        type: string
      samples:
        description: Category samples
        items:
          type: string
        type: array
      weight:
        description: Category weight
        format: float
        type: number
    required:
      - id
      - name
      - samples
      - weight
  Collection:
    properties:
      documents:
        description: List of documents text that need to be analyzed by the service
        items:
          type: string
        type: array
      id:
        description: Up to 32 symbols unique identifier of document assigned and tracked by client
        type: string
      job_id:
        description: Specific marker of incoming job that can be used then for collections retrieving
        type: string
      tag:
        description: Any text of up to 50 characters used like marker
        type: string
    required:
      - documents
      - id
      - job_id
      - tag
  CollectionAnalyticData:
    properties:
      config_id:
        description: Unique configuration identifier. Usually 36 alphanumeric characters
        type: string
      entities:
        description: Returns the named entities and user defined entities from the text
        items:
          $ref: "#/definitions/Entity"
        type: array
      facets:
        description: Returns the facets extracted across all documents in the collection
        items:
          $ref: "#/definitions/Facet"
        type: array
      id:
        description: Unique collection identifier. Can be up to 36 alphanumeric characters
        type: string
      job_id:
        description: Specific marker of a job collection belongs to, can be used for collections ordering on client side.
        type: string
      status:
        description: Status of the collection
        enum:
          - queued
          - processed
          - failed
        type: string
      tag:
        description: Any text of up to 50 characters used like marker
        type: string
      taxonomy:
        description: Returns the taxonomy determined for the text
        items:
          $ref: "#/definitions/Topic"
        type: array
      themes:
        description: Returns themes across the documents
        items:
          $ref: "#/definitions/Theme"
        type: array
      topics:
        description: Returns the concept and query defined topics determined for the text
        items:
          $ref: "#/definitions/Topic"
        type: array
    required:
      - config_id
      - entities
      - facets
      - id
      - job_id
      - status
      - tag
      - taxonomy
      - themes
      - topics
  ConfigurationCollectionSection:
    properties:
      attribute_mentions_limit:
        description: "Limits the number of mentions of attribute responded from the server. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      concept_topics_limit:
        description: "Limits the number of concept topics responded from the service. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      facet_atts_limit:
        description: "Limits the number of facets which will be responded from the server. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      facet_mentions_limit:
        description: "Limits the number of mentions of facet responded from the server. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      facets_limit:
        description: "Limits the number of facets which will be responded from the server.  Default: 15"
        maximum: 20
        minimum: 0
        type: integer
      named_entities_limit:
        description: "Limits the number of named entities responded from the service. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      named_mentions_limit:
        description: "Limits the number of mentions of theme responded from the server. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      query_topics_limit:
        description: "Limits the number of query topics responded from the service. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      theme_mentions_limit:
        description: "Limits the number of entity mentions responded from the server. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      themes_limit:
        description: "Limits the number of themes responded from the service. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      user_entities_limit:
        description: "Limits the number of user entities the service responds. Default: 15"
        maximum: 20
        minimum: 0
        type: integer
      user_mentions_limit:
        description: "Limits the number of user entity mentions the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
    required:
      - attribute_mentions_limit
      - concept_topics_limit
      - facet_atts_limit
      - facet_mentions_limit
      - facets_limit
      - named_entities_limit
      - named_mentions_limit
      - query_topics_limit
      - theme_mentions_limit
      - themes_limit
      - user_entities_limit
      - user_mentions_limit
  ConfigurationDocumentSection:
    properties:
      auto_categories_limit:
        description: "Limits the number of auto categories the service responds. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      concept_topics_limit:
        description: "Limits the number of concept topics the service responds. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      detect_language:
        description: "Switches on language detection feature. Default: true"
        type: boolean
      entity_themes_limit:
        description: "Limits the number of entity themes the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      intentions:
        description: "Switches on intentions detection feature. Default: false"
        type: boolean
      model_sentiment:
        description: "Switches on/off model-based sentiment feature. Default: false"
        type: boolean
      named_entities_limit:
        description: "Limits the number of named entities the service responds. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      named_mentions_limit:
        description: "Limits the number of named entity related mentions. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      named_opinions_limit:
        description: "Limits the number of named entity opinions the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      named_relations_limit:
        description: "Limits the number of named entity relations the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      phrases_limit:
        description: "Limits the number of responded sentiment-bearing phrases for document. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      pos_types:
        description: Defines parts-of-speech which will be responded by the server
        enum:
          - All
          - Noun
          - Verb
          - Adjective
          - Determiner
          - Misc
          - Twitter
          - Chinese
        type: string
      possible_phrases_limit:
        description: "Limits the number of responded possible phrases which may affect on sentiment score extraction. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      query_topics_limit:
        description: "Limits the number of query topics the service responds. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      summary_limit:
        description: "Limits the number of sentences for the document summary feature. Default: 3"
        maximum: 20
        minimum: 0
        type: integer
      theme_mentions_limit:
        description: "Limits the number of document and entity related theme mentions. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      themes_limit:
        description: "Limits the number of document themes the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      user_entities_limit:
        description: "Limits the number of user entities the service responds. Default: 5"
        maximum: 20
        minimum: 0
        type: integer
      user_mentions_limit:
        description: "Limits the number of user entity related mentions. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      user_opinions_limit:
        description: "Limits the number of concept topics the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
      user_relations_limit:
        description: "Limits the number of user entity relations the service responds. Default: 0"
        maximum: 20
        minimum: 0
        type: integer
    required:
      - auto_categories_limit
      - concept_topics_limit
      - detect_language
      - entity_themes_limit
      - intentions
      - model_sentiment
      - named_entities_limit
      - named_mentions_limit
      - named_opinions_limit
      - named_relations_limit
      - phrases_limit
      - pos_types
      - possible_phrases_limit
      - query_topics_limit
      - summary_limit
      - theme_mentions_limit
      - themes_limit
      - user_entities_limit
      - user_mentions_limit
      - user_opinions_limit
      - user_relations_limit
  Configuration_InsertVersion:
    properties:
      auto_response:
        description: "Defines whether or not the service should respond with processed results automatically. Default: false"
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      categories_threshold:
        description: "Defines low threshold for strength score of user categories to be reported in the output. Default: 0.45"
        format: double
        type: number
      chars_threshold:
        description: "Defines the threshold for alphanumeric characters in the text in percent. Default: 80"
        maximum: 100
        minimum: 0
        type: integer
      collection:
        $ref: "#/definitions/ConfigurationCollectionSection"
        description: Includes options related to collection processing mode
      document:
        $ref: "#/definitions/ConfigurationDocumentSection"
        description: Includes options related to document processing mode
      entities_threshold:
        description: Defines low threshold for evidence score of named and user entities to be reported in the output.
        type: integer
      is_primary:
        description: "Identifies whether the current configuration is primary or not. Default: false"
        type: boolean
      language:
        description: "Defines target language that will be used for task processing. Default: English"
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence:
        description: "Leads the service to consider the entire document as single sentence. Default: false"
        type: boolean
      process_html:
        description: "Leads the service to clean HTML tags before processing. Default: false"
        type: boolean
    required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - document
      - entities_threshold
      - is_primary
      - language
      - name
      - one_sentence
      - process_html
  Configuration_ResponseVersion:
    properties:
      auto_response:
        description: "Defines whether or not the service should respond with processed results automatically. Default: false"
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      categories_threshold:
        description: "Defines low threshold for strength score of user categories to be reported in the output. Default: 0.45"
        format: double
        type: number
      chars_threshold:
        description: "Defines the threshold for alphanumeric characters in the text in percent. Default: 80"
        maximum: 100
        minimum: 0
        type: integer
      collection:
        $ref: "#/definitions/ConfigurationCollectionSection"
        description: Includes options related to collection processing mode
      config_id:
        description: Unique configuration identifier
        type: string
      document:
        $ref: "#/definitions/ConfigurationDocumentSection"
        description: Includes options related to document processing mode
      entities_threshold:
        description: "Defines low threshold for evidence score of named and user entities to be reported in the output. Default: 55"
        type: integer
      from_template_config_id:
        description: Unique identifier of configuration (template) the current configuration has been clonned from
        type: string
      is_primary:
        description: "Identifies whether the current configuration is primary or not. Default: false"
        type: boolean
      language:
        description: "Defines target language that will be used for task processing. Default: English"
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence:
        description: "Leads the service to consider the entire document as single sentence. Default: false"
        type: boolean
      process_html:
        description: "Leads the service to clean HTML tags before processing. Default: false"
        type: boolean
      version:
        description: Version of the vertical pack, for versioning purposes
        type: string
    required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - config_id
      - document
      - entities_threshold
      - from_template_config_id
      - is_primary
      - language
      - modified
      - name
      - one_sentence
      - process_html
      - version
  Configuration_UpdateVersion:
    properties:
      auto_response:
        description: "Defines whether or not the service should respond with processed results automatically. Default: false"
        type: boolean
      callback:
        description: Defines a callback URL for automatic data responding
        type: string
      categories_threshold:
        description: "Defines low threshold for strength score of user categories to be reported in the output. Default: 0.45"
        format: double
        type: number
      chars_threshold:
        description: "Defines the threshold for alphanumeric characters in the text in percent. Default: 80"
        maximum: 100
        minimum: 0
        type: integer
      collection:
        $ref: "#/definitions/ConfigurationCollectionSection"
        description: Includes options related to collection processing mode
      config_id:
        description: Unique configuration identifier
        type: string
      document:
        $ref: "#/definitions/ConfigurationDocumentSection"
        description: Includes options related to document processing mode
      entities_threshold:
        description: "Defines low threshold for evidence score of named and user entities to be reported in the output. Default: 55"
        type: integer
      is_primary:
        description: "Identifies whether the current configuration is primary or not. Default: false"
        type: boolean
      language:
        description: "Defines target language that will be used for task processing. Default: English"
        type: string
      name:
        description: Configuration name
        type: string
      one_sentence:
        description: "Leads the service to consider the entire document as single sentence. Default: false"
        type: boolean
      process_html:
        description: "Leads the service to clean HTML tags before processing. Default: false"
        type: boolean
    required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - config_id
      - document
      - entities_threshold
      - is_primary
      - language
      - name
      - one_sentence
      - process_html
  Details:
    properties:
      is_imperative:
        description: Represents whether sentence (group of words) is imperative or not
        type: boolean
      is_polar:
        description: Represents whether or not sentence content contains sentiment polarity
        type: boolean
      words:
        description: Returns list of words grouped by the parent sentence
        items:
          $ref: "#/definitions/Word"
        type: array
    required:
      - is_imperative
      - is_polar
      - words
  Document:
    properties:
      id:
        description: Up to 32 symbols unique identifier of document assigned and tracked by client.
        type: string
      job_id:
        description: Specific marker of incoming job that can be used then for documents retrieving
        type: string
      tag:
        description: Any text of up to 50 characters used like marker.
        type: string
      text:
        description: Document text that needs to be analyzed by the service.
        type: string
    required:
      - id
      - job_id
      - tag
      - text
  DocumentAnalyticData:
    properties:
      auto_categories:
        description: Auto-generated categories applicable for the document
        items:
          $ref: "#/definitions/AutoCategory"
        type: array
      config_id:
        description: Unique configuration identifier. Usually 36 alphanumeric characters
        type: string
      details:
        description: Returns sentences from the original document with POS tags within
        items:
          $ref: "#/definitions/Details"
        type: array
      entities:
        description: Returns the named entities and user defined entities from the text
        items:
          $ref: "#/definitions/Entity"
        type: array
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      intentions:
        description: Returns intentions list detected by the engine
        items:
          $ref: "#/definitions/Intention"
        type: array
      job_id:
        description: Specific marker of a job document belongs to, can be used for documents ordering on client side
        type: string
      language:
        description: Determined language of source text
        type: string
      language_score:
        description: The percentage score of the best match of language among detected languages
        format: double
        type: number
      model_sentiment:
        $ref: "#/definitions/ModelSentiment"
        description: Returns details of model-based sentiment analysis for the document
      opinions:
        description: Returns the list of opinions extracted from the source text
        items:
          $ref: "#/definitions/Opinion"
        type: array
      phrases:
        description: Returns sentiment-bearing phrases of the document
        items:
          $ref: "#/definitions/Phrase"
        type: array
      relations:
        description: Returns relations which represent a connection between one or more Entity objects
        items:
          $ref: "#/definitions/Relation"
        type: array
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: A sentiment analysis of the document text
        format: double
        type: number
      source_text:
        description: Original source text passed by client for this document
        type: string
      status:
        description: Status of the document
        enum:
          - queued
          - processed
          - failed
        type: string
      summary:
        description: A summary of the document text
        type: string
      taxonomy:
        description: Returns the taxonomy determined for the text
        items:
          $ref: "#/definitions/Topic"
        type: array
      themes:
        description: Returns themes of the document
        items:
          $ref: "#/definitions/Theme"
        type: array
      topics:
        description: Returns the concept and query defined topics determined for the text
        items:
          $ref: "#/definitions/Topic"
        type: array
    required:
      - auto_categories
      - config_id
      - details
      - entities
      - id
      - intentions
      - job_id
      - language
      - language_score
      - model_sentiment
      - opinions
      - phrases
      - relations
      - sentiment_polarity
      - sentiment_score
      - source_text
      - status
      - summary
      - taxonomy
      - themes
      - topics
  Entity:
    properties:
      count:
        description: The count of occurrences of the entity across the documents
        minimum: 0
        type: integer
      entity_type:
        description: Type of the entity (Company, Person, Place, Product, etc.)
        type: string
      label:
        description: Descriptive label for the entity, if applicable
        type: string
      mentions:
        description: Returns the genuine forms of entity mentioned across the documents
        items:
          $ref: "#/definitions/Mention"
        type: array
      negative_count:
        description: The count of negative occurrences of the entity across the documents
        minimum: 0
        type: integer
      neutral_count:
        description: The count of neutral occurrences of the entity across the documents
        minimum: 0
        type: integer
      positive_count:
        description: The count of positive occurrences of the entity across the documents
        minimum: 0
        type: integer
      title:
        description: Normalized form of the entity. It is the normalized entity title
        type: string
      type:
        description: Type of the entity; can be either “named” or “user” (reserved for future usage)
        enum:
          - named
          - user
        type: string
    required:
      - count
      - entity_type
      - label
      - mentions
      - negative_count
      - neutral_count
      - positive_count
      - title
      - type
  Entity_InsertVersion:
    properties:
      label:
        description: Descriptive label for the entity, e.g. Wikipedia URL
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: Type of the entity (Company, Person, any custom type)
        type: string
    required:
      - label
      - name
      - normalized
      - type
  Entity_ResponseVersion:
    properties:
      id:
        description: Unique user entity identifier
        type: string
      label:
        description: Descriptive label for the entity, e.g. Wikipedia URL
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: Type of the entity (Company, Person, any custom type)
        type: string
    required:
      - id
      - label
      - modified
      - name
      - normalized
      - type
  Entity_UpdateVersion:
    properties:
      id:
        description: Unique user entity identifier
        type: string
      label:
        description: Descriptive label for the entity, e.g. Wikipedia URL
        type: string
      name:
        description: Entity name
        type: string
      normalized:
        description: Normalized form of the entity. Will replace entity name in the output
        type: string
      type:
        description: Type of the entity (Company, Person, any custom type)
        type: string
    required:
      - id
      - label
      - name
      - normalized
      - type
  Facet:
    properties:
      attributes:
        description: Returns the attributes associated with this facet
        items:
          $ref: "#/definitions/Attribute"
        type: array
      count:
        description: The count of occurrences of the facet in the text
        minimum: 0
        type: integer
      label:
        description: The text of the facet
        type: string
      mentions:
        description: Returns genuine forms of facet mentioned across the documents
        items:
          $ref: "#/definitions/Mention"
        type: array
      negative_count:
        description: The count of negative occurrences of the facet across the documents
        minimum: 0
        type: integer
      neutral_count:
        description: The count of neutral occurrences of the facet across the documents
        minimum: 0
        type: integer
      positive_count:
        description: The count of positive occurrences of the facet across the documents
        minimum: 0
        type: integer
    required:
      - attributes
      - count
      - label
      - mentions
      - negative_count
      - neutral_count
      - positive_count
  Feature:
    properties:
      detailed_mode:
        $ref: "#/definitions/FeatureDetailedModeSection"
        description: Includes detailed mode output for certain language
      discovery_mode:
        $ref: "#/definitions/FeatureDiscoveryModeSection"
        description: Includes discovery mode output for certain language
      html_processing:
        description: Represents whether HTML processing supported for certain language or not
        type: boolean
      id:
        description: Unique language identifier
        type: string
      language:
        description: Represents language following options relevant to
        type: string
      one_sentence_mode:
        description: Considers entire text as one sentence and uses optimized chunker for short content like tweets.
        type: boolean
      settings:
        $ref: "#/definitions/FeatureSettingsSection"
        description: Includes analysis adjustment options for certain language
      templates:
        $ref: "#/definitions/FeatureTemplateSection"
        description: Includes all existing templates
    required:
      - detailed_mode
      - discovery_mode
      - html_processing
      - id
      - language
      - one_sentence_mode
      - settings
      - templates
  FeatureDetailedModeSection:
    properties:
      auto_categories:
        description: Represents whether auto-categories of entities supported for certain language or not
        type: boolean
      entity_mentions:
        description: Represents whether mentions of entities supported for certain language or not
        type: boolean
      entity_opinions:
        description: Represents whether opinions of entities supported for certain language or not
        type: boolean
      entity_relations:
        description: Represents whether relations of entities supported for certain language or not
        type: boolean
      entity_themes:
        description: Represents whether themes of entities supported for certain language or not
        type: boolean
      intentions:
        description: Represents whether intentions detection supported for certain language or not
        type: boolean
      language_detection:
        description: Represents whether language detection feature supported or not
        type: boolean
      model_sentiment:
        description: Represents whether model-based sentiment supported for certain language or not
        type: boolean
      named_entities:
        description: Represents whether named entities extraction supported for certain language or not
        type: boolean
      pos_tagging:
        description: Represents whether POS tagging supported for certain language or not
        type: boolean
      queries:
        description: Represents whether queries of entities supported for certain language or not
        type: boolean
      sentiment:
        description: Represents whether sentiment detection supported for certain language or not
        type: boolean
      sentiment_phrases:
        description: Represents whether sentiment phrases detection supported for certain language or not
        type: boolean
      summarization:
        description: Represents whether summarization supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      theme_mentions:
        description: Represents whether mentions of themes supported for certain language or not
        type: boolean
      themes:
        description: Represents whether themes extraction supported for certain language or not
        type: boolean
      user_categories:
        description: Represents whether user categories of entities supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities extraction supported for certain language or not
        type: boolean
    required:
      - auto_categories
      - entity_mentions
      - entity_opinions
      - entity_relations
      - entity_themes
      - intentions
      - language_detection
      - model_sentiment
      - named_entities
      - pos_tagging
      - queries
      - sentiment
      - sentiment_phrases
      - summarization
      - taxonomy
      - theme_mentions
      - themes
      - user_categories
      - user_entities
  FeatureDiscoveryModeSection:
    properties:
      entity_mentions:
        description: Represents whether mentions of entities supported for certain language or not
        type: boolean
      facet_attributes:
        description: Represents whether attributes of facets supported for certain language or not
        type: boolean
      facet_mentioins:
        description: Represents whether mentions of facets supported for certain language or not
        type: boolean
      facets:
        description: Represents whether facets detection supported for certain language or not
        type: boolean
      named_entities:
        description: Represents whether named entities extraction supported for certain language or not
        type: boolean
      queries:
        description: Represents whether queries extraction supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      theme_mentions:
        description: Represents whether mentions of themes supported for certain language or not
        type: boolean
      themes:
        description: Represents whether themes extraction supported for certain language or not
        type: boolean
      user_categories:
        description: Represents whether user categories extraction supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities extraction supported for certain language or not
        type: boolean
    required:
      - entity_mentions
      - facet_attributes
      - facet_mentioins
      - facets
      - named_entities
      - queries
      - taxonomy
      - theme_mentions
      - themes
      - user_categories
      - user_entities
  FeatureSettingsSection:
    properties:
      blacklist:
        description: Represents whether blacklist feature supported for certain language or not
        type: boolean
      queries:
        description: Represents whether queries definition supported for certain language or not
        type: boolean
      sentiment_phrases:
        description: Represents whether sentiment-bearing phrases adjustmment supported for certain language or not
        type: boolean
      taxonomy:
        description: Represents whether taxonomy feature supported for certain language or not
        type: boolean
      user_categories:
        description: Represents whether user categories definition supported for certain language or not
        type: boolean
      user_entities:
        description: Represents whether user entities definition supported for certain language or not
        type: boolean
    required:
      - blacklist
      - queries
      - sentiment_phrases
      - taxonomy
      - user_categories
      - user_entities
  FeatureTemplateSection:
    properties:
      config_id:
        description: Unique identifier of configuration associated with the vertical pack. Required for cloning
        type: string
      description:
        description: Verbal description of template features, belonging to domain area, etc.
        type: string
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      is_free:
        description: Shows whether Vertical pack is free or requires subscription
        type: boolean
      language:
        description: The language supported by the vertical pack
        type: string
      name:
        description: Name of the vertical pack
        type: string
      type:
        description: The type of the vertical pack, can be either "vertical-pack" or "language-default"
        enum:
          - language-default
          - vertical-pack
        type: string
      version:
        description: Version of the vertical pack, for versioning purposes.
        type: string
    required:
      - config_id
      - description
      - id
      - is_free
      - language
      - name
      - type
      - version
  Intention:
    properties:
      evidence_phrase:
        description: The phrase which expressed the intention
        type: string
      type:
        description: The classification of the intention detected (buy, quit, etc.)
        type: string
      what:
        description: The object of the intention (if detected)
        type: string
      who:
        description: The author of the intention (if detected)
        type: string
    required:
      - evidence_phrase
      - type
      - what
      - who
  JSON: {}
  Location:
    properties:
      index:
        description: Document index within collection where the mention appeared
        type: integer
      length:
        description: The length of the mention in bytes
        type: integer
      offset:
        description: The amount of bytes offset in the original text before the start of the mention
        type: integer
    required:
      - index
      - length
      - offset
  Mention:
    properties:
      is_negated:
        description: Indicates whether or not the mention has been negated
        type: boolean
      label:
        description: The text of the attribute mention
        type: string
      locations:
        description: List of coordinates of the mentions found within the collection
        items:
          $ref: "#/definitions/Location"
        type: array
      negating_phrase:
        description: If the mention has been negated, this gives the negating phrase
        type: string
    required:
      - is_negated
      - label
      - locations
      - negating_phrase
  ModelSentiment:
    properties:
      mixed_score:
        description: Mixed sentiment score associated with the document
        format: double
        type: number
      model_name:
        description: Name of the sentiment model used for scoring
        type: string
      negative_score:
        description: Negative (probable negative score) sentiment score associated with the document
        format: double
        type: number
      neutral_score:
        description: Neutral (probable neutral score) sentiment score associated with the document
        format: double
        type: number
      positive_score:
        description: Positive (probable positive score) sentiment score associated with the document
        format: double
        type: number
      sentiment_polarity:
        description: Verbal representation of sentiment score that matches the best on the document. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
    required:
      - mixed_score
      - model_name
      - negative_score
      - neutral_score
      - positive_score
      - sentiment_polarity
  Opinion:
    properties:
      quotation:
        description: The text of the expressed opinion
        type: string
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with the opinion
        format: double
        type: number
      speaker:
        description: An entity title identifying the author of the opinion
        format: float
        type: number
      topic:
        description: An entity title identifying the subject of the opinion, if applicable
        type: string
      type:
        description: Type of opinion according to extracted entity
        enum:
          - named
          - user
        type: string
    required:
      - quotation
      - sentiment_polarity
      - sentiment_score
      - speaker
      - topic
      - type
  Phrase:
    properties:
      intensifying_phrase:
        description: If the phrase has been intensified, this gives the intensifying phrase
        type: string
      is_intensified:
        description: Specifies whether the phrase has been intensified or not
        type: boolean
      is_negated:
        description: Specifies whether the phrase has been negated or not
        type: boolean
      negating_phrase:
        description: If the phrase has been negated, this gives the negating phrase
        type: string
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score associated with this phrase
        format: double
        type: number
      title:
        description: The text of the sentiment-bearing phrase
        type: string
      type:
        description: Type of phrase; can be either "possible" or "detected" value
        type: string
    required:
      - intensifying_phrase
      - is_intensified
      - is_negated
      - negating_phrase
      - sentiment_polarity
      - sentiment_score
      - title
      - type
  Phrase_InsertVersion:
    properties:
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
    required:
      - name
      - weight
  Phrase_ResponseVersion:
    properties:
      id:
        description: Unique sentiment-bearing phrase identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
    required:
      - id
      - modified
      - name
      - weight
  Phrase_UpdateVersion:
    properties:
      id:
        description: Unique sentiment-bearing phrase identifier
        type: string
      name:
        description: Sentiment-bearing phrase name
        type: string
      weight:
        description: Sentiment-bearing phrase weight
        format: float
        type: number
    required:
      - id
      - name
      - weight
  Query_InsertVersion:
    properties:
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
    required:
      - name
      - query
  Query_ResponseVersion:
    properties:
      id:
        description: Unique query identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
    required:
      - id
      - modified
      - name
      - query
  Query_UpdateVersion:
    properties:
      id:
        description: Unique query identifier
        type: string
      name:
        description: Query name
        type: string
      query:
        description: Boolean query used for content categorization
        type: string
    required:
      - id
      - name
      - query
  Relation:
    properties:
      confidence_score:
        description: A measure of confidence in the relationship extraction
        format: float
        type: number
      entities:
        description: Returns entities which presents parent relationship
        items:
          $ref: "#/definitions/RelationEntity"
        type: array
      extra:
        description: Extra information that has been extracted about the relationship
        type: string
      relation_type:
        description: A label describing the nature of the relationship
        type: string
      type:
        description: Type of relation according to extracted entities
        enum:
          - named
          - user
        type: string
    required:
      - confidence_score
      - entities
      - extra
      - relation_type
      - type
  RelationEntity:
    properties:
      entity_type:
        description: Type of the entity (Company, Person, Place, Product, etc.)
        type: string
      title:
        description: Normalized entity title based on existing entity normalization rules
        type: string
    required:
      - entity_type
      - title
  Request class: {}
  Request_class: {}
  Statistic:
    properties:
      calls_data:
        description: Total number of data API calls made. These affect you API balance
        minimum: 0
        type: integer
      calls_polling:
        description: Total number of polling API calls made. These do not affect API balance
        minimum: 0
        type: integer
      calls_settings:
        description: Total number of settings API calls made. These do not affect API balance
        minimum: 0
        type: integer
      colls_documents:
        description: Total number of documents that have been queued into collections
        minimum: 0
        type: integer
      colls_failed:
        description: Total number of collections that have failed to be processed
        minimum: 0
        type: integer
      colls_processed:
        description: Total numbers of collections that have been successfully processed
        minimum: 0
        type: integer
      colls_responded:
        description: Total number of successfully processed collections that have been returned
        minimum: 0
        type: integer
      configurations:
        description: Includes statistics per specific configuration
        items:
          $ref: "#/definitions/StatisticConfiguration"
        type: array
      docs_failed:
        description: Total number of documents that have failed to be processed
        minimum: 0
        type: integer
      docs_processed:
        description: Total number of documents that have been successfully processed
        minimum: 0
        type: integer
      docs_responded:
        description: Total number of successfully processed documents that have been returned
        minimum: 0
        type: integer
      latest_used_app:
        description: The latest application that used the API on this account
        type: string
      name:
        description: Semantria subscriber name. Usually email
        type: string
      overall_batches:
        description: Total number of queued batches of texts processed
        minimum: 0
        type: integer
      overall_calls:
        description: Total number of API calls made
        minimum: 0
        type: integer
      overall_docs:
        description: Total number of documents that have been queued
        minimum: 0
        type: integer
      overall_exceeded:
        description: Total number of documents that have exceeded the favorable (suggested) limit
        minimum: 0
        type: integer
      overall_texts:
        description: Total number of texts processed
        minimum: 0
        type: integer
      overcall_colls:
        description: Total numbers of collections that have been queued
        minimum: 0
        type: integer
      status:
        description: Semantria subscriber status. Can be active, expired, disabled, etc
        type: string
      used_apps:
        description: A list of all the applications that have used the API on this account
        type: string
    required:
      - calls_data
      - calls_polling
      - calls_settings
      - colls_documents
      - colls_failed
      - colls_processed
      - colls_responded
      - configurations
      - docs_failed
      - docs_processed
      - docs_responded
      - latest_used_app
      - name
      - overall_batches
      - overall_calls
      - overall_docs
      - overall_exceeded
      - overall_texts
      - overcall_colls
      - status
      - used_apps
  StatisticConfiguration:
    properties:
      calls_data:
        description: Total number of data API calls made. These affect you API balance
        minimum: 0
        type: integer
      calls_polling:
        description: Total number of polling API calls made. These do not affect API balance
        minimum: 0
        type: integer
      calls_settings:
        description: Total number of settings API calls made. These do not affect API balance
        minimum: 0
        type: integer
      colls_failed:
        description: Total number of collections that have failed to be processed
        minimum: 0
        type: integer
      colls_processed:
        description: Total numbers of collections that have been successfully processed
        minimum: 0
        type: integer
      colls_responded:
        description: Total number of successfully processed collections that have been returned
        minimum: 0
        type: integer
      config_id:
        description: Unique identifier of configuration
        type: string
      docs_failed:
        description: Total number of documents that have failed to be processed
        minimum: 0
        type: integer
      docs_processed:
        description: Total number of documents that have been successfully processed
        minimum: 0
        type: integer
      docs_responded:
        description: Total number of successfully processed documents that have been returned
        minimum: 0
        type: integer
      latest_used_app:
        description: The latest application that used the API on this account
        type: string
      name:
        description: The name of configuration
        type: string
      overall_batches:
        description: Total number of queued batches of texts processed
        minimum: 0
        type: integer
      overall_calls:
        description: Total number of API calls made
        minimum: 0
        type: integer
      overall_docs:
        description: Total number of documents that have been queued
        minimum: 0
        type: integer
      overall_exceeded:
        description: Total number of documents that have exceeded the favorable (suggested) limit
        minimum: 0
        type: integer
      overall_texts:
        description: Total number of texts processed
        minimum: 0
        type: integer
      overcall_colls:
        description: Total numbers of collections that have been queued
        minimum: 0
        type: integer
      used_apps:
        description: A list of all the applications that have used the API on this account
        type: string
    required:
      - calls_data
      - calls_polling
      - calls_settings
      - colls_failed
      - colls_processed
      - colls_responded
      - config_id
      - docs_failed
      - docs_processed
      - docs_responded
      - latest_used_app
      - name
      - overall_batches
      - overall_calls
      - overall_docs
      - overall_exceeded
      - overall_texts
      - overcall_colls
      - used_apps
  Status:
    properties:
      api_version:
        description: Represents current version of the exposed API
        type: string
      service_status:
        description: Represents the availability of the service
        enum:
          - available
          - pending
          - sold
        type: string
      service_version:
        description: Represents current version of the Semantria service
        type: string
      supported_compression:
        description: Exposes supported compression algorithms. Currently only gzip and deflate are supported
        type: string
      supported_encoding:
        description: Exposes supported content encoding. Currently only UTF-8 is supported
        type: string
      supported_languages:
        description: Exposes list of supported languages
        items:
          type: string
        type: array
    required:
      - api_version
      - service_status
      - service_version
      - supported_compression
      - supported_encoding
      - supported_languages
  SubCategory:
    properties:
      strength_score:
        description: Strength of the category matches with the document content
        format: double
        type: number
      title:
        description: The category title, which is its label in the text
        type: string
      type:
        description: Type of category; can be either "node" (root level) or "leaf" (nested) value
        type: string
    required:
      - strength_score
      - title
      - type
  Subscription:
    properties:
      basic_settings:
        $ref: "#/definitions/SubscriptionBasicSection"
        description: Includes basic settings of current subscription
      billing_settings:
        $ref: "#/definitions/SubscriptionBillingSection"
        description: Billing related settings of current subscription
      feature_settings:
        $ref: "#/definitions/SubscriptionFeatureSection"
        description: Includes features related settings of current subscription
      name:
        description: Semantria subscriber name. Usually email
        type: string
      status:
        description: Semantria subscriber status. Can be active, expired, disabled, etc
        type: string
    required:
      - basic_settings
      - billing_settings
      - feature_settings
      - name
      - status
  SubscriptionBasicSection:
    properties:
      auto_response_limit:
        description: Represents the maximum size of outgoing batch for auto-response feature
        minimum: 0
        type: integer
      batch_limit:
        description: Represents the maximum size of the incoming batch in documents
        minimum: 0
        type: integer
      blacklist_limit:
        description: Represents the maximum number of allowed blacklist items
        minimum: 0
        type: integer
      callback_batch_limit:
        description: Represents the maximum size of outgoing batch for callback data retrieving mode
        minimum: 0
        type: integer
      categories_limit:
        description: Represents the maximum number of allowed categories
        minimum: 0
        type: integer
      category_samples_limit:
        description: Represents the maximum number of allowed category samples
        minimum: 0
        type: integer
      characters_limit:
        description: Represents the maximum length of the document allowed for processing
        minimum: 0
        type: integer
      collection_limit:
        description: Represents the maximum size of collection in documents
        minimum: 0
        type: integer
      configurations_limit:
        description: Represents the maximum number of allowed configurations
        minimum: 0
        type: integer
      entities_limit:
        description: Represents the maximum number of allowed entities
        minimum: 0
        type: integer
      output_data_limit:
        description: Represent the maximum number allowed as output limit of configuration
        minimum: 0
        type: integer
      processed_batch_limit:
        description: Represents the maximum size of outgoing batch for pulling data retrieving mode
        minimum: 0
        type: integer
      queries_limit:
        description: Represents the maximum number of allowed queries
        minimum: 0
        type: integer
      return_source_text:
        description: Indicates whether responding of source text along with the analysis data is allowed or not
        type: boolean
      sentiment_limit:
        description: Represents the maximum number of allowed sentiment-bearing phrases
        minimum: 0
        type: integer
    required:
      - auto_response_limit
      - batch_limit
      - blacklist_limit
      - callback_batch_limit
      - categories_limit
      - category_samples_limit
      - characters_limit
      - collection_limit
      - configurations_limit
      - entities_limit
      - output_data_limit
      - processed_batch_limit
      - queries_limit
      - return_source_text
      - sentiment_limit
  SubscriptionBillingSection:
    properties:
      app_seats_allocated:
        description: Number of allocated application cells permitted to work with the API
        minimum: 0
        type: integer
      app_seats_permitted:
        description: Number of permitted application to work with the same API account
        minimum: 0
        type: integer
      data_calls_balance:
        description: Represents actual value of remained data API calls
        minimum: 0
        type: integer
      data_calls_limit:
        description: Represents the limit of data API calls per "data_calls_limit_interval" value
        minimum: 0
        type: integer
      data_calls_limit_interval:
        description: Represents an interval for the "data_calls_limit" value of current subscription
        minimum: 0
        type: integer
      docs_balance:
        description: Current transaction balance. Applicable for pay-as-you-go subscriptions only
        minimum: 0
        type: integer
      docs_limit:
        description: Represents the transactions limit per "docs_limit_interval" value
        minimum: 0
        type: integer
      docs_limit_interval:
        description: Represents the timeframe for the "docs_limit" value of current subscription
        minimum: 0
        type: integer
      docs_suggested:
        description: Represents the amount of favorable documents suggested for throughput subscriptions
        minimum: 0
        type: integer
      docs_suggested_interval:
        description: Represents the timeframe for the “docs_suggested” value of the current subscription
        minimum: 0
        type: integer
      expiration_date:
        description: Expiration date of current subscription. Defined as a Unix time stamp
        type: string
      limit_type:
        description: Subscription type can have either pay-as-you-go or throughput value
        type: string
      polling_calls_balance:
        description: Represents actual value of remained polling API calls
        minimum: 0
        type: integer
      polling_calls_limit:
        description: Represents the limit of polling API calls per "polling_calls_limit_interval" value
        minimum: 0
        type: integer
      polling_calls_limit_interval:
        description: Represents an interval for the "polling_calls_limit" value of current subscription
        minimum: 0
        type: integer
      priority:
        description: Processing priority of current subscriber. Can have low, normal or high value
        type: string
      settings_calls_balance:
        description: Represents actual value of remained settings API calls
        minimum: 0
        type: integer
      settings_calls_limit:
        description: Represents the limit of settings API calls per "settings_calls_limit_interval" value
        minimum: 0
        type: integer
      settings_calls_limit_interval:
        description: Represents an interval for the "settings_calls_limit" value of current subscription
        minimum: 0
        type: integer
    required:
      - app_seats_allocated
      - app_seats_permitted
      - data_calls_balance
      - data_calls_limit
      - data_calls_limit_interval
      - docs_balance
      - docs_limit
      - docs_limit_interval
      - docs_suggested
      - docs_suggested_interval
      - expiration_date
      - limit_type
      - polling_calls_balance
      - polling_calls_limit
      - polling_calls_limit_interval
      - priority
      - settings_calls_balance
      - settings_calls_limit
      - settings_calls_limit_interval
  SubscriptionFeatureSection:
    properties:
      collection:
        $ref: "#/definitions/SubscriptionFeatureSectionCollection"
        description: Includes collection processing mode related settings
      document:
        $ref: "#/definitions/SubscriptionFeatureSectionDocument"
        description: Includes document processing mode related settings
      html_processing:
        description: Identifies whether HTML processing feature is supported or not
        type: boolean
      supported_languages:
        description: Lists all languages which are allowed for current subscription
        type: string
      templates:
        $ref: "#/definitions/SubscriptionFeatureSectionTemplate"
        description: Includes available templates
    required:
      - collection
      - document
      - html_processing
      - supported_languages
      - templates
  SubscriptionFeatureSectionCollection:
    properties:
      concept_topics:
        description: Indicates whether concept topics are allowed or not
        type: boolean
      facets:
        description: Indicates whether facets extraction feature is allowed or not
        type: boolean
      mentions:
        description: Indicates whether mentions are allowed for facets and attributes or not
        type: boolean
      named_entities:
        description: Indicates whether named entities feature is allowed or not
        type: boolean
      query_topics:
        description: Indicates whether query defined topics are allowed or not
        type: boolean
      themes:
        description: Indicates whether themes extraction feature is allowed or not
        type: boolean
      user_entities:
        description: Indicates whether user entities feature is allowed or not
        type: boolean
    required:
      - concept_topics
      - facets
      - mentions
      - named_entities
      - query_topics
      - themes
      - user_entities
  SubscriptionFeatureSectionDocument:
    properties:
      auto_categories:
        description: Indicates whether auto categories feature is allowed or not
        type: boolean
      concept_topics:
        description: Indicates whether concept topics are allowed or not
        type: boolean
      entity_themes:
        description: Indicates whether entity themes feature is allowed or not
        type: boolean
      intentions:
        description: Indicates whether intentions feature is allowed or not.
        type: boolean
      language_detection:
        description: Indicates whether language detection feature is allowed or not
        type: boolean
      mentions:
        description: Indicates whether mentions for entities and themes are allowed or not
        type: boolean
      model_sentiment:
        description: Indicates whether model-based sentiment feature is allowed or not
        type: boolean
      named_entities:
        description: Indicates whether named entities feature is allowed or not
        type: boolean
      named_relations:
        description: Indicates whether relations for named entities are allowed or not
        type: boolean
      opinions:
        description: Indicates whether opinions feature is allowed or not
        type: boolean
      phrases_detection:
        description: Indicates whether possible phrases detection feature is allowed or not
        type: boolean
      pos_tagging:
        description: Indicates whether part of speech tagging feature is allowed or not
        type: boolean
      query_topics:
        description: Indicates whether query defined topics are allowed or not
        type: boolean
      sentiment_phrases:
        description: Indicates whether sentiment-bearing phrases output is allowed or not
        type: boolean
      summary:
        description: Indicates whether summarization feature is allowed or not
        type: boolean
      themes:
        description: Indicates whether document themes feature is allowed or not
        type: boolean
      user_entities:
        description: Indicates whether user entities feature is allowed or not
        type: boolean
      user_relations:
        description: Indicates whether relations for user entities are allowed or not
        type: boolean
    required:
      - auto_categories
      - concept_topics
      - entity_themes
      - intentions
      - language_detection
      - mentions
      - model_sentiment
      - named_entities
      - named_relations
      - opinions
      - phrases_detection
      - pos_tagging
      - query_topics
      - sentiment_phrases
      - summary
      - themes
      - user_entities
      - user_relations
  SubscriptionFeatureSectionTemplate:
    properties:
      config_id:
        description: Unique identifier of configuration associated with the vertical pack. Required for cloning
        type: string
      description:
        description: Verbal description of template features, belonging to domain area, etc.
        type: string
      id:
        description: Unique document identifier. Can be up to 36 alphanumeric characters
        type: string
      is_free:
        description: Shows whether Vertical pack is free or requires subscription
        type: boolean
      language:
        description: The language supported by the vertical pack
        type: string
      name:
        description: Name of the vertical pack
        type: string
      type:
        description: The type of the vertical pack, can be either "vertical-pack" or "language-default"
        enum:
          - language-default
          - vertical-pack
        type: string
      version:
        description: Version of the vertical pack, for versioning purposes.
        type: string
    required:
      - config_id
      - description
      - id
      - is_free
      - language
      - name
      - type
      - version
  TaxonomyNode: {}
  TaxonomyNode_InsertVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyNode"
        type: array
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyTopic"
        type: array
    required:
      - name
  TaxonomyNode_ResponseVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
      id:
        description: Unique taxonomy node identifier
        type: string
      modified:
        description: The timestamp of the latest update of the record. Creation date of update didn't occur
        type: string
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyNode"
        type: array
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyTopic"
        type: array
    required:
      - id
      - modified
      - name
  TaxonomyNode_UpdateVersion:
    properties:
      enforce_parent_matching:
        description: Enforces parent nodes to match on a content if the current node matches
        type: boolean
      id:
        description: Unique taxonomy node identifier
        type: string
      name:
        description: Taxonomy name
        type: string
      nodes:
        description: The list of sub-nodes associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyNode"
        type: array
      topics:
        description: The list of the topics associated with the current taxonomy node
        items:
          $ref: "#/definitions/TaxonomyTopic"
        type: array
    required:
      - id
      - name
  TaxonomyTopic:
    properties:
      id:
        description: Unique taxonomy topic identifier
        type: string
      type:
        description: Type of the topic (category or query) associated with the certain taxonomy node
        type: string
    required:
      - type
  Theme:
    properties:
      mentions:
        description: Returns the concept and query defined topics determined for the text
        items:
          $ref: "#/definitions/Mention"
        type: array
      normalized:
        description: The normalized form of the theme
        type: string
      phrases_count:
        description: Count of sentiment-bearing phrases was used in calculating theme's sentiment
        minimum: 0
        type: integer
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: Sentiment score for theme’s sentences across the documents
        format: double
        type: number
      stemmed:
        description: The stemmed form of the theme
        type: string
      themes_count:
        description: Count of themes across the documents that got rolled into this one
        minimum: 0
        type: integer
      title:
        description: The text of the theme across the documents
        type: string
    required:
      - mentions
      - normalized
      - phrases_count
      - sentiment_polarity
      - sentiment_score
      - stemmed
      - themes_count
      - title
  Topic:
    properties:
      hitcount:
        description: The number of documents within the collection that match the topic
        minimum: 0
        type: integer
      id:
        description: Unique topic identifier
        type: string
      sentiment_polarity:
        description: Verbal representation of sentiment score. Can be "negative", "positive" or "neutral"
        enum:
          - negative
          - positive
          - neutral
        type: string
      sentiment_score:
        description: The sentiment score for documents content associated with the topic
        format: double
        type: number
      title:
        description: The topic title, which is its label in the text
        type: string
      type:
        description: Type of the topic; can be either "concept" or "query"
        enum:
          - concept
          - query
        type: string
    required:
      - hitcount
      - id
      - sentiment_polarity
      - sentiment_score
      - title
      - type
  Word:
    properties:
      is_negated:
        description: A flag indicating if the token is or is part of a sentiment inverting construction
        type: boolean
      sentiment_score:
        description: The sentiment score associated with the word
        format: double
        type: number
      stemmed:
        description: The stemmed form of the word
        type: string
      tag:
        description: POS marker of the word
        type: string
      title:
        description: The original word representation in text
        type: string
      type:
        description: Verbal representation of part of speech in addition to certain tag
        type: string
    required:
      - is_negated
      - sentiment_score
      - stemmed
      - tag
      - title
      - type
