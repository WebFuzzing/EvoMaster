openapi: 3.0.0
info:
  version: '2017-10-14'
  x-release: v4
  title: AWS Elemental MediaLive
  description: API for AWS Elemental MediaLive
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: medialive
  x-aws-signingName: medialive
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/medialive-2017-10-14.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/medialive/'
servers:
  - url: 'http://medialive.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaLive multi-region endpoint
  - url: 'https://medialive.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaLive multi-region endpoint
  - url: 'http://medialive.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaLive endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://medialive.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaLive endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/prod/inputDevices/{inputDeviceId}/accept':
    post:
      operationId: AcceptInputDeviceTransfer
      description: Accept an incoming input device transfer. The ownership of the device will transfer to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInputDeviceTransferResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of the input device to accept. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/batch/delete:
    post:
      operationId: BatchDelete
      description: Starts delete of resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                inputIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                inputSecurityGroupIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                multiplexIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/batch/start:
    post:
      operationId: BatchStart
      description: Starts existing resources
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStartResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                multiplexIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/batch/stop:
    post:
      operationId: BatchStop
      description: Stops running resources
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStopResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                multiplexIds:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/channels/{channelId}/schedule':
    put:
      operationId: BatchUpdateSchedule
      description: Update a channel schedule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateScheduleResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: Id of the channel whose schedule is being updated.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                creates:
                  description: A list of schedule actions to create (in a request) or that have been created (in a response).
                  type: object
                  properties:
                    ScheduleActions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfScheduleAction'
                        - xml:
                            name: scheduleActions
                          description: A list of schedule actions to create.
                deletes:
                  description: A list of schedule actions to delete.
                  type: object
                  properties:
                    ActionNames:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: actionNames
                          description: A list of schedule actions to delete.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSchedule
      description: Delete all schedule actions on a channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: Id of the channel whose schedule is being deleted.
          schema:
            type: string
            description: Placeholder documentation for __string
    get:
      operationId: DescribeSchedule
      description: Get a channel schedule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeScheduleResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: Id of the channel whose schedule is being updated.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/prod/inputDevices/{inputDeviceId}/cancel':
    post:
      operationId: CancelInputDeviceTransfer
      description: Cancel an input device transfer that you have requested.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelInputDeviceTransferResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of the input device to cancel. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/channels:
    post:
      operationId: CreateChannel
      description: Creates a new channel
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cdiInputSpecification:
                  description: Placeholder documentation for CdiInputSpecification
                  type: object
                  properties:
                    Resolution:
                      allOf:
                        - $ref: '#/components/schemas/CdiInputResolution'
                        - xml:
                            name: resolution
                          description: Maximum CDI input resolution
                channelClass:
                  description: A standard channel has two encoding pipelines and a single pipeline channel only has one.
                  type: string
                  enum:
                    - STANDARD
                    - SINGLE_PIPELINE
                destinations:
                  description: Placeholder documentation for __listOfOutputDestination
                  type: array
                  items:
                    $ref: '#/components/schemas/OutputDestination'
                encoderSettings:
                  description: Encoder Settings
                  type: object
                  properties:
                    AudioDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfAudioDescription'
                        - xml:
                            name: audioDescriptions
                    AvailBlanking:
                      allOf:
                        - $ref: '#/components/schemas/AvailBlanking'
                        - xml:
                            name: availBlanking
                          description: Settings for ad avail blanking.
                    AvailConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/AvailConfiguration'
                        - xml:
                            name: availConfiguration
                          description: Event-wide configuration settings for ad avail insertion.
                    BlackoutSlate:
                      allOf:
                        - $ref: '#/components/schemas/BlackoutSlate'
                        - xml:
                            name: blackoutSlate
                          description: Settings for blackout slate.
                    CaptionDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfCaptionDescription'
                        - xml:
                            name: captionDescriptions
                          description: Settings for caption decriptions
                    FeatureActivations:
                      allOf:
                        - $ref: '#/components/schemas/FeatureActivations'
                        - xml:
                            name: featureActivations
                          description: Feature Activations
                    GlobalConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/GlobalConfiguration'
                        - xml:
                            name: globalConfiguration
                          description: Configuration settings that apply to the event as a whole.
                    MotionGraphicsConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/MotionGraphicsConfiguration'
                        - xml:
                            name: motionGraphicsConfiguration
                          description: Settings for motion graphics.
                    NielsenConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/NielsenConfiguration'
                        - xml:
                            name: nielsenConfiguration
                          description: Nielsen configuration settings.
                    OutputGroups:
                      allOf:
                        - $ref: '#/components/schemas/__listOfOutputGroup'
                        - xml:
                            name: outputGroups
                    TimecodeConfig:
                      allOf:
                        - $ref: '#/components/schemas/TimecodeConfig'
                        - xml:
                            name: timecodeConfig
                          description: Contains settings used to acquire and adjust timecode information from inputs.
                    VideoDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfVideoDescription'
                        - xml:
                            name: videoDescriptions
                inputAttachments:
                  description: Placeholder documentation for __listOfInputAttachment
                  type: array
                  items:
                    $ref: '#/components/schemas/InputAttachment'
                inputSpecification:
                  description: Placeholder documentation for InputSpecification
                  type: object
                  properties:
                    Codec:
                      allOf:
                        - $ref: '#/components/schemas/InputCodec'
                        - xml:
                            name: codec
                          description: Input codec
                    MaximumBitrate:
                      allOf:
                        - $ref: '#/components/schemas/InputMaximumBitrate'
                        - xml:
                            name: maximumBitrate
                          description: 'Maximum input bitrate, categorized coarsely'
                    Resolution:
                      allOf:
                        - $ref: '#/components/schemas/InputResolution'
                        - xml:
                            name: resolution
                          description: 'Input resolution, categorized coarsely'
                logLevel:
                  description: The log level the user wants for their channel.
                  type: string
                  enum:
                    - ERROR
                    - WARNING
                    - INFO
                    - DEBUG
                    - DISABLED
                name:
                  description: Placeholder documentation for __string
                  type: string
                requestId:
                  description: Placeholder documentation for __string
                  type: string
                reserved:
                  description: Placeholder documentation for __string
                  type: string
                roleArn:
                  description: Placeholder documentation for __string
                  type: string
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                vpc:
                  description: |
                    The properties for a private VPC Output
                    When this property is specified, the output egress addresses will be created in a user specified VPC
                  type: object
                  properties:
                    PublicAddressAllocationIds:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: publicAddressAllocationIds
                          description: |
                            List of public address allocation ids to associate with ENIs that will be created in Output VPC.
                            Must specify one for SINGLE_PIPELINE, two for STANDARD channels
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: securityGroupIds
                          description: |
                            A list of up to 5 EC2 VPC security group IDs to attach to the Output VPC network interfaces.
                            If none are specified then the VPC default security group will be used
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: subnetIds
                          description: |
                            A list of VPC subnet IDs from the same VPC.
                            If STANDARD channel, subnet IDs must be mapped to two unique availability zones (AZ).
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannels
      description: Produces list of channels that have been created
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /prod/inputs:
    post:
      operationId: CreateInput
      description: Create an input
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinations:
                  description: Placeholder documentation for __listOfInputDestinationRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/InputDestinationRequest'
                inputDevices:
                  description: Placeholder documentation for __listOfInputDeviceSettings
                  type: array
                  items:
                    $ref: '#/components/schemas/InputDeviceSettings'
                inputSecurityGroups:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                mediaConnectFlows:
                  description: Placeholder documentation for __listOfMediaConnectFlowRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConnectFlowRequest'
                name:
                  description: Placeholder documentation for __string
                  type: string
                requestId:
                  description: Placeholder documentation for __string
                  type: string
                roleArn:
                  description: Placeholder documentation for __string
                  type: string
                sources:
                  description: Placeholder documentation for __listOfInputSourceRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/InputSourceRequest'
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                type:
                  description: Placeholder documentation for InputType
                  type: string
                  enum:
                    - UDP_PUSH
                    - RTP_PUSH
                    - RTMP_PUSH
                    - RTMP_PULL
                    - URL_PULL
                    - MP4_FILE
                    - MEDIACONNECT
                    - INPUT_DEVICE
                    - AWS_CDI
                vpc:
                  description: |
                    Settings for a private VPC Input.
                    When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses.
                    This property requires setting the roleArn property on Input creation.
                    Not compatible with the inputSecurityGroups property.
                  type: object
                  properties:
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: securityGroupIds
                          description: |
                            A list of up to 5 EC2 VPC security group IDs to attach to the Input VPC network interfaces.
                            Requires subnetIds. If none are specified then the VPC default security group will be used.
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__string'
                        - xml:
                            name: subnetIds
                          description: |
                            A list of 2 VPC subnet IDs from the same VPC.
                            Subnet IDs must be mapped to two unique availability zones (AZ).
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListInputs
      description: Produces list of inputs that have been created
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /prod/inputSecurityGroups:
    post:
      operationId: CreateInputSecurityGroup
      description: Creates a Input Security Group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInputSecurityGroupResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                whitelistRules:
                  description: Placeholder documentation for __listOfInputWhitelistRuleCidr
                  type: array
                  items:
                    $ref: '#/components/schemas/InputWhitelistRuleCidr'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListInputSecurityGroups
      description: Produces a list of Input Security Groups for an account
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputSecurityGroupsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /prod/multiplexes:
    post:
      operationId: CreateMultiplex
      description: Create a new multiplex.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - availabilityZones
                - multiplexSettings
                - name
                - requestId
              properties:
                availabilityZones:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                multiplexSettings:
                  description: Contains configuration for a Multiplex event
                  type: object
                  properties:
                    MaximumVideoBufferDelayMilliseconds:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin800Max3000'
                        - xml:
                            name: maximumVideoBufferDelayMilliseconds
                          description: Maximum video buffer delay in milliseconds.
                    TransportStreamBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin1000000Max100000000'
                        - xml:
                            name: transportStreamBitrate
                          description: Transport stream bit rate.
                    TransportStreamId:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max65535'
                        - xml:
                            name: transportStreamId
                          description: Transport stream ID.
                    TransportStreamReservedBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max100000000'
                        - xml:
                            name: transportStreamReservedBitrate
                          description: Transport stream reserved bit rate.
                name:
                  description: Placeholder documentation for __string
                  type: string
                requestId:
                  description: Placeholder documentation for __string
                  type: string
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListMultiplexes
      description: Retrieve a list of the existing multiplexes.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMultiplexesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to return.
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/prod/multiplexes/{multiplexId}/programs':
    post:
      operationId: CreateMultiplexProgram
      description: Create a new program in the multiplex.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMultiplexProgramResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: ID of the multiplex where the program is to be created.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - multiplexProgramSettings
                - programName
                - requestId
              properties:
                multiplexProgramSettings:
                  description: Multiplex Program settings configuration.
                  type: object
                  properties:
                    PreferredChannelPipeline:
                      allOf:
                        - $ref: '#/components/schemas/PreferredChannelPipeline'
                        - xml:
                            name: preferredChannelPipeline
                          description: Indicates which pipeline is preferred by the multiplex for program ingest.
                    ProgramNumber:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max65535'
                        - xml:
                            name: programNumber
                          description: Unique program number.
                    ServiceDescriptor:
                      allOf:
                        - $ref: '#/components/schemas/MultiplexProgramServiceDescriptor'
                        - xml:
                            name: serviceDescriptor
                          description: Transport stream service descriptor configuration for the Multiplex program.
                    VideoSettings:
                      allOf:
                        - $ref: '#/components/schemas/MultiplexVideoSettings'
                        - xml:
                            name: videoSettings
                          description: Program video settings configuration.
                programName:
                  description: Placeholder documentation for __string
                  type: string
                requestId:
                  description: Placeholder documentation for __string
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListMultiplexPrograms
      description: List the programs that currently exist for a specific multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMultiplexProgramsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to return.
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex that the programs belong to.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next page of results.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/prod/inputs/{inputId}/partners':
    post:
      operationId: CreatePartnerInput
      description: Create a partner input
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerInputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputId
          in: path
          required: true
          description: Unique ID of the input.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  description: Placeholder documentation for __string
                  type: string
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/tags/{resource-arn}':
    post:
      operationId: CreateTags
      description: Create tags for a resource
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTagsForResource
      description: Produces list of tags that have been created for a resource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
  '/prod/channels/{channelId}':
    delete:
      operationId: DeleteChannel
      description: Starts deletion of channel. The associated outputs are also deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: Unique ID of the channel.
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannel
      description: Gets details about a channel
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: channel ID
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateChannel
      description: Updates a channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: channel ID
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cdiInputSpecification:
                  description: Placeholder documentation for CdiInputSpecification
                  type: object
                  properties:
                    Resolution:
                      allOf:
                        - $ref: '#/components/schemas/CdiInputResolution'
                        - xml:
                            name: resolution
                          description: Maximum CDI input resolution
                destinations:
                  description: Placeholder documentation for __listOfOutputDestination
                  type: array
                  items:
                    $ref: '#/components/schemas/OutputDestination'
                encoderSettings:
                  description: Encoder Settings
                  type: object
                  properties:
                    AudioDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfAudioDescription'
                        - xml:
                            name: audioDescriptions
                    AvailBlanking:
                      allOf:
                        - $ref: '#/components/schemas/AvailBlanking'
                        - xml:
                            name: availBlanking
                          description: Settings for ad avail blanking.
                    AvailConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/AvailConfiguration'
                        - xml:
                            name: availConfiguration
                          description: Event-wide configuration settings for ad avail insertion.
                    BlackoutSlate:
                      allOf:
                        - $ref: '#/components/schemas/BlackoutSlate'
                        - xml:
                            name: blackoutSlate
                          description: Settings for blackout slate.
                    CaptionDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfCaptionDescription'
                        - xml:
                            name: captionDescriptions
                          description: Settings for caption decriptions
                    FeatureActivations:
                      allOf:
                        - $ref: '#/components/schemas/FeatureActivations'
                        - xml:
                            name: featureActivations
                          description: Feature Activations
                    GlobalConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/GlobalConfiguration'
                        - xml:
                            name: globalConfiguration
                          description: Configuration settings that apply to the event as a whole.
                    MotionGraphicsConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/MotionGraphicsConfiguration'
                        - xml:
                            name: motionGraphicsConfiguration
                          description: Settings for motion graphics.
                    NielsenConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/NielsenConfiguration'
                        - xml:
                            name: nielsenConfiguration
                          description: Nielsen configuration settings.
                    OutputGroups:
                      allOf:
                        - $ref: '#/components/schemas/__listOfOutputGroup'
                        - xml:
                            name: outputGroups
                    TimecodeConfig:
                      allOf:
                        - $ref: '#/components/schemas/TimecodeConfig'
                        - xml:
                            name: timecodeConfig
                          description: Contains settings used to acquire and adjust timecode information from inputs.
                    VideoDescriptions:
                      allOf:
                        - $ref: '#/components/schemas/__listOfVideoDescription'
                        - xml:
                            name: videoDescriptions
                inputAttachments:
                  description: Placeholder documentation for __listOfInputAttachment
                  type: array
                  items:
                    $ref: '#/components/schemas/InputAttachment'
                inputSpecification:
                  description: Placeholder documentation for InputSpecification
                  type: object
                  properties:
                    Codec:
                      allOf:
                        - $ref: '#/components/schemas/InputCodec'
                        - xml:
                            name: codec
                          description: Input codec
                    MaximumBitrate:
                      allOf:
                        - $ref: '#/components/schemas/InputMaximumBitrate'
                        - xml:
                            name: maximumBitrate
                          description: 'Maximum input bitrate, categorized coarsely'
                    Resolution:
                      allOf:
                        - $ref: '#/components/schemas/InputResolution'
                        - xml:
                            name: resolution
                          description: 'Input resolution, categorized coarsely'
                logLevel:
                  description: The log level the user wants for their channel.
                  type: string
                  enum:
                    - ERROR
                    - WARNING
                    - INFO
                    - DEBUG
                    - DISABLED
                name:
                  description: Placeholder documentation for __string
                  type: string
                roleArn:
                  description: Placeholder documentation for __string
                  type: string
  '/prod/inputs/{inputId}':
    delete:
      operationId: DeleteInput
      description: Deletes the input end point
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputId
          in: path
          required: true
          description: Unique ID of the input
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeInput
      description: Produces details about an input
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputId
          in: path
          required: true
          description: Unique ID of the input
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateInput
      description: Updates an input.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputId
          in: path
          required: true
          description: Unique ID of the input.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinations:
                  description: Placeholder documentation for __listOfInputDestinationRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/InputDestinationRequest'
                inputDevices:
                  description: Placeholder documentation for __listOfInputDeviceRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/InputDeviceRequest'
                inputSecurityGroups:
                  description: Placeholder documentation for __listOf__string
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                mediaConnectFlows:
                  description: Placeholder documentation for __listOfMediaConnectFlowRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConnectFlowRequest'
                name:
                  description: Placeholder documentation for __string
                  type: string
                roleArn:
                  description: Placeholder documentation for __string
                  type: string
                sources:
                  description: Placeholder documentation for __listOfInputSourceRequest
                  type: array
                  items:
                    $ref: '#/components/schemas/InputSourceRequest'
  '/prod/inputSecurityGroups/{inputSecurityGroupId}':
    delete:
      operationId: DeleteInputSecurityGroup
      description: Deletes an Input Security Group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInputSecurityGroupResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputSecurityGroupId
          in: path
          required: true
          description: The Input Security Group to delete
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeInputSecurityGroup
      description: Produces a summary of an Input Security Group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInputSecurityGroupResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputSecurityGroupId
          in: path
          required: true
          description: The id of the Input Security Group to describe
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateInputSecurityGroup
      description: Update an Input Security Group's Whilelists.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInputSecurityGroupResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputSecurityGroupId
          in: path
          required: true
          description: The id of the Input Security Group to update.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                whitelistRules:
                  description: Placeholder documentation for __listOfInputWhitelistRuleCidr
                  type: array
                  items:
                    $ref: '#/components/schemas/InputWhitelistRuleCidr'
  '/prod/multiplexes/{multiplexId}':
    delete:
      operationId: DeleteMultiplex
      description: Delete a multiplex. The multiplex must be idle.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex.
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeMultiplex
      description: Gets details about a multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex.
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateMultiplex
      description: Updates a multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: ID of the multiplex to update.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                multiplexSettings:
                  description: Contains configuration for a Multiplex event
                  type: object
                  properties:
                    MaximumVideoBufferDelayMilliseconds:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin800Max3000'
                        - xml:
                            name: maximumVideoBufferDelayMilliseconds
                          description: Maximum video buffer delay in milliseconds.
                    TransportStreamBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin1000000Max100000000'
                        - xml:
                            name: transportStreamBitrate
                          description: Transport stream bit rate.
                    TransportStreamId:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max65535'
                        - xml:
                            name: transportStreamId
                          description: Transport stream ID.
                    TransportStreamReservedBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max100000000'
                        - xml:
                            name: transportStreamReservedBitrate
                          description: Transport stream reserved bit rate.
                name:
                  description: Placeholder documentation for __string
                  type: string
  '/prod/multiplexes/{multiplexId}/programs/{programName}':
    delete:
      operationId: DeleteMultiplexProgram
      description: Delete a program from a multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMultiplexProgramResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex that the program belongs to.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: programName
          in: path
          required: true
          description: The multiplex program name.
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeMultiplexProgram
      description: Get the details for a program in a multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMultiplexProgramResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex that the program belongs to.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: programName
          in: path
          required: true
          description: The name of the program.
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateMultiplexProgram
      description: Update a program in a multiplex.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMultiplexProgramResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex of the program to update.
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: programName
          in: path
          required: true
          description: The name of the program to update.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                multiplexProgramSettings:
                  description: Multiplex Program settings configuration.
                  type: object
                  properties:
                    PreferredChannelPipeline:
                      allOf:
                        - $ref: '#/components/schemas/PreferredChannelPipeline'
                        - xml:
                            name: preferredChannelPipeline
                          description: Indicates which pipeline is preferred by the multiplex for program ingest.
                    ProgramNumber:
                      allOf:
                        - $ref: '#/components/schemas/__integerMin0Max65535'
                        - xml:
                            name: programNumber
                          description: Unique program number.
                    ServiceDescriptor:
                      allOf:
                        - $ref: '#/components/schemas/MultiplexProgramServiceDescriptor'
                        - xml:
                            name: serviceDescriptor
                          description: Transport stream service descriptor configuration for the Multiplex program.
                    VideoSettings:
                      allOf:
                        - $ref: '#/components/schemas/MultiplexVideoSettings'
                        - xml:
                            name: videoSettings
                          description: Program video settings configuration.
  '/prod/reservations/{reservationId}':
    delete:
      operationId: DeleteReservation
      description: Delete an expired reservation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReservationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: reservationId
          in: path
          required: true
          description: 'Unique reservation ID, e.g. ''1234567'''
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeReservation
      description: Get details for a reservation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: reservationId
          in: path
          required: true
          description: 'Unique reservation ID, e.g. ''1234567'''
          schema:
            type: string
            description: Placeholder documentation for __string
    put:
      operationId: UpdateReservation
      description: Update reservation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: reservationId
          in: path
          required: true
          description: 'Unique reservation ID, e.g. ''1234567'''
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Placeholder documentation for __string
                  type: string
  '/prod/tags/{resource-arn}#tagKeys':
    delete:
      operationId: DeleteTags
      description: Removes tags for a resource
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: tagKeys
          in: query
          required: true
          description: An array of tag keys to delete
          schema:
            type: array
            description: Placeholder documentation for __listOf__string
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/inputDevices/{inputDeviceId}':
    get:
      operationId: DescribeInputDevice
      description: Gets the details for the input device
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInputDeviceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of this input device. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateInputDevice
      description: Updates the parameters for the input device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInputDeviceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of the input device. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hdDeviceSettings:
                  description: Configurable settings for the input device.
                  type: object
                  properties:
                    ConfiguredInput:
                      allOf:
                        - $ref: '#/components/schemas/InputDeviceConfiguredInput'
                        - xml:
                            name: configuredInput
                          description: 'The input source that you want to use. If the device has a source connected to only one of its input ports, or if you don''t care which source the device sends, specify Auto. If the device has sources connected to both its input ports, and you want to use a specific source, specify the source.'
                    MaxBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxBitrate
                          description: The maximum bitrate in bits per second. Set a value here to throttle the bitrate of the source video.
                name:
                  description: Placeholder documentation for __string
                  type: string
                uhdDeviceSettings:
                  description: Configurable settings for the input device.
                  type: object
                  properties:
                    ConfiguredInput:
                      allOf:
                        - $ref: '#/components/schemas/InputDeviceConfiguredInput'
                        - xml:
                            name: configuredInput
                          description: 'The input source that you want to use. If the device has a source connected to only one of its input ports, or if you don''t care which source the device sends, specify Auto. If the device has sources connected to both its input ports, and you want to use a specific source, specify the source.'
                    MaxBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxBitrate
                          description: The maximum bitrate in bits per second. Set a value here to throttle the bitrate of the source video.
  '/prod/inputDevices/{inputDeviceId}/thumbnailData#accept':
    get:
      operationId: DescribeInputDeviceThumbnail
      description: Get the latest thumbnail data for the input device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInputDeviceThumbnailResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of this input device. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: accept
          in: header
          required: true
          description: The HTTP Accept header. Indicates the requested type for the thumbnail.
          schema:
            type: string
            enum:
              - image/jpeg
            description: The HTTP Accept header. Indicates the requested type fothe thumbnail.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/offerings/{offeringId}':
    get:
      operationId: DescribeOffering
      description: Get details for an offering.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOfferingResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: offeringId
          in: path
          required: true
          description: 'Unique offering ID, e.g. ''87654321'''
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/inputDeviceTransfers#transferType:
    get:
      operationId: ListInputDeviceTransfers
      description: List input devices that are currently being transferred. List input devices that you are transferring from your AWS account or input devices that another AWS account is transferring to you.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputDeviceTransfersResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: transferType
          in: query
          required: true
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/inputDevices:
    get:
      operationId: ListInputDevices
      description: List input devices
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputDevicesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/offerings:
    get:
      operationId: ListOfferings
      description: List offerings available for purchase.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelClass
          in: query
          required: false
          description: |
            Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: channelConfiguration
          in: query
          required: false
          description: |
            Filter to offerings that match the configuration of an existing channel, e.g. '2345678' (a channel ID)
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: codec
          in: query
          required: false
          description: 'Filter by codec, ''AVC'', ''HEVC'', ''MPEG2'', ''AUDIO'', or ''LINK'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: duration
          in: query
          required: false
          description: 'Filter by offering duration, e.g. ''12'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: maximumBitrate
          in: query
          required: false
          description: |
            Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: maximumFramerate
          in: query
          required: false
          description: 'Filter by framerate, ''MAX_30_FPS'' or ''MAX_60_FPS'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: resolution
          in: query
          required: false
          description: 'Filter by resolution, ''SD'', ''HD'', ''FHD'', or ''UHD'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: resourceType
          in: query
          required: false
          description: 'Filter by resource type, ''INPUT'', ''OUTPUT'', ''MULTIPLEX'', or ''CHANNEL'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: specialFeature
          in: query
          required: false
          description: |
            Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: videoQuality
          in: query
          required: false
          description: |
            Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /prod/reservations:
    get:
      operationId: ListReservations
      description: List purchased reservations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelClass
          in: query
          required: false
          description: |
            Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: codec
          in: query
          required: false
          description: 'Filter by codec, ''AVC'', ''HEVC'', ''MPEG2'', ''AUDIO'', or ''LINK'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: Placeholder documentation for MaxResults
            minimum: 1
            maximum: 1000
        - name: maximumBitrate
          in: query
          required: false
          description: |
            Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: maximumFramerate
          in: query
          required: false
          description: 'Filter by framerate, ''MAX_30_FPS'' or ''MAX_60_FPS'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: resolution
          in: query
          required: false
          description: 'Filter by resolution, ''SD'', ''HD'', ''FHD'', or ''UHD'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: resourceType
          in: query
          required: false
          description: 'Filter by resource type, ''INPUT'', ''OUTPUT'', ''MULTIPLEX'', or ''CHANNEL'''
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: specialFeature
          in: query
          required: false
          description: |
            Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: videoQuality
          in: query
          required: false
          description: |
            Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'
          schema:
            type: string
            description: Placeholder documentation for __string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/offerings/{offeringId}/purchase':
    post:
      operationId: PurchaseOffering
      description: Purchase an offering and create a reservation.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOfferingResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: offeringId
          in: path
          required: true
          description: 'Offering to purchase, e.g. ''87654321'''
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - count
              properties:
                count:
                  description: Placeholder documentation for __integerMin1
                  type: integer
                  minimum: 1
                name:
                  description: Placeholder documentation for __string
                  type: string
                requestId:
                  description: Placeholder documentation for __string
                  type: string
                start:
                  description: Placeholder documentation for __string
                  type: string
                tags:
                  description: Placeholder documentation for Tags
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/inputDevices/{inputDeviceId}/reject':
    post:
      operationId: RejectInputDeviceTransfer
      description: Reject the transfer of the specified input device to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectInputDeviceTransferResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of the input device to reject. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/channels/{channelId}/start':
    post:
      operationId: StartChannel
      description: Starts an existing channel
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: A request to start a channel
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/multiplexes/{multiplexId}/start':
    post:
      operationId: StartMultiplex
      description: Start (run) the multiplex. Starting the multiplex does not start the channels. You must explicitly start each channel.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex.
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/channels/{channelId}/stop':
    post:
      operationId: StopChannel
      description: Stops a running channel
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: A request to stop a running channel
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/multiplexes/{multiplexId}/stop':
    post:
      operationId: StopMultiplex
      description: 'Stops a running multiplex. If the multiplex isn''t running, this action has no effect.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopMultiplexResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: multiplexId
          in: path
          required: true
          description: The ID of the multiplex.
          schema:
            type: string
            description: Placeholder documentation for __string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/inputDevices/{inputDeviceId}/transfer':
    post:
      operationId: TransferInputDevice
      description: 'Start an input device transfer to another AWS account. After you make the request, the other account must accept or reject the transfer.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferInputDeviceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: inputDeviceId
          in: path
          required: true
          description: 'The unique ID of this input device. For example, hd-123456789abcdef.'
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetCustomerId:
                  description: Placeholder documentation for __string
                  type: string
                targetRegion:
                  description: Placeholder documentation for __string
                  type: string
                transferMessage:
                  description: Placeholder documentation for __string
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prod/channels/{channelId}/channelClass':
    put:
      operationId: UpdateChannelClass
      description: Changes the class of the channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelClassResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: channelId
          in: path
          required: true
          description: Channel Id of the channel whose class should be updated.
          schema:
            type: string
            description: Placeholder documentation for __string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channelClass
              properties:
                channelClass:
                  description: A standard channel has two encoding pipelines and a single pipeline channel only has one.
                  type: string
                  enum:
                    - STANDARD
                    - SINGLE_PIPELINE
                destinations:
                  description: Placeholder documentation for __listOfOutputDestination
                  type: array
                  items:
                    $ref: '#/components/schemas/OutputDestination'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for AcceptInputDeviceTransferResponse
    BadRequestException: {}
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    BadGatewayException: {}
    NotFoundException: {}
    GatewayTimeoutException: {}
    TooManyRequestsException: {}
    ConflictException: {}
    BatchDeleteResponse:
      type: object
      properties:
        Failed:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
            - xml:
                name: failed
              description: List of failed operations
        Successful:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
            - xml:
                name: successful
              description: List of successful operations
      description: Placeholder documentation for BatchDeleteResponse
    __string:
      type: string
      description: Placeholder documentation for __string
    BatchStartResponse:
      type: object
      properties:
        Failed:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
            - xml:
                name: failed
              description: List of failed operations
        Successful:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
            - xml:
                name: successful
              description: List of successful operations
      description: Placeholder documentation for BatchStartResponse
    BatchStopResponse:
      type: object
      properties:
        Failed:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
            - xml:
                name: failed
              description: List of failed operations
        Successful:
          allOf:
            - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
            - xml:
                name: successful
              description: List of successful operations
      description: Placeholder documentation for BatchStopResponse
    BatchUpdateScheduleResponse:
      type: object
      properties:
        Creates:
          allOf:
            - $ref: '#/components/schemas/BatchScheduleActionCreateResult'
            - xml:
                name: creates
              description: Schedule actions created in the schedule.
        Deletes:
          allOf:
            - $ref: '#/components/schemas/BatchScheduleActionDeleteResult'
            - xml:
                name: deletes
              description: Schedule actions deleted from the schedule.
      description: Placeholder documentation for BatchUpdateScheduleResponse
    __listOfScheduleAction:
      type: array
      description: Placeholder documentation for __listOfScheduleAction
      items:
        $ref: '#/components/schemas/ScheduleAction'
    __listOf__string:
      type: array
      description: Placeholder documentation for __listOf__string
      items:
        $ref: '#/components/schemas/__string'
    CancelInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for CancelInputDeviceTransferResponse
    CreateChannelResponse:
      type: object
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - xml:
                name: channel
      description: Placeholder documentation for CreateChannelResponse
    CdiInputResolution:
      type: string
      enum:
        - SD
        - HD
        - FHD
        - UHD
      description: |
        Maximum CDI input resolution; SD is 480i and 576i up to 30 frames-per-second (fps), HD is 720p up to 60 fps / 1080i up to 30 fps, FHD is 1080p up to 60 fps, UHD is 2160p up to 60 fps
    OutputDestination:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: User-specified id. This is used in an output group or an output.
        MediaPackageSettings:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaPackageOutputDestinationSettings'
            - xml:
                name: mediaPackageSettings
              description: Destination settings for a MediaPackage output; one destination for both encoders.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramChannelDestinationSettings'
            - xml:
                name: multiplexSettings
              description: Destination settings for a Multiplex output; one destination for both encoders.
        Settings:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestinationSettings'
            - xml:
                name: settings
              description: Destination settings for a standard output; one destination for each redundant encoder.
      description: Placeholder documentation for OutputDestination
    __listOfAudioDescription:
      type: array
      description: Placeholder documentation for __listOfAudioDescription
      items:
        $ref: '#/components/schemas/AudioDescription'
    AvailBlanking:
      type: object
      properties:
        AvailBlankingImage:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: availBlankingImage
              description: Blanking image to be used. Leave empty for solid black. Only bmp and png images are supported.
        State:
          allOf:
            - $ref: '#/components/schemas/AvailBlankingState'
            - xml:
                name: state
              description: 'When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.'
      description: Avail Blanking
    AvailConfiguration:
      type: object
      properties:
        AvailSettings:
          allOf:
            - $ref: '#/components/schemas/AvailSettings'
            - xml:
                name: availSettings
              description: Ad avail settings.
      description: Avail Configuration
    BlackoutSlate:
      type: object
      properties:
        BlackoutSlateImage:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: blackoutSlateImage
              description: Blackout slate image to be used. Leave empty for solid black. Only bmp and png images are supported.
        NetworkEndBlackout:
          allOf:
            - $ref: '#/components/schemas/BlackoutSlateNetworkEndBlackout'
            - xml:
                name: networkEndBlackout
              description: 'Setting to enabled causes the encoder to blackout the video, audio, and captions, and raise the "Network Blackout Image" slate when an SCTE104/35 Network End Segmentation Descriptor is encountered. The blackout will be lifted when the Network Start Segmentation Descriptor is encountered. The Network End and Network Start descriptors must contain a network ID that matches the value entered in "Network ID".'
        NetworkEndBlackoutImage:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: networkEndBlackoutImage
              description: Path to local file to use as Network End Blackout image. Image will be scaled to fill the entire output raster.
        NetworkId:
          allOf:
            - $ref: '#/components/schemas/__stringMin34Max34'
            - xml:
                name: networkId
              description: 'Provides Network ID that matches EIDR ID format (e.g., "10.XXXX/XXXX-XXXX-XXXX-XXXX-XXXX-C").'
        State:
          allOf:
            - $ref: '#/components/schemas/BlackoutSlateState'
            - xml:
                name: state
              description: 'When set to enabled, causes video, audio and captions to be blanked when indicated by program metadata.'
      description: Blackout Slate
    __listOfCaptionDescription:
      type: array
      description: Placeholder documentation for __listOfCaptionDescription
      items:
        $ref: '#/components/schemas/CaptionDescription'
    FeatureActivations:
      type: object
      properties:
        InputPrepareScheduleActions:
          allOf:
            - $ref: '#/components/schemas/FeatureActivationsInputPrepareScheduleActions'
            - xml:
                name: inputPrepareScheduleActions
              description: |-
                Enables the Input Prepare feature. You can create Input Prepare actions in the schedule only if this feature is enabled.
                If you disable the feature on an existing schedule, make sure that you first delete all input prepare actions from the schedule.
      description: Feature Activations
    GlobalConfiguration:
      type: object
      properties:
        InitialAudioGain:
          allOf:
            - $ref: '#/components/schemas/__integerMinNegative60Max60'
            - xml:
                name: initialAudioGain
              description: Value to set the initial audio gain for the Live Event.
        InputEndAction:
          allOf:
            - $ref: '#/components/schemas/GlobalConfigurationInputEndAction'
            - xml:
                name: inputEndAction
              description: 'Indicates the action to take when the current input completes (e.g. end-of-file). When switchAndLoopInputs is configured the encoder will restart at the beginning of the first input.  When "none" is configured the encoder will transcode either black, a solid color, or a user specified slate images per the "Input Loss Behavior" configuration until the next input switch occurs (which is controlled through the Channel Schedule API).'
        InputLossBehavior:
          allOf:
            - $ref: '#/components/schemas/InputLossBehavior'
            - xml:
                name: inputLossBehavior
              description: Settings for system actions when input is lost.
        OutputLockingMode:
          allOf:
            - $ref: '#/components/schemas/GlobalConfigurationOutputLockingMode'
            - xml:
                name: outputLockingMode
              description: |-
                Indicates how MediaLive pipelines are synchronized.

                PIPELINE_LOCKING - MediaLive will attempt to synchronize the output of each pipeline to the other.
                EPOCH_LOCKING - MediaLive will attempt to synchronize the output of each pipeline to the Unix epoch.
        OutputTimingSource:
          allOf:
            - $ref: '#/components/schemas/GlobalConfigurationOutputTimingSource'
            - xml:
                name: outputTimingSource
              description: Indicates whether the rate of frames emitted by the Live encoder should be paced by its system clock (which optionally may be locked to another source via NTP) or should be locked to the clock of the source that is providing the input stream.
        SupportLowFramerateInputs:
          allOf:
            - $ref: '#/components/schemas/GlobalConfigurationLowFramerateInputs'
            - xml:
                name: supportLowFramerateInputs
              description: Adjusts video input buffer for streams with very low video framerates. This is commonly set to enabled for music channels with less than one video frame per second.
      description: Global Configuration
    MotionGraphicsConfiguration:
      type: object
      required:
        - MotionGraphicsSettings
      properties:
        MotionGraphicsInsertion:
          allOf:
            - $ref: '#/components/schemas/MotionGraphicsInsertion'
            - xml:
                name: motionGraphicsInsertion
        MotionGraphicsSettings:
          allOf:
            - $ref: '#/components/schemas/MotionGraphicsSettings'
            - xml:
                name: motionGraphicsSettings
              description: Motion Graphics Settings
      description: Motion Graphics Configuration
    NielsenConfiguration:
      type: object
      properties:
        DistributorId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: distributorId
              description: Enter the Distributor ID assigned to your organization by Nielsen.
        NielsenPcmToId3Tagging:
          allOf:
            - $ref: '#/components/schemas/NielsenPcmToId3TaggingState'
            - xml:
                name: nielsenPcmToId3Tagging
              description: Enables Nielsen PCM to ID3 tagging
      description: Nielsen Configuration
    __listOfOutputGroup:
      type: array
      description: Placeholder documentation for __listOfOutputGroup
      items:
        $ref: '#/components/schemas/OutputGroup'
    TimecodeConfig:
      type: object
      required:
        - Source
      properties:
        Source:
          allOf:
            - $ref: '#/components/schemas/TimecodeConfigSource'
            - xml:
                name: source
              description: |-
                Identifies the source for the timecode that will be associated with the events outputs.
                -Embedded (embedded): Initialize the output timecode with timecode from the the source.  If no embedded timecode is detected in the source, the system falls back to using "Start at 0" (zerobased).
                -System Clock (systemclock): Use the UTC time.
                -Start at 0 (zerobased): The time of the first frame of the event will be 00:00:00:00.
        SyncThreshold:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max1000000'
            - xml:
                name: syncThreshold
              description: Threshold in frames beyond which output timecode is resynchronized to the input timecode. Discrepancies below this threshold are permitted to avoid unnecessary discontinuities in the output timecode. No timecode sync when this is not specified.
      description: Timecode Config
    __listOfVideoDescription:
      type: array
      description: Placeholder documentation for __listOfVideoDescription
      items:
        $ref: '#/components/schemas/VideoDescription'
    InputAttachment:
      type: object
      properties:
        AutomaticInputFailoverSettings:
          allOf:
            - $ref: '#/components/schemas/AutomaticInputFailoverSettings'
            - xml:
                name: automaticInputFailoverSettings
              description: User-specified settings for defining what the conditions are for declaring the input unhealthy and failing over to a different input.
        InputAttachmentName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: inputAttachmentName
              description: User-specified name for the attachment. This is required if the user wants to use this input in an input switch action.
        InputId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: inputId
              description: The ID of the input
        InputSettings:
          allOf:
            - $ref: '#/components/schemas/InputSettings'
            - xml:
                name: inputSettings
              description: 'Settings of an input (caption selector, etc.)'
      description: Placeholder documentation for InputAttachment
    InputCodec:
      type: string
      enum:
        - MPEG2
        - AVC
        - HEVC
      description: codec in increasing order of complexity
    InputMaximumBitrate:
      type: string
      enum:
        - MAX_10_MBPS
        - MAX_20_MBPS
        - MAX_50_MBPS
      description: Maximum input bitrate in megabits per second. Bitrates up to 50 Mbps are supported currently.
    InputResolution:
      type: string
      enum:
        - SD
        - HD
        - UHD
      description: |
        Input resolution based on lines of vertical resolution in the input; SD is less than 720 lines, HD is 720 to 1080 lines, UHD is greater than 1080 lines
    CreateInputResponse:
      type: object
      properties:
        Input:
          allOf:
            - $ref: '#/components/schemas/Input'
            - xml:
                name: input
      description: Placeholder documentation for CreateInputResponse
    InputDestinationRequest:
      type: object
      properties:
        StreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamName
              description: |
                A unique name for the location the RTMP stream is being pushed
                to.
      description: Endpoint settings for a PUSH type input.
    InputDeviceSettings:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID for the device.
      description: Settings for an input device.
    MediaConnectFlowRequest:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the MediaConnect Flow that you want to use as a source.
      description: The settings for a MediaConnect Flow.
    InputSourceRequest:
      type: object
      properties:
        PasswordParam:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: passwordParam
              description: The key used to extract the password from EC2 Parameter store.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: |
                This represents the customer's source URL where stream is
                pulled from.
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: The username for the input source.
      description: Settings for for a PULL type input.
    CreateInputSecurityGroupResponse:
      type: object
      properties:
        SecurityGroup:
          allOf:
            - $ref: '#/components/schemas/InputSecurityGroup'
            - xml:
                name: securityGroup
      description: Placeholder documentation for CreateInputSecurityGroupResponse
    InputWhitelistRuleCidr:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: cidr
              description: The IPv4 CIDR to whitelist.
      description: An IPv4 CIDR to whitelist.
    CreateMultiplexResponse:
      type: object
      properties:
        Multiplex:
          allOf:
            - $ref: '#/components/schemas/Multiplex'
            - xml:
                name: multiplex
              description: The newly created multiplex.
      description: Placeholder documentation for CreateMultiplexResponse
    __integerMin800Max3000:
      type: integer
      description: Placeholder documentation for __integerMin800Max3000
      minimum: 800
      maximum: 3000
    __integerMin1000000Max100000000:
      type: integer
      description: Placeholder documentation for __integerMin1000000Max100000000
      minimum: 1000000
      maximum: 100000000
    __integerMin0Max65535:
      type: integer
      description: Placeholder documentation for __integerMin0Max65535
      minimum: 0
      maximum: 65535
    __integerMin0Max100000000:
      type: integer
      description: Placeholder documentation for __integerMin0Max100000000
      minimum: 0
      maximum: 100000000
    CreateMultiplexProgramResponse:
      type: object
      properties:
        MultiplexProgram:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgram'
            - xml:
                name: multiplexProgram
              description: The newly created multiplex program.
      description: Placeholder documentation for CreateMultiplexProgramResponse
    PreferredChannelPipeline:
      type: string
      enum:
        - CURRENTLY_ACTIVE
        - PIPELINE_0
        - PIPELINE_1
      description: |
        Indicates which pipeline is preferred by the multiplex for program ingest.
        If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,
        it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",
        it will not switch back to the other pipeline based on it recovering to a healthy state,
        it will only switch if the active pipeline becomes unhealthy.
    MultiplexProgramServiceDescriptor:
      type: object
      required:
        - ProviderName
        - ServiceName
      properties:
        ProviderName:
          allOf:
            - $ref: '#/components/schemas/__stringMax256'
            - xml:
                name: providerName
              description: Name of the provider.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/__stringMax256'
            - xml:
                name: serviceName
              description: Name of the service.
      description: Transport stream service descriptor configuration for the Multiplex program.
    MultiplexVideoSettings:
      type: object
      properties:
        ConstantBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max100000000'
            - xml:
                name: constantBitrate
              description: |-
                The constant bitrate configuration for the video encode.
                When this field is defined, StatmuxSettings must be undefined.
        StatmuxSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexStatmuxVideoSettings'
            - xml:
                name: statmuxSettings
              description: |-
                Statmux rate control settings.
                When this field is defined, ConstantBitrate must be undefined.
      description: The video configuration for each program in a multiplex.
    CreatePartnerInputResponse:
      type: object
      properties:
        Input:
          allOf:
            - $ref: '#/components/schemas/Input'
            - xml:
                name: input
      description: Placeholder documentation for CreatePartnerInputResponse
    DeleteChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for DeleteChannelResponse
    DeleteInputResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteInputResponse
    DeleteInputSecurityGroupResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteInputSecurityGroupResponse
    DeleteMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
            - xml:
                name: destinations
              description: A list of the multiplex output destinations.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: Placeholder documentation for DeleteMultiplexResponse
    DeleteMultiplexProgramResponse:
      type: object
      properties:
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramSettings'
            - xml:
                name: multiplexProgramSettings
              description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
            - xml:
                name: packetIdentifiersMap
              description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Contains information about the current sources for the specified program in the specified multiplex. Keep in mind that each multiplex pipeline connects to both pipelines in a given source channel (the channel identified by the program). But only one of those channel pipelines is ever active at one time.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: programName
              description: The name of the multiplex program.
      description: Placeholder documentation for DeleteMultiplexProgramResponse
    DeleteReservationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'Unique reservation ARN, e.g. ''arn:aws:medialive:us-west-2:123456789012:reservation:1234567'''
        Count:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: count
              description: Number of reserved resources
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: 'Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. ''USD'''
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: 'Lease duration, e.g. ''12'''
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/OfferingDurationUnits'
            - xml:
                name: durationUnits
              description: 'Units for duration, e.g. ''MONTHS'''
        End:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: end
              description: 'Reservation UTC end date and time in ISO-8601 format, e.g. ''2019-03-01T00:00:00'''
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: fixedPrice
              description: 'One-time charge for each reserved resource, e.g. ''0.0'' for a NO_UPFRONT offering'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: User specified reservation name
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: 'Offering description, e.g. ''HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'''
        OfferingId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringId
              description: 'Unique offering ID, e.g. ''87654321'''
        OfferingType:
          allOf:
            - $ref: '#/components/schemas/OfferingType'
            - xml:
                name: offeringType
              description: 'Offering type, e.g. ''NO_UPFRONT'''
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: 'AWS region, e.g. ''us-west-2'''
        ReservationId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationId
              description: 'Unique reservation ID, e.g. ''1234567'''
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceSpecification'
            - xml:
                name: resourceSpecification
              description: Resource configuration details
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: 'Reservation UTC start date and time in ISO-8601 format, e.g. ''2018-03-01T00:00:00'''
        State:
          allOf:
            - $ref: '#/components/schemas/ReservationState'
            - xml:
                name: state
              description: 'Current state of reservation, e.g. ''ACTIVE'''
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: usagePrice
              description: 'Recurring usage charge for each reserved resource, e.g. ''157.0'''
      description: Placeholder documentation for DeleteReservationResponse
    DeleteScheduleResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteScheduleResponse
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for DescribeChannelResponse
    DescribeInputResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'The Unique ARN of the input (generated, immutable).'
        AttachedChannels:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: attachedChannels
              description: A list of channel IDs that that input is attached to (currently an input can only be attached to one channel).
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDestination'
            - xml:
                name: destinations
              description: A list of the destinations of the input (PUSH-type).
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: 'The generated ID of the input (unique for user account, immutable).'
        InputClass:
          allOf:
            - $ref: '#/components/schemas/InputClass'
            - xml:
                name: inputClass
              description: |
                STANDARD - MediaLive expects two sources to be connected to this input. If the channel is also STANDARD, both sources will be ingested. If the channel is SINGLE_PIPELINE, only the first source will be ingested; the second source will always be ignored, even if the first source fails.
                SINGLE_PIPELINE - You can connect only one source to this input. If the ChannelClass is also  SINGLE_PIPELINE, this value is valid. If the ChannelClass is STANDARD, this value is not valid because the channel requires two sources in the input.
        InputDevices:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDeviceSettings'
            - xml:
                name: inputDevices
              description: Settings for the input devices.
        InputPartnerIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputPartnerIds
              description: A list of IDs for all Inputs which are partners of this one.
        InputSourceType:
          allOf:
            - $ref: '#/components/schemas/InputSourceType'
            - xml:
                name: inputSourceType
              description: |
                Certain pull input sources can be dynamic, meaning that they can have their URL's dynamically changes
                during input switch actions. Presently, this functionality only works with MP4_FILE inputs.
        MediaConnectFlows:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaConnectFlow'
            - xml:
                name: mediaConnectFlows
              description: A list of MediaConnect Flows for this input.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The user-assigned name (This is a mutable value).
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
        SecurityGroups:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroups
              description: A list of IDs for all the Input Security Groups attached to the input.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfInputSource'
            - xml:
                name: sources
              description: A list of the sources of the input (PULL-type).
        State:
          allOf:
            - $ref: '#/components/schemas/InputState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputType'
            - xml:
                name: type
      description: Placeholder documentation for DescribeInputResponse
    DescribeInputDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique ARN of the input device.
        ConnectionState:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConnectionState'
            - xml:
                name: connectionState
              description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
            - $ref: '#/components/schemas/DeviceSettingsSyncState'
            - xml:
                name: deviceSettingsSyncState
              description: 'The status of the action to synchronize the device configuration. If you change the configuration of the input device (for example, the maximum bitrate), MediaLive sends the new data to the device. The device might not update itself immediately. SYNCED means the device has updated its configuration. SYNCING means that it has not updated its configuration.'
        DeviceUpdateStatus:
          allOf:
            - $ref: '#/components/schemas/DeviceUpdateStatus'
            - xml:
                name: deviceUpdateStatus
              description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceHdSettings'
            - xml:
                name: hdDeviceSettings
              description: Settings that describe an input device that is type HD.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID of the input device.
        MacAddress:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: macAddress
              description: The network MAC address of the input device.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceNetworkSettings'
            - xml:
                name: networkSettings
              description: The network settings for the input device.
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: serialNumber
              description: The unique serial number of the input device.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputDeviceType'
            - xml:
                name: type
              description: The type of the input device.
        UhdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceUhdSettings'
            - xml:
                name: uhdDeviceSettings
              description: Settings that describe an input device that is type UHD.
      description: Placeholder documentation for DescribeInputDeviceResponse
    DescribeInputDeviceThumbnailResponse:
      type: object
      properties:
        Body:
          allOf:
            - $ref: '#/components/schemas/InputDeviceThumbnail'
            - xml:
                name: body
              description: The binary data for the thumbnail that the Link device has most recently sent to MediaLive.
      description: Placeholder documentation for DescribeInputDeviceThumbnailResponse
    DescribeInputSecurityGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: Unique ARN of Input Security Group
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The Id of the Input Security Group
        Inputs:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputs
              description: The list of inputs currently using this Input Security Group.
        State:
          allOf:
            - $ref: '#/components/schemas/InputSecurityGroupState'
            - xml:
                name: state
              description: The current state of the Input Security Group.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
            - $ref: '#/components/schemas/__listOfInputWhitelistRule'
            - xml:
                name: whitelistRules
              description: Whitelist rules and their sync status
      description: Placeholder documentation for DescribeInputSecurityGroupResponse
    DescribeMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
            - xml:
                name: destinations
              description: A list of the multiplex output destinations.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: Placeholder documentation for DescribeMultiplexResponse
    DescribeMultiplexProgramResponse:
      type: object
      properties:
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramSettings'
            - xml:
                name: multiplexProgramSettings
              description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
            - xml:
                name: packetIdentifiersMap
              description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Contains information about the current sources for the specified program in the specified multiplex. Keep in mind that each multiplex pipeline connects to both pipelines in a given source channel (the channel identified by the program). But only one of those channel pipelines is ever active at one time.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: programName
              description: The name of the multiplex program.
      description: Placeholder documentation for DescribeMultiplexProgramResponse
    DescribeOfferingResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'Unique offering ARN, e.g. ''arn:aws:medialive:us-west-2:123456789012:offering:87654321'''
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: 'Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. ''USD'''
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: 'Lease duration, e.g. ''12'''
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/OfferingDurationUnits'
            - xml:
                name: durationUnits
              description: 'Units for duration, e.g. ''MONTHS'''
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: fixedPrice
              description: 'One-time charge for each reserved resource, e.g. ''0.0'' for a NO_UPFRONT offering'
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: 'Offering description, e.g. ''HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'''
        OfferingId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringId
              description: 'Unique offering ID, e.g. ''87654321'''
        OfferingType:
          allOf:
            - $ref: '#/components/schemas/OfferingType'
            - xml:
                name: offeringType
              description: 'Offering type, e.g. ''NO_UPFRONT'''
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: 'AWS region, e.g. ''us-west-2'''
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceSpecification'
            - xml:
                name: resourceSpecification
              description: Resource configuration details
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: usagePrice
              description: 'Recurring usage charge for each reserved resource, e.g. ''157.0'''
      description: Placeholder documentation for DescribeOfferingResponse
    DescribeReservationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'Unique reservation ARN, e.g. ''arn:aws:medialive:us-west-2:123456789012:reservation:1234567'''
        Count:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: count
              description: Number of reserved resources
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: 'Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. ''USD'''
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: 'Lease duration, e.g. ''12'''
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/OfferingDurationUnits'
            - xml:
                name: durationUnits
              description: 'Units for duration, e.g. ''MONTHS'''
        End:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: end
              description: 'Reservation UTC end date and time in ISO-8601 format, e.g. ''2019-03-01T00:00:00'''
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: fixedPrice
              description: 'One-time charge for each reserved resource, e.g. ''0.0'' for a NO_UPFRONT offering'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: User specified reservation name
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: 'Offering description, e.g. ''HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'''
        OfferingId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringId
              description: 'Unique offering ID, e.g. ''87654321'''
        OfferingType:
          allOf:
            - $ref: '#/components/schemas/OfferingType'
            - xml:
                name: offeringType
              description: 'Offering type, e.g. ''NO_UPFRONT'''
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: 'AWS region, e.g. ''us-west-2'''
        ReservationId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationId
              description: 'Unique reservation ID, e.g. ''1234567'''
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceSpecification'
            - xml:
                name: resourceSpecification
              description: Resource configuration details
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: 'Reservation UTC start date and time in ISO-8601 format, e.g. ''2018-03-01T00:00:00'''
        State:
          allOf:
            - $ref: '#/components/schemas/ReservationState'
            - xml:
                name: state
              description: 'Current state of reservation, e.g. ''ACTIVE'''
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: usagePrice
              description: 'Recurring usage charge for each reserved resource, e.g. ''157.0'''
      description: Placeholder documentation for DescribeReservationResponse
    DescribeScheduleResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: The next token; for use in pagination.
        ScheduleActions:
          allOf:
            - $ref: '#/components/schemas/__listOfScheduleAction'
            - xml:
                name: scheduleActions
              description: The list of actions in the schedule.
      description: Placeholder documentation for DescribeScheduleResponse
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelSummary'
            - xml:
                name: channels
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
      description: Placeholder documentation for ListChannelsResponse
    ListInputDeviceTransfersResponse:
      type: object
      properties:
        InputDeviceTransfers:
          allOf:
            - $ref: '#/components/schemas/__listOfTransferringInputDeviceSummary'
            - xml:
                name: inputDeviceTransfers
              description: The list of devices that you are transferring or are being transferred to you.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token to get additional list results.
      description: Placeholder documentation for ListInputDeviceTransfersResponse
    ListInputDevicesResponse:
      type: object
      properties:
        InputDevices:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDeviceSummary'
            - xml:
                name: inputDevices
              description: The list of input devices.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token to get additional list results.
      description: Placeholder documentation for ListInputDevicesResponse
    ListInputSecurityGroupsResponse:
      type: object
      properties:
        InputSecurityGroups:
          allOf:
            - $ref: '#/components/schemas/__listOfInputSecurityGroup'
            - xml:
                name: inputSecurityGroups
              description: List of input security groups
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
      description: Placeholder documentation for ListInputSecurityGroupsResponse
    ListInputsResponse:
      type: object
      properties:
        Inputs:
          allOf:
            - $ref: '#/components/schemas/__listOfInput'
            - xml:
                name: inputs
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
      description: Placeholder documentation for ListInputsResponse
    ListMultiplexProgramsResponse:
      type: object
      properties:
        MultiplexPrograms:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexProgramSummary'
            - xml:
                name: multiplexPrograms
              description: List of multiplex programs.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: Token for the next ListMultiplexProgram request.
      description: Placeholder documentation for ListMultiplexProgramsResponse
    ListMultiplexesResponse:
      type: object
      properties:
        Multiplexes:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexSummary'
            - xml:
                name: multiplexes
              description: List of multiplexes.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: Token for the next ListMultiplexes request.
      description: Placeholder documentation for ListMultiplexesResponse
    ListOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: Token to retrieve the next page of results
        Offerings:
          allOf:
            - $ref: '#/components/schemas/__listOfOffering'
            - xml:
                name: offerings
              description: List of offerings
      description: Placeholder documentation for ListOfferingsResponse
    ListReservationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: Token to retrieve the next page of results
        Reservations:
          allOf:
            - $ref: '#/components/schemas/__listOfReservation'
            - xml:
                name: reservations
              description: List of reservations
      description: Placeholder documentation for ListReservationsResponse
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: Placeholder documentation for ListTagsForResourceResponse
    PurchaseOfferingResponse:
      type: object
      properties:
        Reservation:
          allOf:
            - $ref: '#/components/schemas/Reservation'
            - xml:
                name: reservation
      description: Placeholder documentation for PurchaseOfferingResponse
    RejectInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for RejectInputDeviceTransferResponse
    StartChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for StartChannelResponse
    StartMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
            - xml:
                name: destinations
              description: A list of the multiplex output destinations.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: Placeholder documentation for StartMultiplexResponse
    StopChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for StopChannelResponse
    StopMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
            - xml:
                name: destinations
              description: A list of the multiplex output destinations.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: Placeholder documentation for StopMultiplexResponse
    TransferInputDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for TransferInputDeviceResponse
    UpdateChannelResponse:
      type: object
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - xml:
                name: channel
      description: Placeholder documentation for UpdateChannelResponse
    UpdateChannelClassResponse:
      type: object
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - xml:
                name: channel
      description: Placeholder documentation for UpdateChannelClassResponse
    UpdateInputResponse:
      type: object
      properties:
        Input:
          allOf:
            - $ref: '#/components/schemas/Input'
            - xml:
                name: input
      description: Placeholder documentation for UpdateInputResponse
    InputDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID for the device.
      description: Settings for an input device.
    UpdateInputDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique ARN of the input device.
        ConnectionState:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConnectionState'
            - xml:
                name: connectionState
              description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
            - $ref: '#/components/schemas/DeviceSettingsSyncState'
            - xml:
                name: deviceSettingsSyncState
              description: 'The status of the action to synchronize the device configuration. If you change the configuration of the input device (for example, the maximum bitrate), MediaLive sends the new data to the device. The device might not update itself immediately. SYNCED means the device has updated its configuration. SYNCING means that it has not updated its configuration.'
        DeviceUpdateStatus:
          allOf:
            - $ref: '#/components/schemas/DeviceUpdateStatus'
            - xml:
                name: deviceUpdateStatus
              description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceHdSettings'
            - xml:
                name: hdDeviceSettings
              description: Settings that describe an input device that is type HD.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID of the input device.
        MacAddress:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: macAddress
              description: The network MAC address of the input device.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceNetworkSettings'
            - xml:
                name: networkSettings
              description: The network settings for the input device.
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: serialNumber
              description: The unique serial number of the input device.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputDeviceType'
            - xml:
                name: type
              description: The type of the input device.
        UhdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceUhdSettings'
            - xml:
                name: uhdDeviceSettings
              description: Settings that describe an input device that is type UHD.
      description: Placeholder documentation for UpdateInputDeviceResponse
    InputDeviceConfiguredInput:
      type: string
      enum:
        - AUTO
        - HDMI
        - SDI
      description: The source to activate (use) from the input device.
    __integer:
      type: integer
      description: Placeholder documentation for __integer
    UpdateInputSecurityGroupResponse:
      type: object
      properties:
        SecurityGroup:
          allOf:
            - $ref: '#/components/schemas/InputSecurityGroup'
            - xml:
                name: securityGroup
      description: Placeholder documentation for UpdateInputSecurityGroupResponse
    UpdateMultiplexResponse:
      type: object
      properties:
        Multiplex:
          allOf:
            - $ref: '#/components/schemas/Multiplex'
            - xml:
                name: multiplex
              description: The updated multiplex.
      description: Placeholder documentation for UpdateMultiplexResponse
    UpdateMultiplexProgramResponse:
      type: object
      properties:
        MultiplexProgram:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgram'
            - xml:
                name: multiplexProgram
              description: The updated multiplex program.
      description: Placeholder documentation for UpdateMultiplexProgramResponse
    UpdateReservationResponse:
      type: object
      properties:
        Reservation:
          allOf:
            - $ref: '#/components/schemas/Reservation'
            - xml:
                name: reservation
      description: Placeholder documentation for UpdateReservationResponse
    AacCodingMode:
      type: string
      enum:
        - AD_RECEIVER_MIX
        - CODING_MODE_1_0
        - CODING_MODE_1_1
        - CODING_MODE_2_0
        - CODING_MODE_5_1
      description: Aac Coding Mode
    AacInputType:
      type: string
      enum:
        - BROADCASTER_MIXED_AD
        - NORMAL
      description: Aac Input Type
    AacProfile:
      type: string
      enum:
        - HEV1
        - HEV2
        - LC
      description: Aac Profile
    AacRateControlMode:
      type: string
      enum:
        - CBR
        - VBR
      description: Aac Rate Control Mode
    AacRawFormat:
      type: string
      enum:
        - LATM_LOAS
        - NONE
      description: Aac Raw Format
    __double:
      type: number
      description: Placeholder documentation for __double
      format: double
    AacSpec:
      type: string
      enum:
        - MPEG2
        - MPEG4
      description: Aac Spec
    AacVbrQuality:
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM_HIGH
        - MEDIUM_LOW
      description: Aac Vbr Quality
    AacSettings:
      type: object
      properties:
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: bitrate
              description: Average bitrate in bits/second. Valid values depend on rate control mode and profile.
        CodingMode:
          allOf:
            - $ref: '#/components/schemas/AacCodingMode'
            - xml:
                name: codingMode
              description: 'Mono, Stereo, or 5.1 channel layout. Valid values depend on rate control mode and profile. The adReceiverMix setting receives a stereo description plus control track and emits a mono AAC encode of the description track, with control data emitted in the PES header as per ETSI TS 101 154 Annex E.'
        InputType:
          allOf:
            - $ref: '#/components/schemas/AacInputType'
            - xml:
                name: inputType
              description: |-
                Set to "broadcasterMixedAd" when input contains pre-mixed main audio + AD (narration) as a stereo pair.  The Audio Type field (audioType) will be set to 3, which signals to downstream systems that this stream contains "broadcaster mixed AD". Note that the input received by the encoder must contain pre-mixed audio; the encoder does not perform the mixing. The values in audioTypeControl and audioType (in AudioDescription) are ignored when set to broadcasterMixedAd.

                Leave set to "normal" when input does not contain pre-mixed audio + AD.
        Profile:
          allOf:
            - $ref: '#/components/schemas/AacProfile'
            - xml:
                name: profile
              description: AAC Profile.
        RateControlMode:
          allOf:
            - $ref: '#/components/schemas/AacRateControlMode'
            - xml:
                name: rateControlMode
              description: Rate Control Mode.
        RawFormat:
          allOf:
            - $ref: '#/components/schemas/AacRawFormat'
            - xml:
                name: rawFormat
              description: Sets LATM / LOAS AAC output for raw containers.
        SampleRate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: sampleRate
              description: Sample rate in Hz. Valid values depend on rate control mode and profile.
        Spec:
          allOf:
            - $ref: '#/components/schemas/AacSpec'
            - xml:
                name: spec
              description: Use MPEG-2 AAC audio instead of MPEG-4 AAC audio for raw or MPEG-2 Transport Stream containers.
        VbrQuality:
          allOf:
            - $ref: '#/components/schemas/AacVbrQuality'
            - xml:
                name: vbrQuality
              description: VBR Quality Level - Only used if rateControlMode is VBR.
      description: Aac Settings
    Ac3BitstreamMode:
      type: string
      enum:
        - COMMENTARY
        - COMPLETE_MAIN
        - DIALOGUE
        - EMERGENCY
        - HEARING_IMPAIRED
        - MUSIC_AND_EFFECTS
        - VISUALLY_IMPAIRED
        - VOICE_OVER
      description: Ac3 Bitstream Mode
    Ac3CodingMode:
      type: string
      enum:
        - CODING_MODE_1_0
        - CODING_MODE_1_1
        - CODING_MODE_2_0
        - CODING_MODE_3_2_LFE
      description: Ac3 Coding Mode
    Ac3DrcProfile:
      type: string
      enum:
        - FILM_STANDARD
        - NONE
      description: Ac3 Drc Profile
    Ac3LfeFilter:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Ac3 Lfe Filter
    Ac3MetadataControl:
      type: string
      enum:
        - FOLLOW_INPUT
        - USE_CONFIGURED
      description: Ac3 Metadata Control
    __integerMin1Max31:
      type: integer
      description: Placeholder documentation for __integerMin1Max31
      minimum: 1
      maximum: 31
    Ac3Settings:
      type: object
      properties:
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: bitrate
              description: Average bitrate in bits/second. Valid bitrates depend on the coding mode.
        BitstreamMode:
          allOf:
            - $ref: '#/components/schemas/Ac3BitstreamMode'
            - xml:
                name: bitstreamMode
              description: Specifies the bitstream mode (bsmod) for the emitted AC-3 stream. See ATSC A/52-2012 for background on these values.
        CodingMode:
          allOf:
            - $ref: '#/components/schemas/Ac3CodingMode'
            - xml:
                name: codingMode
              description: Dolby Digital coding mode. Determines number of channels.
        Dialnorm:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max31'
            - xml:
                name: dialnorm
              description: 'Sets the dialnorm for the output. If excluded and input audio is Dolby Digital, dialnorm will be passed through.'
        DrcProfile:
          allOf:
            - $ref: '#/components/schemas/Ac3DrcProfile'
            - xml:
                name: drcProfile
              description: 'If set to filmStandard, adds dynamic range compression signaling to the output bitstream as defined in the Dolby Digital specification.'
        LfeFilter:
          allOf:
            - $ref: '#/components/schemas/Ac3LfeFilter'
            - xml:
                name: lfeFilter
              description: 'When set to enabled, applies a 120Hz lowpass filter to the LFE channel prior to encoding. Only valid in codingMode32Lfe mode.'
        MetadataControl:
          allOf:
            - $ref: '#/components/schemas/Ac3MetadataControl'
            - xml:
                name: metadataControl
              description: 'When set to "followInput", encoder metadata will be sourced from the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was not supplied from one of these streams, then the static metadata settings will be used.'
      description: Ac3 Settings
    AcceptInputDeviceTransferRequest:
      type: object
      title: AcceptInputDeviceTransferRequest
      properties: {}
      description: Placeholder documentation for AcceptInputDeviceTransferRequest
    AfdSignaling:
      type: string
      enum:
        - AUTO
        - FIXED
        - NONE
      description: Afd Signaling
    __integerMin1Max4:
      type: integer
      description: Placeholder documentation for __integerMin1Max4
      minimum: 1
      maximum: 4
    AncillarySourceSettings:
      type: object
      properties:
        SourceAncillaryChannelNumber:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max4'
            - xml:
                name: sourceAncillaryChannelNumber
              description: 'Specifies the number (1 to 4) of the captions channel you want to extract from the ancillary captions. If you plan to convert the ancillary captions to another format, complete this field. If you plan to choose Embedded as the captions destination in the output (to pass through all the channels in the ancillary captions), leave this field blank because MediaLive ignores the field.'
      description: Ancillary Source Settings
    ArchiveS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
            - $ref: '#/components/schemas/S3CannedAcl'
            - xml:
                name: cannedAcl
              description: Specify the canned ACL to apply to each S3 request. Defaults to none.
      description: Archive S3 Settings
    ArchiveCdnSettings:
      type: object
      properties:
        ArchiveS3Settings:
          allOf:
            - $ref: '#/components/schemas/ArchiveS3Settings'
            - xml:
                name: archiveS3Settings
      description: Archive Cdn Settings
    M2tsSettings:
      type: object
      properties:
        AbsentInputAudioBehavior:
          allOf:
            - $ref: '#/components/schemas/M2tsAbsentInputAudioBehavior'
            - xml:
                name: absentInputAudioBehavior
              description: 'When set to drop, output audio streams will be removed from the program if the selected input audio stream is removed from the input. This allows the output audio configuration to dynamically change based on input configuration. If this is set to encodeSilence, all output audio streams will output encoded silence when not connected to an active input stream.'
        Arib:
          allOf:
            - $ref: '#/components/schemas/M2tsArib'
            - xml:
                name: arib
              description: 'When set to enabled, uses ARIB-compliant field muxing and removes video descriptor.'
        AribCaptionsPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: aribCaptionsPid
              description: Packet Identifier (PID) for ARIB Captions in the transport stream. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        AribCaptionsPidControl:
          allOf:
            - $ref: '#/components/schemas/M2tsAribCaptionsPidControl'
            - xml:
                name: aribCaptionsPidControl
              description: 'If set to auto, pid number used for ARIB Captions will be auto-selected from unused pids.  If set to useConfigured, ARIB Captions will be on the configured pid number.'
        AudioBufferModel:
          allOf:
            - $ref: '#/components/schemas/M2tsAudioBufferModel'
            - xml:
                name: audioBufferModel
              description: 'When set to dvb, uses DVB buffer model for Dolby Digital audio.  When set to atsc, the ATSC model is used.'
        AudioFramesPerPes:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: audioFramesPerPes
              description: The number of audio frames to insert for each PES packet.
        AudioPids:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioPids
              description: 'Packet Identifier (PID) of the elementary audio stream(s) in the transport stream. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values. Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).'
        AudioStreamType:
          allOf:
            - $ref: '#/components/schemas/M2tsAudioStreamType'
            - xml:
                name: audioStreamType
              description: 'When set to atsc, uses stream type = 0x81 for AC3 and stream type = 0x87 for EAC3. When set to dvb, uses stream type = 0x06.'
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: bitrate
              description: The output bitrate of the transport stream in bits per second. Setting to 0 lets the muxer automatically determine the appropriate bitrate.
        BufferModel:
          allOf:
            - $ref: '#/components/schemas/M2tsBufferModel'
            - xml:
                name: bufferModel
              description: 'Controls the timing accuracy for output network traffic. Leave as MULTIPLEX to ensure accurate network packet timing. Or set to NONE, which might result in lower latency but will result in more variability in output network packet timing. This variability might cause interruptions, jitter, or bursty behavior in your playback or receiving devices.'
        CcDescriptor:
          allOf:
            - $ref: '#/components/schemas/M2tsCcDescriptor'
            - xml:
                name: ccDescriptor
              description: 'When set to enabled, generates captionServiceDescriptor in PMT.'
        DvbNitSettings:
          allOf:
            - $ref: '#/components/schemas/DvbNitSettings'
            - xml:
                name: dvbNitSettings
              description: Inserts DVB Network Information Table (NIT) at the specified table repetition interval.
        DvbSdtSettings:
          allOf:
            - $ref: '#/components/schemas/DvbSdtSettings'
            - xml:
                name: dvbSdtSettings
              description: Inserts DVB Service Description Table (SDT) at the specified table repetition interval.
        DvbSubPids:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: dvbSubPids
              description: 'Packet Identifier (PID) for input source DVB Subtitle data to this output. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values.  Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).'
        DvbTdtSettings:
          allOf:
            - $ref: '#/components/schemas/DvbTdtSettings'
            - xml:
                name: dvbTdtSettings
              description: Inserts DVB Time and Date Table (TDT) at the specified table repetition interval.
        DvbTeletextPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: dvbTeletextPid
              description: Packet Identifier (PID) for input source DVB Teletext data to this output. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        Ebif:
          allOf:
            - $ref: '#/components/schemas/M2tsEbifControl'
            - xml:
                name: ebif
              description: 'If set to passthrough, passes any EBIF data from the input source to this output.'
        EbpAudioInterval:
          allOf:
            - $ref: '#/components/schemas/M2tsAudioInterval'
            - xml:
                name: ebpAudioInterval
              description: 'When videoAndFixedIntervals is selected, audio EBP markers will be added to partitions 3 and 4. The interval between these additional markers will be fixed, and will be slightly shorter than the video EBP marker interval. Only available when EBP Cablelabs segmentation markers are selected.  Partitions 1 and 2 will always follow the video interval.'
        EbpLookaheadMs:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max10000'
            - xml:
                name: ebpLookaheadMs
              description: 'When set, enforces that Encoder Boundary Points do not come within the specified time interval of each other by looking ahead at input video. If another EBP is going to come in within the specified time interval, the current EBP is not emitted, and the segment is "stretched" to the next marker.  The lookahead value does not add latency to the system. The Live Event must be configured elsewhere to create sufficient latency to make the lookahead accurate.'
        EbpPlacement:
          allOf:
            - $ref: '#/components/schemas/M2tsEbpPlacement'
            - xml:
                name: ebpPlacement
              description: 'Controls placement of EBP on Audio PIDs. If set to videoAndAudioPids, EBP markers will be placed on the video PID and all audio PIDs.  If set to videoPid, EBP markers will be placed on only the video PID.'
        EcmPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ecmPid
              description: This field is unused and deprecated.
        EsRateInPes:
          allOf:
            - $ref: '#/components/schemas/M2tsEsRateInPes'
            - xml:
                name: esRateInPes
              description: Include or exclude the ES Rate field in the PES header.
        EtvPlatformPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: etvPlatformPid
              description: Packet Identifier (PID) for input source ETV Platform data to this output. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        EtvSignalPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: etvSignalPid
              description: Packet Identifier (PID) for input source ETV Signal data to this output. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        FragmentTime:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0'
            - xml:
                name: fragmentTime
              description: The length in seconds of each fragment. Only used with EBP markers.
        Klv:
          allOf:
            - $ref: '#/components/schemas/M2tsKlv'
            - xml:
                name: klv
              description: 'If set to passthrough, passes any KLV data from the input source to this output.'
        KlvDataPids:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: klvDataPids
              description: 'Packet Identifier (PID) for input source KLV data to this output. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values.  Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).'
        NielsenId3Behavior:
          allOf:
            - $ref: '#/components/schemas/M2tsNielsenId3Behavior'
            - xml:
                name: nielsenId3Behavior
              description: 'If set to passthrough, Nielsen inaudible tones for media tracking will be detected in the input audio and an equivalent ID3 tag will be inserted in the output.'
        NullPacketBitrate:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0'
            - xml:
                name: nullPacketBitrate
              description: Value in bits per second of extra null packets to insert into the transport stream. This can be used if a downstream encryption system requires periodic null packets.
        PatInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000'
            - xml:
                name: patInterval
              description: 'The number of milliseconds between instances of this table in the output transport stream.  Valid values are 0, 10..1000.'
        PcrControl:
          allOf:
            - $ref: '#/components/schemas/M2tsPcrControl'
            - xml:
                name: pcrControl
              description: 'When set to pcrEveryPesPacket, a Program Clock Reference value is inserted for every Packetized Elementary Stream (PES) header. This parameter is effective only when the PCR PID is the same as the video or audio elementary stream.'
        PcrPeriod:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max500'
            - xml:
                name: pcrPeriod
              description: Maximum time in milliseconds between Program Clock Reference (PCRs) inserted into the transport stream.
        PcrPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pcrPid
              description: 'Packet Identifier (PID) of the Program Clock Reference (PCR) in the transport stream. When no value is given, the encoder will assign the same value as the Video PID. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).'
        PmtInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000'
            - xml:
                name: pmtInterval
              description: 'The number of milliseconds between instances of this table in the output transport stream. Valid values are 0, 10..1000.'
        PmtPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pmtPid
              description: Packet Identifier (PID) for the Program Map Table (PMT) in the transport stream. Can be entered as a decimal or hexadecimal value. Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        ProgramNum:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: programNum
              description: The value of the program number field in the Program Map Table.
        RateMode:
          allOf:
            - $ref: '#/components/schemas/M2tsRateMode'
            - xml:
                name: rateMode
              description: 'When vbr, does not insert null packets into transport stream to fill specified bitrate. The bitrate setting acts as the maximum bitrate when vbr is set.'
        Scte27Pids:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: scte27Pids
              description: 'Packet Identifier (PID) for input source SCTE-27 data to this output. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values.  Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).'
        Scte35Control:
          allOf:
            - $ref: '#/components/schemas/M2tsScte35Control'
            - xml:
                name: scte35Control
              description: Optionally pass SCTE-35 signals from the input source to this output.
        Scte35Pid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: scte35Pid
              description: Packet Identifier (PID) of the SCTE-35 stream in the transport stream. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        SegmentationMarkers:
          allOf:
            - $ref: '#/components/schemas/M2tsSegmentationMarkers'
            - xml:
                name: segmentationMarkers
              description: Inserts segmentation markers at each segmentationTime period. raiSegstart sets the Random Access Indicator bit in the adaptation field. raiAdapt sets the RAI bit and adds the current timecode in the private data bytes. psiSegstart inserts PAT and PMT tables at the start of segments. ebp adds Encoder Boundary Point information to the adaptation field as per OpenCable specification OC-SP-EBP-I01-130118. ebpLegacy adds Encoder Boundary Point information to the adaptation field using a legacy proprietary format.
        SegmentationStyle:
          allOf:
            - $ref: '#/components/schemas/M2tsSegmentationStyle'
            - xml:
                name: segmentationStyle
              description: |-
                The segmentation style parameter controls how segmentation markers are inserted into the transport stream. With avails, it is possible that segments may be truncated, which can influence where future segmentation markers are inserted.

                When a segmentation style of "resetCadence" is selected and a segment is truncated due to an avail, we will reset the segmentation cadence. This means the subsequent segment will have a duration of $segmentationTime seconds.

                When a segmentation style of "maintainCadence" is selected and a segment is truncated due to an avail, we will not reset the segmentation cadence. This means the subsequent segment will likely be truncated as well. However, all segments after that will have a duration of $segmentationTime seconds. Note that EBP lookahead is a slight exception to this rule.
        SegmentationTime:
          allOf:
            - $ref: '#/components/schemas/__doubleMin1'
            - xml:
                name: segmentationTime
              description: The length in seconds of each segment. Required unless markers is set to _none_.
        TimedMetadataBehavior:
          allOf:
            - $ref: '#/components/schemas/M2tsTimedMetadataBehavior'
            - xml:
                name: timedMetadataBehavior
              description: 'When set to passthrough, timed metadata will be passed through from input to output.'
        TimedMetadataPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: timedMetadataPid
              description: Packet Identifier (PID) of the timed metadata stream in the transport stream. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        TransportStreamId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: transportStreamId
              description: The value of the transport stream ID field in the Program Map Table.
        VideoPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoPid
              description: Packet Identifier (PID) of the elementary video stream in the transport stream. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
      description: M2ts Settings
    RawSettings:
      type: object
      properties: {}
      description: Raw Settings
    ArchiveContainerSettings:
      type: object
      properties:
        M2tsSettings:
          allOf:
            - $ref: '#/components/schemas/M2tsSettings'
            - xml:
                name: m2tsSettings
        RawSettings:
          allOf:
            - $ref: '#/components/schemas/RawSettings'
            - xml:
                name: rawSettings
      description: Archive Container Settings
    OutputLocationRef:
      type: object
      properties:
        DestinationRefId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destinationRefId
      description: Reference to an OutputDestination ID defined in the channel
    __integerMin1:
      type: integer
      description: Placeholder documentation for __integerMin1
      minimum: 1
    ArchiveGroupSettings:
      type: object
      required:
        - Destination
      properties:
        ArchiveCdnSettings:
          allOf:
            - $ref: '#/components/schemas/ArchiveCdnSettings'
            - xml:
                name: archiveCdnSettings
              description: Parameters that control interactions with the CDN.
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: A directory and base filename where archive files should be written.
        RolloverInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: rolloverInterval
              description: Number of seconds to write to archive file before closing and starting a new one.
      description: Archive Group Settings
    ArchiveOutputSettings:
      type: object
      required:
        - ContainerSettings
      properties:
        ContainerSettings:
          allOf:
            - $ref: '#/components/schemas/ArchiveContainerSettings'
            - xml:
                name: containerSettings
              description: Settings specific to the container type of the file.
        Extension:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: extension
              description: 'Output file extension. If excluded, this will be auto-selected from the container type.'
        NameModifier:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nameModifier
              description: String concatenated to the end of the destination filename.  Required for multiple outputs of the same type.
      description: Archive Output Settings
    S3CannedAcl:
      type: string
      enum:
        - AUTHENTICATED_READ
        - BUCKET_OWNER_FULL_CONTROL
        - BUCKET_OWNER_READ
        - PUBLIC_READ
      description: S3 Canned Acl
    AribDestinationSettings:
      type: object
      properties: {}
      description: Arib Destination Settings
    AribSourceSettings:
      type: object
      properties: {}
      description: Arib Source Settings
    __listOfInputChannelLevel:
      type: array
      description: Placeholder documentation for __listOfInputChannelLevel
      items:
        $ref: '#/components/schemas/InputChannelLevel'
    __integerMin0Max7:
      type: integer
      description: Placeholder documentation for __integerMin0Max7
      minimum: 0
      maximum: 7
    AudioChannelMapping:
      type: object
      required:
        - OutputChannel
        - InputChannelLevels
      properties:
        InputChannelLevels:
          allOf:
            - $ref: '#/components/schemas/__listOfInputChannelLevel'
            - xml:
                name: inputChannelLevels
              description: Indices and gain values for each input channel that should be remixed into this output channel.
        OutputChannel:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max7'
            - xml:
                name: outputChannel
              description: The index of the output channel being produced.
      description: Audio Channel Mapping
    Eac3Settings:
      type: object
      properties:
        AttenuationControl:
          allOf:
            - $ref: '#/components/schemas/Eac3AttenuationControl'
            - xml:
                name: attenuationControl
              description: 'When set to attenuate3Db, applies a 3 dB attenuation to the surround channels. Only used for 3/2 coding mode.'
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: bitrate
              description: Average bitrate in bits/second. Valid bitrates depend on the coding mode.
        BitstreamMode:
          allOf:
            - $ref: '#/components/schemas/Eac3BitstreamMode'
            - xml:
                name: bitstreamMode
              description: Specifies the bitstream mode (bsmod) for the emitted E-AC-3 stream. See ATSC A/52-2012 (Annex E) for background on these values.
        CodingMode:
          allOf:
            - $ref: '#/components/schemas/Eac3CodingMode'
            - xml:
                name: codingMode
              description: Dolby Digital Plus coding mode. Determines number of channels.
        DcFilter:
          allOf:
            - $ref: '#/components/schemas/Eac3DcFilter'
            - xml:
                name: dcFilter
              description: 'When set to enabled, activates a DC highpass filter for all input channels.'
        Dialnorm:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max31'
            - xml:
                name: dialnorm
              description: 'Sets the dialnorm for the output. If blank and input audio is Dolby Digital Plus, dialnorm will be passed through.'
        DrcLine:
          allOf:
            - $ref: '#/components/schemas/Eac3DrcLine'
            - xml:
                name: drcLine
              description: Sets the Dolby dynamic range compression profile.
        DrcRf:
          allOf:
            - $ref: '#/components/schemas/Eac3DrcRf'
            - xml:
                name: drcRf
              description: 'Sets the profile for heavy Dolby dynamic range compression, ensures that the instantaneous signal peaks do not exceed specified levels.'
        LfeControl:
          allOf:
            - $ref: '#/components/schemas/Eac3LfeControl'
            - xml:
                name: lfeControl
              description: 'When encoding 3/2 audio, setting to lfe enables the LFE channel'
        LfeFilter:
          allOf:
            - $ref: '#/components/schemas/Eac3LfeFilter'
            - xml:
                name: lfeFilter
              description: 'When set to enabled, applies a 120Hz lowpass filter to the LFE channel prior to encoding. Only valid with codingMode32 coding mode.'
        LoRoCenterMixLevel:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: loRoCenterMixLevel
              description: Left only/Right only center mix level. Only used for 3/2 coding mode.
        LoRoSurroundMixLevel:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: loRoSurroundMixLevel
              description: Left only/Right only surround mix level. Only used for 3/2 coding mode.
        LtRtCenterMixLevel:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: ltRtCenterMixLevel
              description: Left total/Right total center mix level. Only used for 3/2 coding mode.
        LtRtSurroundMixLevel:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: ltRtSurroundMixLevel
              description: Left total/Right total surround mix level. Only used for 3/2 coding mode.
        MetadataControl:
          allOf:
            - $ref: '#/components/schemas/Eac3MetadataControl'
            - xml:
                name: metadataControl
              description: 'When set to followInput, encoder metadata will be sourced from the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was not supplied from one of these streams, then the static metadata settings will be used.'
        PassthroughControl:
          allOf:
            - $ref: '#/components/schemas/Eac3PassthroughControl'
            - xml:
                name: passthroughControl
              description: 'When set to whenPossible, input DD+ audio will be passed through if it is present on the input. This detection is dynamic over the life of the transcode. Inputs that alternate between DD+ and non-DD+ content will have a consistent DD+ output as the system alternates between passthrough and encoding.'
        PhaseControl:
          allOf:
            - $ref: '#/components/schemas/Eac3PhaseControl'
            - xml:
                name: phaseControl
              description: 'When set to shift90Degrees, applies a 90-degree phase shift to the surround channels. Only used for 3/2 coding mode.'
        StereoDownmix:
          allOf:
            - $ref: '#/components/schemas/Eac3StereoDownmix'
            - xml:
                name: stereoDownmix
              description: Stereo downmix preference. Only used for 3/2 coding mode.
        SurroundExMode:
          allOf:
            - $ref: '#/components/schemas/Eac3SurroundExMode'
            - xml:
                name: surroundExMode
              description: 'When encoding 3/2 audio, sets whether an extra center back surround channel is matrix encoded into the left and right surround channels.'
        SurroundMode:
          allOf:
            - $ref: '#/components/schemas/Eac3SurroundMode'
            - xml:
                name: surroundMode
              description: 'When encoding 2/0 audio, sets whether Dolby Surround is matrix encoded into the two channels.'
      description: Eac3 Settings
    Mp2Settings:
      type: object
      properties:
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: bitrate
              description: Average bitrate in bits/second.
        CodingMode:
          allOf:
            - $ref: '#/components/schemas/Mp2CodingMode'
            - xml:
                name: codingMode
              description: The MPEG2 Audio coding mode.  Valid values are codingMode10 (for mono) or codingMode20 (for stereo).
        SampleRate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: sampleRate
              description: Sample rate in Hz.
      description: Mp2 Settings
    PassThroughSettings:
      type: object
      properties: {}
      description: Pass Through Settings
    WavSettings:
      type: object
      properties:
        BitDepth:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: bitDepth
              description: Bits per sample.
        CodingMode:
          allOf:
            - $ref: '#/components/schemas/WavCodingMode'
            - xml:
                name: codingMode
              description: The audio coding mode for the WAV audio. The mode determines the number of channels in the audio.
        SampleRate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: sampleRate
              description: Sample rate in Hz.
      description: Wav Settings
    AudioCodecSettings:
      type: object
      properties:
        AacSettings:
          allOf:
            - $ref: '#/components/schemas/AacSettings'
            - xml:
                name: aacSettings
        Ac3Settings:
          allOf:
            - $ref: '#/components/schemas/Ac3Settings'
            - xml:
                name: ac3Settings
        Eac3Settings:
          allOf:
            - $ref: '#/components/schemas/Eac3Settings'
            - xml:
                name: eac3Settings
        Mp2Settings:
          allOf:
            - $ref: '#/components/schemas/Mp2Settings'
            - xml:
                name: mp2Settings
        PassThroughSettings:
          allOf:
            - $ref: '#/components/schemas/PassThroughSettings'
            - xml:
                name: passThroughSettings
        WavSettings:
          allOf:
            - $ref: '#/components/schemas/WavSettings'
            - xml:
                name: wavSettings
      description: Audio Codec Settings
    AudioNormalizationSettings:
      type: object
      properties:
        Algorithm:
          allOf:
            - $ref: '#/components/schemas/AudioNormalizationAlgorithm'
            - xml:
                name: algorithm
              description: 'Audio normalization algorithm to use. itu17701 conforms to the CALM Act specification, itu17702 conforms to the EBU R-128 specification.'
        AlgorithmControl:
          allOf:
            - $ref: '#/components/schemas/AudioNormalizationAlgorithmControl'
            - xml:
                name: algorithmControl
              description: 'When set to correctAudio the output audio is corrected using the chosen algorithm. If set to measureOnly, the audio will be measured but not adjusted.'
        TargetLkfs:
          allOf:
            - $ref: '#/components/schemas/__doubleMinNegative59Max0'
            - xml:
                name: targetLkfs
              description: 'Target LKFS(loudness) to adjust volume to. If no value is entered, a default value will be used according to the chosen algorithm.  The CALM Act (1770-1) recommends a target of -24 LKFS. The EBU R-128 specification (1770-2) recommends a target of -23 LKFS.'
      description: Audio Normalization Settings
    AudioType:
      type: string
      enum:
        - CLEAN_EFFECTS
        - HEARING_IMPAIRED
        - UNDEFINED
        - VISUAL_IMPAIRED_COMMENTARY
      description: Audio Type
    AudioDescriptionAudioTypeControl:
      type: string
      enum:
        - FOLLOW_INPUT
        - USE_CONFIGURED
      description: Audio Description Audio Type Control
    __stringMin1Max35:
      type: string
      description: Placeholder documentation for __stringMin1Max35
      minLength: 1
      maxLength: 35
    AudioDescriptionLanguageCodeControl:
      type: string
      enum:
        - FOLLOW_INPUT
        - USE_CONFIGURED
      description: Audio Description Language Code Control
    RemixSettings:
      type: object
      required:
        - ChannelMappings
      properties:
        ChannelMappings:
          allOf:
            - $ref: '#/components/schemas/__listOfAudioChannelMapping'
            - xml:
                name: channelMappings
              description: 'Mapping of input channels to output channels, with appropriate gain adjustments.'
        ChannelsIn:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max16'
            - xml:
                name: channelsIn
              description: Number of input channels to be used.
        ChannelsOut:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max8'
            - xml:
                name: channelsOut
              description: |-
                Number of output channels to be produced.
                Valid values: 1, 2, 4, 6, 8
      description: Remix Settings
    AudioDescription:
      type: object
      required:
        - AudioSelectorName
        - Name
      properties:
        AudioNormalizationSettings:
          allOf:
            - $ref: '#/components/schemas/AudioNormalizationSettings'
            - xml:
                name: audioNormalizationSettings
              description: Advanced audio normalization settings.
        AudioSelectorName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioSelectorName
              description: The name of the AudioSelector used as the source for this AudioDescription.
        AudioType:
          allOf:
            - $ref: '#/components/schemas/AudioType'
            - xml:
                name: audioType
              description: Applies only if audioTypeControl is useConfigured. The values for audioType are defined in ISO-IEC 13818-1.
        AudioTypeControl:
          allOf:
            - $ref: '#/components/schemas/AudioDescriptionAudioTypeControl'
            - xml:
                name: audioTypeControl
              description: |-
                Determines how audio type is determined.
                  followInput: If the input contains an ISO 639 audioType, then that value is passed through to the output. If the input contains no ISO 639 audioType, the value in Audio Type is included in the output.
                  useConfigured: The value in Audio Type is included in the output.
                Note that this field and audioType are both ignored if inputType is broadcasterMixedAd.
        CodecSettings:
          allOf:
            - $ref: '#/components/schemas/AudioCodecSettings'
            - xml:
                name: codecSettings
              description: Audio codec settings.
        LanguageCode:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max35'
            - xml:
                name: languageCode
              description: 'RFC 5646 language code representing the language of the audio output track. Only used if languageControlMode is useConfigured, or there is no ISO 639 language code specified in the input.'
        LanguageCodeControl:
          allOf:
            - $ref: '#/components/schemas/AudioDescriptionLanguageCodeControl'
            - xml:
                name: languageCodeControl
              description: 'Choosing followInput will cause the ISO 639 language code of the output to follow the ISO 639 language code of the input. The languageCode will be used when useConfigured is set, or when followInput is selected but there is no ISO 639 language code specified by the input.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of this AudioDescription. Outputs will use this name to uniquely identify this AudioDescription.  Description names should be unique within this Live Event.
        RemixSettings:
          allOf:
            - $ref: '#/components/schemas/RemixSettings'
            - xml:
                name: remixSettings
              description: Settings that control how input audio channels are remixed into the output audio channels.
        StreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamName
              description: 'Used for MS Smooth and Apple HLS outputs. Indicates the name displayed by the player (eg. English, or Director Commentary).'
      description: Audio Description
    __stringMin1:
      type: string
      description: Placeholder documentation for __stringMin1
      minLength: 1
    AudioHlsRenditionSelection:
      type: object
      required:
        - Name
        - GroupId
      properties:
        GroupId:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: groupId
              description: 'Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: name
              description: 'Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.'
      description: Audio Hls Rendition Selection
    AudioLanguageSelectionPolicy:
      type: string
      enum:
        - LOOSE
        - STRICT
      description: Audio Language Selection Policy
    AudioLanguageSelection:
      type: object
      required:
        - LanguageCode
      properties:
        LanguageCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: languageCode
              description: Selects a specific three-letter language code from within an audio source.
        LanguageSelectionPolicy:
          allOf:
            - $ref: '#/components/schemas/AudioLanguageSelectionPolicy'
            - xml:
                name: languageSelectionPolicy
              description: 'When set to "strict", the transport stream demux strictly identifies audio streams by their language descriptor. If a PMT update occurs such that an audio stream matching the initially selected language is no longer present then mute will be encoded until the language returns. If "loose", then on a PMT update the demux will choose another audio stream in the program with the same stream type if it can''t find one with the same language.'
      description: Audio Language Selection
    AudioNormalizationAlgorithm:
      type: string
      enum:
        - ITU_1770_1
        - ITU_1770_2
      description: Audio Normalization Algorithm
    AudioNormalizationAlgorithmControl:
      type: string
      enum:
        - CORRECT_AUDIO
      description: Audio Normalization Algorithm Control
    __doubleMinNegative59Max0:
      type: number
      description: Placeholder documentation for __doubleMinNegative59Max0
      format: double
    AudioOnlyHlsSegmentType:
      type: string
      enum:
        - AAC
        - FMP4
      description: Audio Only Hls Segment Type
    InputLocation:
      type: object
      required:
        - Uri
      properties:
        PasswordParam:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: passwordParam
              description: key used to extract the password from EC2 Parameter store
        Uri:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: uri
              description: 'Uniform Resource Identifier - This should be a path to a file accessible to the Live system (eg. a http:// URI) depending on the output type. For example, a RTMP destination should have a uri simliar to: "rtmp://fmsserver/live".'
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: Documentation update needed
      description: Input Location
    AudioOnlyHlsTrackType:
      type: string
      enum:
        - ALTERNATE_AUDIO_AUTO_SELECT
        - ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT
        - ALTERNATE_AUDIO_NOT_AUTO_SELECT
        - AUDIO_ONLY_VARIANT_STREAM
      description: Audio Only Hls Track Type
    AudioOnlyHlsSettings:
      type: object
      properties:
        AudioGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioGroupId
              description: Specifies the group to which the audio Rendition belongs.
        AudioOnlyImage:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: audioOnlyImage
              description: |-
                Optional. Specifies the .jpg or .png image to use as the cover art for an audio-only output. We recommend a low bit-size file because the image increases the output audio bandwidth.

                The image is attached to the audio as an ID3 tag, frame type APIC, picture type 0x10, as per the "ID3 tag version 2.4.0 - Native Frames" standard.
        AudioTrackType:
          allOf:
            - $ref: '#/components/schemas/AudioOnlyHlsTrackType'
            - xml:
                name: audioTrackType
              description: |-
                Four types of audio-only tracks are supported:

                Audio-Only Variant Stream
                The client can play back this audio-only stream instead of video in low-bandwidth scenarios. Represented as an EXT-X-STREAM-INF in the HLS manifest.

                Alternate Audio, Auto Select, Default
                Alternate rendition that the client should try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=YES, AUTOSELECT=YES

                Alternate Audio, Auto Select, Not Default
                Alternate rendition that the client may try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=YES

                Alternate Audio, not Auto Select
                Alternate rendition that the client will not try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=NO
        SegmentType:
          allOf:
            - $ref: '#/components/schemas/AudioOnlyHlsSegmentType'
            - xml:
                name: segmentType
              description: Specifies the segment type.
      description: Audio Only Hls Settings
    __integerMin0Max8191:
      type: integer
      description: Placeholder documentation for __integerMin0Max8191
      minimum: 0
      maximum: 8191
    AudioPidSelection:
      type: object
      required:
        - Pid
      properties:
        Pid:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max8191'
            - xml:
                name: pid
              description: Selects a specific PID from within a source.
      description: Audio Pid Selection
    AudioSelectorSettings:
      type: object
      properties:
        AudioHlsRenditionSelection:
          allOf:
            - $ref: '#/components/schemas/AudioHlsRenditionSelection'
            - xml:
                name: audioHlsRenditionSelection
        AudioLanguageSelection:
          allOf:
            - $ref: '#/components/schemas/AudioLanguageSelection'
            - xml:
                name: audioLanguageSelection
        AudioPidSelection:
          allOf:
            - $ref: '#/components/schemas/AudioPidSelection'
            - xml:
                name: audioPidSelection
        AudioTrackSelection:
          allOf:
            - $ref: '#/components/schemas/AudioTrackSelection'
            - xml:
                name: audioTrackSelection
      description: Audio Selector Settings
    AudioSelector:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: name
              description: The name of this AudioSelector. AudioDescriptions will use this name to uniquely identify this Selector.  Selector names should be unique per input.
        SelectorSettings:
          allOf:
            - $ref: '#/components/schemas/AudioSelectorSettings'
            - xml:
                name: selectorSettings
              description: The audio selector settings.
      description: Audio Selector
    AudioTrackSelection:
      type: object
      required:
        - Tracks
      properties:
        Tracks:
          allOf:
            - $ref: '#/components/schemas/__listOfAudioTrack'
            - xml:
                name: tracks
              description: Selects one or more unique audio tracks from within a source.
      description: Audio Track Selection
    __integerMin1000:
      type: integer
      description: Placeholder documentation for __integerMin1000
      minimum: 1000
    AudioSilenceFailoverSettings:
      type: object
      required:
        - AudioSelectorName
      properties:
        AudioSelectorName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioSelectorName
              description: 'The name of the audio selector in the input that MediaLive should monitor to detect silence. Select your most important rendition. If you didn''t create an audio selector in this input, leave blank.'
        AudioSilenceThresholdMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000'
            - xml:
                name: audioSilenceThresholdMsec
              description: The amount of time (in milliseconds) that the active input must be silent before automatic input failover occurs. Silence is defined as audio loss or audio quieter than -50 dBFS.
      description: Placeholder documentation for AudioSilenceFailoverSettings
    AudioTrack:
      type: object
      required:
        - Track
      properties:
        Track:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: track
              description: 1-based integer value that maps to a specific audio track
      description: Audio Track
    __listOfAudioTrack:
      type: array
      description: Placeholder documentation for __listOfAudioTrack
      items:
        $ref: '#/components/schemas/AudioTrack'
    AuthenticationScheme:
      type: string
      enum:
        - AKAMAI
        - COMMON
      description: Authentication Scheme
    __listOfFailoverCondition:
      type: array
      description: Placeholder documentation for __listOfFailoverCondition
      items:
        $ref: '#/components/schemas/FailoverCondition'
    InputPreference:
      type: string
      enum:
        - EQUAL_INPUT_PREFERENCE
        - PRIMARY_INPUT_PREFERRED
      description: |
        Input preference when deciding which input to make active when a previously failed input has recovered.
        If \"EQUAL_INPUT_PREFERENCE\", then the active input will stay active as long as it is healthy.
        If \"PRIMARY_INPUT_PREFERRED\", then always switch back to the primary input when it is healthy.
    AutomaticInputFailoverSettings:
      type: object
      required:
        - SecondaryInputId
      properties:
        ErrorClearTimeMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: errorClearTimeMsec
              description: 'This clear time defines the requirement a recovered input must meet to be considered healthy. The input must have no failover conditions for this length of time. Enter a time in milliseconds. This value is particularly important if the input_preference for the failover pair is set to PRIMARY_INPUT_PREFERRED, because after this time, MediaLive will switch back to the primary input.'
        FailoverConditions:
          allOf:
            - $ref: '#/components/schemas/__listOfFailoverCondition'
            - xml:
                name: failoverConditions
              description: 'A list of failover conditions. If any of these conditions occur, MediaLive will perform a failover to the other input.'
        InputPreference:
          allOf:
            - $ref: '#/components/schemas/InputPreference'
            - xml:
                name: inputPreference
              description: Input preference when deciding which input to make active when a previously failed input has recovered.
        SecondaryInputId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secondaryInputId
              description: The input ID of the secondary input in the automatic input failover pair.
      description: The settings for Automatic Input Failover.
    AvailBlankingState:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Avail Blanking State
    AvailSettings:
      type: object
      properties:
        Scte35SpliceInsert:
          allOf:
            - $ref: '#/components/schemas/Scte35SpliceInsert'
            - xml:
                name: scte35SpliceInsert
        Scte35TimeSignalApos:
          allOf:
            - $ref: '#/components/schemas/Scte35TimeSignalApos'
            - xml:
                name: scte35TimeSignalApos
      description: Avail Settings
    Scte35SpliceInsert:
      type: object
      properties:
        AdAvailOffset:
          allOf:
            - $ref: '#/components/schemas/__integerMinNegative1000Max1000'
            - xml:
                name: adAvailOffset
              description: 'When specified, this offset (in milliseconds) is added to the input Ad Avail PTS time. This only applies to embedded SCTE 104/35 messages and does not apply to OOB messages.'
        NoRegionalBlackoutFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35SpliceInsertNoRegionalBlackoutBehavior'
            - xml:
                name: noRegionalBlackoutFlag
              description: 'When set to ignore, Segment Descriptors with noRegionalBlackoutFlag set to 0 will no longer trigger blackouts or Ad Avail slates'
        WebDeliveryAllowedFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35SpliceInsertWebDeliveryAllowedBehavior'
            - xml:
                name: webDeliveryAllowedFlag
              description: 'When set to ignore, Segment Descriptors with webDeliveryAllowedFlag set to 0 will no longer trigger blackouts or Ad Avail slates'
      description: Scte35 Splice Insert
    Scte35TimeSignalApos:
      type: object
      properties:
        AdAvailOffset:
          allOf:
            - $ref: '#/components/schemas/__integerMinNegative1000Max1000'
            - xml:
                name: adAvailOffset
              description: 'When specified, this offset (in milliseconds) is added to the input Ad Avail PTS time. This only applies to embedded SCTE 104/35 messages and does not apply to OOB messages.'
        NoRegionalBlackoutFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35AposNoRegionalBlackoutBehavior'
            - xml:
                name: noRegionalBlackoutFlag
              description: 'When set to ignore, Segment Descriptors with noRegionalBlackoutFlag set to 0 will no longer trigger blackouts or Ad Avail slates'
        WebDeliveryAllowedFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35AposWebDeliveryAllowedBehavior'
            - xml:
                name: webDeliveryAllowedFlag
              description: 'When set to ignore, Segment Descriptors with webDeliveryAllowedFlag set to 0 will no longer trigger blackouts or Ad Avail slates'
      description: Scte35 Time Signal Apos
    BatchDeleteRequest:
      type: object
      title: BatchDeleteRequest
      properties:
        ChannelIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: channelIds
              description: List of channel IDs
        InputIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputIds
              description: List of input IDs
        InputSecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputSecurityGroupIds
              description: List of input security group IDs
        MultiplexIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: multiplexIds
              description: List of multiplex IDs
      description: A request to delete resources
    __listOfBatchFailedResultModel:
      type: array
      description: Placeholder documentation for __listOfBatchFailedResultModel
      items:
        $ref: '#/components/schemas/BatchFailedResultModel'
    __listOfBatchSuccessfulResultModel:
      type: array
      description: Placeholder documentation for __listOfBatchSuccessfulResultModel
      items:
        $ref: '#/components/schemas/BatchSuccessfulResultModel'
    BatchFailedResultModel:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: ARN of the resource
        Code:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: code
              description: Error code for the failed operation
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: ID of the resource
        Message:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: message
              description: Error message for the failed operation
      description: Details from a failed operation
    BatchScheduleActionCreateRequest:
      type: object
      required:
        - ScheduleActions
      properties:
        ScheduleActions:
          allOf:
            - $ref: '#/components/schemas/__listOfScheduleAction'
            - xml:
                name: scheduleActions
              description: A list of schedule actions to create.
      description: A list of schedule actions to create (in a request) or that have been created (in a response).
    BatchScheduleActionCreateResult:
      type: object
      required:
        - ScheduleActions
      properties:
        ScheduleActions:
          allOf:
            - $ref: '#/components/schemas/__listOfScheduleAction'
            - xml:
                name: scheduleActions
              description: List of actions that have been created in the schedule.
      description: List of actions that have been created in the schedule.
    BatchScheduleActionDeleteRequest:
      type: object
      required:
        - ActionNames
      properties:
        ActionNames:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: actionNames
              description: A list of schedule actions to delete.
      description: A list of schedule actions to delete.
    BatchScheduleActionDeleteResult:
      type: object
      required:
        - ScheduleActions
      properties:
        ScheduleActions:
          allOf:
            - $ref: '#/components/schemas/__listOfScheduleAction'
            - xml:
                name: scheduleActions
              description: List of actions that have been deleted from the schedule.
      description: List of actions that have been deleted from the schedule.
    BatchStartRequest:
      type: object
      title: BatchStartRequest
      properties:
        ChannelIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: channelIds
              description: List of channel IDs
        MultiplexIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: multiplexIds
              description: List of multiplex IDs
      description: A request to start resources
    BatchStopRequest:
      type: object
      title: BatchStopRequest
      properties:
        ChannelIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: channelIds
              description: List of channel IDs
        MultiplexIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: multiplexIds
              description: List of multiplex IDs
      description: A request to stop resources
    BatchSuccessfulResultModel:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: ARN of the resource
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: ID of the resource
        State:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: state
              description: Current state of the resource
      description: Details from a successful operation
    BatchUpdateScheduleRequest:
      type: object
      title: BatchUpdateScheduleRequest
      properties:
        Creates:
          allOf:
            - $ref: '#/components/schemas/BatchScheduleActionCreateRequest'
            - xml:
                name: creates
              description: Schedule actions to create in the schedule.
        Deletes:
          allOf:
            - $ref: '#/components/schemas/BatchScheduleActionDeleteRequest'
            - xml:
                name: deletes
              description: Schedule actions to delete from the schedule.
      description: List of actions to create and list of actions to delete.
    BlackoutSlateNetworkEndBlackout:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Blackout Slate Network End Blackout
    __stringMin34Max34:
      type: string
      description: Placeholder documentation for __stringMin34Max34
      minLength: 34
      maxLength: 34
    BlackoutSlateState:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Blackout Slate State
    BurnInAlignment:
      type: string
      enum:
        - CENTERED
        - LEFT
        - SMART
      description: Burn In Alignment
    BurnInBackgroundColor:
      type: string
      enum:
        - BLACK
        - NONE
        - WHITE
      description: Burn In Background Color
    __integerMin0Max255:
      type: integer
      description: Placeholder documentation for __integerMin0Max255
      minimum: 0
      maximum: 255
    BurnInFontColor:
      type: string
      enum:
        - BLACK
        - BLUE
        - GREEN
        - RED
        - WHITE
        - YELLOW
      description: Burn In Font Color
    __integerMin96Max600:
      type: integer
      description: Placeholder documentation for __integerMin96Max600
      minimum: 96
      maximum: 600
    BurnInOutlineColor:
      type: string
      enum:
        - BLACK
        - BLUE
        - GREEN
        - RED
        - WHITE
        - YELLOW
      description: Burn In Outline Color
    __integerMin0Max10:
      type: integer
      description: Placeholder documentation for __integerMin0Max10
      minimum: 0
      maximum: 10
    BurnInShadowColor:
      type: string
      enum:
        - BLACK
        - NONE
        - WHITE
      description: Burn In Shadow Color
    BurnInTeletextGridControl:
      type: string
      enum:
        - FIXED
        - SCALED
      description: Burn In Teletext Grid Control
    __integerMin0:
      type: integer
      description: Placeholder documentation for __integerMin0
      minimum: 0
    BurnInDestinationSettings:
      type: object
      properties:
        Alignment:
          allOf:
            - $ref: '#/components/schemas/BurnInAlignment'
            - xml:
                name: alignment
              description: 'If no explicit xPosition or yPosition is provided, setting alignment to centered will place the captions at the bottom center of the output. Similarly, setting a left alignment will align captions to the bottom left of the output. If x and y positions are given in conjunction with the alignment parameter, the font will be justified (either left or centered) relative to those coordinates. Selecting "smart" justification will left-justify live subtitles and center-justify pre-recorded subtitles.  All burn-in and DVB-Sub font settings must match.'
        BackgroundColor:
          allOf:
            - $ref: '#/components/schemas/BurnInBackgroundColor'
            - xml:
                name: backgroundColor
              description: Specifies the color of the rectangle behind the captions.  All burn-in and DVB-Sub font settings must match.
        BackgroundOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: backgroundOpacity
              description: Specifies the opacity of the background rectangle. 255 is opaque; 0 is transparent. Leaving this parameter out is equivalent to setting it to 0 (transparent).  All burn-in and DVB-Sub font settings must match.
        Font:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: font
              description: 'External font file used for caption burn-in. File extension must be ''ttf'' or ''tte''.  Although the user can select output fonts for many different types of input captions,  embedded, STL and teletext sources use a strict grid system. Using external fonts with these caption sources could cause unexpected display of proportional fonts.  All burn-in and DVB-Sub font settings must match.'
        FontColor:
          allOf:
            - $ref: '#/components/schemas/BurnInFontColor'
            - xml:
                name: fontColor
              description: 'Specifies the color of the burned-in captions.  This option is not valid for source captions that are STL, 608/embedded or teletext.  These source settings are already pre-defined by the caption stream.  All burn-in and DVB-Sub font settings must match.'
        FontOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: fontOpacity
              description: Specifies the opacity of the burned-in captions. 255 is opaque; 0 is transparent.  All burn-in and DVB-Sub font settings must match.
        FontResolution:
          allOf:
            - $ref: '#/components/schemas/__integerMin96Max600'
            - xml:
                name: fontResolution
              description: Font resolution in DPI (dots per inch); default is 96 dpi.  All burn-in and DVB-Sub font settings must match.
        FontSize:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: fontSize
              description: When set to 'auto' fontSize will scale depending on the size of the output.  Giving a positive integer will specify the exact font size in points.  All burn-in and DVB-Sub font settings must match.
        OutlineColor:
          allOf:
            - $ref: '#/components/schemas/BurnInOutlineColor'
            - xml:
                name: outlineColor
              description: Specifies font outline color. This option is not valid for source captions that are either 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
        OutlineSize:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max10'
            - xml:
                name: outlineSize
              description: Specifies font outline size in pixels. This option is not valid for source captions that are either 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
        ShadowColor:
          allOf:
            - $ref: '#/components/schemas/BurnInShadowColor'
            - xml:
                name: shadowColor
              description: Specifies the color of the shadow cast by the captions.  All burn-in and DVB-Sub font settings must match.
        ShadowOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: shadowOpacity
              description: Specifies the opacity of the shadow. 255 is opaque; 0 is transparent. Leaving this parameter out is equivalent to setting it to 0 (transparent).  All burn-in and DVB-Sub font settings must match.
        ShadowXOffset:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: shadowXOffset
              description: Specifies the horizontal offset of the shadow relative to the captions in pixels. A value of -2 would result in a shadow offset 2 pixels to the left.  All burn-in and DVB-Sub font settings must match.
        ShadowYOffset:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: shadowYOffset
              description: Specifies the vertical offset of the shadow relative to the captions in pixels. A value of -2 would result in a shadow offset 2 pixels above the text.  All burn-in and DVB-Sub font settings must match.
        TeletextGridControl:
          allOf:
            - $ref: '#/components/schemas/BurnInTeletextGridControl'
            - xml:
                name: teletextGridControl
              description: Controls whether a fixed grid size will be used to generate the output subtitles bitmap. Only applicable for Teletext inputs and DVB-Sub/Burn-in outputs.
        XPosition:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: xPosition
              description: 'Specifies the horizontal position of the caption relative to the left side of the output in pixels. A value of 10 would result in the captions starting 10 pixels from the left of the output. If no explicit xPosition is provided, the horizontal caption position will be determined by the alignment parameter.  All burn-in and DVB-Sub font settings must match.'
        YPosition:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: yPosition
              description: 'Specifies the vertical position of the caption relative to the top of the output in pixels. A value of 10 would result in the captions starting 10 pixels from the top of the output. If no explicit yPosition is provided, the caption will be positioned towards the bottom of the output.  All burn-in and DVB-Sub font settings must match.'
      description: Burn In Destination Settings
    CancelInputDeviceTransferRequest:
      type: object
      title: CancelInputDeviceTransferRequest
      properties: {}
      description: Placeholder documentation for CancelInputDeviceTransferRequest
    CaptionDestinationSettings:
      type: object
      properties:
        AribDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/AribDestinationSettings'
            - xml:
                name: aribDestinationSettings
        BurnInDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/BurnInDestinationSettings'
            - xml:
                name: burnInDestinationSettings
        DvbSubDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationSettings'
            - xml:
                name: dvbSubDestinationSettings
        EbuTtDDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/EbuTtDDestinationSettings'
            - xml:
                name: ebuTtDDestinationSettings
        EmbeddedDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/EmbeddedDestinationSettings'
            - xml:
                name: embeddedDestinationSettings
        EmbeddedPlusScte20DestinationSettings:
          allOf:
            - $ref: '#/components/schemas/EmbeddedPlusScte20DestinationSettings'
            - xml:
                name: embeddedPlusScte20DestinationSettings
        RtmpCaptionInfoDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/RtmpCaptionInfoDestinationSettings'
            - xml:
                name: rtmpCaptionInfoDestinationSettings
        Scte20PlusEmbeddedDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/Scte20PlusEmbeddedDestinationSettings'
            - xml:
                name: scte20PlusEmbeddedDestinationSettings
        Scte27DestinationSettings:
          allOf:
            - $ref: '#/components/schemas/Scte27DestinationSettings'
            - xml:
                name: scte27DestinationSettings
        SmpteTtDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/SmpteTtDestinationSettings'
            - xml:
                name: smpteTtDestinationSettings
        TeletextDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/TeletextDestinationSettings'
            - xml:
                name: teletextDestinationSettings
        TtmlDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/TtmlDestinationSettings'
            - xml:
                name: ttmlDestinationSettings
        WebvttDestinationSettings:
          allOf:
            - $ref: '#/components/schemas/WebvttDestinationSettings'
            - xml:
                name: webvttDestinationSettings
      description: Caption Destination Settings
    CaptionDescription:
      type: object
      required:
        - CaptionSelectorName
        - Name
      properties:
        CaptionSelectorName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: captionSelectorName
              description: Specifies which input caption selector to use as a caption source when generating output captions. This field should match a captionSelector name.
        DestinationSettings:
          allOf:
            - $ref: '#/components/schemas/CaptionDestinationSettings'
            - xml:
                name: destinationSettings
              description: Additional settings for captions destination that depend on the destination type.
        LanguageCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: languageCode
              description: 'ISO 639-2 three-digit code: http://www.loc.gov/standards/iso639-2/'
        LanguageDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: languageDescription
              description: 'Human readable information to indicate captions available for players (eg. English, or Spanish).'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of the caption description.  Used to associate a caption description with an output.  Names must be unique within an event.
      description: Caption Description
    DvbSubDestinationSettings:
      type: object
      properties:
        Alignment:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationAlignment'
            - xml:
                name: alignment
              description: 'If no explicit xPosition or yPosition is provided, setting alignment to centered will place the captions at the bottom center of the output. Similarly, setting a left alignment will align captions to the bottom left of the output. If x and y positions are given in conjunction with the alignment parameter, the font will be justified (either left or centered) relative to those coordinates. Selecting "smart" justification will left-justify live subtitles and center-justify pre-recorded subtitles.  This option is not valid for source captions that are STL or 608/embedded.  These source settings are already pre-defined by the caption stream.  All burn-in and DVB-Sub font settings must match.'
        BackgroundColor:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationBackgroundColor'
            - xml:
                name: backgroundColor
              description: Specifies the color of the rectangle behind the captions.  All burn-in and DVB-Sub font settings must match.
        BackgroundOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: backgroundOpacity
              description: Specifies the opacity of the background rectangle. 255 is opaque; 0 is transparent. Leaving this parameter blank is equivalent to setting it to 0 (transparent).  All burn-in and DVB-Sub font settings must match.
        Font:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: font
              description: 'External font file used for caption burn-in. File extension must be ''ttf'' or ''tte''.  Although the user can select output fonts for many different types of input captions, embedded, STL and teletext sources use a strict grid system. Using external fonts with these caption sources could cause unexpected display of proportional fonts.  All burn-in and DVB-Sub font settings must match.'
        FontColor:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationFontColor'
            - xml:
                name: fontColor
              description: 'Specifies the color of the burned-in captions.  This option is not valid for source captions that are STL, 608/embedded or teletext.  These source settings are already pre-defined by the caption stream.  All burn-in and DVB-Sub font settings must match.'
        FontOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: fontOpacity
              description: Specifies the opacity of the burned-in captions. 255 is opaque; 0 is transparent.  All burn-in and DVB-Sub font settings must match.
        FontResolution:
          allOf:
            - $ref: '#/components/schemas/__integerMin96Max600'
            - xml:
                name: fontResolution
              description: Font resolution in DPI (dots per inch); default is 96 dpi.  All burn-in and DVB-Sub font settings must match.
        FontSize:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: fontSize
              description: When set to auto fontSize will scale depending on the size of the output.  Giving a positive integer will specify the exact font size in points.  All burn-in and DVB-Sub font settings must match.
        OutlineColor:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationOutlineColor'
            - xml:
                name: outlineColor
              description: Specifies font outline color. This option is not valid for source captions that are either 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
        OutlineSize:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max10'
            - xml:
                name: outlineSize
              description: Specifies font outline size in pixels. This option is not valid for source captions that are either 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
        ShadowColor:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationShadowColor'
            - xml:
                name: shadowColor
              description: Specifies the color of the shadow cast by the captions.  All burn-in and DVB-Sub font settings must match.
        ShadowOpacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: shadowOpacity
              description: Specifies the opacity of the shadow. 255 is opaque; 0 is transparent. Leaving this parameter blank is equivalent to setting it to 0 (transparent).  All burn-in and DVB-Sub font settings must match.
        ShadowXOffset:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: shadowXOffset
              description: Specifies the horizontal offset of the shadow relative to the captions in pixels. A value of -2 would result in a shadow offset 2 pixels to the left.  All burn-in and DVB-Sub font settings must match.
        ShadowYOffset:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: shadowYOffset
              description: Specifies the vertical offset of the shadow relative to the captions in pixels. A value of -2 would result in a shadow offset 2 pixels above the text.  All burn-in and DVB-Sub font settings must match.
        TeletextGridControl:
          allOf:
            - $ref: '#/components/schemas/DvbSubDestinationTeletextGridControl'
            - xml:
                name: teletextGridControl
              description: Controls whether a fixed grid size will be used to generate the output subtitles bitmap. Only applicable for Teletext inputs and DVB-Sub/Burn-in outputs.
        XPosition:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: xPosition
              description: 'Specifies the horizontal position of the caption relative to the left side of the output in pixels. A value of 10 would result in the captions starting 10 pixels from the left of the output. If no explicit xPosition is provided, the horizontal caption position will be determined by the alignment parameter.  This option is not valid for source captions that are STL, 608/embedded or teletext. These source settings are already pre-defined by the caption stream.  All burn-in and DVB-Sub font settings must match.'
        YPosition:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: yPosition
              description: 'Specifies the vertical position of the caption relative to the top of the output in pixels. A value of 10 would result in the captions starting 10 pixels from the top of the output. If no explicit yPosition is provided, the caption will be positioned towards the bottom of the output.  This option is not valid for source captions that are STL, 608/embedded or teletext.  These source settings are already pre-defined by the caption stream.  All burn-in and DVB-Sub font settings must match.'
      description: Dvb Sub Destination Settings
    EbuTtDDestinationSettings:
      type: object
      properties:
        CopyrightHolder:
          allOf:
            - $ref: '#/components/schemas/__stringMax1000'
            - xml:
                name: copyrightHolder
              description: Applies only if you plan to convert these source captions to EBU-TT-D or TTML in an output. Complete this field if you want to include the name of the copyright holder in the copyright metadata tag in the TTML
        FillLineGap:
          allOf:
            - $ref: '#/components/schemas/EbuTtDFillLineGapControl'
            - xml:
                name: fillLineGap
              description: |-
                Specifies how to handle the gap between the lines (in multi-line captions).

                - enabled: Fill with the captions background color (as specified in the input captions).
                - disabled: Leave the gap unfilled.
        FontFamily:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: fontFamily
              description: |-
                Specifies the font family to include in the font data attached to the EBU-TT captions. Valid only if styleControl is set to include. If you leave this field empty, the font family is set to "monospaced". (If styleControl is set to exclude, the font family is always set to "monospaced".)

                You specify only the font family. All other style information (color, bold, position and so on) is copied from the input captions. The size is always set to 100% to allow the downstream player to choose the size.

                - Enter a list of font families, as a comma-separated list of font names, in order of preference. The name can be a font family (such as “Arial”), or a generic font family (such as “serif”), or “default” (to let the downstream player choose the font).
                - Leave blank to set the family to “monospace”.
        StyleControl:
          allOf:
            - $ref: '#/components/schemas/EbuTtDDestinationStyleControl'
            - xml:
                name: styleControl
              description: |-
                Specifies the style information (font color, font position, and so on) to include in the font data that is attached to the EBU-TT captions.

                - include: Take the style information (font color, font position, and so on) from the source captions and include that information in the font data attached to the EBU-TT captions. This option is valid only if the source captions are Embedded or Teletext.
                - exclude: In the font data attached to the EBU-TT captions, set the font family to "monospaced". Do not include any other style information.
      description: Ebu Tt DDestination Settings
    EmbeddedDestinationSettings:
      type: object
      properties: {}
      description: Embedded Destination Settings
    EmbeddedPlusScte20DestinationSettings:
      type: object
      properties: {}
      description: Embedded Plus Scte20 Destination Settings
    RtmpCaptionInfoDestinationSettings:
      type: object
      properties: {}
      description: Rtmp Caption Info Destination Settings
    Scte20PlusEmbeddedDestinationSettings:
      type: object
      properties: {}
      description: Scte20 Plus Embedded Destination Settings
    Scte27DestinationSettings:
      type: object
      properties: {}
      description: Scte27 Destination Settings
    SmpteTtDestinationSettings:
      type: object
      properties: {}
      description: Smpte Tt Destination Settings
    TeletextDestinationSettings:
      type: object
      properties: {}
      description: Teletext Destination Settings
    TtmlDestinationSettings:
      type: object
      properties:
        StyleControl:
          allOf:
            - $ref: '#/components/schemas/TtmlDestinationStyleControl'
            - xml:
                name: styleControl
              description: 'When set to passthrough, passes through style and position information from a TTML-like input source (TTML, SMPTE-TT, CFF-TT) to the CFF-TT output or TTML output.'
      description: Ttml Destination Settings
    WebvttDestinationSettings:
      type: object
      properties:
        StyleControl:
          allOf:
            - $ref: '#/components/schemas/WebvttDestinationStyleControl'
            - xml:
                name: styleControl
              description: Controls whether the color and position of the source captions is passed through to the WebVTT output captions.  PASSTHROUGH - Valid only if the source captions are EMBEDDED or TELETEXT.  NO_STYLE_DATA - Don't pass through the style. The output captions will not contain any font styling information.
      description: Webvtt Destination Settings
    __stringMin3Max3:
      type: string
      description: Placeholder documentation for __stringMin3Max3
      minLength: 3
      maxLength: 3
    CaptionLanguageMapping:
      type: object
      required:
        - LanguageCode
        - LanguageDescription
        - CaptionChannel
      properties:
        CaptionChannel:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max4'
            - xml:
                name: captionChannel
              description: The closed caption channel being described by this CaptionLanguageMapping.  Each channel mapping must have a unique channel number (maximum of 4)
        LanguageCode:
          allOf:
            - $ref: '#/components/schemas/__stringMin3Max3'
            - xml:
                name: languageCode
              description: 'Three character ISO 639-2 language code (see http://www.loc.gov/standards/iso639-2)'
        LanguageDescription:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: languageDescription
              description: Textual description of language
      description: 'Maps a caption channel to an ISO 693-2 language code (http://www.loc.gov/standards/iso639-2), with an optional description.'
    __doubleMin0Max100:
      type: number
      description: Placeholder documentation for __doubleMin0Max100
      format: double
    CaptionRectangle:
      type: object
      required:
        - TopOffset
        - Height
        - Width
        - LeftOffset
      properties:
        Height:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0Max100'
            - xml:
                name: height
              description: |-
                See the description in leftOffset.
                For height, specify the entire height of the rectangle as a percentage of the underlying frame height. For example, \"80\" means the rectangle height is 80% of the underlying frame height. The topOffset and rectangleHeight must add up to 100% or less.
                This field corresponds to tts:extent - Y in the TTML standard.
        LeftOffset:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0Max100'
            - xml:
                name: leftOffset
              description: |-
                Applies only if you plan to convert these source captions to EBU-TT-D or TTML in an output. (Make sure to leave the default if you don't have either of these formats in the output.) You can define a display rectangle for the captions that is smaller than the underlying video frame. You define the rectangle by specifying the position of the left edge, top edge, bottom edge, and right edge of the rectangle, all within the underlying video frame. The units for the measurements are percentages.
                If you specify a value for one of these fields, you must specify a value for all of them.
                For leftOffset, specify the position of the left edge of the rectangle, as a percentage of the underlying frame width, and relative to the left edge of the frame. For example, \"10\" means the measurement is 10% of the underlying frame width. The rectangle left edge starts at that position from the left edge of the frame.
                This field corresponds to tts:origin - X in the TTML standard.
        TopOffset:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0Max100'
            - xml:
                name: topOffset
              description: |-
                See the description in leftOffset.
                For topOffset, specify the position of the top edge of the rectangle, as a percentage of the underlying frame height, and relative to the top edge of the frame. For example, \"10\" means the measurement is 10% of the underlying frame height. The rectangle top edge starts at that position from the top edge of the frame.
                This field corresponds to tts:origin - Y in the TTML standard.
        Width:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0Max100'
            - xml:
                name: width
              description: |-
                See the description in leftOffset.
                For width, specify the entire width of the rectangle as a percentage of the underlying frame width. For example, \"80\" means the rectangle width is 80% of the underlying frame width. The leftOffset and rectangleWidth must add up to 100% or less.
                This field corresponds to tts:extent - X in the TTML standard.
      description: Caption Rectangle
    CaptionSelectorSettings:
      type: object
      properties:
        AncillarySourceSettings:
          allOf:
            - $ref: '#/components/schemas/AncillarySourceSettings'
            - xml:
                name: ancillarySourceSettings
        AribSourceSettings:
          allOf:
            - $ref: '#/components/schemas/AribSourceSettings'
            - xml:
                name: aribSourceSettings
        DvbSubSourceSettings:
          allOf:
            - $ref: '#/components/schemas/DvbSubSourceSettings'
            - xml:
                name: dvbSubSourceSettings
        EmbeddedSourceSettings:
          allOf:
            - $ref: '#/components/schemas/EmbeddedSourceSettings'
            - xml:
                name: embeddedSourceSettings
        Scte20SourceSettings:
          allOf:
            - $ref: '#/components/schemas/Scte20SourceSettings'
            - xml:
                name: scte20SourceSettings
        Scte27SourceSettings:
          allOf:
            - $ref: '#/components/schemas/Scte27SourceSettings'
            - xml:
                name: scte27SourceSettings
        TeletextSourceSettings:
          allOf:
            - $ref: '#/components/schemas/TeletextSourceSettings'
            - xml:
                name: teletextSourceSettings
      description: Caption Selector Settings
    CaptionSelector:
      type: object
      required:
        - Name
      properties:
        LanguageCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: languageCode
              description: When specified this field indicates the three letter language code of the caption track to extract from the source.
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: name
              description: Name identifier for a caption selector.  This name is used to associate this caption selector with one or more caption descriptions.  Names must be unique within an event.
        SelectorSettings:
          allOf:
            - $ref: '#/components/schemas/CaptionSelectorSettings'
            - xml:
                name: selectorSettings
              description: Caption selector settings.
      description: Output groups for this Live Event. Output groups contain information about where streams should be distributed.
    DvbSubSourceSettings:
      type: object
      properties:
        OcrLanguage:
          allOf:
            - $ref: '#/components/schemas/DvbSubOcrLanguage'
            - xml:
                name: ocrLanguage
              description: |-
                If you will configure a WebVTT caption description that references this caption selector, use this field to
                provide the language to consider when translating the image-based source to text.
        Pid:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: pid
              description: 'When using DVB-Sub with Burn-In or SMPTE-TT, use this PID for the source content. Unused for DVB-Sub passthrough. All DVB-Sub content is passed through, regardless of selectors.'
      description: Dvb Sub Source Settings
    EmbeddedSourceSettings:
      type: object
      properties:
        Convert608To708:
          allOf:
            - $ref: '#/components/schemas/EmbeddedConvert608To708'
            - xml:
                name: convert608To708
              description: 'If upconvert, 608 data is both passed through via the "608 compatibility bytes" fields of the 708 wrapper as well as translated into 708. 708 data present in the source content will be discarded.'
        Scte20Detection:
          allOf:
            - $ref: '#/components/schemas/EmbeddedScte20Detection'
            - xml:
                name: scte20Detection
              description: Set to "auto" to handle streams with intermittent and/or non-aligned SCTE-20 and Embedded captions.
        Source608ChannelNumber:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max4'
            - xml:
                name: source608ChannelNumber
              description: Specifies the 608/708 channel number within the video track from which to extract captions. Unused for passthrough.
        Source608TrackNumber:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max5'
            - xml:
                name: source608TrackNumber
              description: This field is unused and deprecated.
      description: Embedded Source Settings
    Scte20SourceSettings:
      type: object
      properties:
        Convert608To708:
          allOf:
            - $ref: '#/components/schemas/Scte20Convert608To708'
            - xml:
                name: convert608To708
              description: 'If upconvert, 608 data is both passed through via the "608 compatibility bytes" fields of the 708 wrapper as well as translated into 708. 708 data present in the source content will be discarded.'
        Source608ChannelNumber:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max4'
            - xml:
                name: source608ChannelNumber
              description: Specifies the 608/708 channel number within the video track from which to extract captions. Unused for passthrough.
      description: Scte20 Source Settings
    Scte27SourceSettings:
      type: object
      properties:
        OcrLanguage:
          allOf:
            - $ref: '#/components/schemas/Scte27OcrLanguage'
            - xml:
                name: ocrLanguage
              description: |-
                If you will configure a WebVTT caption description that references this caption selector, use this field to
                provide the language to consider when translating the image-based source to text.
        Pid:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: pid
              description: |-
                The pid field is used in conjunction with the caption selector languageCode field as follows:
                  - Specify PID and Language: Extracts captions from that PID; the language is "informational".
                  - Specify PID and omit Language: Extracts the specified PID.
                  - Omit PID and specify Language: Extracts the specified language, whichever PID that happens to be.
                  - Omit PID and omit Language: Valid only if source is DVB-Sub that is being passed through; all languages will be passed through.
      description: Scte27 Source Settings
    TeletextSourceSettings:
      type: object
      properties:
        OutputRectangle:
          allOf:
            - $ref: '#/components/schemas/CaptionRectangle'
            - xml:
                name: outputRectangle
              description: Optionally defines a region where TTML style captions will be displayed
        PageNumber:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pageNumber
              description: Specifies the teletext page number within the data stream from which to extract captions. Range of 0x100 (256) to 0x8FF (2303). Unused for passthrough. Should be specified as a hexadecimal string with no "0x" prefix.
      description: Teletext Source Settings
    CdiInputSpecification:
      type: object
      properties:
        Resolution:
          allOf:
            - $ref: '#/components/schemas/CdiInputResolution'
            - xml:
                name: resolution
              description: Maximum CDI input resolution
      description: Placeholder documentation for CdiInputSpecification
    ChannelClass:
      type: string
      enum:
        - STANDARD
        - SINGLE_PIPELINE
      description: A standard channel has two encoding pipelines and a single pipeline channel only has one.
    __listOfOutputDestination:
      type: array
      description: Placeholder documentation for __listOfOutputDestination
      items:
        $ref: '#/components/schemas/OutputDestination'
    __listOfChannelEgressEndpoint:
      type: array
      description: Placeholder documentation for __listOfChannelEgressEndpoint
      items:
        $ref: '#/components/schemas/ChannelEgressEndpoint'
    EncoderSettings:
      type: object
      required:
        - VideoDescriptions
        - AudioDescriptions
        - OutputGroups
        - TimecodeConfig
      properties:
        AudioDescriptions:
          allOf:
            - $ref: '#/components/schemas/__listOfAudioDescription'
            - xml:
                name: audioDescriptions
        AvailBlanking:
          allOf:
            - $ref: '#/components/schemas/AvailBlanking'
            - xml:
                name: availBlanking
              description: Settings for ad avail blanking.
        AvailConfiguration:
          allOf:
            - $ref: '#/components/schemas/AvailConfiguration'
            - xml:
                name: availConfiguration
              description: Event-wide configuration settings for ad avail insertion.
        BlackoutSlate:
          allOf:
            - $ref: '#/components/schemas/BlackoutSlate'
            - xml:
                name: blackoutSlate
              description: Settings for blackout slate.
        CaptionDescriptions:
          allOf:
            - $ref: '#/components/schemas/__listOfCaptionDescription'
            - xml:
                name: captionDescriptions
              description: Settings for caption decriptions
        FeatureActivations:
          allOf:
            - $ref: '#/components/schemas/FeatureActivations'
            - xml:
                name: featureActivations
              description: Feature Activations
        GlobalConfiguration:
          allOf:
            - $ref: '#/components/schemas/GlobalConfiguration'
            - xml:
                name: globalConfiguration
              description: Configuration settings that apply to the event as a whole.
        MotionGraphicsConfiguration:
          allOf:
            - $ref: '#/components/schemas/MotionGraphicsConfiguration'
            - xml:
                name: motionGraphicsConfiguration
              description: Settings for motion graphics.
        NielsenConfiguration:
          allOf:
            - $ref: '#/components/schemas/NielsenConfiguration'
            - xml:
                name: nielsenConfiguration
              description: Nielsen configuration settings.
        OutputGroups:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputGroup'
            - xml:
                name: outputGroups
        TimecodeConfig:
          allOf:
            - $ref: '#/components/schemas/TimecodeConfig'
            - xml:
                name: timecodeConfig
              description: Contains settings used to acquire and adjust timecode information from inputs.
        VideoDescriptions:
          allOf:
            - $ref: '#/components/schemas/__listOfVideoDescription'
            - xml:
                name: videoDescriptions
      description: Encoder Settings
    __listOfInputAttachment:
      type: array
      description: Placeholder documentation for __listOfInputAttachment
      items:
        $ref: '#/components/schemas/InputAttachment'
    InputSpecification:
      type: object
      properties:
        Codec:
          allOf:
            - $ref: '#/components/schemas/InputCodec'
            - xml:
                name: codec
              description: Input codec
        MaximumBitrate:
          allOf:
            - $ref: '#/components/schemas/InputMaximumBitrate'
            - xml:
                name: maximumBitrate
              description: 'Maximum input bitrate, categorized coarsely'
        Resolution:
          allOf:
            - $ref: '#/components/schemas/InputResolution'
            - xml:
                name: resolution
              description: 'Input resolution, categorized coarsely'
      description: Placeholder documentation for InputSpecification
    LogLevel:
      type: string
      enum:
        - ERROR
        - WARNING
        - INFO
        - DEBUG
        - DISABLED
      description: The log level the user wants for their channel.
    __listOfPipelineDetail:
      type: array
      description: Placeholder documentation for __listOfPipelineDetail
      items:
        $ref: '#/components/schemas/PipelineDetail'
    ChannelState:
      type: string
      enum:
        - CREATING
        - CREATE_FAILED
        - IDLE
        - STARTING
        - RUNNING
        - RECOVERING
        - STOPPING
        - DELETING
        - DELETED
        - UPDATING
        - UPDATE_FAILED
      description: Placeholder documentation for ChannelState
    Tags:
      type: object
      description: Placeholder documentation for Tags
      additionalProperties:
        $ref: '#/components/schemas/__string'
    VpcOutputSettingsDescription:
      type: object
      properties:
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: |
                The Availability Zones where the vpc subnets are located.
                The first Availability Zone applies to the first subnet in the list of subnets.
                The second Availability Zone applies to the second subnet.
        NetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: networkInterfaceIds
              description: |
                A list of Elastic Network Interfaces created by MediaLive in the customer's VPC
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: |
                A list of up EC2 VPC security group IDs attached to the Output VPC network interfaces.
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subnetIds
              description: |
                A list of VPC subnet IDs from the same VPC.
                If STANDARD channel, subnet IDs must be mapped to two unique availability zones (AZ).
      description: |
        The properties for a private VPC Output
    Channel:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for Channel
    ChannelEgressEndpoint:
      type: object
      properties:
        SourceIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceIp
              description: Public IP of where a channel's output comes from
      description: Placeholder documentation for ChannelEgressEndpoint
    ChannelSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: |
                A list of destinations of the channel. For UDP outputs, there is one
                destination per output. For other types (HLS, for example), there is
                one destination per packager.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The endpoints where outgoing connections initiate from
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level being written to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel. (user-mutable)
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role assumed when running the Channel.
        State:
          allOf:
            - $ref: '#/components/schemas/ChannelState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettingsDescription'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: Placeholder documentation for ChannelSummary
    ColorSpacePassthroughSettings:
      type: object
      properties: {}
      description: Passthrough applies no color space conversion to the output
    VpcOutputSettings:
      type: object
      required:
        - SubnetIds
      properties:
        PublicAddressAllocationIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: publicAddressAllocationIds
              description: |
                List of public address allocation ids to associate with ENIs that will be created in Output VPC.
                Must specify one for SINGLE_PIPELINE, two for STANDARD channels
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: |
                A list of up to 5 EC2 VPC security group IDs to attach to the Output VPC network interfaces.
                If none are specified then the VPC default security group will be used
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subnetIds
              description: |
                A list of VPC subnet IDs from the same VPC.
                If STANDARD channel, subnet IDs must be mapped to two unique availability zones (AZ).
      description: |
        The properties for a private VPC Output
        When this property is specified, the output egress addresses will be created in a user specified VPC
    CreateChannelRequest:
      type: object
      title: CreateChannelRequest
      properties:
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
              description: List of input attachments for channel.
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level to write to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of channel.
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: |
                Unique request ID to be specified. This is needed to prevent retries from
                creating multiple resources.
        Reserved:
          allOf:
            - $ref: '#/components/schemas/__string'
            - deprecated: true
              xml:
                name: reserved
              description: Deprecated field that's only usable by whitelisted customers.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: An optional Amazon Resource Name (ARN) of the role to assume when running the Channel.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/VpcOutputSettings'
            - xml:
                name: vpc
              description: Settings for VPC output
      description: A request to create a channel
    __listOfInputDestinationRequest:
      type: array
      description: Placeholder documentation for __listOfInputDestinationRequest
      items:
        $ref: '#/components/schemas/InputDestinationRequest'
    __listOfInputDeviceSettings:
      type: array
      description: Placeholder documentation for __listOfInputDeviceSettings
      items:
        $ref: '#/components/schemas/InputDeviceSettings'
    __listOfMediaConnectFlowRequest:
      type: array
      description: Placeholder documentation for __listOfMediaConnectFlowRequest
      items:
        $ref: '#/components/schemas/MediaConnectFlowRequest'
    __listOfInputSourceRequest:
      type: array
      description: Placeholder documentation for __listOfInputSourceRequest
      items:
        $ref: '#/components/schemas/InputSourceRequest'
    InputType:
      type: string
      enum:
        - UDP_PUSH
        - RTP_PUSH
        - RTMP_PUSH
        - RTMP_PULL
        - URL_PULL
        - MP4_FILE
        - MEDIACONNECT
        - INPUT_DEVICE
        - AWS_CDI
      description: Placeholder documentation for InputType
    InputVpcRequest:
      type: object
      required:
        - SubnetIds
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: |
                A list of up to 5 EC2 VPC security group IDs to attach to the Input VPC network interfaces.
                Requires subnetIds. If none are specified then the VPC default security group will be used.
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subnetIds
              description: |
                A list of 2 VPC subnet IDs from the same VPC.
                Subnet IDs must be mapped to two unique availability zones (AZ).
      description: |
        Settings for a private VPC Input.
        When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses.
        This property requires setting the roleArn property on Input creation.
        Not compatible with the inputSecurityGroups property.
    CreateInputRequest:
      type: object
      title: CreateInputRequest
      properties:
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDestinationRequest'
            - xml:
                name: destinations
              description: Destination settings for PUSH type inputs.
        InputDevices:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDeviceSettings'
            - xml:
                name: inputDevices
              description: Settings for the devices.
        InputSecurityGroups:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputSecurityGroups
              description: A list of security groups referenced by IDs to attach to the input.
        MediaConnectFlows:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
            - xml:
                name: mediaConnectFlows
              description: |
                A list of the MediaConnect Flows that you want to use in this input. You can specify as few as one
                Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a
                separate Availability Zone as this ensures your EML input is redundant to AZ issues.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of the input.
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: |
                Unique identifier of the request to ensure the request is handled
                exactly once in case of retries.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfInputSourceRequest'
            - xml:
                name: sources
              description: |
                The source URLs for a PULL-type input. Every PULL type input needs
                exactly two source URLs for redundancy.
                Only specify sources for PULL type Inputs. Leave Destinations empty.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputType'
            - xml:
                name: type
        Vpc:
          allOf:
            - $ref: '#/components/schemas/InputVpcRequest'
            - xml:
                name: vpc
      description: The name of the input
    Input:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'The Unique ARN of the input (generated, immutable).'
        AttachedChannels:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: attachedChannels
              description: A list of channel IDs that that input is attached to (currently an input can only be attached to one channel).
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDestination'
            - xml:
                name: destinations
              description: A list of the destinations of the input (PUSH-type).
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: 'The generated ID of the input (unique for user account, immutable).'
        InputClass:
          allOf:
            - $ref: '#/components/schemas/InputClass'
            - xml:
                name: inputClass
              description: |
                STANDARD - MediaLive expects two sources to be connected to this input. If the channel is also STANDARD, both sources will be ingested. If the channel is SINGLE_PIPELINE, only the first source will be ingested; the second source will always be ignored, even if the first source fails.
                SINGLE_PIPELINE - You can connect only one source to this input. If the ChannelClass is also  SINGLE_PIPELINE, this value is valid. If the ChannelClass is STANDARD, this value is not valid because the channel requires two sources in the input.
        InputDevices:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDeviceSettings'
            - xml:
                name: inputDevices
              description: Settings for the input devices.
        InputPartnerIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputPartnerIds
              description: A list of IDs for all Inputs which are partners of this one.
        InputSourceType:
          allOf:
            - $ref: '#/components/schemas/InputSourceType'
            - xml:
                name: inputSourceType
              description: |
                Certain pull input sources can be dynamic, meaning that they can have their URL's dynamically changes
                during input switch actions. Presently, this functionality only works with MP4_FILE inputs.
        MediaConnectFlows:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaConnectFlow'
            - xml:
                name: mediaConnectFlows
              description: A list of MediaConnect Flows for this input.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The user-assigned name (This is a mutable value).
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
        SecurityGroups:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroups
              description: A list of IDs for all the Input Security Groups attached to the input.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfInputSource'
            - xml:
                name: sources
              description: A list of the sources of the input (PULL-type).
        State:
          allOf:
            - $ref: '#/components/schemas/InputState'
            - xml:
                name: state
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputType'
            - xml:
                name: type
      description: Placeholder documentation for Input
    __listOfInputWhitelistRuleCidr:
      type: array
      description: Placeholder documentation for __listOfInputWhitelistRuleCidr
      items:
        $ref: '#/components/schemas/InputWhitelistRuleCidr'
    CreateInputSecurityGroupRequest:
      type: object
      title: CreateInputSecurityGroupRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
            - $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
            - xml:
                name: whitelistRules
              description: List of IPv4 CIDR addresses to whitelist
      description: The IPv4 CIDRs to whitelist for this Input Security Group
    InputSecurityGroup:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: Unique ARN of Input Security Group
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The Id of the Input Security Group
        Inputs:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputs
              description: The list of inputs currently using this Input Security Group.
        State:
          allOf:
            - $ref: '#/components/schemas/InputSecurityGroupState'
            - xml:
                name: state
              description: The current state of the Input Security Group.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
            - $ref: '#/components/schemas/__listOfInputWhitelistRule'
            - xml:
                name: whitelistRules
              description: Whitelist rules and their sync status
      description: An Input Security Group
    MultiplexProgramSettings:
      type: object
      required:
        - ProgramNumber
      properties:
        PreferredChannelPipeline:
          allOf:
            - $ref: '#/components/schemas/PreferredChannelPipeline'
            - xml:
                name: preferredChannelPipeline
              description: Indicates which pipeline is preferred by the multiplex for program ingest.
        ProgramNumber:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: programNumber
              description: Unique program number.
        ServiceDescriptor:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramServiceDescriptor'
            - xml:
                name: serviceDescriptor
              description: Transport stream service descriptor configuration for the Multiplex program.
        VideoSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexVideoSettings'
            - xml:
                name: videoSettings
              description: Program video settings configuration.
      description: Multiplex Program settings configuration.
    CreateMultiplexProgramRequest:
      type: object
      required:
        - RequestId
        - MultiplexProgramSettings
        - ProgramName
      title: CreateMultiplexProgramRequest
      properties:
        MultiplexProgramSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramSettings'
            - xml:
                name: multiplexProgramSettings
              description: The settings for this multiplex program.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: programName
              description: Name of multiplex program.
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: |
                Unique request ID. This prevents retries from creating multiple
                resources.
      description: A request to create a program in a multiplex.
    MultiplexProgram:
      type: object
      properties:
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramSettings'
            - xml:
                name: multiplexProgramSettings
              description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
            - xml:
                name: packetIdentifiersMap
              description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
            - xml:
                name: pipelineDetails
              description: Contains information about the current sources for the specified program in the specified multiplex. Keep in mind that each multiplex pipeline connects to both pipelines in a given source channel (the channel identified by the program). But only one of those channel pipelines is ever active at one time.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: programName
              description: The name of the multiplex program.
      description: The multiplex program object.
    MultiplexSettings:
      type: object
      required:
        - TransportStreamBitrate
        - TransportStreamId
      properties:
        MaximumVideoBufferDelayMilliseconds:
          allOf:
            - $ref: '#/components/schemas/__integerMin800Max3000'
            - xml:
                name: maximumVideoBufferDelayMilliseconds
              description: Maximum video buffer delay in milliseconds.
        TransportStreamBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000000Max100000000'
            - xml:
                name: transportStreamBitrate
              description: Transport stream bit rate.
        TransportStreamId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: transportStreamId
              description: Transport stream ID.
        TransportStreamReservedBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max100000000'
            - xml:
                name: transportStreamReservedBitrate
              description: Transport stream reserved bit rate.
      description: Contains configuration for a Multiplex event
    CreateMultiplexRequest:
      type: object
      required:
        - RequestId
        - MultiplexSettings
        - AvailabilityZones
        - Name
      title: CreateMultiplexRequest
      properties:
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex. You must specify exactly two.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of multiplex.
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: |
                Unique request ID. This prevents retries from creating multiple
                resources.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: A request to create a multiplex.
    Multiplex:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
            - xml:
                name: destinations
              description: A list of the multiplex output destinations.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: The multiplex object.
    CreatePartnerInputRequest:
      type: object
      title: CreatePartnerInputRequest
      properties:
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: |
                Unique identifier of the request to ensure the request is handled
                exactly once in case of retries.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: A request to create a partner input
    CreateTagsRequest:
      type: object
      title: CreateTagsRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: Placeholder documentation for CreateTagsRequest
    DeleteChannelRequest:
      type: object
      title: DeleteChannelRequest
      properties: {}
      description: Placeholder documentation for DeleteChannelRequest
    DeleteInputRequest:
      type: object
      title: DeleteInputRequest
      properties: {}
      description: Placeholder documentation for DeleteInputRequest
    DeleteInputSecurityGroupRequest:
      type: object
      title: DeleteInputSecurityGroupRequest
      properties: {}
      description: Placeholder documentation for DeleteInputSecurityGroupRequest
    DeleteMultiplexProgramRequest:
      type: object
      title: DeleteMultiplexProgramRequest
      properties: {}
      description: Placeholder documentation for DeleteMultiplexProgramRequest
    MultiplexProgramPacketIdentifiersMap:
      type: object
      properties:
        AudioPids:
          allOf:
            - $ref: '#/components/schemas/__listOf__integer'
            - xml:
                name: audioPids
        DvbSubPids:
          allOf:
            - $ref: '#/components/schemas/__listOf__integer'
            - xml:
                name: dvbSubPids
        DvbTeletextPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dvbTeletextPid
        EtvPlatformPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: etvPlatformPid
        EtvSignalPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: etvSignalPid
        KlvDataPids:
          allOf:
            - $ref: '#/components/schemas/__listOf__integer'
            - xml:
                name: klvDataPids
        PcrPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pcrPid
        PmtPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pmtPid
        PrivateMetadataPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: privateMetadataPid
        Scte27Pids:
          allOf:
            - $ref: '#/components/schemas/__listOf__integer'
            - xml:
                name: scte27Pids
        Scte35Pid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: scte35Pid
        TimedMetadataPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timedMetadataPid
        VideoPid:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: videoPid
      description: Packet identifiers map for a given Multiplex program.
    __listOfMultiplexProgramPipelineDetail:
      type: array
      description: Placeholder documentation for __listOfMultiplexProgramPipelineDetail
      items:
        $ref: '#/components/schemas/MultiplexProgramPipelineDetail'
    DeleteMultiplexRequest:
      type: object
      title: DeleteMultiplexRequest
      properties: {}
      description: Placeholder documentation for DeleteMultiplexRequest
    __listOfMultiplexOutputDestination:
      type: array
      description: Placeholder documentation for __listOfMultiplexOutputDestination
      items:
        $ref: '#/components/schemas/MultiplexOutputDestination'
    MultiplexState:
      type: string
      enum:
        - CREATING
        - CREATE_FAILED
        - IDLE
        - STARTING
        - RUNNING
        - RECOVERING
        - STOPPING
        - DELETING
        - DELETED
      description: The current state of the multiplex.
    DeleteReservationRequest:
      type: object
      title: DeleteReservationRequest
      properties: {}
      description: Placeholder documentation for DeleteReservationRequest
    OfferingDurationUnits:
      type: string
      enum:
        - MONTHS
      description: 'Units for duration, e.g. ''MONTHS'''
    OfferingType:
      type: string
      enum:
        - NO_UPFRONT
      description: 'Offering type, e.g. ''NO_UPFRONT'''
    ReservationResourceSpecification:
      type: object
      properties:
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: 'Channel class, e.g. ''STANDARD'''
        Codec:
          allOf:
            - $ref: '#/components/schemas/ReservationCodec'
            - xml:
                name: codec
              description: 'Codec, e.g. ''AVC'''
        MaximumBitrate:
          allOf:
            - $ref: '#/components/schemas/ReservationMaximumBitrate'
            - xml:
                name: maximumBitrate
              description: 'Maximum bitrate, e.g. ''MAX_20_MBPS'''
        MaximumFramerate:
          allOf:
            - $ref: '#/components/schemas/ReservationMaximumFramerate'
            - xml:
                name: maximumFramerate
              description: 'Maximum framerate, e.g. ''MAX_30_FPS'' (Outputs only)'
        Resolution:
          allOf:
            - $ref: '#/components/schemas/ReservationResolution'
            - xml:
                name: resolution
              description: 'Resolution, e.g. ''HD'''
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceType'
            - xml:
                name: resourceType
              description: 'Resource type, ''INPUT'', ''OUTPUT'', ''MULTIPLEX'', or ''CHANNEL'''
        SpecialFeature:
          allOf:
            - $ref: '#/components/schemas/ReservationSpecialFeature'
            - xml:
                name: specialFeature
              description: 'Special feature, e.g. ''AUDIO_NORMALIZATION'' (Channels only)'
        VideoQuality:
          allOf:
            - $ref: '#/components/schemas/ReservationVideoQuality'
            - xml:
                name: videoQuality
              description: 'Video quality, e.g. ''STANDARD'' (Outputs only)'
      description: 'Resource configuration (codec, resolution, bitrate, ...)'
    ReservationState:
      type: string
      enum:
        - ACTIVE
        - EXPIRED
        - CANCELED
        - DELETED
      description: Current reservation state
    DeleteScheduleRequest:
      type: object
      title: DeleteScheduleRequest
      properties: {}
      description: Placeholder documentation for DeleteScheduleRequest
    DeleteTagsRequest:
      type: object
      title: DeleteTagsRequest
      properties: {}
      description: Placeholder documentation for DeleteTagsRequest
    DescribeChannelRequest:
      type: object
      title: DescribeChannelRequest
      properties: {}
      description: Placeholder documentation for DescribeChannelRequest
    DescribeInputDeviceRequest:
      type: object
      title: DescribeInputDeviceRequest
      properties: {}
      description: Placeholder documentation for DescribeInputDeviceRequest
    InputDeviceConnectionState:
      type: string
      enum:
        - DISCONNECTED
        - CONNECTED
      description: The state of the connection between the input device and AWS.
    DeviceSettingsSyncState:
      type: string
      enum:
        - SYNCED
        - SYNCING
      description: 'The status of the action to synchronize the device configuration. If you change the configuration of the input device (for example, the maximum bitrate), MediaLive sends the new data to the device. The device might not update itself immediately. SYNCED means the device has updated its configuration. SYNCING means that it has not updated its configuration.'
    DeviceUpdateStatus:
      type: string
      enum:
        - UP_TO_DATE
        - NOT_UP_TO_DATE
      description: The status of software on the input device.
    InputDeviceHdSettings:
      type: object
      properties:
        ActiveInput:
          allOf:
            - $ref: '#/components/schemas/InputDeviceActiveInput'
            - xml:
                name: activeInput
              description: 'If you specified Auto as the configured input, specifies which of the sources is currently active (SDI or HDMI).'
        ConfiguredInput:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConfiguredInput'
            - xml:
                name: configuredInput
              description: The source at the input device that is currently active. You can specify this source.
        DeviceState:
          allOf:
            - $ref: '#/components/schemas/InputDeviceState'
            - xml:
                name: deviceState
              description: The state of the input device.
        Framerate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: framerate
              description: The frame rate of the video source.
        Height:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: height
              description: 'The height of the video source, in pixels.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The current maximum bitrate for ingesting this source, in bits per second. You can specify this maximum.'
        ScanType:
          allOf:
            - $ref: '#/components/schemas/InputDeviceScanType'
            - xml:
                name: scanType
              description: The scan type of the video source.
        Width:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: width
              description: 'The width of the video source, in pixels.'
      description: 'Settings that describe the active source from the input device, and the video characteristics of that source.'
    InputDeviceNetworkSettings:
      type: object
      properties:
        DnsAddresses:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: dnsAddresses
              description: The DNS addresses of the input device.
        Gateway:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: gateway
              description: The network gateway IP address.
        IpAddress:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ipAddress
              description: The IP address of the input device.
        IpScheme:
          allOf:
            - $ref: '#/components/schemas/InputDeviceIpScheme'
            - xml:
                name: ipScheme
              description: Specifies whether the input device has been configured (outside of MediaLive) to use a dynamic IP address assignment (DHCP) or a static IP address.
        SubnetMask:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: subnetMask
              description: The subnet mask of the input device.
      description: The network settings for the input device.
    InputDeviceType:
      type: string
      enum:
        - HD
      description: 'The type of the input device. For an AWS Elemental Link device that outputs resolutions up to 1080, choose "HD".'
    InputDeviceUhdSettings:
      type: object
      properties:
        ActiveInput:
          allOf:
            - $ref: '#/components/schemas/InputDeviceActiveInput'
            - xml:
                name: activeInput
              description: 'If you specified Auto as the configured input, specifies which of the sources is currently active (SDI or HDMI).'
        ConfiguredInput:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConfiguredInput'
            - xml:
                name: configuredInput
              description: The source at the input device that is currently active. You can specify this source.
        DeviceState:
          allOf:
            - $ref: '#/components/schemas/InputDeviceState'
            - xml:
                name: deviceState
              description: The state of the input device.
        Framerate:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: framerate
              description: The frame rate of the video source.
        Height:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: height
              description: 'The height of the video source, in pixels.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The current maximum bitrate for ingesting this source, in bits per second. You can specify this maximum.'
        ScanType:
          allOf:
            - $ref: '#/components/schemas/InputDeviceScanType'
            - xml:
                name: scanType
              description: The scan type of the video source.
        Width:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: width
              description: 'The width of the video source, in pixels.'
      description: 'Settings that describe the active source from the input device, and the video characteristics of that source.'
    AcceptHeader:
      type: string
      enum:
        - image/jpeg
      description: The HTTP Accept header. Indicates the requested type fothe thumbnail.
    DescribeInputDeviceThumbnailRequest:
      type: object
      title: DescribeInputDeviceThumbnailRequest
      properties: {}
      description: Placeholder documentation for DescribeInputDeviceThumbnailRequest
    InputDeviceThumbnail:
      type: string
      description: The binary data for the thumbnail that the Link device has most recently sent to MediaLive.
    ContentType:
      type: string
      enum:
        - image/jpeg
      description: Specifies the media type of the thumbnail.
    __long:
      type: integer
      description: Placeholder documentation for __long
    __timestamp:
      type: string
      description: Placeholder documentation for __timestamp
      format: date-time
    DescribeInputRequest:
      type: object
      title: DescribeInputRequest
      properties: {}
      description: Placeholder documentation for DescribeInputRequest
    __listOfInputDestination:
      type: array
      description: Placeholder documentation for __listOfInputDestination
      items:
        $ref: '#/components/schemas/InputDestination'
    InputClass:
      type: string
      enum:
        - STANDARD
        - SINGLE_PIPELINE
      description: A standard input has two sources and a single pipeline input only has one.
    InputSourceType:
      type: string
      enum:
        - STATIC
        - DYNAMIC
      description: |
        There are two types of input sources, static and dynamic. If an input source is dynamic you can
        change the source url of the input dynamically using an input switch action. However, the only input type
        to support a dynamic url at this time is MP4_FILE. By default all input sources are static.
    __listOfMediaConnectFlow:
      type: array
      description: Placeholder documentation for __listOfMediaConnectFlow
      items:
        $ref: '#/components/schemas/MediaConnectFlow'
    __listOfInputSource:
      type: array
      description: Placeholder documentation for __listOfInputSource
      items:
        $ref: '#/components/schemas/InputSource'
    InputState:
      type: string
      enum:
        - CREATING
        - DETACHED
        - ATTACHED
        - DELETING
        - DELETED
      description: Placeholder documentation for InputState
    DescribeInputSecurityGroupRequest:
      type: object
      title: DescribeInputSecurityGroupRequest
      properties: {}
      description: Placeholder documentation for DescribeInputSecurityGroupRequest
    InputSecurityGroupState:
      type: string
      enum:
        - IDLE
        - IN_USE
        - UPDATING
        - DELETED
      description: Placeholder documentation for InputSecurityGroupState
    __listOfInputWhitelistRule:
      type: array
      description: Placeholder documentation for __listOfInputWhitelistRule
      items:
        $ref: '#/components/schemas/InputWhitelistRule'
    DescribeMultiplexProgramRequest:
      type: object
      title: DescribeMultiplexProgramRequest
      properties: {}
      description: Placeholder documentation for DescribeMultiplexProgramRequest
    DescribeMultiplexRequest:
      type: object
      title: DescribeMultiplexRequest
      properties: {}
      description: Placeholder documentation for DescribeMultiplexRequest
    DescribeOfferingRequest:
      type: object
      title: DescribeOfferingRequest
      properties: {}
      description: Placeholder documentation for DescribeOfferingRequest
    DescribeReservationRequest:
      type: object
      title: DescribeReservationRequest
      properties: {}
      description: Placeholder documentation for DescribeReservationRequest
    MaxResults:
      type: integer
      description: Placeholder documentation for MaxResults
      minimum: 1
      maximum: 1000
    DescribeScheduleRequest:
      type: object
      title: DescribeScheduleRequest
      properties: {}
      description: Placeholder documentation for DescribeScheduleRequest
    __integerMin0Max65536:
      type: integer
      description: Placeholder documentation for __integerMin0Max65536
      minimum: 0
      maximum: 65536
    __stringMin1Max256:
      type: string
      description: Placeholder documentation for __stringMin1Max256
      minLength: 1
      maxLength: 256
    __integerMin25Max10000:
      type: integer
      description: Placeholder documentation for __integerMin25Max10000
      minimum: 25
      maximum: 10000
    DvbNitSettings:
      type: object
      required:
        - NetworkName
        - NetworkId
      properties:
        NetworkId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65536'
            - xml:
                name: networkId
              description: The numeric value placed in the Network Information Table (NIT).
        NetworkName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256'
            - xml:
                name: networkName
              description: The network name text placed in the networkNameDescriptor inside the Network Information Table. Maximum length is 256 characters.
        RepInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin25Max10000'
            - xml:
                name: repInterval
              description: The number of milliseconds between instances of this table in the output transport stream.
      description: DVB Network Information Table (NIT)
    DvbSdtOutputSdt:
      type: string
      enum:
        - SDT_FOLLOW
        - SDT_FOLLOW_IF_PRESENT
        - SDT_MANUAL
        - SDT_NONE
      description: Dvb Sdt Output Sdt
    __integerMin25Max2000:
      type: integer
      description: Placeholder documentation for __integerMin25Max2000
      minimum: 25
      maximum: 2000
    DvbSdtSettings:
      type: object
      properties:
        OutputSdt:
          allOf:
            - $ref: '#/components/schemas/DvbSdtOutputSdt'
            - xml:
                name: outputSdt
              description: 'Selects method of inserting SDT information into output stream. The sdtFollow setting copies SDT information from input stream to output stream. The sdtFollowIfPresent setting copies SDT information from input stream to output stream if SDT information is present in the input, otherwise it will fall back on the user-defined values. The sdtManual setting means user will enter the SDT information. The sdtNone setting means output stream will not contain SDT information.'
        RepInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin25Max2000'
            - xml:
                name: repInterval
              description: The number of milliseconds between instances of this table in the output transport stream.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256'
            - xml:
                name: serviceName
              description: The service name placed in the serviceDescriptor in the Service Description Table. Maximum length is 256 characters.
        ServiceProviderName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256'
            - xml:
                name: serviceProviderName
              description: The service provider name placed in the serviceDescriptor in the Service Description Table. Maximum length is 256 characters.
      description: DVB Service Description Table (SDT)
    DvbSubDestinationAlignment:
      type: string
      enum:
        - CENTERED
        - LEFT
        - SMART
      description: Dvb Sub Destination Alignment
    DvbSubDestinationBackgroundColor:
      type: string
      enum:
        - BLACK
        - NONE
        - WHITE
      description: Dvb Sub Destination Background Color
    DvbSubDestinationFontColor:
      type: string
      enum:
        - BLACK
        - BLUE
        - GREEN
        - RED
        - WHITE
        - YELLOW
      description: Dvb Sub Destination Font Color
    DvbSubDestinationOutlineColor:
      type: string
      enum:
        - BLACK
        - BLUE
        - GREEN
        - RED
        - WHITE
        - YELLOW
      description: Dvb Sub Destination Outline Color
    DvbSubDestinationShadowColor:
      type: string
      enum:
        - BLACK
        - NONE
        - WHITE
      description: Dvb Sub Destination Shadow Color
    DvbSubDestinationTeletextGridControl:
      type: string
      enum:
        - FIXED
        - SCALED
      description: Dvb Sub Destination Teletext Grid Control
    DvbSubOcrLanguage:
      type: string
      enum:
        - DEU
        - ENG
        - FRA
        - NLD
        - POR
        - SPA
      description: Dvb Sub Ocr Language
    __integerMin1000Max30000:
      type: integer
      description: Placeholder documentation for __integerMin1000Max30000
      minimum: 1000
      maximum: 30000
    DvbTdtSettings:
      type: object
      properties:
        RepInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000Max30000'
            - xml:
                name: repInterval
              description: The number of milliseconds between instances of this table in the output transport stream.
      description: DVB Time and Date Table (SDT)
    Eac3AttenuationControl:
      type: string
      enum:
        - ATTENUATE_3_DB
        - NONE
      description: Eac3 Attenuation Control
    Eac3BitstreamMode:
      type: string
      enum:
        - COMMENTARY
        - COMPLETE_MAIN
        - EMERGENCY
        - HEARING_IMPAIRED
        - VISUALLY_IMPAIRED
      description: Eac3 Bitstream Mode
    Eac3CodingMode:
      type: string
      enum:
        - CODING_MODE_1_0
        - CODING_MODE_2_0
        - CODING_MODE_3_2
      description: Eac3 Coding Mode
    Eac3DcFilter:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Eac3 Dc Filter
    Eac3DrcLine:
      type: string
      enum:
        - FILM_LIGHT
        - FILM_STANDARD
        - MUSIC_LIGHT
        - MUSIC_STANDARD
        - NONE
        - SPEECH
      description: Eac3 Drc Line
    Eac3DrcRf:
      type: string
      enum:
        - FILM_LIGHT
        - FILM_STANDARD
        - MUSIC_LIGHT
        - MUSIC_STANDARD
        - NONE
        - SPEECH
      description: Eac3 Drc Rf
    Eac3LfeControl:
      type: string
      enum:
        - LFE
        - NO_LFE
      description: Eac3 Lfe Control
    Eac3LfeFilter:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Eac3 Lfe Filter
    Eac3MetadataControl:
      type: string
      enum:
        - FOLLOW_INPUT
        - USE_CONFIGURED
      description: Eac3 Metadata Control
    Eac3PassthroughControl:
      type: string
      enum:
        - NO_PASSTHROUGH
        - WHEN_POSSIBLE
      description: Eac3 Passthrough Control
    Eac3PhaseControl:
      type: string
      enum:
        - NO_SHIFT
        - SHIFT_90_DEGREES
      description: Eac3 Phase Control
    Eac3StereoDownmix:
      type: string
      enum:
        - DPL2
        - LO_RO
        - LT_RT
        - NOT_INDICATED
      description: Eac3 Stereo Downmix
    Eac3SurroundExMode:
      type: string
      enum:
        - DISABLED
        - ENABLED
        - NOT_INDICATED
      description: Eac3 Surround Ex Mode
    Eac3SurroundMode:
      type: string
      enum:
        - DISABLED
        - ENABLED
        - NOT_INDICATED
      description: Eac3 Surround Mode
    __stringMax1000:
      type: string
      description: Placeholder documentation for __stringMax1000
      maxLength: 1000
    EbuTtDFillLineGapControl:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Ebu Tt DFill Line Gap Control
    EbuTtDDestinationStyleControl:
      type: string
      enum:
        - EXCLUDE
        - INCLUDE
      description: Ebu Tt DDestination Style Control
    EmbeddedConvert608To708:
      type: string
      enum:
        - DISABLED
        - UPCONVERT
      description: Embedded Convert608 To708
    EmbeddedScte20Detection:
      type: string
      enum:
        - AUTO
        - 'OFF'
      description: Embedded Scte20 Detection
    __integerMin1Max5:
      type: integer
      description: Placeholder documentation for __integerMin1Max5
      minimum: 1
      maximum: 5
    FailoverConditionSettings:
      type: object
      properties:
        AudioSilenceSettings:
          allOf:
            - $ref: '#/components/schemas/AudioSilenceFailoverSettings'
            - xml:
                name: audioSilenceSettings
              description: MediaLive will perform a failover if the specified audio selector is silent for the specified period.
        InputLossSettings:
          allOf:
            - $ref: '#/components/schemas/InputLossFailoverSettings'
            - xml:
                name: inputLossSettings
              description: MediaLive will perform a failover if content is not detected in this input for the specified period.
        VideoBlackSettings:
          allOf:
            - $ref: '#/components/schemas/VideoBlackFailoverSettings'
            - xml:
                name: videoBlackSettings
              description: MediaLive will perform a failover if content is considered black for the specified period.
      description: Settings for one failover condition.
    FailoverCondition:
      type: object
      properties:
        FailoverConditionSettings:
          allOf:
            - $ref: '#/components/schemas/FailoverConditionSettings'
            - xml:
                name: failoverConditionSettings
              description: Failover condition type-specific settings.
      description: Failover Condition settings. There can be multiple failover conditions inside AutomaticInputFailoverSettings.
    InputLossFailoverSettings:
      type: object
      properties:
        InputLossThresholdMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin100'
            - xml:
                name: inputLossThresholdMsec
              description: 'The amount of time (in milliseconds) that no input is detected. After that time, an input failover will occur.'
      description: MediaLive will perform a failover if content is not detected in this input for the specified period.
    VideoBlackFailoverSettings:
      type: object
      properties:
        BlackDetectThreshold:
          allOf:
            - $ref: '#/components/schemas/__doubleMin0Max1'
            - xml:
                name: blackDetectThreshold
              description: 'A value used in calculating the threshold below which MediaLive considers a pixel to be ''black''. For the input to be considered black, every pixel in a frame must be below this threshold. The threshold is calculated as a percentage (expressed as a decimal) of white. Therefore .1 means 10% white (or 90% black). Note how the formula works for any color depth. For example, if you set this field to 0.1 in 10-bit color depth: (1023*0.1=102.3), which means a pixel value of 102 or less is ''black''. If you set this field to .1 in an 8-bit color depth: (255*0.1=25.5), which means a pixel value of 25 or less is ''black''. The range is 0.0 to 1.0, with any number of decimal places.'
        VideoBlackThresholdMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000'
            - xml:
                name: videoBlackThresholdMsec
              description: The amount of time (in milliseconds) that the active input must be black before automatic input failover occurs.
      description: Placeholder documentation for VideoBlackFailoverSettings
    FeatureActivationsInputPrepareScheduleActions:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Feature Activations Input Prepare Schedule Actions
    FecOutputIncludeFec:
      type: string
      enum:
        - COLUMN
        - COLUMN_AND_ROW
      description: Fec Output Include Fec
    __integerMin4Max20:
      type: integer
      description: Placeholder documentation for __integerMin4Max20
      minimum: 4
      maximum: 20
    __integerMin1Max20:
      type: integer
      description: Placeholder documentation for __integerMin1Max20
      minimum: 1
      maximum: 20
    FecOutputSettings:
      type: object
      properties:
        ColumnDepth:
          allOf:
            - $ref: '#/components/schemas/__integerMin4Max20'
            - xml:
                name: columnDepth
              description: 'Parameter D from SMPTE 2022-1. The height of the FEC protection matrix.  The number of transport stream packets per column error correction packet. Must be between 4 and 20, inclusive.'
        IncludeFec:
          allOf:
            - $ref: '#/components/schemas/FecOutputIncludeFec'
            - xml:
                name: includeFec
              description: Enables column only or column and row based FEC
        RowLength:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max20'
            - xml:
                name: rowLength
              description: 'Parameter L from SMPTE 2022-1. The width of the FEC protection matrix.  Must be between 1 and 20, inclusive. If only Column FEC is used, then larger values increase robustness.  If Row FEC is used, then this is the number of transport stream packets per row error correction packet, and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow. If includeFec is column, this value must be 1 to 20, inclusive.'
      description: Fec Output Settings
    FixedAfd:
      type: string
      enum:
        - AFD_0000
        - AFD_0010
        - AFD_0011
        - AFD_0100
        - AFD_1000
        - AFD_1001
        - AFD_1010
        - AFD_1011
        - AFD_1101
        - AFD_1110
        - AFD_1111
      description: Fixed Afd
    FixedModeScheduleActionStartSettings:
      type: object
      required:
        - Time
      properties:
        Time:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: time
              description: 'Start time for the action to start in the channel. (Not the time for the action to be added to the schedule: actions are always added to the schedule immediately.) UTC format: yyyy-mm-ddThh:mm:ss.nnnZ. All the letters are digits (for example, mm might be 01) except for the two constants "T" for time and "Z" for "UTC format".'
      description: Start time for the action.
    Fmp4NielsenId3Behavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: Fmp4 Nielsen Id3 Behavior
    Fmp4TimedMetadataBehavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: Fmp4 Timed Metadata Behavior
    Fmp4HlsSettings:
      type: object
      properties:
        AudioRenditionSets:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioRenditionSets
              description: 'List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by '',''.'
        NielsenId3Behavior:
          allOf:
            - $ref: '#/components/schemas/Fmp4NielsenId3Behavior'
            - xml:
                name: nielsenId3Behavior
              description: 'If set to passthrough, Nielsen inaudible tones for media tracking will be detected in the input audio and an equivalent ID3 tag will be inserted in the output.'
        TimedMetadataBehavior:
          allOf:
            - $ref: '#/components/schemas/Fmp4TimedMetadataBehavior'
            - xml:
                name: timedMetadataBehavior
              description: 'When set to passthrough, timed metadata is passed through from input to output.'
      description: Fmp4 Hls Settings
    FollowPoint:
      type: string
      enum:
        - END
        - START
      description: Follow reference point.
    FollowModeScheduleActionStartSettings:
      type: object
      required:
        - ReferenceActionName
        - FollowPoint
      properties:
        FollowPoint:
          allOf:
            - $ref: '#/components/schemas/FollowPoint'
            - xml:
                name: followPoint
              description: Identifies whether this action starts relative to the start or relative to the end of the reference action.
        ReferenceActionName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: referenceActionName
              description: The action name of another action that this one refers to.
      description: Settings to specify if an action follows another.
    FrameCaptureS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
            - $ref: '#/components/schemas/S3CannedAcl'
            - xml:
                name: cannedAcl
              description: Specify the canned ACL to apply to each S3 request. Defaults to none.
      description: Frame Capture S3 Settings
    FrameCaptureCdnSettings:
      type: object
      properties:
        FrameCaptureS3Settings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureS3Settings'
            - xml:
                name: frameCaptureS3Settings
      description: Frame Capture Cdn Settings
    FrameCaptureGroupSettings:
      type: object
      required:
        - Destination
      properties:
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: 'The destination for the frame capture files. Either the URI for an Amazon S3 bucket and object, plus a file name prefix (for example, s3ssl://sportsDelivery/highlights/20180820/curling-) or the URI for a MediaStore container, plus a file name prefix (for example, mediastoressl://sportsDelivery/20180820/curling-). The final file names consist of the prefix from the destination field (for example, "curling-") + name modifier + the counter (5 digits, starting from 00001) + extension (which is always .jpg).  For example, curling-low.00001.jpg'
        FrameCaptureCdnSettings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureCdnSettings'
            - xml:
                name: frameCaptureCdnSettings
              description: Parameters that control interactions with the CDN.
      description: Frame Capture Group Settings
    FrameCaptureHlsSettings:
      type: object
      properties: {}
      description: Frame Capture Hls Settings
    FrameCaptureIntervalUnit:
      type: string
      enum:
        - MILLISECONDS
        - SECONDS
      description: Frame Capture Interval Unit
    FrameCaptureOutputSettings:
      type: object
      properties:
        NameModifier:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nameModifier
              description: Required if the output group contains more than one output. This modifier forms part of the output file name.
      description: Frame Capture Output Settings
    __integerMin1Max3600000:
      type: integer
      description: Placeholder documentation for __integerMin1Max3600000
      minimum: 1
      maximum: 3600000
    FrameCaptureSettings:
      type: object
      properties:
        CaptureInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max3600000'
            - xml:
                name: captureInterval
              description: 'The frequency at which to capture frames for inclusion in the output. May be specified in either seconds or milliseconds, as specified by captureIntervalUnits.'
        CaptureIntervalUnits:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureIntervalUnit'
            - xml:
                name: captureIntervalUnits
              description: Unit for the frame capture interval.
      description: Frame Capture Settings
    __integerMinNegative60Max60:
      type: integer
      description: Placeholder documentation for __integerMinNegative60Max60
      minimum: -60
      maximum: 60
    GlobalConfigurationInputEndAction:
      type: string
      enum:
        - NONE
        - SWITCH_AND_LOOP_INPUTS
      description: Global Configuration Input End Action
    InputLossBehavior:
      type: object
      properties:
        BlackFrameMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000000'
            - xml:
                name: blackFrameMsec
              description: Documentation update needed
        InputLossImageColor:
          allOf:
            - $ref: '#/components/schemas/__stringMin6Max6'
            - xml:
                name: inputLossImageColor
              description: 'When input loss image type is "color" this field specifies the color to use. Value: 6 hex characters representing the values of RGB.'
        InputLossImageSlate:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: inputLossImageSlate
              description: When input loss image type is "slate" these fields specify the parameters for accessing the slate.
        InputLossImageType:
          allOf:
            - $ref: '#/components/schemas/InputLossImageType'
            - xml:
                name: inputLossImageType
              description: Indicates whether to substitute a solid color or a slate into the output after input loss exceeds blackFrameMsec.
        RepeatFrameMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000000'
            - xml:
                name: repeatFrameMsec
              description: Documentation update needed
      description: Input Loss Behavior
    GlobalConfigurationOutputLockingMode:
      type: string
      enum:
        - EPOCH_LOCKING
        - PIPELINE_LOCKING
      description: Global Configuration Output Locking Mode
    GlobalConfigurationOutputTimingSource:
      type: string
      enum:
        - INPUT_CLOCK
        - SYSTEM_CLOCK
      description: Global Configuration Output Timing Source
    GlobalConfigurationLowFramerateInputs:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Global Configuration Low Framerate Inputs
    H264AdaptiveQuantization:
      type: string
      enum:
        - AUTO
        - HIGH
        - HIGHER
        - LOW
        - MAX
        - MEDIUM
        - 'OFF'
      description: H264 Adaptive Quantization
    H264ColorMetadata:
      type: string
      enum:
        - IGNORE
        - INSERT
      description: H264 Color Metadata
    Rec601Settings:
      type: object
      properties: {}
      description: Rec601 Settings
    Rec709Settings:
      type: object
      properties: {}
      description: Rec709 Settings
    H264ColorSpaceSettings:
      type: object
      properties:
        ColorSpacePassthroughSettings:
          allOf:
            - $ref: '#/components/schemas/ColorSpacePassthroughSettings'
            - xml:
                name: colorSpacePassthroughSettings
        Rec601Settings:
          allOf:
            - $ref: '#/components/schemas/Rec601Settings'
            - xml:
                name: rec601Settings
        Rec709Settings:
          allOf:
            - $ref: '#/components/schemas/Rec709Settings'
            - xml:
                name: rec709Settings
      description: H264 Color Space Settings
    H264EntropyEncoding:
      type: string
      enum:
        - CABAC
        - CAVLC
      description: H264 Entropy Encoding
    TemporalFilterSettings:
      type: object
      properties:
        PostFilterSharpening:
          allOf:
            - $ref: '#/components/schemas/TemporalFilterPostFilterSharpening'
            - xml:
                name: postFilterSharpening
              description: |-
                If you enable this filter, the results are the following:
                - If the source content is noisy (it contains excessive digital artifacts), the filter cleans up the source.
                - If the source content is already clean, the filter tends to decrease the bitrate, especially when the rate control mode is QVBR.
        Strength:
          allOf:
            - $ref: '#/components/schemas/TemporalFilterStrength'
            - xml:
                name: strength
              description: 'Choose a filter strength. We recommend a strength of 1 or 2. A higher strength might take out good information, resulting in an image that is overly soft.'
      description: Temporal Filter Settings
    H264FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          allOf:
            - $ref: '#/components/schemas/TemporalFilterSettings'
            - xml:
                name: temporalFilterSettings
      description: H264 Filter Settings
    H264FlickerAq:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Flicker Aq
    H264ForceFieldPictures:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Force Field Pictures
    H264FramerateControl:
      type: string
      enum:
        - INITIALIZE_FROM_SOURCE
        - SPECIFIED
      description: H264 Framerate Control
    H264GopBReference:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Gop BReference
    H264GopSizeUnits:
      type: string
      enum:
        - FRAMES
        - SECONDS
      description: H264 Gop Size Units
    H264Level:
      type: string
      enum:
        - H264_LEVEL_1
        - H264_LEVEL_1_1
        - H264_LEVEL_1_2
        - H264_LEVEL_1_3
        - H264_LEVEL_2
        - H264_LEVEL_2_1
        - H264_LEVEL_2_2
        - H264_LEVEL_3
        - H264_LEVEL_3_1
        - H264_LEVEL_3_2
        - H264_LEVEL_4
        - H264_LEVEL_4_1
        - H264_LEVEL_4_2
        - H264_LEVEL_5
        - H264_LEVEL_5_1
        - H264_LEVEL_5_2
        - H264_LEVEL_AUTO
      description: H264 Level
    H264LookAheadRateControl:
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM
      description: H264 Look Ahead Rate Control
    H264ParControl:
      type: string
      enum:
        - INITIALIZE_FROM_SOURCE
        - SPECIFIED
      description: H264 Par Control
    H264Profile:
      type: string
      enum:
        - BASELINE
        - HIGH
        - HIGH_10BIT
        - HIGH_422
        - HIGH_422_10BIT
        - MAIN
      description: H264 Profile
    H264QualityLevel:
      type: string
      enum:
        - ENHANCED_QUALITY
        - STANDARD_QUALITY
      description: H264 Quality Level
    H264RateControlMode:
      type: string
      enum:
        - CBR
        - MULTIPLEX
        - QVBR
        - VBR
      description: H264 Rate Control Mode
    H264ScanType:
      type: string
      enum:
        - INTERLACED
        - PROGRESSIVE
      description: H264 Scan Type
    H264SceneChangeDetect:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Scene Change Detect
    __integerMin0Max100:
      type: integer
      description: Placeholder documentation for __integerMin0Max100
      minimum: 0
      maximum: 100
    __integerMin0Max30:
      type: integer
      description: Placeholder documentation for __integerMin0Max30
      minimum: 0
      maximum: 30
    __integerMin1Max6:
      type: integer
      description: Placeholder documentation for __integerMin1Max6
      minimum: 1
      maximum: 6
    __integerMin1Max10:
      type: integer
      description: Placeholder documentation for __integerMin1Max10
      minimum: 1
      maximum: 10
    __integerMin1Max32:
      type: integer
      description: Placeholder documentation for __integerMin1Max32
      minimum: 1
      maximum: 32
    __integerMin0Max128:
      type: integer
      description: Placeholder documentation for __integerMin0Max128
      minimum: 0
      maximum: 128
    H264SpatialAq:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Spatial Aq
    H264SubGopLength:
      type: string
      enum:
        - DYNAMIC
        - FIXED
      description: H264 Sub Gop Length
    H264Syntax:
      type: string
      enum:
        - DEFAULT
        - RP2027
      description: H264 Syntax
    H264TemporalAq:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H264 Temporal Aq
    H264TimecodeInsertionBehavior:
      type: string
      enum:
        - DISABLED
        - PIC_TIMING_SEI
      description: H264 Timecode Insertion Behavior
    H264Settings:
      type: object
      properties:
        AdaptiveQuantization:
          allOf:
            - $ref: '#/components/schemas/H264AdaptiveQuantization'
            - xml:
                name: adaptiveQuantization
              description: 'Enables or disables adaptive quantization, which is a technique MediaLive can apply to video on a frame-by-frame basis to produce more compression without losing quality. There are three types of adaptive quantization: flicker, spatial, and temporal. Set the field in one of these ways: Set to Auto. Recommended. For each type of AQ, MediaLive will determine if AQ is needed, and if so, the appropriate strength. Set a strength (a value other than Auto or Disable). This strength will apply to any of the AQ fields that you choose to enable. Set to Disabled to disable all types of adaptive quantization.'
        AfdSignaling:
          allOf:
            - $ref: '#/components/schemas/AfdSignaling'
            - xml:
                name: afdSignaling
              description: 'Indicates that AFD values will be written into the output stream.  If afdSignaling is "auto", the system will try to preserve the input AFD value (in cases where multiple AFD values are valid). If set to "fixed", the AFD value will be the value configured in the fixedAfd parameter.'
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000'
            - xml:
                name: bitrate
              description: 'Average bitrate in bits/second. Required when the rate control mode is VBR or CBR. Not used for QVBR. In an MS Smooth output group, each output must have a unique value when its bitrate is rounded down to the nearest multiple of 1000.'
        BufFillPct:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max100'
            - xml:
                name: bufFillPct
              description: Percentage of the buffer that should initially be filled (HRD buffer model).
        BufSize:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: bufSize
              description: Size of buffer (HRD buffer model) in bits.
        ColorMetadata:
          allOf:
            - $ref: '#/components/schemas/H264ColorMetadata'
            - xml:
                name: colorMetadata
              description: Includes colorspace metadata in the output.
        ColorSpaceSettings:
          allOf:
            - $ref: '#/components/schemas/H264ColorSpaceSettings'
            - xml:
                name: colorSpaceSettings
              description: Color Space settings
        EntropyEncoding:
          allOf:
            - $ref: '#/components/schemas/H264EntropyEncoding'
            - xml:
                name: entropyEncoding
              description: Entropy encoding mode.  Use cabac (must be in Main or High profile) or cavlc.
        FilterSettings:
          allOf:
            - $ref: '#/components/schemas/H264FilterSettings'
            - xml:
                name: filterSettings
              description: Optional filters that you can apply to an encode.
        FixedAfd:
          allOf:
            - $ref: '#/components/schemas/FixedAfd'
            - xml:
                name: fixedAfd
              description: Four bit AFD value to write on all frames of video in the output stream. Only valid when afdSignaling is set to 'Fixed'.
        FlickerAq:
          allOf:
            - $ref: '#/components/schemas/H264FlickerAq'
            - xml:
                name: flickerAq
              description: 'Flicker AQ makes adjustments within each frame to reduce flicker or ''pop'' on I-frames. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if flicker AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply flicker AQ using the specified strength. Disabled: MediaLive won''t apply flicker AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn''t apply flicker AQ.'
        ForceFieldPictures:
          allOf:
            - $ref: '#/components/schemas/H264ForceFieldPictures'
            - xml:
                name: forceFieldPictures
              description: |-
                This setting applies only when scan type is "interlaced." It controls whether coding is performed on a field basis or on a frame basis. (When the video is progressive, the coding is always performed on a frame basis.)
                enabled: Force MediaLive to code on a field basis, so that odd and even sets of fields are coded separately.
                disabled: Code the two sets of fields separately (on a field basis) or together (on a frame basis using PAFF), depending on what is most appropriate for the content.
        FramerateControl:
          allOf:
            - $ref: '#/components/schemas/H264FramerateControl'
            - xml:
                name: framerateControl
              description: 'This field indicates how the output video frame rate is specified.  If "specified" is selected then the output video frame rate is determined by framerateNumerator and framerateDenominator, else if "initializeFromSource" is selected then the output video frame rate will be set equal to the input video frame rate of the first input.'
        FramerateDenominator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: framerateDenominator
              description: Framerate denominator.
        FramerateNumerator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: framerateNumerator
              description: 'Framerate numerator - framerate is a fraction, e.g. 24000 / 1001 = 23.976 fps.'
        GopBReference:
          allOf:
            - $ref: '#/components/schemas/H264GopBReference'
            - xml:
                name: gopBReference
              description: Documentation update needed
        GopClosedCadence:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: gopClosedCadence
              description: 'Frequency of closed GOPs. In streaming applications, it is recommended that this be set to 1 so a decoder joining mid-stream will receive an IDR frame as quickly as possible. Setting this value to 0 will break output segmenting.'
        GopNumBFrames:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max7'
            - xml:
                name: gopNumBFrames
              description: Number of B-frames between reference frames.
        GopSize:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: gopSize
              description: |-
                GOP size (keyframe interval) in units of either frames or seconds per gopSizeUnits.
                If gopSizeUnits is frames, gopSize must be an integer and must be greater than or equal to 1.
                If gopSizeUnits is seconds, gopSize must be greater than 0, but need not be an integer.
        GopSizeUnits:
          allOf:
            - $ref: '#/components/schemas/H264GopSizeUnits'
            - xml:
                name: gopSizeUnits
              description: Indicates if the gopSize is specified in frames or seconds. If seconds the system will convert the gopSize into a frame count at run time.
        Level:
          allOf:
            - $ref: '#/components/schemas/H264Level'
            - xml:
                name: level
              description: H.264 Level.
        LookAheadRateControl:
          allOf:
            - $ref: '#/components/schemas/H264LookAheadRateControl'
            - xml:
                name: lookAheadRateControl
              description: 'Amount of lookahead. A value of low can decrease latency and memory usage, while high can produce better quality for certain content.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000'
            - xml:
                name: maxBitrate
              description: |-
                For QVBR: See the tooltip for Quality level

                For VBR: Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.
        MinIInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max30'
            - xml:
                name: minIInterval
              description: 'Only meaningful if sceneChangeDetect is set to enabled.  Defaults to 5 if multiplex rate control is used.  Enforces separation between repeated (cadence) I-frames and I-frames inserted by Scene Change Detection. If a scene change I-frame is within I-interval frames of a cadence I-frame, the GOP is shrunk and/or stretched to the scene change I-frame. GOP stretch requires enabling lookahead as well as setting I-interval. The normal cadence resumes for the next GOP. Note: Maximum GOP stretch = GOP size + Min-I-interval - 1'
        NumRefFrames:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max6'
            - xml:
                name: numRefFrames
              description: Number of reference frames to use. The encoder may use more than requested if using B-frames and/or interlaced encoding.
        ParControl:
          allOf:
            - $ref: '#/components/schemas/H264ParControl'
            - xml:
                name: parControl
              description: 'This field indicates how the output pixel aspect ratio is specified.  If "specified" is selected then the output video pixel aspect ratio is determined by parNumerator and parDenominator, else if "initializeFromSource" is selected then the output pixsel aspect ratio will be set equal to the input video pixel aspect ratio of the first input.'
        ParDenominator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: parDenominator
              description: Pixel Aspect Ratio denominator.
        ParNumerator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: parNumerator
              description: Pixel Aspect Ratio numerator.
        Profile:
          allOf:
            - $ref: '#/components/schemas/H264Profile'
            - xml:
                name: profile
              description: H.264 Profile.
        QualityLevel:
          allOf:
            - $ref: '#/components/schemas/H264QualityLevel'
            - xml:
                name: qualityLevel
              description: |-
                Leave as STANDARD_QUALITY or choose a different value (which might result in additional costs to run the channel).
                - ENHANCED_QUALITY: Produces a slightly better video quality without an increase in the bitrate. Has an effect only when the Rate control mode is QVBR or CBR. If this channel is in a MediaLive multiplex, the value must be ENHANCED_QUALITY.
                - STANDARD_QUALITY: Valid for any Rate control mode.
        QvbrQualityLevel:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max10'
            - xml:
                name: qvbrQualityLevel
              description: |-
                Controls the target quality for the video encode. Applies only when the rate control mode is QVBR. You can set a target quality or you can let MediaLive determine the best quality. To set a target quality, enter values in the QVBR quality level field and the Max bitrate field. Enter values that suit your most important viewing devices. Recommended values are:
                - Primary screen: Quality level: 8 to 10. Max bitrate: 4M
                - PC or tablet: Quality level: 7. Max bitrate: 1.5M to 3M
                - Smartphone: Quality level: 6. Max bitrate: 1M to 1.5M
                To let MediaLive decide, leave the QVBR quality level field empty, and in Max bitrate enter the maximum rate you want in the video. For more information, see the section called "Video - rate control mode" in the MediaLive user guide
        RateControlMode:
          allOf:
            - $ref: '#/components/schemas/H264RateControlMode'
            - xml:
                name: rateControlMode
              description: |-
                Rate control mode.

                QVBR: Quality will match the specified quality level except when it is constrained by the
                maximum bitrate.  Recommended if you or your viewers pay for bandwidth.

                VBR: Quality and bitrate vary, depending on the video complexity. Recommended instead of QVBR
                if you want to maintain a specific average bitrate over the duration of the channel.

                CBR: Quality varies, depending on the video complexity. Recommended only if you distribute
                your assets to devices that cannot handle variable bitrates.

                Multiplex: This rate control mode is only supported (and is required) when the video is being
                delivered to a MediaLive Multiplex in which case the rate control configuration is controlled
                by the properties within the Multiplex Program.
        ScanType:
          allOf:
            - $ref: '#/components/schemas/H264ScanType'
            - xml:
                name: scanType
              description: Sets the scan type of the output to progressive or top-field-first interlaced.
        SceneChangeDetect:
          allOf:
            - $ref: '#/components/schemas/H264SceneChangeDetect'
            - xml:
                name: sceneChangeDetect
              description: |-
                Scene change detection.

                - On: inserts I-frames when scene change is detected.
                - Off: does not force an I-frame when scene change is detected.
        Slices:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max32'
            - xml:
                name: slices
              description: |-
                Number of slices per picture. Must be less than or equal to the number of macroblock rows for progressive pictures, and less than or equal to half the number of macroblock rows for interlaced pictures.
                This field is optional; when no value is specified the encoder will choose the number of slices based on encode resolution.
        Softness:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max128'
            - xml:
                name: softness
              description: 'Softness. Selects quantizer matrix, larger values reduce high-frequency content in the encoded image.  If not set to zero, must be greater than 15.'
        SpatialAq:
          allOf:
            - $ref: '#/components/schemas/H264SpatialAq'
            - xml:
                name: spatialAq
              description: 'Spatial AQ makes adjustments within each frame based on spatial variation of content complexity. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if spatial AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply spatial AQ using the specified strength. Disabled: MediaLive won''t apply spatial AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn''t apply spatial AQ.'
        SubgopLength:
          allOf:
            - $ref: '#/components/schemas/H264SubGopLength'
            - xml:
                name: subgopLength
              description: 'If set to fixed, use gopNumBFrames B-frames per sub-GOP. If set to dynamic, optimize the number of B-frames used for each sub-GOP to improve visual quality.'
        Syntax:
          allOf:
            - $ref: '#/components/schemas/H264Syntax'
            - xml:
                name: syntax
              description: Produces a bitstream compliant with SMPTE RP-2027.
        TemporalAq:
          allOf:
            - $ref: '#/components/schemas/H264TemporalAq'
            - xml:
                name: temporalAq
              description: 'Temporal makes adjustments within each frame based on temporal variation of content complexity. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if temporal AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply temporal AQ using the specified strength. Disabled: MediaLive won''t apply temporal AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn''t apply temporal AQ.'
        TimecodeInsertion:
          allOf:
            - $ref: '#/components/schemas/H264TimecodeInsertionBehavior'
            - xml:
                name: timecodeInsertion
              description: |-
                Determines how timecodes should be inserted into the video elementary stream.
                - 'disabled': Do not include timecodes
                - 'picTimingSei': Pass through picture timing SEI messages from the source specified in Timecode Config
      description: H264 Settings
    H265AdaptiveQuantization:
      type: string
      enum:
        - AUTO
        - HIGH
        - HIGHER
        - LOW
        - MAX
        - MEDIUM
        - 'OFF'
      description: H265 Adaptive Quantization
    H265AlternativeTransferFunction:
      type: string
      enum:
        - INSERT
        - OMIT
      description: H265 Alternative Transfer Function
    H265ColorMetadata:
      type: string
      enum:
        - IGNORE
        - INSERT
      description: H265 Color Metadata
    Hdr10Settings:
      type: object
      properties:
        MaxCll:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max32768'
            - xml:
                name: maxCll
              description: |-
                Maximum Content Light Level
                An integer metadata value defining the maximum light level, in nits,
                of any single pixel within an encoded HDR video stream or file.
        MaxFall:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max32768'
            - xml:
                name: maxFall
              description: |-
                Maximum Frame Average Light Level
                An integer metadata value defining the maximum average light level, in nits,
                for any single frame within an encoded HDR video stream or file.
      description: Hdr10 Settings
    H265ColorSpaceSettings:
      type: object
      properties:
        ColorSpacePassthroughSettings:
          allOf:
            - $ref: '#/components/schemas/ColorSpacePassthroughSettings'
            - xml:
                name: colorSpacePassthroughSettings
        Hdr10Settings:
          allOf:
            - $ref: '#/components/schemas/Hdr10Settings'
            - xml:
                name: hdr10Settings
        Rec601Settings:
          allOf:
            - $ref: '#/components/schemas/Rec601Settings'
            - xml:
                name: rec601Settings
        Rec709Settings:
          allOf:
            - $ref: '#/components/schemas/Rec709Settings'
            - xml:
                name: rec709Settings
      description: H265 Color Space Settings
    H265FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          allOf:
            - $ref: '#/components/schemas/TemporalFilterSettings'
            - xml:
                name: temporalFilterSettings
      description: H265 Filter Settings
    H265FlickerAq:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H265 Flicker Aq
    H265GopSizeUnits:
      type: string
      enum:
        - FRAMES
        - SECONDS
      description: H265 Gop Size Units
    H265Level:
      type: string
      enum:
        - H265_LEVEL_1
        - H265_LEVEL_2
        - H265_LEVEL_2_1
        - H265_LEVEL_3
        - H265_LEVEL_3_1
        - H265_LEVEL_4
        - H265_LEVEL_4_1
        - H265_LEVEL_5
        - H265_LEVEL_5_1
        - H265_LEVEL_5_2
        - H265_LEVEL_6
        - H265_LEVEL_6_1
        - H265_LEVEL_6_2
        - H265_LEVEL_AUTO
      description: H265 Level
    H265LookAheadRateControl:
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM
      description: H265 Look Ahead Rate Control
    H265Profile:
      type: string
      enum:
        - MAIN
        - MAIN_10BIT
      description: H265 Profile
    H265RateControlMode:
      type: string
      enum:
        - CBR
        - MULTIPLEX
        - QVBR
      description: H265 Rate Control Mode
    H265ScanType:
      type: string
      enum:
        - INTERLACED
        - PROGRESSIVE
      description: H265 Scan Type
    H265SceneChangeDetect:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: H265 Scene Change Detect
    __integerMin100000Max40000000:
      type: integer
      description: Placeholder documentation for __integerMin100000Max40000000
      minimum: 100000
      maximum: 40000000
    __integerMin100000Max80000000:
      type: integer
      description: Placeholder documentation for __integerMin100000Max80000000
      minimum: 100000
      maximum: 80000000
    __integerMin1Max3003:
      type: integer
      description: Placeholder documentation for __integerMin1Max3003
      minimum: 1
      maximum: 3003
    __integerMin1Max16:
      type: integer
      description: Placeholder documentation for __integerMin1Max16
      minimum: 1
      maximum: 16
    H265Tier:
      type: string
      enum:
        - HIGH
        - MAIN
      description: H265 Tier
    H265TimecodeInsertionBehavior:
      type: string
      enum:
        - DISABLED
        - PIC_TIMING_SEI
      description: H265 Timecode Insertion Behavior
    H265Settings:
      type: object
      required:
        - FramerateNumerator
        - FramerateDenominator
      properties:
        AdaptiveQuantization:
          allOf:
            - $ref: '#/components/schemas/H265AdaptiveQuantization'
            - xml:
                name: adaptiveQuantization
              description: Adaptive quantization. Allows intra-frame quantizers to vary to improve visual quality.
        AfdSignaling:
          allOf:
            - $ref: '#/components/schemas/AfdSignaling'
            - xml:
                name: afdSignaling
              description: 'Indicates that AFD values will be written into the output stream.  If afdSignaling is "auto", the system will try to preserve the input AFD value (in cases where multiple AFD values are valid). If set to "fixed", the AFD value will be the value configured in the fixedAfd parameter.'
        AlternativeTransferFunction:
          allOf:
            - $ref: '#/components/schemas/H265AlternativeTransferFunction'
            - xml:
                name: alternativeTransferFunction
              description: Whether or not EML should insert an Alternative Transfer Function SEI message to support backwards compatibility with non-HDR decoders and displays.
        Bitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max40000000'
            - xml:
                name: bitrate
              description: 'Average bitrate in bits/second. Required when the rate control mode is VBR or CBR. Not used for QVBR. In an MS Smooth output group, each output must have a unique value when its bitrate is rounded down to the nearest multiple of 1000.'
        BufSize:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max80000000'
            - xml:
                name: bufSize
              description: Size of buffer (HRD buffer model) in bits.
        ColorMetadata:
          allOf:
            - $ref: '#/components/schemas/H265ColorMetadata'
            - xml:
                name: colorMetadata
              description: Includes colorspace metadata in the output.
        ColorSpaceSettings:
          allOf:
            - $ref: '#/components/schemas/H265ColorSpaceSettings'
            - xml:
                name: colorSpaceSettings
              description: Color Space settings
        FilterSettings:
          allOf:
            - $ref: '#/components/schemas/H265FilterSettings'
            - xml:
                name: filterSettings
              description: Optional filters that you can apply to an encode.
        FixedAfd:
          allOf:
            - $ref: '#/components/schemas/FixedAfd'
            - xml:
                name: fixedAfd
              description: Four bit AFD value to write on all frames of video in the output stream. Only valid when afdSignaling is set to 'Fixed'.
        FlickerAq:
          allOf:
            - $ref: '#/components/schemas/H265FlickerAq'
            - xml:
                name: flickerAq
              description: 'If set to enabled, adjust quantization within each frame to reduce flicker or ''pop'' on I-frames.'
        FramerateDenominator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max3003'
            - xml:
                name: framerateDenominator
              description: Framerate denominator.
        FramerateNumerator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: framerateNumerator
              description: 'Framerate numerator - framerate is a fraction, e.g. 24000 / 1001 = 23.976 fps.'
        GopClosedCadence:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: gopClosedCadence
              description: 'Frequency of closed GOPs. In streaming applications, it is recommended that this be set to 1 so a decoder joining mid-stream will receive an IDR frame as quickly as possible. Setting this value to 0 will break output segmenting.'
        GopSize:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: gopSize
              description: |-
                GOP size (keyframe interval) in units of either frames or seconds per gopSizeUnits.
                If gopSizeUnits is frames, gopSize must be an integer and must be greater than or equal to 1.
                If gopSizeUnits is seconds, gopSize must be greater than 0, but need not be an integer.
        GopSizeUnits:
          allOf:
            - $ref: '#/components/schemas/H265GopSizeUnits'
            - xml:
                name: gopSizeUnits
              description: Indicates if the gopSize is specified in frames or seconds. If seconds the system will convert the gopSize into a frame count at run time.
        Level:
          allOf:
            - $ref: '#/components/schemas/H265Level'
            - xml:
                name: level
              description: H.265 Level.
        LookAheadRateControl:
          allOf:
            - $ref: '#/components/schemas/H265LookAheadRateControl'
            - xml:
                name: lookAheadRateControl
              description: 'Amount of lookahead. A value of low can decrease latency and memory usage, while high can produce better quality for certain content.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max40000000'
            - xml:
                name: maxBitrate
              description: 'For QVBR: See the tooltip for Quality level'
        MinIInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max30'
            - xml:
                name: minIInterval
              description: 'Only meaningful if sceneChangeDetect is set to enabled.  Defaults to 5 if multiplex rate control is used.  Enforces separation between repeated (cadence) I-frames and I-frames inserted by Scene Change Detection. If a scene change I-frame is within I-interval frames of a cadence I-frame, the GOP is shrunk and/or stretched to the scene change I-frame. GOP stretch requires enabling lookahead as well as setting I-interval. The normal cadence resumes for the next GOP. Note: Maximum GOP stretch = GOP size + Min-I-interval - 1'
        ParDenominator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: parDenominator
              description: Pixel Aspect Ratio denominator.
        ParNumerator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: parNumerator
              description: Pixel Aspect Ratio numerator.
        Profile:
          allOf:
            - $ref: '#/components/schemas/H265Profile'
            - xml:
                name: profile
              description: H.265 Profile.
        QvbrQualityLevel:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max10'
            - xml:
                name: qvbrQualityLevel
              description: |-
                Controls the target quality for the video encode. Applies only when the rate control mode is QVBR. Set values for the QVBR quality level field and Max bitrate field that suit your most important viewing devices. Recommended values are:
                - Primary screen: Quality level: 8 to 10. Max bitrate: 4M
                - PC or tablet: Quality level: 7. Max bitrate: 1.5M to 3M
                - Smartphone: Quality level: 6. Max bitrate: 1M to 1.5M
        RateControlMode:
          allOf:
            - $ref: '#/components/schemas/H265RateControlMode'
            - xml:
                name: rateControlMode
              description: |-
                Rate control mode.

                QVBR: Quality will match the specified quality level except when it is constrained by the
                maximum bitrate.  Recommended if you or your viewers pay for bandwidth.

                CBR: Quality varies, depending on the video complexity. Recommended only if you distribute
                your assets to devices that cannot handle variable bitrates.

                Multiplex: This rate control mode is only supported (and is required) when the video is being
                delivered to a MediaLive Multiplex in which case the rate control configuration is controlled
                by the properties within the Multiplex Program.
        ScanType:
          allOf:
            - $ref: '#/components/schemas/H265ScanType'
            - xml:
                name: scanType
              description: Sets the scan type of the output to progressive or top-field-first interlaced.
        SceneChangeDetect:
          allOf:
            - $ref: '#/components/schemas/H265SceneChangeDetect'
            - xml:
                name: sceneChangeDetect
              description: Scene change detection.
        Slices:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max16'
            - xml:
                name: slices
              description: |-
                Number of slices per picture. Must be less than or equal to the number of macroblock rows for progressive pictures, and less than or equal to half the number of macroblock rows for interlaced pictures.
                This field is optional; when no value is specified the encoder will choose the number of slices based on encode resolution.
        Tier:
          allOf:
            - $ref: '#/components/schemas/H265Tier'
            - xml:
                name: tier
              description: H.265 Tier.
        TimecodeInsertion:
          allOf:
            - $ref: '#/components/schemas/H265TimecodeInsertionBehavior'
            - xml:
                name: timecodeInsertion
              description: |-
                Determines how timecodes should be inserted into the video elementary stream.
                - 'disabled': Do not include timecodes
                - 'picTimingSei': Pass through picture timing SEI messages from the source specified in Timecode Config
      description: H265 Settings
    __integerMin0Max32768:
      type: integer
      description: Placeholder documentation for __integerMin0Max32768
      minimum: 0
      maximum: 32768
    HlsAdMarkers:
      type: string
      enum:
        - ADOBE
        - ELEMENTAL
        - ELEMENTAL_SCTE35
      description: Hls Ad Markers
    HlsAkamaiHttpTransferMode:
      type: string
      enum:
        - CHUNKED
        - NON_CHUNKED
      description: Hls Akamai Http Transfer Mode
    __integerMin0Max600:
      type: integer
      description: Placeholder documentation for __integerMin0Max600
      minimum: 0
      maximum: 600
    __integerMin0Max15:
      type: integer
      description: Placeholder documentation for __integerMin0Max15
      minimum: 0
      maximum: 15
    HlsAkamaiSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying connection to the CDN if the connection is lost.
        FilecacheDuration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max600'
            - xml:
                name: filecacheDuration
              description: Size in seconds of file cache for streaming outputs.
        HttpTransferMode:
          allOf:
            - $ref: '#/components/schemas/HlsAkamaiHttpTransferMode'
            - xml:
                name: httpTransferMode
              description: Specify whether or not to use chunked transfer encoding to Akamai. User should contact Akamai to enable this feature.
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts that will be made before the Live Event is put into an error state.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max15'
            - xml:
                name: restartDelay
              description: 'If a streaming output fails, number of seconds to wait until a restart is initiated. A value of 0 means never restart.'
        Salt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: salt
              description: Salt for authenticated Akamai.
        Token:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: token
              description: 'Token parameter for authenticated akamai. If not specified, _gda_ is used.'
      description: Hls Akamai Settings
    HlsBasicPutSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying connection to the CDN if the connection is lost.
        FilecacheDuration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max600'
            - xml:
                name: filecacheDuration
              description: Size in seconds of file cache for streaming outputs.
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts that will be made before the Live Event is put into an error state.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max15'
            - xml:
                name: restartDelay
              description: 'If a streaming output fails, number of seconds to wait until a restart is initiated. A value of 0 means never restart.'
      description: Hls Basic Put Settings
    HlsCaptionLanguageSetting:
      type: string
      enum:
        - INSERT
        - NONE
        - OMIT
      description: Hls Caption Language Setting
    HlsMediaStoreSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying connection to the CDN if the connection is lost.
        FilecacheDuration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max600'
            - xml:
                name: filecacheDuration
              description: Size in seconds of file cache for streaming outputs.
        MediaStoreStorageClass:
          allOf:
            - $ref: '#/components/schemas/HlsMediaStoreStorageClass'
            - xml:
                name: mediaStoreStorageClass
              description: 'When set to temporal, output files are stored in non-persistent memory for faster reading and writing.'
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts that will be made before the Live Event is put into an error state.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max15'
            - xml:
                name: restartDelay
              description: 'If a streaming output fails, number of seconds to wait until a restart is initiated. A value of 0 means never restart.'
      description: Hls Media Store Settings
    HlsS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
            - $ref: '#/components/schemas/S3CannedAcl'
            - xml:
                name: cannedAcl
              description: Specify the canned ACL to apply to each S3 request. Defaults to none.
      description: Hls S3 Settings
    HlsWebdavSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying connection to the CDN if the connection is lost.
        FilecacheDuration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max600'
            - xml:
                name: filecacheDuration
              description: Size in seconds of file cache for streaming outputs.
        HttpTransferMode:
          allOf:
            - $ref: '#/components/schemas/HlsWebdavHttpTransferMode'
            - xml:
                name: httpTransferMode
              description: Specify whether or not to use chunked transfer encoding to WebDAV.
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts that will be made before the Live Event is put into an error state.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max15'
            - xml:
                name: restartDelay
              description: 'If a streaming output fails, number of seconds to wait until a restart is initiated. A value of 0 means never restart.'
      description: Hls Webdav Settings
    HlsCdnSettings:
      type: object
      properties:
        HlsAkamaiSettings:
          allOf:
            - $ref: '#/components/schemas/HlsAkamaiSettings'
            - xml:
                name: hlsAkamaiSettings
        HlsBasicPutSettings:
          allOf:
            - $ref: '#/components/schemas/HlsBasicPutSettings'
            - xml:
                name: hlsBasicPutSettings
        HlsMediaStoreSettings:
          allOf:
            - $ref: '#/components/schemas/HlsMediaStoreSettings'
            - xml:
                name: hlsMediaStoreSettings
        HlsS3Settings:
          allOf:
            - $ref: '#/components/schemas/HlsS3Settings'
            - xml:
                name: hlsS3Settings
        HlsWebdavSettings:
          allOf:
            - $ref: '#/components/schemas/HlsWebdavSettings'
            - xml:
                name: hlsWebdavSettings
      description: Hls Cdn Settings
    HlsClientCache:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Hls Client Cache
    HlsCodecSpecification:
      type: string
      enum:
        - RFC_4281
        - RFC_6381
      description: Hls Codec Specification
    HlsDirectoryStructure:
      type: string
      enum:
        - SINGLE_DIRECTORY
        - SUBDIRECTORY_PER_STREAM
      description: Hls Directory Structure
    HlsDiscontinuityTags:
      type: string
      enum:
        - INSERT
        - NEVER_INSERT
      description: Hls Discontinuity Tags
    HlsEncryptionType:
      type: string
      enum:
        - AES128
        - SAMPLE_AES
      description: Hls Encryption Type
    __listOfHlsAdMarkers:
      type: array
      description: Placeholder documentation for __listOfHlsAdMarkers
      items:
        $ref: '#/components/schemas/HlsAdMarkers'
    __listOfCaptionLanguageMapping:
      type: array
      description: Placeholder documentation for __listOfCaptionLanguageMapping
      items:
        $ref: '#/components/schemas/CaptionLanguageMapping'
    __stringMin32Max32:
      type: string
      description: Placeholder documentation for __stringMin32Max32
      minLength: 32
      maxLength: 32
    HlsId3SegmentTaggingState:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: State of HLS ID3 Segment Tagging
    IFrameOnlyPlaylistType:
      type: string
      enum:
        - DISABLED
        - STANDARD
      description: 'When set to "standard", an I-Frame only playlist will be written out for each video output in the output group. This I-Frame only playlist will contain byte range offsets pointing to the I-frame(s) in each segment.'
    HlsIncompleteSegmentBehavior:
      type: string
      enum:
        - AUTO
        - SUPPRESS
      description: Hls Incomplete Segment Behavior
    __integerMin3:
      type: integer
      description: Placeholder documentation for __integerMin3
      minimum: 3
    InputLossActionForHlsOut:
      type: string
      enum:
        - EMIT_OUTPUT
        - PAUSE_OUTPUT
      description: Input Loss Action For Hls Out
    HlsIvInManifest:
      type: string
      enum:
        - EXCLUDE
        - INCLUDE
      description: Hls Iv In Manifest
    HlsIvSource:
      type: string
      enum:
        - EXPLICIT
        - FOLLOWS_SEGMENT_NUMBER
      description: Hls Iv Source
    KeyProviderSettings:
      type: object
      properties:
        StaticKeySettings:
          allOf:
            - $ref: '#/components/schemas/StaticKeySettings'
            - xml:
                name: staticKeySettings
      description: Key Provider Settings
    HlsManifestCompression:
      type: string
      enum:
        - GZIP
        - NONE
      description: Hls Manifest Compression
    HlsManifestDurationFormat:
      type: string
      enum:
        - FLOATING_POINT
        - INTEGER
      description: Hls Manifest Duration Format
    HlsMode:
      type: string
      enum:
        - LIVE
        - VOD
      description: Hls Mode
    HlsOutputSelection:
      type: string
      enum:
        - MANIFESTS_AND_SEGMENTS
        - SEGMENTS_ONLY
        - VARIANT_MANIFESTS_AND_SEGMENTS
      description: Hls Output Selection
    HlsProgramDateTime:
      type: string
      enum:
        - EXCLUDE
        - INCLUDE
      description: Hls Program Date Time
    __integerMin0Max3600:
      type: integer
      description: Placeholder documentation for __integerMin0Max3600
      minimum: 0
      maximum: 3600
    HlsRedundantManifest:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Hls Redundant Manifest
    HlsSegmentationMode:
      type: string
      enum:
        - USE_INPUT_SEGMENTATION
        - USE_SEGMENT_DURATION
      description: Hls Segmentation Mode
    HlsStreamInfResolution:
      type: string
      enum:
        - EXCLUDE
        - INCLUDE
      description: Hls Stream Inf Resolution
    HlsTimedMetadataId3Frame:
      type: string
      enum:
        - NONE
        - PRIV
        - TDRL
      description: Hls Timed Metadata Id3 Frame
    HlsTsFileMode:
      type: string
      enum:
        - SEGMENTED_FILES
        - SINGLE_FILE
      description: Hls Ts File Mode
    HlsGroupSettings:
      type: object
      required:
        - Destination
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/__listOfHlsAdMarkers'
            - xml:
                name: adMarkers
              description: Choose one or more ad marker types to pass SCTE35 signals through to this group of Apple HLS outputs.
        BaseUrlContent:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: baseUrlContent
              description: A partial URI prefix that will be prepended to each output in the media .m3u8 file. Can be used if base manifest is delivered from a different URL than the main .m3u8 file.
        BaseUrlContent1:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: baseUrlContent1
              description: |-
                Optional. One value per output group.

                This field is required only if you are completing Base URL content A, and the downstream system has notified you that the media files for pipeline 1 of all outputs are in a location different from the media files for pipeline 0.
        BaseUrlManifest:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: baseUrlManifest
              description: A partial URI prefix that will be prepended to each output in the media .m3u8 file. Can be used if base manifest is delivered from a different URL than the main .m3u8 file.
        BaseUrlManifest1:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: baseUrlManifest1
              description: |-
                Optional. One value per output group.

                Complete this field only if you are completing Base URL manifest A, and the downstream system has notified you that the child manifest files for pipeline 1 of all outputs are in a location different from the child manifest files for pipeline 0.
        CaptionLanguageMappings:
          allOf:
            - $ref: '#/components/schemas/__listOfCaptionLanguageMapping'
            - xml:
                name: captionLanguageMappings
              description: Mapping of up to 4 caption channels to caption languages.  Is only meaningful if captionLanguageSetting is set to "insert".
        CaptionLanguageSetting:
          allOf:
            - $ref: '#/components/schemas/HlsCaptionLanguageSetting'
            - xml:
                name: captionLanguageSetting
              description: |-
                Applies only to 608 Embedded output captions.
                insert: Include CLOSED-CAPTIONS lines in the manifest. Specify at least one language in the CC1 Language Code field. One CLOSED-CAPTION line is added for each Language Code you specify. Make sure to specify the languages in the order in which they appear in the original source (if the source is embedded format) or the order of the caption selectors (if the source is other than embedded). Otherwise, languages in the manifest will not match up properly with the output captions.
                none: Include CLOSED-CAPTIONS=NONE line in the manifest.
                omit: Omit any CLOSED-CAPTIONS line from the manifest.
        ClientCache:
          allOf:
            - $ref: '#/components/schemas/HlsClientCache'
            - xml:
                name: clientCache
              description: 'When set to "disabled", sets the #EXT-X-ALLOW-CACHE:no tag in the manifest, which prevents clients from saving media segments for later replay.'
        CodecSpecification:
          allOf:
            - $ref: '#/components/schemas/HlsCodecSpecification'
            - xml:
                name: codecSpecification
              description: Specification to use (RFC-6381 or the default RFC-4281) during m3u8 playlist generation.
        ConstantIv:
          allOf:
            - $ref: '#/components/schemas/__stringMin32Max32'
            - xml:
                name: constantIv
              description: 'For use with encryptionType. This is a 128-bit, 16-byte hex value represented by a 32-character text string. If ivSource is set to "explicit" then this parameter is required and is used as the IV for encryption.'
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: 'A directory or HTTP destination for the HLS segments, manifest files, and encryption keys (if enabled).'
        DirectoryStructure:
          allOf:
            - $ref: '#/components/schemas/HlsDirectoryStructure'
            - xml:
                name: directoryStructure
              description: Place segments in subdirectories.
        DiscontinuityTags:
          allOf:
            - $ref: '#/components/schemas/HlsDiscontinuityTags'
            - xml:
                name: discontinuityTags
              description: |-
                Specifies whether to insert EXT-X-DISCONTINUITY tags in the HLS child manifests for this output group.
                Typically, choose Insert because these tags are required in the manifest (according to the HLS specification) and serve an important purpose.
                Choose Never Insert only if the downstream system is doing real-time failover (without using the MediaLive automatic failover feature) and only if that downstream system has advised you to exclude the tags.
        EncryptionType:
          allOf:
            - $ref: '#/components/schemas/HlsEncryptionType'
            - xml:
                name: encryptionType
              description: Encrypts the segments with the given encryption scheme.  Exclude this parameter if no encryption is desired.
        HlsCdnSettings:
          allOf:
            - $ref: '#/components/schemas/HlsCdnSettings'
            - xml:
                name: hlsCdnSettings
              description: Parameters that control interactions with the CDN.
        HlsId3SegmentTagging:
          allOf:
            - $ref: '#/components/schemas/HlsId3SegmentTaggingState'
            - xml:
                name: hlsId3SegmentTagging
              description: State of HLS ID3 Segment Tagging
        IFrameOnlyPlaylists:
          allOf:
            - $ref: '#/components/schemas/IFrameOnlyPlaylistType'
            - xml:
                name: iFrameOnlyPlaylists
              description: |-
                DISABLED: Do not create an I-frame-only manifest, but do create the master and media manifests (according to the Output Selection field).

                STANDARD: Create an I-frame-only manifest for each output that contains video, as well as the other manifests (according to the Output Selection field). The I-frame manifest contains a #EXT-X-I-FRAMES-ONLY tag to indicate it is I-frame only, and one or more #EXT-X-BYTERANGE entries identifying the I-frame position. For example, #EXT-X-BYTERANGE:160364@1461888"
        IncompleteSegmentBehavior:
          allOf:
            - $ref: '#/components/schemas/HlsIncompleteSegmentBehavior'
            - xml:
                name: incompleteSegmentBehavior
              description: |-
                Specifies whether to include the final (incomplete) segment in the media output when the pipeline stops producing output because of a channel stop, a channel pause or a loss of input to the pipeline.
                Auto means that MediaLive decides whether to include the final segment, depending on the channel class and the types of output groups.
                Suppress means to never include the incomplete segment. We recommend you choose Auto and let MediaLive control the behavior.
        IndexNSegments:
          allOf:
            - $ref: '#/components/schemas/__integerMin3'
            - xml:
                name: indexNSegments
              description: |-
                Applies only if Mode field is LIVE.

                Specifies the maximum number of segments in the media manifest file. After this maximum, older segments are removed from the media manifest. This number must be smaller than the number in the Keep Segments field.
        InputLossAction:
          allOf:
            - $ref: '#/components/schemas/InputLossActionForHlsOut'
            - xml:
                name: inputLossAction
              description: Parameter that control output group behavior on input loss.
        IvInManifest:
          allOf:
            - $ref: '#/components/schemas/HlsIvInManifest'
            - xml:
                name: ivInManifest
              description: 'For use with encryptionType. The IV (Initialization Vector) is a 128-bit number used in conjunction with the key for encrypting blocks. If set to "include", IV is listed in the manifest, otherwise the IV is not in the manifest.'
        IvSource:
          allOf:
            - $ref: '#/components/schemas/HlsIvSource'
            - xml:
                name: ivSource
              description: 'For use with encryptionType. The IV (Initialization Vector) is a 128-bit number used in conjunction with the key for encrypting blocks. If this setting is "followsSegmentNumber", it will cause the IV to change every segment (to match the segment number). If this is set to "explicit", you must enter a constantIv value.'
        KeepSegments:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: keepSegments
              description: |-
                Applies only if Mode field is LIVE.

                Specifies the number of media segments to retain in the destination directory. This number should be bigger than indexNSegments (Num segments). We recommend (value = (2 x indexNsegments) + 1).

                If this "keep segments" number is too low, the following might happen: the player is still reading a media manifest file that lists this segment, but that segment has been removed from the destination directory (as directed by indexNSegments). This situation would result in a 404 HTTP error on the player.
        KeyFormat:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: keyFormat
              description: 'The value specifies how the key is represented in the resource identified by the URI.  If parameter is absent, an implicit value of "identity" is used.  A reverse DNS string can also be given.'
        KeyFormatVersions:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: keyFormatVersions
              description: Either a single positive integer version value or a slash delimited list of version values (1/2/3).
        KeyProviderSettings:
          allOf:
            - $ref: '#/components/schemas/KeyProviderSettings'
            - xml:
                name: keyProviderSettings
              description: The key provider settings.
        ManifestCompression:
          allOf:
            - $ref: '#/components/schemas/HlsManifestCompression'
            - xml:
                name: manifestCompression
              description: 'When set to gzip, compresses HLS playlist.'
        ManifestDurationFormat:
          allOf:
            - $ref: '#/components/schemas/HlsManifestDurationFormat'
            - xml:
                name: manifestDurationFormat
              description: Indicates whether the output manifest should use floating point or integer values for segment duration.
        MinSegmentLength:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: minSegmentLength
              description: 'When set, minimumSegmentLength is enforced by looking ahead and back within the specified range for a nearby avail and extending the segment size if needed.'
        Mode:
          allOf:
            - $ref: '#/components/schemas/HlsMode'
            - xml:
                name: mode
              description: |-
                If "vod", all segments are indexed and kept permanently in the destination and manifest. If "live", only the number segments specified in keepSegments and indexNSegments are kept; newer segments replace older segments, which may prevent players from rewinding all the way to the beginning of the event.

                VOD mode uses HLS EXT-X-PLAYLIST-TYPE of EVENT while the channel is running, converting it to a "VOD" type manifest on completion of the stream.
        OutputSelection:
          allOf:
            - $ref: '#/components/schemas/HlsOutputSelection'
            - xml:
                name: outputSelection
              description: |-
                MANIFESTS_AND_SEGMENTS: Generates manifests (master manifest, if applicable, and media manifests) for this output group.

                VARIANT_MANIFESTS_AND_SEGMENTS: Generates media manifests for this output group, but not a master manifest.

                SEGMENTS_ONLY: Does not generate any manifests for this output group.
        ProgramDateTime:
          allOf:
            - $ref: '#/components/schemas/HlsProgramDateTime'
            - xml:
                name: programDateTime
              description: 'Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest files. The value is calculated as follows: either the program date and time are initialized using the input timecode source, or the time is initialized using the input timecode source and the date is initialized using the timestampOffset.'
        ProgramDateTimePeriod:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max3600'
            - xml:
                name: programDateTimePeriod
              description: 'Period of insertion of EXT-X-PROGRAM-DATE-TIME entry, in seconds.'
        RedundantManifest:
          allOf:
            - $ref: '#/components/schemas/HlsRedundantManifest'
            - xml:
                name: redundantManifest
              description: |-
                ENABLED: The master manifest (.m3u8 file) for each pipeline includes information about both pipelines: first its own media files, then the media files of the other pipeline. This feature allows playout device that support stale manifest detection to switch from one manifest to the other, when the current manifest seems to be stale. There are still two destinations and two master manifests, but both master manifests reference the media files from both pipelines.

                DISABLED: The master manifest (.m3u8 file) for each pipeline includes information about its own pipeline only.

                For an HLS output group with MediaPackage as the destination, the DISABLED behavior is always followed. MediaPackage regenerates the manifests it serves to players so a redundant manifest from MediaLive is irrelevant.
        SegmentLength:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: segmentLength
              description: 'Length of MPEG-2 Transport Stream segments to create (in seconds). Note that segments will end on the next keyframe after this number of seconds, so actual segment length may be longer.'
        SegmentationMode:
          allOf:
            - $ref: '#/components/schemas/HlsSegmentationMode'
            - xml:
                name: segmentationMode
              description: useInputSegmentation has been deprecated. The configured segment size is always used.
        SegmentsPerSubdirectory:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: segmentsPerSubdirectory
              description: Number of segments to write to a subdirectory before starting a new one. directoryStructure must be subdirectoryPerStream for this setting to have an effect.
        StreamInfResolution:
          allOf:
            - $ref: '#/components/schemas/HlsStreamInfResolution'
            - xml:
                name: streamInfResolution
              description: Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF tag of variant manifest.
        TimedMetadataId3Frame:
          allOf:
            - $ref: '#/components/schemas/HlsTimedMetadataId3Frame'
            - xml:
                name: timedMetadataId3Frame
              description: Indicates ID3 frame that has the timecode.
        TimedMetadataId3Period:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: timedMetadataId3Period
              description: Timed Metadata interval in seconds.
        TimestampDeltaMilliseconds:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: timestampDeltaMilliseconds
              description: Provides an extra millisecond delta offset to fine tune the timestamps.
        TsFileMode:
          allOf:
            - $ref: '#/components/schemas/HlsTsFileMode'
            - xml:
                name: tsFileMode
              description: |-
                SEGMENTED_FILES: Emit the program as segments - multiple .ts media files.

                SINGLE_FILE: Applies only if Mode field is VOD. Emit the program as a single .ts media file. The media manifest includes #EXT-X-BYTERANGE tags to index segments for playback. A typical use for this value is when sending the output to AWS Elemental MediaConvert, which can accept only a single media file. Playback while the channel is running is not guaranteed due to HTTP server caching.
      description: Hls Group Settings
    HlsH265PackagingType:
      type: string
      enum:
        - HEV1
        - HVC1
      description: Hls H265 Packaging Type
    HlsId3SegmentTaggingScheduleActionSettings:
      type: object
      required:
        - Tag
      properties:
        Tag:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: tag
              description: 'ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html'
      description: Settings for the action to insert a user-defined ID3 tag in each HLS segment
    HlsScte35SourceType:
      type: string
      enum:
        - MANIFEST
        - SEGMENTS
      description: Hls Scte35 Source Type
    HlsInputSettings:
      type: object
      properties:
        Bandwidth:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: bandwidth
              description: 'When specified the HLS stream with the m3u8 BANDWIDTH that most closely matches this value will be chosen, otherwise the highest bandwidth stream in the m3u8 will be chosen.  The bitrate is specified in bits per second, as in an HLS manifest.'
        BufferSegments:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: bufferSegments
              description: 'When specified, reading of the HLS input will begin this many buffer segments from the end (most recently written segment).  When not specified, the HLS input will begin with the first segment specified in the m3u8.'
        Retries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: retries
              description: The number of consecutive times that attempts to read a manifest or segment must fail before the input is considered unavailable.
        RetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: retryInterval
              description: The number of seconds between retries when an attempt to read a manifest or segment fails.
        Scte35Source:
          allOf:
            - $ref: '#/components/schemas/HlsScte35SourceType'
            - xml:
                name: scte35Source
              description: Identifies the source for the SCTE-35 messages that MediaLive will ingest. Messages can be ingested from the content segments (in the stream) or from tags in the playlist (the HLS manifest). MediaLive ignores SCTE-35 information in the source that is not selected.
      description: Hls Input Settings
    HlsMediaStoreStorageClass:
      type: string
      enum:
        - TEMPORAL
      description: Hls Media Store Storage Class
    HlsSettings:
      type: object
      properties:
        AudioOnlyHlsSettings:
          allOf:
            - $ref: '#/components/schemas/AudioOnlyHlsSettings'
            - xml:
                name: audioOnlyHlsSettings
        Fmp4HlsSettings:
          allOf:
            - $ref: '#/components/schemas/Fmp4HlsSettings'
            - xml:
                name: fmp4HlsSettings
        FrameCaptureHlsSettings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureHlsSettings'
            - xml:
                name: frameCaptureHlsSettings
        StandardHlsSettings:
          allOf:
            - $ref: '#/components/schemas/StandardHlsSettings'
            - xml:
                name: standardHlsSettings
      description: Hls Settings
    HlsOutputSettings:
      type: object
      required:
        - HlsSettings
      properties:
        H265PackagingType:
          allOf:
            - $ref: '#/components/schemas/HlsH265PackagingType'
            - xml:
                name: h265PackagingType
              description: |-
                Only applicable when this output is referencing an H.265 video description.
                Specifies whether MP4 segments should be packaged as HEV1 or HVC1.
        HlsSettings:
          allOf:
            - $ref: '#/components/schemas/HlsSettings'
            - xml:
                name: hlsSettings
              description: Settings regarding the underlying stream. These settings are different for audio-only outputs.
        NameModifier:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: nameModifier
              description: 'String concatenated to the end of the destination filename. Accepts \"Format Identifiers\":#formatIdentifierParameters.'
        SegmentModifier:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: segmentModifier
              description: String concatenated to end of segment filenames.
      description: Hls Output Settings
    StandardHlsSettings:
      type: object
      required:
        - M3u8Settings
      properties:
        AudioRenditionSets:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioRenditionSets
              description: 'List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by '',''.'
        M3u8Settings:
          allOf:
            - $ref: '#/components/schemas/M3u8Settings'
            - xml:
                name: m3u8Settings
      description: Standard Hls Settings
    HlsTimedMetadataScheduleActionSettings:
      type: object
      required:
        - Id3
      properties:
        Id3:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id3
              description: 'Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure'
      description: Settings for the action to emit HLS metadata
    HlsWebdavHttpTransferMode:
      type: string
      enum:
        - CHUNKED
        - NON_CHUNKED
      description: Hls Webdav Http Transfer Mode
    HtmlMotionGraphicsSettings:
      type: object
      properties: {}
      description: Html Motion Graphics Settings
    ImmediateModeScheduleActionStartSettings:
      type: object
      properties: {}
      description: Settings to configure an action so that it occurs as soon as possible.
    InputSettings:
      type: object
      properties:
        AudioSelectors:
          allOf:
            - $ref: '#/components/schemas/__listOfAudioSelector'
            - xml:
                name: audioSelectors
              description: Used to select the audio stream to decode for inputs that have multiple available.
        CaptionSelectors:
          allOf:
            - $ref: '#/components/schemas/__listOfCaptionSelector'
            - xml:
                name: captionSelectors
              description: Used to select the caption input to use for inputs that have multiple available.
        DeblockFilter:
          allOf:
            - $ref: '#/components/schemas/InputDeblockFilter'
            - xml:
                name: deblockFilter
              description: Enable or disable the deblock filter when filtering.
        DenoiseFilter:
          allOf:
            - $ref: '#/components/schemas/InputDenoiseFilter'
            - xml:
                name: denoiseFilter
              description: Enable or disable the denoise filter when filtering.
        FilterStrength:
          allOf:
            - $ref: '#/components/schemas/__integerMin1Max5'
            - xml:
                name: filterStrength
              description: Adjusts the magnitude of filtering from 1 (minimal) to 5 (strongest).
        InputFilter:
          allOf:
            - $ref: '#/components/schemas/InputFilter'
            - xml:
                name: inputFilter
              description: |-
                Turns on the filter for this input. MPEG-2 inputs have the deblocking filter enabled by default.
                1) auto - filtering will be applied depending on input type/quality
                2) disabled - no filtering will be applied to the input
                3) forced - filtering will be applied regardless of input type
        NetworkInputSettings:
          allOf:
            - $ref: '#/components/schemas/NetworkInputSettings'
            - xml:
                name: networkInputSettings
              description: Input settings.
        Smpte2038DataPreference:
          allOf:
            - $ref: '#/components/schemas/Smpte2038DataPreference'
            - xml:
                name: smpte2038DataPreference
              description: |-
                Specifies whether to extract applicable ancillary data from a SMPTE-2038 source in this input. Applicable data types are captions, timecode, AFD, and SCTE-104 messages.
                - PREFER: Extract from SMPTE-2038 if present in this input, otherwise extract from another source (if any).
                - IGNORE: Never extract any ancillary data from SMPTE-2038.
        SourceEndBehavior:
          allOf:
            - $ref: '#/components/schemas/InputSourceEndBehavior'
            - xml:
                name: sourceEndBehavior
              description: Loop input if it is a file. This allows a file input to be streamed indefinitely.
        VideoSelector:
          allOf:
            - $ref: '#/components/schemas/VideoSelector'
            - xml:
                name: videoSelector
              description: Informs which video elementary stream to decode for input types that have multiple available.
      description: Live Event input parameters. There can be multiple inputs in a single Live Event.
    __integerMinNegative60Max6:
      type: integer
      description: Placeholder documentation for __integerMinNegative60Max6
      minimum: -60
      maximum: 6
    InputChannelLevel:
      type: object
      required:
        - InputChannel
        - Gain
      properties:
        Gain:
          allOf:
            - $ref: '#/components/schemas/__integerMinNegative60Max6'
            - xml:
                name: gain
              description: Remixing value. Units are in dB and acceptable values are within the range from -60 (mute) and 6 dB.
        InputChannel:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max15'
            - xml:
                name: inputChannel
              description: The index of the input channel used as a source.
      description: Input Channel Level
    InputTimecodeSource:
      type: string
      enum:
        - ZEROBASED
        - EMBEDDED
      description: Documentation update needed
    StartTimecode:
      type: object
      properties:
        Timecode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: timecode
              description: 'The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.'
      description: Settings to identify the start of the clip.
    StopTimecode:
      type: object
      properties:
        LastFrameClippingBehavior:
          allOf:
            - $ref: '#/components/schemas/LastFrameClippingBehavior'
            - xml:
                name: lastFrameClippingBehavior
              description: 'If you specify a StopTimecode in an input (in order to clip the file), you can specify if you want the clip to exclude (the default) or include the frame specified by the timecode.'
        Timecode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: timecode
              description: 'The timecode for the frame where you want to stop the clip. Optional; if not specified, the clip continues to the end of the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.'
      description: Settings to identify the end of the clip.
    InputClippingSettings:
      type: object
      required:
        - InputTimecodeSource
      properties:
        InputTimecodeSource:
          allOf:
            - $ref: '#/components/schemas/InputTimecodeSource'
            - xml:
                name: inputTimecodeSource
              description: The source of the timecodes in the source being clipped.
        StartTimecode:
          allOf:
            - $ref: '#/components/schemas/StartTimecode'
            - xml:
                name: startTimecode
              description: Settings to identify the start of the clip.
        StopTimecode:
          allOf:
            - $ref: '#/components/schemas/StopTimecode'
            - xml:
                name: stopTimecode
              description: Settings to identify the end of the clip.
      description: 'Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file.'
    InputDeblockFilter:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Input Deblock Filter
    InputDenoiseFilter:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Input Denoise Filter
    InputDestinationVpc:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: |
                The availability zone of the Input destination.
        NetworkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: networkInterfaceId
              description: |
                The network interface ID of the Input destination in the VPC.
      description: The properties for a VPC type input destination.
    InputDestination:
      type: object
      properties:
        Ip:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ip
              description: |
                The system-generated static IP address of endpoint.
                It remains fixed for the lifetime of the input.
        Port:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: port
              description: The port number for the input.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: |
                This represents the endpoint that the customer stream will be
                pushed to.
        Vpc:
          allOf:
            - $ref: '#/components/schemas/InputDestinationVpc'
            - xml:
                name: vpc
      description: The settings for a PUSH type input.
    InputDeviceActiveInput:
      type: string
      enum:
        - HDMI
        - SDI
      description: The source at the input device that is currently active.
    InputDeviceConfigurableSettings:
      type: object
      properties:
        ConfiguredInput:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConfiguredInput'
            - xml:
                name: configuredInput
              description: 'The input source that you want to use. If the device has a source connected to only one of its input ports, or if you don''t care which source the device sends, specify Auto. If the device has sources connected to both its input ports, and you want to use a specific source, specify the source.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: The maximum bitrate in bits per second. Set a value here to throttle the bitrate of the source video.
      description: Configurable settings for the input device.
    InputDeviceState:
      type: string
      enum:
        - IDLE
        - STREAMING
      description: The state of the input device.
    InputDeviceScanType:
      type: string
      enum:
        - INTERLACED
        - PROGRESSIVE
      description: The scan type of the video source.
    InputDeviceIpScheme:
      type: string
      enum:
        - STATIC
        - DHCP
      description: Specifies whether the input device has been configured (outside of MediaLive) to use a dynamic IP address assignment (DHCP) or a static IP address.
    InputDeviceSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique ARN of the input device.
        ConnectionState:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConnectionState'
            - xml:
                name: connectionState
              description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
            - $ref: '#/components/schemas/DeviceSettingsSyncState'
            - xml:
                name: deviceSettingsSyncState
              description: 'The status of the action to synchronize the device configuration. If you change the configuration of the input device (for example, the maximum bitrate), MediaLive sends the new data to the device. The device might not update itself immediately. SYNCED means the device has updated its configuration. SYNCING means that it has not updated its configuration.'
        DeviceUpdateStatus:
          allOf:
            - $ref: '#/components/schemas/DeviceUpdateStatus'
            - xml:
                name: deviceUpdateStatus
              description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceHdSettings'
            - xml:
                name: hdDeviceSettings
              description: Settings that describe an input device that is type HD.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID of the input device.
        MacAddress:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: macAddress
              description: The network MAC address of the input device.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceNetworkSettings'
            - xml:
                name: networkSettings
              description: Network settings for the input device.
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: serialNumber
              description: The unique serial number of the input device.
        Type:
          allOf:
            - $ref: '#/components/schemas/InputDeviceType'
            - xml:
                name: type
              description: The type of the input device.
        UhdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceUhdSettings'
            - xml:
                name: uhdDeviceSettings
              description: Settings that describe an input device that is type UHD.
      description: Details of the input device.
    InputDeviceTransferType:
      type: string
      enum:
        - OUTGOING
        - INCOMING
      description: 'The type of device transfer. INCOMING for an input device that is being transferred to you, OUTGOING for an input device that you are transferring to another AWS account.'
    InputFilter:
      type: string
      enum:
        - AUTO
        - DISABLED
        - FORCED
      description: Input Filter
    InputLossActionForMsSmoothOut:
      type: string
      enum:
        - EMIT_OUTPUT
        - PAUSE_OUTPUT
      description: Input Loss Action For Ms Smooth Out
    InputLossActionForRtmpOut:
      type: string
      enum:
        - EMIT_OUTPUT
        - PAUSE_OUTPUT
      description: Input Loss Action For Rtmp Out
    InputLossActionForUdpOut:
      type: string
      enum:
        - DROP_PROGRAM
        - DROP_TS
        - EMIT_PROGRAM
      description: Input Loss Action For Udp Out
    __integerMin0Max1000000:
      type: integer
      description: Placeholder documentation for __integerMin0Max1000000
      minimum: 0
      maximum: 1000000
    __stringMin6Max6:
      type: string
      description: Placeholder documentation for __stringMin6Max6
      minLength: 6
      maxLength: 6
    InputLossImageType:
      type: string
      enum:
        - COLOR
        - SLATE
      description: Input Loss Image Type
    __integerMin100:
      type: integer
      description: Placeholder documentation for __integerMin100
      minimum: 100
    InputPrepareScheduleActionSettings:
      type: object
      properties:
        InputAttachmentNameReference:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: inputAttachmentNameReference
              description: 'The name of the input attachment that should be prepared by this action. If no name is provided, the action will stop the most recent prepare (if any) when activated.'
        InputClippingSettings:
          allOf:
            - $ref: '#/components/schemas/InputClippingSettings'
            - xml:
                name: inputClippingSettings
              description: 'Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file.'
        UrlPath:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: urlPath
              description: 'The value for the variable portion of the URL for the dynamic input, for this instance of the input. Each time you use the same dynamic input in an input switch action, you can provide a different value, in order to connect the input to a different content source.'
      description: Action to prepare an input for a future immediate input switch.
    __listOfAudioSelector:
      type: array
      description: Placeholder documentation for __listOfAudioSelector
      items:
        $ref: '#/components/schemas/AudioSelector'
    __listOfCaptionSelector:
      type: array
      description: Placeholder documentation for __listOfCaptionSelector
      items:
        $ref: '#/components/schemas/CaptionSelector'
    NetworkInputSettings:
      type: object
      properties:
        HlsInputSettings:
          allOf:
            - $ref: '#/components/schemas/HlsInputSettings'
            - xml:
                name: hlsInputSettings
              description: Specifies HLS input settings when the uri is for a HLS manifest.
        ServerValidation:
          allOf:
            - $ref: '#/components/schemas/NetworkInputServerValidation'
            - xml:
                name: serverValidation
              description: 'Check HTTPS server certificates. When set to checkCryptographyOnly, cryptography in the certificate will be checked, but not the server''s name. Certain subdomains (notably S3 buckets that use dots in the bucket name) do not strictly match the corresponding certificate''s wildcard pattern and would otherwise cause the event to error. This setting is ignored for protocols that do not use https.'
      description: Network source to transcode. Must be accessible to the Elemental Live node that is running the live event through a network connection.
    Smpte2038DataPreference:
      type: string
      enum:
        - IGNORE
        - PREFER
      description: Smpte2038 Data Preference
    InputSourceEndBehavior:
      type: string
      enum:
        - CONTINUE
        - LOOP
      description: Input Source End Behavior
    VideoSelector:
      type: object
      properties:
        ColorSpace:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorColorSpace'
            - xml:
                name: colorSpace
              description: Specifies the color space of an input. This setting works in tandem with colorSpaceUsage and a video description's colorSpaceSettingsChoice to determine if any conversion will be performed.
        ColorSpaceSettings:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorColorSpaceSettings'
            - xml:
                name: colorSpaceSettings
              description: Color space settings
        ColorSpaceUsage:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorColorSpaceUsage'
            - xml:
                name: colorSpaceUsage
              description: 'Applies only if colorSpace is a value other than follow. This field controls how the value in the colorSpace field will be used. fallback means that when the input does include color space data, that data will be used, but when the input has no color space data, the value in colorSpace will be used. Choose fallback if your input is sometimes missing color space data, but when it does have color space data, that data is correct. force means to always use the value in colorSpace. Choose force if your input usually has no color space data or might have unreliable color space data.'
        SelectorSettings:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorSettings'
            - xml:
                name: selectorSettings
              description: The video selector settings.
      description: Specifies a particular video stream within an input source. An input may have only a single video selector.
    InputSource:
      type: object
      properties:
        PasswordParam:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: passwordParam
              description: The key used to extract the password from EC2 Parameter store.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: |
                This represents the customer's source URL where stream is
                pulled from.
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: The username for the input source.
      description: The settings for a PULL type input.
    InputSwitchScheduleActionSettings:
      type: object
      required:
        - InputAttachmentNameReference
      properties:
        InputAttachmentNameReference:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: inputAttachmentNameReference
              description: The name of the input attachment (not the name of the input!) to switch to. The name is specified in the channel configuration.
        InputClippingSettings:
          allOf:
            - $ref: '#/components/schemas/InputClippingSettings'
            - xml:
                name: inputClippingSettings
              description: 'Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file.'
        UrlPath:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: urlPath
              description: 'The value for the variable portion of the URL for the dynamic input, for this instance of the input. Each time you use the same dynamic input in an input switch action, you can provide a different value, in order to connect the input to a different content source.'
      description: 'Settings for the "switch input" action: to switch from ingesting one input to ingesting another input.'
    InputWhitelistRule:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: cidr
              description: The IPv4 CIDR that's whitelisted.
      description: Whitelist rule
    StaticKeySettings:
      type: object
      required:
        - StaticKeyValue
      properties:
        KeyProviderServer:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: keyProviderServer
              description: The URL of the license server used for protecting content.
        StaticKeyValue:
          allOf:
            - $ref: '#/components/schemas/__stringMin32Max32'
            - xml:
                name: staticKeyValue
              description: Static key value as a 32 character hexadecimal string.
      description: Static Key Settings
    LastFrameClippingBehavior:
      type: string
      enum:
        - EXCLUDE_LAST_FRAME
        - INCLUDE_LAST_FRAME
      description: 'If you specify a StopTimecode in an input (in order to clip the file), you can specify if you want the clip to exclude (the default) or include the frame specified by the timecode.'
    ListChannelsRequest:
      type: object
      title: ListChannelsRequest
      properties: {}
      description: Placeholder documentation for ListChannelsRequest
    __listOfChannelSummary:
      type: array
      description: Placeholder documentation for __listOfChannelSummary
      items:
        $ref: '#/components/schemas/ChannelSummary'
    ListInputDeviceTransfersRequest:
      type: object
      title: ListInputDeviceTransfersRequest
      properties: {}
      description: Placeholder documentation for ListInputDeviceTransfersRequest
    __listOfTransferringInputDeviceSummary:
      type: array
      description: Placeholder documentation for __listOfTransferringInputDeviceSummary
      items:
        $ref: '#/components/schemas/TransferringInputDeviceSummary'
    ListInputDevicesRequest:
      type: object
      title: ListInputDevicesRequest
      properties: {}
      description: Placeholder documentation for ListInputDevicesRequest
    __listOfInputDeviceSummary:
      type: array
      description: Placeholder documentation for __listOfInputDeviceSummary
      items:
        $ref: '#/components/schemas/InputDeviceSummary'
    ListInputSecurityGroupsRequest:
      type: object
      title: ListInputSecurityGroupsRequest
      properties: {}
      description: Placeholder documentation for ListInputSecurityGroupsRequest
    __listOfInputSecurityGroup:
      type: array
      description: Placeholder documentation for __listOfInputSecurityGroup
      items:
        $ref: '#/components/schemas/InputSecurityGroup'
    ListInputsRequest:
      type: object
      title: ListInputsRequest
      properties: {}
      description: Placeholder documentation for ListInputsRequest
    __listOfInput:
      type: array
      description: Placeholder documentation for __listOfInput
      items:
        $ref: '#/components/schemas/Input'
    ListMultiplexProgramsRequest:
      type: object
      title: ListMultiplexProgramsRequest
      properties: {}
      description: Placeholder documentation for ListMultiplexProgramsRequest
    __listOfMultiplexProgramSummary:
      type: array
      description: Placeholder documentation for __listOfMultiplexProgramSummary
      items:
        $ref: '#/components/schemas/MultiplexProgramSummary'
    ListMultiplexesRequest:
      type: object
      title: ListMultiplexesRequest
      properties: {}
      description: Placeholder documentation for ListMultiplexesRequest
    __listOfMultiplexSummary:
      type: array
      description: Placeholder documentation for __listOfMultiplexSummary
      items:
        $ref: '#/components/schemas/MultiplexSummary'
    ListOfferingsRequest:
      type: object
      title: ListOfferingsRequest
      properties: {}
      description: Placeholder documentation for ListOfferingsRequest
    __listOfOffering:
      type: array
      description: Placeholder documentation for __listOfOffering
      items:
        $ref: '#/components/schemas/Offering'
    ListReservationsRequest:
      type: object
      title: ListReservationsRequest
      properties: {}
      description: Placeholder documentation for ListReservationsRequest
    __listOfReservation:
      type: array
      description: Placeholder documentation for __listOfReservation
      items:
        $ref: '#/components/schemas/Reservation'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
      description: Placeholder documentation for ListTagsForResourceRequest
    M2tsAbsentInputAudioBehavior:
      type: string
      enum:
        - DROP
        - ENCODE_SILENCE
      description: M2ts Absent Input Audio Behavior
    M2tsArib:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: M2ts Arib
    M2tsAribCaptionsPidControl:
      type: string
      enum:
        - AUTO
        - USE_CONFIGURED
      description: M2ts Arib Captions Pid Control
    M2tsAudioBufferModel:
      type: string
      enum:
        - ATSC
        - DVB
      description: M2ts Audio Buffer Model
    M2tsAudioInterval:
      type: string
      enum:
        - VIDEO_AND_FIXED_INTERVALS
        - VIDEO_INTERVAL
      description: M2ts Audio Interval
    M2tsAudioStreamType:
      type: string
      enum:
        - ATSC
        - DVB
      description: M2ts Audio Stream Type
    M2tsBufferModel:
      type: string
      enum:
        - MULTIPLEX
        - NONE
      description: M2ts Buffer Model
    M2tsCcDescriptor:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: M2ts Cc Descriptor
    M2tsEbifControl:
      type: string
      enum:
        - NONE
        - PASSTHROUGH
      description: M2ts Ebif Control
    M2tsEbpPlacement:
      type: string
      enum:
        - VIDEO_AND_AUDIO_PIDS
        - VIDEO_PID
      description: M2ts Ebp Placement
    M2tsEsRateInPes:
      type: string
      enum:
        - EXCLUDE
        - INCLUDE
      description: M2ts Es Rate In Pes
    M2tsKlv:
      type: string
      enum:
        - NONE
        - PASSTHROUGH
      description: M2ts Klv
    M2tsNielsenId3Behavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: M2ts Nielsen Id3 Behavior
    M2tsPcrControl:
      type: string
      enum:
        - CONFIGURED_PCR_PERIOD
        - PCR_EVERY_PES_PACKET
      description: M2ts Pcr Control
    M2tsRateMode:
      type: string
      enum:
        - CBR
        - VBR
      description: M2ts Rate Mode
    M2tsScte35Control:
      type: string
      enum:
        - NONE
        - PASSTHROUGH
      description: M2ts Scte35 Control
    M2tsSegmentationMarkers:
      type: string
      enum:
        - EBP
        - EBP_LEGACY
        - NONE
        - PSI_SEGSTART
        - RAI_ADAPT
        - RAI_SEGSTART
      description: M2ts Segmentation Markers
    M2tsSegmentationStyle:
      type: string
      enum:
        - MAINTAIN_CADENCE
        - RESET_CADENCE
      description: M2ts Segmentation Style
    __integerMin0Max10000:
      type: integer
      description: Placeholder documentation for __integerMin0Max10000
      minimum: 0
      maximum: 10000
    __doubleMin0:
      type: number
      description: Placeholder documentation for __doubleMin0
      format: double
    __integerMin0Max1000:
      type: integer
      description: Placeholder documentation for __integerMin0Max1000
      minimum: 0
      maximum: 1000
    __integerMin0Max500:
      type: integer
      description: Placeholder documentation for __integerMin0Max500
      minimum: 0
      maximum: 500
    __doubleMin1:
      type: number
      description: Placeholder documentation for __doubleMin1
      format: double
    M2tsTimedMetadataBehavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: M2ts Timed Metadata Behavior
    M3u8NielsenId3Behavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: M3u8 Nielsen Id3 Behavior
    M3u8PcrControl:
      type: string
      enum:
        - CONFIGURED_PCR_PERIOD
        - PCR_EVERY_PES_PACKET
      description: M3u8 Pcr Control
    M3u8Scte35Behavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: M3u8 Scte35 Behavior
    M3u8TimedMetadataBehavior:
      type: string
      enum:
        - NO_PASSTHROUGH
        - PASSTHROUGH
      description: M3u8 Timed Metadata Behavior
    M3u8Settings:
      type: object
      properties:
        AudioFramesPerPes:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: audioFramesPerPes
              description: The number of audio frames to insert for each PES packet.
        AudioPids:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: audioPids
              description: 'Packet Identifier (PID) of the elementary audio stream(s) in the transport stream. Multiple values are accepted, and can be entered in ranges and/or by comma separation. Can be entered as decimal or hexadecimal values.'
        EcmPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ecmPid
              description: This parameter is unused and deprecated.
        NielsenId3Behavior:
          allOf:
            - $ref: '#/components/schemas/M3u8NielsenId3Behavior'
            - xml:
                name: nielsenId3Behavior
              description: 'If set to passthrough, Nielsen inaudible tones for media tracking will be detected in the input audio and an equivalent ID3 tag will be inserted in the output.'
        PatInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000'
            - xml:
                name: patInterval
              description: The number of milliseconds between instances of this table in the output transport stream. A value of \"0\" writes out the PMT once per segment file.
        PcrControl:
          allOf:
            - $ref: '#/components/schemas/M3u8PcrControl'
            - xml:
                name: pcrControl
              description: 'When set to pcrEveryPesPacket, a Program Clock Reference value is inserted for every Packetized Elementary Stream (PES) header. This parameter is effective only when the PCR PID is the same as the video or audio elementary stream.'
        PcrPeriod:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max500'
            - xml:
                name: pcrPeriod
              description: Maximum time in milliseconds between Program Clock References (PCRs) inserted into the transport stream.
        PcrPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pcrPid
              description: 'Packet Identifier (PID) of the Program Clock Reference (PCR) in the transport stream. When no value is given, the encoder will assign the same value as the Video PID. Can be entered as a decimal or hexadecimal value.'
        PmtInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max1000'
            - xml:
                name: pmtInterval
              description: The number of milliseconds between instances of this table in the output transport stream. A value of \"0\" writes out the PMT once per segment file.
        PmtPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pmtPid
              description: Packet Identifier (PID) for the Program Map Table (PMT) in the transport stream. Can be entered as a decimal or hexadecimal value.
        ProgramNum:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: programNum
              description: The value of the program number field in the Program Map Table.
        Scte35Behavior:
          allOf:
            - $ref: '#/components/schemas/M3u8Scte35Behavior'
            - xml:
                name: scte35Behavior
              description: 'If set to passthrough, passes any SCTE-35 signals from the input source to this output.'
        Scte35Pid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: scte35Pid
              description: Packet Identifier (PID) of the SCTE-35 stream in the transport stream. Can be entered as a decimal or hexadecimal value.
        TimedMetadataBehavior:
          allOf:
            - $ref: '#/components/schemas/M3u8TimedMetadataBehavior'
            - xml:
                name: timedMetadataBehavior
              description: 'When set to passthrough, timed metadata is passed through from input to output.'
        TimedMetadataPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: timedMetadataPid
              description: Packet Identifier (PID) of the timed metadata stream in the transport stream. Can be entered as a decimal or hexadecimal value.  Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        TransportStreamId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65535'
            - xml:
                name: transportStreamId
              description: The value of the transport stream ID field in the Program Map Table.
        VideoPid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoPid
              description: Packet Identifier (PID) of the elementary video stream in the transport stream. Can be entered as a decimal or hexadecimal value.
      description: Settings information for the .m3u8 container
    MediaConnectFlow:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The unique ARN of the MediaConnect Flow being used as a source.
      description: The settings for a MediaConnect Flow.
    MediaPackageGroupSettings:
      type: object
      required:
        - Destination
      properties:
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: MediaPackage channel destination.
      description: Media Package Group Settings
    MediaPackageOutputDestinationSettings:
      type: object
      properties:
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: channelId
              description: ID of the channel in MediaPackage that is the destination for this output group. You do not need to specify the individual inputs in MediaPackage; MediaLive will handle the connection of the two MediaLive pipelines to the two MediaPackage inputs. The MediaPackage channel and MediaLive channel must be in the same region.
      description: MediaPackage Output Destination Settings
    MediaPackageOutputSettings:
      type: object
      properties: {}
      description: Media Package Output Settings
    __longMin0Max86400000:
      type: integer
      description: Placeholder documentation for __longMin0Max86400000
      minimum: 0
      maximum: 86400000
    MotionGraphicsActivateScheduleActionSettings:
      type: object
      properties:
        Duration:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max86400000'
            - xml:
                name: duration
              description: Duration (in milliseconds) that motion graphics should render on to the video stream. Leaving out this property or setting to 0 will result in rendering continuing until a deactivate action is processed.
        PasswordParam:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: passwordParam
              description: Key used to extract the password from EC2 Parameter store
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: URI of the HTML5 content to be rendered into the live stream.
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: Documentation update needed
      description: Settings to specify the rendering of motion graphics into the video stream.
    MotionGraphicsInsertion:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: Motion Graphics Insertion
    MotionGraphicsSettings:
      type: object
      properties:
        HtmlMotionGraphicsSettings:
          allOf:
            - $ref: '#/components/schemas/HtmlMotionGraphicsSettings'
            - xml:
                name: htmlMotionGraphicsSettings
      description: Motion Graphics Settings
    MotionGraphicsDeactivateScheduleActionSettings:
      type: object
      properties: {}
      description: Settings to specify the ending of rendering motion graphics into the video stream.
    Mp2CodingMode:
      type: string
      enum:
        - CODING_MODE_1_0
        - CODING_MODE_2_0
      description: Mp2 Coding Mode
    Mpeg2AdaptiveQuantization:
      type: string
      enum:
        - AUTO
        - HIGH
        - LOW
        - MEDIUM
        - 'OFF'
      description: Mpeg2 Adaptive Quantization
    Mpeg2ColorMetadata:
      type: string
      enum:
        - IGNORE
        - INSERT
      description: Mpeg2 Color Metadata
    Mpeg2ColorSpace:
      type: string
      enum:
        - AUTO
        - PASSTHROUGH
      description: Mpeg2 Color Space
    Mpeg2DisplayRatio:
      type: string
      enum:
        - DISPLAYRATIO16X9
        - DISPLAYRATIO4X3
      description: Mpeg2 Display Ratio
    Mpeg2FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          allOf:
            - $ref: '#/components/schemas/TemporalFilterSettings'
            - xml:
                name: temporalFilterSettings
      description: Mpeg2 Filter Settings
    Mpeg2GopSizeUnits:
      type: string
      enum:
        - FRAMES
        - SECONDS
      description: Mpeg2 Gop Size Units
    Mpeg2ScanType:
      type: string
      enum:
        - INTERLACED
        - PROGRESSIVE
      description: Mpeg2 Scan Type
    Mpeg2SubGopLength:
      type: string
      enum:
        - DYNAMIC
        - FIXED
      description: Mpeg2 Sub Gop Length
    Mpeg2TimecodeInsertionBehavior:
      type: string
      enum:
        - DISABLED
        - GOP_TIMECODE
      description: Mpeg2 Timecode Insertion Behavior
    Mpeg2Settings:
      type: object
      required:
        - FramerateNumerator
        - FramerateDenominator
      properties:
        AdaptiveQuantization:
          allOf:
            - $ref: '#/components/schemas/Mpeg2AdaptiveQuantization'
            - xml:
                name: adaptiveQuantization
              description: 'Choose Off to disable adaptive quantization. Or choose another value to enable the quantizer and set its strength. The strengths are: Auto, Off, Low, Medium, High. When you enable this field, MediaLive allows intra-frame quantizers to vary, which might improve visual quality.'
        AfdSignaling:
          allOf:
            - $ref: '#/components/schemas/AfdSignaling'
            - xml:
                name: afdSignaling
              description: |-
                Indicates the AFD values that MediaLive will write into the video encode. If you do not know what AFD signaling is, or if your downstream system has not given you guidance, choose AUTO.
                AUTO: MediaLive will try to preserve the input AFD value (in cases where multiple AFD values are valid).
                FIXED: MediaLive will use the value you specify in fixedAFD.
        ColorMetadata:
          allOf:
            - $ref: '#/components/schemas/Mpeg2ColorMetadata'
            - xml:
                name: colorMetadata
              description: Specifies whether to include the color space metadata. The metadata describes the color space that applies to the video (the colorSpace field). We recommend that you insert the metadata.
        ColorSpace:
          allOf:
            - $ref: '#/components/schemas/Mpeg2ColorSpace'
            - xml:
                name: colorSpace
              description: |-
                Choose the type of color space conversion to apply to the output. For detailed information on setting up both the input and the output to obtain the desired color space in the output, see the section on \"MediaLive Features - Video - color space\" in the MediaLive User Guide.
                PASSTHROUGH: Keep the color space of the input content - do not convert it.
                AUTO:Convert all content that is SD to rec 601, and convert all content that is HD to rec 709.
        DisplayAspectRatio:
          allOf:
            - $ref: '#/components/schemas/Mpeg2DisplayRatio'
            - xml:
                name: displayAspectRatio
              description: Sets the pixel aspect ratio for the encode.
        FilterSettings:
          allOf:
            - $ref: '#/components/schemas/Mpeg2FilterSettings'
            - xml:
                name: filterSettings
              description: |-
                Optionally specify a noise reduction filter, which can improve quality of compressed content. If you do not choose a filter, no filter will be applied.
                TEMPORAL: This filter is useful for both source content that is noisy (when it has excessive digital artifacts) and source content that is clean.
                When the content is noisy, the filter cleans up the source content before the encoding phase, with these two effects: First, it improves the output video quality because the content has been cleaned up. Secondly, it decreases the bandwidth because MediaLive does not waste bits on encoding noise.
                When the content is reasonably clean, the filter tends to decrease the bitrate.
        FixedAfd:
          allOf:
            - $ref: '#/components/schemas/FixedAfd'
            - xml:
                name: fixedAfd
              description: Complete this field only when afdSignaling is set to FIXED. Enter the AFD value (4 bits) to write on all frames of the video encode.
        FramerateDenominator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: framerateDenominator
              description: 'description": "The framerate denominator. For example, 1001. The framerate is the numerator divided by the denominator. For example, 24000 / 1001 = 23.976 FPS.'
        FramerateNumerator:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: framerateNumerator
              description: 'The framerate numerator. For example, 24000. The framerate is the numerator divided by the denominator. For example, 24000 / 1001 = 23.976 FPS.'
        GopClosedCadence:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: gopClosedCadence
              description: 'MPEG2: default is open GOP.'
        GopNumBFrames:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max7'
            - xml:
                name: gopNumBFrames
              description: 'Relates to the GOP structure. The number of B-frames between reference frames. If you do not know what a B-frame is, use the default.'
        GopSize:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: gopSize
              description: |-
                Relates to the GOP structure. The GOP size (keyframe interval) in the units specified in gopSizeUnits. If you do not know what GOP is, use the default.
                If gopSizeUnits is frames, then the gopSize must be an integer and must be greater than or equal to 1.
                If gopSizeUnits is seconds, the gopSize must be greater than 0, but does not need to be an integer.
        GopSizeUnits:
          allOf:
            - $ref: '#/components/schemas/Mpeg2GopSizeUnits'
            - xml:
                name: gopSizeUnits
              description: 'Relates to the GOP structure. Specifies whether the gopSize is specified in frames or seconds. If you do not plan to change the default gopSize, leave the default. If you specify SECONDS, MediaLive will internally convert the gop size to a frame count.'
        ScanType:
          allOf:
            - $ref: '#/components/schemas/Mpeg2ScanType'
            - xml:
                name: scanType
              description: Set the scan type of the output to PROGRESSIVE or INTERLACED (top field first).
        SubgopLength:
          allOf:
            - $ref: '#/components/schemas/Mpeg2SubGopLength'
            - xml:
                name: subgopLength
              description: |-
                Relates to the GOP structure. If you do not know what GOP is, use the default.
                FIXED: Set the number of B-frames in each sub-GOP to the value in gopNumBFrames.
                DYNAMIC: Let MediaLive optimize the number of B-frames in each sub-GOP, to improve visual quality.
        TimecodeInsertion:
          allOf:
            - $ref: '#/components/schemas/Mpeg2TimecodeInsertionBehavior'
            - xml:
                name: timecodeInsertion
              description: |-
                Determines how MediaLive inserts timecodes in the output video. For detailed information about setting up the input and the output for a timecode, see the section on \"MediaLive Features - Timecode configuration\" in the MediaLive User Guide.
                DISABLED: do not include timecodes.
                GOP_TIMECODE: Include timecode metadata in the GOP header.
      description: Mpeg2 Settings
    SmoothGroupAudioOnlyTimecodeControl:
      type: string
      enum:
        - PASSTHROUGH
        - USE_CONFIGURED_CLOCK
      description: Smooth Group Audio Only Timecode Control
    SmoothGroupCertificateMode:
      type: string
      enum:
        - SELF_SIGNED
        - VERIFY_AUTHENTICITY
      description: Smooth Group Certificate Mode
    SmoothGroupEventIdMode:
      type: string
      enum:
        - NO_EVENT_ID
        - USE_CONFIGURED
        - USE_TIMESTAMP
      description: Smooth Group Event Id Mode
    SmoothGroupEventStopBehavior:
      type: string
      enum:
        - NONE
        - SEND_EOS
      description: Smooth Group Event Stop Behavior
    SmoothGroupSegmentationMode:
      type: string
      enum:
        - USE_INPUT_SEGMENTATION
        - USE_SEGMENT_DURATION
      description: Smooth Group Segmentation Mode
    SmoothGroupSparseTrackType:
      type: string
      enum:
        - NONE
        - SCTE_35
        - SCTE_35_WITHOUT_SEGMENTATION
      description: Smooth Group Sparse Track Type
    SmoothGroupStreamManifestBehavior:
      type: string
      enum:
        - DO_NOT_SEND
        - SEND
      description: Smooth Group Stream Manifest Behavior
    SmoothGroupTimestampOffsetMode:
      type: string
      enum:
        - USE_CONFIGURED_OFFSET
        - USE_EVENT_START_DATE
      description: Smooth Group Timestamp Offset Mode
    MsSmoothGroupSettings:
      type: object
      required:
        - Destination
      properties:
        AcquisitionPointId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: acquisitionPointId
              description: The ID to include in each message in the sparse track. Ignored if sparseTrackType is NONE.
        AudioOnlyTimecodeControl:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupAudioOnlyTimecodeControl'
            - xml:
                name: audioOnlyTimecodeControl
              description: 'If set to passthrough for an audio-only MS Smooth output, the fragment absolute time will be set to the current timecode. This option does not write timecodes to the audio elementary stream.'
        CertificateMode:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupCertificateMode'
            - xml:
                name: certificateMode
              description: 'If set to verifyAuthenticity, verify the https certificate chain to a trusted Certificate Authority (CA).  This will cause https outputs to self-signed certificates to fail.'
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying connection to the IIS server if the connection is lost. Content will be cached during this time and the cache will be be delivered to the IIS server once the connection is re-established.
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: Smooth Streaming publish point on an IIS server. Elemental Live acts as a "Push" encoder to IIS.
        EventId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: eventId
              description: |-
                MS Smooth event ID to be sent to the IIS server.

                Should only be specified if eventIdMode is set to useConfigured.
        EventIdMode:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupEventIdMode'
            - xml:
                name: eventIdMode
              description: |-
                Specifies whether or not to send an event ID to the IIS server. If no event ID is sent and the same Live Event is used without changing the publishing point, clients might see cached video from the previous run.

                Options:
                - "useConfigured" - use the value provided in eventId
                - "useTimestamp" - generate and send an event ID based on the current timestamp
                - "noEventId" - do not send an event ID to the IIS server.
        EventStopBehavior:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupEventStopBehavior'
            - xml:
                name: eventStopBehavior
              description: 'When set to sendEos, send EOS signal to IIS server when stopping the event'
        FilecacheDuration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: filecacheDuration
              description: Size in seconds of file cache for streaming outputs.
        FragmentLength:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: fragmentLength
              description: Length of mp4 fragments to generate (in seconds). Fragment length must be compatible with GOP size and framerate.
        InputLossAction:
          allOf:
            - $ref: '#/components/schemas/InputLossActionForMsSmoothOut'
            - xml:
                name: inputLossAction
              description: Parameter that control output group behavior on input loss.
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: restartDelay
              description: 'Number of seconds before initiating a restart due to output failure, due to exhausting the numRetries on one segment, or exceeding filecacheDuration.'
        SegmentationMode:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupSegmentationMode'
            - xml:
                name: segmentationMode
              description: useInputSegmentation has been deprecated. The configured segment size is always used.
        SendDelayMs:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max10000'
            - xml:
                name: sendDelayMs
              description: Number of milliseconds to delay the output from the second pipeline.
        SparseTrackType:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupSparseTrackType'
            - xml:
                name: sparseTrackType
              description: |-
                Identifies the type of data to place in the sparse track:
                - SCTE35: Insert SCTE-35 messages from the source content. With each message, insert an IDR frame to start a new segment.
                - SCTE35_WITHOUT_SEGMENTATION: Insert SCTE-35 messages from the source content. With each message, insert an IDR frame but don't start a new segment.
                - NONE: Don't generate a sparse track for any outputs in this output group.
        StreamManifestBehavior:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupStreamManifestBehavior'
            - xml:
                name: streamManifestBehavior
              description: 'When set to send, send stream manifest so publishing point doesn''t start until all streams start.'
        TimestampOffset:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: timestampOffset
              description: Timestamp offset for the event.  Only used if timestampOffsetMode is set to useConfiguredOffset.
        TimestampOffsetMode:
          allOf:
            - $ref: '#/components/schemas/SmoothGroupTimestampOffsetMode'
            - xml:
                name: timestampOffsetMode
              description: |-
                Type of timestamp date offset to use.
                - useEventStartDate: Use the date the event was started as the offset
                - useConfiguredOffset: Use an explicitly configured date as the offset
      description: Ms Smooth Group Settings
    MsSmoothH265PackagingType:
      type: string
      enum:
        - HEV1
        - HVC1
      description: Ms Smooth H265 Packaging Type
    MsSmoothOutputSettings:
      type: object
      properties:
        H265PackagingType:
          allOf:
            - $ref: '#/components/schemas/MsSmoothH265PackagingType'
            - xml:
                name: h265PackagingType
              description: |-
                Only applicable when this output is referencing an H.265 video description.
                Specifies whether MP4 segments should be packaged as HEV1 or HVC1.
        NameModifier:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nameModifier
              description: String concatenated to the end of the destination filename.  Required for multiple outputs of the same type.
      description: Ms Smooth Output Settings
    MultiplexGroupSettings:
      type: object
      properties: {}
      description: Multiplex Group Settings
    MultiplexMediaConnectOutputDestinationSettings:
      type: object
      properties:
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: entitlementArn
              description: The MediaConnect entitlement ARN available as a Flow source.
      description: Multiplex MediaConnect output destination settings.
    MultiplexOutputDestination:
      type: object
      properties:
        MediaConnectSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexMediaConnectOutputDestinationSettings'
            - xml:
                name: mediaConnectSettings
              description: Multiplex MediaConnect output destination settings.
      description: Multiplex output destination settings
    MultiplexOutputSettings:
      type: object
      required:
        - Destination
      properties:
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: Destination is a Multiplex.
      description: Multiplex Output Settings
    MultiplexProgramChannelDestinationSettings:
      type: object
      properties:
        MultiplexId:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: multiplexId
              description: |-
                The ID of the Multiplex that the encoder is providing output to. You do not need to specify the individual inputs to the Multiplex; MediaLive will handle the connection of the two MediaLive pipelines to the two Multiplex instances.
                The Multiplex must be in the same region as the Channel.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1'
            - xml:
                name: programName
              description: The program name of the Multiplex program that the encoder is providing output to.
      description: Multiplex Program Input Destination Settings for outputting a Channel to a Multiplex
    __listOf__integer:
      type: array
      description: Placeholder documentation for __listOf__integer
      items:
        $ref: '#/components/schemas/__integer'
    MultiplexProgramPipelineDetail:
      type: object
      properties:
        ActiveChannelPipeline:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: activeChannelPipeline
              description: Identifies the channel pipeline that is currently active for the pipeline (identified by PipelineId) in the multiplex.
        PipelineId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pipelineId
              description: Identifies a specific pipeline in the multiplex.
      description: The current source for one of the pipelines in the multiplex.
    __stringMax256:
      type: string
      description: Placeholder documentation for __stringMax256
      maxLength: 256
    MultiplexProgramSummary:
      type: object
      properties:
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The MediaLive Channel associated with the program.
        ProgramName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: programName
              description: The name of the multiplex program.
      description: Placeholder documentation for MultiplexProgramSummary
    MultiplexSettingsSummary:
      type: object
      properties:
        TransportStreamBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin1000000Max100000000'
            - xml:
                name: transportStreamBitrate
              description: Transport stream bit rate.
      description: Contains summary configuration for a Multiplex event.
    __integerMin100000Max100000000:
      type: integer
      description: Placeholder documentation for __integerMin100000Max100000000
      minimum: 100000
      maximum: 100000000
    __integerMinNegative5Max5:
      type: integer
      description: Placeholder documentation for __integerMinNegative5Max5
      minimum: -5
      maximum: 5
    MultiplexStatmuxVideoSettings:
      type: object
      properties:
        MaximumBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max100000000'
            - xml:
                name: maximumBitrate
              description: Maximum statmux bitrate.
        MinimumBitrate:
          allOf:
            - $ref: '#/components/schemas/__integerMin100000Max100000000'
            - xml:
                name: minimumBitrate
              description: Minimum statmux bitrate.
        Priority:
          allOf:
            - $ref: '#/components/schemas/__integerMinNegative5Max5'
            - xml:
                name: priority
              description: The purpose of the priority is to use a combination of the\nmultiplex rate control algorithm and the QVBR capability of the\nencoder to prioritize the video quality of some channels in a\nmultiplex over others.  Channels that have a higher priority will\nget higher video quality at the expense of the video quality of\nother channels in the multiplex with lower priority.
      description: Statmux rate control settings
    MultiplexSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: availabilityZones
              description: A list of availability zones for the multiplex.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettingsSummary'
            - xml:
                name: multiplexSettings
              description: Configuration for a multiplex event.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: pipelinesRunningCount
              description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programCount
              description: The number of programs in the multiplex.
        State:
          allOf:
            - $ref: '#/components/schemas/MultiplexState'
            - xml:
                name: state
              description: The current state of the multiplex.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
      description: Placeholder documentation for MultiplexSummary
    NetworkInputServerValidation:
      type: string
      enum:
        - CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME
        - CHECK_CRYPTOGRAPHY_ONLY
      description: Network Input Server Validation
    NielsenPcmToId3TaggingState:
      type: string
      enum:
        - DISABLED
        - ENABLED
      description: State of Nielsen PCM to ID3 tagging
    Offering:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'Unique offering ARN, e.g. ''arn:aws:medialive:us-west-2:123456789012:offering:87654321'''
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: 'Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. ''USD'''
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: 'Lease duration, e.g. ''12'''
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/OfferingDurationUnits'
            - xml:
                name: durationUnits
              description: 'Units for duration, e.g. ''MONTHS'''
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: fixedPrice
              description: 'One-time charge for each reserved resource, e.g. ''0.0'' for a NO_UPFRONT offering'
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: 'Offering description, e.g. ''HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'''
        OfferingId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringId
              description: 'Unique offering ID, e.g. ''87654321'''
        OfferingType:
          allOf:
            - $ref: '#/components/schemas/OfferingType'
            - xml:
                name: offeringType
              description: 'Offering type, e.g. ''NO_UPFRONT'''
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: 'AWS region, e.g. ''us-west-2'''
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceSpecification'
            - xml:
                name: resourceSpecification
              description: Resource configuration details
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: usagePrice
              description: 'Recurring usage charge for each reserved resource, e.g. ''157.0'''
      description: Reserved resources available for purchase
    __stringMin1Max255:
      type: string
      description: Placeholder documentation for __stringMin1Max255
      minLength: 1
      maxLength: 255
    OutputSettings:
      type: object
      properties:
        ArchiveOutputSettings:
          allOf:
            - $ref: '#/components/schemas/ArchiveOutputSettings'
            - xml:
                name: archiveOutputSettings
        FrameCaptureOutputSettings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureOutputSettings'
            - xml:
                name: frameCaptureOutputSettings
        HlsOutputSettings:
          allOf:
            - $ref: '#/components/schemas/HlsOutputSettings'
            - xml:
                name: hlsOutputSettings
        MediaPackageOutputSettings:
          allOf:
            - $ref: '#/components/schemas/MediaPackageOutputSettings'
            - xml:
                name: mediaPackageOutputSettings
        MsSmoothOutputSettings:
          allOf:
            - $ref: '#/components/schemas/MsSmoothOutputSettings'
            - xml:
                name: msSmoothOutputSettings
        MultiplexOutputSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexOutputSettings'
            - xml:
                name: multiplexOutputSettings
        RtmpOutputSettings:
          allOf:
            - $ref: '#/components/schemas/RtmpOutputSettings'
            - xml:
                name: rtmpOutputSettings
        UdpOutputSettings:
          allOf:
            - $ref: '#/components/schemas/UdpOutputSettings'
            - xml:
                name: udpOutputSettings
      description: Output Settings
    Output:
      type: object
      required:
        - OutputSettings
      properties:
        AudioDescriptionNames:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: audioDescriptionNames
              description: The names of the AudioDescriptions used as audio sources for this output.
        CaptionDescriptionNames:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: captionDescriptionNames
              description: The names of the CaptionDescriptions used as caption sources for this output.
        OutputName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max255'
            - xml:
                name: outputName
              description: The name used to identify an output.
        OutputSettings:
          allOf:
            - $ref: '#/components/schemas/OutputSettings'
            - xml:
                name: outputSettings
              description: Output type-specific settings.
        VideoDescriptionName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoDescriptionName
              description: The name of the VideoDescription used as the source for this output.
      description: Output settings. There can be multiple outputs within a group.
    __listOfMediaPackageOutputDestinationSettings:
      type: array
      description: Placeholder documentation for __listOfMediaPackageOutputDestinationSettings
      items:
        $ref: '#/components/schemas/MediaPackageOutputDestinationSettings'
    __listOfOutputDestinationSettings:
      type: array
      description: Placeholder documentation for __listOfOutputDestinationSettings
      items:
        $ref: '#/components/schemas/OutputDestinationSettings'
    OutputDestinationSettings:
      type: object
      properties:
        PasswordParam:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: passwordParam
              description: key used to extract the password from EC2 Parameter store
        StreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamName
              description: 'Stream name for RTMP destinations (URLs of type rtmp://)'
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: A URL specifying a destination
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: username for destination
      description: Placeholder documentation for OutputDestinationSettings
    __stringMax32:
      type: string
      description: Placeholder documentation for __stringMax32
      maxLength: 32
    OutputGroupSettings:
      type: object
      properties:
        ArchiveGroupSettings:
          allOf:
            - $ref: '#/components/schemas/ArchiveGroupSettings'
            - xml:
                name: archiveGroupSettings
        FrameCaptureGroupSettings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureGroupSettings'
            - xml:
                name: frameCaptureGroupSettings
        HlsGroupSettings:
          allOf:
            - $ref: '#/components/schemas/HlsGroupSettings'
            - xml:
                name: hlsGroupSettings
        MediaPackageGroupSettings:
          allOf:
            - $ref: '#/components/schemas/MediaPackageGroupSettings'
            - xml:
                name: mediaPackageGroupSettings
        MsSmoothGroupSettings:
          allOf:
            - $ref: '#/components/schemas/MsSmoothGroupSettings'
            - xml:
                name: msSmoothGroupSettings
        MultiplexGroupSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexGroupSettings'
            - xml:
                name: multiplexGroupSettings
        RtmpGroupSettings:
          allOf:
            - $ref: '#/components/schemas/RtmpGroupSettings'
            - xml:
                name: rtmpGroupSettings
        UdpGroupSettings:
          allOf:
            - $ref: '#/components/schemas/UdpGroupSettings'
            - xml:
                name: udpGroupSettings
      description: Output Group Settings
    __listOfOutput:
      type: array
      description: Placeholder documentation for __listOfOutput
      items:
        $ref: '#/components/schemas/Output'
    OutputGroup:
      type: object
      required:
        - Outputs
        - OutputGroupSettings
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMax32'
            - xml:
                name: name
              description: 'Custom output group name optionally defined by the user.  Only letters, numbers, and the underscore character allowed; only 32 characters allowed.'
        OutputGroupSettings:
          allOf:
            - $ref: '#/components/schemas/OutputGroupSettings'
            - xml:
                name: outputGroupSettings
              description: Settings associated with the output group.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfOutput'
            - xml:
                name: outputs
      description: Output groups for this Live Event. Output groups contain information about where streams should be distributed.
    RtmpGroupSettings:
      type: object
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/__listOfRtmpAdMarkers'
            - xml:
                name: adMarkers
              description: 'Choose the ad marker type for this output group. MediaLive will create a message based on the content of each SCTE-35 message, format it for that marker type, and insert it in the datastream.'
        AuthenticationScheme:
          allOf:
            - $ref: '#/components/schemas/AuthenticationScheme'
            - xml:
                name: authenticationScheme
              description: Authentication scheme to use when connecting with CDN
        CacheFullBehavior:
          allOf:
            - $ref: '#/components/schemas/RtmpCacheFullBehavior'
            - xml:
                name: cacheFullBehavior
              description: 'Controls behavior when content cache fills up. If remote origin server stalls the RTMP connection and does not accept content fast enough the ''Media Cache'' will fill up. When the cache reaches the duration specified by cacheLength the cache will stop accepting new content. If set to disconnectImmediately, the RTMP output will force a disconnect. Clear the media cache, and reconnect after restartDelay seconds. If set to waitForServer, the RTMP output will wait up to 5 minutes to allow the origin server to begin accepting data again.'
        CacheLength:
          allOf:
            - $ref: '#/components/schemas/__integerMin30'
            - xml:
                name: cacheLength
              description: 'Cache length, in seconds, is used to calculate buffer size.'
        CaptionData:
          allOf:
            - $ref: '#/components/schemas/RtmpCaptionData'
            - xml:
                name: captionData
              description: 'Controls the types of data that passes to onCaptionInfo outputs.  If set to ''all'' then 608 and 708 carried DTVCC data will be passed.  If set to ''field1AndField2608'' then DTVCC data will be stripped out, but 608 data from both fields will be passed. If set to ''field1608'' then only the data carried in 608 from field 1 video will be passed.'
        InputLossAction:
          allOf:
            - $ref: '#/components/schemas/InputLossActionForRtmpOut'
            - xml:
                name: inputLossAction
              description: |-
                Controls the behavior of this RTMP group if input becomes unavailable.

                - emitOutput: Emit a slate until input returns.
                - pauseOutput: Stop transmitting data until input returns. This does not close the underlying RTMP connection.
        RestartDelay:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: restartDelay
              description: 'If a streaming output fails, number of seconds to wait until a restart is initiated. A value of 0 means never restart.'
      description: Rtmp Group Settings
    UdpGroupSettings:
      type: object
      properties:
        InputLossAction:
          allOf:
            - $ref: '#/components/schemas/InputLossActionForUdpOut'
            - xml:
                name: inputLossAction
              description: 'Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted.  When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement).  Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.'
        TimedMetadataId3Frame:
          allOf:
            - $ref: '#/components/schemas/UdpTimedMetadataId3Frame'
            - xml:
                name: timedMetadataId3Frame
              description: Indicates ID3 frame that has the timecode.
        TimedMetadataId3Period:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: timedMetadataId3Period
              description: Timed Metadata interval in seconds.
      description: Udp Group Settings
    RtmpOutputSettings:
      type: object
      required:
        - Destination
      properties:
        CertificateMode:
          allOf:
            - $ref: '#/components/schemas/RtmpOutputCertificateMode'
            - xml:
                name: certificateMode
              description: 'If set to verifyAuthenticity, verify the tls certificate chain to a trusted Certificate Authority (CA).  This will cause rtmps outputs with self-signed certificates to fail.'
        ConnectionRetryInterval:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: connectionRetryInterval
              description: Number of seconds to wait before retrying a connection to the Flash Media server if the connection is lost.
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: 'The RTMP endpoint excluding the stream name (eg. rtmp://host/appname). For connection to Akamai, a username and password must be supplied. URI fields accept format identifiers.'
        NumRetries:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: numRetries
              description: Number of retry attempts.
      description: Rtmp Output Settings
    UdpOutputSettings:
      type: object
      required:
        - Destination
        - ContainerSettings
      properties:
        BufferMsec:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max10000'
            - xml:
                name: bufferMsec
              description: 'UDP output buffering in milliseconds. Larger values increase latency through the transcoder but simultaneously assist the transcoder in maintaining a constant, low-jitter UDP/RTP output while accommodating clock recovery, input switching, input disruptions, picture reordering, etc.'
        ContainerSettings:
          allOf:
            - $ref: '#/components/schemas/UdpContainerSettings'
            - xml:
                name: containerSettings
        Destination:
          allOf:
            - $ref: '#/components/schemas/OutputLocationRef'
            - xml:
                name: destination
              description: 'Destination address and port number for RTP or UDP packets. Can be unicast or multicast RTP or UDP (eg. rtp://239.10.10.10:5001 or udp://10.100.100.100:5002).'
        FecOutputSettings:
          allOf:
            - $ref: '#/components/schemas/FecOutputSettings'
            - xml:
                name: fecOutputSettings
              description: Settings for enabling and adjusting Forward Error Correction on UDP outputs.
      description: Udp Output Settings
    __listOfPipelinePauseStateSettings:
      type: array
      description: Placeholder documentation for __listOfPipelinePauseStateSettings
      items:
        $ref: '#/components/schemas/PipelinePauseStateSettings'
    PauseStateScheduleActionSettings:
      type: object
      properties:
        Pipelines:
          allOf:
            - $ref: '#/components/schemas/__listOfPipelinePauseStateSettings'
            - xml:
                name: pipelines
      description: Settings for the action to set pause state of a channel.
    PipelineDetail:
      type: object
      properties:
        ActiveInputAttachmentName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: activeInputAttachmentName
              description: The name of the active input attachment currently being ingested by this pipeline.
        ActiveInputSwitchActionName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: activeInputSwitchActionName
              description: The name of the input switch schedule action that occurred most recently and that resulted in the switch to the current input attachment for this pipeline.
        ActiveMotionGraphicsActionName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: activeMotionGraphicsActionName
              description: The name of the motion graphics activate action that occurred most recently and that resulted in the current graphics URI for this pipeline.
        ActiveMotionGraphicsUri:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: activeMotionGraphicsUri
              description: The current URI being used for HTML5 motion graphics for this pipeline.
        PipelineId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pipelineId
              description: Pipeline ID
      description: Runtime details of a pipeline when a channel is running.
    PipelineId:
      type: string
      enum:
        - PIPELINE_0
        - PIPELINE_1
      description: Pipeline ID
    PipelinePauseStateSettings:
      type: object
      required:
        - PipelineId
      properties:
        PipelineId:
          allOf:
            - $ref: '#/components/schemas/PipelineId'
            - xml:
                name: pipelineId
              description: Pipeline ID to pause ("PIPELINE_0" or "PIPELINE_1").
      description: Settings for pausing a pipeline.
    PurchaseOfferingRequest:
      type: object
      required:
        - Count
      title: PurchaseOfferingRequest
      properties:
        Count:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: count
              description: Number of resources
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name for the new reservation
        RequestId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: requestId
              description: Unique request ID to be specified. This is needed to prevent retries from creating multiple resources.
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: 'Requested reservation start time (UTC) in ISO-8601 format. The specified time must be between the first day of the current month and one year from now. If no value is given, the default is now.'
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs
      description: Placeholder documentation for PurchaseOfferingRequest
    Reservation:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: 'Unique reservation ARN, e.g. ''arn:aws:medialive:us-west-2:123456789012:reservation:1234567'''
        Count:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: count
              description: Number of reserved resources
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: 'Currency code for usagePrice and fixedPrice in ISO-4217 format, e.g. ''USD'''
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: 'Lease duration, e.g. ''12'''
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/OfferingDurationUnits'
            - xml:
                name: durationUnits
              description: 'Units for duration, e.g. ''MONTHS'''
        End:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: end
              description: 'Reservation UTC end date and time in ISO-8601 format, e.g. ''2019-03-01T00:00:00'''
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: fixedPrice
              description: 'One-time charge for each reserved resource, e.g. ''0.0'' for a NO_UPFRONT offering'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: User specified reservation name
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: 'Offering description, e.g. ''HD AVC output at 10-20 Mbps, 30 fps, and standard VQ in US West (Oregon)'''
        OfferingId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringId
              description: 'Unique offering ID, e.g. ''87654321'''
        OfferingType:
          allOf:
            - $ref: '#/components/schemas/OfferingType'
            - xml:
                name: offeringType
              description: 'Offering type, e.g. ''NO_UPFRONT'''
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: 'AWS region, e.g. ''us-west-2'''
        ReservationId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationId
              description: 'Unique reservation ID, e.g. ''1234567'''
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ReservationResourceSpecification'
            - xml:
                name: resourceSpecification
              description: Resource configuration details
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: 'Reservation UTC start date and time in ISO-8601 format, e.g. ''2018-03-01T00:00:00'''
        State:
          allOf:
            - $ref: '#/components/schemas/ReservationState'
            - xml:
                name: state
              description: 'Current state of reservation, e.g. ''ACTIVE'''
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: usagePrice
              description: 'Recurring usage charge for each reserved resource, e.g. ''157.0'''
      description: Reserved resources available to use
    RejectInputDeviceTransferRequest:
      type: object
      title: RejectInputDeviceTransferRequest
      properties: {}
      description: Placeholder documentation for RejectInputDeviceTransferRequest
    __listOfAudioChannelMapping:
      type: array
      description: Placeholder documentation for __listOfAudioChannelMapping
      items:
        $ref: '#/components/schemas/AudioChannelMapping'
    __integerMin1Max8:
      type: integer
      description: Placeholder documentation for __integerMin1Max8
      minimum: 1
      maximum: 8
    ReservationCodec:
      type: string
      enum:
        - MPEG2
        - AVC
        - HEVC
        - AUDIO
        - LINK
      description: 'Codec, ''MPEG2'', ''AVC'', ''HEVC'', or ''AUDIO'''
    ReservationMaximumBitrate:
      type: string
      enum:
        - MAX_10_MBPS
        - MAX_20_MBPS
        - MAX_50_MBPS
      description: Maximum bitrate in megabits per second
    ReservationMaximumFramerate:
      type: string
      enum:
        - MAX_30_FPS
        - MAX_60_FPS
      description: Maximum framerate in frames per second (Outputs only)
    ReservationResolution:
      type: string
      enum:
        - SD
        - HD
        - FHD
        - UHD
      description: |
        Resolution based on lines of vertical resolution; SD is less than 720 lines, HD is 720 to 1080 lines, FHD is 1080 lines, UHD is greater than 1080 lines
    ReservationResourceType:
      type: string
      enum:
        - INPUT
        - OUTPUT
        - MULTIPLEX
        - CHANNEL
      description: 'Resource type, ''INPUT'', ''OUTPUT'', ''MULTIPLEX'', or ''CHANNEL'''
    ReservationSpecialFeature:
      type: string
      enum:
        - ADVANCED_AUDIO
        - AUDIO_NORMALIZATION
        - MGHD
        - MGUHD
      description: 'Special features, ''ADVANCED_AUDIO'' ''AUDIO_NORMALIZATION'' ''MGHD'' or ''MGUHD'''
    ReservationVideoQuality:
      type: string
      enum:
        - STANDARD
        - ENHANCED
        - PREMIUM
      description: 'Video quality, e.g. ''STANDARD'' (Outputs only)'
    RtmpAdMarkers:
      type: string
      enum:
        - ON_CUE_POINT_SCTE35
      description: Rtmp Ad Markers
    RtmpCacheFullBehavior:
      type: string
      enum:
        - DISCONNECT_IMMEDIATELY
        - WAIT_FOR_SERVER
      description: Rtmp Cache Full Behavior
    RtmpCaptionData:
      type: string
      enum:
        - ALL
        - FIELD1_608
        - FIELD1_AND_FIELD2_608
      description: Rtmp Caption Data
    __listOfRtmpAdMarkers:
      type: array
      description: Placeholder documentation for __listOfRtmpAdMarkers
      items:
        $ref: '#/components/schemas/RtmpAdMarkers'
    __integerMin30:
      type: integer
      description: Placeholder documentation for __integerMin30
      minimum: 30
    RtmpOutputCertificateMode:
      type: string
      enum:
        - SELF_SIGNED
        - VERIFY_AUTHENTICITY
      description: Rtmp Output Certificate Mode
    ScheduleActionSettings:
      type: object
      properties:
        HlsId3SegmentTaggingSettings:
          allOf:
            - $ref: '#/components/schemas/HlsId3SegmentTaggingScheduleActionSettings'
            - xml:
                name: hlsId3SegmentTaggingSettings
              description: Action to insert HLS ID3 segment tagging
        HlsTimedMetadataSettings:
          allOf:
            - $ref: '#/components/schemas/HlsTimedMetadataScheduleActionSettings'
            - xml:
                name: hlsTimedMetadataSettings
              description: Action to insert HLS metadata
        InputPrepareSettings:
          allOf:
            - $ref: '#/components/schemas/InputPrepareScheduleActionSettings'
            - xml:
                name: inputPrepareSettings
              description: Action to prepare an input for a future immediate input switch
        InputSwitchSettings:
          allOf:
            - $ref: '#/components/schemas/InputSwitchScheduleActionSettings'
            - xml:
                name: inputSwitchSettings
              description: Action to switch the input
        MotionGraphicsImageActivateSettings:
          allOf:
            - $ref: '#/components/schemas/MotionGraphicsActivateScheduleActionSettings'
            - xml:
                name: motionGraphicsImageActivateSettings
              description: Action to activate a motion graphics image overlay
        MotionGraphicsImageDeactivateSettings:
          allOf:
            - $ref: '#/components/schemas/MotionGraphicsDeactivateScheduleActionSettings'
            - xml:
                name: motionGraphicsImageDeactivateSettings
              description: Action to deactivate a motion graphics image overlay
        PauseStateSettings:
          allOf:
            - $ref: '#/components/schemas/PauseStateScheduleActionSettings'
            - xml:
                name: pauseStateSettings
              description: Action to pause or unpause one or both channel pipelines
        Scte35ReturnToNetworkSettings:
          allOf:
            - $ref: '#/components/schemas/Scte35ReturnToNetworkScheduleActionSettings'
            - xml:
                name: scte35ReturnToNetworkSettings
              description: Action to insert SCTE-35 return_to_network message
        Scte35SpliceInsertSettings:
          allOf:
            - $ref: '#/components/schemas/Scte35SpliceInsertScheduleActionSettings'
            - xml:
                name: scte35SpliceInsertSettings
              description: Action to insert SCTE-35 splice_insert message
        Scte35TimeSignalSettings:
          allOf:
            - $ref: '#/components/schemas/Scte35TimeSignalScheduleActionSettings'
            - xml:
                name: scte35TimeSignalSettings
              description: Action to insert SCTE-35 time_signal message
        StaticImageActivateSettings:
          allOf:
            - $ref: '#/components/schemas/StaticImageActivateScheduleActionSettings'
            - xml:
                name: staticImageActivateSettings
              description: Action to activate a static image overlay
        StaticImageDeactivateSettings:
          allOf:
            - $ref: '#/components/schemas/StaticImageDeactivateScheduleActionSettings'
            - xml:
                name: staticImageDeactivateSettings
              description: Action to deactivate a static image overlay
      description: Holds the settings for a single schedule action.
    ScheduleActionStartSettings:
      type: object
      properties:
        FixedModeScheduleActionStartSettings:
          allOf:
            - $ref: '#/components/schemas/FixedModeScheduleActionStartSettings'
            - xml:
                name: fixedModeScheduleActionStartSettings
              description: Option for specifying the start time for an action.
        FollowModeScheduleActionStartSettings:
          allOf:
            - $ref: '#/components/schemas/FollowModeScheduleActionStartSettings'
            - xml:
                name: followModeScheduleActionStartSettings
              description: Option for specifying an action as relative to another action.
        ImmediateModeScheduleActionStartSettings:
          allOf:
            - $ref: '#/components/schemas/ImmediateModeScheduleActionStartSettings'
            - xml:
                name: immediateModeScheduleActionStartSettings
              description: Option for specifying an action that should be applied immediately.
      description: Settings to specify when an action should occur. Only one of the options must be selected.
    ScheduleAction:
      type: object
      required:
        - ActionName
        - ScheduleActionStartSettings
        - ScheduleActionSettings
      properties:
        ActionName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: actionName
              description: 'The name of the action, must be unique within the schedule. This name provides the main reference to an action once it is added to the schedule. A name is unique if it is no longer in the schedule. The schedule is automatically cleaned up to remove actions with a start time of more than 1 hour ago (approximately) so at that point a name can be reused.'
        ScheduleActionSettings:
          allOf:
            - $ref: '#/components/schemas/ScheduleActionSettings'
            - xml:
                name: scheduleActionSettings
              description: Settings for this schedule action.
        ScheduleActionStartSettings:
          allOf:
            - $ref: '#/components/schemas/ScheduleActionStartSettings'
            - xml:
                name: scheduleActionStartSettings
              description: The time for the action to start in the channel.
      description: Contains information on a single schedule action.
    Scte35ReturnToNetworkScheduleActionSettings:
      type: object
      required:
        - SpliceEventId
      properties:
        SpliceEventId:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max4294967295'
            - xml:
                name: spliceEventId
              description: 'The splice_event_id for the SCTE-35 splice_insert, as defined in SCTE-35.'
      description: Settings for a SCTE-35 return_to_network message.
    Scte35SpliceInsertScheduleActionSettings:
      type: object
      required:
        - SpliceEventId
      properties:
        Duration:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max8589934591'
            - xml:
                name: duration
              description: 'Optional, the duration for the splice_insert, in 90 KHz ticks. To convert seconds to ticks, multiple the seconds by 90,000. If you enter a duration, there is an expectation that the downstream system can read the duration and cue in at that time. If you do not enter a duration, the splice_insert will continue indefinitely and there is an expectation that you will enter a return_to_network to end the splice_insert at the appropriate time.'
        SpliceEventId:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max4294967295'
            - xml:
                name: spliceEventId
              description: 'The splice_event_id for the SCTE-35 splice_insert, as defined in SCTE-35.'
      description: Settings for a SCTE-35 splice_insert message.
    Scte35TimeSignalScheduleActionSettings:
      type: object
      required:
        - Scte35Descriptors
      properties:
        Scte35Descriptors:
          allOf:
            - $ref: '#/components/schemas/__listOfScte35Descriptor'
            - xml:
                name: scte35Descriptors
              description: The list of SCTE-35 descriptors accompanying the SCTE-35 time_signal.
      description: Settings for a SCTE-35 time_signal.
    StaticImageActivateScheduleActionSettings:
      type: object
      required:
        - Image
      properties:
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: duration
              description: The duration in milliseconds for the image to remain on the video. If omitted or set to 0 the duration is unlimited and the image will remain until it is explicitly deactivated.
        FadeIn:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: fadeIn
              description: The time in milliseconds for the image to fade in. The fade-in starts at the start time of the overlay. Default is 0 (no fade-in).
        FadeOut:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: fadeOut
              description: 'Applies only if a duration is specified. The time in milliseconds for the image to fade out. The fade-out starts when the duration time is hit, so it effectively extends the duration. Default is 0 (no fade-out).'
        Height:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: height
              description: 'The height of the image when inserted into the video, in pixels. The overlay will be scaled up or down to the specified height. Leave blank to use the native height of the overlay.'
        Image:
          allOf:
            - $ref: '#/components/schemas/InputLocation'
            - xml:
                name: image
              description: 'The location and filename of the image file to overlay on the video. The file must be a 32-bit BMP, PNG, or TGA file, and must not be larger (in pixels) than the input video.'
        ImageX:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: imageX
              description: 'Placement of the left edge of the overlay relative to the left edge of the video frame, in pixels. 0 (the default) is the left edge of the frame. If the placement causes the overlay to extend beyond the right edge of the underlying video, then the overlay is cropped on the right.'
        ImageY:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: imageY
              description: 'Placement of the top edge of the overlay relative to the top edge of the video frame, in pixels. 0 (the default) is the top edge of the frame. If the placement causes the overlay to extend beyond the bottom edge of the underlying video, then the overlay is cropped on the bottom.'
        Layer:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max7'
            - xml:
                name: layer
              description: 'The number of the layer, 0 to 7. There are 8 layers that can be overlaid on the video, each layer with a different image. The layers are in Z order, which means that overlays with higher values of layer are inserted on top of overlays with lower values of layer. Default is 0.'
        Opacity:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max100'
            - xml:
                name: opacity
              description: Opacity of image where 0 is transparent and 100 is fully opaque. Default is 100.
        Width:
          allOf:
            - $ref: '#/components/schemas/__integerMin1'
            - xml:
                name: width
              description: 'The width of the image when inserted into the video, in pixels. The overlay will be scaled up or down to the specified width. Leave blank to use the native width of the overlay.'
      description: Settings for the action to activate a static image.
    StaticImageDeactivateScheduleActionSettings:
      type: object
      properties:
        FadeOut:
          allOf:
            - $ref: '#/components/schemas/__integerMin0'
            - xml:
                name: fadeOut
              description: The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
        Layer:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max7'
            - xml:
                name: layer
              description: 'The image overlay layer to deactivate, 0 to 7. Default is 0.'
      description: Settings for the action to deactivate the image in a specific layer.
    Scte20Convert608To708:
      type: string
      enum:
        - DISABLED
        - UPCONVERT
      description: Scte20 Convert608 To708
    Scte27OcrLanguage:
      type: string
      enum:
        - DEU
        - ENG
        - FRA
        - NLD
        - POR
        - SPA
      description: Scte27 Ocr Language
    Scte35AposNoRegionalBlackoutBehavior:
      type: string
      enum:
        - FOLLOW
        - IGNORE
      description: Scte35 Apos No Regional Blackout Behavior
    Scte35AposWebDeliveryAllowedBehavior:
      type: string
      enum:
        - FOLLOW
        - IGNORE
      description: Scte35 Apos Web Delivery Allowed Behavior
    Scte35ArchiveAllowedFlag:
      type: string
      enum:
        - ARCHIVE_NOT_ALLOWED
        - ARCHIVE_ALLOWED
      description: Corresponds to the archive_allowed parameter. A value of ARCHIVE_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    Scte35DeviceRestrictions:
      type: string
      enum:
        - NONE
        - RESTRICT_GROUP0
        - RESTRICT_GROUP1
        - RESTRICT_GROUP2
      description: Corresponds to the device_restrictions parameter in a segmentation_descriptor. If you include one of the "restriction" flags then you must include all four of them.
    Scte35NoRegionalBlackoutFlag:
      type: string
      enum:
        - REGIONAL_BLACKOUT
        - NO_REGIONAL_BLACKOUT
      description: Corresponds to the no_regional_blackout_flag parameter. A value of REGIONAL_BLACKOUT corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    Scte35WebDeliveryAllowedFlag:
      type: string
      enum:
        - WEB_DELIVERY_NOT_ALLOWED
        - WEB_DELIVERY_ALLOWED
      description: Corresponds to the web_delivery_allowed_flag parameter. A value of WEB_DELIVERY_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    Scte35DeliveryRestrictions:
      type: object
      required:
        - DeviceRestrictions
        - ArchiveAllowedFlag
        - WebDeliveryAllowedFlag
        - NoRegionalBlackoutFlag
      properties:
        ArchiveAllowedFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35ArchiveAllowedFlag'
            - xml:
                name: archiveAllowedFlag
              description: Corresponds to SCTE-35 archive_allowed_flag.
        DeviceRestrictions:
          allOf:
            - $ref: '#/components/schemas/Scte35DeviceRestrictions'
            - xml:
                name: deviceRestrictions
              description: Corresponds to SCTE-35 device_restrictions parameter.
        NoRegionalBlackoutFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35NoRegionalBlackoutFlag'
            - xml:
                name: noRegionalBlackoutFlag
              description: Corresponds to SCTE-35 no_regional_blackout_flag parameter.
        WebDeliveryAllowedFlag:
          allOf:
            - $ref: '#/components/schemas/Scte35WebDeliveryAllowedFlag'
            - xml:
                name: webDeliveryAllowedFlag
              description: Corresponds to SCTE-35 web_delivery_allowed_flag parameter.
      description: 'Corresponds to SCTE-35 delivery_not_restricted_flag parameter. To declare delivery restrictions, include this element and its four "restriction" flags. To declare that there are no restrictions, omit this element.'
    Scte35DescriptorSettings:
      type: object
      required:
        - SegmentationDescriptorScte35DescriptorSettings
      properties:
        SegmentationDescriptorScte35DescriptorSettings:
          allOf:
            - $ref: '#/components/schemas/Scte35SegmentationDescriptor'
            - xml:
                name: segmentationDescriptorScte35DescriptorSettings
              description: SCTE-35 Segmentation Descriptor.
      description: SCTE-35 Descriptor settings.
    Scte35Descriptor:
      type: object
      required:
        - Scte35DescriptorSettings
      properties:
        Scte35DescriptorSettings:
          allOf:
            - $ref: '#/components/schemas/Scte35DescriptorSettings'
            - xml:
                name: scte35DescriptorSettings
              description: SCTE-35 Descriptor Settings.
      description: Holds one set of SCTE-35 Descriptor Settings.
    Scte35SegmentationDescriptor:
      type: object
      required:
        - SegmentationEventId
        - SegmentationCancelIndicator
      properties:
        DeliveryRestrictions:
          allOf:
            - $ref: '#/components/schemas/Scte35DeliveryRestrictions'
            - xml:
                name: deliveryRestrictions
              description: Holds the four SCTE-35 delivery restriction parameters.
        SegmentNum:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: segmentNum
              description: Corresponds to SCTE-35 segment_num. A value that is valid for the specified segmentation_type_id.
        SegmentationCancelIndicator:
          allOf:
            - $ref: '#/components/schemas/Scte35SegmentationCancelIndicator'
            - xml:
                name: segmentationCancelIndicator
              description: Corresponds to SCTE-35 segmentation_event_cancel_indicator.
        SegmentationDuration:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max1099511627775'
            - xml:
                name: segmentationDuration
              description: 'Corresponds to SCTE-35 segmentation_duration. Optional. The duration for the time_signal, in 90 KHz ticks. To convert seconds to ticks, multiple the seconds by 90,000. Enter time in 90 KHz clock ticks. If you do not enter a duration, the time_signal will continue until you insert a cancellation message.'
        SegmentationEventId:
          allOf:
            - $ref: '#/components/schemas/__longMin0Max4294967295'
            - xml:
                name: segmentationEventId
              description: 'Corresponds to SCTE-35 segmentation_event_id. '
        SegmentationTypeId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: segmentationTypeId
              description: 'Corresponds to SCTE-35 segmentation_type_id. One of the segmentation_type_id values listed in the SCTE-35 specification. On the console, enter the ID in decimal (for example, "52"). In the CLI, API, or an SDK, enter the ID in hex (for example, "0x34") or decimal (for example, "52").'
        SegmentationUpid:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: segmentationUpid
              description: 'Corresponds to SCTE-35 segmentation_upid. Enter a string containing the hexadecimal representation of the characters that make up the SCTE-35 segmentation_upid value. Must contain an even number of hex characters. Do not include spaces between each hex pair. For example, the ASCII "ADS Information" becomes hex "41445320496e666f726d6174696f6e.'
        SegmentationUpidType:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: segmentationUpidType
              description: 'Corresponds to SCTE-35 segmentation_upid_type. On the console, enter one of the types listed in the SCTE-35 specification, converted to a decimal. For example, "0x0C" hex from the specification is "12" in decimal. In the CLI, API, or an SDK, enter one of the types listed in the SCTE-35 specification, in either hex (for example, "0x0C" ) or in decimal (for example, "12").'
        SegmentsExpected:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: segmentsExpected
              description: Corresponds to SCTE-35 segments_expected. A value that is valid for the specified segmentation_type_id.
        SubSegmentNum:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: subSegmentNum
              description: Corresponds to SCTE-35 sub_segment_num. A value that is valid for the specified segmentation_type_id.
        SubSegmentsExpected:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max255'
            - xml:
                name: subSegmentsExpected
              description: Corresponds to SCTE-35 sub_segments_expected. A value that is valid for the specified segmentation_type_id.
      description: Corresponds to SCTE-35 segmentation_descriptor.
    __longMin0Max4294967295:
      type: integer
      description: Placeholder documentation for __longMin0Max4294967295
      minimum: 0
      maximum: 4294967295
    Scte35SegmentationCancelIndicator:
      type: string
      enum:
        - SEGMENTATION_EVENT_NOT_CANCELED
        - SEGMENTATION_EVENT_CANCELED
      description: 'Corresponds to SCTE-35 segmentation_event_cancel_indicator. SEGMENTATION_EVENT_NOT_CANCELED corresponds to 0 in the SCTE-35 specification and indicates that this is an insertion request. SEGMENTATION_EVENT_CANCELED corresponds to 1 in the SCTE-35 specification and indicates that this is a cancelation request, in which case complete this field and the existing event ID to cancel.'
    __longMin0Max1099511627775:
      type: integer
      description: Placeholder documentation for __longMin0Max1099511627775
      minimum: 0
      maximum: 1099511627775
    __integerMinNegative1000Max1000:
      type: integer
      description: Placeholder documentation for __integerMinNegative1000Max1000
      minimum: -1000
      maximum: 1000
    Scte35SpliceInsertNoRegionalBlackoutBehavior:
      type: string
      enum:
        - FOLLOW
        - IGNORE
      description: Scte35 Splice Insert No Regional Blackout Behavior
    Scte35SpliceInsertWebDeliveryAllowedBehavior:
      type: string
      enum:
        - FOLLOW
        - IGNORE
      description: Scte35 Splice Insert Web Delivery Allowed Behavior
    __longMin0Max8589934591:
      type: integer
      description: Placeholder documentation for __longMin0Max8589934591
      minimum: 0
      maximum: 8589934591
    __listOfScte35Descriptor:
      type: array
      description: Placeholder documentation for __listOfScte35Descriptor
      items:
        $ref: '#/components/schemas/Scte35Descriptor'
    StartChannelRequest:
      type: object
      title: StartChannelRequest
      properties: {}
      description: Placeholder documentation for StartChannelRequest
    StartMultiplexRequest:
      type: object
      title: StartMultiplexRequest
      properties: {}
      description: Placeholder documentation for StartMultiplexRequest
    StopChannelRequest:
      type: object
      title: StopChannelRequest
      properties: {}
      description: Placeholder documentation for StopChannelRequest
    StopMultiplexRequest:
      type: object
      title: StopMultiplexRequest
      properties: {}
      description: Placeholder documentation for StopMultiplexRequest
    TemporalFilterPostFilterSharpening:
      type: string
      enum:
        - AUTO
        - DISABLED
        - ENABLED
      description: Temporal Filter Post Filter Sharpening
    TemporalFilterStrength:
      type: string
      enum:
        - AUTO
        - STRENGTH_1
        - STRENGTH_2
        - STRENGTH_3
        - STRENGTH_4
        - STRENGTH_5
        - STRENGTH_6
        - STRENGTH_7
        - STRENGTH_8
        - STRENGTH_9
        - STRENGTH_10
        - STRENGTH_11
        - STRENGTH_12
        - STRENGTH_13
        - STRENGTH_14
        - STRENGTH_15
        - STRENGTH_16
      description: Temporal Filter Strength
    TimecodeConfigSource:
      type: string
      enum:
        - EMBEDDED
        - SYSTEMCLOCK
        - ZEROBASED
      description: Timecode Config Source
    __integerMin1Max1000000:
      type: integer
      description: Placeholder documentation for __integerMin1Max1000000
      minimum: 1
      maximum: 1000000
    TransferInputDeviceRequest:
      type: object
      title: TransferInputDeviceRequest
      properties:
        TargetCustomerId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: targetCustomerId
              description: The AWS account ID (12 digits) for the recipient of the device transfer.
        TargetRegion:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: targetRegion
              description: The target AWS region to transfer the device.
        TransferMessage:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: transferMessage
              description: An optional message for the recipient. Maximum 280 characters.
      description: A request to transfer an input device.
    TransferringInputDeviceSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique ID of the input device.
        Message:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: message
              description: The optional message that the sender has attached to the transfer.
        TargetCustomerId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: targetCustomerId
              description: The AWS account ID for the recipient of the input device transfer.
        TransferType:
          allOf:
            - $ref: '#/components/schemas/InputDeviceTransferType'
            - xml:
                name: transferType
              description: The type (direction) of the input device transfer.
      description: Details about the input device that is being transferred.
    TtmlDestinationStyleControl:
      type: string
      enum:
        - PASSTHROUGH
        - USE_CONFIGURED
      description: Ttml Destination Style Control
    UdpContainerSettings:
      type: object
      properties:
        M2tsSettings:
          allOf:
            - $ref: '#/components/schemas/M2tsSettings'
            - xml:
                name: m2tsSettings
      description: Udp Container Settings
    UdpTimedMetadataId3Frame:
      type: string
      enum:
        - NONE
        - PRIV
        - TDRL
      description: Udp Timed Metadata Id3 Frame
    UpdateChannelClassRequest:
      type: object
      required:
        - ChannelClass
      title: UpdateChannelClassRequest
      properties:
        ChannelClass:
          allOf:
            - $ref: '#/components/schemas/ChannelClass'
            - xml:
                name: channelClass
              description: The channel class that you wish to update this channel to use.
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: A list of output destinations for this channel.
      description: Channel class that the channel should be updated to.
    UpdateChannelRequest:
      type: object
      title: UpdateChannelRequest
      properties:
        CdiInputSpecification:
          allOf:
            - $ref: '#/components/schemas/CdiInputSpecification'
            - xml:
                name: cdiInputSpecification
              description: Specification of CDI inputs for this channel
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfOutputDestination'
            - xml:
                name: destinations
              description: A list of output destinations for this channel.
        EncoderSettings:
          allOf:
            - $ref: '#/components/schemas/EncoderSettings'
            - xml:
                name: encoderSettings
              description: The encoder settings for this channel.
        InputAttachments:
          allOf:
            - $ref: '#/components/schemas/__listOfInputAttachment'
            - xml:
                name: inputAttachments
        InputSpecification:
          allOf:
            - $ref: '#/components/schemas/InputSpecification'
            - xml:
                name: inputSpecification
              description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - xml:
                name: logLevel
              description: The log level to write to CloudWatch Logs.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the channel.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: An optional Amazon Resource Name (ARN) of the role to assume when running the Channel. If you do not specify this on an update call but the role was previously set that role will be removed.
      description: A request to update a channel.
    UpdateInputDeviceRequest:
      type: object
      title: UpdateInputDeviceRequest
      properties:
        HdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConfigurableSettings'
            - xml:
                name: hdDeviceSettings
              description: The settings that you want to apply to the HD input device.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name that you assigned to this input device (not the unique ID).
        UhdDeviceSettings:
          allOf:
            - $ref: '#/components/schemas/InputDeviceConfigurableSettings'
            - xml:
                name: uhdDeviceSettings
              description: The settings that you want to apply to the UHD input device.
      description: A request to update an input device.
    __listOfInputDeviceRequest:
      type: array
      description: Placeholder documentation for __listOfInputDeviceRequest
      items:
        $ref: '#/components/schemas/InputDeviceRequest'
    UpdateInputRequest:
      type: object
      title: UpdateInputRequest
      properties:
        Destinations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDestinationRequest'
            - xml:
                name: destinations
              description: Destination settings for PUSH type inputs.
        InputDevices:
          allOf:
            - $ref: '#/components/schemas/__listOfInputDeviceRequest'
            - xml:
                name: inputDevices
              description: Settings for the devices.
        InputSecurityGroups:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: inputSecurityGroups
              description: A list of security groups referenced by IDs to attach to the input.
        MediaConnectFlows:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
            - xml:
                name: mediaConnectFlows
              description: |
                A list of the MediaConnect Flow ARNs that you want to use as the source of the input. You can specify as few as one
                Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a
                separate Availability Zone as this ensures your EML input is redundant to AZ issues.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of the input.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfInputSourceRequest'
            - xml:
                name: sources
              description: |
                The source URLs for a PULL-type input. Every PULL type input needs
                exactly two source URLs for redundancy.
                Only specify sources for PULL type Inputs. Leave Destinations empty.
      description: A request to update an input.
    UpdateInputSecurityGroupRequest:
      type: object
      title: UpdateInputSecurityGroupRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
              description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
            - $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
            - xml:
                name: whitelistRules
              description: List of IPv4 CIDR addresses to whitelist
      description: The request to update some combination of the Input Security Group name and the IPv4 CIDRs the Input Security Group should allow.
    UpdateMultiplexProgramRequest:
      type: object
      title: UpdateMultiplexProgramRequest
      properties:
        MultiplexProgramSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexProgramSettings'
            - xml:
                name: multiplexProgramSettings
              description: The new settings for a multiplex program.
      description: A request to update a program in a multiplex.
    UpdateMultiplexRequest:
      type: object
      title: UpdateMultiplexRequest
      properties:
        MultiplexSettings:
          allOf:
            - $ref: '#/components/schemas/MultiplexSettings'
            - xml:
                name: multiplexSettings
              description: The new settings for a multiplex.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of the multiplex.
      description: A request to update a multiplex.
    UpdateReservationRequest:
      type: object
      title: UpdateReservationRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Name of the reservation
      description: Request to update a reservation
    __doubleMin0Max1:
      type: number
      description: Placeholder documentation for __doubleMin0Max1
      format: double
    VideoCodecSettings:
      type: object
      properties:
        FrameCaptureSettings:
          allOf:
            - $ref: '#/components/schemas/FrameCaptureSettings'
            - xml:
                name: frameCaptureSettings
        H264Settings:
          allOf:
            - $ref: '#/components/schemas/H264Settings'
            - xml:
                name: h264Settings
        H265Settings:
          allOf:
            - $ref: '#/components/schemas/H265Settings'
            - xml:
                name: h265Settings
        Mpeg2Settings:
          allOf:
            - $ref: '#/components/schemas/Mpeg2Settings'
            - xml:
                name: mpeg2Settings
      description: Video Codec Settings
    VideoDescriptionRespondToAfd:
      type: string
      enum:
        - NONE
        - PASSTHROUGH
        - RESPOND
      description: Video Description Respond To Afd
    VideoDescriptionScalingBehavior:
      type: string
      enum:
        - DEFAULT
        - STRETCH_TO_OUTPUT
      description: Video Description Scaling Behavior
    VideoDescription:
      type: object
      required:
        - Name
      properties:
        CodecSettings:
          allOf:
            - $ref: '#/components/schemas/VideoCodecSettings'
            - xml:
                name: codecSettings
              description: Video codec settings.
        Height:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: height
              description: 'Output video height, in pixels. Must be an even number. For most codecs, you can leave this field and width blank in order to use the height and width (resolution) from the source. Note, however, that leaving blank is not recommended. For the Frame Capture codec, height and width are required.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of this VideoDescription. Outputs will use this name to uniquely identify this Description.  Description names should be unique within this Live Event.
        RespondToAfd:
          allOf:
            - $ref: '#/components/schemas/VideoDescriptionRespondToAfd'
            - xml:
                name: respondToAfd
              description: |-
                Indicates how MediaLive will respond to the AFD values that might be in the input video. If you do not know what AFD signaling is, or if your downstream system has not given you guidance, choose PASSTHROUGH.
                RESPOND: MediaLive clips the input video using a formula that uses the AFD values (configured in afdSignaling ), the input display aspect ratio, and the output display aspect ratio. MediaLive also includes the AFD values in the output, unless the codec for this encode is FRAME_CAPTURE.
                PASSTHROUGH: MediaLive ignores the AFD values and does not clip the video. But MediaLive does include the values in the output.
                NONE: MediaLive does not clip the input video and does not include the AFD values in the output
        ScalingBehavior:
          allOf:
            - $ref: '#/components/schemas/VideoDescriptionScalingBehavior'
            - xml:
                name: scalingBehavior
              description: STRETCH_TO_OUTPUT configures the output position to stretch the video to the specified output resolution (height and width). This option will override any position value. DEFAULT may insert black boxes (pillar boxes or letter boxes) around the video to provide the specified output resolution.
        Sharpness:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max100'
            - xml:
                name: sharpness
              description: 'Changes the strength of the anti-alias filter used for scaling. 0 is the softest setting, 100 is the sharpest. A setting of 50 is recommended for most content.'
        Width:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: width
              description: 'Output video width, in pixels. Must be an even number. For most codecs, you can leave this field and height blank in order to use the height and width (resolution) from the source. Note, however, that leaving blank is not recommended. For the Frame Capture codec, height and width are required.'
      description: Video settings for this stream.
    VideoSelectorColorSpace:
      type: string
      enum:
        - FOLLOW
        - HDR10
        - HLG_2020
        - REC_601
        - REC_709
      description: Video Selector Color Space
    VideoSelectorColorSpaceSettings:
      type: object
      properties:
        Hdr10Settings:
          allOf:
            - $ref: '#/components/schemas/Hdr10Settings'
            - xml:
                name: hdr10Settings
      description: Video Selector Color Space Settings
    VideoSelectorColorSpaceUsage:
      type: string
      enum:
        - FALLBACK
        - FORCE
      description: Video Selector Color Space Usage
    VideoSelectorSettings:
      type: object
      properties:
        VideoSelectorPid:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorPid'
            - xml:
                name: videoSelectorPid
        VideoSelectorProgramId:
          allOf:
            - $ref: '#/components/schemas/VideoSelectorProgramId'
            - xml:
                name: videoSelectorProgramId
      description: Video Selector Settings
    VideoSelectorPid:
      type: object
      properties:
        Pid:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max8191'
            - xml:
                name: pid
              description: Selects a specific PID from within a video source.
      description: Video Selector Pid
    VideoSelectorProgramId:
      type: object
      properties:
        ProgramId:
          allOf:
            - $ref: '#/components/schemas/__integerMin0Max65536'
            - xml:
                name: programId
              description: 'Selects a specific program from within a multi-program transport stream. If the program doesn''t exist, the first program within the transport stream will be selected by default.'
      description: Video Selector Program Id
    WavCodingMode:
      type: string
      enum:
        - CODING_MODE_1_0
        - CODING_MODE_2_0
        - CODING_MODE_4_0
        - CODING_MODE_8_0
      description: Wav Coding Mode
    WebvttDestinationStyleControl:
      type: string
      enum:
        - NO_STYLE_DATA
        - PASSTHROUGH
      description: Webvtt Destination Style Control
security:
  - hmac: []
