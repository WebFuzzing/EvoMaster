openapi: 3.0.0
info:
  version: '2014-11-12'
  x-release: v4
  title: AWS Config
  description: '<fullname>Config</fullname> <p>Config provides a way to keep track of the configurations of all the Amazon Web Services resources associated with your Amazon Web Services account. You can use Config to get the current and historical configurations of each Amazon Web Services resource and also to get information about the relationship between the resources. An Amazon Web Services resource can be an Amazon Compute Cloud (Amazon EC2) instance, an Elastic Block Store (EBS) volume, an elastic network Interface (ENI), or a security group. For a complete list of resources currently supported by Config, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported Amazon Web Services resources</a>.</p> <p>You can access and manage Config through the Amazon Web Services Management Console, the Amazon Web Services Command Line Interface (Amazon Web Services CLI), the Config API, or the Amazon Web Services SDKs for Config. This reference guide contains documentation for the Config API and the Amazon Web Services CLI commands that you can use to manage Config. The Config API uses the Signature Version 4 protocol for signing requests. For more information about how to sign a request with this protocol, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>. For detailed information about Config features and their associated actions or commands, as well as how to work with Amazon Web Services Management Console, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html">What Is Config</a> in the <i>Config Developer Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: config
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/config-2014-11-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/config/'
servers:
  - url: 'http://config.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Config Service multi-region endpoint
  - url: 'https://config.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Config Service multi-region endpoint
  - url: 'http://config.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Config Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://config.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Config Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=StarlingDoveService.BatchGetAggregateResourceConfig:
    post:
      operationId: BatchGetAggregateResourceConfig
      description: '<p>Returns the current configuration items for resources that are present in your Config aggregator. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty <code>unprocessedResourceIdentifiers</code> list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return tags and relationships.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetAggregateResourceConfigResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetAggregateResourceConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.BatchGetAggregateResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig:
    post:
      operationId: BatchGetResourceConfig
      description: '<p>Returns the <code>BaseConfigurationItem</code> for one or more requested resources. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty unprocessedResourceKeys list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return any tags for the requested resources. This information is filtered out of the supplementaryConfiguration section of the API response.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetResourceConfigResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetResourceConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.BatchGetResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteAggregationAuthorization:
    post:
      operationId: DeleteAggregationAuthorization
      description: Deletes the authorization granted to the specified configuration aggregator account in a specified region.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAggregationAuthorizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteAggregationAuthorization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigRule:
    post:
      operationId: DeleteConfigRule
      description: '<p>Deletes the specified Config rule and all of its evaluation results.</p> <p>Config sets the state of a rule to <code>DELETING</code> until the deletion is complete. You cannot update a rule while it is in this state. If you make a <code>PutConfigRule</code> or <code>DeleteConfigRule</code> request for the rule, you will receive a <code>ResourceInUseException</code>.</p> <p>You can check the state of a rule by using the <code>DescribeConfigRules</code> request.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConfigRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationAggregator:
    post:
      operationId: DeleteConfigurationAggregator
      description: Deletes the specified configuration aggregator and the aggregated data associated with the aggregator.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConfigurationAggregatorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigurationAggregator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationRecorder:
    post:
      operationId: DeleteConfigurationRecorder
      description: '<p>Deletes the configuration recorder.</p> <p>After the configuration recorder is deleted, Config will not record resource configuration changes until you create a new configuration recorder.</p> <p>This action does not delete the configuration information that was previously recorded. You will be able to access the previously recorded information by using the <code>GetResourceConfigHistory</code> action, but you will not be able to access this information in the Config console until you create a new configuration recorder.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConfigurationRecorderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigurationRecorder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteConformancePack:
    post:
      operationId: DeleteConformancePack
      description: '<p>Deletes the specified conformance pack and all the Config rules, remediation actions, and all evaluation results within that conformance pack.</p> <p>Config sets the conformance pack to <code>DELETE_IN_PROGRESS</code> until the deletion is complete. You cannot update a conformance pack while it is in this state.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConformancePackException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConformancePackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConformancePack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteDeliveryChannel:
    post:
      operationId: DeleteDeliveryChannel
      description: '<p>Deletes the delivery channel.</p> <p>Before you can delete the delivery channel, you must stop the configuration recorder by using the <a>StopConfigurationRecorder</a> action.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchDeliveryChannelException'
        '481':
          description: LastDeliveryChannelDeleteFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastDeliveryChannelDeleteFailedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeliveryChannelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteDeliveryChannel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteEvaluationResults:
    post:
      operationId: DeleteEvaluationResults
      description: 'Deletes the evaluation results for the specified Config rule. You can specify one Config rule per request. After you delete the evaluation results, you can call the <a>StartConfigRulesEvaluation</a> API to start evaluating your Amazon Web Services resources against the rule.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEvaluationResultsResponse'
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEvaluationResultsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteEvaluationResults
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteOrganizationConfigRule:
    post:
      operationId: DeleteOrganizationConfigRule
      description: '<p>Deletes the specified organization config rule and all of its evaluation results from all member accounts in that organization. </p> <p>Only a master account and a delegated administrator account can delete an organization config rule. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>Config sets the state of a rule to DELETE_IN_PROGRESS until the deletion is complete. You cannot update a rule while it is in this state.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConfigRuleException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrganizationConfigRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteOrganizationConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteOrganizationConformancePack:
    post:
      operationId: DeleteOrganizationConformancePack
      description: '<p>Deletes the specified organization conformance pack and all of the config rules and remediation actions from all member accounts in that organization. </p> <p> Only a master account or a delegated administrator account can delete an organization conformance pack. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>Config sets the state of a conformance pack to DELETE_IN_PROGRESS until the deletion is complete. You cannot update a conformance pack while it is in this state. </p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchOrganizationConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConformancePackException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrganizationConformancePackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteOrganizationConformancePack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeletePendingAggregationRequest:
    post:
      operationId: DeletePendingAggregationRequest
      description: Deletes pending authorization requests for a specified aggregator account in a specified region.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePendingAggregationRequestRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeletePendingAggregationRequest
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationConfiguration:
    post:
      operationId: DeleteRemediationConfiguration
      description: Deletes the remediation configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRemediationConfigurationResponse'
        '480':
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRemediationConfigurationException'
        '481':
          description: RemediationInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationInProgressException'
        '482':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemediationConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRemediationConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationExceptions:
    post:
      operationId: DeleteRemediationExceptions
      description: <p>Deletes one or more remediation exceptions mentioned in the resource keys.</p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRemediationExceptionsResponse'
        '480':
          description: NoSuchRemediationExceptionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRemediationExceptionException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemediationExceptionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRemediationExceptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteResourceConfig:
    post:
      operationId: DeleteResourceConfig
      description: 'Records the configuration state for a custom resource that has been deleted. This API records a new ConfigurationItem with a ResourceDeleted status. You can retrieve the ConfigurationItems recorded for this resource in your Config History. '
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NoRunningConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoRunningConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteRetentionConfiguration:
    post:
      operationId: DeleteRetentionConfiguration
      description: Deletes the retention configuration.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: NoSuchRetentionConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRetentionConfigurationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRetentionConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRetentionConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeleteStoredQuery:
    post:
      operationId: DeleteStoredQuery
      description: Deletes the stored query for a single Amazon Web Services account and a single Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStoredQueryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStoredQueryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteStoredQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DeliverConfigSnapshot:
    post:
      operationId: DeliverConfigSnapshot
      description: '<p>Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel. After the delivery has started, Config sends the following notifications using an Amazon SNS topic that you have specified.</p> <ul> <li> <p>Notification of the start of the delivery.</p> </li> <li> <p>Notification of the completion of the delivery, if the delivery was successfully completed.</p> </li> <li> <p>Notification of delivery failure, if the delivery failed.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliverConfigSnapshotResponse'
        '480':
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchDeliveryChannelException'
        '481':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
        '482':
          description: NoRunningConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoRunningConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliverConfigSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeliverConfigSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConfigRules:
    post:
      operationId: DescribeAggregateComplianceByConfigRules
      description: '<p>Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules. Does not display rules that do not have compliance results. </p> <note> <p>The results can return an empty result page, but if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAggregateComplianceByConfigRulesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAggregateComplianceByConfigRulesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeAggregateComplianceByConfigRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConformancePacks:
    post:
      operationId: DescribeAggregateComplianceByConformancePacks
      description: '<p>Returns a list of the conformance packs and their associated compliance status with the count of compliant and noncompliant Config rules within each conformance pack. Also returns the total rule count which includes compliant rules, noncompliant rules, and rules that cannot be evaluated due to insufficient data.</p> <note> <p>The results can return an empty result page, but if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAggregateComplianceByConformancePacksResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAggregateComplianceByConformancePacksRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeAggregateComplianceByConformancePacks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeAggregationAuthorizations:
    post:
      operationId: DescribeAggregationAuthorizations
      description: Returns a list of authorizations granted to various aggregator accounts and regions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAggregationAuthorizationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAggregationAuthorizationsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeAggregationAuthorizations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByConfigRule:
    post:
      operationId: DescribeComplianceByConfigRule
      description: '<p>Indicates whether the specified Config rules are compliant. If a rule is noncompliant, this action returns the number of Amazon Web Services resources that do not comply with the rule.</p> <p>A rule is compliant if all of the evaluated resources comply with it. It is noncompliant if any of these resources do not comply.</p> <p>If Config has no current evaluation results for the rule, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions:</p> <ul> <li> <p>Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule''s Lambda function is failing to send evaluation results to Config. Verify that the role you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule''s Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule''s scope.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeComplianceByConfigRuleResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeComplianceByConfigRuleRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeComplianceByConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByResource:
    post:
      operationId: DescribeComplianceByResource
      description: '<p>Indicates whether the specified Amazon Web Services resources are compliant. If a resource is noncompliant, this action returns the number of Config rules that the resource does not comply with.</p> <p>A resource is compliant if it complies with all the Config rules that evaluate it. It is noncompliant if it does not comply with one or more of these rules.</p> <p>If Config has no current evaluation results for the resource, it returns <code>INSUFFICIENT_DATA</code>. This result might indicate one of the following conditions about the rules that evaluate the resource:</p> <ul> <li> <p>Config has never invoked an evaluation for the rule. To check whether it has, use the <code>DescribeConfigRuleEvaluationStatus</code> action to get the <code>LastSuccessfulInvocationTime</code> and <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule''s Lambda function is failing to send evaluation results to Config. Verify that the role that you assigned to your configuration recorder includes the <code>config:PutEvaluations</code> permission. If the rule is a custom rule, verify that the Lambda execution role includes the <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The rule''s Lambda function has returned <code>NOT_APPLICABLE</code> for all evaluation results. This can occur if the resources were deleted or removed from the rule''s scope.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeComplianceByResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeComplianceByResourceRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeComplianceByResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRuleEvaluationStatus:
    post:
      operationId: DescribeConfigRuleEvaluationStatus
      description: 'Returns status information for each of your Config managed rules. The status includes information such as the last time Config invoked the rule, the last time Config failed to invoke the rule, and the related error for the last failure.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigRuleEvaluationStatusResponse'
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigRuleEvaluationStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigRuleEvaluationStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRules:
    post:
      operationId: DescribeConfigRules
      description: Returns details about your Config rules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigRulesResponse'
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigRulesRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus:
    post:
      operationId: DescribeConfigurationAggregatorSourcesStatus
      description: 'Returns status information for sources within an aggregator. The status includes information about the last time Config verified authorization between the source account and an aggregator account. In case of a failure, the status contains the related error code or message. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationAggregatorSourcesStatusResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationAggregatorSourcesStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregators:
    post:
      operationId: DescribeConfigurationAggregators
      description: 'Returns the details of one or more configuration aggregators. If the configuration aggregator is not specified, this action returns the details for all the configuration aggregators associated with the account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationAggregatorsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationAggregatorsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationAggregators
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorderStatus:
    post:
      operationId: DescribeConfigurationRecorderStatus
      description: '<p>Returns the current status of the specified configuration recorder. If a configuration recorder is not specified, this action returns the status of all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationRecorderStatusResponse'
        '480':
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationRecorderStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationRecorderStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorders:
    post:
      operationId: DescribeConfigurationRecorders
      description: '<p>Returns the details for the specified configuration recorders. If the configuration recorder is not specified, this action returns the details for all configuration recorders associated with the account.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConfigurationRecordersResponse'
        '480':
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigurationRecordersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationRecorders
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePackCompliance:
    post:
      operationId: DescribeConformancePackCompliance
      description: <p>Returns compliance details for each rule in that conformance pack.</p> <note> <p>You must provide exact rule names.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConformancePackComplianceResponse'
        '480':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: NoSuchConfigRuleInConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleInConformancePackException'
        '484':
          description: NoSuchConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConformancePackException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConformancePackComplianceRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConformancePackCompliance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePackStatus:
    post:
      operationId: DescribeConformancePackStatus
      description: <p>Provides one or more conformance packs deployment status.</p> <note> <p>If there are no conformance packs then you will see an empty result.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConformancePackStatusResponse'
        '480':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConformancePackStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConformancePackStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeConformancePacks:
    post:
      operationId: DescribeConformancePacks
      description: Returns a list of one or more conformance packs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConformancePacksResponse'
        '480':
          description: NoSuchConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConformancePackException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConformancePacksRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConformancePacks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannelStatus:
    post:
      operationId: DescribeDeliveryChannelStatus
      description: '<p>Returns the current status of the specified delivery channel. If a delivery channel is not specified, this action returns the current status of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeliveryChannelStatusResponse'
        '480':
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchDeliveryChannelException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeliveryChannelStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeDeliveryChannelStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannels:
    post:
      operationId: DescribeDeliveryChannels
      description: '<p>Returns details about the specified delivery channel. If a delivery channel is not specified, this action returns the details of all delivery channels associated with the account.</p> <note> <p>Currently, you can specify only one delivery channel per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeliveryChannelsResponse'
        '480':
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchDeliveryChannelException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeliveryChannelsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeDeliveryChannels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRuleStatuses:
    post:
      operationId: DescribeOrganizationConfigRuleStatuses
      description: '<p>Provides organization config rule deployment status for an organization.</p> <note> <p>The status is not considered successful until organization config rule is successfully deployed in all the member accounts with an exception of excluded accounts.</p> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization config rule names. It is only applicable, when you request all the organization config rules.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationConfigRuleStatusesResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationConfigRuleStatusesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConfigRuleStatuses
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRules:
    post:
      operationId: DescribeOrganizationConfigRules
      description: '<p>Returns a list of organization config rules. </p> <note> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization config rule names. It is only applicable, when you request all the organization config rules.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationConfigRulesResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationConfigRulesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConfigRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePackStatuses:
    post:
      operationId: DescribeOrganizationConformancePackStatuses
      description: '<p>Provides organization conformance pack deployment status for an organization. </p> <note> <p>The status is not considered successful until organization conformance pack is successfully deployed in all the member accounts with an exception of excluded accounts.</p> <p>When you specify the limit and the next token, you receive a paginated response. Limit and next token are not applicable if you specify organization conformance pack names. They are only applicable, when you request all the organization conformance packs.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationConformancePackStatusesResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationConformancePackStatusesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConformancePackStatuses
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConformancePacks:
    post:
      operationId: DescribeOrganizationConformancePacks
      description: '<p>Returns a list of organization conformance packs. </p> <note> <p>When you specify the limit and the next token, you receive a paginated response. </p> <p>Limit and next token are not applicable if you specify organization conformance packs names. They are only applicable, when you request all the organization conformance packs. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationConformancePacksResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationConformancePacksRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConformancePacks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribePendingAggregationRequests:
    post:
      operationId: DescribePendingAggregationRequests
      description: Returns a list of all pending aggregation requests.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePendingAggregationRequestsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePendingAggregationRequestsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribePendingAggregationRequests
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationConfigurations:
    post:
      operationId: DescribeRemediationConfigurations
      description: Returns the details of one or more remediation configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRemediationConfigurationsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRemediationConfigurationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExceptions:
    post:
      operationId: DescribeRemediationExceptions
      description: '<p>Returns the details of one or more remediation exceptions. A detailed view of a remediation exception for a set of resources that includes an explanation of an exception and the time when the exception will be deleted. When you specify the limit and the next token, you receive a paginated response. </p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> <p>When you specify the limit and the next token, you receive a paginated response. </p> <p>Limit and next token are not applicable if you request resources in batch. It is only applicable, when you request all resources.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRemediationExceptionsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRemediationExceptionsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationExceptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExecutionStatus:
    post:
      operationId: DescribeRemediationExecutionStatus
      description: 'Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps for when steps for the remediation execution occur, and any error messages for steps that have failed. When you specify the limit and the next token, you receive a paginated response.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRemediationExecutionStatusResponse'
        '480':
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRemediationConfigurationException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRemediationExecutionStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationExecutionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.DescribeRetentionConfigurations:
    post:
      operationId: DescribeRetentionConfigurations
      description: '<p>Returns the details of one or more retention configurations. If the retention configuration name is not specified, this action returns the details for all the retention configurations for that account.</p> <note> <p>Currently, Config supports only one retention configuration per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRetentionConfigurationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: NoSuchRetentionConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRetentionConfigurationException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRetentionConfigurationsRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRetentionConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetAggregateComplianceDetailsByConfigRule:
    post:
      operationId: GetAggregateComplianceDetailsByConfigRule
      description: '<p>Returns the evaluation results for the specified Config rule for a specific resource in a rule. The results indicate which Amazon Web Services resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule. </p> <note> <p>The results can return an empty result page. But if you have a <code>nextToken</code>, the results are displayed on the next page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregateComplianceDetailsByConfigRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAggregateComplianceDetailsByConfigRuleRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateComplianceDetailsByConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetAggregateConfigRuleComplianceSummary:
    post:
      operationId: GetAggregateConfigRuleComplianceSummary
      description: '<p>Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator.</p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregateConfigRuleComplianceSummaryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAggregateConfigRuleComplianceSummaryRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateConfigRuleComplianceSummary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetAggregateConformancePackComplianceSummary:
    post:
      operationId: GetAggregateConformancePackComplianceSummary
      description: '<p>Returns the count of compliant and noncompliant conformance packs across all Amazon Web Services accounts and Amazon Web Services Regions in an aggregator. You can filter based on Amazon Web Services account ID or Amazon Web Services Region.</p> <note> <p>The results can return an empty result page, but if you have a nextToken, the results are displayed on the next page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregateConformancePackComplianceSummaryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAggregateConformancePackComplianceSummaryRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateConformancePackComplianceSummary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetAggregateDiscoveredResourceCounts:
    post:
      operationId: GetAggregateDiscoveredResourceCounts
      description: '<p>Returns the resource counts across accounts and regions that are present in your Config aggregator. You can request the resource counts by providing filters and GroupByKey.</p> <p>For example, if the input contains accountID 12345678910 and region us-east-1 in filters, the API returns the count of resources in account ID 12345678910 and region us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the API returns resource counts for all source accounts that are present in your aggregator.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregateDiscoveredResourceCountsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAggregateDiscoveredResourceCountsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateDiscoveredResourceCounts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetAggregateResourceConfig:
    post:
      operationId: GetAggregateResourceConfig
      description: Returns configuration item that is aggregated for your specific resource in a specific source account and region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregateResourceConfigResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
        '482':
          description: OversizedConfigurationItemException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OversizedConfigurationItemException'
        '483':
          description: ResourceNotDiscoveredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotDiscoveredException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAggregateResourceConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByConfigRule:
    post:
      operationId: GetComplianceDetailsByConfigRule
      description: 'Returns the evaluation results for the specified Config rule. The results indicate which Amazon Web Services resources were evaluated by the rule, when each resource was last evaluated, and whether each resource complies with the rule.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceDetailsByConfigRuleResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplianceDetailsByConfigRuleRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceDetailsByConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByResource:
    post:
      operationId: GetComplianceDetailsByResource
      description: 'Returns the evaluation results for the specified Amazon Web Services resource. The results indicate which Config rules were used to evaluate the resource, when each rule was last used, and whether the resource complies with each rule.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceDetailsByResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplianceDetailsByResourceRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceDetailsByResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByConfigRule:
    post:
      operationId: GetComplianceSummaryByConfigRule
      description: 'Returns the number of Config rules that are compliant and noncompliant, up to a maximum of 25 for each.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceSummaryByConfigRuleResponse'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceSummaryByConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByResourceType:
    post:
      operationId: GetComplianceSummaryByResourceType
      description: Returns the number of resources that are compliant and the number that are noncompliant. You can specify one or more resource types to get these numbers for each resource type. The maximum number returned is 100.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceSummaryByResourceTypeResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplianceSummaryByResourceTypeRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceSummaryByResourceType
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceDetails:
    post:
      operationId: GetConformancePackComplianceDetails
      description: Returns compliance details of a conformance pack for all Amazon Web Services resources that are monitered by conformance pack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConformancePackComplianceDetailsResponse'
        '480':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: NoSuchConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConformancePackException'
        '483':
          description: NoSuchConfigRuleInConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleInConformancePackException'
        '484':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConformancePackComplianceDetailsRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetConformancePackComplianceDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetConformancePackComplianceSummary:
    post:
      operationId: GetConformancePackComplianceSummary
      description: Returns compliance details for the conformance pack based on the cumulative compliance results of all the rules in that conformance pack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConformancePackComplianceSummaryResponse'
        '480':
          description: NoSuchConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConformancePackException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConformancePackComplianceSummaryRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetConformancePackComplianceSummary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetDiscoveredResourceCounts:
    post:
      operationId: GetDiscoveredResourceCounts
      description: '<p>Returns the resource types, the number of each resource type, and the total number of resources that Config is recording in this region for your Amazon Web Services account. </p> <p class="title"> <b>Example</b> </p> <ol> <li> <p>Config is recording three resource types in the US East (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3 buckets.</p> </li> <li> <p>You make a call to the <code>GetDiscoveredResourceCounts</code> action and specify that you want all resource types. </p> </li> <li> <p>Config returns the following:</p> <ul> <li> <p>The resource types (EC2 instances, IAM users, and S3 buckets).</p> </li> <li> <p>The number of each resource type (25, 20, and 15).</p> </li> <li> <p>The total number of all resources (60).</p> </li> </ul> </li> </ol> <p>The response is paginated. By default, Config lists 100 <a>ResourceCount</a> objects on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>If you make a call to the <a>GetDiscoveredResourceCounts</a> action, you might not immediately receive resource counts in the following situations:</p> <ul> <li> <p>You are a new Config customer.</p> </li> <li> <p>You just enabled resource recording.</p> </li> </ul> <p>It might take a few minutes for Config to record and count your resources. Wait a few minutes and then retry the <a>GetDiscoveredResourceCounts</a> action. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredResourceCountsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDiscoveredResourceCountsRequest'
      parameters:
        - name: limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetDiscoveredResourceCounts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetOrganizationConfigRuleDetailedStatus:
    post:
      operationId: GetOrganizationConfigRuleDetailedStatus
      description: Returns detailed status for each member account within an organization for a given organization config rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationConfigRuleDetailedStatusResponse'
        '480':
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConfigRuleException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrganizationConfigRuleDetailedStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetOrganizationConfigRuleDetailedStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetOrganizationConformancePackDetailedStatus:
    post:
      operationId: GetOrganizationConformancePackDetailedStatus
      description: Returns detailed status for each member account within an organization for a given organization conformance pack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationConformancePackDetailedStatusResponse'
        '480':
          description: NoSuchOrganizationConformancePackException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchOrganizationConformancePackException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrganizationConformancePackDetailedStatusRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetOrganizationConformancePackDetailedStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetResourceConfigHistory:
    post:
      operationId: GetResourceConfigHistory
      description: '<p>Returns a list of <code>ConfigurationItems</code> for the specified resource. The list contains details about each state of the resource during the specified time interval. If you specified a retention period to retain your <code>ConfigurationItems</code> between a minimum of 30 days and a maximum of 7 years (2557 days), Config returns the <code>ConfigurationItems</code> for the specified retention period. </p> <p>The response is paginated. By default, Config returns a limit of 10 configuration items per page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p> <note> <p>Each call to the API is limited to span a duration of seven days. It is likely that the number of records returned is smaller than the specified <code>limit</code>. In such cases, you can make another call, using the <code>nextToken</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceConfigHistoryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidTimeRangeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTimeRangeException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
        '485':
          description: ResourceNotDiscoveredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotDiscoveredException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourceConfigHistoryRequest'
      parameters:
        - name: limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetResourceConfigHistory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.GetStoredQuery:
    post:
      operationId: GetStoredQuery
      description: Returns the details of a specific stored query.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoredQueryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStoredQueryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetStoredQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.ListAggregateDiscoveredResources:
    post:
      operationId: ListAggregateDiscoveredResources
      description: '<p>Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions. A resource identifier includes the resource type, ID, (if available) the custom resource name, source account, and source region. You can narrow the results to include only resources that have specific resource IDs, or a resource name, or source account ID, or source region.</p> <p>For example, if the input consists of accountID 12345678910 and the region is us-east-1 for resource type <code>AWS::EC2::Instance</code> then the API returns all the EC2 instance identifiers of accountID 12345678910 and region us-east-1.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAggregateDiscoveredResourcesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAggregateDiscoveredResourcesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListAggregateDiscoveredResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.ListDiscoveredResources:
    post:
      operationId: ListDiscoveredResources
      description: '<p>Accepts a resource type and returns a list of resource identifiers for the resources of that type. A resource identifier includes the resource type, ID, and (if available) the custom resource name. The results consist of resources that Config has discovered, including those that Config is not currently recording. You can narrow the results to include only resources that have specific resource IDs or a resource name.</p> <note> <p>You can specify either resource IDs or a resource name, but not both, in the same request.</p> </note> <p>The response is paginated. By default, Config lists 100 resource identifiers on each page. You can customize this number with the <code>limit</code> parameter. The response includes a <code>nextToken</code> string. To get the next page of results, run the request again and specify the string for the <code>nextToken</code> parameter.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiscoveredResourcesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDiscoveredResourcesRequest'
      parameters:
        - name: limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListDiscoveredResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.ListStoredQueries:
    post:
      operationId: ListStoredQueries
      description: 'Lists the stored queries for a single Amazon Web Services account and a single Amazon Web Services Region. The default is 100. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStoredQueriesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStoredQueriesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListStoredQueries
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: List the tags for Config resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutAggregationAuthorization:
    post:
      operationId: PutAggregationAuthorization
      description: 'Authorizes the aggregator account and region to collect data from the source account and region. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAggregationAuthorizationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAggregationAuthorizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutAggregationAuthorization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutConfigRule:
    post:
      operationId: PutConfigRule
      description: '<p>Adds or updates an Config rule for evaluating whether your Amazon Web Services resources comply with your desired configurations.</p> <p>You can use this action for custom Config rules and Config managed rules. A custom Config rule is a rule that you develop and maintain. An Config managed rule is a customizable, predefined rule that Config provides.</p> <p>If you are adding a new custom Config rule, you must first create the Lambda function that the rule invokes to evaluate your resources. When you use the <code>PutConfigRule</code> action to add the rule to Config, you must specify the Amazon Resource Name (ARN) that Lambda assigns to the function. Specify the ARN for the <code>SourceIdentifier</code> key. This key is part of the <code>Source</code> object, which is part of the <code>ConfigRule</code> object. </p> <p>If you are adding an Config managed rule, specify the rule''s identifier for the <code>SourceIdentifier</code> key. To reference Config managed rule identifiers, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">About Config managed rules</a>.</p> <p>For any new rule that you add, specify the <code>ConfigRuleName</code> in the <code>ConfigRule</code> object. Do not specify the <code>ConfigRuleArn</code> or the <code>ConfigRuleId</code>. These values are generated by Config for new rules.</p> <p>If you are updating a rule that you added previously, you can specify the rule by <code>ConfigRuleName</code>, <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the <code>ConfigRule</code> data type that you use in this request.</p> <p>The maximum number of rules that Config supports is 150.</p> <p>For information about requesting a rule limit increase, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config">Config Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.</p> <p>For more information about developing and using Config rules, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating Amazon Web Services resource Configurations with Config</a> in the <i>Config Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MaxNumberOfConfigRulesExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfConfigRulesExceededException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '484':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutConfigurationAggregator:
    post:
      operationId: PutConfigurationAggregator
      description: '<p>Creates and updates the configuration aggregator with the selected source accounts and regions. The source account can be individual account(s) or an organization.</p> <p> <code>accountIds</code> that are passed will be replaced with existing accounts. If you want to add additional accounts into the aggregator, call <code>DescribeAggregator</code> to get the previous accounts and then append new ones.</p> <note> <p>Config should be enabled in source accounts and regions you want to aggregate.</p> <p>If your source type is an organization, you must be signed in to the management account or a registered delegated administrator and all the features must be enabled in your organization. If the caller is a management account, Config calls <code>EnableAwsServiceAccess</code> API to enable integration between Config and Organizations. If the caller is a registered delegated administrator, Config calls <code>ListDelegatedAdministrators</code> API to verify whether the caller is a valid delegated administrator.</p> <p>To register a delegated administrator, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/set-up-aggregator-cli.html#register-a-delegated-administrator-cli">Register a Delegated Administrator</a> in the Config developer guide. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationAggregatorResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
        '484':
          description: NoAvailableOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableOrganizationException'
        '485':
          description: OrganizationAllFeaturesNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAllFeaturesNotEnabledException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationAggregatorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigurationAggregator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder:
    post:
      operationId: PutConfigurationRecorder
      description: '<p>Creates a new configuration recorder to record the selected resource configurations.</p> <p>You can use this action to change the role <code>roleARN</code> or the <code>recordingGroup</code> of an existing recorder. To change the role, call the action on the existing configuration recorder and specify a role.</p> <note> <p>Currently, you can specify only one configuration recorder per region in your account.</p> <p>If <code>ConfigurationRecorder</code> does not have the <b>recordingGroup</b> parameter specified, the default is to record all supported resource types.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: MaxNumberOfConfigurationRecordersExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfConfigurationRecordersExceededException'
        '481':
          description: InvalidConfigurationRecorderNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidConfigurationRecorderNameException'
        '482':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '483':
          description: InvalidRecordingGroupException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRecordingGroupException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationRecorderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigurationRecorder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutConformancePack:
    post:
      operationId: PutConformancePack
      description: '<p>Creates or updates a conformance pack. A conformance pack is a collection of Config rules that can be easily deployed in an account and a region and across Amazon Web Services Organization.</p> <p>This API creates a service linked role <code>AWSServiceRoleForConfigConforms</code> in your account. The service linked role is created only when the role does not exist in your account. </p> <note> <p>You must specify either the <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter, but not both. If you provide both Config uses the <code>TemplateS3Uri</code> parameter and ignores the <code>TemplateBody</code> parameter.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConformancePackResponse'
        '480':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '481':
          description: ConformancePackTemplateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConformancePackTemplateValidationException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: MaxNumberOfConformancePacksExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfConformancePacksExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConformancePackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConformancePack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutDeliveryChannel:
    post:
      operationId: PutDeliveryChannel
      description: '<p>Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic.</p> <p>Before you can create a delivery channel, you must create a configuration recorder.</p> <p>You can use this action to change the Amazon S3 bucket or an Amazon SNS topic of the existing delivery channel. To change the Amazon S3 bucket or an Amazon SNS topic, call this action and specify the changed values for the S3 bucket and the SNS topic. If you specify a different value for either the S3 bucket or the SNS topic, this action will keep the existing value for the parameter that is not changed.</p> <note> <p>You can have only one delivery channel per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: MaxNumberOfDeliveryChannelsExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfDeliveryChannelsExceededException'
        '481':
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableConfigurationRecorderException'
        '482':
          description: InvalidDeliveryChannelNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDeliveryChannelNameException'
        '483':
          description: NoSuchBucketException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchBucketException'
        '484':
          description: InvalidS3KeyPrefixException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3KeyPrefixException'
        '485':
          description: InvalidS3KmsKeyArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3KmsKeyArnException'
        '486':
          description: InvalidSNSTopicARNException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSNSTopicARNException'
        '487':
          description: InsufficientDeliveryPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDeliveryPolicyException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDeliveryChannelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutDeliveryChannel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutEvaluations:
    post:
      operationId: PutEvaluations
      description: Used by an Lambda function to deliver evaluation results to Config. This action is required in every Lambda function that is invoked by an Config rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEvaluationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidResultTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResultTokenException'
        '482':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEvaluationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutEvaluations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutExternalEvaluation:
    post:
      operationId: PutExternalEvaluation
      description: Add or updates the evaluations for process checks. This API checks if the rule is a process check when the name of the Config rule is provided.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutExternalEvaluationResponse'
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalEvaluationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutExternalEvaluation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule:
    post:
      operationId: PutOrganizationConfigRule
      description: '<p>Adds or updates organization config rule for your entire organization evaluating whether your Amazon Web Services resources comply with your desired configurations.</p> <p> Only a master account and a delegated administrator can create or update an organization config rule. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added. </p> <p>This API enables organization service access through the <code>EnableAWSServiceAccess</code> action and creates a service linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master or delegated administrator account of your organization. The service linked role is created only when the role does not exist in the caller account. Config verifies the existence of role with <code>GetRole</code> action.</p> <p>To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegated-administrator</code> for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p>You can use this action to create both custom Config rules and Config managed rules. If you are adding a new custom Config rule, you must first create Lambda function in the master account or a delegated administrator that the rule invokes to evaluate your resources. You also need to create an IAM role in the managed-account that can be assumed by the Lambda function. When you use the <code>PutOrganizationConfigRule</code> action to add the rule to Config, you must specify the Amazon Resource Name (ARN) that Lambda assigns to the function. If you are adding an Config managed rule, specify the rule''s identifier for the <code>RuleIdentifier</code> key.</p> <p>The maximum number of organization config rules that Config supports is 150 and 3 delegated administrator per organization. </p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>Specify either <code>OrganizationCustomRuleMetadata</code> or <code>OrganizationManagedRuleMetadata</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOrganizationConfigRuleResponse'
        '480':
          description: MaxNumberOfOrganizationConfigRulesExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfOrganizationConfigRulesExceededException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
        '485':
          description: NoAvailableOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableOrganizationException'
        '486':
          description: OrganizationAllFeaturesNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAllFeaturesNotEnabledException'
        '487':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOrganizationConfigRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutOrganizationConfigRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutOrganizationConformancePack:
    post:
      operationId: PutOrganizationConformancePack
      description: '<p>Deploys conformance packs across member accounts in an Amazon Web Services Organization.</p> <p>Only a master account and a delegated administrator can call this API. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added.</p> <p>This API enables organization service access for <code>config-multiaccountsetup.amazonaws.com</code> through the <code>EnableAWSServiceAccess</code> action and creates a service linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master or delegated administrator account of your organization. The service linked role is created only when the role does not exist in the caller account. To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegate-admin</code> for <code>config-multiaccountsetup.amazonaws.com</code>.</p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>You must specify either the <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter, but not both. If you provide both Config uses the <code>TemplateS3Uri</code> parameter and ignores the <code>TemplateBody</code> parameter.</p> <p>Config sets the state of a conformance pack to CREATE_IN_PROGRESS and UPDATE_IN_PROGRESS until the conformance pack is created or updated. You cannot update a conformance pack while it is in this state.</p> <p>You can create 50 conformance packs with 25 Config rules in each pack and 3 delegated administrator per organization. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOrganizationConformancePackResponse'
        '480':
          description: MaxNumberOfOrganizationConformancePacksExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfOrganizationConformancePacksExceededException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessDeniedException'
        '484':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '485':
          description: OrganizationConformancePackTemplateValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConformancePackTemplateValidationException'
        '486':
          description: OrganizationAllFeaturesNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAllFeaturesNotEnabledException'
        '487':
          description: NoAvailableOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableOrganizationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOrganizationConformancePackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutOrganizationConformancePack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations:
    post:
      operationId: PutRemediationConfigurations
      description: '<p>Adds or updates the remediation configuration with a specific Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the Config rule. The Config rule must already exist for you to add a remediation configuration. The target (SSM document) must exist and have permissions to use the target. </p> <note> <p>If you make backward incompatible changes to the SSM document, you must call this again to ensure the remediations can run.</p> <p>This API does not support adding remediation configurations for service-linked Config Rules such as Organization Config rules, the rules deployed by conformance packs, and rules deployed by Amazon Web Services Security Hub.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRemediationConfigurationsResponse'
        '480':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRemediationConfigurationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRemediationConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutRemediationExceptions:
    post:
      operationId: PutRemediationExceptions
      description: <p>A remediation exception is when a specific resource is no longer considered for auto-remediation. This API adds a new exception or updates an existing exception for a specific resource with a specific Config rule. </p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRemediationExceptionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRemediationExceptionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRemediationExceptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutResourceConfig:
    post:
      operationId: PutResourceConfig
      description: '<p>Records the configuration state for the resource provided in the request. The configuration state of a resource is represented in Config as Configuration Items. Once this API records the configuration item, you can retrieve the list of configuration items for the custom resource type using existing Config APIs. </p> <note> <p>The custom resource type must be registered with CloudFormation. This API accepts the configuration item registered with CloudFormation.</p> <p>When you call this API, Config only stores configuration state of the resource provided in the request. This API does not change or remediate the configuration of the resource. </p> <p>Write-only schema properites are not recorded as part of the published configuration item.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '482':
          description: NoRunningConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoRunningConfigurationRecorderException'
        '483':
          description: MaxActiveResourcesExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxActiveResourcesExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutRetentionConfiguration:
    post:
      operationId: PutRetentionConfiguration
      description: '<p>Creates and updates the retention configuration with details about retention period (number of days) that Config stores your historical information. The API creates the <code>RetentionConfiguration</code> object and names the object as <b>default</b>. When you have a <code>RetentionConfiguration</code> object named <b>default</b>, calling the API modifies the default object. </p> <note> <p>Currently, Config supports only one retention configuration per region in your account.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRetentionConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MaxNumberOfRetentionConfigurationsExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxNumberOfRetentionConfigurationsExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRetentionConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRetentionConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.PutStoredQuery:
    post:
      operationId: PutStoredQuery
      description: Saves a new query or updates an existing saved query. The <code>QueryName</code> must be unique for a single Amazon Web Services account and a single Amazon Web Services Region. You can create upto 300 queries in a single Amazon Web Services account and a single Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStoredQueryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '482':
          description: ResourceConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStoredQueryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutStoredQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.SelectAggregateResourceConfig:
    post:
      operationId: SelectAggregateResourceConfig
      description: '<p>Accepts a structured query language (SQL) SELECT command and an aggregator to query configuration state of Amazon Web Services resources across multiple accounts and regions, performs the corresponding search, and returns resource configurations matching the properties.</p> <p>For more information about query components, see the <a href="https://docs.aws.amazon.com/config/latest/developerguide/query-components.html"> <b>Query Components</b> </a> section in the Config Developer Guide.</p> <note> <p>If you run an aggregation query (i.e., using <code>GROUP BY</code> or using aggregate functions such as <code>COUNT</code>; e.g., <code>SELECT resourceId, COUNT(*) WHERE resourceType = ''AWS::IAM::Role'' GROUP BY resourceId</code>) and do not specify the <code>MaxResults</code> or the <code>Limit</code> query parameters, the default page size is set to 500.</p> <p>If you run a non-aggregation query (i.e., not using <code>GROUP BY</code> or aggregate function; e.g., <code>SELECT * WHERE resourceType = ''AWS::IAM::Role''</code>) and do not specify the <code>MaxResults</code> or the <code>Limit</code> query parameters, the default page size is set to 25.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectAggregateResourceConfigResponse'
        '480':
          description: InvalidExpressionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidExpressionException'
        '481':
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationAggregatorException'
        '482':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectAggregateResourceConfigRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.SelectAggregateResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.SelectResourceConfig:
    post:
      operationId: SelectResourceConfig
      description: '<p>Accepts a structured query language (SQL) <code>SELECT</code> command, performs the corresponding search, and returns resource configurations matching the properties.</p> <p>For more information about query components, see the <a href="https://docs.aws.amazon.com/config/latest/developerguide/query-components.html"> <b>Query Components</b> </a> section in the Config Developer Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectResourceConfigResponse'
        '480':
          description: InvalidExpressionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidExpressionException'
        '481':
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLimitException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectResourceConfigRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.SelectResourceConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.StartConfigRulesEvaluation:
    post:
      operationId: StartConfigRulesEvaluation
      description: '<p>Runs an on-demand evaluation for the specified Config rules against the last known configuration state of the resources. Use <code>StartConfigRulesEvaluation</code> when you want to test that a rule you updated is working as expected. <code>StartConfigRulesEvaluation</code> does not re-record the latest configuration state for your resources. It re-runs an evaluation against the last known state of your resources. </p> <p>You can specify up to 25 Config rules per request. </p> <p>An existing <code>StartConfigRulesEvaluation</code> call for the specified rules must complete before you can call the API again. If you chose to have Config stream to an Amazon SNS topic, you will receive a <code>ConfigRuleEvaluationStarted</code> notification when the evaluation starts.</p> <note> <p>You don''t need to call the <code>StartConfigRulesEvaluation</code> API to run an evaluation for a new rule. When you create a rule, Config evaluates your resources against the rule automatically. </p> </note> <p>The <code>StartConfigRulesEvaluation</code> API is useful if you want to run on-demand evaluations, such as the following example:</p> <ol> <li> <p>You have a custom rule that evaluates your IAM resources every 24 hours.</p> </li> <li> <p>You update your Lambda function to add additional conditions to your rule.</p> </li> <li> <p>Instead of waiting for the next periodic evaluation, you call the <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>Config invokes your Lambda function and evaluates your IAM resources.</p> </li> <li> <p>Your custom rule will still run periodic evaluations every 24 hours.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartConfigRulesEvaluationResponse'
        '480':
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigRuleException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartConfigRulesEvaluationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartConfigRulesEvaluation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.StartConfigurationRecorder:
    post:
      operationId: StartConfigurationRecorder
      description: <p>Starts recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account.</p> <p>You must have created at least one delivery channel to successfully start the configuration recorder.</p>
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationRecorderException'
        '481':
          description: NoAvailableDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableDeliveryChannelException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartConfigurationRecorderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartConfigurationRecorder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.StartRemediationExecution:
    post:
      operationId: StartRemediationExecution
      description: <p>Runs an on-demand remediation for the specified Config rules against the last known remediation configuration. It runs an execution against the current state of your resources. Remediation execution is asynchronous.</p> <p>You can specify up to 100 resource keys per request. An existing StartRemediationExecution call for the specified resource keys must complete before you can call the API again.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRemediationExecutionResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '482':
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchRemediationConfigurationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRemediationExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartRemediationExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.StopConfigurationRecorder:
    post:
      operationId: StopConfigurationRecorder
      description: Stops recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchConfigurationRecorderException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopConfigurationRecorderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StopConfigurationRecorder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.TagResource:
    post:
      operationId: TagResource
      description: 'Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=StarlingDoveService.UntagResource:
    post:
      operationId: UntagResource
      description: Deletes specified tags from a resource.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchGetAggregateResourceConfigResponse:
      type: object
      properties:
        BaseConfigurationItems:
          allOf:
            - $ref: '#/components/schemas/BaseConfigurationItems'
            - description: A list that contains the current configuration of one or more resources.
        UnprocessedResourceIdentifiers:
          allOf:
            - $ref: '#/components/schemas/UnprocessedResourceIdentifierList'
            - description: A list of resource identifiers that were not processed with current scope. The list is empty if all the resources are processed.
    BatchGetAggregateResourceConfigRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceIdentifiers
      title: BatchGetAggregateResourceConfigRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        ResourceIdentifiers:
          allOf:
            - $ref: '#/components/schemas/ResourceIdentifiersList'
            - description: 'A list of aggregate ResourceIdentifiers objects. '
    ValidationException: {}
    NoSuchConfigurationAggregatorException: {}
    BatchGetResourceConfigResponse:
      type: object
      properties:
        baseConfigurationItems:
          allOf:
            - $ref: '#/components/schemas/BaseConfigurationItems'
            - description: A list that contains the current configuration of one or more resources.
        unprocessedResourceKeys:
          allOf:
            - $ref: '#/components/schemas/ResourceKeys'
            - description: 'A list of resource keys that were not processed with the current response. The unprocessesResourceKeys value is in the same form as ResourceKeys, so the value can be directly provided to a subsequent BatchGetResourceConfig operation. If there are no unprocessed resource keys, the response contains an empty unprocessedResourceKeys list. '
    BatchGetResourceConfigRequest:
      type: object
      required:
        - resourceKeys
      title: BatchGetResourceConfigRequest
      properties:
        resourceKeys:
          allOf:
            - $ref: '#/components/schemas/ResourceKeys'
            - description: A list of resource keys to be processed with the current request. Each element in the list consists of the resource type and resource ID.
    NoAvailableConfigurationRecorderException: {}
    DeleteAggregationAuthorizationRequest:
      type: object
      required:
        - AuthorizedAccountId
        - AuthorizedAwsRegion
      title: DeleteAggregationAuthorizationRequest
      properties:
        AuthorizedAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the account authorized to aggregate data.
        AuthorizedAwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region authorized to collect aggregated data.
    InvalidParameterValueException: {}
    DeleteConfigRuleRequest:
      type: object
      required:
        - ConfigRuleName
      title: DeleteConfigRuleRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule that you want to delete.
      description: <p/>
    NoSuchConfigRuleException: {}
    ResourceInUseException: {}
    DeleteConfigurationAggregatorRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: DeleteConfigurationAggregatorRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
    DeleteConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      title: DeleteConfigurationRecorderRequest
      properties:
        ConfigurationRecorderName:
          allOf:
            - $ref: '#/components/schemas/RecorderName'
            - description: The name of the configuration recorder to be deleted. You can retrieve the name of your configuration recorder by using the <code>DescribeConfigurationRecorders</code> action.
      description: The request object for the <code>DeleteConfigurationRecorder</code> action.
    NoSuchConfigurationRecorderException: {}
    DeleteConformancePackRequest:
      type: object
      required:
        - ConformancePackName
      title: DeleteConformancePackRequest
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack you want to delete.
    NoSuchConformancePackException: {}
    DeleteDeliveryChannelRequest:
      type: object
      required:
        - DeliveryChannelName
      title: DeleteDeliveryChannelRequest
      properties:
        DeliveryChannelName:
          allOf:
            - $ref: '#/components/schemas/ChannelName'
            - description: The name of the delivery channel to delete.
      description: 'The input for the <a>DeleteDeliveryChannel</a> action. The action accepts the following data, in JSON format. '
    NoSuchDeliveryChannelException: {}
    LastDeliveryChannelDeleteFailedException: {}
    DeleteEvaluationResultsResponse:
      type: object
      properties: {}
      description: The output when you delete the evaluation results for the specified Config rule.
    DeleteEvaluationResultsRequest:
      type: object
      required:
        - ConfigRuleName
      title: DeleteEvaluationResultsRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit64'
            - description: The name of the Config rule for which you want to delete the evaluation results.
      description: <p/>
    DeleteOrganizationConfigRuleRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      title: DeleteOrganizationConfigRuleRequest
      properties:
        OrganizationConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleName'
            - description: The name of organization config rule that you want to delete.
    NoSuchOrganizationConfigRuleException: {}
    OrganizationAccessDeniedException: {}
    DeleteOrganizationConformancePackRequest:
      type: object
      required:
        - OrganizationConformancePackName
      title: DeleteOrganizationConformancePackRequest
      properties:
        OrganizationConformancePackName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackName'
            - description: The name of organization conformance pack that you want to delete.
    NoSuchOrganizationConformancePackException: {}
    DeletePendingAggregationRequestRequest:
      type: object
      required:
        - RequesterAccountId
        - RequesterAwsRegion
      title: DeletePendingAggregationRequestRequest
      properties:
        RequesterAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the account requesting to aggregate data.
        RequesterAwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region requesting to aggregate data.
    DeleteRemediationConfigurationResponse:
      type: object
      properties: {}
    DeleteRemediationConfigurationRequest:
      type: object
      required:
        - ConfigRuleName
      title: DeleteRemediationConfigurationRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule for which you want to delete remediation configuration.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of a resource.
    NoSuchRemediationConfigurationException: {}
    RemediationInProgressException: {}
    InsufficientPermissionsException: {}
    DeleteRemediationExceptionsResponse:
      type: object
      properties:
        FailedBatches:
          allOf:
            - $ref: '#/components/schemas/FailedDeleteRemediationExceptionsBatches'
            - description: Returns a list of failed delete remediation exceptions batch objects. Each object in the batch consists of a list of failed items and failure messages.
    DeleteRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      title: DeleteRemediationExceptionsRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule for which you want to delete remediation exception configuration.
        ResourceKeys:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptionResourceKeys'
            - description: 'An exception list of resource exception keys to be processed with the current request. Config adds exception for each resource key. For example, Config adds 3 exceptions for 3 resource keys. '
    NoSuchRemediationExceptionException: {}
    DeleteResourceConfigRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
      title: DeleteResourceConfigRequest
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceTypeString'
            - description: The type of the resource.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: Unique identifier of the resource.
    NoRunningConfigurationRecorderException: {}
    DeleteRetentionConfigurationRequest:
      type: object
      required:
        - RetentionConfigurationName
      title: DeleteRetentionConfigurationRequest
      properties:
        RetentionConfigurationName:
          allOf:
            - $ref: '#/components/schemas/RetentionConfigurationName'
            - description: The name of the retention configuration to delete.
    NoSuchRetentionConfigurationException: {}
    DeleteStoredQueryResponse:
      type: object
      properties: {}
    DeleteStoredQueryRequest:
      type: object
      required:
        - QueryName
      title: DeleteStoredQueryRequest
      properties:
        QueryName:
          allOf:
            - $ref: '#/components/schemas/QueryName'
            - description: The name of the query that you want to delete.
    ResourceNotFoundException: {}
    DeliverConfigSnapshotResponse:
      type: object
      properties:
        configSnapshotId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the snapshot that is being created.
      description: 'The output for the <a>DeliverConfigSnapshot</a> action, in JSON format.'
    DeliverConfigSnapshotRequest:
      type: object
      required:
        - deliveryChannelName
      title: DeliverConfigSnapshotRequest
      properties:
        deliveryChannelName:
          allOf:
            - $ref: '#/components/schemas/ChannelName'
            - description: The name of the delivery channel through which the snapshot is delivered.
      description: The input for the <a>DeliverConfigSnapshot</a> action.
    DescribeAggregateComplianceByConfigRulesResponse:
      type: object
      properties:
        AggregateComplianceByConfigRules:
          allOf:
            - $ref: '#/components/schemas/AggregateComplianceByConfigRuleList'
            - description: Returns a list of AggregateComplianceByConfigRule object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeAggregateComplianceByConfigRulesRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: DescribeAggregateComplianceByConfigRulesRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleComplianceFilters'
            - description: 'Filters the results by ConfigRuleComplianceFilters object. '
        Limit:
          allOf:
            - $ref: '#/components/schemas/GroupByAPILimit'
            - description: 'The maximum number of evaluation results returned on each page. The default is maximum. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    InvalidLimitException: {}
    InvalidNextTokenException: {}
    DescribeAggregateComplianceByConformancePacksResponse:
      type: object
      properties:
        AggregateComplianceByConformancePacks:
          allOf:
            - $ref: '#/components/schemas/AggregateComplianceByConformancePackList'
            - description: Returns the <code>AggregateComplianceByConformancePack</code> object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeAggregateComplianceByConformancePacksRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: DescribeAggregateComplianceByConformancePacksRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Filters:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackComplianceFilters'
            - description: Filters the result by <code>AggregateConformancePackComplianceFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of conformance packs compliance details returned on each page. The default is maximum. If you specify 0, Config uses the default. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeAggregationAuthorizationsResponse:
      type: object
      properties:
        AggregationAuthorizations:
          allOf:
            - $ref: '#/components/schemas/AggregationAuthorizationList'
            - description: Returns a list of authorizations granted to various aggregator accounts and regions.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeAggregationAuthorizationsRequest:
      type: object
      title: DescribeAggregationAuthorizationsRequest
      properties:
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of AggregationAuthorizations returned on each page. The default is maximum. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeComplianceByConfigRuleResponse:
      type: object
      properties:
        ComplianceByConfigRules:
          allOf:
            - $ref: '#/components/schemas/ComplianceByConfigRules'
            - description: Indicates whether each of the specified Config rules is compliant.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    DescribeComplianceByConfigRuleRequest:
      type: object
      title: DescribeComplianceByConfigRuleRequest
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleNames'
            - description: Specify one or more Config rule names to filter the results by rule.
        ComplianceTypes:
          allOf:
            - $ref: '#/components/schemas/ComplianceTypes'
            - description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>.</p>
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    DescribeComplianceByResourceResponse:
      type: object
      properties:
        ComplianceByResources:
          allOf:
            - $ref: '#/components/schemas/ComplianceByResources'
            - description: Indicates whether the specified Amazon Web Services resource complies with all of the Config rules that evaluate it.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    DescribeComplianceByResourceRequest:
      type: object
      title: DescribeComplianceByResourceRequest
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The types of Amazon Web Services resources for which you want compliance information (for example, <code>AWS::EC2::Instance</code>). For this action, you can specify that the resource type is an Amazon Web Services account by specifying <code>AWS::::Account</code>.'
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: 'The ID of the Amazon Web Services resource for which you want compliance information. You can specify only one resource ID. If you specify a resource ID, you must also specify a type for <code>ResourceType</code>.'
        ComplianceTypes:
          allOf:
            - $ref: '#/components/schemas/ComplianceTypes'
            - description: '<p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code>.</p>'
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of evaluation results returned on each page. The default is 10. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    DescribeConfigRuleEvaluationStatusResponse:
      type: object
      properties:
        ConfigRulesEvaluationStatus:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleEvaluationStatusList'
            - description: Status information about your Config managed rules.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    DescribeConfigRuleEvaluationStatusRequest:
      type: object
      title: DescribeConfigRuleEvaluationStatusRequest
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleNames'
            - description: 'The name of the Config managed rules for which you want status information. If you do not specify any names, Config returns status information for all Config managed rules that you use.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
        Limit:
          allOf:
            - $ref: '#/components/schemas/RuleLimit'
            - description: '<p>The number of rule evaluation results that you want returned.</p> <p>This parameter is required if the rule limit for your account is more than the default of 150 rules.</p> <p>For information about requesting a rule limit increase, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config">Config Limits</a> in the <i>Amazon Web Services General Reference Guide</i>.</p>'
      description: <p/>
    DescribeConfigRulesResponse:
      type: object
      properties:
        ConfigRules:
          allOf:
            - $ref: '#/components/schemas/ConfigRules'
            - description: The details about your Config rules.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    DescribeConfigRulesRequest:
      type: object
      title: DescribeConfigRulesRequest
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleNames'
            - description: 'The names of the Config rules for which you want details. If you do not specify any names, Config returns details for all your rules.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    DescribeConfigurationAggregatorSourcesStatusResponse:
      type: object
      properties:
        AggregatedSourceStatusList:
          allOf:
            - $ref: '#/components/schemas/AggregatedSourceStatusList'
            - description: 'Returns an AggregatedSourceStatus object. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeConfigurationAggregatorSourcesStatusRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: DescribeConfigurationAggregatorSourcesStatusRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        UpdateStatus:
          allOf:
            - $ref: '#/components/schemas/AggregatedSourceStatusTypeList'
            - description: <p>Filters the status type.</p> <ul> <li> <p>Valid value FAILED indicates errors while moving data.</p> </li> <li> <p>Valid value SUCCEEDED indicates the data was successfully moved.</p> </li> <li> <p>Valid value OUTDATED indicates the data is not the most recent.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of AggregatorSourceStatus returned on each page. The default is maximum. If you specify 0, Config uses the default.'
    DescribeConfigurationAggregatorsResponse:
      type: object
      properties:
        ConfigurationAggregators:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorList'
            - description: Returns a ConfigurationAggregators object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeConfigurationAggregatorsRequest:
      type: object
      title: DescribeConfigurationAggregatorsRequest
      properties:
        ConfigurationAggregatorNames:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorNameList'
            - description: The name of the configuration aggregators.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of configuration aggregators returned on each page. The default is maximum. If you specify 0, Config uses the default.'
    DescribeConfigurationRecorderStatusResponse:
      type: object
      properties:
        ConfigurationRecordersStatus:
          allOf:
            - $ref: '#/components/schemas/ConfigurationRecorderStatusList'
            - description: A list that contains status of the specified recorders.
      description: 'The output for the <a>DescribeConfigurationRecorderStatus</a> action, in JSON format.'
    DescribeConfigurationRecorderStatusRequest:
      type: object
      title: DescribeConfigurationRecorderStatusRequest
      properties:
        ConfigurationRecorderNames:
          allOf:
            - $ref: '#/components/schemas/ConfigurationRecorderNameList'
            - description: 'The name(s) of the configuration recorder. If the name is not specified, the action returns the current status of all the configuration recorders associated with the account.'
      description: The input for the <a>DescribeConfigurationRecorderStatus</a> action.
    DescribeConfigurationRecordersResponse:
      type: object
      properties:
        ConfigurationRecorders:
          allOf:
            - $ref: '#/components/schemas/ConfigurationRecorderList'
            - description: A list that contains the descriptions of the specified configuration recorders.
      description: The output for the <a>DescribeConfigurationRecorders</a> action.
    DescribeConfigurationRecordersRequest:
      type: object
      title: DescribeConfigurationRecordersRequest
      properties:
        ConfigurationRecorderNames:
          allOf:
            - $ref: '#/components/schemas/ConfigurationRecorderNameList'
            - description: A list of configuration recorder names.
      description: The input for the <a>DescribeConfigurationRecorders</a> action.
    DescribeConformancePackComplianceResponse:
      type: object
      required:
        - ConformancePackName
        - ConformancePackRuleComplianceList
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        ConformancePackRuleComplianceList:
          allOf:
            - $ref: '#/components/schemas/ConformancePackRuleComplianceList'
            - description: Returns a list of <code>ConformancePackRuleCompliance</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeConformancePackComplianceRequest:
      type: object
      required:
        - ConformancePackName
      title: DescribeConformancePackComplianceRequest
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceFilters'
            - description: A <code>ConformancePackComplianceFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/DescribeConformancePackComplianceLimit'
            - description: The maximum number of Config rules within a conformance pack are returned on each page.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    NoSuchConfigRuleInConformancePackException: {}
    DescribeConformancePackStatusResponse:
      type: object
      properties:
        ConformancePackStatusDetails:
          allOf:
            - $ref: '#/components/schemas/ConformancePackStatusDetailsList'
            - description: A list of <code>ConformancePackStatusDetail</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeConformancePackStatusRequest:
      type: object
      title: DescribeConformancePackStatusRequest
      properties:
        ConformancePackNames:
          allOf:
            - $ref: '#/components/schemas/ConformancePackNamesList'
            - description: Comma-separated list of conformance pack names.
        Limit:
          allOf:
            - $ref: '#/components/schemas/PageSizeLimit'
            - description: The maximum number of conformance packs status returned on each page.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeConformancePacksResponse:
      type: object
      properties:
        ConformancePackDetails:
          allOf:
            - $ref: '#/components/schemas/ConformancePackDetailList'
            - description: Returns a list of <code>ConformancePackDetail</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeConformancePacksRequest:
      type: object
      title: DescribeConformancePacksRequest
      properties:
        ConformancePackNames:
          allOf:
            - $ref: '#/components/schemas/ConformancePackNamesList'
            - description: 'Comma-separated list of conformance pack names for which you want details. If you do not specify any names, Config returns details for all your conformance packs. '
        Limit:
          allOf:
            - $ref: '#/components/schemas/PageSizeLimit'
            - description: The maximum number of conformance packs returned on each page.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeDeliveryChannelStatusResponse:
      type: object
      properties:
        DeliveryChannelsStatus:
          allOf:
            - $ref: '#/components/schemas/DeliveryChannelStatusList'
            - description: A list that contains the status of a specified delivery channel.
      description: The output for the <a>DescribeDeliveryChannelStatus</a> action.
    DescribeDeliveryChannelStatusRequest:
      type: object
      title: DescribeDeliveryChannelStatusRequest
      properties:
        DeliveryChannelNames:
          allOf:
            - $ref: '#/components/schemas/DeliveryChannelNameList'
            - description: A list of delivery channel names.
      description: The input for the <a>DeliveryChannelStatus</a> action.
    DescribeDeliveryChannelsResponse:
      type: object
      properties:
        DeliveryChannels:
          allOf:
            - $ref: '#/components/schemas/DeliveryChannelList'
            - description: A list that contains the descriptions of the specified delivery channel.
      description: The output for the <a>DescribeDeliveryChannels</a> action.
    DescribeDeliveryChannelsRequest:
      type: object
      title: DescribeDeliveryChannelsRequest
      properties:
        DeliveryChannelNames:
          allOf:
            - $ref: '#/components/schemas/DeliveryChannelNameList'
            - description: A list of delivery channel names.
      description: The input for the <a>DescribeDeliveryChannels</a> action.
    DescribeOrganizationConfigRuleStatusesResponse:
      type: object
      properties:
        OrganizationConfigRuleStatuses:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleStatuses'
            - description: A list of <code>OrganizationConfigRuleStatus</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConfigRuleStatusesRequest:
      type: object
      title: DescribeOrganizationConfigRuleStatusesRequest
      properties:
        OrganizationConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleNames'
            - description: 'The names of organization config rules for which you want status details. If you do not specify any names, Config returns details for all your organization Config rules.'
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of <code>OrganizationConfigRuleStatuses</code> returned on each page. If you do no specify a number, Config uses the default. The default is 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConfigRulesResponse:
      type: object
      properties:
        OrganizationConfigRules:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRules'
            - description: Returns a list of <code>OrganizationConfigRule</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConfigRulesRequest:
      type: object
      title: DescribeOrganizationConfigRulesRequest
      properties:
        OrganizationConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleNames'
            - description: 'The names of organization config rules for which you want details. If you do not specify any names, Config returns details for all your organization config rules.'
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of organization config rules returned on each page. If you do no specify a number, Config uses the default. The default is 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConformancePackStatusesResponse:
      type: object
      properties:
        OrganizationConformancePackStatuses:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackStatuses'
            - description: 'A list of <code>OrganizationConformancePackStatus</code> objects. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The nextToken string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConformancePackStatusesRequest:
      type: object
      title: DescribeOrganizationConformancePackStatusesRequest
      properties:
        OrganizationConformancePackNames:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackNames'
            - description: 'The names of organization conformance packs for which you want status details. If you do not specify any names, Config returns details for all your organization conformance packs. '
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of OrganizationConformancePackStatuses returned on each page. If you do no specify a number, Config uses the default. The default is 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The nextToken string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeOrganizationConformancePacksResponse:
      type: object
      properties:
        OrganizationConformancePacks:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePacks'
            - description: Returns a list of OrganizationConformancePacks objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The nextToken string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeOrganizationConformancePacksRequest:
      type: object
      title: DescribeOrganizationConformancePacksRequest
      properties:
        OrganizationConformancePackNames:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackNames'
            - description: The name that you assign to an organization conformance pack.
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of organization config packs returned on each page. If you do no specify a number, Config uses the default. The default is 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The nextToken string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribePendingAggregationRequestsResponse:
      type: object
      properties:
        PendingAggregationRequests:
          allOf:
            - $ref: '#/components/schemas/PendingAggregationRequestList'
            - description: Returns a PendingAggregationRequests object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribePendingAggregationRequestsRequest:
      type: object
      title: DescribePendingAggregationRequestsRequest
      properties:
        Limit:
          allOf:
            - $ref: '#/components/schemas/DescribePendingAggregationRequestsLimit'
            - description: 'The maximum number of evaluation results returned on each page. The default is maximum. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeRemediationConfigurationsResponse:
      type: object
      properties:
        RemediationConfigurations:
          allOf:
            - $ref: '#/components/schemas/RemediationConfigurations'
            - description: Returns a remediation configuration object.
    DescribeRemediationConfigurationsRequest:
      type: object
      required:
        - ConfigRuleNames
      title: DescribeRemediationConfigurationsRequest
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleNames'
            - description: 'A list of Config rule names of remediation configurations for which you want details. '
    DescribeRemediationExceptionsResponse:
      type: object
      properties:
        RemediationExceptions:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptions'
            - description: Returns a list of remediation exception objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
      title: DescribeRemediationExceptionsRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        ResourceKeys:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptionResourceKeys'
            - description: 'An exception list of resource exception keys to be processed with the current request. Config adds exception for each resource key. For example, Config adds 3 exceptions for 3 resource keys. '
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of RemediationExceptionResourceKey returned on each page. The default is 25. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    DescribeRemediationExecutionStatusResponse:
      type: object
      properties:
        RemediationExecutionStatuses:
          allOf:
            - $ref: '#/components/schemas/RemediationExecutionStatuses'
            - description: Returns a list of remediation execution statuses objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeRemediationExecutionStatusRequest:
      type: object
      required:
        - ConfigRuleName
      title: DescribeRemediationExecutionStatusRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: A list of Config rule names.
        ResourceKeys:
          allOf:
            - $ref: '#/components/schemas/ResourceKeys'
            - description: 'A list of resource keys to be processed with the current request. Each element in the list consists of the resource type and resource ID. '
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of RemediationExecutionStatuses returned on each page. The default is maximum. If you specify 0, Config uses the default. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    DescribeRetentionConfigurationsResponse:
      type: object
      properties:
        RetentionConfigurations:
          allOf:
            - $ref: '#/components/schemas/RetentionConfigurationList'
            - description: Returns a retention configuration object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    DescribeRetentionConfigurationsRequest:
      type: object
      title: DescribeRetentionConfigurationsRequest
      properties:
        RetentionConfigurationNames:
          allOf:
            - $ref: '#/components/schemas/RetentionConfigurationNameList'
            - description: '<p>A list of names of retention configurations for which you want details. If you do not specify a name, Config returns details for all the retention configurations for that account.</p> <note> <p>Currently, Config supports only one retention configuration per region in your account.</p> </note>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetAggregateComplianceDetailsByConfigRuleResponse:
      type: object
      properties:
        AggregateEvaluationResults:
          allOf:
            - $ref: '#/components/schemas/AggregateEvaluationResultList'
            - description: Returns an AggregateEvaluationResults object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateComplianceDetailsByConfigRuleRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ConfigRuleName
        - AccountId
        - AwsRegion
      title: GetAggregateComplianceDetailsByConfigRuleRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule for which you want compliance information.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region from where the data is aggregated.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>The resource compliance status.</p> <note> <p>For the <code>GetAggregateComplianceDetailsByConfigRuleRequest</code> data type, Config supports only the <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. Config does not support the <code>NOT_APPLICABLE</code> and <code>INSUFFICIENT_DATA</code> values.</p> </note>'
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of evaluation results returned on each page. The default is 50. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateConfigRuleComplianceSummaryResponse:
      type: object
      properties:
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Groups the result based on ACCOUNT_ID or AWS_REGION.
        AggregateComplianceCounts:
          allOf:
            - $ref: '#/components/schemas/AggregateComplianceCountList'
            - description: Returns a list of AggregateComplianceCounts object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateConfigRuleComplianceSummaryRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: GetAggregateConfigRuleComplianceSummaryRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleComplianceSummaryFilters'
            - description: Filters the results based on the ConfigRuleComplianceSummaryFilters object.
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleComplianceSummaryGroupKey'
            - description: Groups the result based on ACCOUNT_ID or AWS_REGION.
        Limit:
          allOf:
            - $ref: '#/components/schemas/GroupByAPILimit'
            - description: 'The maximum number of evaluation results returned on each page. The default is 1000. You cannot specify a number greater than 1000. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateConformancePackComplianceSummaryResponse:
      type: object
      properties:
        AggregateConformancePackComplianceSummaries:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackComplianceSummaryList'
            - description: Returns a list of <code>AggregateConformancePackComplianceSummary</code> object.
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Groups the result based on Amazon Web Services account ID or Amazon Web Services Region.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateConformancePackComplianceSummaryRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: GetAggregateConformancePackComplianceSummaryRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Filters:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackComplianceSummaryFilters'
            - description: Filters the results based on the <code>AggregateConformancePackComplianceSummaryFilters</code> object.
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackComplianceSummaryGroupKey'
            - description: Groups the result based on Amazon Web Services account ID or Amazon Web Services Region.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of results returned on each page. The default is maximum. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateDiscoveredResourceCountsResponse:
      type: object
      required:
        - TotalDiscoveredResources
      properties:
        TotalDiscoveredResources:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The total number of resources that are present in an aggregator with the filters that you provide.
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The key passed into the request object. If <code>GroupByKey</code> is not provided, the result will be empty.'
        GroupedResourceCounts:
          allOf:
            - $ref: '#/components/schemas/GroupedResourceCountList'
            - description: Returns a list of GroupedResourceCount objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetAggregateDiscoveredResourceCountsRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: GetAggregateDiscoveredResourceCountsRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ResourceCountFilters'
            - description: Filters the results based on the <code>ResourceCountFilters</code> object.
        GroupByKey:
          allOf:
            - $ref: '#/components/schemas/ResourceCountGroupKey'
            - description: The key to group the resource counts.
        Limit:
          allOf:
            - $ref: '#/components/schemas/GroupByAPILimit'
            - description: 'The maximum number of <a>GroupedResourceCount</a> objects returned on each page. The default is 1000. You cannot specify a number greater than 1000. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetAggregateResourceConfigResponse:
      type: object
      properties:
        ConfigurationItem:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItem'
            - description: Returns a <code>ConfigurationItem</code> object.
    GetAggregateResourceConfigRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceIdentifier
      title: GetAggregateResourceConfigRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        ResourceIdentifier:
          allOf:
            - $ref: '#/components/schemas/AggregateResourceIdentifier'
            - description: An object that identifies aggregate resource.
    OversizedConfigurationItemException: {}
    ResourceNotDiscoveredException: {}
    GetComplianceDetailsByConfigRuleResponse:
      type: object
      properties:
        EvaluationResults:
          allOf:
            - $ref: '#/components/schemas/EvaluationResults'
            - description: Indicates whether the Amazon Web Services resource complies with the specified Config rule.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    GetComplianceDetailsByConfigRuleRequest:
      type: object
      required:
        - ConfigRuleName
      title: GetComplianceDetailsByConfigRuleRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit64'
            - description: The name of the Config rule for which you want compliance information.
        ComplianceTypes:
          allOf:
            - $ref: '#/components/schemas/ComplianceTypes'
            - description: '<p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code>.</p>'
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of evaluation results returned on each page. The default is 10. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    GetComplianceDetailsByResourceResponse:
      type: object
      properties:
        EvaluationResults:
          allOf:
            - $ref: '#/components/schemas/EvaluationResults'
            - description: Indicates whether the specified Amazon Web Services resource complies each Config rule.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    GetComplianceDetailsByResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
      title: GetComplianceDetailsByResourceRequest
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of the Amazon Web Services resource for which you want compliance information.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: The ID of the Amazon Web Services resource for which you want compliance information.
        ComplianceTypes:
          allOf:
            - $ref: '#/components/schemas/ComplianceTypes'
            - description: '<p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code>.</p>'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    GetComplianceSummaryByConfigRuleResponse:
      type: object
      properties:
        ComplianceSummary:
          allOf:
            - $ref: '#/components/schemas/ComplianceSummary'
            - description: 'The number of Config rules that are compliant and the number that are noncompliant, up to a maximum of 25 for each.'
      description: <p/>
    GetComplianceSummaryByResourceTypeResponse:
      type: object
      properties:
        ComplianceSummariesByResourceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceSummariesByResourceType'
            - description: 'The number of resources that are compliant and the number that are noncompliant. If one or more resource types were provided with the request, the numbers are returned for each resource type. The maximum number returned is 100.'
      description: <p/>
    GetComplianceSummaryByResourceTypeRequest:
      type: object
      title: GetComplianceSummaryByResourceTypeRequest
      properties:
        ResourceTypes:
          allOf:
            - $ref: '#/components/schemas/ResourceTypes'
            - description: '<p>Specify one or more resource types to get the number of resources that are compliant and the number that are noncompliant for each resource type.</p> <p>For this request, you can specify an Amazon Web Services resource type such as <code>AWS::EC2::Instance</code>. You can specify that the resource type is an Amazon Web Services account by specifying <code>AWS::::Account</code>.</p>'
      description: <p/>
    GetConformancePackComplianceDetailsResponse:
      type: object
      required:
        - ConformancePackName
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        ConformancePackRuleEvaluationResults:
          allOf:
            - $ref: '#/components/schemas/ConformancePackRuleEvaluationResultsList'
            - description: Returns a list of <code>ConformancePackEvaluationResult</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    GetConformancePackComplianceDetailsRequest:
      type: object
      required:
        - ConformancePackName
      title: GetConformancePackComplianceDetailsRequest
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackEvaluationFilters'
            - description: A <code>ConformancePackEvaluationFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/GetConformancePackComplianceDetailsLimit'
            - description: 'The maximum number of evaluation results returned on each page. If you do no specify a number, Config uses the default. The default is 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response.
    GetConformancePackComplianceSummaryResponse:
      type: object
      properties:
        ConformancePackComplianceSummaryList:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceSummaryList'
            - description: 'A list of <code>ConformancePackComplianceSummary</code> objects. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The nextToken string returned on a previous page that you use to get the next page of results in a paginated response.
    GetConformancePackComplianceSummaryRequest:
      type: object
      required:
        - ConformancePackNames
      title: GetConformancePackComplianceSummaryRequest
      properties:
        ConformancePackNames:
          allOf:
            - $ref: '#/components/schemas/ConformancePackNamesToSummarizeList'
            - description: Names of conformance packs.
        Limit:
          allOf:
            - $ref: '#/components/schemas/PageSizeLimit'
            - description: The maximum number of conformance packs returned on each page.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The nextToken string returned on a previous page that you use to get the next page of results in a paginated response.
    GetDiscoveredResourceCountsResponse:
      type: object
      properties:
        totalDiscoveredResources:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: '<p>The total number of resources that Config is recording in the region for your account. If you specify resource types in the request, Config returns only the total number of resources for those resource types.</p> <p class="title"> <b>Example</b> </p> <ol> <li> <p>Config is recording three resource types in the US East (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and 15 S3 buckets, for a total of 60 resources.</p> </li> <li> <p>You make a call to the <code>GetDiscoveredResourceCounts</code> action and specify the resource type, <code>"AWS::EC2::Instances"</code>, in the request.</p> </li> <li> <p>Config returns 25 for <code>totalDiscoveredResources</code>.</p> </li> </ol>'
        resourceCounts:
          allOf:
            - $ref: '#/components/schemas/ResourceCounts'
            - description: The list of <code>ResourceCount</code> objects. Each object is listed in descending order by the number of resources.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    GetDiscoveredResourceCountsRequest:
      type: object
      title: GetDiscoveredResourceCountsRequest
      properties:
        resourceTypes:
          allOf:
            - $ref: '#/components/schemas/ResourceTypes'
            - description: '<p>The comma-separated list that specifies the resource types that you want Config to return (for example, <code>"AWS::EC2::Instance"</code>, <code>"AWS::IAM::User"</code>).</p> <p>If a value for <code>resourceTypes</code> is not specified, Config returns all resource types that Config is recording in the region for your account.</p> <note> <p>If the configuration recorder is turned off, Config returns an empty list of <a>ResourceCount</a> objects. If the configuration recorder is not recording a specific resource type (for example, S3 buckets), that resource type is not returned in the list of <a>ResourceCount</a> objects.</p> </note>'
        limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of <a>ResourceCount</a> objects returned on each page. The default is 100. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    GetOrganizationConfigRuleDetailedStatusResponse:
      type: object
      properties:
        OrganizationConfigRuleDetailedStatus:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleDetailedStatus'
            - description: A list of <code>MemberAccountStatus</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetOrganizationConfigRuleDetailedStatusRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      title: GetOrganizationConfigRuleDetailedStatusRequest
      properties:
        OrganizationConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleName'
            - description: The name of organization config rule for which you want status details for member accounts.
        Filters:
          allOf:
            - $ref: '#/components/schemas/StatusDetailFilters'
            - description: A <code>StatusDetailFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of <code>OrganizationConfigRuleDetailedStatus</code> returned on each page. If you do not specify a number, Config uses the default. The default is 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetOrganizationConformancePackDetailedStatusResponse:
      type: object
      properties:
        OrganizationConformancePackDetailedStatuses:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackDetailedStatuses'
            - description: 'A list of <code>OrganizationConformancePackDetailedStatus</code> objects. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The nextToken string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetOrganizationConformancePackDetailedStatusRequest:
      type: object
      required:
        - OrganizationConformancePackName
      title: GetOrganizationConformancePackDetailedStatusRequest
      properties:
        OrganizationConformancePackName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackName'
            - description: The name of organization conformance pack for which you want status details for member accounts.
        Filters:
          allOf:
            - $ref: '#/components/schemas/OrganizationResourceDetailedStatusFilters'
            - description: An <code>OrganizationResourceDetailedStatusFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/CosmosPageLimit'
            - description: 'The maximum number of <code>OrganizationConformancePackDetailedStatuses</code> returned on each page. If you do not specify a number, Config uses the default. The default is 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The nextToken string returned on a previous page that you use to get the next page of results in a paginated response. '
    GetResourceConfigHistoryResponse:
      type: object
      properties:
        configurationItems:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemList'
            - description: A list that contains the configuration history of one or more resources.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: The output for the <a>GetResourceConfigHistory</a> action.
    GetResourceConfigHistoryRequest:
      type: object
      required:
        - resourceType
        - resourceId
      title: GetResourceConfigHistoryRequest
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The resource type.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the resource (for example., <code>sg-xxxxxx</code>).'
        laterTime:
          allOf:
            - $ref: '#/components/schemas/LaterTime'
            - description: 'The time stamp that indicates a later time. If not specified, current time is taken.'
        earlierTime:
          allOf:
            - $ref: '#/components/schemas/EarlierTime'
            - description: 'The time stamp that indicates an earlier time. If not specified, the action returns paginated results that contain configuration items that start when the first configuration item was recorded.'
        chronologicalOrder:
          allOf:
            - $ref: '#/components/schemas/ChronologicalOrder'
            - description: 'The chronological order for configuration items listed. By default, the results are listed in reverse chronological order.'
        limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of configuration items returned on each page. The default is 10. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: The input for the <a>GetResourceConfigHistory</a> action.
    InvalidTimeRangeException: {}
    GetStoredQueryResponse:
      type: object
      properties:
        StoredQuery:
          allOf:
            - $ref: '#/components/schemas/StoredQuery'
            - description: Returns a <code>StoredQuery</code> object.
    GetStoredQueryRequest:
      type: object
      required:
        - QueryName
      title: GetStoredQueryRequest
      properties:
        QueryName:
          allOf:
            - $ref: '#/components/schemas/QueryName'
            - description: The name of the query.
    ListAggregateDiscoveredResourcesResponse:
      type: object
      properties:
        ResourceIdentifiers:
          allOf:
            - $ref: '#/components/schemas/DiscoveredResourceIdentifierList'
            - description: Returns a list of <code>ResourceIdentifiers</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    ListAggregateDiscoveredResourcesRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceType
      title: ListAggregateDiscoveredResourcesRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: 'The name of the configuration aggregator. '
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resources that you want Config to list in the response.
        Filters:
          allOf:
            - $ref: '#/components/schemas/ResourceFilters'
            - description: Filters the results based on the <code>ResourceFilters</code> object.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of resource identifiers returned on each page. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
    ListDiscoveredResourcesResponse:
      type: object
      properties:
        resourceIdentifiers:
          allOf:
            - $ref: '#/components/schemas/ResourceIdentifierList'
            - description: 'The details that identify a resource that is discovered by Config, including the resource type, ID, and (if available) the custom resource name.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The string that you use in a subsequent request to get the next page of results in a paginated response.
      description: <p/>
    ListDiscoveredResourcesRequest:
      type: object
      required:
        - resourceType
      title: ListDiscoveredResourcesRequest
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resources that you want Config to list in the response.
        resourceIds:
          allOf:
            - $ref: '#/components/schemas/ResourceIdList'
            - description: 'The IDs of only those resources that you want Config to list in the response. If you do not specify this parameter, Config lists all resources of the specified type that it has discovered.'
        resourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: 'The custom name of only those resources that you want Config to list in the response. If you do not specify this parameter, Config lists all resources of the specified type that it has discovered.'
        limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of resource identifiers returned on each page. The default is 100. You cannot specify a number greater than 100. If you specify 0, Config uses the default.'
        includeDeletedResources:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Specifies whether Config includes deleted resources in the results. By default, deleted resources are not included.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.
      description: <p/>
    ListStoredQueriesResponse:
      type: object
      properties:
        StoredQueryMetadata:
          allOf:
            - $ref: '#/components/schemas/StoredQueryMetadataList'
            - description: A list of <code>StoredQueryMetadata</code> objects.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the previous paginated request didn''t return all of the remaining results, the response object''s <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object''s <code>NextToken</code> parameter. If there are no remaining results, the previous response object''s <code>NextToken</code> parameter is set to <code>null</code>. '
    ListStoredQueriesRequest:
      type: object
      title: ListStoredQueriesRequest
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The nextToken string returned in a previous request that you use to request the next page of results in a paginated response.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: The maximum number of results to be returned with a single call.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the resource.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and <code>AggregatorAuthorization</code>.'
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of tags returned on each page. The limit maximum is 50. You cannot specify a number greater than 50. If you specify 0, Config uses the default. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. '
    PutAggregationAuthorizationResponse:
      type: object
      properties:
        AggregationAuthorization:
          allOf:
            - $ref: '#/components/schemas/AggregationAuthorization'
            - description: 'Returns an AggregationAuthorization object. '
    PutAggregationAuthorizationRequest:
      type: object
      required:
        - AuthorizedAccountId
        - AuthorizedAwsRegion
      title: PutAggregationAuthorizationRequest
      properties:
        AuthorizedAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the account authorized to aggregate data.
        AuthorizedAwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region authorized to collect aggregated data.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagsList'
            - description: An array of tag object.
    PutConfigRuleRequest:
      type: object
      required:
        - ConfigRule
      title: PutConfigRuleRequest
      properties:
        ConfigRule:
          allOf:
            - $ref: '#/components/schemas/ConfigRule'
            - description: The rule that you want to add to your account.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagsList'
            - description: An array of tag object.
    MaxNumberOfConfigRulesExceededException: {}
    PutConfigurationAggregatorResponse:
      type: object
      properties:
        ConfigurationAggregator:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregator'
            - description: Returns a ConfigurationAggregator object.
    PutConfigurationAggregatorRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      title: PutConfigurationAggregatorRequest
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        AccountAggregationSources:
          allOf:
            - $ref: '#/components/schemas/AccountAggregationSourceList'
            - description: 'A list of AccountAggregationSource object. '
        OrganizationAggregationSource:
          allOf:
            - $ref: '#/components/schemas/OrganizationAggregationSource'
            - description: An OrganizationAggregationSource object.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagsList'
            - description: An array of tag object.
    LimitExceededException: {}
    InvalidRoleException: {}
    NoAvailableOrganizationException: {}
    OrganizationAllFeaturesNotEnabledException: {}
    PutConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorder
      title: PutConfigurationRecorderRequest
      properties:
        ConfigurationRecorder:
          allOf:
            - $ref: '#/components/schemas/ConfigurationRecorder'
            - description: The configuration recorder object that records each configuration change made to the resources.
      description: The input for the <a>PutConfigurationRecorder</a> action.
    MaxNumberOfConfigurationRecordersExceededException: {}
    InvalidConfigurationRecorderNameException: {}
    InvalidRecordingGroupException: {}
    PutConformancePackResponse:
      type: object
      properties:
        ConformancePackArn:
          allOf:
            - $ref: '#/components/schemas/ConformancePackArn'
            - description: ARN of the conformance pack.
    PutConformancePackRequest:
      type: object
      required:
        - ConformancePackName
      title: PutConformancePackRequest
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack you want to create.
        TemplateS3Uri:
          allOf:
            - $ref: '#/components/schemas/TemplateS3Uri'
            - description: '<p>Location of file containing the template body (<code>s3://bucketname/prefix</code>). The uri must point to the conformance pack template (max size: 300 KB) that is located in an Amazon S3 bucket in the same region as the conformance pack. </p> <note> <p>You must have access to read Amazon S3 bucket.</p> </note>'
        TemplateBody:
          allOf:
            - $ref: '#/components/schemas/TemplateBody'
            - description: '<p>A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes.</p> <note> <p>You can only use a YAML template with one resource type, that is, config rule and a remediation action. </p> </note>'
        DeliveryS3Bucket:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3Bucket'
            - description: <p>The name of the Amazon S3 bucket where Config stores conformance pack templates.</p> <note> <p>This field is optional.</p> </note>
        DeliveryS3KeyPrefix:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3KeyPrefix'
            - description: <p>The prefix for the Amazon S3 bucket. </p> <note> <p>This field is optional.</p> </note>
        ConformancePackInputParameters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackInputParameters'
            - description: A list of <code>ConformancePackInputParameter</code> objects.
    ConformancePackTemplateValidationException: {}
    MaxNumberOfConformancePacksExceededException: {}
    PutDeliveryChannelRequest:
      type: object
      required:
        - DeliveryChannel
      title: PutDeliveryChannelRequest
      properties:
        DeliveryChannel:
          allOf:
            - $ref: '#/components/schemas/DeliveryChannel'
            - description: The configuration delivery channel object that delivers the configuration information to an Amazon S3 bucket and to an Amazon SNS topic.
      description: The input for the <a>PutDeliveryChannel</a> action.
    MaxNumberOfDeliveryChannelsExceededException: {}
    InvalidDeliveryChannelNameException: {}
    NoSuchBucketException: {}
    InvalidS3KeyPrefixException: {}
    InvalidS3KmsKeyArnException: {}
    InvalidSNSTopicARNException: {}
    InsufficientDeliveryPolicyException: {}
    PutEvaluationsResponse:
      type: object
      properties:
        FailedEvaluations:
          allOf:
            - $ref: '#/components/schemas/Evaluations'
            - description: Requests that failed because of a client or server error.
      description: <p/>
    PutEvaluationsRequest:
      type: object
      required:
        - ResultToken
      title: PutEvaluationsRequest
      properties:
        Evaluations:
          allOf:
            - $ref: '#/components/schemas/Evaluations'
            - description: The assessments that the Lambda function performs. Each evaluation identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that invokes the Lambda function.
        ResultToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An encrypted token that associates an evaluation with an Config rule. Identifies the rule and the event that triggered the evaluation.
        TestMode:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Use this parameter to specify a test run for <code>PutEvaluations</code>. You can verify whether your Lambda function will deliver evaluation results to Config. No updates occur to your existing evaluations, and evaluation results are not sent to Config.</p> <note> <p>When <code>TestMode</code> is <code>true</code>, <code>PutEvaluations</code> doesn''t require a valid value for the <code>ResultToken</code> parameter, but the value cannot be null.</p> </note>'
      description: <p/>
    InvalidResultTokenException: {}
    PutExternalEvaluationResponse:
      type: object
      properties: {}
    PutExternalEvaluationRequest:
      type: object
      required:
        - ConfigRuleName
        - ExternalEvaluation
      title: PutExternalEvaluationRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        ExternalEvaluation:
          allOf:
            - $ref: '#/components/schemas/ExternalEvaluation'
            - description: An <code>ExternalEvaluation</code> object that provides details about compliance.
    PutOrganizationConfigRuleResponse:
      type: object
      properties:
        OrganizationConfigRuleArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The Amazon Resource Name (ARN) of an organization config rule.
    PutOrganizationConfigRuleRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      title: PutOrganizationConfigRuleRequest
      properties:
        OrganizationConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleName'
            - description: The name that you assign to an organization config rule.
        OrganizationManagedRuleMetadata:
          allOf:
            - $ref: '#/components/schemas/OrganizationManagedRuleMetadata'
            - description: 'An <code>OrganizationManagedRuleMetadata</code> object. '
        OrganizationCustomRuleMetadata:
          allOf:
            - $ref: '#/components/schemas/OrganizationCustomRuleMetadata'
            - description: An <code>OrganizationCustomRuleMetadata</code> object.
        ExcludedAccounts:
          allOf:
            - $ref: '#/components/schemas/ExcludedAccounts'
            - description: A comma-separated list of accounts that you want to exclude from an organization config rule.
    MaxNumberOfOrganizationConfigRulesExceededException: {}
    PutOrganizationConformancePackResponse:
      type: object
      properties:
        OrganizationConformancePackArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: ARN of the organization conformance pack.
    PutOrganizationConformancePackRequest:
      type: object
      required:
        - OrganizationConformancePackName
      title: PutOrganizationConformancePackRequest
      properties:
        OrganizationConformancePackName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackName'
            - description: Name of the organization conformance pack you want to create.
        TemplateS3Uri:
          allOf:
            - $ref: '#/components/schemas/TemplateS3Uri'
            - description: '<p>Location of file containing the template body. The uri must point to the conformance pack template (max size: 300 KB).</p> <note> <p>You must have access to read Amazon S3 bucket.</p> </note>'
        TemplateBody:
          allOf:
            - $ref: '#/components/schemas/TemplateBody'
            - description: 'A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes.'
        DeliveryS3Bucket:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3Bucket'
            - description: '<p>The name of the Amazon S3 bucket where Config stores conformance pack templates.</p> <note> <p>This field is optional. If used, it must be prefixed with <code>awsconfigconforms</code>.</p> </note>'
        DeliveryS3KeyPrefix:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3KeyPrefix'
            - description: <p>The prefix for the Amazon S3 bucket.</p> <note> <p>This field is optional.</p> </note>
        ConformancePackInputParameters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackInputParameters'
            - description: A list of <code>ConformancePackInputParameter</code> objects.
        ExcludedAccounts:
          allOf:
            - $ref: '#/components/schemas/ExcludedAccounts'
            - description: A list of Amazon Web Services accounts to be excluded from an organization conformance pack while deploying a conformance pack.
    MaxNumberOfOrganizationConformancePacksExceededException: {}
    OrganizationConformancePackTemplateValidationException: {}
    PutRemediationConfigurationsResponse:
      type: object
      properties:
        FailedBatches:
          allOf:
            - $ref: '#/components/schemas/FailedRemediationBatches'
            - description: Returns a list of failed remediation batch objects.
    PutRemediationConfigurationsRequest:
      type: object
      required:
        - RemediationConfigurations
      title: PutRemediationConfigurationsRequest
      properties:
        RemediationConfigurations:
          allOf:
            - $ref: '#/components/schemas/RemediationConfigurations'
            - description: A list of remediation configuration objects.
    PutRemediationExceptionsResponse:
      type: object
      properties:
        FailedBatches:
          allOf:
            - $ref: '#/components/schemas/FailedRemediationExceptionBatches'
            - description: Returns a list of failed remediation exceptions batch objects. Each object in the batch consists of a list of failed items and failure messages.
    PutRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      title: PutRemediationExceptionsRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule for which you want to create remediation exception.
        ResourceKeys:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptionResourceKeys'
            - description: 'An exception list of resource exception keys to be processed with the current request. Config adds exception for each resource key. For example, Config adds 3 exceptions for 3 resource keys. '
        Message:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: The message contains an explanation of the exception.
        ExpirationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The exception is automatically deleted after the expiration date.
    PutResourceConfigRequest:
      type: object
      required:
        - ResourceType
        - SchemaVersionId
        - ResourceId
        - Configuration
      title: PutResourceConfigRequest
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceTypeString'
            - description: '<p>The type of the resource. The custom resource type must be registered with CloudFormation. </p> <note> <p>You cannot use the organization names “amzn”, “amazon”, “alexa”, “custom” with custom resource types. It is the first part of the ResourceType up to the first ::.</p> </note>'
        SchemaVersionId:
          allOf:
            - $ref: '#/components/schemas/SchemaVersionId'
            - description: Version of the schema registered for the ResourceType in CloudFormation.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: Unique identifier of the resource.
        ResourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: Name of the resource.
        Configuration:
          allOf:
            - $ref: '#/components/schemas/Configuration'
            - description: <p>The configuration object of the resource in valid JSON format. It must match the schema registered with CloudFormation.</p> <note> <p>The configuration JSON must not exceed 64 KB.</p> </note>
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: Tags associated with the resource.
    MaxActiveResourcesExceededException: {}
    PutRetentionConfigurationResponse:
      type: object
      properties:
        RetentionConfiguration:
          allOf:
            - $ref: '#/components/schemas/RetentionConfiguration'
            - description: Returns a retention configuration object.
    PutRetentionConfigurationRequest:
      type: object
      required:
        - RetentionPeriodInDays
      title: PutRetentionConfigurationRequest
      properties:
        RetentionPeriodInDays:
          allOf:
            - $ref: '#/components/schemas/RetentionPeriodInDays'
            - description: '<p>Number of days Config stores your historical information.</p> <note> <p>Currently, only applicable to the configuration item history.</p> </note>'
    MaxNumberOfRetentionConfigurationsExceededException: {}
    PutStoredQueryResponse:
      type: object
      properties:
        QueryArn:
          allOf:
            - $ref: '#/components/schemas/QueryArn'
            - description: 'Amazon Resource Name (ARN) of the query. For example, arn:partition:service:region:account-id:resource-type/resource-name/resource-id.'
    PutStoredQueryRequest:
      type: object
      required:
        - StoredQuery
      title: PutStoredQueryRequest
      properties:
        StoredQuery:
          allOf:
            - $ref: '#/components/schemas/StoredQuery'
            - description: '<p>A list of <code>StoredQuery</code> objects. The mandatory fields are <code>QueryName</code> and <code>Expression</code>.</p> <note> <p>When you are creating a query, you must provide a query name and an expression. When you are updating a query, you must provide a query name but updating the description is optional.</p> </note>'
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagsList'
            - description: A list of <code>Tags</code> object.
    TooManyTagsException: {}
    ResourceConcurrentModificationException: {}
    SelectAggregateResourceConfigResponse:
      type: object
      properties:
        Results:
          allOf:
            - $ref: '#/components/schemas/Results'
            - description: Returns the results for the SQL query.
        QueryInfo:
          $ref: '#/components/schemas/QueryInfo'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The nextToken string returned in a previous request that you use to request the next page of results in a paginated response. '
    SelectAggregateResourceConfigRequest:
      type: object
      required:
        - Expression
        - ConfigurationAggregatorName
      title: SelectAggregateResourceConfigRequest
      properties:
        Expression:
          allOf:
            - $ref: '#/components/schemas/Expression'
            - description: 'The SQL query SELECT command. '
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the configuration aggregator.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of query results returned on each page. '
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: The maximum number of query results returned on each page. Config also allows the Limit request parameter.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The nextToken string returned in a previous request that you use to request the next page of results in a paginated response. '
    InvalidExpressionException: {}
    SelectResourceConfigResponse:
      type: object
      properties:
        Results:
          allOf:
            - $ref: '#/components/schemas/Results'
            - description: Returns the results for the SQL query.
        QueryInfo:
          allOf:
            - $ref: '#/components/schemas/QueryInfo'
            - description: Returns the <code>QueryInfo</code> object.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response. '
    SelectResourceConfigRequest:
      type: object
      required:
        - Expression
      title: SelectResourceConfigRequest
      properties:
        Expression:
          allOf:
            - $ref: '#/components/schemas/Expression'
            - description: The SQL query <code>SELECT</code> command.
        Limit:
          allOf:
            - $ref: '#/components/schemas/Limit'
            - description: 'The maximum number of query results returned on each page. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response. '
    StartConfigRulesEvaluationResponse:
      type: object
      properties: {}
      description: The output when you start the evaluation for the specified Config rule.
    StartConfigRulesEvaluationRequest:
      type: object
      title: StartConfigRulesEvaluationRequest
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ReevaluateConfigRuleNames'
            - description: The list of names of Config rules that you want to run evaluations for.
      description: <p/>
    StartConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      title: StartConfigurationRecorderRequest
      properties:
        ConfigurationRecorderName:
          allOf:
            - $ref: '#/components/schemas/RecorderName'
            - description: The name of the recorder object that records each configuration change made to the resources.
      description: The input for the <a>StartConfigurationRecorder</a> action.
    NoAvailableDeliveryChannelException: {}
    StartRemediationExecutionResponse:
      type: object
      properties:
        FailureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Returns a failure message. For example, the resource is already compliant.'
        FailedItems:
          allOf:
            - $ref: '#/components/schemas/ResourceKeys'
            - description: 'For resources that have failed to start execution, the API returns a resource key object.'
    StartRemediationExecutionRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      title: StartRemediationExecutionRequest
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The list of names of Config rules that you want to run remediation execution for.
        ResourceKeys:
          allOf:
            - $ref: '#/components/schemas/ResourceKeys'
            - description: 'A list of resource keys to be processed with the current request. Each element in the list consists of the resource type and resource ID. '
    StopConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      title: StopConfigurationRecorderRequest
      properties:
        ConfigurationRecorderName:
          allOf:
            - $ref: '#/components/schemas/RecorderName'
            - description: The name of the recorder object that records each configuration change made to the resources.
      description: The input for the <a>StopConfigurationRecorder</a> action.
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and <code>AggregatorAuthorization</code>.'
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: An array of tag object.
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are <code>ConfigRule</code>, <code>ConfigurationAggregator</code> and <code>AggregatorAuthorization</code>.'
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/TagKeyList'
            - description: The keys of the tags to be removed.
    ARN:
      type: string
    AccountAggregationSourceAccountList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      minItems: 1
    Boolean:
      type: boolean
    AggregatorRegionList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
    AccountAggregationSource:
      type: object
      required:
        - AccountIds
      properties:
        AccountIds:
          allOf:
            - $ref: '#/components/schemas/AccountAggregationSourceAccountList'
            - description: 'The 12-digit account ID of the account being aggregated. '
        AllAwsRegions:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, aggregate existing Config regions and future regions.'
        AwsRegions:
          allOf:
            - $ref: '#/components/schemas/AggregatorRegionList'
            - description: The source regions being aggregated.
      description: A collection of accounts and regions.
    AccountId:
      type: string
      pattern: '\d{12}'
    AccountAggregationSourceList:
      type: array
      items:
        $ref: '#/components/schemas/AccountAggregationSource'
      minItems: 0
      maxItems: 1
    ConfigRuleName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    Compliance:
      type: object
      properties:
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>Indicates whether an Amazon Web Services resource or Config rule is compliant.</p> <p>A resource is compliant if it complies with all of the Config rules that evaluate it. A resource is noncompliant if it does not comply with one or more of these rules.</p> <p>A rule is compliant if all of the resources that the rule evaluates comply with it. A rule is noncompliant if any of these resources do not comply.</p> <p>Config returns the <code>INSUFFICIENT_DATA</code> value when no evaluation results are available for the Amazon Web Services resource or Config rule.</p> <p>For the <code>Compliance</code> data type, Config supports only <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code> values. Config does not support the <code>NOT_APPLICABLE</code> value for the <code>Compliance</code> data type.</p>'
        ComplianceContributorCount:
          allOf:
            - $ref: '#/components/schemas/ComplianceContributorCount'
            - description: 'The number of Amazon Web Services resources or Config rules that cause a result of <code>NON_COMPLIANT</code>, up to a maximum number.'
      description: Indicates whether an Amazon Web Services resource or Config rule is compliant and provides the number of contributors that affect the compliance.
    AwsRegion:
      type: string
      minLength: 1
      maxLength: 64
    AggregateComplianceByConfigRule:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        Compliance:
          allOf:
            - $ref: '#/components/schemas/Compliance'
            - description: Indicates whether an Amazon Web Services resource or Config rule is compliant and provides the number of contributors that affect the compliance.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region from where the data is aggregated.
      description: '<p>Indicates whether an Config rule is compliant based on account ID, region, compliance, and rule name.</p> <p>A rule is compliant if all of the resources that the rule evaluated comply with it. It is noncompliant if any of these resources do not comply.</p>'
    AggregateComplianceByConfigRuleList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateComplianceByConfigRule'
    ConformancePackName:
      type: string
      pattern: '[a-zA-Z][-a-zA-Z0-9]*'
      minLength: 1
      maxLength: 256
    AggregateConformancePackCompliance:
      type: object
      properties:
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: The compliance status of the conformance pack.
        CompliantRuleCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of compliant Config Rules.
        NonCompliantRuleCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of noncompliant Config Rules.
        TotalRuleCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'Total number of compliant rules, noncompliant rules, and the rules that do not have any applicable resources to evaluate upon resulting in insufficient data.'
      description: '<p>Provides the number of compliant and noncompliant rules within a conformance pack. Also provides the compliance status of the conformance pack and the total rule count which includes compliant rules, noncompliant rules, and rules that cannot be evaluated due to insufficient data.</p> <p>A conformance pack is compliant if all of the rules in a conformance packs are compliant. It is noncompliant if any of the rules are not compliant. The compliance status of a conformance pack is INSUFFICIENT_DATA only if all rules within a conformance pack cannot be evaluated due to insufficient data. If some of the rules in a conformance pack are compliant but the compliance status of other rules in that same conformance pack is INSUFFICIENT_DATA, the conformance pack shows compliant.</p>'
    AggregateComplianceByConformancePack:
      type: object
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: The name of the conformance pack.
        Compliance:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackCompliance'
            - description: The compliance status of the conformance pack.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit Amazon Web Services account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source Amazon Web Services Region from where the data is aggregated.
      description: '<p>Provides aggregate compliance of the conformance pack. Indicates whether a conformance pack is compliant based on the name of the conformance pack, account ID, and region.</p> <p>A conformance pack is compliant if all of the rules in a conformance packs are compliant. It is noncompliant if any of the rules are not compliant. The compliance status of a conformance pack is INSUFFICIENT_DATA only if all rules within a conformance pack cannot be evaluated due to insufficient data. If some of the rules in a conformance pack are compliant but the compliance status of other rules in that same conformance pack is INSUFFICIENT_DATA, the conformance pack shows compliant.</p>'
    AggregateComplianceByConformancePackList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateComplianceByConformancePack'
    StringWithCharLimit256:
      type: string
      minLength: 1
      maxLength: 256
    ComplianceSummary:
      type: object
      properties:
        CompliantResourceCount:
          allOf:
            - $ref: '#/components/schemas/ComplianceContributorCount'
            - description: 'The number of Config rules or Amazon Web Services resources that are compliant, up to a maximum of 25 for rules and 100 for resources.'
        NonCompliantResourceCount:
          allOf:
            - $ref: '#/components/schemas/ComplianceContributorCount'
            - description: 'The number of Config rules or Amazon Web Services resources that are noncompliant, up to a maximum of 25 for rules and 100 for resources.'
        ComplianceSummaryTimestamp:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that Config created the compliance summary.
      description: The number of Config rules or Amazon Web Services resources that are compliant and noncompliant.
    AggregateComplianceCount:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The 12-digit account ID or region based on the GroupByKey value.
        ComplianceSummary:
          allOf:
            - $ref: '#/components/schemas/ComplianceSummary'
            - description: The number of compliant and noncompliant Config rules.
      description: Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator.
    AggregateComplianceCountList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateComplianceCount'
    ConformancePackComplianceType:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
        - INSUFFICIENT_DATA
    Integer:
      type: integer
    AggregateConformancePackComplianceCount:
      type: object
      properties:
        CompliantConformancePackCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Number of compliant conformance packs.
        NonCompliantConformancePackCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Number of noncompliant conformance packs.
      description: The number of conformance packs that are compliant and noncompliant.
    AggregateConformancePackComplianceFilters:
      type: object
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: The name of the conformance pack.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: The compliance status of the conformance pack.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit Amazon Web Services account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source Amazon Web Services Region from where the data is aggregated.
      description: 'Filters the conformance packs based on an account ID, region, compliance type, and the name of the conformance pack.'
    AggregateConformancePackComplianceSummary:
      type: object
      properties:
        ComplianceSummary:
          allOf:
            - $ref: '#/components/schemas/AggregateConformancePackComplianceCount'
            - description: 'Returns an <code>AggregateConformancePackComplianceCount</code> object. '
        GroupName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Groups the result based on Amazon Web Services account ID or Amazon Web Services Region.
      description: 'Provides a summary of compliance based on either account ID or region. '
    AggregateConformancePackComplianceSummaryFilters:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit Amazon Web Services account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source Amazon Web Services Region from where the data is aggregated.
      description: 'Filters the results based on account ID and region. '
    AggregateConformancePackComplianceSummaryGroupKey:
      type: string
      enum:
        - ACCOUNT_ID
        - AWS_REGION
    AggregateConformancePackComplianceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateConformancePackComplianceSummary'
    EvaluationResultIdentifier:
      type: object
      properties:
        EvaluationResultQualifier:
          allOf:
            - $ref: '#/components/schemas/EvaluationResultQualifier'
            - description: 'Identifies an Config rule used to evaluate an Amazon Web Services resource, and provides the type and ID of the evaluated resource.'
        OrderingTimestamp:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: 'The time of the event that triggered the evaluation of your Amazon Web Services resources. The time can indicate when Config delivered a configuration item change notification, or it can indicate when Config delivered the configuration snapshot, depending on which event triggered the evaluation.'
      description: Uniquely identifies an evaluation result.
    ComplianceType:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
        - NOT_APPLICABLE
        - INSUFFICIENT_DATA
    Date:
      type: string
      format: date-time
    AggregateEvaluationResult:
      type: object
      properties:
        EvaluationResultIdentifier:
          allOf:
            - $ref: '#/components/schemas/EvaluationResultIdentifier'
            - description: Uniquely identifies the evaluation result.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>The resource compliance status.</p> <p>For the <code>AggregationEvaluationResult</code> data type, Config supports only the <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. Config does not support the <code>NOT_APPLICABLE</code> and <code>INSUFFICIENT_DATA</code> value.</p>'
        ResultRecordedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when Config recorded the aggregate evaluation result.
        ConfigRuleInvokedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the Config rule evaluated the Amazon Web Services resource.
        Annotation:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Supplementary information about how the agrregate evaluation determined the compliance.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region from where the data is aggregated.
      description: 'The details of an Config evaluation for an account ID and region in an aggregator. Provides the Amazon Web Services resource that was evaluated, the compliance of the resource, related time stamps, and supplementary information. '
    AggregateEvaluationResultList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateEvaluationResult'
    ResourceId:
      type: string
      minLength: 1
      maxLength: 768
    ResourceType:
      type: string
      enum:
        - 'AWS::EC2::CustomerGateway'
        - 'AWS::EC2::EIP'
        - 'AWS::EC2::Host'
        - 'AWS::EC2::Instance'
        - 'AWS::EC2::InternetGateway'
        - 'AWS::EC2::NetworkAcl'
        - 'AWS::EC2::NetworkInterface'
        - 'AWS::EC2::RouteTable'
        - 'AWS::EC2::SecurityGroup'
        - 'AWS::EC2::Subnet'
        - 'AWS::CloudTrail::Trail'
        - 'AWS::EC2::Volume'
        - 'AWS::EC2::VPC'
        - 'AWS::EC2::VPNConnection'
        - 'AWS::EC2::VPNGateway'
        - 'AWS::EC2::RegisteredHAInstance'
        - 'AWS::EC2::NatGateway'
        - 'AWS::EC2::EgressOnlyInternetGateway'
        - 'AWS::EC2::VPCEndpoint'
        - 'AWS::EC2::VPCEndpointService'
        - 'AWS::EC2::FlowLog'
        - 'AWS::EC2::VPCPeeringConnection'
        - 'AWS::Elasticsearch::Domain'
        - 'AWS::IAM::Group'
        - 'AWS::IAM::Policy'
        - 'AWS::IAM::Role'
        - 'AWS::IAM::User'
        - 'AWS::ElasticLoadBalancingV2::LoadBalancer'
        - 'AWS::ACM::Certificate'
        - 'AWS::RDS::DBInstance'
        - 'AWS::RDS::DBSubnetGroup'
        - 'AWS::RDS::DBSecurityGroup'
        - 'AWS::RDS::DBSnapshot'
        - 'AWS::RDS::DBCluster'
        - 'AWS::RDS::DBClusterSnapshot'
        - 'AWS::RDS::EventSubscription'
        - 'AWS::S3::Bucket'
        - 'AWS::S3::AccountPublicAccessBlock'
        - 'AWS::Redshift::Cluster'
        - 'AWS::Redshift::ClusterSnapshot'
        - 'AWS::Redshift::ClusterParameterGroup'
        - 'AWS::Redshift::ClusterSecurityGroup'
        - 'AWS::Redshift::ClusterSubnetGroup'
        - 'AWS::Redshift::EventSubscription'
        - 'AWS::SSM::ManagedInstanceInventory'
        - 'AWS::CloudWatch::Alarm'
        - 'AWS::CloudFormation::Stack'
        - 'AWS::ElasticLoadBalancing::LoadBalancer'
        - 'AWS::AutoScaling::AutoScalingGroup'
        - 'AWS::AutoScaling::LaunchConfiguration'
        - 'AWS::AutoScaling::ScalingPolicy'
        - 'AWS::AutoScaling::ScheduledAction'
        - 'AWS::DynamoDB::Table'
        - 'AWS::CodeBuild::Project'
        - 'AWS::WAF::RateBasedRule'
        - 'AWS::WAF::Rule'
        - 'AWS::WAF::RuleGroup'
        - 'AWS::WAF::WebACL'
        - 'AWS::WAFRegional::RateBasedRule'
        - 'AWS::WAFRegional::Rule'
        - 'AWS::WAFRegional::RuleGroup'
        - 'AWS::WAFRegional::WebACL'
        - 'AWS::CloudFront::Distribution'
        - 'AWS::CloudFront::StreamingDistribution'
        - 'AWS::Lambda::Function'
        - 'AWS::NetworkFirewall::Firewall'
        - 'AWS::NetworkFirewall::FirewallPolicy'
        - 'AWS::NetworkFirewall::RuleGroup'
        - 'AWS::ElasticBeanstalk::Application'
        - 'AWS::ElasticBeanstalk::ApplicationVersion'
        - 'AWS::ElasticBeanstalk::Environment'
        - 'AWS::WAFv2::WebACL'
        - 'AWS::WAFv2::RuleGroup'
        - 'AWS::WAFv2::IPSet'
        - 'AWS::WAFv2::RegexPatternSet'
        - 'AWS::WAFv2::ManagedRuleSet'
        - 'AWS::XRay::EncryptionConfig'
        - 'AWS::SSM::AssociationCompliance'
        - 'AWS::SSM::PatchCompliance'
        - 'AWS::Shield::Protection'
        - 'AWS::ShieldRegional::Protection'
        - 'AWS::Config::ConformancePackCompliance'
        - 'AWS::Config::ResourceCompliance'
        - 'AWS::ApiGateway::Stage'
        - 'AWS::ApiGateway::RestApi'
        - 'AWS::ApiGatewayV2::Stage'
        - 'AWS::ApiGatewayV2::Api'
        - 'AWS::CodePipeline::Pipeline'
        - 'AWS::ServiceCatalog::CloudFormationProvisionedProduct'
        - 'AWS::ServiceCatalog::CloudFormationProduct'
        - 'AWS::ServiceCatalog::Portfolio'
        - 'AWS::SQS::Queue'
        - 'AWS::KMS::Key'
        - 'AWS::QLDB::Ledger'
        - 'AWS::SecretsManager::Secret'
        - 'AWS::SNS::Topic'
        - 'AWS::SSM::FileData'
        - 'AWS::Backup::BackupPlan'
        - 'AWS::Backup::BackupSelection'
        - 'AWS::Backup::BackupVault'
        - 'AWS::Backup::RecoveryPoint'
        - 'AWS::ECR::Repository'
        - 'AWS::ECS::Cluster'
        - 'AWS::ECS::Service'
        - 'AWS::ECS::TaskDefinition'
        - 'AWS::EFS::AccessPoint'
        - 'AWS::EFS::FileSystem'
        - 'AWS::EKS::Cluster'
    ResourceName:
      type: string
    AggregateResourceIdentifier:
      type: object
      required:
        - SourceAccountId
        - SourceRegion
        - ResourceId
        - ResourceType
      properties:
        SourceAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the source account.
        SourceRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region where data is aggregated.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the Amazon Web Services resource.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of the Amazon Web Services resource.
        ResourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the Amazon Web Services resource.
      description: 'The details that identify a resource that is collected by Config aggregator, including the resource type, ID, (if available) the custom resource name, the source account, and source region.'
    String:
      type: string
    AggregatedSourceType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
    AggregatedSourceStatusType:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - OUTDATED
    AggregatedSourceStatus:
      type: object
      properties:
        SourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The source account ID or an organization.
        SourceType:
          allOf:
            - $ref: '#/components/schemas/AggregatedSourceType'
            - description: The source account or an organization.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region authorized to collect aggregated data.
        LastUpdateStatus:
          allOf:
            - $ref: '#/components/schemas/AggregatedSourceStatusType'
            - description: <p>Filters the last updated status type.</p> <ul> <li> <p>Valid value FAILED indicates errors while moving data.</p> </li> <li> <p>Valid value SUCCEEDED indicates the data was successfully moved.</p> </li> <li> <p>Valid value OUTDATED indicates the data is not the most recent.</p> </li> </ul>
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time of the last update.
        LastErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code that Config returned when the source account aggregation last failed.
        LastErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The message indicating that the source account aggregation failed due to an error.
      description: The current sync status between the source and the aggregator account.
    AggregatedSourceStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AggregatedSourceStatus'
    AggregatedSourceStatusTypeList:
      type: array
      items:
        $ref: '#/components/schemas/AggregatedSourceStatusType'
      minItems: 1
    AggregationAuthorization:
      type: object
      properties:
        AggregationAuthorizationArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the aggregation object.
        AuthorizedAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the account authorized to aggregate data.
        AuthorizedAwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region authorized to collect aggregated data.
        CreationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time stamp when the aggregation authorization was created.
      description: An object that represents the authorizations granted to aggregator accounts and regions.
    AggregationAuthorizationList:
      type: array
      items:
        $ref: '#/components/schemas/AggregationAuthorization'
    AllSupported:
      type: boolean
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1000
    Annotation:
      type: string
      minLength: 0
      maxLength: 256
    AutoRemediationAttemptSeconds:
      type: integer
      minimum: 1
      maximum: 2678000
    AutoRemediationAttempts:
      type: integer
      minimum: 1
      maximum: 25
    AvailabilityZone:
      type: string
    Version:
      type: string
    ConfigurationItemCaptureTime:
      type: string
      format: date-time
    ConfigurationItemStatus:
      type: string
      enum:
        - OK
        - ResourceDiscovered
        - ResourceNotRecorded
        - ResourceDeleted
        - ResourceDeletedNotRecorded
    ConfigurationStateId:
      type: string
    ResourceCreationTime:
      type: string
      format: date-time
    Configuration:
      type: string
    SupplementaryConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SupplementaryConfigurationValue'
    BaseConfigurationItem:
      type: object
      properties:
        version:
          allOf:
            - $ref: '#/components/schemas/Version'
            - description: The version number of the resource configuration.
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit Amazon Web Services account ID associated with the resource.
        configurationItemCaptureTime:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemCaptureTime'
            - description: The time when the configuration recording was initiated.
        configurationItemStatus:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemStatus'
            - description: '<p>The configuration item status. The valid values are:</p> <ul> <li> <p>OK – The resource configuration has been updated</p> </li> <li> <p>ResourceDiscovered – The resource was newly discovered</p> </li> <li> <p>ResourceNotRecorded – The resource was discovered but its configuration was not recorded since the recorder excludes the recording of resources of this type</p> </li> <li> <p>ResourceDeleted – The resource was deleted</p> </li> <li> <p>ResourceDeletedNotRecorded – The resource was deleted but its configuration was not recorded since the recorder excludes the recording of resources of this type</p> </li> </ul> <note> <p>The CIs do not incur any cost.</p> </note>'
        configurationStateId:
          allOf:
            - $ref: '#/components/schemas/ConfigurationStateId'
            - description: An identifier that indicates the ordering of the configuration items of a resource.
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of Amazon Web Services resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the resource (for example., sg-xxxxxx).'
        resourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: 'The custom name of the resource, if available.'
        awsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region where the resource resides.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZone'
            - description: The Availability Zone associated with the resource.
        resourceCreationTime:
          allOf:
            - $ref: '#/components/schemas/ResourceCreationTime'
            - description: The time stamp when the resource was created.
        configuration:
          allOf:
            - $ref: '#/components/schemas/Configuration'
            - description: The description of the resource configuration.
        supplementaryConfiguration:
          allOf:
            - $ref: '#/components/schemas/SupplementaryConfiguration'
            - description: Configuration attributes that Config returns for certain resource types to supplement the information returned for the configuration parameter.
      description: The detailed configuration of a specified resource.
    BaseConfigurationItems:
      type: array
      items:
        $ref: '#/components/schemas/BaseConfigurationItem'
    BaseResourceId:
      type: string
      minLength: 1
      maxLength: 768
    ConfigurationAggregatorName:
      type: string
      pattern: '[\w\-]+'
      minLength: 1
      maxLength: 256
    ResourceIdentifiersList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateResourceIdentifier'
      minItems: 1
      maxItems: 100
    UnprocessedResourceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateResourceIdentifier'
    ResourceKeys:
      type: array
      items:
        $ref: '#/components/schemas/ResourceKey'
      minItems: 1
      maxItems: 100
    ChannelName:
      type: string
      minLength: 1
      maxLength: 256
    ChronologicalOrder:
      type: string
      enum:
        - Reverse
        - Forward
    ComplianceContributorCount:
      type: object
      properties:
        CappedCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of Amazon Web Services resources or Config rules responsible for the current compliance of the item.
        CapExceeded:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the maximum count is reached.
      description: 'The number of Amazon Web Services resources or Config rules responsible for the current compliance of the item, up to a maximum number.'
    StringWithCharLimit64:
      type: string
      minLength: 1
      maxLength: 64
    ComplianceByConfigRule:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit64'
            - description: The name of the Config rule.
        Compliance:
          allOf:
            - $ref: '#/components/schemas/Compliance'
            - description: Indicates whether the Config rule is compliant.
      description: Indicates whether an Config rule is compliant. A rule is compliant if all of the resources that the rule evaluated comply with it. A rule is noncompliant if any of these resources do not comply.
    ComplianceByConfigRules:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceByConfigRule'
    ComplianceByResource:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of the Amazon Web Services resource that was evaluated.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: The ID of the Amazon Web Services resource that was evaluated.
        Compliance:
          allOf:
            - $ref: '#/components/schemas/Compliance'
            - description: Indicates whether the Amazon Web Services resource complies with all of the Config rules that evaluated it.
      description: Indicates whether an Amazon Web Services resource that is evaluated according to one or more Config rules is compliant. A resource is compliant if it complies with all of the rules that evaluate it. A resource is noncompliant if it does not comply with one or more of these rules.
    ComplianceByResources:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceByResource'
    ComplianceResourceTypes:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit256'
      minItems: 0
      maxItems: 100
    ComplianceSummaryByResourceType:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of Amazon Web Services resource.
        ComplianceSummary:
          allOf:
            - $ref: '#/components/schemas/ComplianceSummary'
            - description: 'The number of Amazon Web Services resources that are compliant or noncompliant, up to a maximum of 100 for each.'
      description: 'The number of Amazon Web Services resources of a specific type that are compliant or noncompliant, up to a maximum of 100 for each.'
    ComplianceSummariesByResourceType:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceSummaryByResourceType'
    ComplianceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceType'
      minItems: 0
      maxItems: 3
    DeliveryStatus:
      type: string
      enum:
        - Success
        - Failure
        - Not_Applicable
    ConfigExportDeliveryInfo:
      type: object
      properties:
        lastStatus:
          allOf:
            - $ref: '#/components/schemas/DeliveryStatus'
            - description: Status of the last attempted delivery.
        lastErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code from the last attempted delivery.
        lastErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message from the last attempted delivery.
        lastAttemptTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time of the last attempted delivery.
        lastSuccessfulTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time of the last successful delivery.
        nextDeliveryTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that the next delivery occurs.
      description: Provides status of the delivery of the snapshot or the configuration history to the specified Amazon S3 bucket. Also provides the status of notifications about the Amazon S3 delivery to the specified Amazon SNS topic.
    EmptiableStringWithCharLimit256:
      type: string
      minLength: 0
      maxLength: 256
    Scope:
      type: object
      properties:
        ComplianceResourceTypes:
          allOf:
            - $ref: '#/components/schemas/ComplianceResourceTypes'
            - description: The resource types of only those Amazon Web Services resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for <code>ComplianceResourceId</code>.
        TagKey:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit128'
            - description: The tag key that is applied to only those Amazon Web Services resources that you want to trigger an evaluation for the rule.
        TagValue:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The tag value applied to only those Amazon Web Services resources that you want to trigger an evaluation for the rule. If you specify a value for <code>TagValue</code>, you must also specify a value for <code>TagKey</code>.'
        ComplianceResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: 'The ID of the only Amazon Web Services resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for <code>ComplianceResourceTypes</code>.'
      description: 'Defines which resources trigger an evaluation for an Config rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration.'
    Source:
      type: object
      required:
        - Owner
        - SourceIdentifier
      properties:
        Owner:
          allOf:
            - $ref: '#/components/schemas/Owner'
            - description: Indicates whether Amazon Web Services or the customer owns and manages the Config rule.
        SourceIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: '<p>For Config managed rules, a predefined identifier from a list. For example, <code>IAM_PASSWORD_POLICY</code> is a managed rule. To reference a managed rule, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using Config managed rules</a>.</p> <p>For custom rules, the identifier is the Amazon Resource Name (ARN) of the rule''s Lambda function, such as <code>arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name</code>.</p>'
        SourceDetails:
          allOf:
            - $ref: '#/components/schemas/SourceDetails'
            - description: Provides the source and type of the event that causes Config to evaluate your Amazon Web Services resources.
      description: 'Provides the Config rule owner (Amazon Web Services or customer), the rule identifier, and the events that trigger the evaluation of your Amazon Web Services resources.'
    StringWithCharLimit1024:
      type: string
      minLength: 1
      maxLength: 1024
    MaximumExecutionFrequency:
      type: string
      enum:
        - One_Hour
        - Three_Hours
        - Six_Hours
        - Twelve_Hours
        - TwentyFour_Hours
    ConfigRuleState:
      type: string
      enum:
        - ACTIVE
        - DELETING
        - DELETING_RESULTS
        - EVALUATING
    ConfigRule:
      type: object
      required:
        - Source
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name that you assign to the Config rule. The name is required if you are adding a new rule.
        ConfigRuleArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The Amazon Resource Name (ARN) of the Config rule.
        ConfigRuleId:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit64'
            - description: The ID of the Config rule.
        Description:
          allOf:
            - $ref: '#/components/schemas/EmptiableStringWithCharLimit256'
            - description: The description that you provide for the Config rule.
        Scope:
          allOf:
            - $ref: '#/components/schemas/Scope'
            - description: '<p>Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.</p> <note> <p>The scope can be empty. </p> </note>'
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - description: 'Provides the rule owner (Amazon Web Services or customer), the rule identifier, and the notifications that cause the function to evaluate your Amazon Web Services resources.'
        InputParameters:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: 'A string, in JSON format, that is passed to the Config rule Lambda function.'
        MaximumExecutionFrequency:
          allOf:
            - $ref: '#/components/schemas/MaximumExecutionFrequency'
            - description: '<p>The maximum frequency with which Config runs evaluations for a rule. You can specify a value for <code>MaximumExecutionFrequency</code> when:</p> <ul> <li> <p>You are using an Config managed rule that is triggered at a periodic frequency.</p> </li> <li> <p>Your custom rule is triggered when Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> </li> </ul> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> </note>'
        ConfigRuleState:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleState'
            - description: '<p>Indicates whether the Config rule is active or is currently being deleted by Config. It can also indicate the evaluation status for the Config rule.</p> <p>Config sets the state of the rule to <code>EVALUATING</code> temporarily after you use the <code>StartConfigRulesEvaluation</code> request to evaluate your resources against the Config rule.</p> <p>Config sets the state of the rule to <code>DELETING_RESULTS</code> temporarily after you use the <code>DeleteEvaluationResults</code> request to delete the current evaluation results for the Config rule.</p> <p>Config temporarily sets the state of a rule to <code>DELETING</code> after you use the <code>DeleteConfigRule</code> request to delete the rule. After Config deletes the rule, the rule and all of its evaluations are erased and are no longer available.</p>'
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: <p>Service principal name of the service that created the rule.</p> <note> <p>The field is populated only if the service linked rule is created by a service. The field is empty if you create your own rule.</p> </note>
      description: '<p>An Config rule represents an Lambda function that you create for a custom rule or a predefined function for an Config managed rule. The function evaluates configuration items to assess whether your Amazon Web Services resources comply with your desired configurations. This function can run when Config detects a configuration change to an Amazon Web Services resource and at a periodic frequency that you choose (for example, every 24 hours).</p> <note> <p>You can use the Amazon Web Services CLI and Amazon Web Services SDKs if you want to create a rule that triggers evaluations for your resources when Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> </note> <p>For more information about developing and using Config rules, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating Amazon Web Services resource Configurations with Config</a> in the <i>Config Developer Guide</i>.</p>'
    ConfigRuleComplianceFilters:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>The rule compliance status.</p> <p>For the <code>ConfigRuleComplianceFilters</code> data type, Config supports only <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. Config does not support the <code>NOT_APPLICABLE</code> and the <code>INSUFFICIENT_DATA</code> values.</p>'
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: 'The 12-digit account ID of the source account. '
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: 'The source region where the data is aggregated. '
      description: 'Filters the compliance results based on account ID, region, compliance type, and rule name.'
    ConfigRuleComplianceSummaryFilters:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the source account.
        AwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region where the data is aggregated.
      description: Filters the results based on the account IDs and regions.
    ConfigRuleComplianceSummaryGroupKey:
      type: string
      enum:
        - ACCOUNT_ID
        - AWS_REGION
    ConfigRuleEvaluationStatus:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        ConfigRuleArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Config rule.
        ConfigRuleId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Config rule.
        LastSuccessfulInvocationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that Config last successfully invoked the Config rule to evaluate your Amazon Web Services resources.
        LastFailedInvocationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that Config last failed to invoke the Config rule to evaluate your Amazon Web Services resources.
        LastSuccessfulEvaluationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that Config last successfully evaluated your Amazon Web Services resources against the rule.
        LastFailedEvaluationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that Config last failed to evaluate your Amazon Web Services resources against the rule.
        FirstActivatedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that you first activated the Config rule.
        LastDeactivatedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time that you last turned off the Config rule.
        LastErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code that Config returned when the rule last failed.
        LastErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message that Config returned when the rule last failed.
        FirstEvaluationStarted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: <p>Indicates whether Config has evaluated your resources against the rule at least once.</p> <ul> <li> <p> <code>true</code> - Config has evaluated your Amazon Web Services resources against the rule at least once.</p> </li> <li> <p> <code>false</code> - Config has not once finished evaluating your Amazon Web Services resources against the rule.</p> </li> </ul>
      description: '<p>Status information for your Config managed rules. The status includes information such as the last time the rule ran, the last time it failed, and the related error for the last failure.</p> <p>This action does not return status information about custom Config rules.</p>'
    ConfigRuleEvaluationStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigRuleEvaluationStatus'
    ConfigRuleNames:
      type: array
      items:
        $ref: '#/components/schemas/ConfigRuleName'
      minItems: 0
      maxItems: 25
    ConfigRules:
      type: array
      items:
        $ref: '#/components/schemas/ConfigRule'
    ConfigSnapshotDeliveryProperties:
      type: object
      properties:
        deliveryFrequency:
          allOf:
            - $ref: '#/components/schemas/MaximumExecutionFrequency'
            - description: The frequency with which Config delivers configuration snapshots.
      description: '<p>Provides options for how often Config delivers configuration snapshots to the Amazon S3 bucket in your delivery channel.</p> <p>The frequency for a rule that triggers evaluations for your resources when Config delivers the configuration snapshot is set by one of two values, depending on which is less frequent:</p> <ul> <li> <p>The value for the <code>deliveryFrequency</code> parameter within the delivery channel configuration, which sets how often Config delivers configuration snapshots. This value also sets how often Config invokes evaluations for Config rules.</p> </li> <li> <p>The value for the <code>MaximumExecutionFrequency</code> parameter, which sets the maximum frequency with which Config invokes evaluations for the rule. For more information, see <a>ConfigRule</a>.</p> </li> </ul> <p>If the <code>deliveryFrequency</code> value is less frequent than the <code>MaximumExecutionFrequency</code> value for a rule, Config invokes the rule only as often as the <code>deliveryFrequency</code> value.</p> <ol> <li> <p>For example, you want your rule to run evaluations when Config delivers the configuration snapshot.</p> </li> <li> <p>You specify the <code>MaximumExecutionFrequency</code> value for <code>Six_Hours</code>. </p> </li> <li> <p>You then specify the delivery channel <code>deliveryFrequency</code> value for <code>TwentyFour_Hours</code>.</p> </li> <li> <p>Because the value for <code>deliveryFrequency</code> is less frequent than <code>MaximumExecutionFrequency</code>, Config invokes evaluations for the rule every 24 hours. </p> </li> </ol> <p>You should set the <code>MaximumExecutionFrequency</code> value to be at least as frequent as the <code>deliveryFrequency</code> value. You can view the <code>deliveryFrequency</code> value by using the <code>DescribeDeliveryChannnels</code> action.</p> <p>To update the <code>deliveryFrequency</code> with which Config delivers your configuration snapshots, use the <code>PutDeliveryChannel</code> action.</p>'
    ConfigStreamDeliveryInfo:
      type: object
      properties:
        lastStatus:
          allOf:
            - $ref: '#/components/schemas/DeliveryStatus'
            - description: '<p>Status of the last attempted delivery.</p> <p> <b>Note</b> Providing an SNS topic on a <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DeliveryChannel.html">DeliveryChannel</a> for Config is optional. If the SNS delivery is turned off, the last status will be <b>Not_Applicable</b>.</p>'
        lastErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code from the last attempted delivery.
        lastErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message from the last attempted delivery.
        lastStatusChangeTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time from the last status change.
      description: A list that contains the status of the delivery of the configuration stream notification to the Amazon SNS topic.
    ConfigurationAggregatorArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:config:[a-z\-\d]+:\d+:config-aggregator/config-aggregator-[a-z\d]+'
    OrganizationAggregationSource:
      type: object
      required:
        - RoleArn
      properties:
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: ARN of the IAM role used to retrieve Amazon Web Services Organization details associated with the aggregator account.
        AwsRegions:
          allOf:
            - $ref: '#/components/schemas/AggregatorRegionList'
            - description: The source regions being aggregated.
        AllAwsRegions:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If true, aggregate existing Config regions and future regions.'
      description: This object contains regions to set up the aggregator and an IAM role to retrieve organization details.
    ConfigurationAggregator:
      type: object
      properties:
        ConfigurationAggregatorName:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorName'
            - description: The name of the aggregator.
        ConfigurationAggregatorArn:
          allOf:
            - $ref: '#/components/schemas/ConfigurationAggregatorArn'
            - description: The Amazon Resource Name (ARN) of the aggregator.
        AccountAggregationSources:
          allOf:
            - $ref: '#/components/schemas/AccountAggregationSourceList'
            - description: Provides a list of source accounts and regions to be aggregated.
        OrganizationAggregationSource:
          allOf:
            - $ref: '#/components/schemas/OrganizationAggregationSource'
            - description: Provides an organization and list of regions to be aggregated.
        CreationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time stamp when the configuration aggregator was created.
        LastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time of the last update.
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Amazon Web Services service that created the configuration aggregator.
      description: 'The details about the configuration aggregator, including information about source accounts, regions, and metadata of the aggregator. '
    ConfigurationAggregatorList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationAggregator'
    ConfigurationAggregatorNameList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationAggregatorName'
      minItems: 0
      maxItems: 10
    ConfigurationItemMD5Hash:
      type: string
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    RelatedEventList:
      type: array
      items:
        $ref: '#/components/schemas/RelatedEvent'
    RelationshipList:
      type: array
      items:
        $ref: '#/components/schemas/Relationship'
    ConfigurationItem:
      type: object
      properties:
        version:
          allOf:
            - $ref: '#/components/schemas/Version'
            - description: The version number of the resource configuration.
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit Amazon Web Services account ID associated with the resource.
        configurationItemCaptureTime:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemCaptureTime'
            - description: The time when the configuration recording was initiated.
        configurationItemStatus:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemStatus'
            - description: '<p>The configuration item status. The valid values are:</p> <ul> <li> <p>OK – The resource configuration has been updated</p> </li> <li> <p>ResourceDiscovered – The resource was newly discovered</p> </li> <li> <p>ResourceNotRecorded – The resource was discovered but its configuration was not recorded since the recorder excludes the recording of resources of this type</p> </li> <li> <p>ResourceDeleted – The resource was deleted</p> </li> <li> <p>ResourceDeletedNotRecorded – The resource was deleted but its configuration was not recorded since the recorder excludes the recording of resources of this type</p> </li> </ul> <note> <p>The CIs do not incur any cost.</p> </note>'
        configurationStateId:
          allOf:
            - $ref: '#/components/schemas/ConfigurationStateId'
            - description: An identifier that indicates the ordering of the configuration items of a resource.
        configurationItemMD5Hash:
          allOf:
            - $ref: '#/components/schemas/ConfigurationItemMD5Hash'
            - description: <p>Unique MD5 hash that represents the configuration item's state.</p> <p>You can use MD5 hash to compare the states of two or more configuration items that are associated with the same resource.</p>
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: Amazon Resource Name (ARN) associated with the resource.
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of Amazon Web Services resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the resource (for example, <code>sg-xxxxxx</code>).'
        resourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: 'The custom name of the resource, if available.'
        awsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region where the resource resides.
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZone'
            - description: The Availability Zone associated with the resource.
        resourceCreationTime:
          allOf:
            - $ref: '#/components/schemas/ResourceCreationTime'
            - description: The time stamp when the resource was created.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: A mapping of key value tags associated with the resource.
        relatedEvents:
          allOf:
            - $ref: '#/components/schemas/RelatedEventList'
            - description: '<p>A list of CloudTrail event IDs.</p> <p>A populated field indicates that the current configuration was initiated by the events recorded in the CloudTrail log. For more information about CloudTrail, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">What Is CloudTrail</a>.</p> <p>An empty field indicates that the current configuration was not initiated by any event. As of Version 1.3, the relatedEvents field is empty. You can access the <a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_LookupEvents.html">LookupEvents API</a> in the <i>CloudTrail API Reference</i> to retrieve the events for the resource.</p>'
        relationships:
          allOf:
            - $ref: '#/components/schemas/RelationshipList'
            - description: A list of related Amazon Web Services resources.
        configuration:
          allOf:
            - $ref: '#/components/schemas/Configuration'
            - description: The description of the resource configuration.
        supplementaryConfiguration:
          allOf:
            - $ref: '#/components/schemas/SupplementaryConfiguration'
            - description: Configuration attributes that Config returns for certain resource types to supplement the information returned for the <code>configuration</code> parameter.
      description: A list that contains detailed configurations of a specified resource.
    ConfigurationItemList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationItem'
    RecorderName:
      type: string
      minLength: 1
      maxLength: 256
    RecordingGroup:
      type: object
      properties:
        allSupported:
          allOf:
            - $ref: '#/components/schemas/AllSupported'
            - description: '<p>Specifies whether Config records configuration changes for every supported type of regional resource.</p> <p>If you set this option to <code>true</code>, when Config adds support for a new type of regional resource, it starts recording resources of that type automatically.</p> <p>If you set this option to <code>true</code>, you cannot enumerate a list of <code>resourceTypes</code>.</p>'
        includeGlobalResourceTypes:
          allOf:
            - $ref: '#/components/schemas/IncludeGlobalResourceTypes'
            - description: '<p>Specifies whether Config includes all supported types of global resources (for example, IAM resources) with the resources that it records.</p> <p>Before you can set this option to <code>true</code>, you must set the <code>allSupported</code> option to <code>true</code>.</p> <p>If you set this option to <code>true</code>, when Config adds support for a new type of global resource, it starts recording resources of that type automatically.</p> <p>The configuration details for any global resource are the same in all regions. To prevent duplicate configuration items, you should consider customizing Config in only one region to record global resources.</p>'
        resourceTypes:
          allOf:
            - $ref: '#/components/schemas/ResourceTypeList'
            - description: '<p>A comma-separated list that specifies the types of Amazon Web Services resources for which Config records configuration changes (for example, <code>AWS::EC2::Instance</code> or <code>AWS::CloudTrail::Trail</code>).</p> <p>To record all configuration changes, you must set the <code>allSupported</code> option to <code>true</code>.</p> <p>If you set this option to <code>false</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>resourceType Value</b> column in <a href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported Amazon Web Services resource Types</a>.</p>'
      description: '<p>Specifies the types of Amazon Web Services resource for which Config records configuration changes.</p> <p>In the recording group, you specify whether all supported types or specific types of resources are recorded.</p> <p>By default, Config records configuration changes for all supported types of regional resources that Config discovers in the region in which it is running. Regional resources are tied to a region and can be used only in that region. Examples of regional resources are EC2 instances and EBS volumes.</p> <p>You can also have Config record configuration changes for supported types of global resources (for example, IAM resources). Global resources are not tied to an individual region and can be used in all regions.</p> <important> <p>The configuration details for any global resource are the same in all regions. If you customize Config in multiple regions to record global resources, it will create multiple configuration items each time a global resource changes: one configuration item for each region. These configuration items will contain identical data. To prevent duplicate configuration items, you should consider customizing Config in only one region to record global resources, unless you want the configuration items to be available in multiple regions.</p> </important> <p>If you don''t want Config to record all resources, you can specify which types of resources it will record with the <code>resourceTypes</code> parameter.</p> <p>For a list of supported resource types, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported Resource Types</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html">Selecting Which Resources Config Records</a>.</p>'
    ConfigurationRecorder:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/RecorderName'
            - description: 'The name of the recorder. By default, Config automatically assigns the name "default" when creating the configuration recorder. You cannot change the assigned name.'
        roleARN:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Amazon Resource Name (ARN) of the IAM role used to describe the Amazon Web Services resources associated with the account.
        recordingGroup:
          allOf:
            - $ref: '#/components/schemas/RecordingGroup'
            - description: Specifies the types of Amazon Web Services resources for which Config records configuration changes.
      description: An object that represents the recording of configuration changes of an Amazon Web Services resource.
    ConfigurationRecorderList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationRecorder'
    ConfigurationRecorderNameList:
      type: array
      items:
        $ref: '#/components/schemas/RecorderName'
    RecorderStatus:
      type: string
      enum:
        - Pending
        - Success
        - Failure
    ConfigurationRecorderStatus:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the configuration recorder.
        lastStartTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time the recorder was last started.
        lastStopTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time the recorder was last stopped.
        recording:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether or not the recorder is currently recording.
        lastStatus:
          allOf:
            - $ref: '#/components/schemas/RecorderStatus'
            - description: The last (previous) status of the recorder.
        lastErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code indicating that the recording failed.
        lastErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The message indicating that the recording failed due to an error.
        lastStatusChangeTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the status was last changed.
      description: The current status of the configuration recorder.
    ConfigurationRecorderStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationRecorderStatus'
    ConformancePackArn:
      type: string
      minLength: 1
      maxLength: 2048
    ConformancePackConfigRuleNames:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit64'
      minItems: 0
      maxItems: 10
    ConformancePackComplianceFilters:
      type: object
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConformancePackConfigRuleNames'
            - description: Filters the results by Config rule names.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. <code>INSUFFICIENT_DATA</code> is not supported.</p>
      description: Filters the conformance pack by compliance types and Config rule names.
    ConformancePackComplianceResourceIds:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit256'
      minItems: 0
      maxItems: 5
    ConformancePackComplianceSummary:
      type: object
      required:
        - ConformancePackName
        - ConformancePackComplianceStatus
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: The name of the conformance pack name.
        ConformancePackComplianceStatus:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: 'The status of the conformance pack. The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code> and <code>INSUFFICIENT_DATA</code>.'
      description: Summary includes the name and status of the conformance pack.
    ConformancePackComplianceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackComplianceSummary'
      minItems: 1
      maxItems: 5
    ConformancePackId:
      type: string
      minLength: 1
      maxLength: 1024
    DeliveryS3Bucket:
      type: string
      minLength: 0
      maxLength: 63
    DeliveryS3KeyPrefix:
      type: string
      minLength: 0
      maxLength: 1024
    ConformancePackInputParameters:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackInputParameter'
      minItems: 0
      maxItems: 60
    ConformancePackDetail:
      type: object
      required:
        - ConformancePackName
        - ConformancePackArn
        - ConformancePackId
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        ConformancePackArn:
          allOf:
            - $ref: '#/components/schemas/ConformancePackArn'
            - description: Amazon Resource Name (ARN) of the conformance pack.
        ConformancePackId:
          allOf:
            - $ref: '#/components/schemas/ConformancePackId'
            - description: ID of the conformance pack.
        DeliveryS3Bucket:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3Bucket'
            - description: <p>The name of the Amazon S3 bucket where Config stores conformance pack templates. </p> <note> <p>This field is optional.</p> </note>
        DeliveryS3KeyPrefix:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3KeyPrefix'
            - description: <p>The prefix for the Amazon S3 bucket.</p> <note> <p>This field is optional.</p> </note>
        ConformancePackInputParameters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackInputParameters'
            - description: A list of <code>ConformancePackInputParameter</code> objects.
        LastUpdateRequestedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: 'Last time when conformation pack update was requested. '
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Amazon Web Services service that created the conformance pack.
      description: Returns details of a conformance pack. A conformance pack is a collection of Config rules and remediation actions that can be easily deployed in an account and a region.
    ConformancePackDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackDetail'
      minItems: 0
      maxItems: 25
    ConformancePackEvaluationFilters:
      type: object
      properties:
        ConfigRuleNames:
          allOf:
            - $ref: '#/components/schemas/ConformancePackConfigRuleNames'
            - description: Filters the results by Config rule names.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: <p>Filters the results by compliance.</p> <p>The allowed values are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. <code>INSUFFICIENT_DATA</code> is not supported.</p>
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'Filters the results by the resource type (for example, <code>"AWS::EC2::Instance"</code>). '
        ResourceIds:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceResourceIds'
            - description: '<p>Filters the results by resource IDs.</p> <note> <p>This is valid only when you provide resource type. If there is no resource type, you will see an error.</p> </note>'
      description: 'Filters a conformance pack by Config rule names, compliance types, Amazon Web Services resource types, and resource IDs.'
    ConformancePackEvaluationResult:
      type: object
      required:
        - ComplianceType
        - EvaluationResultIdentifier
        - ConfigRuleInvokedTime
        - ResultRecordedTime
      properties:
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: The compliance type. The allowed values are <code>COMPLIANT</code> and <code>NON_COMPLIANT</code>. <code>INSUFFICIENT_DATA</code> is not supported.
        EvaluationResultIdentifier:
          $ref: '#/components/schemas/EvaluationResultIdentifier'
        ConfigRuleInvokedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when Config rule evaluated Amazon Web Services resource.
        ResultRecordedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: 'The time when Config recorded the evaluation result. '
        Annotation:
          allOf:
            - $ref: '#/components/schemas/Annotation'
            - description: 'Supplementary information about how the evaluation determined the compliance. '
      description: 'The details of a conformance pack evaluation. Provides Config rule and Amazon Web Services resource type that was evaluated, the compliance of the conformance pack, related time stamps, and supplementary information. '
    ParameterName:
      type: string
      minLength: 0
      maxLength: 255
    ParameterValue:
      type: string
      minLength: 0
      maxLength: 4096
    ConformancePackInputParameter:
      type: object
      required:
        - ParameterName
        - ParameterValue
      properties:
        ParameterName:
          allOf:
            - $ref: '#/components/schemas/ParameterName'
            - description: One part of a key-value pair.
        ParameterValue:
          allOf:
            - $ref: '#/components/schemas/ParameterValue'
            - description: 'Another part of the key-value pair. '
      description: 'Input parameters in the form of key-value pairs for the conformance pack, both of which you define. Keys can have a maximum character length of 255 characters, and values can have a maximum length of 4096 characters.'
    ConformancePackNamesList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackName'
      minItems: 0
      maxItems: 25
    ConformancePackNamesToSummarizeList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackName'
      minItems: 1
      maxItems: 5
    ControlsList:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit128'
      minItems: 0
      maxItems: 20
    ConformancePackRuleCompliance:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: Name of the config rule.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ConformancePackComplianceType'
            - description: '<p>Compliance of the Config rule.</p> <p>The allowed values are <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>INSUFFICIENT_DATA</code>.</p>'
        Controls:
          allOf:
            - $ref: '#/components/schemas/ControlsList'
            - description: Controls for the conformance pack. A control is a process to prevent or detect problems while meeting objectives. A control can align with a specific compliance regime or map to internal controls defined by an organization.
      description: Compliance information of one or more Config rules within a conformance pack. You can filter using Config rule names and compliance types.
    ConformancePackRuleComplianceList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackRuleCompliance'
      minItems: 0
      maxItems: 1000
    ConformancePackRuleEvaluationResultsList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackEvaluationResult'
      minItems: 0
      maxItems: 100
    ConformancePackState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_COMPLETE
        - CREATE_FAILED
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
    StackArn:
      type: string
      minLength: 1
      maxLength: 2048
    ConformancePackStatusReason:
      type: string
      minLength: 0
      maxLength: 2000
    ConformancePackStatusDetail:
      type: object
      required:
        - ConformancePackName
        - ConformancePackId
        - ConformancePackArn
        - ConformancePackState
        - StackArn
        - LastUpdateRequestedTime
      properties:
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/ConformancePackName'
            - description: Name of the conformance pack.
        ConformancePackId:
          allOf:
            - $ref: '#/components/schemas/ConformancePackId'
            - description: ID of the conformance pack.
        ConformancePackArn:
          allOf:
            - $ref: '#/components/schemas/ConformancePackArn'
            - description: Amazon Resource Name (ARN) of comformance pack.
        ConformancePackState:
          allOf:
            - $ref: '#/components/schemas/ConformancePackState'
            - description: '<p>Indicates deployment status of conformance pack.</p> <p>Config sets the state of the conformance pack to:</p> <ul> <li> <p>CREATE_IN_PROGRESS when a conformance pack creation is in progress for an account.</p> </li> <li> <p>CREATE_COMPLETE when a conformance pack has been successfully created in your account.</p> </li> <li> <p>CREATE_FAILED when a conformance pack creation failed in your account.</p> </li> <li> <p>DELETE_IN_PROGRESS when a conformance pack deletion is in progress. </p> </li> <li> <p>DELETE_FAILED when a conformance pack deletion failed in your account.</p> </li> </ul>'
        StackArn:
          allOf:
            - $ref: '#/components/schemas/StackArn'
            - description: 'Amazon Resource Name (ARN) of CloudFormation stack. '
        ConformancePackStatusReason:
          allOf:
            - $ref: '#/components/schemas/ConformancePackStatusReason'
            - description: The reason of conformance pack creation failure.
        LastUpdateRequestedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Last time when conformation pack creation and update was requested.
        LastUpdateCompletedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Last time when conformation pack creation and update was successful.
      description: Status details of a conformance pack.
    ConformancePackStatusDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/ConformancePackStatusDetail'
      minItems: 0
      maxItems: 25
    StringWithCharLimit128:
      type: string
      minLength: 1
      maxLength: 128
    CosmosPageLimit:
      type: integer
      minimum: 0
      maximum: 100
    OrganizationConfigRuleName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 64
    OrganizationConformancePackName:
      type: string
      pattern: '[a-zA-Z][-a-zA-Z0-9]*'
      minLength: 1
      maxLength: 128
    RemediationExceptionResourceKeys:
      type: array
      items:
        $ref: '#/components/schemas/RemediationExceptionResourceKey'
      minItems: 1
      maxItems: 100
    FailedDeleteRemediationExceptionsBatches:
      type: array
      items:
        $ref: '#/components/schemas/FailedDeleteRemediationExceptionsBatch'
    ResourceTypeString:
      type: string
      minLength: 1
      maxLength: 196
    RetentionConfigurationName:
      type: string
      pattern: '[\w\-]+'
      minLength: 1
      maxLength: 256
    QueryName:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 64
    DeliveryChannel:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/ChannelName'
            - description: 'The name of the delivery channel. By default, Config assigns the name "default" when creating the delivery channel. To change the delivery channel name, you must use the DeleteDeliveryChannel action to delete your current delivery channel, and then you must use the PutDeliveryChannel command to create a delivery channel that has the desired name.'
        s3BucketName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The name of the Amazon S3 bucket to which Config delivers configuration snapshots and configuration history files.</p> <p>If you specify a bucket that belongs to another Amazon Web Services account, that bucket must have policies that grant access permissions to Config. For more information, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html">Permissions for the Amazon S3 Bucket</a> in the Config Developer Guide.</p>'
        s3KeyPrefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix for the specified Amazon S3 bucket.
        s3KmsKeyArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Amazon Resource Name (ARN) of the Key Management Service (KMS ) KMS key (KMS key) used to encrypt objects delivered by Config. Must belong to the same Region as the destination S3 bucket.
        snsTopicARN:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which Config sends notifications about configuration changes.</p> <p>If you choose a topic from another account, the topic must have policies that grant access permissions to Config. For more information, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/sns-topic-policy.html">Permissions for the Amazon SNS Topic</a> in the Config Developer Guide.</p>'
        configSnapshotDeliveryProperties:
          allOf:
            - $ref: '#/components/schemas/ConfigSnapshotDeliveryProperties'
            - description: The options for how often Config delivers configuration snapshots to the Amazon S3 bucket.
      description: The channel through which Config delivers notifications and updated configuration states.
    DeliveryChannelList:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryChannel'
    DeliveryChannelNameList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelName'
    DeliveryChannelStatus:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the delivery channel.
        configSnapshotDeliveryInfo:
          allOf:
            - $ref: '#/components/schemas/ConfigExportDeliveryInfo'
            - description: A list containing the status of the delivery of the snapshot to the specified Amazon S3 bucket.
        configHistoryDeliveryInfo:
          allOf:
            - $ref: '#/components/schemas/ConfigExportDeliveryInfo'
            - description: A list that contains the status of the delivery of the configuration history to the specified Amazon S3 bucket.
        configStreamDeliveryInfo:
          allOf:
            - $ref: '#/components/schemas/ConfigStreamDeliveryInfo'
            - description: A list containing the status of the delivery of the configuration stream notification to the specified Amazon SNS topic.
      description: '<p>The status of a specified delivery channel.</p> <p>Valid values: <code>Success</code> | <code>Failure</code> </p>'
    DeliveryChannelStatusList:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryChannelStatus'
    GroupByAPILimit:
      type: integer
      minimum: 0
      maximum: 1000
    NextToken:
      type: string
    Limit:
      type: integer
      minimum: 0
      maximum: 100
    RuleLimit:
      type: integer
      minimum: 0
      maximum: 50
    DescribeConformancePackComplianceLimit:
      type: integer
      minimum: 0
      maximum: 1000
    PageSizeLimit:
      type: integer
      minimum: 0
      maximum: 20
    OrganizationConfigRuleNames:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit64'
      minItems: 0
      maxItems: 25
    OrganizationConfigRuleStatuses:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConfigRuleStatus'
    OrganizationConfigRules:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConfigRule'
    OrganizationConformancePackNames:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConformancePackName'
      minItems: 0
      maxItems: 25
    OrganizationConformancePackStatuses:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConformancePackStatus'
    OrganizationConformancePacks:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConformancePack'
    DescribePendingAggregationRequestsLimit:
      type: integer
      minimum: 0
      maximum: 20
    PendingAggregationRequestList:
      type: array
      items:
        $ref: '#/components/schemas/PendingAggregationRequest'
    RemediationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/RemediationConfiguration'
      minItems: 0
      maxItems: 25
    RemediationExceptions:
      type: array
      items:
        $ref: '#/components/schemas/RemediationException'
      minItems: 0
      maxItems: 25
    RemediationExecutionStatuses:
      type: array
      items:
        $ref: '#/components/schemas/RemediationExecutionStatus'
    RetentionConfigurationNameList:
      type: array
      items:
        $ref: '#/components/schemas/RetentionConfigurationName'
      minItems: 0
      maxItems: 1
    RetentionConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/RetentionConfiguration'
    DiscoveredResourceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateResourceIdentifier'
    EarlierTime:
      type: string
      format: date-time
    OrderingTimestamp:
      type: string
      format: date-time
    Evaluation:
      type: object
      required:
        - ComplianceResourceType
        - ComplianceResourceId
        - ComplianceType
        - OrderingTimestamp
      properties:
        ComplianceResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of Amazon Web Services resource that was evaluated.
        ComplianceResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: The ID of the Amazon Web Services resource that was evaluated.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>Indicates whether the Amazon Web Services resource complies with the Config rule that it was evaluated against.</p> <p>For the <code>Evaluation</code> data type, Config supports only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code> values. Config does not support the <code>INSUFFICIENT_DATA</code> value for this data type.</p> <p>Similarly, Config does not accept <code>INSUFFICIENT_DATA</code> as the value for <code>ComplianceType</code> from a <code>PutEvaluations</code> request. For example, an Lambda function for a custom Config rule cannot pass an <code>INSUFFICIENT_DATA</code> value to Config.</p>'
        Annotation:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Supplementary information about how the evaluation determined the compliance.
        OrderingTimestamp:
          allOf:
            - $ref: '#/components/schemas/OrderingTimestamp'
            - description: 'The time of the event in Config that triggered the evaluation. For event-based evaluations, the time indicates when Config created the configuration item that triggered the evaluation. For periodic evaluations, the time indicates when Config triggered the evaluation at the frequency that you specified (for example, every 24 hours).'
      description: Identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that it was evaluated against.
    EvaluationResult:
      type: object
      properties:
        EvaluationResultIdentifier:
          allOf:
            - $ref: '#/components/schemas/EvaluationResultIdentifier'
            - description: Uniquely identifies the evaluation result.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: '<p>Indicates whether the Amazon Web Services resource complies with the Config rule that evaluated it.</p> <p>For the <code>EvaluationResult</code> data type, Config supports only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code> values. Config does not support the <code>INSUFFICIENT_DATA</code> value for the <code>EvaluationResult</code> data type.</p>'
        ResultRecordedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when Config recorded the evaluation result.
        ConfigRuleInvokedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the Config rule evaluated the Amazon Web Services resource.
        Annotation:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Supplementary information about how the evaluation determined the compliance.
        ResultToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'An encrypted token that associates an evaluation with an Config rule. The token identifies the rule, the Amazon Web Services resource being evaluated, and the event that triggered the evaluation.'
      description: 'The details of an Config evaluation. Provides the Amazon Web Services resource that was evaluated, the compliance of the resource, related time stamps, and supplementary information.'
    EvaluationResultQualifier:
      type: object
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule that was used in the evaluation.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of Amazon Web Services resource that was evaluated.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: The ID of the evaluated Amazon Web Services resource.
      description: 'Identifies an Config rule that evaluated an Amazon Web Services resource, and provides the type and ID of the resource that the rule evaluated.'
    EvaluationResults:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationResult'
    Evaluations:
      type: array
      items:
        $ref: '#/components/schemas/Evaluation'
      minItems: 0
      maxItems: 100
    EventSource:
      type: string
      enum:
        - aws.config
    ExcludedAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      minItems: 0
      maxItems: 1000
    SsmControls:
      type: object
      properties:
        ConcurrentExecutionRatePercentage:
          allOf:
            - $ref: '#/components/schemas/Percentage'
            - description: 'The maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. You can specify a percentage, such as 10%. The default value is 10. '
        ErrorPercentage:
          allOf:
            - $ref: '#/components/schemas/Percentage'
            - description: 'The percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. You can specify a percentage of errors, for example 10%. If you do not specifiy a percentage, the default is 50%. For example, if you set the ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops running the automations when the fifth error is received. '
      description: Amazon Web Services Systems Manager (SSM) specific remediation controls.
    ExecutionControls:
      type: object
      properties:
        SsmControls:
          allOf:
            - $ref: '#/components/schemas/SsmControls'
            - description: A SsmControls object.
      description: The controls that Config uses for executing remediations.
    Expression:
      type: string
      minLength: 1
      maxLength: 4096
    ExternalEvaluation:
      type: object
      required:
        - ComplianceResourceType
        - ComplianceResourceId
        - ComplianceType
        - OrderingTimestamp
      properties:
        ComplianceResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The evaluated compliance resource type. Config accepts <code>AWS::::Account</code> resource type.'
        ComplianceResourceId:
          allOf:
            - $ref: '#/components/schemas/BaseResourceId'
            - description: The evaluated compliance resource ID. Config accepts only Amazon Web Services account ID.
        ComplianceType:
          allOf:
            - $ref: '#/components/schemas/ComplianceType'
            - description: 'The compliance of the Amazon Web Services resource. The valid values are <code>COMPLIANT, NON_COMPLIANT, </code> and <code>NOT_APPLICABLE</code>.'
        Annotation:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'Supplementary information about the reason of compliance. For example, this task was completed on a specific date.'
        OrderingTimestamp:
          allOf:
            - $ref: '#/components/schemas/OrderingTimestamp'
            - description: 'The time when the compliance was recorded. '
      description: Identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that it was evaluated against.
    FailedDeleteRemediationExceptionsBatch:
      type: object
      properties:
        FailureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Returns a failure message for delete remediation exception. For example, Config creates an exception due to an internal error.'
        FailedItems:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptionResourceKeys'
            - description: Returns remediation exception resource key object of the failed items.
      description: List of each of the failed delete remediation exceptions with specific reasons.
    FailedRemediationBatch:
      type: object
      properties:
        FailureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Returns a failure message. For example, the resource is already compliant.'
        FailedItems:
          allOf:
            - $ref: '#/components/schemas/RemediationConfigurations'
            - description: Returns remediation configurations of the failed items.
      description: List of each of the failed remediations with specific reasons.
    FailedRemediationBatches:
      type: array
      items:
        $ref: '#/components/schemas/FailedRemediationBatch'
    FailedRemediationExceptionBatch:
      type: object
      properties:
        FailureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Returns a failure message. For example, the auto-remediation has failed.'
        FailedItems:
          allOf:
            - $ref: '#/components/schemas/RemediationExceptions'
            - description: Returns remediation exception resource key object of the failed items.
      description: List of each of the failed remediation exceptions with specific reasons.
    FailedRemediationExceptionBatches:
      type: array
      items:
        $ref: '#/components/schemas/FailedRemediationExceptionBatch'
    FieldName:
      type: string
    FieldInfo:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/FieldName'
            - description: Name of the field.
      description: Details about the fields such as name of the field.
    FieldInfoList:
      type: array
      items:
        $ref: '#/components/schemas/FieldInfo'
    ResourceCountFilters:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of the Amazon Web Services resource.
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit ID of the account.
        Region:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The region where the account is located.
      description: 'Filters the resource count based on account ID, region, and resource type.'
    ResourceCountGroupKey:
      type: string
      enum:
        - RESOURCE_TYPE
        - ACCOUNT_ID
        - AWS_REGION
    Long:
      type: integer
    GroupedResourceCountList:
      type: array
      items:
        $ref: '#/components/schemas/GroupedResourceCount'
    ResourceTypes:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit256'
      minItems: 0
      maxItems: 20
    GetConformancePackComplianceDetailsLimit:
      type: integer
      minimum: 0
      maximum: 100
    ResourceCounts:
      type: array
      items:
        $ref: '#/components/schemas/ResourceCount'
    StatusDetailFilters:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the member account within an organization.
        MemberAccountRuleStatus:
          allOf:
            - $ref: '#/components/schemas/MemberAccountRuleStatus'
            - description: '<p>Indicates deployment status for config rule in the member account. When master account calls <code>PutOrganizationConfigRule</code> action for the first time, config rule status is created in the member account. When master account calls <code>PutOrganizationConfigRule</code> action for the second time, config rule status is updated in the member account. Config rule status is deleted when the master account deletes <code>OrganizationConfigRule</code> and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p>Config sets the state of the rule to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when config rule has been created in the member account.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when config rule is being created in the member account.</p> </li> <li> <p> <code>CREATE_FAILED</code> when config rule creation has failed in the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code> when config rule deletion has failed in the member account.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when config rule is being deleted in the member account.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when config rule has been deleted in the member account.</p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when config rule has been updated in the member account.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when config rule is being updated in the member account.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when config rule deletion has failed in the member account.</p> </li> </ul>'
      description: 'Status filter object to filter results based on specific member account ID or status type for an organization config rule. '
    OrganizationConfigRuleDetailedStatus:
      type: array
      items:
        $ref: '#/components/schemas/MemberAccountStatus'
    OrganizationResourceDetailedStatusFilters:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the member account within an organization.
        Status:
          allOf:
            - $ref: '#/components/schemas/OrganizationResourceDetailedStatus'
            - description: '<p>Indicates deployment status for conformance pack in a member account. When master account calls <code>PutOrganizationConformancePack</code> action for the first time, conformance pack status is created in the member account. When master account calls <code>PutOrganizationConformancePack</code> action for the second time, conformance pack status is updated in the member account. Conformance pack status is deleted when the master account deletes <code>OrganizationConformancePack</code> and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p> Config sets the state of the conformance pack to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when conformance pack has been created in the member account. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when conformance pack is being created in the member account.</p> </li> <li> <p> <code>CREATE_FAILED</code> when conformance pack creation has failed in the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when conformance pack is being deleted in the member account.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when conformance pack has been deleted in the member account. </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when conformance pack has been updated in the member account.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when conformance pack is being updated in the member account.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> </ul>'
      description: Status filter object to filter results based on specific member account ID or status type for an organization conformance pack.
    OrganizationConformancePackDetailedStatuses:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConformancePackDetailedStatus'
    LaterTime:
      type: string
      format: date-time
    StoredQuery:
      type: object
      required:
        - QueryName
      properties:
        QueryId:
          allOf:
            - $ref: '#/components/schemas/QueryId'
            - description: The ID of the query.
        QueryArn:
          allOf:
            - $ref: '#/components/schemas/QueryArn'
            - description: 'Amazon Resource Name (ARN) of the query. For example, arn:partition:service:region:account-id:resource-type/resource-name/resource-id.'
        QueryName:
          allOf:
            - $ref: '#/components/schemas/QueryName'
            - description: The name of the query.
        Description:
          allOf:
            - $ref: '#/components/schemas/QueryDescription'
            - description: A unique description for the query.
        Expression:
          allOf:
            - $ref: '#/components/schemas/QueryExpression'
            - description: 'The expression of the query. For example, <code>SELECT resourceId, resourceType, supplementaryConfiguration.BucketVersioningConfiguration.status WHERE resourceType = ''AWS::S3::Bucket'' AND supplementaryConfiguration.BucketVersioningConfiguration.status = ''Off''.</code> '
      description: Provides the details of a stored query.
    GroupedResourceCount:
      type: object
      required:
        - GroupName
        - ResourceCount
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The name of the group that can be region, account ID, or resource type. For example, region1, region2 if the region was chosen as <code>GroupByKey</code>.'
        ResourceCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of resources in the group.
      description: The count of resources that are grouped by the group name.
    IncludeGlobalResourceTypes:
      type: boolean
    ResourceFilters:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit source account ID.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the resource.
        ResourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name of the resource.
        Region:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: The source region.
      description: 'Filters the results by resource account ID, region, resource ID, and resource name.'
    ResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceId'
    ResourceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceIdentifier'
    StoredQueryMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/StoredQueryMetadata'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    MemberAccountRuleStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
    MemberAccountStatus:
      type: object
      required:
        - AccountId
        - ConfigRuleName
        - MemberAccountRuleStatus
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of a member account.
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit64'
            - description: The name of config rule deployed in the member account.
        MemberAccountRuleStatus:
          allOf:
            - $ref: '#/components/schemas/MemberAccountRuleStatus'
            - description: '<p>Indicates deployment status for config rule in the member account. When master account calls <code>PutOrganizationConfigRule</code> action for the first time, config rule status is created in the member account. When master account calls <code>PutOrganizationConfigRule</code> action for the second time, config rule status is updated in the member account. Config rule status is deleted when the master account deletes <code>OrganizationConfigRule</code> and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p> Config sets the state of the rule to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when config rule has been created in the member account. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when config rule is being created in the member account.</p> </li> <li> <p> <code>CREATE_FAILED</code> when config rule creation has failed in the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code> when config rule deletion has failed in the member account.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when config rule is being deleted in the member account.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when config rule has been deleted in the member account. </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when config rule has been updated in the member account.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when config rule is being updated in the member account.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when config rule deletion has failed in the member account.</p> </li> </ul>'
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error code that is returned when config rule creation or deletion failed in the member account.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error message indicating that config rule account creation or deletion has failed due to an error in the member account.
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The timestamp of the last status update.
      description: 'Organization config rule creation or deletion status in each member account. This includes the name of the rule, the status, error code and error message when the rule creation or deletion failed.'
    MessageType:
      type: string
      enum:
        - ConfigurationItemChangeNotification
        - ConfigurationSnapshotDeliveryCompleted
        - ScheduledNotification
        - OversizedConfigurationItemChangeNotification
    Name:
      type: string
    OrganizationManagedRuleMetadata:
      type: object
      required:
        - RuleIdentifier
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256Min0'
            - description: The description that you provide for organization config rule.
        RuleIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'For organization config managed rules, a predefined identifier from a list. For example, <code>IAM_PASSWORD_POLICY</code> is a managed rule. To reference a managed rule, see <a href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">Using Config managed rules</a>.'
        InputParameters:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit2048'
            - description: 'A string, in JSON format, that is passed to organization config rule Lambda function.'
        MaximumExecutionFrequency:
          allOf:
            - $ref: '#/components/schemas/MaximumExecutionFrequency'
            - description: '<p>The maximum frequency with which Config runs evaluations for a rule. You are using an Config managed rule that is triggered at a periodic frequency.</p> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> </note>'
        ResourceTypesScope:
          allOf:
            - $ref: '#/components/schemas/ResourceTypesScope'
            - description: The type of the Amazon Web Services resource that was evaluated.
        ResourceIdScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit768'
            - description: The ID of the Amazon Web Services resource that was evaluated.
        TagKeyScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit128'
            - description: 'One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values. '
        TagValueScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).
      description: An object that specifies organization managed rule metadata such as resource type and ID of Amazon Web Services resource along with the rule identifier. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic.
    OrganizationCustomRuleMetadata:
      type: object
      required:
        - LambdaFunctionArn
        - OrganizationConfigRuleTriggerTypes
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256Min0'
            - description: The description that you provide for organization config rule.
        LambdaFunctionArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The lambda function ARN.
        OrganizationConfigRuleTriggerTypes:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleTriggerTypes'
            - description: '<p>The type of notification that triggers Config to run an evaluation for a rule. You can specify the following notification types:</p> <ul> <li> <p> <code>ConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers a configuration item as a result of a resource change.</p> </li> <li> <p> <code>OversizedConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers an oversized configuration item. Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.</p> </li> <li> <p> <code>ScheduledNotification</code> - Triggers a periodic evaluation at the frequency specified for <code>MaximumExecutionFrequency</code>.</p> </li> </ul>'
        InputParameters:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit2048'
            - description: 'A string, in JSON format, that is passed to organization config rule Lambda function.'
        MaximumExecutionFrequency:
          allOf:
            - $ref: '#/components/schemas/MaximumExecutionFrequency'
            - description: '<p>The maximum frequency with which Config runs evaluations for a rule. Your custom rule is triggered when Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> </note>'
        ResourceTypesScope:
          allOf:
            - $ref: '#/components/schemas/ResourceTypesScope'
            - description: The type of the Amazon Web Services resource that was evaluated.
        ResourceIdScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit768'
            - description: The ID of the Amazon Web Services resource that was evaluated.
        TagKeyScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit128'
            - description: 'One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values. '
        TagValueScope:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: 'The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). '
      description: 'An object that specifies organization custom rule metadata such as resource type, resource ID of Amazon Web Services resource, Lambda function ARN, and organization trigger types that trigger Config to evaluate your Amazon Web Services resources against a rule. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic.'
    OrganizationConfigRule:
      type: object
      required:
        - OrganizationConfigRuleName
        - OrganizationConfigRuleArn
      properties:
        OrganizationConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleName'
            - description: The name that you assign to organization config rule.
        OrganizationConfigRuleArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Amazon Resource Name (ARN) of organization config rule.
        OrganizationManagedRuleMetadata:
          allOf:
            - $ref: '#/components/schemas/OrganizationManagedRuleMetadata'
            - description: An <code>OrganizationManagedRuleMetadata</code> object.
        OrganizationCustomRuleMetadata:
          allOf:
            - $ref: '#/components/schemas/OrganizationCustomRuleMetadata'
            - description: An <code>OrganizationCustomRuleMetadata</code> object.
        ExcludedAccounts:
          allOf:
            - $ref: '#/components/schemas/ExcludedAccounts'
            - description: A comma-separated list of accounts excluded from organization config rule.
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The timestamp of the last update.
      description: An organization config rule that has information about config rules that Config creates in member accounts.
    OrganizationRuleStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
    OrganizationConfigRuleStatus:
      type: object
      required:
        - OrganizationConfigRuleName
        - OrganizationRuleStatus
      properties:
        OrganizationConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConfigRuleName'
            - description: The name that you assign to organization config rule.
        OrganizationRuleStatus:
          allOf:
            - $ref: '#/components/schemas/OrganizationRuleStatus'
            - description: '<p>Indicates deployment status of an organization config rule. When master account calls PutOrganizationConfigRule action for the first time, config rule status is created in all the member accounts. When master account calls PutOrganizationConfigRule action for the second time, config rule status is updated in all the member accounts. Additionally, config rule status is updated when one or more member accounts join or leave an organization. Config rule status is deleted when the master account deletes OrganizationConfigRule in all the member accounts and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>.</p> <p>Config sets the state of the rule to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when an organization config rule has been successfully created in all the member accounts. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when an organization config rule creation is in progress.</p> </li> <li> <p> <code>CREATE_FAILED</code> when an organization config rule creation failed in one or more member accounts within that organization.</p> </li> <li> <p> <code>DELETE_FAILED</code> when an organization config rule deletion failed in one or more member accounts within that organization.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when an organization config rule deletion is in progress.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when an organization config rule has been successfully deleted from all the member accounts.</p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when an organization config rule has been successfully updated in all the member accounts.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when an organization config rule update is in progress.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when an organization config rule update failed in one or more member accounts within that organization.</p> </li> </ul>'
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error code that is returned when organization config rule creation or deletion has failed.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error message indicating that organization config rule creation or deletion failed due to an error.
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The timestamp of the last update.
      description: Returns the status for an organization config rule in an organization.
    OrganizationConfigRuleTriggerType:
      type: string
      enum:
        - ConfigurationItemChangeNotification
        - OversizedConfigurationItemChangeNotification
        - ScheduledNotification
    OrganizationConfigRuleTriggerTypes:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationConfigRuleTriggerType'
    OrganizationConformancePack:
      type: object
      required:
        - OrganizationConformancePackName
        - OrganizationConformancePackArn
        - LastUpdateTime
      properties:
        OrganizationConformancePackName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackName'
            - description: The name you assign to an organization conformance pack.
        OrganizationConformancePackArn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Amazon Resource Name (ARN) of organization conformance pack.
        DeliveryS3Bucket:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3Bucket'
            - description: <p>The name of the Amazon S3 bucket where Config stores conformance pack templates. </p> <note> <p>This field is optional.</p> </note>
        DeliveryS3KeyPrefix:
          allOf:
            - $ref: '#/components/schemas/DeliveryS3KeyPrefix'
            - description: <p>Any folder structure you want to add to an Amazon S3 bucket.</p> <note> <p>This field is optional.</p> </note>
        ConformancePackInputParameters:
          allOf:
            - $ref: '#/components/schemas/ConformancePackInputParameters'
            - description: A list of <code>ConformancePackInputParameter</code> objects.
        ExcludedAccounts:
          allOf:
            - $ref: '#/components/schemas/ExcludedAccounts'
            - description: A comma-separated list of accounts excluded from organization conformance pack.
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Last time when organization conformation pack was updated.
      description: 'An organization conformance pack that has information about conformance packs that Config creates in member accounts. '
    OrganizationResourceDetailedStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
    OrganizationConformancePackDetailedStatus:
      type: object
      required:
        - AccountId
        - ConformancePackName
        - Status
      properties:
        AccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of a member account.
        ConformancePackName:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The name of conformance pack deployed in the member account.
        Status:
          allOf:
            - $ref: '#/components/schemas/OrganizationResourceDetailedStatus'
            - description: '<p>Indicates deployment status for conformance pack in a member account. When master account calls <code>PutOrganizationConformancePack</code> action for the first time, conformance pack status is created in the member account. When master account calls <code>PutOrganizationConformancePack</code> action for the second time, conformance pack status is updated in the member account. Conformance pack status is deleted when the master account deletes <code>OrganizationConformancePack</code> and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p> Config sets the state of the conformance pack to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when conformance pack has been created in the member account. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when conformance pack is being created in the member account.</p> </li> <li> <p> <code>CREATE_FAILED</code> when conformance pack creation has failed in the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when conformance pack is being deleted in the member account.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when conformance pack has been deleted in the member account. </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when conformance pack has been updated in the member account.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when conformance pack is being updated in the member account.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> </ul>'
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'An error code that is returned when conformance pack creation or deletion failed in the member account. '
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'An error message indicating that conformance pack account creation or deletion has failed due to an error in the member account. '
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The timestamp of the last status update.
      description: 'Organization conformance pack creation or deletion status in each member account. This includes the name of the conformance pack, the status, error code and error message when the conformance pack creation or deletion failed. '
    OrganizationResourceStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
    OrganizationConformancePackStatus:
      type: object
      required:
        - OrganizationConformancePackName
        - Status
      properties:
        OrganizationConformancePackName:
          allOf:
            - $ref: '#/components/schemas/OrganizationConformancePackName'
            - description: The name that you assign to organization conformance pack.
        Status:
          allOf:
            - $ref: '#/components/schemas/OrganizationResourceStatus'
            - description: '<p>Indicates deployment status of an organization conformance pack. When master account calls PutOrganizationConformancePack for the first time, conformance pack status is created in all the member accounts. When master account calls PutOrganizationConformancePack for the second time, conformance pack status is updated in all the member accounts. Additionally, conformance pack status is updated when one or more member accounts join or leave an organization. Conformance pack status is deleted when the master account deletes OrganizationConformancePack in all the member accounts and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>.</p> <p>Config sets the state of the conformance pack to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when an organization conformance pack has been successfully created in all the member accounts. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when an organization conformance pack creation is in progress.</p> </li> <li> <p> <code>CREATE_FAILED</code> when an organization conformance pack creation failed in one or more member accounts within that organization.</p> </li> <li> <p> <code>DELETE_FAILED</code> when an organization conformance pack deletion failed in one or more member accounts within that organization.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when an organization conformance pack deletion is in progress.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when an organization conformance pack has been successfully deleted from all the member accounts.</p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when an organization conformance pack has been successfully updated in all the member accounts.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when an organization conformance pack update is in progress.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when an organization conformance pack update failed in one or more member accounts within that organization.</p> </li> </ul>'
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'An error code that is returned when organization conformance pack creation or deletion has failed in a member account. '
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'An error message indicating that organization conformance pack creation or deletion failed due to an error. '
        LastUpdateTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The timestamp of the last update.
      description: Returns the status for an organization conformance pack in an organization.
    StringWithCharLimit256Min0:
      type: string
      minLength: 0
      maxLength: 256
    StringWithCharLimit2048:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceTypesScope:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit256'
      minItems: 0
      maxItems: 100
    StringWithCharLimit768:
      type: string
      minLength: 1
      maxLength: 768
    Owner:
      type: string
      enum:
        - CUSTOM_LAMBDA
        - AWS
    PendingAggregationRequest:
      type: object
      properties:
        RequesterAccountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The 12-digit account ID of the account requesting to aggregate data.
        RequesterAwsRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: 'The region requesting to aggregate data. '
      description: An object that represents the account ID and region of an aggregator account that is requesting authorization but is not yet authorized.
    Percentage:
      type: integer
      minimum: 1
      maximum: 100
    TagsList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    TemplateS3Uri:
      type: string
      pattern: 's3://.*'
      minLength: 1
      maxLength: 1024
    TemplateBody:
      type: string
      minLength: 1
      maxLength: 51200
    SchemaVersionId:
      type: string
      pattern: '[A-Za-z0-9-]+'
      minLength: 1
      maxLength: 128
    RetentionPeriodInDays:
      type: integer
      minimum: 30
      maximum: 2557
    RetentionConfiguration:
      type: object
      required:
        - Name
        - RetentionPeriodInDays
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/RetentionConfigurationName'
            - description: The name of the retention configuration object.
        RetentionPeriodInDays:
          allOf:
            - $ref: '#/components/schemas/RetentionPeriodInDays'
            - description: '<p>Number of days Config stores your historical information.</p> <note> <p>Currently, only applicable to the configuration item history.</p> </note>'
      description: An object with the name of the retention configuration and the retention period in days. The object stores the configuration for data retention in Config.
    QueryArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:config:[a-z\-\d]+:\d+:stored-query/[a-zA-Z0-9-_]+/query-[a-zA-Z\d-_/]+$'
      minLength: 1
      maxLength: 500
    QueryDescription:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 256
    QueryExpression:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 4096
    QueryId:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 36
    QueryInfo:
      type: object
      properties:
        SelectFields:
          allOf:
            - $ref: '#/components/schemas/FieldInfoList'
            - description: Returns a <code>FieldInfo</code> object.
      description: Details about the query.
    ResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceType'
    ReevaluateConfigRuleNames:
      type: array
      items:
        $ref: '#/components/schemas/ConfigRuleName'
      minItems: 1
      maxItems: 25
    RelatedEvent:
      type: string
    RelationshipName:
      type: string
    Relationship:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The resource type of the related resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the related resource (for example, <code>sg-xxxxxx</code>).'
        resourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: 'The custom name of the related resource, if available.'
        relationshipName:
          allOf:
            - $ref: '#/components/schemas/RelationshipName'
            - description: The type of relationship with the related resource.
      description: The relationship of the related resource to the main resource.
    RemediationTargetType:
      type: string
      enum:
        - SSM_DOCUMENT
    RemediationParameters:
      type: object
      minProperties: 0
      maxProperties: 25
      additionalProperties:
        $ref: '#/components/schemas/RemediationParameterValue'
    RemediationConfiguration:
      type: object
      required:
        - ConfigRuleName
        - TargetType
        - TargetId
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        TargetType:
          allOf:
            - $ref: '#/components/schemas/RemediationTargetType'
            - description: 'The type of the target. Target executes remediation. For example, SSM document.'
        TargetId:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: Target ID is the name of the public document.
        TargetVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: '<p>Version of the target. For example, version of the SSM document.</p> <note> <p>If you make backward incompatible changes to the SSM document, you must call PutRemediationConfiguration API again to ensure the remediations can run.</p> </note>'
        Parameters:
          allOf:
            - $ref: '#/components/schemas/RemediationParameters'
            - description: An object of the RemediationParameterValue.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of a resource. '
        Automatic:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The remediation is triggered automatically.
        ExecutionControls:
          allOf:
            - $ref: '#/components/schemas/ExecutionControls'
            - description: An ExecutionControls object.
        MaximumAutomaticAttempts:
          allOf:
            - $ref: '#/components/schemas/AutoRemediationAttempts'
            - description: '<p>The maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.</p> <p>For example, if you specify MaximumAutomaticAttempts as 5 with RetryAttemptSeconds as 50 seconds, Config will put a RemediationException on your behalf for the failing resource after the 5th failed attempt within 50 seconds.</p>'
        RetryAttemptSeconds:
          allOf:
            - $ref: '#/components/schemas/AutoRemediationAttemptSeconds'
            - description: '<p>Maximum time in seconds that Config runs auto-remediation. If you do not select a number, the default is 60 seconds. </p> <p>For example, if you specify RetryAttemptSeconds as 50 seconds and MaximumAutomaticAttempts as 5, Config will run auto-remediations 5 times within 50 seconds before throwing an exception.</p>'
        Arn:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: Amazon Resource Name (ARN) of remediation configuration.
        CreatedByService:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: 'Name of the service that owns the service linked rule, if applicable.'
      description: 'An object that represents the details about the remediation configuration that includes the remediation action, parameters, and data to execute the action.'
    RemediationException:
      type: object
      required:
        - ConfigRuleName
        - ResourceType
        - ResourceId
      properties:
        ConfigRuleName:
          allOf:
            - $ref: '#/components/schemas/ConfigRuleName'
            - description: The name of the Config rule.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of a resource.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: 'The ID of the resource (for example., sg-xxxxxx).'
        Message:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: An explanation of an remediation exception.
        ExpirationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the remediation exception will be deleted.
      description: 'An object that represents the details about the remediation exception. The details include the rule name, an explanation of an exception, the time when the exception will be deleted, the resource ID, and resource type. '
    RemediationExceptionResourceKey:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit256'
            - description: The type of a resource.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/StringWithCharLimit1024'
            - description: 'The ID of the resource (for example., sg-xxxxxx).'
      description: 'The details that identify a resource within Config, including the resource type and resource ID. '
    RemediationExecutionState:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    ResourceKey:
      type: object
      required:
        - resourceType
        - resourceId
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The resource type.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the resource (for example., sg-xxxxxx). '
      description: 'The details that identify a resource within Config, including the resource type and resource ID.'
    RemediationExecutionSteps:
      type: array
      items:
        $ref: '#/components/schemas/RemediationExecutionStep'
    RemediationExecutionStatus:
      type: object
      properties:
        ResourceKey:
          $ref: '#/components/schemas/ResourceKey'
        State:
          allOf:
            - $ref: '#/components/schemas/RemediationExecutionState'
            - description: ENUM of the values.
        StepDetails:
          allOf:
            - $ref: '#/components/schemas/RemediationExecutionSteps'
            - description: Details of every step.
        InvocationTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: Start time when the remediation was executed.
        LastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the remediation execution was last updated.
      description: Provides details of the current status of the invoked remediation action for that resource.
    RemediationExecutionStepState:
      type: string
      enum:
        - SUCCEEDED
        - PENDING
        - FAILED
    RemediationExecutionStep:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The details of the step.
        State:
          allOf:
            - $ref: '#/components/schemas/RemediationExecutionStepState'
            - description: The valid status of the step.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An error message if the step was interrupted during execution.
        StartTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the step started.
        StopTime:
          allOf:
            - $ref: '#/components/schemas/Date'
            - description: The time when the step stopped.
      description: Name of the step from the SSM document.
    ResourceValue:
      type: object
      required:
        - Value
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/ResourceValueType'
            - description: The value is a resource ID.
      description: The dynamic value of the resource.
    StaticValue:
      type: object
      required:
        - Values
      properties:
        Values:
          allOf:
            - $ref: '#/components/schemas/StaticParameterValues'
            - description: 'A list of values. For example, the ARN of the assumed role. '
      description: The static value of the resource.
    RemediationParameterValue:
      type: object
      properties:
        ResourceValue:
          allOf:
            - $ref: '#/components/schemas/ResourceValue'
            - description: The value is dynamic and changes at run-time.
        StaticValue:
          allOf:
            - $ref: '#/components/schemas/StaticValue'
            - description: The value is static and does not change at run-time.
      description: The value is either a dynamic (resource) value or a static value. You must select either a dynamic value or a static value.
    ResourceCount:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: 'The resource type (for example, <code>"AWS::EC2::Instance"</code>).'
        count:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of resources.
      description: An object that contains the resource type and the number of resources.
    ResourceDeletionTime:
      type: string
      format: date-time
    ResourceIdentifier:
      type: object
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - description: The type of resource.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: 'The ID of the resource (for example, <code>sg-xxxxxx</code>).'
        resourceName:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The custom name of the resource (if available).
        resourceDeletionTime:
          allOf:
            - $ref: '#/components/schemas/ResourceDeletionTime'
            - description: The time that the resource was deleted.
      description: 'The details that identify a resource that is discovered by Config, including the resource type, ID, and (if available) the custom resource name.'
    ResourceValueType:
      type: string
      enum:
        - RESOURCE_ID
    Results:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SourceDetails:
      type: array
      items:
        $ref: '#/components/schemas/SourceDetail'
      minItems: 0
      maxItems: 25
    SourceDetail:
      type: object
      properties:
        EventSource:
          allOf:
            - $ref: '#/components/schemas/EventSource'
            - description: 'The source of the event, such as an Amazon Web Services service, that triggers Config to evaluate your Amazon Web Services resources.'
        MessageType:
          allOf:
            - $ref: '#/components/schemas/MessageType'
            - description: '<p>The type of notification that triggers Config to run an evaluation for a rule. You can specify the following notification types:</p> <ul> <li> <p> <code>ConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers a configuration item as a result of a resource change.</p> </li> <li> <p> <code>OversizedConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers an oversized configuration item. Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.</p> </li> <li> <p> <code>ScheduledNotification</code> - Triggers a periodic evaluation at the frequency specified for <code>MaximumExecutionFrequency</code>.</p> </li> <li> <p> <code>ConfigurationSnapshotDeliveryCompleted</code> - Triggers a periodic evaluation when Config delivers a configuration snapshot.</p> </li> </ul> <p>If you want your custom rule to be triggered by configuration changes, specify two SourceDetail objects, one for <code>ConfigurationItemChangeNotification</code> and one for <code>OversizedConfigurationItemChangeNotification</code>.</p>'
        MaximumExecutionFrequency:
          allOf:
            - $ref: '#/components/schemas/MaximumExecutionFrequency'
            - description: '<p>The frequency at which you want Config to run evaluations for a custom rule with a periodic trigger. If you specify a value for <code>MaximumExecutionFrequency</code>, then <code>MessageType</code> must use the <code>ScheduledNotification</code> value.</p> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> <p>Based on the valid value you choose, Config runs evaluations once for each valid value. For example, if you choose <code>Three_Hours</code>, Config runs evaluations once every three hours. In this case, <code>Three_Hours</code> is the frequency of this rule. </p> </note>'
      description: 'Provides the source and the message types that trigger Config to evaluate your Amazon Web Services resources against a rule. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for <code>SourceDetail</code> only for custom rules. '
    StaticParameterValues:
      type: array
      items:
        $ref: '#/components/schemas/StringWithCharLimit256'
      minItems: 0
      maxItems: 25
    StoredQueryMetadata:
      type: object
      required:
        - QueryId
        - QueryArn
        - QueryName
      properties:
        QueryId:
          allOf:
            - $ref: '#/components/schemas/QueryId'
            - description: 'The ID of the query. '
        QueryArn:
          allOf:
            - $ref: '#/components/schemas/QueryArn'
            - description: 'Amazon Resource Name (ARN) of the query. For example, arn:partition:service:region:account-id:resource-type/resource-name/resource-id.'
        QueryName:
          allOf:
            - $ref: '#/components/schemas/QueryName'
            - description: The name of the query.
        Description:
          allOf:
            - $ref: '#/components/schemas/QueryDescription'
            - description: A unique description for the query.
      description: 'Returns details of a specific query. '
    SupplementaryConfigurationValue:
      type: string
    SupplementaryConfigurationName:
      type: string
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).
      description: 'The tags for the resource. The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    Value:
      type: string
security:
  - hmac: []
