openapi: 3.0.0
info:
  version: '2021-01-01'
  x-release: v4
  title: Amazon OpenSearch Service
  description: '<fullname>Amazon OpenSearch Configuration Service</fullname> <p>Use the Amazon OpenSearch configuration API to create, configure, and manage Amazon OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html"> Amazon OpenSearch Service Developer Guide</a>. The guide also contains <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html"> sample code for sending signed HTTP requests to the OpenSearch APIs</a>. </p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions" target="_blank">Regions and Endpoints</a>. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: opensearch
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/opensearch-2021-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/es/'
servers:
  - url: 'http://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon OpenSearch Service multi-region endpoint
  - url: 'https://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon OpenSearch Service multi-region endpoint
  - url: 'http://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon OpenSearch Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon OpenSearch Service endpoint for China (Beijing) and China (Ningxia)
paths:
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept':
    put:
      operationId: AcceptInboundConnection
      description: Allows the remote domain owner to accept an inbound cross-cluster connection request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the inbound connection you want to accept.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags:
    post:
      operationId: AddTags
      description: 'Attaches tags to an existing domain. Tags are a set of case-sensitive key value pairs. An domain can have up to 10 tags. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging" target="_blank"> Tagging Amazon OpenSearch Service domains</a> for more information. '
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagList
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html" target="_blank">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
                  type: string
                  pattern: .*
                  minLength: 20
                  maxLength: 2048
                TagList:
                  description: 'A list of <code>Tag</code>. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/associate/{PackageID}/{DomainName}':
    post:
      operationId: AssociatePackage
      description: Associates a package with an Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: 'Internal ID of the package to associate with a domain. Use <code>DescribePackages</code> to find this value. '
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: The name of the domain to associate the package with.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/serviceSoftwareUpdate/cancel:
    post:
      operationId: CancelServiceSoftwareUpdate
      description: 'Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the <code>UpdateStatus</code> is in the <code>PENDING_UPDATE</code> state. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/domain:
    post:
      operationId: CreateDomain
      description: 'Creates a new Amazon OpenSearch Service domain. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html" target="_blank">Creating and managing Amazon OpenSearch Service domains </a> in the <i>Amazon OpenSearch Service Developer Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                EngineVersion:
                  description: 'String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the Amazon OpenSearch Service domain. For example, "OpenSearch_1.0" or "Elasticsearch_7.9". For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains" target="_blank">Creating and managing Amazon OpenSearch Service domains </a>. '
                  type: string
                  pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
                  minLength: 14
                  maxLength: 18
                ClusterConfig:
                  description: 'The configuration for the domain cluster, such as the type and number of instances.'
                  type: object
                  properties:
                    InstanceType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: 'The instance type for an OpenSearch cluster. UltraWarm instance types are not supported for data instances. '
                    InstanceCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of instances in the specified domain cluster.
                    DedicatedMasterEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-dedicatedmasternodes" target="_blank">Dedicated master nodes in Amazon OpenSearch Service </a> for more information. '
                    ZoneAwarenessEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html" target="_blank">Configuring a multi-AZ domain in Amazon OpenSearch Service </a> for more information. '
                    ZoneAwarenessConfig:
                      allOf:
                        - $ref: '#/components/schemas/ZoneAwarenessConfig'
                        - description: The zone awareness configuration for a domain when zone awareness is enabled.
                    DedicatedMasterType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: The instance type for a dedicated master node.
                    DedicatedMasterCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
                    WarmEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable UltraWarm storage.
                    WarmType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
                        - description: The instance type for the OpenSearch cluster's warm nodes.
                    WarmCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of UltraWarm nodes in the cluster.
                    ColdStorageOptions:
                      allOf:
                        - $ref: '#/components/schemas/ColdStorageOptions'
                        - description: Specifies the <code>ColdStorageOptions</code> config for a Domain
                EBSOptions:
                  description: 'Options to enable, disable, and specify the properties of EBS storage volumes.'
                  type: object
                  properties:
                    EBSEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether EBS-based storage is enabled.
                    VolumeType:
                      allOf:
                        - $ref: '#/components/schemas/VolumeType'
                        - description: The volume type for EBS-based storage.
                    VolumeSize:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Integer to specify the size of an EBS volume.
                    Iops:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The IOPD for a Provisioned IOPS EBS volume (SSD).
                AccessPolicies:
                  description: 'Access policy rules for a domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies" target="_blank">Configuring access policies </a>. The maximum size of a policy document is 100 KB. '
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 102400
                SnapshotOptions:
                  description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: The subnets for the VPC endpoint.
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: The security groups for the VPC endpoint.
                CognitoOptions:
                  description: 'Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: The option to enable Cognito for OpenSearch Dashboards authentication.
                    UserPoolId:
                      allOf:
                        - $ref: '#/components/schemas/UserPoolId'
                        - description: The Cognito user pool ID for OpenSearch Dashboards authentication.
                    IdentityPoolId:
                      allOf:
                        - $ref: '#/components/schemas/IdentityPoolId'
                        - description: The Cognito identity pool ID for OpenSearch Dashboards authentication.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The role ARN that provides OpenSearch permissions for accessing Cognito resources.
                EncryptionAtRestOptions:
                  description: Specifies encryption at rest options.
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: The option to enable encryption at rest.
                    KmsKeyId:
                      allOf:
                        - $ref: '#/components/schemas/KmsKeyId'
                        - description: The KMS key ID for encryption at rest options.
                NodeToNodeEncryptionOptions:
                  description: The node-to-node encryption options.
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable node-to-node encryption.
                AdvancedOptions:
                  description: '<p>Exposes select native OpenSearch configuration values from <code>opensearch.yml</code>. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                LogPublishingOptions:
                  description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of OpenSearch log. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                DomainEndpointOptions:
                  description: Options to configure the endpoint for the domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether only HTTPS endpoint should be enabled for the domain.
                    TLSSecurityPolicy:
                      allOf:
                        - $ref: '#/components/schemas/TLSSecurityPolicy'
                        - description: 'Specify the TLS security policy to apply to the HTTPS endpoint of the domain. <br/> Can be one of the following values: <ul> <li> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLSv1.0 and higher. </li> <li> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLSv1.2 </li> </ul> '
                    CustomEndpointEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable a custom endpoint for the domain.
                    CustomEndpoint:
                      allOf:
                        - $ref: '#/components/schemas/DomainNameFqdn'
                        - description: The fully qualified domain for your custom endpoint.
                    CustomEndpointCertificateArn:
                      allOf:
                        - $ref: '#/components/schemas/ARN'
                        - description: The ACM certificate ARN for your custom endpoint.
                AdvancedSecurityOptions:
                  description: 'The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled). '
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True if advanced security is enabled.
                    InternalUserDatabaseEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True if the internal user database is enabled.
                    MasterUserOptions:
                      allOf:
                        - $ref: '#/components/schemas/MasterUserOptions'
                        - description: 'Credentials for the master user: username and password, ARN, or both.'
                    SAMLOptions:
                      allOf:
                        - $ref: '#/components/schemas/SAMLOptionsInput'
                        - description: The SAML application configuration for the domain.
                TagList:
                  description: 'A list of <code>Tag</code>. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                AutoTuneOptions:
                  description: 'The Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules. '
                  type: object
                  properties:
                    DesiredState:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneDesiredState'
                        - description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
                    MaintenanceSchedules:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                        - description: 'A list of maintenance schedules. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/outboundConnection:
    post:
      operationId: CreateOutboundConnection
      description: Creates a new cross-cluster connection from a local OpenSearch domain to a remote OpenSearch domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutboundConnectionResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LocalDomainInfo
                - RemoteDomainInfo
                - ConnectionAlias
              properties:
                LocalDomainInfo:
                  description: 'The <code> <a>AWSDomainInformation</a> </code> for the local OpenSearch domain. '
                  type: object
                  properties:
                    AWSDomainInformation:
                      $ref: '#/components/schemas/AWSDomainInformation'
                RemoteDomainInfo:
                  description: 'The <code> <a>AWSDomainInformation</a> </code> for the remote OpenSearch domain. '
                  type: object
                  properties:
                    AWSDomainInformation:
                      $ref: '#/components/schemas/AWSDomainInformation'
                ConnectionAlias:
                  description: The connection alias used used by the customer for this cross-cluster connection.
                  type: string
                  pattern: '[a-zA-Z][a-zA-Z0-9\-\_]+'
                  minLength: 2
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages:
    post:
      operationId: CreatePackage
      description: Create a package for use with Amazon OpenSearch Service domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageName
                - PackageType
                - PackageSource
              properties:
                PackageName:
                  description: Unique identifier for the package.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                PackageType:
                  description: Type of package. Currently supports only TXT-DICTIONARY.
                  type: string
                  enum:
                    - TXT-DICTIONARY
                PackageDescription:
                  description: Description of the package.
                  type: string
                  maxLength: 1024
                PackageSource:
                  description: 'The Amazon S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code> '
                  type: object
                  properties:
                    S3BucketName:
                      allOf:
                        - $ref: '#/components/schemas/S3BucketName'
                        - description: The name of the Amazon S3 bucket containing the package.
                    S3Key:
                      allOf:
                        - $ref: '#/components/schemas/S3Key'
                        - description: Key (file name) of the package.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}':
    delete:
      operationId: DeleteDomain
      description: 'Permanently deletes the specified domain and all of its data. Once a domain is deleted, it cannot be recovered. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDomain
      description: 'Returns domain configuration information about the specified domain, including the domain ID, domain endpoint, and domain ARN. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain for which you want information.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteInboundConnection
      description: Allows the remote domain owner to delete an existing inbound cross-cluster connection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the inbound connection to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteOutboundConnection
      description: Allows the local domain owner to delete an existing outbound cross-cluster connection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the outbound connection you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}':
    delete:
      operationId: DeletePackage
      description: Deletes the package.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: 'The internal ID of the package you want to delete. Use <code>DescribePackages</code> to find this value. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/autoTunes':
    get:
      operationId: DescribeDomainAutoTunes
      description: 'Provides scheduled Auto-Tune action details for the domain, such as Auto-Tune action type, description, severity, and scheduled date. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainAutoTunesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The domain name for which you want Auto-Tune action details.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/config':
    get:
      operationId: DescribeDomainConfig
      description: 'Provides cluster configuration information about the specified domain, such as the state, creation date, update version, and update date for cluster options. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The domain you want to get information about.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDomainConfig
      description: 'Modifies the cluster configuration of the specified domain, such as setting the instance type and the number of instances. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain you're updating.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterConfig:
                  description: 'The configuration for the domain cluster, such as the type and number of instances.'
                  type: object
                  properties:
                    InstanceType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: 'The instance type for an OpenSearch cluster. UltraWarm instance types are not supported for data instances. '
                    InstanceCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of instances in the specified domain cluster.
                    DedicatedMasterEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-dedicatedmasternodes" target="_blank">Dedicated master nodes in Amazon OpenSearch Service </a> for more information. '
                    ZoneAwarenessEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html" target="_blank">Configuring a multi-AZ domain in Amazon OpenSearch Service </a> for more information. '
                    ZoneAwarenessConfig:
                      allOf:
                        - $ref: '#/components/schemas/ZoneAwarenessConfig'
                        - description: The zone awareness configuration for a domain when zone awareness is enabled.
                    DedicatedMasterType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: The instance type for a dedicated master node.
                    DedicatedMasterCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
                    WarmEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable UltraWarm storage.
                    WarmType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
                        - description: The instance type for the OpenSearch cluster's warm nodes.
                    WarmCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of UltraWarm nodes in the cluster.
                    ColdStorageOptions:
                      allOf:
                        - $ref: '#/components/schemas/ColdStorageOptions'
                        - description: Specifies the <code>ColdStorageOptions</code> config for a Domain
                EBSOptions:
                  description: 'Options to enable, disable, and specify the properties of EBS storage volumes.'
                  type: object
                  properties:
                    EBSEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether EBS-based storage is enabled.
                    VolumeType:
                      allOf:
                        - $ref: '#/components/schemas/VolumeType'
                        - description: The volume type for EBS-based storage.
                    VolumeSize:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Integer to specify the size of an EBS volume.
                    Iops:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The IOPD for a Provisioned IOPS EBS volume (SSD).
                SnapshotOptions:
                  description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: The subnets for the VPC endpoint.
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: The security groups for the VPC endpoint.
                CognitoOptions:
                  description: 'Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: The option to enable Cognito for OpenSearch Dashboards authentication.
                    UserPoolId:
                      allOf:
                        - $ref: '#/components/schemas/UserPoolId'
                        - description: The Cognito user pool ID for OpenSearch Dashboards authentication.
                    IdentityPoolId:
                      allOf:
                        - $ref: '#/components/schemas/IdentityPoolId'
                        - description: The Cognito identity pool ID for OpenSearch Dashboards authentication.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The role ARN that provides OpenSearch permissions for accessing Cognito resources.
                AdvancedOptions:
                  description: '<p>Exposes select native OpenSearch configuration values from <code>opensearch.yml</code>. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                AccessPolicies:
                  description: 'Access policy rules for a domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies" target="_blank">Configuring access policies </a>. The maximum size of a policy document is 100 KB. '
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 102400
                LogPublishingOptions:
                  description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of OpenSearch log. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                EncryptionAtRestOptions:
                  description: Specifies encryption at rest options.
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: The option to enable encryption at rest.
                    KmsKeyId:
                      allOf:
                        - $ref: '#/components/schemas/KmsKeyId'
                        - description: The KMS key ID for encryption at rest options.
                DomainEndpointOptions:
                  description: Options to configure the endpoint for the domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether only HTTPS endpoint should be enabled for the domain.
                    TLSSecurityPolicy:
                      allOf:
                        - $ref: '#/components/schemas/TLSSecurityPolicy'
                        - description: 'Specify the TLS security policy to apply to the HTTPS endpoint of the domain. <br/> Can be one of the following values: <ul> <li> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLSv1.0 and higher. </li> <li> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLSv1.2 </li> </ul> '
                    CustomEndpointEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable a custom endpoint for the domain.
                    CustomEndpoint:
                      allOf:
                        - $ref: '#/components/schemas/DomainNameFqdn'
                        - description: The fully qualified domain for your custom endpoint.
                    CustomEndpointCertificateArn:
                      allOf:
                        - $ref: '#/components/schemas/ARN'
                        - description: The ACM certificate ARN for your custom endpoint.
                NodeToNodeEncryptionOptions:
                  description: The node-to-node encryption options.
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable node-to-node encryption.
                AdvancedSecurityOptions:
                  description: 'The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled). '
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True if advanced security is enabled.
                    InternalUserDatabaseEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True if the internal user database is enabled.
                    MasterUserOptions:
                      allOf:
                        - $ref: '#/components/schemas/MasterUserOptions'
                        - description: 'Credentials for the master user: username and password, ARN, or both.'
                    SAMLOptions:
                      allOf:
                        - $ref: '#/components/schemas/SAMLOptionsInput'
                        - description: The SAML application configuration for the domain.
                AutoTuneOptions:
                  description: 'The Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules. '
                  type: object
                  properties:
                    DesiredState:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneDesiredState'
                        - description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
                    RollbackOnDisable:
                      allOf:
                        - $ref: '#/components/schemas/RollbackOnDisable'
                        - description: 'The rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK and DEFAULT_ROLLBACK. '
                    MaintenanceSchedules:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                        - description: 'A list of maintenance schedules. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
  /2021-01-01/opensearch/domain-info:
    post:
      operationId: DescribeDomains
      description: 'Returns domain configuration information about the specified domains, including the domain ID, domain endpoint, and domain ARN. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainNames
              properties:
                DomainNames:
                  description: A list of domain names.
                  type: array
                  items:
                    $ref: '#/components/schemas/DomainName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/inboundConnection/search:
    post:
      operationId: DescribeInboundConnections
      description: Lists all the inbound cross-cluster connections for a remote domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInboundConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: ' A list of filters used to match properties for inbound cross-cluster connections. Available <code> <a>Filter</a> </code> values are: <ul> <li>connection-id</li> <li>local-domain-info.domain-name</li> <li>local-domain-info.owner-id</li> <li>local-domain-info.region</li> <li>remote-domain-info.domain-name</li> </ul> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}':
    get:
      operationId: DescribeInstanceTypeLimits
      description: ' Describe the limits for a given instance type and OpenSearch or Elasticsearch version. When modifying an existing domain, specify the <code> <a>DomainName</a> </code> to see which limits you can modify. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypeLimitsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: ' The name of the domain you want to modify. Only include this value if you''re querying OpenSearch <code> <a>Limits</a> </code> for an existing domain. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
        - name: InstanceType
          in: path
          required: true
          description: ' The instance type for an OpenSearch cluster for which OpenSearch <code> <a>Limits</a> </code> are needed. '
          schema:
            type: string
            enum:
              - m3.medium.search
              - m3.large.search
              - m3.xlarge.search
              - m3.2xlarge.search
              - m4.large.search
              - m4.xlarge.search
              - m4.2xlarge.search
              - m4.4xlarge.search
              - m4.10xlarge.search
              - m5.large.search
              - m5.xlarge.search
              - m5.2xlarge.search
              - m5.4xlarge.search
              - m5.12xlarge.search
              - m5.24xlarge.search
              - r5.large.search
              - r5.xlarge.search
              - r5.2xlarge.search
              - r5.4xlarge.search
              - r5.12xlarge.search
              - r5.24xlarge.search
              - c5.large.search
              - c5.xlarge.search
              - c5.2xlarge.search
              - c5.4xlarge.search
              - c5.9xlarge.search
              - c5.18xlarge.search
              - t3.nano.search
              - t3.micro.search
              - t3.small.search
              - t3.medium.search
              - t3.large.search
              - t3.xlarge.search
              - t3.2xlarge.search
              - ultrawarm1.medium.search
              - ultrawarm1.large.search
              - ultrawarm1.xlarge.search
              - t2.micro.search
              - t2.small.search
              - t2.medium.search
              - r3.large.search
              - r3.xlarge.search
              - r3.2xlarge.search
              - r3.4xlarge.search
              - r3.8xlarge.search
              - i2.xlarge.search
              - i2.2xlarge.search
              - d2.xlarge.search
              - d2.2xlarge.search
              - d2.4xlarge.search
              - d2.8xlarge.search
              - c4.large.search
              - c4.xlarge.search
              - c4.2xlarge.search
              - c4.4xlarge.search
              - c4.8xlarge.search
              - r4.large.search
              - r4.xlarge.search
              - r4.2xlarge.search
              - r4.4xlarge.search
              - r4.8xlarge.search
              - r4.16xlarge.search
              - i3.large.search
              - i3.xlarge.search
              - i3.2xlarge.search
              - i3.4xlarge.search
              - i3.8xlarge.search
              - i3.16xlarge.search
              - r6g.large.search
              - r6g.xlarge.search
              - r6g.2xlarge.search
              - r6g.4xlarge.search
              - r6g.8xlarge.search
              - r6g.12xlarge.search
              - m6g.large.search
              - m6g.xlarge.search
              - m6g.2xlarge.search
              - m6g.4xlarge.search
              - m6g.8xlarge.search
              - m6g.12xlarge.search
              - c6g.large.search
              - c6g.xlarge.search
              - c6g.2xlarge.search
              - c6g.4xlarge.search
              - c6g.8xlarge.search
              - c6g.12xlarge.search
              - r6gd.large.search
              - r6gd.xlarge.search
              - r6gd.2xlarge.search
              - r6gd.4xlarge.search
              - r6gd.8xlarge.search
              - r6gd.12xlarge.search
              - r6gd.16xlarge.search
              - t4g.small.search
              - t4g.medium.search
        - name: EngineVersion
          in: path
          required: true
          description: ' Version of OpenSearch for which <code> <a>Limits</a> </code> are needed. '
          schema:
            type: string
            pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
            minLength: 14
            maxLength: 18
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/outboundConnection/search:
    post:
      operationId: DescribeOutboundConnections
      description: Lists all the outbound cross-cluster connections for a local domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOutboundConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: ' A list of filters used to match properties for outbound cross-cluster connections. Available <code> <a>Filter</a> </code> names for this operation are: <ul> <li>connection-id</li> <li>remote-domain-info.domain-name</li> <li>remote-domain-info.owner-id</li> <li>remote-domain-info.region</li> <li>local-domain-info.domain-name</li> </ul> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages/describe:
    post:
      operationId: DescribePackages
      description: 'Describes all packages available to Amazon OpenSearch Service domains. Includes options for filtering, limiting the number of results, and pagination. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: 'A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response. '
                  type: array
                  items:
                    $ref: '#/components/schemas/DescribePackagesFilter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/reservedInstanceOfferings:
    get:
      operationId: DescribeReservedInstanceOfferings
      description: Lists available reserved OpenSearch instance offerings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstanceOfferingsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: offeringId
          in: query
          required: false
          description: 'The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier. '
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Provides an identifier to allow retrieval of paginated results. '
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/reservedInstances:
    get:
      operationId: DescribeReservedInstances
      description: Returns information about reserved OpenSearch instances for this account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: reservationId
          in: query
          required: false
          description: 'The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved OpenSearch instance ID. '
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Provides an identifier to allow retrieval of paginated results. '
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/dissociate/{PackageID}/{DomainName}':
    post:
      operationId: DissociatePackage
      description: Dissociates a package from the Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DissociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: 'The internal ID of the package to associate with a domain. Use <code>DescribePackages</code> to find this value. '
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: The name of the domain to associate the package with.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/compatibleVersions:
    get:
      operationId: GetCompatibleVersions
      description: ' Returns a list of upgrade-compatible versions of OpenSearch/Elasticsearch. You can optionally pass a <code> <a>DomainName</a> </code> to get all upgrade-compatible versions of OpenSearch/Elasticsearch for that specific domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompatibleVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}/history':
    get:
      operationId: GetPackageVersionHistory
      description: 'Returns a list of package versions, along with their creation time and commit message.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Returns an audit history of package versions.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: Limits results to a maximum number of package versions.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page. '
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/upgradeDomain/{DomainName}/history':
    get:
      operationId: GetUpgradeHistory
      description: Retrieves the complete history of the last 10 upgrades performed on the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/upgradeDomain/{DomainName}/status':
    get:
      operationId: GetUpgradeStatus
      description: 'Retrieves the latest status of the last upgrade or upgrade eligibility check performed on the domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeStatusResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/domain:
    get:
      operationId: ListDomainNames
      description: Returns the names of all domains owned by the current user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainNamesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: engineType
          in: query
          required: false
          description: ' Optional parameter to filter the output by domain engine type. Acceptable values are ''Elasticsearch'' and ''OpenSearch''. '
          schema:
            type: string
            enum:
              - OpenSearch
              - Elasticsearch
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}/domains':
    get:
      operationId: ListDomainsForPackage
      description: Lists all Amazon OpenSearch Service domains associated with the package.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsForPackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: The package for which to list associated domains.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: Limits the results to a maximum number of domains.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page. '
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}':
    get:
      operationId: ListInstanceTypeDetails
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceTypeDetailsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: EngineVersion
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
            minLength: 14
            maxLength: 18
        - name: domainName
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/domain/{DomainName}/packages':
    get:
      operationId: ListPackagesForDomain
      description: Lists all packages associated with the Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesForDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain for which you want to list associated packages.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: Limits results to a maximum number of packages.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page. '
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags/#arn:
    get:
      operationId: ListTags
      description: Returns all tags for the given domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: arn
          in: query
          required: true
          description: 'Specify the <code>ARN</code> of the domain that the tags you want to view are attached to. '
          schema:
            type: string
            pattern: .*
            description: 'The Amazon Resource Name (ARN) of the domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html" target="_blank">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/versions:
    get:
      operationId: ListVersions
      description: List all supported versions of OpenSearch and Elasticsearch.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ' Set this value to limit the number of results returned. Value must be greater than 10 or it won''t be honored. '
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/purchaseReservedInstanceOffering:
    post:
      operationId: PurchaseReservedInstanceOffering
      description: Allows you to purchase reserved OpenSearch instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReservedInstanceOfferingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ReservedInstanceOfferingId
                - ReservationName
              properties:
                ReservedInstanceOfferingId:
                  description: The ID of the reserved OpenSearch instance offering to purchase.
                  type: string
                  pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
                  minLength: 36
                  maxLength: 36
                ReservationName:
                  description: A customer-specified identifier to track this reservation.
                  type: string
                  pattern: .*
                  minLength: 5
                  maxLength: 64
                InstanceCount:
                  description: The number of EC2 instances in the domain.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject':
    put:
      operationId: RejectInboundConnection
      description: Allows the remote domain owner to reject an inbound cross-cluster connection request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the inbound connection to reject.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags-removal:
    post:
      operationId: RemoveTags
      description: Removes the specified set of tags from the given domain.
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagKeys
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html" target="_blank">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
                  type: string
                  pattern: .*
                  minLength: 20
                  maxLength: 2048
                TagKeys:
                  description: 'The <code>TagKey</code> list you want to remove from the domain. '
                  type: array
                  items:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/serviceSoftwareUpdate/start:
    post:
      operationId: StartServiceSoftwareUpdate
      description: Schedules a service software update for an Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages/update:
    post:
      operationId: UpdatePackage
      description: Updates a package for use with Amazon OpenSearch Service domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageID
                - PackageSource
              properties:
                PackageID:
                  description: The unique identifier for the package.
                  type: string
                PackageSource:
                  description: 'The Amazon S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code> '
                  type: object
                  properties:
                    S3BucketName:
                      allOf:
                        - $ref: '#/components/schemas/S3BucketName'
                        - description: The name of the Amazon S3 bucket containing the package.
                    S3Key:
                      allOf:
                        - $ref: '#/components/schemas/S3Key'
                        - description: Key (file name) of the package.
                PackageDescription:
                  description: A new description of the package.
                  type: string
                  maxLength: 1024
                CommitMessage:
                  description: 'A commit message for the new version which is shown as part of <code>GetPackageVersionHistoryResponse</code>. '
                  type: string
                  maxLength: 160
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/upgradeDomain:
    post:
      operationId: UpgradeDomain
      description: 'Allows you to either upgrade your domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
                - TargetVersion
              properties:
                DomainName:
                  description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                TargetVersion:
                  description: The version of OpenSearch you intend to upgrade the domain to.
                  type: string
                  pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
                  minLength: 14
                  maxLength: 18
                PerformCheckOnly:
                  description: ' When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade. '
                  type: boolean
                AdvancedOptions:
                  description: '<p>Exposes select native OpenSearch configuration values from <code>opensearch.yml</code>. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: 'The <code> <a>InboundConnection</a> </code> of the accepted inbound connection. '
      description: 'The result of an <code> <a>AcceptInboundConnection</a> </code> operation. Contains details about the accepted inbound connection. '
    ResourceNotFoundException: {}
    LimitExceededException: {}
    DisabledOperationException: {}
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: 'The <code>TagKey</code>, the name of the tag. Tag keys must be unique for the domain to which they are attached. '
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: 'The <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and don''t have to be unique in a tag set. For example, you can have a key value pair in a tag set of <code>project : Trinity</code> and <code>cost-center : Trinity</code> '
      description: A key value pair for a resource tag.
    BaseException: {}
    ValidationException: {}
    InternalException: {}
    AssociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetails'
            - description: ' <code>DomainPackageDetails</code> '
      description: ' Container for the response returned by <code> <a>AssociatePackage</a> </code> operation. '
    AccessDeniedException: {}
    ConflictException: {}
    CancelServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: The current status of the OpenSearch service software update.
      description: 'The result of a <code>CancelServiceSoftwareUpdate</code> operation. Contains the status of the update. '
    CreateDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The status of the newly created domain.
      description: 'The result of a <code>CreateDomain</code> operation. Contains the status of the newly created Amazon OpenSearch Service domain. '
    OpenSearchPartitionInstanceType:
      type: string
      enum:
        - m3.medium.search
        - m3.large.search
        - m3.xlarge.search
        - m3.2xlarge.search
        - m4.large.search
        - m4.xlarge.search
        - m4.2xlarge.search
        - m4.4xlarge.search
        - m4.10xlarge.search
        - m5.large.search
        - m5.xlarge.search
        - m5.2xlarge.search
        - m5.4xlarge.search
        - m5.12xlarge.search
        - m5.24xlarge.search
        - r5.large.search
        - r5.xlarge.search
        - r5.2xlarge.search
        - r5.4xlarge.search
        - r5.12xlarge.search
        - r5.24xlarge.search
        - c5.large.search
        - c5.xlarge.search
        - c5.2xlarge.search
        - c5.4xlarge.search
        - c5.9xlarge.search
        - c5.18xlarge.search
        - t3.nano.search
        - t3.micro.search
        - t3.small.search
        - t3.medium.search
        - t3.large.search
        - t3.xlarge.search
        - t3.2xlarge.search
        - ultrawarm1.medium.search
        - ultrawarm1.large.search
        - ultrawarm1.xlarge.search
        - t2.micro.search
        - t2.small.search
        - t2.medium.search
        - r3.large.search
        - r3.xlarge.search
        - r3.2xlarge.search
        - r3.4xlarge.search
        - r3.8xlarge.search
        - i2.xlarge.search
        - i2.2xlarge.search
        - d2.xlarge.search
        - d2.2xlarge.search
        - d2.4xlarge.search
        - d2.8xlarge.search
        - c4.large.search
        - c4.xlarge.search
        - c4.2xlarge.search
        - c4.4xlarge.search
        - c4.8xlarge.search
        - r4.large.search
        - r4.xlarge.search
        - r4.2xlarge.search
        - r4.4xlarge.search
        - r4.8xlarge.search
        - r4.16xlarge.search
        - i3.large.search
        - i3.xlarge.search
        - i3.2xlarge.search
        - i3.4xlarge.search
        - i3.8xlarge.search
        - i3.16xlarge.search
        - r6g.large.search
        - r6g.xlarge.search
        - r6g.2xlarge.search
        - r6g.4xlarge.search
        - r6g.8xlarge.search
        - r6g.12xlarge.search
        - m6g.large.search
        - m6g.xlarge.search
        - m6g.2xlarge.search
        - m6g.4xlarge.search
        - m6g.8xlarge.search
        - m6g.12xlarge.search
        - c6g.large.search
        - c6g.xlarge.search
        - c6g.2xlarge.search
        - c6g.4xlarge.search
        - c6g.8xlarge.search
        - c6g.12xlarge.search
        - r6gd.large.search
        - r6gd.xlarge.search
        - r6gd.2xlarge.search
        - r6gd.4xlarge.search
        - r6gd.8xlarge.search
        - r6gd.12xlarge.search
        - r6gd.16xlarge.search
        - t4g.small.search
        - t4g.medium.search
    IntegerClass:
      type: integer
    Boolean:
      type: boolean
    ZoneAwarenessConfig:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'An integer value to indicate the number of availability zones for a domain when zone awareness is enabled. This should be equal to number of subnets if VPC endpoints is enabled. '
      description: 'The zone awareness configuration for the domain cluster, such as the number of availability zones.'
    OpenSearchWarmPartitionInstanceType:
      type: string
      enum:
        - ultrawarm1.medium.search
        - ultrawarm1.large.search
        - ultrawarm1.xlarge.search
    ColdStorageOptions:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Enable cold storage option. Accepted values true or false
      description: Specifies the configuration for cold storage options such as enabled
    VolumeType:
      type: string
      enum:
        - standard
        - gp2
        - io1
      description: 'The type of EBS volume, standard, gp2, or io1. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a> for more information. '
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    UserPoolId:
      type: string
      pattern: '[\w-]+_[0-9a-zA-Z]+'
      minLength: 1
      maxLength: 55
    IdentityPoolId:
      type: string
      pattern: '[\w-]+:[0-9a-f-]+'
      minLength: 1
      maxLength: 55
    RoleArn:
      type: string
      pattern: 'arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):iam::[0-9]+:role\/.*'
      minLength: 20
      maxLength: 2048
    KmsKeyId:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 500
    String:
      type: string
    LogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          $ref: '#/components/schemas/CloudWatchLogsLogGroupArn'
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the given log publishing option is enabled or not.
      description: 'Log Publishing option that is set for a given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to publish logs to.</li> <li>Enabled: Whether the log publishing for a given log type is enabled or not.</li> </ul> '
    TLSSecurityPolicy:
      type: string
      enum:
        - Policy-Min-TLS-1-0-2019-07
        - Policy-Min-TLS-1-2-2019-07
    DomainNameFqdn:
      type: string
      pattern: '^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$'
      minLength: 1
      maxLength: 255
    ARN:
      type: string
      pattern: .*
      description: 'The Amazon Resource Name (ARN) of the domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html" target="_blank">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
      minLength: 20
      maxLength: 2048
    MasterUserOptions:
      type: object
      properties:
        MasterUserARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: ARN for the master user (if IAM is enabled).
        MasterUserName:
          allOf:
            - $ref: '#/components/schemas/Username'
            - description: 'The master user''s username, which is stored in the Amazon OpenSearch Service domain''s internal database.'
        MasterUserPassword:
          allOf:
            - $ref: '#/components/schemas/Password'
            - description: 'The master user''s password, which is stored in the Amazon OpenSearch Service domain''s internal database.'
      description: 'Credentials for the master user: username and password, ARN, or both.'
    SAMLOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if SAML is enabled.
        Idp:
          allOf:
            - $ref: '#/components/schemas/SAMLIdp'
            - description: The SAML Identity Provider's information.
        MasterUserName:
          allOf:
            - $ref: '#/components/schemas/Username'
            - description: 'The SAML master username, which is stored in the Amazon OpenSearch Service domain''s internal database.'
        MasterBackendRole:
          allOf:
            - $ref: '#/components/schemas/BackendRole'
            - description: The backend role that the SAML master user is mapped to.
        SubjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Element of the SAML assertion to use for username. Default is NameID.
        RolesKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Element of the SAML assertion to use for backend roles. Default is roles.
        SessionTimeoutMinutes:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60. '
      description: The SAML application configuration for the domain.
    AutoTuneDesiredState:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
    AutoTuneMaintenanceScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTuneMaintenanceSchedule'
      maxItems: 100
    InvalidTypeException: {}
    ResourceAlreadyExistsException: {}
    CreateOutboundConnectionResponse:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the local OpenSearch domain. '
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the remote OpenSearch domain. '
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: The connection alias provided during the create connection request.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatus'
            - description: 'The <code> <a>OutboundConnectionStatus</a> </code> for the newly created connection. '
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: 'The unique ID for the created outbound connection, which is used for subsequent operations on the connection.'
      description: 'The result of a <code> <a>CreateOutboundConnection</a> </code> request. Contains the details about the newly created cross-cluster connection. '
    AWSDomainInformation:
      type: object
      required:
        - DomainName
      properties:
        OwnerId:
          $ref: '#/components/schemas/OwnerId'
        DomainName:
          $ref: '#/components/schemas/DomainName'
        Region:
          $ref: '#/components/schemas/Region'
    CreatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: 'Information about the package. '
      description: ' Container for the response returned by the <code> <a>CreatePackage</a> </code> operation. '
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    DeleteDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The status of the domain being deleted.
      description: 'The result of a <code>DeleteDomain</code> request. Contains the status of the pending deletion, or a "domain not found" error if the domain and all of its resources have been deleted. '
    DeleteInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: 'The <code> <a>InboundConnection</a> </code> of the deleted inbound connection. '
      description: 'The result of a <code> <a>DeleteInboundConnection</a> </code> operation. Contains details about the deleted inbound connection. '
    DeleteOutboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/OutboundConnection'
            - description: 'The <code> <a>OutboundConnection</a> </code> of the deleted outbound connection. '
      description: 'The result of a <code> <a>DeleteOutboundConnection</a> </code> operation. Contains details about the deleted outbound connection. '
    DeletePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: ' <code>PackageDetails</code> '
      description: ' Container for the response parameters to the <code> <a>DeletePackage</a> </code> operation. '
    DescribeDomainResponse:
      type: object
      required:
        - DomainStatus
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The current status of the domain.
      description: 'The result of a <code>DescribeDomain</code> request. Contains the status of the domain specified in the request. '
    DescribeDomainAutoTunesResponse:
      type: object
      properties:
        AutoTunes:
          allOf:
            - $ref: '#/components/schemas/AutoTuneList'
            - description: 'The list of setting adjustments that Auto-Tune has made to the domain. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: An identifier to allow retrieval of paginated results.
      description: 'The result of a <code>DescribeDomainAutoTunes</code> request. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    DescribeDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          allOf:
            - $ref: '#/components/schemas/DomainConfig'
            - description: 'The configuration information of the domain requested in the <code>DescribeDomainConfig</code> request. '
      description: 'The result of a <code>DescribeDomainConfig</code> request. Contains the configuration information of the requested domain. '
    DescribeDomainsResponse:
      type: object
      required:
        - DomainStatusList
      properties:
        DomainStatusList:
          allOf:
            - $ref: '#/components/schemas/DomainStatusList'
            - description: 'The status of the domains requested in the <code>DescribeDomains</code> request. '
      description: 'The result of a <code>DescribeDomains</code> request. Contains the status of the specified domains or all domains owned by the account. '
    DomainName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      description: 'The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
      minLength: 3
      maxLength: 28
    DescribeInboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: '#/components/schemas/InboundConnections'
            - description: 'A list of <code> <a>InboundConnection</a> </code> matching the specified filter criteria. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. '
      description: 'The result of a <code> <a>DescribeInboundConnections</a> </code> request. Contains a list of connections matching the filter criteria. '
    Filter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyString'
            - description: ' The name of the filter. '
        Values:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: ' Contains one or more values for the filter. '
      description: ' A filter used to limit results when describing inbound or outbound cross-cluster connections. Multiple values can be specified per filter. A cross-cluster connection must match at least one of the specified values for it to be returned from an operation. '
    InvalidPaginationTokenException: {}
    DescribeInstanceTypeLimitsResponse:
      type: object
      properties:
        LimitsByRole:
          $ref: '#/components/schemas/LimitsByRole'
      description: ' Container for the parameters received from the <code> <a>DescribeInstanceTypeLimits</a> </code> operation. '
    DescribeOutboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: '#/components/schemas/OutboundConnections'
            - description: 'A list of <code> <a>OutboundConnection</a> </code> matching the specified filter criteria. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. '
      description: 'The result of a <code> <a>DescribeOutboundConnections</a> </code> request. Contains the list of connections matching the filter criteria. '
    DescribePackagesResponse:
      type: object
      properties:
        PackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/PackageDetailsList'
            - description: 'List of <code>PackageDetails</code> objects. '
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for the response returned by the <code> <a>DescribePackages</a> </code> operation. '
    DescribePackagesFilter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterName'
            - description: 'Any field from <code>PackageDetails</code>. '
        Value:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterValues'
            - description: A list of values for the specified field.
      description: 'A filter to apply to the <code>DescribePackage</code> response. '
    DescribeReservedInstanceOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: Provides an identifier to allow retrieval of paginated results.
        ReservedInstanceOfferings:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceOfferingList'
            - description: List of reserved OpenSearch instance offerings
      description: 'Container for results from <code>DescribeReservedInstanceOfferings</code> '
    DescribeReservedInstancesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Provides an identifier to allow retrieval of paginated results.
        ReservedInstances:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceList'
            - description: List of reserved OpenSearch instances.
      description: 'Container for results from <code>DescribeReservedInstances</code> '
    DissociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetails'
            - description: ' <code>DomainPackageDetails</code> '
      description: ' Container for the response returned by <code> <a>DissociatePackage</a> </code> operation. '
    GetCompatibleVersionsResponse:
      type: object
      properties:
        CompatibleVersions:
          allOf:
            - $ref: '#/components/schemas/CompatibleVersionsList'
            - description: ' A map of compatible OpenSearch versions returned as part of the <code> <a>GetCompatibleVersions</a> </code> operation. '
      description: ' Container for the response returned by the <code> <a>GetCompatibleVersions</a> </code> operation. '
    GetPackageVersionHistoryResponse:
      type: object
      properties:
        PackageID:
          $ref: '#/components/schemas/PackageID'
        PackageVersionHistoryList:
          allOf:
            - $ref: '#/components/schemas/PackageVersionHistoryList'
            - description: 'List of <code>PackageVersionHistory</code> objects. '
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for response returned by <code> <a>GetPackageVersionHistory</a> </code> operation. '
    GetUpgradeHistoryResponse:
      type: object
      properties:
        UpgradeHistories:
          allOf:
            - $ref: '#/components/schemas/UpgradeHistoryList'
            - description: ' A list of <code> <a>UpgradeHistory</a> </code> objects corresponding to each upgrade or upgrade eligibility check performed on a domain returned as part of the <code> <a>GetUpgradeHistoryResponse</a> </code> object. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Pagination token that needs to be supplied to the next call to get the next page of results.
      description: ' Container for the response returned by the <code> <a>GetUpgradeHistory</a> </code> operation. '
    GetUpgradeStatusResponse:
      type: object
      properties:
        UpgradeStep:
          allOf:
            - $ref: '#/components/schemas/UpgradeStep'
            - description: ' One of three steps an upgrade or upgrade eligibility check goes through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> '
        StepStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: ' One of four statuses an upgrade have, returned as part of the <code> <a>GetUpgradeStatusResponse</a> </code> object. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        UpgradeName:
          allOf:
            - $ref: '#/components/schemas/UpgradeName'
            - description: A string that briefly describes the update.
      description: ' Container for the response returned by the <code> <a>GetUpgradeStatus</a> </code> operation. '
    ListDomainNamesResponse:
      type: object
      properties:
        DomainNames:
          allOf:
            - $ref: '#/components/schemas/DomainInfoList'
            - description: List of domain names and respective engine types.
      description: The result of a <code>ListDomainNames</code> operation. Contains the names of all domains owned by this account and their respective engine types.
    ListDomainsForPackageResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetailsList'
            - description: 'List of <code>DomainPackageDetails</code> objects. '
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for the response parameters to the <code> <a>ListDomainsForPackage</a> </code> operation. '
    ListInstanceTypeDetailsResponse:
      type: object
      properties:
        InstanceTypeDetails:
          $ref: '#/components/schemas/InstanceTypeDetailsList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListPackagesForDomainResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetailsList'
            - description: 'List of <code>DomainPackageDetails</code> objects. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Pagination token to supply to the next call to get the next page of results.
      description: ' Container for the response parameters to the <code> <a>ListPackagesForDomain</a> </code> operation. '
    ListTagsResponse:
      type: object
      properties:
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'List of <code>Tag</code> for the requested domain. '
      description: 'The result of a <code>ListTags</code> operation. Contains tags for all requested domains. '
    ListVersionsResponse:
      type: object
      properties:
        Versions:
          $ref: '#/components/schemas/VersionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: ' Container for the parameters for response received from the <code> <a>ListVersions</a> </code> operation. '
    PurchaseReservedInstanceOfferingResponse:
      type: object
      properties:
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: Details of the reserved OpenSearch instance which was purchased.
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: The customer-specified identifier used to track this reservation.
      description: 'Represents the output of a <code>PurchaseReservedInstanceOffering</code> operation. '
    RejectInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: 'The <code> <a>InboundConnection</a> </code> of the rejected inbound connection. '
      description: 'The result of a <code> <a>RejectInboundConnection</a> </code> operation. Contains details about the rejected inbound connection. '
    StartServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: The current status of the OpenSearch service software update.
      description: 'The result of a <code>StartServiceSoftwareUpdate</code> operation. Contains the status of the update. '
    UpdateDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          allOf:
            - $ref: '#/components/schemas/DomainConfig'
            - description: The status of the updated domain.
      description: 'The result of an <code>UpdateDomain</code> request. Contains the status of the domain being updated. '
    RollbackOnDisable:
      type: string
      enum:
        - NO_ROLLBACK
        - DEFAULT_ROLLBACK
      description: 'The rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK and DEFAULT_ROLLBACK. '
    UpdatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: 'Information about the package. '
      description: ' Container for the response returned by the <code> <a>UpdatePackage</a> </code> operation. '
    UpgradeDomainResponse:
      type: object
      properties:
        UpgradeId:
          $ref: '#/components/schemas/String'
        DomainName:
          $ref: '#/components/schemas/DomainName'
        TargetVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The version of OpenSearch that you intend to upgrade the domain to.
        PerformCheckOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade. '
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptions'
      description: ' Container for response returned by <code> <a>UpgradeDomain</a> </code> operation. '
    OwnerId:
      type: string
      pattern: '[0-9]+'
      minLength: 12
      maxLength: 12
    Region:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 5
      maxLength: 30
    ConnectionId:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 10
      maxLength: 256
    AcceptInboundConnectionRequest:
      type: object
      title: AcceptInboundConnectionRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>AcceptInboundConnection</a> </code> operation. '
    InboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the local OpenSearch domain. '
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the remote OpenSearch domain. '
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: The connection ID for the inbound cross-cluster connection.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/InboundConnectionStatus'
            - description: 'The <code> <a>InboundConnectionStatus</a> </code> for the outbound connection. '
      description: Details of an inbound connection.
    PolicyDocument:
      type: string
      pattern: .*
      description: 'Access policy rules for a domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies" target="_blank">Configuring access policies </a>. The maximum size of a policy document is 100 KB. '
      minLength: 0
      maxLength: 102400
    OptionStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp of when the entity was created.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp of the last time the entity was updated.
        UpdateVersion:
          allOf:
            - $ref: '#/components/schemas/UIntValue'
            - description: The latest version of the entity.
        State:
          allOf:
            - $ref: '#/components/schemas/OptionState'
            - description: 'Provides the <code>OptionState</code> for the domain. '
        PendingDeletion:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the domain is being deleted.
      description: Provides the current status of the entity.
    AccessPoliciesStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: 'The access policy configured for the domain. Access policies can be resource-based, IP-based, or IAM-based. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies" target="_blank"> Configuring access policies</a>for more information. '
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: 'The status of the access policy for the domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: 'The configured access rules for the domain''s document and search endpoints, and the current status of those rules. '
    TagList:
      type: array
      description: 'A list of <code>Tag</code>. '
      items:
        $ref: '#/components/schemas/Tag'
    AddTagsRequest:
      type: object
      required:
        - ARN
        - TagList
      title: AddTagsRequest
      properties:
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: 'Specify the <code>ARN</code> of the domain you want to add tags to. '
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'List of <code>Tag</code> to add to the domain. '
      description: 'Container for the parameters to the <code> <a>AddTags</a> </code> operation. Specifies the tags to attach to the domain. '
    LimitName:
      type: string
    LimitValueList:
      type: array
      items:
        $ref: '#/components/schemas/LimitValue'
    AdditionalLimit:
      type: object
      properties:
        LimitName:
          allOf:
            - $ref: '#/components/schemas/LimitName'
            - description: ' Additional limit is specific to a given InstanceType and for each of its <code> <a>InstanceRole</a> </code> etc. <br/> Attributes and their details: <br/> <ul> <li>MaximumNumberOfDataNodesSupported</li> This attribute is present on the master node only to specify how much data nodes up to which given <code> <a>ESPartitionInstanceType</a> </code> can support as master node. <li>MaximumNumberOfDataNodesWithoutMasterNode</li> This attribute is present on data node only to specify how much data nodes of given <code> <a>ESPartitionInstanceType</a> </code> up to which you don''t need any master nodes to govern them. </ul> '
        LimitValues:
          allOf:
            - $ref: '#/components/schemas/LimitValueList'
            - description: ' Value for a given <code> <a>AdditionalLimit$LimitName</a> </code> . '
      description: ' List of limits that are specific to a given InstanceType and for each of its <code> <a>InstanceRole</a> </code> . '
    AdditionalLimitList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalLimit'
    AdvancedOptions:
      type: object
      description: '<p>Exposes select native OpenSearch configuration values from <code>opensearch.yml</code>. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>'
      additionalProperties:
        $ref: '#/components/schemas/String'
    AdvancedOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: The status of advanced options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: 'The <code>OptionStatus</code> for advanced options for the specified domain. '
      description: '<p>Status of the advanced options for the specified domain. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>'
    SAMLOptionsOutput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if SAML is enabled.
        Idp:
          allOf:
            - $ref: '#/components/schemas/SAMLIdp'
            - description: Describes the SAML identity provider's information.
        SubjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key used for matching the SAML subject attribute.
        RolesKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key used for matching the SAML roles attribute.
        SessionTimeoutMinutes:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The duration, in minutes, after which a user session becomes inactive.'
      description: Describes the SAML application configured for the domain.
    AdvancedSecurityOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if advanced security is enabled.
        InternalUserDatabaseEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if the internal user database is enabled.
        SAMLOptions:
          allOf:
            - $ref: '#/components/schemas/SAMLOptionsOutput'
            - description: Describes the SAML application configured for a domain.
      description: 'The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled. '
    AdvancedSecurityOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if advanced security is enabled.
        InternalUserDatabaseEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if the internal user database is enabled.
        MasterUserOptions:
          allOf:
            - $ref: '#/components/schemas/MasterUserOptions'
            - description: 'Credentials for the master user: username and password, ARN, or both.'
        SAMLOptions:
          allOf:
            - $ref: '#/components/schemas/SAMLOptionsInput'
            - description: The SAML application configuration for the domain.
      description: 'The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled). '
    AdvancedSecurityOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptions'
            - description: Advanced security options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: Status of the advanced security options for the specified domain.
      description: The status of advanced security options for the specified domain.
    PackageID:
      type: string
    AssociatePackageRequest:
      type: object
      title: AssociatePackageRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>AssociatePackage</a> </code> operation. '
    DomainPackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: The internal ID of the package.
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: User-specified name of the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: Currently supports only TXT-DICTIONARY.
        LastUpdated:
          allOf:
            - $ref: '#/components/schemas/LastUpdated'
            - description: The timestamp of the most recent update to the package association status.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain you've associated a package with.
        DomainPackageStatus:
          allOf:
            - $ref: '#/components/schemas/DomainPackageStatus'
            - description: 'State of the association. Values are ASSOCIATING, ASSOCIATION_FAILED, ACTIVE, DISSOCIATING, and DISSOCIATION_FAILED.'
        PackageVersion:
          $ref: '#/components/schemas/PackageVersion'
        ReferencePath:
          allOf:
            - $ref: '#/components/schemas/ReferencePath'
            - description: 'The relative path on Amazon OpenSearch Service nodes, which can be used as synonym_path when the package is a synonym file.'
        ErrorDetails:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: Additional information if the package is in an error state. Null otherwise.
      description: Information on a package associated with a domain.
    AutoTuneType:
      type: string
      enum:
        - SCHEDULED_ACTION
      description: Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.
    AutoTuneDetails:
      type: object
      properties:
        ScheduledAutoTuneDetails:
          $ref: '#/components/schemas/ScheduledAutoTuneDetails'
      description: 'Specifies details about the Auto-Tune action. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    AutoTune:
      type: object
      properties:
        AutoTuneType:
          allOf:
            - $ref: '#/components/schemas/AutoTuneType'
            - description: Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.
        AutoTuneDetails:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDetails'
            - description: 'Specifies details about the Auto-Tune action. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      description: Specifies the Auto-Tune type and Auto-Tune action details.
    AutoTuneDate:
      type: string
      description: The timestamp of the Auto-Tune action scheduled for the domain.
      format: date-time
    ScheduledAutoTuneDetails:
      type: object
      properties:
        Date:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDate'
            - description: The timestamp of the Auto-Tune action scheduled for the domain.
        ActionType:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneActionType'
            - description: The Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING and JVM_YOUNG_GEN_TUNING.
        Action:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneDescription'
            - description: The Auto-Tune action description.
        Severity:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneSeverityType'
            - description: 'The Auto-Tune action severity. Valid values are LOW, MEDIUM, and HIGH.'
      description: 'Specifies details about the scheduled Auto-Tune action. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    AutoTuneList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTune'
    StartAt:
      type: string
      format: date-time
    Duration:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/DurationValue'
            - description: 'Integer to specify the value of a maintenance schedule duration. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
        Unit:
          allOf:
            - $ref: '#/components/schemas/TimeUnit'
            - description: 'The unit of a maintenance schedule duration. Valid value is HOURS. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      description: 'The maintenance schedule duration: duration value and duration unit. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    AutoTuneMaintenanceSchedule:
      type: object
      properties:
        StartAt:
          allOf:
            - $ref: '#/components/schemas/StartAt'
            - description: The timestamp at which the Auto-Tune maintenance schedule starts.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Duration'
            - description: 'Specifies maintenance schedule duration: duration value and duration unit. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
        CronExpressionForRecurrence:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'A cron expression for a recurring maintenance schedule. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      description: 'Specifies the Auto-Tune maintenance schedule. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    AutoTuneOptions:
      type: object
      properties:
        DesiredState:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDesiredState'
            - description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
        RollbackOnDisable:
          allOf:
            - $ref: '#/components/schemas/RollbackOnDisable'
            - description: 'The rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK and DEFAULT_ROLLBACK. '
        MaintenanceSchedules:
          allOf:
            - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
            - description: 'A list of maintenance schedules. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      description: 'The Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules. '
    AutoTuneOptionsInput:
      type: object
      properties:
        DesiredState:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDesiredState'
            - description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
        MaintenanceSchedules:
          allOf:
            - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
            - description: 'A list of maintenance schedules. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      description: 'The Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules. '
    AutoTuneState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ENABLE_IN_PROGRESS
        - DISABLE_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_SCHEDULED
        - DISABLED_AND_ROLLBACK_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_COMPLETE
        - DISABLED_AND_ROLLBACK_ERROR
        - ERROR
      description: 'The Auto-Tune state for the domain. For valid states see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service</a>. '
    AutoTuneOptionsOutput:
      type: object
      properties:
        State:
          allOf:
            - $ref: '#/components/schemas/AutoTuneState'
            - description: 'The <code>AutoTuneState</code> for the domain. '
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message while enabling or disabling Auto-Tune.
      description: 'The Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules. '
    AutoTuneStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp of the Auto-Tune options creation date.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp of when the Auto-Tune options were last updated.
        UpdateVersion:
          allOf:
            - $ref: '#/components/schemas/UIntValue'
            - description: The latest version of the Auto-Tune options.
        State:
          allOf:
            - $ref: '#/components/schemas/AutoTuneState'
            - description: 'The <code>AutoTuneState</code> for the domain. '
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message while enabling or disabling Auto-Tune.
        PendingDeletion:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the domain is being deleted.
      description: Provides the current Auto-Tune status for the domain.
    AutoTuneOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptions'
            - description: Specifies Auto-Tune options for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/AutoTuneStatus'
            - description: The status of the Auto-Tune options for the domain.
      description: The Auto-Tune status for the domain.
    UpdateTimestamp:
      type: string
      format: date-time
    UIntValue:
      type: integer
      minimum: 0
    BackendRole:
      type: string
      minLength: 1
      maxLength: 256
    CancelServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: CancelServiceSoftwareUpdateRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain that you want to stop the latest service software update on.
      description: 'Container for the parameters to the <code> <a>CancelServiceSoftwareUpdate</a> </code> operation. Specifies the name of the domain that you wish to cancel a service software update on. '
    ServiceSoftwareOptions:
      type: object
      properties:
        CurrentVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current service software version present on the domain.
        NewVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The new service software version if one is available.
        UpdateAvailable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' <code>True</code> if you''re able to update your service software version. <code>False</code> if you can''t update your service software version. '
        Cancellable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' <code>True</code> if you''re able to cancel your service software version update. <code>False</code> if you can''t cancel your service software update. '
        UpdateStatus:
          allOf:
            - $ref: '#/components/schemas/DeploymentStatus'
            - description: 'The status of your service software update. This field can take the following values: <code> ELIGIBLE</code>, <code>PENDING_UPDATE</code>, <code>IN_PROGRESS</code>, <code>COMPLETED</code>, and <code> NOT_ELIGIBLE</code>. '
        Description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The description of the <code>UpdateStatus</code>. '
        AutomatedUpdateDate:
          allOf:
            - $ref: '#/components/schemas/DeploymentCloseDateTimeStamp'
            - description: 'The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software. '
        OptionalDeployment:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' <code>True</code> if a service software is never automatically updated. <code>False</code> if a service software is automatically updated after <code>AutomatedUpdateDate</code>. '
      description: The current options of an domain service software options.
    CloudWatchLogsLogGroupArn:
      type: string
      pattern: .*
      description: ARN of the Cloudwatch log group to publish logs to.
      minLength: 20
      maxLength: 2048
    ClusterConfig:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: 'The instance type for an OpenSearch cluster. UltraWarm instance types are not supported for data instances. '
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: The number of instances in the specified domain cluster.
        DedicatedMasterEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-dedicatedmasternodes" target="_blank">Dedicated master nodes in Amazon OpenSearch Service </a> for more information. '
        ZoneAwarenessEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html" target="_blank">Configuring a multi-AZ domain in Amazon OpenSearch Service </a> for more information. '
        ZoneAwarenessConfig:
          allOf:
            - $ref: '#/components/schemas/ZoneAwarenessConfig'
            - description: The zone awareness configuration for a domain when zone awareness is enabled.
        DedicatedMasterType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The instance type for a dedicated master node.
        DedicatedMasterCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
        WarmEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable UltraWarm storage.
        WarmType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
            - description: The instance type for the OpenSearch cluster's warm nodes.
        WarmCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: The number of UltraWarm nodes in the cluster.
        ColdStorageOptions:
          allOf:
            - $ref: '#/components/schemas/ColdStorageOptions'
            - description: Specifies the <code>ColdStorageOptions</code> config for a Domain
      description: 'The configuration for the domain cluster, such as the type and number of instances.'
    ClusterConfigStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: The cluster configuration for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The cluster configuration status for the specified domain.
      description: The configuration status for the specified domain.
    CognitoOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The option to enable Cognito for OpenSearch Dashboards authentication.
        UserPoolId:
          allOf:
            - $ref: '#/components/schemas/UserPoolId'
            - description: The Cognito user pool ID for OpenSearch Dashboards authentication.
        IdentityPoolId:
          allOf:
            - $ref: '#/components/schemas/IdentityPoolId'
            - description: The Cognito identity pool ID for OpenSearch Dashboards authentication.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The role ARN that provides OpenSearch permissions for accessing Cognito resources.
      description: 'Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
    CognitoOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: Cognito options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the Cognito options for the specified domain.
      description: The status of the Cognito options for the specified domain.
    CommitMessage:
      type: string
      maxLength: 160
    CompatibleVersionsMap:
      type: object
      properties:
        SourceVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The current version of OpenSearch a domain is on.
        TargetVersions:
          $ref: '#/components/schemas/VersionList'
      description: ' A map from an <code> <a>EngineVersion</a> </code> to a list of compatible <code> <a>EngineVersion</a> </code> s to which the domain can be upgraded. '
    CompatibleVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleVersionsMap'
    VersionString:
      type: string
      pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
      minLength: 14
      maxLength: 18
    VersionList:
      type: array
      description: 'List of supported OpenSearch versions. '
      items:
        $ref: '#/components/schemas/VersionString'
    ConnectionAlias:
      type: string
      pattern: '[a-zA-Z][a-zA-Z0-9\-\_]+'
      minLength: 2
      maxLength: 100
    ConnectionStatusMessage:
      type: string
    EBSOptions:
      type: object
      properties:
        EBSEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether EBS-based storage is enabled.
        VolumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: The volume type for EBS-based storage.
        VolumeSize:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: Integer to specify the size of an EBS volume.
        Iops:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: The IOPD for a Provisioned IOPS EBS volume (SSD).
      description: 'Options to enable, disable, and specify the properties of EBS storage volumes.'
    SnapshotOptions:
      type: object
      properties:
        AutomatedSnapshotStartHour:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
      description: 'The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours. '
    VPCOptions:
      type: object
      properties:
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The subnets for the VPC endpoint.
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The security groups for the VPC endpoint.
      description: 'Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
    EncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The option to enable encryption at rest.
        KmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID for encryption at rest options.
      description: Specifies encryption at rest options.
    NodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable node-to-node encryption.
      description: The node-to-node encryption options.
    LogPublishingOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LogPublishingOption'
    DomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether only HTTPS endpoint should be enabled for the domain.
        TLSSecurityPolicy:
          allOf:
            - $ref: '#/components/schemas/TLSSecurityPolicy'
            - description: 'Specify the TLS security policy to apply to the HTTPS endpoint of the domain. <br/> Can be one of the following values: <ul> <li> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLSv1.0 and higher. </li> <li> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLSv1.2 </li> </ul> '
        CustomEndpointEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable a custom endpoint for the domain.
        CustomEndpoint:
          allOf:
            - $ref: '#/components/schemas/DomainNameFqdn'
            - description: The fully qualified domain for your custom endpoint.
        CustomEndpointCertificateArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ACM certificate ARN for your custom endpoint.
      description: Options to configure the endpoint for the domain.
    CreateDomainRequest:
      type: object
      required:
        - DomainName
      title: CreateDomainRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: 'The name of the Amazon OpenSearch Service domain you''re creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a lowercase letter and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
        EngineVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: 'String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the Amazon OpenSearch Service domain. For example, "OpenSearch_1.0" or "Elasticsearch_7.9". For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains" target="_blank">Creating and managing Amazon OpenSearch Service domains </a>. '
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: 'Configuration options for a domain. Specifies the instance type and number of instances in the domain. '
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: 'Options to enable, disable, and specify the type and size of EBS storage volumes.'
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: IAM access policy as a JSON-formatted string.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: 'Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours.'
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: 'Options to specify the subnets and security groups for a VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank">Launching your Amazon OpenSearch Service domains using a VPC </a>. '
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: 'Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Options for encryption of data at rest.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: Node-to-node encryption options.
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: 'Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. '
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of OpenSearch log. '
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: Options to specify configurations that will be applied to the domain endpoint.
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
            - description: Specifies advanced security options.
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'A list of <code>Tag</code> added during domain creation. '
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsInput'
            - description: Specifies Auto-Tune options.
    DomainStatus:
      type: object
      required:
        - DomainId
        - DomainName
        - ARN
        - ClusterConfig
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The unique identifier for the specified domain.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: 'The name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). '
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: 'The Amazon Resource Name (ARN) of a domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html" target="_blank">IAM identifiers </a> in the <i>AWS Identity and Access Management User Guide</i> for more information. '
        Created:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'The domain creation status. <code>True</code> if the creation of a domain is complete. <code> False </code> if domain creation is still in progress. '
        Deleted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'The domain deletion status. <code>True</code> if a delete request has been received for the domain but resource cleanup is still in progress. <code>False</code> if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned. '
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/ServiceUrl'
            - description: The domain endpoint that you use to submit index and search requests.
        Endpoints:
          allOf:
            - $ref: '#/components/schemas/EndpointsMap'
            - description: 'Map containing the domain endpoints used to submit index and search requests. Example <code>key, value</code>: <code>''vpc'',''vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com''</code>. '
        Processing:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'The status of the domain configuration. <code>True</code> if Amazon OpenSearch Service is processing configuration changes. <code>False</code> if the configuration is active. '
        UpgradeProcessing:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'The status of a domain version upgrade. <code>True</code> if Amazon OpenSearch Service is undergoing a version upgrade. <code>False</code> if the configuration is active. '
        EngineVersion:
          $ref: '#/components/schemas/VersionString'
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: The type and number of instances in the domain.
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: 'The <code>EBSOptions</code> for the specified domain. '
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: IAM access policy as a JSON-formatted string.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: 'The status of the <code>SnapshotOptions</code>. '
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfo'
            - description: 'The <code>VPCOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: 'The <code>CognitoOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: 'The status of the <code>EncryptionAtRestOptions</code>. '
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: 'The status of the <code>NodeToNodeEncryptionOptions</code>. '
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: 'The status of the <code>AdvancedOptions</code>. '
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: Log publishing options for the given domain.
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: The current status of the domain's service software.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: The current status of the domain's endpoint options.
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptions'
            - description: The current status of the domain's advanced security options.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsOutput'
            - description: The current status of the domain's Auto-Tune options.
      description: The current status of a domain.
    DomainInformationContainer:
      type: object
      properties:
        AWSDomainInformation:
          $ref: '#/components/schemas/AWSDomainInformation'
    CreateOutboundConnectionRequest:
      type: object
      required:
        - LocalDomainInfo
        - RemoteDomainInfo
        - ConnectionAlias
      title: CreateOutboundConnectionRequest
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the local OpenSearch domain. '
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>AWSDomainInformation</a> </code> for the remote OpenSearch domain. '
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: The connection alias used used by the customer for this cross-cluster connection.
      description: 'Container for the parameters to the <code> <a>CreateOutboundConnection</a> </code> operation. '
    OutboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatusCode'
            - description: '<p>The state code for the outbound connection. Can be one of the following:</p> <ul> <li>VALIDATING: The outbound connection request is being validated.</li> <li>VALIDATION_FAILED: Validation failed for the connection request.</li> <li>PENDING_ACCEPTANCE: Outbound connection request is validated and is not yet accepted by the remote domain owner. </li> <li>APPROVED: Outbound connection has been approved by the remote domain owner for getting provisioned.</li> <li>PROVISIONING: Outbound connection request is in process.</li> <li>ACTIVE: Outbound connection is active and ready to use.</li> <li>REJECTING: Outbound connection rejection by remote domain owner is in progress.</li> <li>REJECTED: Outbound connection request is rejected by remote domain owner.</li> <li>DELETING: Outbound connection deletion is in progress.</li> <li>DELETED: Outbound connection is deleted and can no longer be used.</li> </ul>'
        Message:
          allOf:
            - $ref: '#/components/schemas/ConnectionStatusMessage'
            - description: Verbose information for the outbound connection status.
      description: The connection status of an outbound cross-cluster connection.
    PackageName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 3
      maxLength: 28
    PackageType:
      type: string
      enum:
        - TXT-DICTIONARY
    PackageDescription:
      type: string
      maxLength: 1024
    PackageSource:
      type: object
      properties:
        S3BucketName:
          allOf:
            - $ref: '#/components/schemas/S3BucketName'
            - description: The name of the Amazon S3 bucket containing the package.
        S3Key:
          allOf:
            - $ref: '#/components/schemas/S3Key'
            - description: Key (file name) of the package.
      description: 'The Amazon S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code> '
    CreatePackageRequest:
      type: object
      required:
        - PackageName
        - PackageType
        - PackageSource
      title: CreatePackageRequest
      properties:
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: Unique identifier for the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: Type of package. Currently supports only TXT-DICTIONARY.
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: Description of the package.
        PackageSource:
          allOf:
            - $ref: '#/components/schemas/PackageSource'
            - description: 'The Amazon S3 location from which to import the package. '
      description: ' Container for request parameters to the <code> <a>CreatePackage</a> </code> operation. '
    PackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: Internal ID of the package.
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: User-specified name of the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: Currently supports only TXT-DICTIONARY.
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: User-specified description of the package.
        PackageStatus:
          allOf:
            - $ref: '#/components/schemas/PackageStatus'
            - description: 'Current state of the package. Values are COPYING, COPY_FAILED, AVAILABLE, DELETING, and DELETE_FAILED.'
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/CreatedAt'
            - description: The timestamp of when the package was created.
        LastUpdatedAt:
          $ref: '#/components/schemas/LastUpdated'
        AvailablePackageVersion:
          $ref: '#/components/schemas/PackageVersion'
        ErrorDetails:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: Additional information if the package is in an error state. Null otherwise.
      description: Basic information about a package.
    CreatedAt:
      type: string
      format: date-time
    DeleteDomainRequest:
      type: object
      title: DeleteDomainRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>DeleteDomain</a> </code> operation. Specifies the name of the domain you want to delete. '
    DeleteInboundConnectionRequest:
      type: object
      title: DeleteInboundConnectionRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>DeleteInboundConnection</a> </code> operation. '
    DeleteOutboundConnectionRequest:
      type: object
      title: DeleteOutboundConnectionRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>DeleteOutboundConnection</a> </code> operation. '
    OutboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>DomainInformation</a> </code> for the local OpenSearch domain. '
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: 'The <code> <a>DomainInformation</a> </code> for the remote OpenSearch domain. '
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: The connection ID for the outbound cross-cluster connection.
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: The connection alias for the outbound cross-cluster connection.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatus'
            - description: 'The <code> <a>OutboundConnectionStatus</a> </code> for the outbound connection. '
      description: Specifies details about an outbound connection.
    DeletePackageRequest:
      type: object
      title: DeletePackageRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>DeletePackage</a> </code> operation. '
    DeploymentCloseDateTimeStamp:
      type: string
      format: date-time
    DeploymentStatus:
      type: string
      enum:
        - PENDING_UPDATE
        - IN_PROGRESS
        - COMPLETED
        - NOT_ELIGIBLE
        - ELIGIBLE
    MaxResults:
      type: integer
      description: ' Set this value to limit the number of results returned. '
      maximum: 100
    NextToken:
      type: string
      description: ' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
    DescribeDomainAutoTunesRequest:
      type: object
      title: DescribeDomainAutoTunesRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: NextToken is sent in case the earlier API call results contain the NextToken. Used for pagination.
      description: 'Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation. '
    DescribeDomainConfigRequest:
      type: object
      title: DescribeDomainConfigRequest
      properties: {}
      description: 'Container for the parameters to the <code>DescribeDomainConfig</code> operation. Specifies the domain name for which you want configuration information. '
    DomainConfig:
      type: object
      properties:
        EngineVersion:
          allOf:
            - $ref: '#/components/schemas/VersionStatus'
            - description: String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the OpenSearch or Elasticsearch domain.
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfigStatus'
            - description: 'The <code>ClusterConfig</code> for the domain. '
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptionsStatus'
            - description: 'The <code>EBSOptions</code> for the domain. '
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/AccessPoliciesStatus'
            - description: IAM access policy as a JSON-formatted string.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptionsStatus'
            - description: 'The <code>SnapshotOptions</code> for the domain. '
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfoStatus'
            - description: 'The <code>VPCOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptionsStatus'
            - description: 'The <code>CognitoOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptionsStatus'
            - description: 'The <code>EncryptionAtRestOptions</code> for the domain. '
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptionsStatus'
            - description: 'The <code>NodeToNodeEncryptionOptions</code> for the domain. '
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptionsStatus'
            - description: 'The <code>AdvancedOptions</code> for the domain. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced options </a> for more information. '
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptionsStatus'
            - description: Log publishing options for the given domain.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptionsStatus'
            - description: 'The <code>DomainEndpointOptions</code> for the domain. '
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsStatus'
            - description: 'Specifies <code>AdvancedSecurityOptions</code> for the domain. '
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsStatus'
            - description: 'Specifies <code>AutoTuneOptions</code> for the domain. '
      description: The configuration of a domain.
    DescribeDomainRequest:
      type: object
      title: DescribeDomainRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>DescribeDomain</a> </code> operation. '
    DomainNameList:
      type: array
      description: A list of domain names.
      items:
        $ref: '#/components/schemas/DomainName'
    DescribeDomainsRequest:
      type: object
      required:
        - DomainNames
      title: DescribeDomainsRequest
      properties:
        DomainNames:
          allOf:
            - $ref: '#/components/schemas/DomainNameList'
            - description: The domains for which you want information.
      description: 'Container for the parameters to the <code> <a>DescribeDomains</a> </code> operation. By default, the API returns the status of all domains. '
    DomainStatusList:
      type: array
      description: A list that contains the status of each requested domain.
      items:
        $ref: '#/components/schemas/DomainStatus'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    DescribeInboundConnectionsRequest:
      type: object
      title: DescribeInboundConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: ' A list of filters used to match properties for inbound cross-cluster connections. Available <code> <a>Filter</a> </code> values are: <ul> <li>connection-id</li> <li>local-domain-info.domain-name</li> <li>local-domain-info.owner-id</li> <li>local-domain-info.region</li> <li>remote-domain-info.domain-name</li> </ul> '
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results.'
      description: 'Container for the parameters to the <code> <a>DescribeInboundConnections</a> </code> operation. '
    InboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/InboundConnection'
    DescribeInstanceTypeLimitsRequest:
      type: object
      title: DescribeInstanceTypeLimitsRequest
      properties: {}
      description: ' Container for the parameters to the <code> <a>DescribeInstanceTypeLimits</a> </code> operation. '
    LimitsByRole:
      type: object
      description: ' The role of a given instance and all applicable limits. The role performed by a given OpenSearch instance can be one of the following: <ul> <li>data: If the given InstanceType is used as a data node</li> <li>master: If the given InstanceType is used as a master node</li> <li>ultra_warm: If the given InstanceType is used as a warm node</li> </ul> '
      additionalProperties:
        $ref: '#/components/schemas/Limits'
    DescribeOutboundConnectionsRequest:
      type: object
      title: DescribeOutboundConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: ' A list of filters used to match properties for outbound cross-cluster connections. Available <code> <a>Filter</a> </code> names for this operation are: <ul> <li>connection-id</li> <li>remote-domain-info.domain-name</li> <li>remote-domain-info.owner-id</li> <li>remote-domain-info.region</li> <li>local-domain-info.domain-name</li> </ul> '
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: NextToken is sent in case the earlier API call results contain the NextToken parameter. Used for pagination.
      description: 'Container for the parameters to the <code> <a>DescribeOutboundConnections</a> </code> operation. '
    OutboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/OutboundConnection'
    DescribePackagesFilterName:
      type: string
      enum:
        - PackageID
        - PackageName
        - PackageStatus
    DescribePackagesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/DescribePackagesFilterValue'
    DescribePackagesFilterList:
      type: array
      description: 'A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response. '
      items:
        $ref: '#/components/schemas/DescribePackagesFilter'
    DescribePackagesFilterValue:
      type: string
      pattern: '^[0-9a-zA-Z\*\.\\/\?-]*$'
    DescribePackagesRequest:
      type: object
      title: DescribePackagesRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterList'
            - description: 'Only returns packages that match the <code>DescribePackagesFilterList</code> values. '
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: Limits results to a maximum number of packages.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page. '
      description: ' Container for the request parameters to the <code> <a>DescribePackage</a> </code> operation. '
    PackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDetails'
    GUID:
      type: string
      pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
      minLength: 36
      maxLength: 36
    DescribeReservedInstanceOfferingsRequest:
      type: object
      title: DescribeReservedInstanceOfferingsRequest
      properties: {}
      description: 'Container for parameters to <code>DescribeReservedInstanceOfferings</code> '
    ReservedInstanceOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstanceOffering'
    DescribeReservedInstancesRequest:
      type: object
      title: DescribeReservedInstancesRequest
      properties: {}
      description: 'Container for parameters to <code>DescribeReservedInstances</code> '
    ReservedInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstance'
    DissociatePackageRequest:
      type: object
      title: DissociatePackageRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>DissociatePackage</a> </code> operation. '
    VersionStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The OpenSearch version for the specified OpenSearch domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the OpenSearch version options for the specified OpenSearch domain.
      description: The status of the OpenSearch version options for the specified OpenSearch domain.
    EBSOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: The EBS options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the EBS options for the specified domain.
      description: Status of the EBS options for the specified domain.
    SnapshotOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: The daily snapshot options specified for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of a daily automated snapshot.
      description: Status of a daily automated snapshot.
    VPCDerivedInfoStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfo'
            - description: The VPC options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the VPC options for the specified domain.
      description: Status of the VPC options for the specified domain.
    EncryptionAtRestOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: The Encryption At Rest options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the Encryption At Rest options for the specified domain.
      description: Status of the encryption At Rest options for the specified domain.
    NodeToNodeEncryptionOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: The node-to-node encryption options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the node-to-node encryption options for the specified domain.
      description: Status of the node-to-node encryption options for the specified domain.
    LogPublishingOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: The log publishing options configured for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: 'The status of the log publishing options for the domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: The configured log publishing options for the domain and their current status.
    DomainEndpointOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: Options to configure the endpoint for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: 'The status of the endpoint options for the domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: The configured endpoint options for the domain and their current status.
    DomainId:
      type: string
      description: Unique identifier for the domain.
      minLength: 1
      maxLength: 64
    EngineType:
      type: string
      enum:
        - OpenSearch
        - Elasticsearch
    DomainInfo:
      type: object
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: 'The <code>DomainName</code>. '
        EngineType:
          allOf:
            - $ref: '#/components/schemas/EngineType'
            - description: ' Specifies the <code>EngineType</code> of the domain.'
    DomainInfoList:
      type: array
      description: Contains the list of domain information.
      items:
        $ref: '#/components/schemas/DomainInfo'
    LastUpdated:
      type: string
      format: date-time
    DomainPackageStatus:
      type: string
      enum:
        - ASSOCIATING
        - ASSOCIATION_FAILED
        - ACTIVE
        - DISSOCIATING
        - DISSOCIATION_FAILED
    PackageVersion:
      type: string
    ReferencePath:
      type: string
    ErrorDetails:
      type: object
      properties:
        ErrorType:
          $ref: '#/components/schemas/ErrorType'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
    DomainPackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/DomainPackageDetails'
    ServiceUrl:
      type: string
      description: 'The endpoint to which service requests are submitted. For example, <code> search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com </code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>. '
    EndpointsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ServiceUrl'
    VPCDerivedInfo:
      type: object
      properties:
        VPCId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The VPC ID for the domain. Exists only if the domain was created with <code>VPCOptions</code>.
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The subnets for the VPC endpoint.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The Availability Zones for the domain. Exists only if the domain was created with <code>VPCOptions</code>.
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The security groups for the VPC endpoint.
      description: 'Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>. '
    Double:
      type: number
      format: double
    DurationValue:
      type: integer
      description: 'Integer to specify the value of a maintenance schedule duration. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
      minimum: 1
      maximum: 24
    TimeUnit:
      type: string
      enum:
        - HOURS
      description: 'The unit of a maintenance schedule duration. Valid value is HOUR. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. '
    ErrorType:
      type: string
    ErrorMessage:
      type: string
    NonEmptyString:
      type: string
      pattern: '[a-zA-Z0-9\-\_\.]+'
      minLength: 1
      maxLength: 100
    ValueStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
    GetCompatibleVersionsRequest:
      type: object
      title: GetCompatibleVersionsRequest
      properties: {}
      description: ' Container for the request parameters to <code> <a>GetCompatibleVersions</a> </code> operation. '
    GetPackageVersionHistoryRequest:
      type: object
      title: GetPackageVersionHistoryRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>GetPackageVersionHistory</a> </code> operation. '
    PackageVersionHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionHistory'
    GetUpgradeHistoryRequest:
      type: object
      title: GetUpgradeHistoryRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>GetUpgradeHistory</a> </code> operation. '
    UpgradeHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeHistory'
    GetUpgradeStatusRequest:
      type: object
      title: GetUpgradeStatusRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>GetUpgradeStatus</a> </code> operation. '
    UpgradeStep:
      type: string
      enum:
        - PRE_UPGRADE_CHECK
        - SNAPSHOT
        - UPGRADE
    UpgradeStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - SUCCEEDED_WITH_ISSUES
        - FAILED
    UpgradeName:
      type: string
    InboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/InboundConnectionStatusCode'
            - description: '<p>The state code for the inbound connection. Can be one of the following:</p> <ul> <li>PENDING_ACCEPTANCE: Inbound connection is not yet accepted by the remote domain owner.</li> <li>APPROVED: Inbound connection is pending acceptance by the remote domain owner.</li> <li>PROVISIONING: Inbound connection provisioning is in progress.</li> <li>ACTIVE: Inbound connection is active and ready to use.</li> <li>REJECTING: Inbound connection rejection is in process.</li> <li>REJECTED: Inbound connection is rejected.</li> <li>DELETING: Inbound connection deletion is in progress.</li> <li>DELETED: Inbound connection is deleted and can no longer be used.</li> </ul>'
        Message:
          allOf:
            - $ref: '#/components/schemas/ConnectionStatusMessage'
            - description: Verbose information for the inbound connection status.
      description: The connection status of an inbound cross-cluster connection.
    InboundConnectionStatusCode:
      type: string
      enum:
        - PENDING_ACCEPTANCE
        - APPROVED
        - PROVISIONING
        - ACTIVE
        - REJECTING
        - REJECTED
        - DELETING
        - DELETED
    InstanceCount:
      type: integer
      description: The number of EC2 instances in the domain.
      minimum: 1
    MinimumInstanceCount:
      type: integer
      description: ' Minimum number of instances that can be instantiated for a given InstanceType. '
    MaximumInstanceCount:
      type: integer
      description: ' Maximum number of instances that can be instantiated for a given InstanceType. '
    InstanceCountLimits:
      type: object
      properties:
        MinimumInstanceCount:
          $ref: '#/components/schemas/MinimumInstanceCount'
        MaximumInstanceCount:
          $ref: '#/components/schemas/MaximumInstanceCount'
      description: ' InstanceCountLimits represents the limits on the number of instances that can be created in Amazon OpenSearch Service for a given InstanceType. '
    InstanceLimits:
      type: object
      properties:
        InstanceCountLimits:
          $ref: '#/components/schemas/InstanceCountLimits'
      description: 'InstanceLimits represents the list of instance-related attributes that are available for a given InstanceType. '
    InstanceRole:
      type: string
    InstanceRoleList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceRole'
    InstanceTypeDetails:
      type: object
      properties:
        InstanceType:
          $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
        EncryptionEnabled:
          $ref: '#/components/schemas/Boolean'
        CognitoEnabled:
          $ref: '#/components/schemas/Boolean'
        AppLogsEnabled:
          $ref: '#/components/schemas/Boolean'
        AdvancedSecurityEnabled:
          $ref: '#/components/schemas/Boolean'
        WarmEnabled:
          $ref: '#/components/schemas/Boolean'
        InstanceRole:
          $ref: '#/components/schemas/InstanceRoleList'
    InstanceTypeDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeDetails'
    Integer:
      type: integer
    Issue:
      type: string
    Issues:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    LimitValue:
      type: string
    StorageTypeList:
      type: array
      items:
        $ref: '#/components/schemas/StorageType'
    Limits:
      type: object
      properties:
        StorageTypes:
          allOf:
            - $ref: '#/components/schemas/StorageTypeList'
            - description: 'Storage-related types and attributes that are available for a given InstanceType. '
        InstanceLimits:
          $ref: '#/components/schemas/InstanceLimits'
        AdditionalLimits:
          allOf:
            - $ref: '#/components/schemas/AdditionalLimitList'
            - description: ' List of additional limits that are specific to a given InstanceType and for each of its <code> <a>InstanceRole</a> </code> . '
      description: ' Limits for a given InstanceType and for each of its roles. <br/> Limits contains the following: <code> <a>StorageTypes</a> </code>, <code> <a>InstanceLimits</a> </code>, and <code> <a>AdditionalLimits</a> </code> '
    ListDomainNamesRequest:
      type: object
      title: ListDomainNamesRequest
      properties: {}
      description: ' Container for the parameters to the <code><a>ListDomainNames</a></code> operation.'
    ListDomainsForPackageRequest:
      type: object
      title: ListDomainsForPackageRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>ListDomainsForPackage</a> </code> operation. '
    ListInstanceTypeDetailsRequest:
      type: object
      title: ListInstanceTypeDetailsRequest
      properties: {}
    ListPackagesForDomainRequest:
      type: object
      title: ListPackagesForDomainRequest
      properties: {}
      description: ' Container for the request parameters to the <code> <a>ListPackagesForDomain</a> </code> operation. '
    ListTagsRequest:
      type: object
      title: ListTagsRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>ListTags</a> </code> operation. Specify the <code>ARN</code> of the domain that the tags you want to view are attached to. '
    ListVersionsRequest:
      type: object
      title: ListVersionsRequest
      properties: {}
      description: '<p> Container for the parameters to the <code> <a>ListVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, there are no more results to retrieve. </p> </p>'
    LogType:
      type: string
      enum:
        - INDEX_SLOW_LOGS
        - SEARCH_SLOW_LOGS
        - ES_APPLICATION_LOGS
        - AUDIT_LOGS
      description: 'Type of log file. Can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute. </li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute. </li> <li>ES_APPLICATION_LOGS: OpenSearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting. </li> <li>AUDIT_LOGS: Audit logs contain records of user requests for access from the domain.</li> </ul> '
    Long:
      type: integer
    Username:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 64
      format: password
    Password:
      type: string
      pattern: .*
      minLength: 8
      maxLength: 128
      format: password
    OptionState:
      type: string
      enum:
        - RequiresIndexDocuments
        - Processing
        - Active
      description: '<p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in progress.</li> <li>Active: The request change is processed and deployed to the domain.</li> </ul>'
    OutboundConnectionStatusCode:
      type: string
      enum:
        - VALIDATING
        - VALIDATION_FAILED
        - PENDING_ACCEPTANCE
        - APPROVED
        - PROVISIONING
        - ACTIVE
        - REJECTING
        - REJECTED
        - DELETING
        - DELETED
    PackageStatus:
      type: string
      enum:
        - COPYING
        - COPY_FAILED
        - VALIDATING
        - VALIDATION_FAILED
        - AVAILABLE
        - DELETING
        - DELETED
        - DELETE_FAILED
    PackageVersionHistory:
      type: object
      properties:
        PackageVersion:
          allOf:
            - $ref: '#/components/schemas/PackageVersion'
            - description: The package version.
        CommitMessage:
          allOf:
            - $ref: '#/components/schemas/CommitMessage'
            - description: A message associated with the package version.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/CreatedAt'
            - description: The timestamp of when the package was created.
      description: Details of a package version.
    ReservationToken:
      type: string
      pattern: .*
      minLength: 5
      maxLength: 64
    PurchaseReservedInstanceOfferingRequest:
      type: object
      required:
        - ReservedInstanceOfferingId
        - ReservationName
      title: PurchaseReservedInstanceOfferingRequest
      properties:
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The ID of the reserved OpenSearch instance offering to purchase.
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: A customer-specified identifier to track this reservation.
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/InstanceCount'
            - description: The number of OpenSearch instances to reserve.
      description: 'Container for parameters to <code>PurchaseReservedInstanceOffering</code> '
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The frequency of the recurring charge.
      description: 'Contains the specific price and frequency of a recurring charges for a reserved OpenSearch instance, or for a reserved OpenSearch instance offering. '
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    RejectInboundConnectionRequest:
      type: object
      title: RejectInboundConnectionRequest
      properties: {}
      description: 'Container for the parameters to the <code> <a>RejectInboundConnection</a> </code> operation. '
    RemoveTagsRequest:
      type: object
      required:
        - ARN
        - TagKeys
      title: RemoveTagsRequest
      properties:
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: 'The <code>ARN</code> of the domain from which you want to delete the specified tags. '
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: 'The <code>TagKey</code> list you want to remove from the domain. '
      description: 'Container for the parameters to the <code> <a>RemoveTags</a> </code> operation. Specify the <code>ARN</code> for the domain from which you want to remove the specified <code>TagKey</code>. '
    ReservedInstancePaymentOption:
      type: string
      enum:
        - ALL_UPFRONT
        - PARTIAL_UPFRONT
        - NO_UPFRONT
    ReservedInstance:
      type: object
      properties:
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: The customer-specified identifier to track this reservation.
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The unique identifier for the reservation.
        BillingSubscriptionId:
          $ref: '#/components/schemas/Long'
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The offering identifier.
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The OpenSearch instance type offered by the reserved instance offering.
        StartTime:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The time the reservation started.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The duration, in seconds, for which the OpenSearch instance is reserved.'
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The upfront fixed charge you will paid to purchase the specific reserved OpenSearch instance offering.
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The rate you are charged for each hour for the domain that is using this reserved instance.
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The currency code for the reserved OpenSearch instance offering.
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of OpenSearch instances that have been reserved.
        State:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the reserved OpenSearch instance.
        PaymentOption:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancePaymentOption'
            - description: The payment option as defined in the reserved OpenSearch instance offering.
        RecurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargeList'
            - description: The charge to your account regardless of whether you are creating any domains using the instance offering.
      description: Details of a reserved OpenSearch instance.
    ReservedInstanceOffering:
      type: object
      properties:
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The OpenSearch reserved instance offering identifier.
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The OpenSearch instance type offered by the reserved instance offering.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The duration, in seconds, for which the offering will reserve the OpenSearch instance.'
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The upfront fixed charge you will pay to purchase the specific reserved OpenSearch instance offering.
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The rate you are charged for each hour the domain that is using the offering is running.
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The currency code for the reserved OpenSearch instance offering.
        PaymentOption:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancePaymentOption'
            - description: Payment option for the reserved OpenSearch instance offering
        RecurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargeList'
            - description: The charge to your account regardless of whether you are creating any domains using the instance offering.
      description: Details of a reserved OpenSearch instance offering.
    SAMLEntityId:
      type: string
      minLength: 8
      maxLength: 512
    SAMLMetadata:
      type: string
      minLength: 1
      maxLength: 1048576
    SAMLIdp:
      type: object
      required:
        - MetadataContent
        - EntityId
      properties:
        MetadataContent:
          allOf:
            - $ref: '#/components/schemas/SAMLMetadata'
            - description: The metadata of the SAML application in XML format.
        EntityId:
          allOf:
            - $ref: '#/components/schemas/SAMLEntityId'
            - description: The unique entity ID of the application in SAML identity provider.
      description: The SAML identity povider's information.
    ScheduledAutoTuneActionType:
      type: string
      enum:
        - JVM_HEAP_SIZE_TUNING
        - JVM_YOUNG_GEN_TUNING
      description: 'The Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING, and JVM_YOUNG_GEN_TUNING.'
    ScheduledAutoTuneDescription:
      type: string
      description: The Auto-Tune action description.
    ScheduledAutoTuneSeverityType:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
      description: 'The Auto-Tune action severity. Valid values are LOW, MEDIUM, and HIGH.'
    StartServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: StartServiceSoftwareUpdateRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain that you want to update to the latest service software.
      description: 'Container for the parameters to the <code> <a>StartServiceSoftwareUpdate</a> </code> operation. Specifies the name of the domain to schedule a service software update for. '
    StartTimestamp:
      type: string
      format: date-time
    StorageSubTypeName:
      type: string
      description: ' Sub-type of the given storage type. List of available sub-storage options: "instance" storageType has no storageSubType. "ebs" storageType has the following valid storageSubTypes: <ol> <li>standard</li> <li>gp2</li> <li>io1</li> </ol> See <code> <a>VolumeType</a> </code> for more information regarding each EBS storage option. '
    StorageTypeName:
      type: string
      description: ' Type of storage. List of available storage options: <ol> <li>instance</li> Built-in storage available for the instance <li>ebs</li> Elastic block storage attached to the instance </ol> '
    StorageTypeLimitList:
      type: array
      items:
        $ref: '#/components/schemas/StorageTypeLimit'
    StorageType:
      type: object
      properties:
        StorageTypeName:
          $ref: '#/components/schemas/StorageTypeName'
        StorageSubTypeName:
          $ref: '#/components/schemas/StorageSubTypeName'
        StorageTypeLimits:
          allOf:
            - $ref: '#/components/schemas/StorageTypeLimitList'
            - description: 'Limits that are applicable for the given storage type. '
      description: 'StorageTypes represents the list of storage-related types and their attributes that are available for a given InstanceType. '
    StorageTypeLimit:
      type: object
      properties:
        LimitName:
          allOf:
            - $ref: '#/components/schemas/LimitName'
            - description: ' Name of storage limits that are applicable for the given storage type. If <code> <a>StorageType</a> </code> is "ebs", the following storage options are applicable: <ol> <li>MinimumVolumeSize</li> Minimum amount of volume size that is applicable for the given storage type. Can be empty if not applicable. <li>MaximumVolumeSize</li> Maximum amount of volume size that is applicable for the given storage type. Can be empty if not applicable. <li>MaximumIops</li> Maximum amount of Iops that is applicable for given the storage type. Can be empty if not applicable. <li>MinimumIops</li> Minimum amount of Iops that is applicable for given the storage type. Can be empty if not applicable. </ol> '
        LimitValues:
          allOf:
            - $ref: '#/components/schemas/LimitValueList'
            - description: ' Values for the <code> <a>StorageTypeLimit$LimitName</a> </code> . '
      description: 'Limits that are applicable for the given storage type. '
    TagKey:
      type: string
      pattern: .*
      description: 'A string of length from 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the domain to which they''re attached. '
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: .*
      description: 'A string of length from 0 to 256 characters that specifies the value for a tag. Tag values can be null and don''t have to be unique in a tag set. '
      minLength: 0
      maxLength: 256
    UpdateDomainConfigRequest:
      type: object
      title: UpdateDomainConfigRequest
      properties:
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: The type and number of instances to instantiate for the domain cluster.
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: Specify the type and size of the EBS volume to use.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: 'Option to set the time, in UTC format, for the daily automated snapshot. Default value is <code>0</code> hours. '
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: 'Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank">Launching your Amazon OpenSearch Service domains using a VPC </a>. '
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: 'Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>. '
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: 'Modifies the advanced option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced options </a> for more information. '
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: IAM access policy as a JSON-formatted string.
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of OpenSearch log. '
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Specifies encryption of data at rest options.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: Options to specify configuration that will be applied to the domain endpoint.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: Specifies node-to-node encryption options.
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
            - description: Specifies advanced security options.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptions'
            - description: Specifies Auto-Tune options.
      description: 'Container for the parameters to the <code> <a>UpdateDomain</a> </code> operation. Specifies the type and number of instances in the domain cluster. '
    UpdatePackageRequest:
      type: object
      required:
        - PackageID
        - PackageSource
      title: UpdatePackageRequest
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: The unique identifier for the package.
        PackageSource:
          $ref: '#/components/schemas/PackageSource'
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: A new description of the package.
        CommitMessage:
          allOf:
            - $ref: '#/components/schemas/CommitMessage'
            - description: 'A commit message for the new version which is shown as part of <code>GetPackageVersionHistoryResponse</code>. '
      description: ' Container for request parameters to the <code> <a>UpdatePackage</a> </code> operation. '
    UpgradeDomainRequest:
      type: object
      required:
        - DomainName
        - TargetVersion
      title: UpgradeDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        TargetVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The version of OpenSearch you intend to upgrade the domain to.
        PerformCheckOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade. '
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptions'
      description: ' Container for the request parameters to <code> <a>UpgradeDomain</a> </code> operation. '
    UpgradeStepsList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeStepItem'
    UpgradeHistory:
      type: object
      properties:
        UpgradeName:
          allOf:
            - $ref: '#/components/schemas/UpgradeName'
            - description: A string that briefly describes the upgrade.
        StartTimestamp:
          allOf:
            - $ref: '#/components/schemas/StartTimestamp'
            - description: 'UTC timestamp at which the upgrade API call was made in "yyyy-MM-ddTHH:mm:ssZ" format.'
        UpgradeStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: ' The current status of the upgrade. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        StepsList:
          allOf:
            - $ref: '#/components/schemas/UpgradeStepsList'
            - description: ' A list of <code> <a>UpgradeStepItem</a> </code> s representing information about each step performed as part of a specific upgrade or upgrade eligibility check. '
      description: History of the last 10 upgrades and upgrade eligibility checks.
    UpgradeStepItem:
      type: object
      properties:
        UpgradeStep:
          allOf:
            - $ref: '#/components/schemas/UpgradeStep'
            - description: ' One of three steps an upgrade or upgrade eligibility check goes through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> '
        UpgradeStepStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: ' The current status of the upgrade. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        Issues:
          allOf:
            - $ref: '#/components/schemas/Issues'
            - description: A list of strings containing detailed information about the errors encountered in a particular step.
        ProgressPercent:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The floating point value representing the progress percentage of a particular step.
      description: Represents a single step of the upgrade or upgrade eligibility check workflow.
security:
  - hmac: []
