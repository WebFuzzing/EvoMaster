openapi: 3.0.0
servers:
  - description: Twitter API
    url: https://api.twitter.com
info:
  contact:
    name: Twitter Developers
    url: https://developer.twitter.com/
    x-twitter: twitter
  description: API Reference â€” Labs v2
  license:
    name: Twitter Developer Agreement and Policy
    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  title: Tweets and Users
  version: "2.13"
  x-apisguru-categories:
    - social
  x-logo:
    url: https://twitter.com/twitter/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://api.twitter.com/labs/2/openapi.json
      version: "3.0"
  x-preferred: true
  x-providerName: twitter.com
  x-serviceName: labs
  x-tags:
    - pii
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - description: Miscellaneous endpoints for general API functionality
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/labs
    name: General
  - description: APIs related to Tweets
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview
    name: Tweets
  - description: APIs related to Users
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview
    name: Users
paths:
  /labs/2/openapi.json:
    get:
      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
      operationId: getOpenApiSpec
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The request was successful
      summary: Returns the open api spec document.
      tags:
        - General
  /labs/2/tweets:
    get:
      description: Returns a variety of information about the Tweet specified by the requested ID
      operationId: findTweetsById
      parameters:
        - description: A comma separated list of Tweet IDs. Up to 100 are allowed in a single request.
          explode: false
          in: query
          name: ids
          required: true
          schema:
            items:
              $ref: "#/components/schemas/TweetID"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/TweetExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TweetLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Returns hydrated Tweet objects
      tags:
        - Tweets
  "/labs/2/tweets/{id}":
    get:
      description: Returns a variety of information about the Tweet specified by the requested ID
      operationId: findTweetById
      parameters:
        - description: A single Tweet ID.
          in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/TweetID"
        - $ref: "#/components/parameters/TweetExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleTweetLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Returns hydrated Tweet objects
      tags:
        - Tweets
  /labs/2/users:
    get:
      description: This endpoint returns information about users. Specify users by their ID.
      operationId: findUsersById
      parameters:
        - description: Required. A list of User IDs, comma-separated. You can specify up to 100 IDs.
          explode: false
          in: query
          name: ids
          required: true
          schema:
            items:
              $ref: "#/components/schemas/UserID"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  /labs/2/users/by:
    get:
      description: This endpoint returns information about users. Specify users by their username.
      operationId: findUsersByUsername
      parameters:
        - description: Required . A list of usernames, comma-separated. You can specify up to 100 usernames.
          explode: false
          in: query
          name: usernames
          required: true
          schema:
            items:
              $ref: "#/components/schemas/UserName"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  "/labs/2/users/by/username/{username}":
    get:
      description: This endpoint returns information about a user. Specify user by username.
      operationId: findUserByUsername
      parameters:
        - description: Required. A username.
          in: path
          name: username
          required: true
          schema:
            $ref: "#/components/schemas/UserName"
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  "/labs/2/users/{id}":
    get:
      description: This endpoint returns information about a user. Specify user by ID.
      operationId: findUserById
      parameters:
        - description: Required. A User ID.
          in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/UserID"
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
components:
  parameters:
    MediaFieldsParameter:
      description: A comma separated list of Media fields to display.
      explode: false
      in: query
      name: media.fields
      required: false
      schema:
        description: The list of fields you can display for a Media object.
        example: created_at
        items:
          enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    PlaceFieldsParameter:
      description: A comma separated list of Place fields to display.
      explode: false
      in: query
      name: place.fields
      required: false
      schema:
        description: The list of fields you can display for a Place object.
        example: country_code
        items:
          enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    PollFieldsParameter:
      description: A comma separated list of Poll fields to display.
      explode: false
      in: query
      name: poll.fields
      required: false
      schema:
        description: The list of fields you can display for a Poll object.
        example: end_datetime
        items:
          enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    TweetExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      schema:
        description: The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.
        example: author_id
        items:
          enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    TweetFieldsParameter:
      description: A comma separated list of Tweet fields to display.
      explode: false
      in: query
      name: tweet.fields
      required: false
      schema:
        description: The list of fields you can display for a [Tweet](#Tweet) object.
        example: created_at
        items:
          enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    UserExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      schema:
        description: The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.
        example: pinned_tweet_id
        items:
          enum:
            - pinned_tweet_id
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    UserFieldsParameter:
      description: A comma separated list of User fields to display.
      explode: false
      in: query
      name: user.fields
      required: false
      schema:
        description: The list of fields you can display for a [User](#User) object.
        example: created_at
        items:
          enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
  responses:
    HttpErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: The request has failed.
  schemas:
    AnimatedGif:
      allOf:
        - $ref: "#/components/schemas/CommonMediaFields"
      properties:
        preview_image_url:
          format: uri
          type: string
        type:
          enum:
            - animated_gif
          type: string
      type: object
    CashtagEntity:
      allOf:
        - $ref: "#/components/schemas/EntityIndices"
        - $ref: "#/components/schemas/CashtagFields"
    CashtagFields:
      description: Represent the portion of text recognized as a Cashtag, and its start and end position within the text.
      properties:
        tag:
          type: string
      required:
        - tag
      type: object
    ClientForbiddenProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates your client is forbidden from making this request.
      properties:
        reason:
          enum:
            - official-client-forbidden
            - client-not-enrolled
          type: string
        registration_url:
          format: uri
          type: string
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/client-forbidden
          type: string
      type: object
    CommonMediaFields:
      description: This contains the list of the fields that are common to all media returned.
      properties:
        height:
          $ref: "#/components/schemas/MediaHeight"
        media_key:
          $ref: "#/components/schemas/MediaKey"
        width:
          $ref: "#/components/schemas/MediaWidth"
      type: object
    ContextAnnotation:
      description: Annotation inferred from the tweet text.
      properties:
        domain:
          $ref: "#/components/schemas/ContextAnnotationDomainFields"
        entity:
          $ref: "#/components/schemas/ContextAnnotationEntityFields"
      required:
        - domain
        - entity
      type: object
    ContextAnnotationDomainFields:
      description: Represents the data for the context annotation domain.
      properties:
        description:
          description: Description of the context annotation domain.
          type: string
        id:
          description: The unique id for a context annotation domain.
          pattern: ^[0-9]{1,19}$
          type: string
        name:
          description: Name of the context annotation domain.
          type: string
      required:
        - id
      type: object
    ContextAnnotationEntityFields:
      description: Represents the data for the context annotation entity.
      properties:
        description:
          description: Description of the context annotation entity.
          type: string
        id:
          description: The unique id for a context annotation entity.
          pattern: ^[0-9]{1,19}$
          type: string
        name:
          description: Name of the context annotation entity.
          type: string
      required:
        - id
      type: object
    CountryCode:
      pattern: ^[A-Z]{2}$
      type: string
    DisallowedResourceProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates that the resource requested violates the precepts of this API.
      properties:
        resource_id:
          type: string
        resource_type:
          enum:
            - tweet
            - media
          type: string
        section:
          enum:
            - data
            - includes
          type: string
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/disallowed-resource
          type: string
      required:
        - resource_id
        - resource_type
        - section
      type: object
    EntityIndices:
      description: Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.
      properties:
        end:
          description: Index (zero-based) at which position this entity ends.
          minimum: 0
          type: integer
        start:
          description: Index (zero-based) at which position this entity starts.
          minimum: 0
          type: integer
      required:
        - start
        - end
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
        - code
        - message
    Expansions:
      properties:
        media:
          items:
            $ref: "#/components/schemas/Media"
          minItems: 1
          type: array
        places:
          items:
            $ref: "#/components/schemas/Place"
          minItems: 1
          type: array
        polls:
          items:
            $ref: "#/components/schemas/Poll"
          minItems: 1
          type: array
        tweets:
          items:
            $ref: "#/components/schemas/Tweet"
          minItems: 1
          type: array
        users:
          items:
            $ref: "#/components/schemas/User"
          minItems: 1
          type: array
      type: object
    FullTextEntities:
      properties:
        cashtags:
          items:
            $ref: "#/components/schemas/CashtagEntity"
          minItems: 1
          type: array
        hashtags:
          items:
            $ref: "#/components/schemas/HashtagEntity"
          minItems: 1
          type: array
        mentions:
          items:
            $ref: "#/components/schemas/MentionEntity"
          minItems: 1
          type: array
        urls:
          items:
            $ref: "#/components/schemas/UrlEntity"
          minItems: 1
          type: array
      type: object
    GenericProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A generic problem with no additional information beyond that provided by the HTTP status code.
      properties:
        status:
          type: integer
        type:
          enum:
            - about:blank
          type: string
      required:
        - status
    Geo:
      properties:
        bbox:
          items:
            format: double
            maximum: 180
            minimum: -180
            type: number
          maxItems: 4
          minItems: 4
          type: array
        geometry:
          $ref: "#/components/schemas/Point"
        properties:
          type: object
        type:
          enum:
            - Feature
          type: string
      required:
        - type
        - bbox
        - properties
      type: object
    HTTPStatusCode:
      description: HTTP Status Code.
      maximum: 599
      minimum: 100
      type: integer
    HashtagEntity:
      allOf:
        - $ref: "#/components/schemas/EntityIndices"
        - $ref: "#/components/schemas/HashtagFields"
    HashtagFields:
      description: Represent the portion of text recognized as a Hashtag, and its start and end position within the text.
      properties:
        tag:
          description: The text of the Hashtag
          type: string
      required:
        - tag
      type: object
    InvalidRequestProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates this request is invalid.
      properties:
        errors:
          items:
            properties:
              message:
                type: string
              parameters:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
            type: object
          type: array
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/invalid-request
          type: string
      type: object
    Media:
      discriminator:
        mapping:
          animated_gif: "#/components/schemas/AnimatedGif"
          photo: "#/components/schemas/Photo"
          video: "#/components/schemas/Video"
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/Photo"
        - $ref: "#/components/schemas/Video"
        - $ref: "#/components/schemas/AnimatedGif"
      required:
        - type
    MediaHeight:
      description: The height of the media in pixels
      minimum: 0
      type: integer
    MediaKey:
      description: The Media Key identifier for this attachment.
      pattern: ^([0-9]+)_([0-9]+)$
      type: string
    MediaWidth:
      description: The width of the media in pixels
      minimum: 0
      type: integer
    MentionEntity:
      allOf:
        - $ref: "#/components/schemas/EntityIndices"
        - $ref: "#/components/schemas/MentionFields"
    MentionFields:
      description: Represent the portion of text recognized as a User mention, and its start and end position within the text.
      properties:
        id:
          $ref: "#/components/schemas/UserID"
        username:
          $ref: "#/components/schemas/UserName"
      required:
        - username
        - id
      type: object
    Photo:
      allOf:
        - $ref: "#/components/schemas/CommonMediaFields"
      properties:
        type:
          enum:
            - photo
          type: string
        url:
          format: uri
          type: string
      type: object
    Place:
      properties:
        contained_within:
          items:
            $ref: "#/components/schemas/PlaceId"
          minItems: 1
          type: array
        country:
          type: string
        country_code:
          $ref: "#/components/schemas/CountryCode"
        full_name:
          type: string
        geo:
          $ref: "#/components/schemas/Geo"
        id:
          $ref: "#/components/schemas/PlaceId"
        name:
          description: The human readable name of this place.
          type: string
        place_type:
          $ref: "#/components/schemas/PlaceType"
      required:
        - id
        - full_name
    PlaceId:
      description: The identifier for this place
      type: string
    PlaceType:
      enum:
        - poi
        - neighborhood
        - city
        - admin
        - country
        - unknown
      type: string
    Point:
      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.
      properties:
        coordinates:
          $ref: "#/components/schemas/Position"
        type:
          enum:
            - Point
          type: string
      required:
        - type
        - coordinates
      type: object
    Poll:
      description: Represent a Poll attached to a Tweet
      properties:
        duration_minutes:
          type: integer
        end_datetime:
          format: date-time
          type: string
        id:
          $ref: "#/components/schemas/PollId"
        options:
          items:
            $ref: "#/components/schemas/PollOption"
          maxItems: 4
          minItems: 2
          type: array
        voting_status:
          enum:
            - open
            - closed
          type: string
      required:
        - id
        - options
      type: object
    PollId:
      description: Unique identifier of this poll.
      pattern: ^[0-9]{1,19}$
      type: string
    PollOption:
      description: Describes a choice in a Poll object.
      properties:
        label:
          description: The text of a poll choice.
          type: string
        position:
          description: Position of this choice in the poll.
          type: integer
        votes:
          description: Number of users who voted for this choice.
          type: integer
      required:
        - position
        - label
        - votes
      type: object
    Position:
      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.
      items:
        type: number
      maxItems: 2
      minItems: 2
      type: array
    Problem:
      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).
      discriminator:
        mapping:
          about:blank: "#/components/schemas/GenericProblem"
          https://api.twitter.com/labs/2/problems/client-forbidden: "#/components/schemas/ClientForbiddenProblem"
          https://api.twitter.com/labs/2/problems/disallowed-resource: "#/components/schemas/DisallowedResourceProblem"
          https://api.twitter.com/labs/2/problems/invalid-request: "#/components/schemas/InvalidRequestProblem"
          https://api.twitter.com/labs/2/problems/not-authorized-for-resource: "#/components/schemas/ResourceUnauthorizedProblem"
          https://api.twitter.com/labs/2/problems/resource-not-found: "#/components/schemas/ResourceNotFoundProblem"
          https://api.twitter.com/labs/2/problems/unsupported-authentication: "#/components/schemas/UnsupportedAuthenticationProblem"
          https://api.twitter.com/labs/2/problems/usage-capped: "#/components/schemas/UsageCapExceededProblem"
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/GenericProblem"
        - $ref: "#/components/schemas/InvalidRequestProblem"
        - $ref: "#/components/schemas/ClientForbiddenProblem"
        - $ref: "#/components/schemas/ResourceNotFoundProblem"
        - $ref: "#/components/schemas/ResourceUnauthorizedProblem"
        - $ref: "#/components/schemas/DisallowedResourceProblem"
        - $ref: "#/components/schemas/UnsupportedAuthenticationProblem"
        - $ref: "#/components/schemas/UsageCapExceededProblem"
    ProblemFields:
      properties:
        detail:
          type: string
        title:
          type: string
        type:
          format: uri
          type: string
      required:
        - type
        - title
        - detail
      type: object
    ResourceNotFoundProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates that a given Tweet, User, etc. does not exist.
      properties:
        parameter:
          minLength: 1
          type: string
        resource_id:
          type: string
        resource_type:
          enum:
            - user
            - tweet
            - media
          type: string
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/resource-not-found
          type: string
        value:
          description: Value will match the schema of the field.
      required:
        - parameter
        - value
        - resource_id
        - resource_type
      type: object
    ResourceUnauthorizedProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates you are not allowed to see a particular Tweet, User, etc.
      properties:
        resource_id:
          type: string
        resource_type:
          enum:
            - tweet
            - user
            - media
          type: string
        section:
          enum:
            - data
            - includes
          type: string
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/not-authorized-for-resource
          type: string
      required:
        - resource_id
        - resource_type
        - section
      type: object
    SingleTweetLookupResponse:
      properties:
        data:
          $ref: "#/components/schemas/Tweet"
        errors:
          items:
            $ref: "#/components/schemas/Problem"
          minItems: 1
          type: array
        includes:
          $ref: "#/components/schemas/Expansions"
      type: object
    SingleUserLookupResponse:
      properties:
        data:
          $ref: "#/components/schemas/User"
        errors:
          items:
            $ref: "#/components/schemas/Problem"
          minItems: 1
          type: array
        includes:
          $ref: "#/components/schemas/Expansions"
      type: object
    Tweet:
      example:
        author_id: "712089797812"
        created_at: Wed Jun 20 16:53:49 +0000 2018
        id: "12234"
        text: Some great insight into the human condition.
      properties:
        attachments:
          description: Specifies the type of attachments (if any) present in this Tweet.
          properties:
            media_keys:
              description: A list of Media Keys for each one of the media attachments (if media are attached).
              items:
                $ref: "#/components/schemas/MediaKey"
              minItems: 1
              type: array
            poll_ids:
              description: A list of poll IDs (if polls are attached).
              items:
                $ref: "#/components/schemas/PollId"
              minItems: 1
              type: array
          type: object
        author_id:
          $ref: "#/components/schemas/UserID"
        context_annotations:
          items:
            $ref: "#/components/schemas/ContextAnnotation"
          minItems: 1
          type: array
        created_at:
          description: Creation time of the Tweet.
          format: date-time
          type: string
        entities:
          $ref: "#/components/schemas/FullTextEntities"
        geo:
          description: The location tagged on the Tweet, if the user provided one.
          properties:
            coordinates:
              $ref: "#/components/schemas/Point"
            place_id:
              $ref: "#/components/schemas/PlaceId"
          type: object
        id:
          $ref: "#/components/schemas/TweetID"
        in_reply_to_user_id:
          $ref: "#/components/schemas/UserID"
        lang:
          description: Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.
          type: string
        non_public_metrics:
          description: Nonpublic engagement metrics for the Tweet at the time of the request.
          properties:
            impression_count:
              description: Number of times this Tweet has been viewed.
              format: int32
              type: integer
            url_link_clicks:
              description: Number of times links in this Tweet have been clicked.
              type: integer
            user_profile_clicks:
              description: Number of times the user's profile from this Tweet has been clicked.
              type: integer
          type: object
        organic_metrics:
          description: Organic nonpublic engagement metrics for the Tweet at the time of the request.
          properties:
            impression_count:
              description: Number of times this Tweet has been viewed.
              type: integer
            like_count:
              description: Number of times this Tweet has been liked.
              type: integer
            reply_count:
              description: Number of times this Tweet has been replied to.
              type: integer
            retweet_count:
              description: Number of times this Tweet has been Retweeted.
              type: integer
            url_link_clicks:
              description: Number of times links in this Tweet have been clicked.
              type: integer
            user_profile_clicks:
              description: Number of times the user's profile from this Tweet has been clicked.
              type: integer
          required:
            - impression_count
            - retweet_count
            - reply_count
            - like_count
            - user_profile_clicks
          type: object
        possibly_sensitive:
          description: Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.
          type: boolean
        promoted_metrics:
          description: Promoted nonpublic engagement metrics for the Tweet at the time of the request.
          properties:
            impression_count:
              description: Number of times this Tweet has been viewed.
              format: int32
              type: integer
            like_count:
              description: Number of times this Tweet has been liked.
              format: int32
              type: integer
            reply_count:
              description: Number of times this Tweet has been replied to.
              format: int32
              type: integer
            retweet_count:
              description: Number of times this Tweet has been Retweeted.
              format: int32
              type: integer
            url_link_clicks:
              description: Number of times links in this Tweet have been clicked.
              type: integer
            user_profile_clicks:
              description: Number of times the user's profile from this Tweet has been clicked.
              type: integer
          type: object
        public_metrics:
          description: Engagement metrics for the Tweet at the time of the request.
          properties:
            like_count:
              description: Number of times this Tweet has been liked.
              type: integer
            quote_count:
              description: Number of times this Tweet has been quoted.
              type: integer
            reply_count:
              description: Number of times this Tweet has been replied to.
              type: integer
            retweet_count:
              description: Number of times this Tweet has been Retweeted.
              type: integer
          required:
            - retweet_count
            - reply_count
            - like_count
          type: object
        referenced_tweets:
          description: A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.
          items:
            properties:
              id:
                $ref: "#/components/schemas/TweetID"
              type:
                enum:
                  - retweeted
                  - quoted
                  - replied_to
                type: string
            required:
              - type
              - id
            type: object
          minItems: 1
          type: array
        source:
          description: The name of the app the user Tweeted from.
          type: string
        text:
          description: The content of the Tweet.
          type: string
        withheld:
          $ref: "#/components/schemas/TweetWithheld"
      required:
        - id
        - text
    TweetID:
      description: Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
      example: "120897978112909812"
      pattern: ^[0-9]{1,19}$
      type: string
    TweetLookupResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Tweet"
          minItems: 1
          type: array
        errors:
          items:
            $ref: "#/components/schemas/Problem"
          minItems: 1
          type: array
        includes:
          $ref: "#/components/schemas/Expansions"
      type: object
    TweetWithheld:
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      properties:
        copyright:
          description: Indicates if the content is being withheld for on the basis of copyright infringement.
          type: boolean
        country_codes:
          description: Provides a list of countries where this content is not available.
          items:
            $ref: "#/components/schemas/CountryCode"
          minItems: 1
          type: array
          uniqueItems: true
        scope:
          description: Indicates whether the content being withheld is the `tweet` or a `user`.
          enum:
            - tweet
            - user
          type: string
      required:
        - copyright
        - country_codes
      type: object
    URL:
      description: A validly formatted URL.
      example: https://example.com
      format: uri
      type: string
    URLFields:
      description: Represent the portion of text recognized as a URL.
      properties:
        description:
          description: Description of the URL landing page.
          type: string
        display_url:
          description: The URL as displayed in the Twitter client.
          type: string
        expanded_url:
          $ref: "#/components/schemas/URL"
        images:
          items:
            $ref: "#/components/schemas/URLImage"
          minItems: 1
          type: array
        status:
          $ref: "#/components/schemas/HTTPStatusCode"
        title:
          description: Title of the page the URL points to.
          type: string
        unwound_url:
          description: Fully resolved url
          format: uri
          type: string
        url:
          $ref: "#/components/schemas/URL"
      required:
        - url
      type: object
    URLImage:
      description: Represent the information for the URL image
      properties:
        height:
          $ref: "#/components/schemas/MediaHeight"
        url:
          $ref: "#/components/schemas/URL"
        width:
          $ref: "#/components/schemas/MediaWidth"
      type: object
    UnsupportedAuthenticationProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates that the authentication used is not supported.
      properties:
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/unsupported-authentication
          type: string
      type: object
    UrlEntity:
      allOf:
        - $ref: "#/components/schemas/EntityIndices"
        - $ref: "#/components/schemas/URLFields"
      description: Represent the portion of text recognized as a URL, and its start and end position within the text.
    UsageCapExceededProblem:
      allOf:
        - $ref: "#/components/schemas/ProblemFields"
      description: A problem that indicates that a usage cap has been exceeded.
      properties:
        period:
          enum:
            - Daily
            - Monthly
          type: string
        scope:
          enum:
            - Account
            - Product
          type: string
        type:
          enum:
            - https://api.twitter.com/labs/2/problems/usage-capped
          type: string
      type: object
    User:
      description: The Twitter User object
      example:
        created_at: 2017-10-09T17:16:24Z
        id: "1234"
        name: Twitter API
        protected: false
        username: twitterapi
      properties:
        created_at:
          description: Creation time of this user.
          format: date-time
          type: string
        description:
          description: The text of this user's profile description (also known as bio), if the user provided one.
          type: string
        entities:
          description: A list of metadata found in the user's profile description.
          properties:
            description:
              $ref: "#/components/schemas/FullTextEntities"
            url:
              description: Expanded details for the URL specified in the user's profile, with start and end indices.
              properties:
                urls:
                  items:
                    $ref: "#/components/schemas/UrlEntity"
                  minItems: 1
                  type: array
              type: object
          type: object
        id:
          $ref: "#/components/schemas/UserID"
        location:
          description: The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.
          type: string
        name:
          description: The friendly name of this user, as shown on their profile.
          type: string
        pinned_tweet_id:
          $ref: "#/components/schemas/TweetID"
        profile_image_url:
          description: The URL to the profile image for this user.
          format: uri
          type: string
        protected:
          description: Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).
          type: boolean
        public_metrics:
          description: A list of metrics for this user
          properties:
            followers_count:
              description: Number of users who are following this user.
              type: integer
            following_count:
              description: Number of users this user is following.
              type: integer
            listed_count:
              description: The number of lists that include this user.
              type: integer
            tweet_count:
              description: The number of Tweets (including Retweets) posted by this user.
              type: integer
          required:
            - followers_count
            - following_count
            - tweet_count
            - listed_count
          type: object
        url:
          description: The URL specified in the user's profile.
          type: string
        username:
          $ref: "#/components/schemas/UserName"
        verified:
          description: Indicate if this user is a verified Twitter User.
          type: boolean
        withheld:
          $ref: "#/components/schemas/UserWithheld"
      required:
        - id
        - name
        - username
    UserID:
      description: Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
      example: "712089797812"
      pattern: ^[0-9]{1,19}$
      type: string
    UserLookupResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User"
          minItems: 1
          type: array
        errors:
          items:
            $ref: "#/components/schemas/Problem"
          minItems: 1
          type: array
        includes:
          $ref: "#/components/schemas/Expansions"
      type: object
    UserName:
      description: The Twitter handle (screen name) of this user.
      pattern: ^[A-Za-z0-9_]{1,15}$
      type: string
    UserWithheld:
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      properties:
        country_codes:
          description: Provides a list of countries where this content is not available.
          items:
            $ref: "#/components/schemas/CountryCode"
          minItems: 1
          type: array
          uniqueItems: true
        scope:
          description: Indicates that the content being withheld is a `user`.
          enum:
            - user
          type: string
      required:
        - country_codes
      type: object
    Video:
      allOf:
        - $ref: "#/components/schemas/CommonMediaFields"
      properties:
        duration_ms:
          type: integer
        non_public_metrics:
          description: Nonpublic engagement metrics for the Media at the time of the request.
          properties:
            playback_0_count:
              description: Number of users who made it through 0% of the video.
              format: int32
              type: integer
            playback_100_count:
              description: Number of users who made it through 100% of the video.
              format: int32
              type: integer
            playback_25_count:
              description: Number of users who made it through 25% of the video.
              format: int32
              type: integer
            playback_50_count:
              description: Number of users who made it through 50% of the video.
              format: int32
              type: integer
            playback_75_count:
              description: Number of users who made it through 75% of the video.
              format: int32
              type: integer
          type: object
        organic_metrics:
          description: Organic nonpublic engagement metrics for the Media at the time of the request.
          properties:
            playback_0_count:
              description: Number of users who made it through 0% of the video.
              format: int32
              type: integer
            playback_100_count:
              description: Number of users who made it through 100% of the video.
              format: int32
              type: integer
            playback_25_count:
              description: Number of users who made it through 25% of the video.
              format: int32
              type: integer
            playback_50_count:
              description: Number of users who made it through 50% of the video.
              format: int32
              type: integer
            playback_75_count:
              description: Number of users who made it through 75% of the video.
              format: int32
              type: integer
            view_count:
              description: Number of times this video has been viewed.
              format: int32
              type: integer
          type: object
        preview_image_url:
          format: uri
          type: string
        promoted_metrics:
          description: Promoted nonpublic engagement metrics for the Media at the time of the request.
          properties:
            playback_0_count:
              description: Number of users who made it through 0% of the video.
              format: int32
              type: integer
            playback_100_count:
              description: Number of users who made it through 100% of the video.
              format: int32
              type: integer
            playback_25_count:
              description: Number of users who made it through 25% of the video.
              format: int32
              type: integer
            playback_50_count:
              description: Number of users who made it through 50% of the video.
              format: int32
              type: integer
            playback_75_count:
              description: Number of users who made it through 75% of the video.
              format: int32
              type: integer
            view_count:
              description: Number of times this video has been viewed.
              format: int32
              type: integer
          type: object
        public_metrics:
          description: Engagement metrics for the Media at the time of the request.
          properties:
            view_count:
              description: Number of times this video has been viewed.
              format: int32
              type: integer
          type: object
        type:
          enum:
            - video
          type: string
      type: object
