swagger: "2.0"
schemes:
  - https
host: api.salesloft.com
info:
  contact:
    email: integrations@salesloft.com
    x-twitter: SalesLoft
  description: |
    SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts
  title: SalesLoft Platform
  version: v2
  x-apisguru-categories:
    - customer_relation
  x-logo:
    url: https://twitter.com/SalesLoft/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://developers.salesloft.com/v2_api_def.json
      version: "2.0"
  x-providerName: salesloft.com
securityDefinitions:
  OAuth2:
    flow: application
    scopes: {}
    tokenUrl: https://accounts.salesloft.com/oauth/token
    type: oauth2
    x-authorizationUrl: https://accounts.salesloft.com/oauth/authorize
tags:
  - description: User Information
    name: Me
  - description: Team Information
    name: Team
  - description: Account Management
    name: Accounts
  - description: Actions
    name: Actions
  - description: Actions - Call Instructions
    name: Action Details - Call Instructions
  - description: CRM Activity Management
    name: CRM Activities
  - description: Cadence Management
    name: Cadences
  - description: Cadence Membership
    name: Cadence Memberships
  - description: Call Data Record Management
    name: Call Data Records
  - description: Call Management
    name: Calls
  - description: Caller ID Information
    name: Caller IDs
  - description: Custom Field Management
    name: Custom Fields
  - description: Email Management
    name: Emails
  - description: Email Templates Management
    name: Email Templates
  - description: Import Management
    name: Imports
  - description: Note Management
    name: Notes
  - description: Person Management
    name: People
  - description: Person Stage Management
    name: Person Stages
  - description: Recording Settings Information
    name: Recording Settings
  - description: Steps
    name: Steps
  - description: Success Management
    name: Successes
  - description: Team Template Management
    name: Team Templates
  - description: User Management
    name: Users
paths:
  /v2/accounts.json:
    get:
      description: |
        Fetches multiple account records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of accounts to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: Domain of the accounts to fetch. Domains are unique and lowercase
          in: query
          name: domain
          required: false
          type: string
        - description: "Key to sort on, must be one of: created_at, updated_at, last_contacted_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Account"
            type: array
      summary: List accounts
      tags:
        - Accounts
    post:
      description: |
        Creates an account.

        "domain" must be unique on the current team.
      parameters:
        - description: Account Full Name
          in: formData
          name: name
          required: true
          type: string
        - description: Website domain, not a fully qualified URI
          in: formData
          name: domain
          required: true
          type: string
        - description: Conversational name of the Account
          in: formData
          name: conversational_name
          required: false
          type: string
        - description: Description
          in: formData
          name: description
          required: false
          type: string
        - description: Phone number without formatting
          in: formData
          name: phone
          required: false
          type: string
        - description: Website
          in: formData
          name: website
          required: false
          type: string
        - description: Full LinkedIn url
          in: formData
          name: linkedin_url
          required: false
          type: string
        - description: Twitter handle, with @
          in: formData
          name: twitter_handle
          required: false
          type: string
        - description: Street name and number
          in: formData
          name: street
          required: false
          type: string
        - description: City
          in: formData
          name: city
          required: false
          type: string
        - description: State
          in: formData
          name: state
          required: false
          type: string
        - description: Postal code
          in: formData
          name: postal_code
          required: false
          type: string
        - description: Country
          in: formData
          name: country
          required: false
          type: string
        - description: Time locale
          in: formData
          name: locale
          required: false
          type: string
        - description: Industry
          in: formData
          name: industry
          required: false
          type: string
        - description: Type of the Account's company
          in: formData
          name: company_type
          required: false
          type: string
        - description: Date or year of founding
          in: formData
          name: founded
          required: false
          type: string
        - description: Estimated revenue range
          in: formData
          name: revenue_range
          required: false
          type: string
        - description: Estimated number of people in employment
          in: formData
          name: size
          required: false
          type: string
        - description: Whether this company can not be contacted. Values are either true or false. Setting this to true will remove all associated people from all active communications
          in: formData
          name: do_not_contact
          required: false
          type: boolean
        - description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
          in: formData
          items:
            type: string
          name: custom_fields
          required: false
          type: array
        - description: All tags applied to this Account
          in: formData
          items:
            type: string
          name: tags
          required: false
          type: array
        - description: ID of the User that owns this Account
          in: formData
          name: owner_id
          required: false
          type: integer
        - description: ID of the CompanyStage assigned to this Account
          in: formData
          name: company_stage_id
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Account"
      summary: Create an account
      tags:
        - Accounts
  "/v2/accounts/{id}.json":
    delete:
      description: |
        Deletes an account. This operation is not reversible without contacting support.
        This operation can be called multiple times successfully.

        Deleting an account will remove all connected people from that account.
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: The Account has been deleted successfully
      summary: Delete an account
      tags:
        - Accounts
    get:
      description: |
        Fetches an account, by ID only.
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Account"
      summary: Fetch an account
      tags:
        - Accounts
    put:
      description: |
        Updates an account.

        "domain" must be unique on the current team.
      parameters:
        - description: Account Full Name
          in: formData
          name: name
          required: true
          type: string
        - description: Website domain, not a fully qualified URI
          in: formData
          name: domain
          required: true
          type: string
        - description: Conversational name of the Account
          in: formData
          name: conversational_name
          required: false
          type: string
        - description: Description
          in: formData
          name: description
          required: false
          type: string
        - description: Phone number without formatting
          in: formData
          name: phone
          required: false
          type: string
        - description: Website
          in: formData
          name: website
          required: false
          type: string
        - description: Full LinkedIn url
          in: formData
          name: linkedin_url
          required: false
          type: string
        - description: Twitter handle, with @
          in: formData
          name: twitter_handle
          required: false
          type: string
        - description: Street name and number
          in: formData
          name: street
          required: false
          type: string
        - description: City
          in: formData
          name: city
          required: false
          type: string
        - description: State
          in: formData
          name: state
          required: false
          type: string
        - description: Postal code
          in: formData
          name: postal_code
          required: false
          type: string
        - description: Country
          in: formData
          name: country
          required: false
          type: string
        - description: Time locale
          in: formData
          name: locale
          required: false
          type: string
        - description: Industry
          in: formData
          name: industry
          required: false
          type: string
        - description: Type of the Account's company
          in: formData
          name: company_type
          required: false
          type: string
        - description: Date or year of founding
          in: formData
          name: founded
          required: false
          type: string
        - description: Estimated revenue range
          in: formData
          name: revenue_range
          required: false
          type: string
        - description: Estimated number of people in employment
          in: formData
          name: size
          required: false
          type: string
        - description: Whether this company can not be contacted. Values are either true or false. Setting this to true will remove all associated people from all active communications
          in: formData
          name: do_not_contact
          required: false
          type: boolean
        - description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
          in: formData
          items:
            type: string
          name: custom_fields
          required: false
          type: array
        - description: All tags applied to this Account
          in: formData
          items:
            type: string
          name: tags
          required: false
          type: array
        - description: ID of the User that owns this Account
          in: formData
          name: owner_id
          required: false
          type: integer
        - description: ID of the CompanyStage assigned to this Account
          in: formData
          name: company_stage_id
          required: false
          type: integer
        - description: Account ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Account"
      summary: Update an existing Account
      tags:
        - Accounts
  /v2/action_details/call_instructions.json:
    get:
      description: |
        Fetches multiple call instruction records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of call instructions to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CallInstruction"
            type: array
      summary: List call instructions
      tags:
        - Action Details - Call Instructions
  "/v2/action_details/call_instructions/{id}.json":
    get:
      description: |
        Fetches a call instruction, by ID only.
      parameters:
        - description: Call instructions ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CallInstruction"
      summary: Fetch a call instructions
      tags:
        - Action Details - Call Instructions
  /v2/actions.json:
    get:
      description: |
        Fetches multiple action records. The records can be filtered, paged, and sorted according to
        the respective parameters. Only actions that are currently "in_progess" will be returned by
        this endpoint.
      parameters:
        - description: IDs of actions to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: Fetch actions by step ID
          in: query
          name: step_id
          required: false
          type: integer
        - description: Filter actions by type
          in: query
          name: type
          required: false
          type: string
        - description: |
            Equality filters that are applied to the due_on field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: due_on
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Action"
            type: array
      summary: List actions
      tags:
        - Actions
  "/v2/actions/{id}.json":
    get:
      description: |
        Fetches an action, by ID only.
        This endpoint will only return actions that are in_progress or pending_activity.
        Once an action is complete, the request for that action will return a 404 status code.
      parameters:
        - description: Action ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Action"
      summary: Fetch an action
      tags:
        - Actions
  /v2/activities/calls.json:
    get:
      description: |
        Fetches multiple call records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of calls to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Call"
            type: array
      summary: List calls
      tags:
        - Calls
  "/v2/activities/calls/{id}.json":
    get:
      description: |
        Fetches a call, by ID only.
      parameters:
        - description: Call ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Call"
      summary: Fetch a call
      tags:
        - Calls
  /v2/activities/emails.json:
    get:
      description: |
        Fetches multiple email records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of emails to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: Filters emails by whether they have bounced or not
          in: query
          name: bounced
          required: false
          type: boolean
        - description: "Key to sort on, must be one of: updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Email"
            type: array
      summary: List emails
      tags:
        - Emails
  "/v2/activities/emails/{id}.json":
    get:
      description: |
        Fetches an email, by ID only.
      parameters:
        - description: Email ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Email"
      summary: Fetch an email
      tags:
        - Emails
  /v2/cadence_memberships.json:
    get:
      description: |
        Fetches multiple cadence membership records. The records can be filtered, paged, and sorted according to
        the respective parameters. A cadence membership is the association between a person and their current and
        historical time on a cadence. Cadence membership records are mutable and change over time. If a person is
        added to a cadence and re-added to the same cadence in the future, there is a single membership record.
      parameters:
        - description: IDs of cadence memberships to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: ID of the person to find cadence memberships for
          in: query
          name: person_id
          required: false
          type: integer
        - description: ID of the cadence to find cadence memberships for
          in: query
          name: cadence_id
          required: false
          type: integer
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CadenceMembership"
            type: array
      summary: List cadence memberships
      tags:
        - Cadence Memberships
    post:
      description: |
        Adds a person to a cadence. person_id and cadence_id are required, and must be visible to the authenticated user. user_id will
        default to the authenticated user, but can be set to any visible user on the authenticated team.

        A person cannot be added to a cadence on behalf of a teammate unless the cadence is a team cadence, or the cadence is owned by
        the teammate.
      parameters:
        - description: ID of the person to create a cadence membership for
          in: query
          name: person_id
          required: true
          type: integer
        - description: ID of the cadence to create a cadence membership for
          in: query
          name: cadence_id
          required: true
          type: integer
        - description: ID of the user to create a cadence membership for. The associated cadence must be owned by the user, or it must be a team cadence
          in: query
          name: user_id
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CadenceMembership"
      summary: Create a cadence membership
      tags:
        - Cadence Memberships
  "/v2/cadence_memberships/{id}.json":
    delete:
      parameters:
        - description: CadenceMembership ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: The person has been removed from the cadence successfully
      summary: Delete a cadence membership
      tags:
        - Cadence Memberships
    get:
      description: |
        Fetches a cadence membership, by ID only.
      parameters:
        - description: CadenceMembership ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CadenceMembership"
      summary: Fetch a cadence membership
      tags:
        - Cadence Memberships
  /v2/cadences.json:
    get:
      description: |
        Fetches multiple cadence records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of cadences to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: Filters cadences by whether they are a team cadence or not
          in: query
          name: team_cadence
          required: false
          type: boolean
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Cadence"
            type: array
      summary: List cadences
      tags:
        - Cadences
  "/v2/cadences/{id}.json":
    get:
      description: |
        Fetches a cadence, by ID only.
      parameters:
        - description: Cadence ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Cadence"
      summary: Fetch a cadence
      tags:
        - Cadences
  /v2/call_data_records.json:
    get:
      description: |
        Fetches multiple call data records. The records can be filtered, paged, and sorted according to
        the respective parameters.

        Call data records are records of all inbound and outbound calls through SalesLoft. A call data record may
        be associated with a call, but does not have to be.
      parameters:
        - description: IDs of call data records to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: Return only call data records which have or do not have a call logged for them
          in: query
          name: has_call
          required: false
          type: boolean
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CallDataRecord"
            type: array
      summary: List call data records
      tags:
        - Call Data Records
  "/v2/call_data_records/{id}.json":
    get:
      description: |
        Fetches a call data record, by ID only.
      parameters:
        - description: CallDataRecord ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CallDataRecord"
      summary: Fetch a call data record
      tags:
        - Call Data Records
  /v2/crm_activities.json:
    get:
      description: |
        Fetches multiple crm activity records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of crm activities to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CrmActivity"
            type: array
      summary: List crm activities
      tags:
        - CRM Activities
  "/v2/crm_activities/{id}.json":
    get:
      description: |
        Fetches a crm activity, by ID only.
      parameters:
        - description: Crm activity ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CrmActivity"
      summary: Fetch a crm activity
      tags:
        - CRM Activities
  /v2/custom_fields.json:
    get:
      description: |
        Fetches multiple custom field records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of custom fields to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: "Type of field to fetch. Value must be one of: person, company, opportunity"
          in: query
          name: field_type
          required: false
          type: string
        - description: "Key to sort on, must be one of: created_at, updated_at, name. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CustomField"
            type: array
      summary: List custom fields
      tags:
        - Custom Fields
    post:
      description: |
        Creates a custom field.
      parameters:
        - description: The name of the custom field
          in: formData
          name: name
          required: true
          type: string
        - description: "The field type of the custom field. Value must be one of: person, company, opportunity"
          in: formData
          name: field_type
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CustomField"
      summary: Create a custom field
      tags:
        - Custom Fields
  "/v2/custom_fields/{id}.json":
    delete:
      description: |
        Deletes a custom field.
      parameters:
        - description: Custom Field ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: The Custom Field has been deleted successfully
      summary: Delete a custom field
      tags:
        - Custom Fields
    get:
      description: |
        Fetches a custom field, by ID only.
      parameters:
        - description: Custom Field ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CustomField"
      summary: Fetch a custom field
      tags:
        - Custom Fields
    put:
      description: |
        Update a custom field.
      parameters:
        - description: Custom Field ID
          in: path
          name: id
          required: true
          type: string
        - description: The name of the custom field
          in: formData
          name: name
          required: false
          type: string
        - description: "The field type of the custom field. Value must be one of: person, company, opportunity"
          in: formData
          name: field_type
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CustomField"
      summary: Update a custom field
      tags:
        - Custom Fields
  /v2/email_templates.json:
    get:
      description: |
        Fetches multiple email template records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of email templates to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: Filters email templates by whether they are linked to a team template or not
          in: query
          name: linked_to_team_template
          required: false
          type: boolean
        - description: "Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/EmailTemplate"
            type: array
      summary: List email templates
      tags:
        - Email Templates
  "/v2/email_templates/{id}.json":
    get:
      description: |
        Fetches an email template, by ID only.
      parameters:
        - description: EmailTemplate ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EmailTemplate"
      summary: Fetch an email template
      tags:
        - Email Templates
  /v2/imports.json:
    get:
      description: |
        Fetches multiple imports.
      parameters:
        - description: IDs of imports to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: ID of users to fetch imports for. Using this filter will return an empty array for non-admin users who request other user's imports
          in: query
          items:
            type: integer
          name: user_ids
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to created_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Import"
            type: array
      summary: List imports
      tags:
        - Imports
    post:
      description: |
        Creates an import.
      parameters:
        - description: ID of the User that owns this Import
          in: formData
          name: user_id
          required: false
          type: integer
        - description: Name, recommended to be easily identifiable to a user
          in: formData
          name: name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Import"
      summary: Create an import
      tags:
        - Imports
  "/v2/imports/{id}.json":
    delete:
      description: |
        Deletes an import, by ID only. The associated people can be deleted as part of the deletion process.

        Admin users can access imports for the entire team, but non-admin users can only access their own imports.
      parameters:
        - description: Import ID
          in: path
          name: id
          required: true
          type: string
        - description: |
            Whether to delete people on this Import. Possible values are: [not present], all, single.

            'single' will delete people who are only present in this Import.
            'all' will delete people even if they are present in other Imports.
            Not specifying this parameter will not delete any people
          in: query
          name: undo
          required: false
          type: string
      responses:
        "204":
          description: The import has been deleted successfully
      summary: Delete an import
      tags:
        - Imports
    get:
      description: |
        Fetches an import, by ID only.

        Admin users can access imports for the entire team, but non-admin users can only access their own imports.
      parameters:
        - description: Import ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Import"
      summary: Fetch an import
      tags:
        - Imports
    put:
      description: |
        Updates an import, by ID only.

        Admin users can access imports for the entire team, but non-admin users can only access their own imports.
      parameters:
        - description: Import ID
          in: path
          name: id
          required: true
          type: string
        - description: ID of the User that owns this Import
          in: formData
          name: user_id
          required: false
          type: integer
        - description: Name, recommended to be easily identifiable to a user
          in: formData
          name: name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Import"
      summary: Update an import
      tags:
        - Imports
  /v2/me.json:
    get:
      description: |
        Authenticated user information. This endpoint does not accept any parameters as it is
        represents your authenticated user. The "Users" resource provides user information
        for other users on the team.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
      summary: Fetch current user
      tags:
        - Me
  /v2/notes.json:
    get:
      description: |
        Fetches multiple note records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: "Case insensitive type of item with which the note is associated.  Value must be one of: person, account"
          in: query
          name: associated_with_type
          required: false
          type: string
        - description: ID of the item with which the note is associated.  The associated_with_type must also be present if this parameter is used
          in: query
          name: associated_with_id
          required: false
          type: integer
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: IDs of notes to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Note"
            type: array
      summary: List notes
      tags:
        - Notes
    post:
      description: |
        Creates a note.
      parameters:
        - description: The content of the note
          in: formData
          name: content
          required: true
          type: string
        - description: "Case insensitive type of item with which the note is associated.  Value must be one of: person, account"
          in: formData
          name: associated_with_type
          required: true
          type: string
        - description: ID of the item with which the note is associated
          in: formData
          name: associated_with_id
          required: true
          type: integer
        - description: Boolean indicating if the CRM sync should be skipped.  No syncing will occur if true
          in: formData
          name: skip_crm_sync
          required: false
          type: boolean
        - description: ID of the call with which the note is associated. The call cannot already have a note
          in: formData
          name: call_id
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Note"
      summary: Create a note
      tags:
        - Notes
  "/v2/notes/{id}.json":
    get:
      description: |
        Fetches a note, by ID only.
      parameters:
        - description: Note ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Note"
      summary: Fetch a note
      tags:
        - Notes
    put:
      description: |
        Updates a note. Any changes to the note or associated records will not reflect in Salesforce.com.
      parameters:
        - description: Note ID
          in: path
          name: id
          required: true
          type: string
        - description: The content of the note
          in: formData
          name: content
          required: true
          type: string
        - description: ID of the call with which the note is associated. The call cannot already have a note. If the note is associated to a call already, it will become associated to the requested call
          in: formData
          name: call_id
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Person"
      summary: Update a note
      tags:
        - Notes
  /v2/people.json:
    get:
      description: |
        Fetches multiple person records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of people to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: Filters people by email address
          in: query
          items:
            type: string
          name: email_addresses
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at, last_contacted_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Person"
            type: array
      summary: List people
      tags:
        - People
    post:
      description: |
        Creates a person. Either email_address or phone/last_name must be provided as a unique lookup
        on the team.
      parameters:
        - description: Email address
          in: formData
          name: email_address
          required: false
          type: string
        - description: Alternate email address
          in: formData
          name: secondary_email_address
          required: false
          type: string
        - description: Personal email address
          in: formData
          name: personal_email_address
          required: false
          type: string
        - description: First name
          in: formData
          name: first_name
          required: false
          type: string
        - description: Last name
          in: formData
          name: last_name
          required: false
          type: string
        - description: Phone without formatting
          in: formData
          name: phone
          required: false
          type: string
        - description: Phone extension without formatting
          in: formData
          name: phone_extension
          required: false
          type: string
        - description: Mobile phone without formatting
          in: formData
          name: mobile_phone
          required: false
          type: string
        - description: Home phone without formatting
          in: formData
          name: home_phone
          required: false
          type: string
        - description: Linkedin URL
          in: formData
          name: linkedin_url
          required: false
          type: string
        - description: Job title
          in: formData
          name: title
          required: false
          type: string
        - description: City
          in: formData
          name: city
          required: false
          type: string
        - description: State
          in: formData
          name: state
          required: false
          type: string
        - description: Country
          in: formData
          name: country
          required: false
          type: string
        - description: Work location - city
          in: formData
          name: work_city
          required: false
          type: string
        - description: Work location - state
          in: formData
          name: work_state
          required: false
          type: string
        - description: Work location - country
          in: formData
          name: work_country
          required: false
          type: string
        - description: Company name. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_name
          required: false
          type: string
        - description: Company website. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_website
          required: false
          type: string
        - description: Company industry. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_industry
          required: false
          type: string
        - description: Whether this person can not be contacted. Values are either true or false. Setting this to true will remove the person from all active communications
          in: formData
          name: do_not_contact
          required: false
          type: boolean
        - description: Time locale of the person
          in: formData
          name: locale
          required: false
          type: string
        - description: The website of this person
          in: formData
          name: personal_website
          required: false
          type: string
        - description: The twitter handle of this person
          in: formData
          name: twitter_handle
          required: false
          type: string
        - description: All tags applied to this person
          in: formData
          items:
            type: string
          name: tags
          required: false
          type: array
        - description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
          in: formData
          items:
            type: string
          name: custom_fields
          required: false
          type: array
        - description: ID of the Account to link this person to
          in: formData
          name: account_id
          required: false
          type: integer
        - description: ID of the User that owns this person
          in: formData
          name: owner_id
          required: false
          type: integer
        - description: ID of the Import this person is a part of. A person can be part of multiple imports, but this ID will always be the most recent Import
          in: formData
          name: import_id
          required: false
          type: integer
        - description: ID of the PersonStage of this person
          in: formData
          name: person_stage_id
          required: false
          type: integer
        - description: Whether the date should be added to this person as a tag. Default is false. The tag will be Y-m-d format.
          in: formData
          name: autotag_date
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Person"
      summary: Create a person
      tags:
        - People
  "/v2/people/{id}.json":
    delete:
      description: |
        Deletes a person. This operation is not reversible without contacting support.
        This operation can be called multiple times successfully.
      parameters:
        - description: Person id
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: The person has been deleted successfully
      summary: Delete a person
      tags:
        - People
    get:
      description: |
        Fetches a person, by ID only.
      parameters:
        - description: Person ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Person"
      summary: Fetch a person
      tags:
        - People
    put:
      description: |
        Updates a person.
      parameters:
        - description: Email address
          in: formData
          name: email_address
          required: false
          type: string
        - description: Alternate email address
          in: formData
          name: secondary_email_address
          required: false
          type: string
        - description: Personal email address
          in: formData
          name: personal_email_address
          required: false
          type: string
        - description: First name
          in: formData
          name: first_name
          required: false
          type: string
        - description: Last name
          in: formData
          name: last_name
          required: false
          type: string
        - description: Phone without formatting
          in: formData
          name: phone
          required: false
          type: string
        - description: Phone extension without formatting
          in: formData
          name: phone_extension
          required: false
          type: string
        - description: Mobile phone without formatting
          in: formData
          name: mobile_phone
          required: false
          type: string
        - description: Home phone without formatting
          in: formData
          name: home_phone
          required: false
          type: string
        - description: Linkedin URL
          in: formData
          name: linkedin_url
          required: false
          type: string
        - description: Job title
          in: formData
          name: title
          required: false
          type: string
        - description: City
          in: formData
          name: city
          required: false
          type: string
        - description: State
          in: formData
          name: state
          required: false
          type: string
        - description: Country
          in: formData
          name: country
          required: false
          type: string
        - description: Work location - city
          in: formData
          name: work_city
          required: false
          type: string
        - description: Work location - state
          in: formData
          name: work_state
          required: false
          type: string
        - description: Work location - country
          in: formData
          name: work_country
          required: false
          type: string
        - description: Company name. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_name
          required: false
          type: string
        - description: Company website. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_website
          required: false
          type: string
        - description: Company industry. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
          in: formData
          name: person_company_industry
          required: false
          type: string
        - description: Whether this person can not be contacted. Values are either true or false. Setting this to true will remove the person from all active communications
          in: formData
          name: do_not_contact
          required: false
          type: boolean
        - description: Time locale of the person
          in: formData
          name: locale
          required: false
          type: string
        - description: The website of this person
          in: formData
          name: personal_website
          required: false
          type: string
        - description: The twitter handle of this person
          in: formData
          name: twitter_handle
          required: false
          type: string
        - description: All tags applied to this person
          in: formData
          items:
            type: string
          name: tags
          required: false
          type: array
        - description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
          in: formData
          items:
            type: string
          name: custom_fields
          required: false
          type: array
        - description: ID of the Account to link this person to
          in: formData
          name: account_id
          required: false
          type: integer
        - description: ID of the User that owns this person
          in: formData
          name: owner_id
          required: false
          type: integer
        - description: ID of the Import this person is a part of. A person can be part of multiple imports, but this ID will always be the most recent Import
          in: formData
          name: import_id
          required: false
          type: integer
        - description: ID of the PersonStage of this person
          in: formData
          name: person_stage_id
          required: false
          type: integer
        - description: Person id
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Person"
      summary: Update a person
      tags:
        - People
  /v2/person_stages.json:
    get:
      description: |
        Fetches multiple person stage records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of person stages to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/PersonStage"
            type: array
      summary: List person stages
      tags:
        - Person Stages
    post:
      description: |
        Creates a person stage.
      parameters:
        - description: The name of the new stage
          in: formData
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PersonStage"
      summary: Create a person stage
      tags:
        - Person Stages
  "/v2/person_stages/{id}.json":
    delete:
      description: |
        Deletes a person stage. This operation is not reversible without contacting support.
        This operation can be called multiple times successfully.
      parameters:
        - description: Stage ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: The Person Stage has been deleted successfully
      summary: Delete an person stage
      tags:
        - Person Stages
    get:
      description: |
        Fetches a person stage, by ID only.
      parameters:
        - description: Stage ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PersonStage"
      summary: Fetch a person stage
      tags:
        - Person Stages
    put:
      description: |
        Updates a person stage.
      parameters:
        - description: Stage ID
          in: path
          name: id
          required: true
          type: string
        - description: The name of the stage.
          in: formData
          name: name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PersonStage"
      summary: Update a person stage
      tags:
        - Person Stages
  /v2/phone_numbers/caller_ids.json:
    get:
      description: |
        Each entry is a possible caller ID match for the number. Multiple
        entries may be returned if the phone number is present on more than one
        person in the system.  Phone number should be in E.164 format.
      parameters:
        - description: E.164 Phone Number
          in: query
          name: phone_number
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/CallerId"
            type: array
      summary: List caller ids
      tags:
        - Caller IDs
  "/v2/phone_numbers/recording_settings/{id}.json":
    get:
      description: |
        Fetches the recording status for a given phone number, based on Do Not Record and Recording Governance for your team.
        Phone number should be in E.164 format.
      parameters:
        - description: E.164 Phone Number
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RecordingSetting"
      summary: Fetch recording setting
      tags:
        - Recording Settings
  /v2/steps.json:
    get:
      description: |
        Fetches multiple step records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of steps to fetch.
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: Filter by cadence ID
          in: query
          name: cadence_id
          required: false
          type: integer
        - description: Filter by step type
          in: query
          name: type
          required: false
          type: string
        - description: Filter by whether a step has due actions
          in: query
          name: has_due_actions
          required: false
          type: boolean
        - description: "Key to sort on, must be one of: created_at, updated_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Step"
            type: array
      summary: List steps
      tags:
        - Steps
  "/v2/steps/{id}.json":
    get:
      description: |
        Fetches a step, by ID only.
      parameters:
        - description: Step ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Step"
      summary: Fetch a step
      tags:
        - Steps
  /v2/successes.json:
    get:
      description: |
        Fetches multiple success records. The records can be filtered, paged, and sorted according to
        the respective parameters.
      parameters:
        - description: IDs of successes to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: integer
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at, succeeded_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/Success"
            type: array
      summary: List successes
      tags:
        - Successes
  /v2/team.json:
    get:
      description: |
        Fetches the team of the authenticated user.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Team"
      summary: Fetch current team
      tags:
        - Team
  /v2/team_templates.json:
    get:
      description: |
        Fetches multiple team template records. The records can be filtered, paged, and sorted according to
        the respective parameters.

        Team templates are templates that are available team-wide. Admins may use
        team templates to create original content for the entire team, monitor version control to ensure templates are always up to date,
        and track template performance across the entire organization. All metrics on a team template reflect usage across the team; individual metrics can be found with the email_templates API endpoint.
      parameters:
        - description: IDs of team templates to fetch. If a record can't be found, that record won't be returned and your request will be successful
          in: query
          items:
            type: string
          name: ids
          required: false
          type: array
        - description: |
            Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
            ---CUSTOM---
            {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
          in: query
          items:
            type: string
          name: updated_at
          required: false
          type: array
        - description: "Key to sort on, must be one of: created_at, updated_at, last_used_at. Defaults to updated_at"
          in: query
          name: sort_by
          required: false
          type: string
        - description: "Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"
          in: query
          name: sort_direction
          required: false
          type: string
        - description: How many records to show per page in the range [1, 100]. Defaults to 25
          in: query
          name: per_page
          required: false
          type: integer
        - description: The current page to fetch results from. Defaults to 1
          in: query
          name: page
          required: false
          type: integer
        - description: Whether to include total_pages and total_count in the metadata. Defaults to false
          in: query
          name: include_paging_counts
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/TeamTemplate"
            type: array
      summary: List team templates
      tags:
        - Team Templates
  "/v2/team_templates/{id}.json":
    get:
      description: |
        Fetches a team template, by ID only.
      parameters:
        - description: Team Template ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TeamTemplate"
      summary: Fetch a team template
      tags:
        - Team Templates
  /v2/users.json:
    get:
      description: |
        Non Admin: Lists only your user, or all on team depending on group visibility policy
        Team Admin: Lists users associated with your team
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/User"
            type: array
      summary: List users
      tags:
        - Users
  "/v2/users/{id}.json":
    get:
      description: |
        Fetches a user, by ID only.
      parameters:
        - description: User ID
          in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
      summary: Fetch a user
      tags:
        - Users
definitions:
  Account:
    properties:
      archived_at:
        description: Datetime of when the Account was archived, if archived
        example: 2018-02-01T15:02:39.396392-05:00
        format: date
        type: string
      city:
        description: City
        example: Dufftown
        type: string
      company_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Company Stage that this Account has set
        example:
          id: 1
      company_type:
        description: Type of the Account's company
        example: Private
        type: string
      conversational_name:
        description: Conversational name of the Account
        example: Hogwarts
        type: string
      country:
        description: Country
        example: Scotland
        type: string
      counts:
        $ref: "#/definitions/AccountCounts"
        description: Various counts for this Account
        example:
          people: 15
      created_at:
        description: Datetime of when the Account was created
        example: 2018-02-01T15:02:39.396254-05:00
        format: date
        type: string
      creator:
        $ref: "#/definitions/EmbeddedResource"
        description: User that created this Account
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      crm_id:
        description: CRM ID, currently Salesforce.com only
        example: 003i000001mnhpD
        type: string
      crm_object_type:
        description: CRM object type, currently Salesforce.com only
        example: account
        type: string
      crm_url:
        description: CRM url, currently Salesforce.com only
        example: https://na15.salesforce.com/003i000001mnhpD
        type: string
      custom_fields:
        description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
        example:
          MyField: A Value
          Other: Field
        type: object
      description:
        description: Description
        example: British school of magic for students
        type: string
      do_not_contact:
        description: Whether this company has opted out of communications. Do not contact someone at this company when this is set to true
        example: true
        type: boolean
      domain:
        description: Website domain, not a fully qualified URI
        example: salesloft.com
        type: string
      founded:
        description: Date or year of founding
        example: March 1st, 1820
        type: string
      id:
        description: ID of Account
        example: 1
        type: integer
      industry:
        description: Industry
        example: Education
        type: string
      last_contacted_at:
        description: Datetime this Account was last contacted
        example: 2018-02-01T15:02:39.397020-05:00
        format: date
        type: string
      last_contacted_by:
        $ref: "#/definitions/EmbeddedResource"
        description: User that last contacted this Account
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      last_contacted_person:
        $ref: "#/definitions/EmbeddedResource"
        description: Person who was last contacted at this Account
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      last_contacted_type:
        description: The type of the last touch to this Account. Can be call, email, other
        example: call
        type: string
      linkedin_url:
        description: Full LinkedIn url
        example: https://www.linkedin.com/company/2296178/
        type: string
      locale:
        description: Time locale
        example: Europe/London
        type: string
      name:
        description: Account Full Name
        example: Hogwarts School of Witchcraft and Wizardry
        type: string
      owner:
        $ref: "#/definitions/EmbeddedResource"
        description: User that is marked as the owner of this Account
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      owner_crm_id:
        description: Mapped owner field from the CRM, currently Salesforce.com only
        example: 003i000001mnhpD
        type: string
      phone:
        description: Phone number without formatting
        example: +1 444 555 6666
        type: string
      postal_code:
        description: Postal code
        example: "55555"
        type: string
      revenue_range:
        description: Estimated revenue range
        example: 1,000,000-2,000,000
        type: string
      size:
        description: Estimated number of people in employment
        example: "1500"
        type: string
      state:
        description: State
        example: Mortlach
        type: string
      street:
        description: Street name and number
        example: 4 Picket Drive
        type: string
      tags:
        description: All tags applied to this Account
        example:
          - 7-23-2017
          - dreamforce
        items:
          type: string
        type: array
      twitter_handle:
        description: Twitter handle, with @
        example: "@kyleporter"
        type: string
      updated_at:
        description: Datetime of when the Account was last updated
        example: 2018-02-01T15:02:39.396329-05:00
        format: date
        type: string
      website:
        description: Website
        example: https://salesloft.com
        type: string
  AccountCounts:
    properties:
      people:
        description: Number of people in SalesLoft associated with this Account
        example: 15
        type: integer
  Action:
    properties:
      action_details:
        $ref: "#/definitions/EmbeddedResource"
        description: The type specific action details
        example:
          _href: https://api.salesloft.com/v2/action_details/call_instructions/1
          id: 1
      created_at:
        description: Datetime of when the Action was created
        example: 2018-02-01T00:00:00.000000-05:00
        format: date
        type: string
      due:
        description: Whether this step is due
        example: true
        type: boolean
      due_on:
        description: When action is due
        example: 2018-02-01T15:02:39.560063-05:00
        format: date
        type: string
      id:
        description: ID of Action
        example: 1
        type: integer
      person:
        $ref: "#/definitions/EmbeddedResource"
        description: The subject of an action
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      status:
        description: |
          The current state of the person on the cadence. Possible values are:

          in_progress: this action has not been completed

          pending_activity: this action has been acted upon, but the action has not been completed.
          (i.e. the email is scheduled to send, but has not been delivered yet)
        example: in_progress
        type: string
      type:
        description: |
          The type of this action. Valid types are: email, phone, other. New types may be added in the future.
        example: phone
        type: string
      updated_at:
        description: Datetime of when the Action was last updated
        example: 2018-02-01T15:02:39.559930-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User assigned to action
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
  Cadence:
    properties:
      added_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Stage set when person is added to cadence
        example:
          _href: https://api.salesloft.com/v2/person_stages/3
          id: 3
      archived_at:
        description: Datetime of when the cadence was archived, if archived
        example: 2018-02-01T15:02:39.419122-05:00
        format: date
        type: string
      bounced_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Stage set when person on cadence bounces
        example:
          _href: https://api.salesloft.com/v2/person_stages/1
          id: 1
      counts:
        $ref: "#/definitions/CadenceCounts"
        description: Various counts for this cadence
        example:
          cadence_people: 59
          target_daily_people: 10
      created_at:
        description: Datetime of when the cadence was created
        example: 2018-02-01T15:02:39.419014-05:00
        format: date
        type: string
      creator:
        $ref: "#/definitions/EmbeddedResource"
        description: User that created this cadence
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      finished_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Stage set when person is finished with cadence
        example:
          _href: https://api.salesloft.com/v2/person_stages/3
          id: 3
      id:
        description: ID of cadence
        example: 1
        type: integer
      name:
        description: Cadence name
        example: Prospecting - VP of Sales
        type: string
      opt_out_link_included:
        description: Whether this cadence is configured to include an opt-out link by default
        example: true
        type: boolean
      owner:
        $ref: "#/definitions/EmbeddedResource"
        description: User that is marked as the owner of this cadence
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      remove_bounces_enabled:
        description: Whether this cadence is configured to automatically remove people who have bounced
        example: true
        type: boolean
      remove_replies_enabled:
        description: Whether this cadence is configured to automatically remove people who have replied
        example: true
        type: boolean
      replied_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Stage set when person on cadence replies
        example:
          _href: https://api.salesloft.com/v2/person_stages/2
          id: 2
      shared:
        description: Whether this cadence is visible to team members (shared)
        example: false
        type: boolean
      tags:
        description: All tags applied to this cadence
        example:
          - 7-23-2017
          - dreamforce
        items:
          type: string
        type: array
      team_cadence:
        description: Whether this cadence is a team cadence.  A team cadence is created by an admin and can be run by all users
        example: false
        type: boolean
      updated_at:
        description: Datetime of when the cadence was last updated
        example: 2018-02-01T15:02:39.419082-05:00
        format: date
        type: string
  CadenceCounts:
    properties:
      cadence_people:
        description: The number of people that have ever been added to the cadence
        example: 59
        type: integer
      target_daily_people:
        description: The user defined target for number of people to add to the cadence each day
        example: 10
        type: integer
  CadenceMembership:
    properties:
      added_at:
        description: Datetime of when the person was last added to this cadence
        example: 2018-02-01T15:02:39.409933-05:00
        format: date
        type: string
      cadence:
        $ref: "#/definitions/EmbeddedResource"
        description: The cadence that the person is on
        example:
          _href: https://api.salesloft.com/v2/cadences/1
          id: 1
      counts:
        $ref: "#/definitions/CadenceMembershipCounts"
        description: Various counts for the record
        example:
          bounces: 0
          calls: 2
          clicks: 5
          replies: 2
          sent_emails: 4
          views: 10
      created_at:
        description: Datetime of when the person was first added to this cadence
        example: 2018-02-01T15:02:39.409985-05:00
        format: date
        type: string
      current_state:
        description: |
          The current state of the person on the cadence. Possible values are:

          staged: The person is waiting for the first step in the cadence to occur

          active: The cadence has begun processing this person and is still in the process, but idle

          scheduled: The cadence has begun processing this person and is still in the process, with an activity scheduled to occur

          completed: The cadence has been completed for this person

          removed: The person was manually or automatically removed from the cadence

          removed_no_action: The person was removed from the cadence before any action occurred

          reassigned: The person's cadence execution was transferred to a different user, ending this user's interaction
        example: staged
        type: string
      id:
        description: Cadence membership ID
        example: 1
        type: integer
      latest_action:
        $ref: "#/definitions/EmbeddedResource"
        description: The most recent action associated with the record
        example:
          id: 4
      person:
        $ref: "#/definitions/EmbeddedResource"
        description: The person that is on the cadence
        example:
          _href: https://api.salesloft.com/v2/people/2
          id: 2
      person_deleted:
        description: Whether the associated person has since been deleted
        example: false
        type: boolean
      updated_at:
        description: Datetime of when the record was last updated
        example: 2018-02-01T15:02:39.410015-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: The user that is acting on the person in the cadence
        example:
          _href: https://api.salesloft.com/v2/users/3
          id: 3
  CadenceMembershipCounts:
    properties:
      bounces:
        description: The number of times emails sent from the cadence to the person bounced
        example: 0
        type: integer
      calls:
        description: The number of times a call was logged from the cadence to the person
        example: 2
        type: integer
      clicks:
        description: The number of times emails sent from the cadence to the person were clicked
        example: 5
        type: integer
      replies:
        description: The number of times emails sent from the cadence to the person were replied to
        example: 2
        type: integer
      sent_emails:
        description: The number of times emails were sent from the cadence to the person
        example: 4
        type: integer
      views:
        description: The number of times emails sent from the cadence to the person were opened
        example: 10
        type: integer
  Call:
    properties:
      action:
        $ref: "#/definitions/EmbeddedResource"
        description: Action associated to the call
        example:
          id: 1
      called_person:
        $ref: "#/definitions/EmbeddedResource"
        description: The person called
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      created_at:
        description: Datetime of when the call was created
        example: 2018-02-01T15:02:39.523939-05:00
        format: date
        type: string
      crm_activity:
        $ref: "#/definitions/EmbeddedResource"
        description: CRM Activity associated with the call
        example:
          _href: https://api.salesloft.com/v2/crm_activities/1
          id: 1
      disposition:
        description: Result of the call
        example: Connected
        type: string
      duration:
        description: Length of the call in seconds
        example: 60
        type: integer
      id:
        description: ID of Call
        example: 1
        type: integer
      note:
        $ref: "#/definitions/EmbeddedResource"
        description: Note for this call
        example:
          _href: https://api.salesloft.com/v2/notes/1
          id: 1
      recordings:
        description: The recordings for this this call and their status
        example:
          - status: completed
            url: https://example.com/recording1
        items:
          $ref: "#/definitions/EmbeddedRecordingResource"
        type: array
      sentiment:
        description: Outcome of the conversation
        example: Demo Scheduled
        type: string
      to:
        description: Phone number that received the call
        example: "7705551234"
        type: string
      updated_at:
        description: Datetime of when the call was last updated
        example: 2018-02-01T15:02:39.524003-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that made the call
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
  CallDataRecord:
    properties:
      call:
        $ref: "#/definitions/EmbeddedResource"
        description: Call that this record was logged to, if logged to a call
        example:
          _href: https://api.salesloft.com/v2/activities/calls/1
          id: 1
      created_at:
        description: Datetime of when the call was created
        example: 2018-02-01T15:02:39.425319-05:00
        format: date
        type: string
      direction:
        description: "Direction of the call. Can be one of: inbound, outbound"
        example: outbound
        type: string
      duration:
        description: Length of the call in seconds
        example: 60
        type: integer
      from:
        description: Phone number that placed the call
        example: "7705551234"
        type: string
      id:
        description: ID of CallDataRecord
        example: 1
        type: integer
      recording:
        $ref: "#/definitions/EmbeddedRecordingResource"
        description: The recording for this this call data record, with a status
        example:
          status: completed
          url: http://example.com/recording/1
      to:
        description: Phone number that received the call
        example: "7705551234"
        type: string
      updated_at:
        description: Datetime of when the call was last updated
        example: 2018-02-01T15:02:39.425365-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that made or received the call, if the call was to a user
        example:
          _href: https://api.salesloft.com/v2/users/2
          id: 2
  CallInstruction:
    properties:
      created_at:
        description: Datetime of when the call instructions were created
        example: 2018-02-01T15:02:39.571365-05:00
        format: date
        type: string
      id:
        description: ID of call instructions
        example: 1
        type: integer
      instructions:
        description: The instructions
        example: Call once, leave voicemail if not answered. Conference conversation.
        type: string
      updated_at:
        description: Datetime of when the call instructions were last updated
        example: 2018-02-01T15:02:39.571468-05:00
        format: date
        type: string
  CallerId:
    properties:
      account_name:
        description: The account of the person calling
        example: Bunty Soap Company
        type: string
      display_name:
        description: The name of the person calling
        example: Frank Galikanokus
        type: string
      person:
        $ref: "#/definitions/EmbeddedResource"
        description: The person calling
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      title:
        description: The title of the person calling
        example: Transportation Coordinator
        type: string
  CrmActivity:
    properties:
      activity_type:
        description: "The type of activity that is being recorded, if available. The values can change over time, but could be one of: email, phone, email reminder, inmail"
        example: phone
        type: string
      created_at:
        description: Datetime of when the crm activity was created
        example: 2018-02-01T15:02:39.431249-05:00
        format: date
        type: string
      crm_id:
        description: The ID of the activity in Salesforce, if written to Salesforce
        example: 00T0H00003w2FBhUAM
        type: string
      custom_crm_fields:
        description: Additional fields that are logged to Salesforce, if mapped by the team at the time of writing to Salesforce
        example:
          ecorp__Call_Type__c: inbound follow up
        type: object
      description:
        description: The description field of the activity in Salesforce
        example: Timeline is 2 weeks for demo, set with Kate
        type: string
      error:
        description: Information about why this crm activity failed to sync, if it did fail to sync. Failed activities will be automatically retried and may become successful in the future
        type: string
      id:
        description: CrmActivity ID
        example: 1
        type: integer
      person:
        $ref: "#/definitions/EmbeddedResource"
        description: Person that this crm activity is for
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      subject:
        description: The subject field of the activity in Salesforce
        example: "Call: Connected | Interested"
        type: string
      updated_at:
        description: Datetime of when the crm activity was last updated
        example: 2018-02-01T15:02:39.431293-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that triggered this crm activity
        example:
          _href: https://api.salesloft.com/v2/users/2
          id: 2
  CustomField:
    properties:
      created_at:
        description: Datetime of when the Custom Field was created
        example: 2018-02-01T15:02:39.436288-05:00
        format: date
        type: string
      field_type:
        description: "Type of the Custom Field. Value must be one of: person, company, opportunity."
        example: person
        type: string
      id:
        description: ID of Custom Field
        example: 1
        type: integer
      name:
        description: Name of the Custom Field
        example: My Custom Field
        type: string
      updated_at:
        description: Datetime of when the Custom Field was last updated
        example: 2018-02-01T15:02:39.436326-05:00
        format: date
        type: string
  Email:
    properties:
      action:
        $ref: "#/definitions/EmbeddedResource"
        description: Action that this email was sent from, or null if not sent through a cadence
        example:
          id: 1
      bounced:
        description: Whether this email bounced
        example: false
        type: boolean
      click_tracking:
        description: Whether this email had click tracking enabled
        example: true
        type: boolean
      counts:
        $ref: "#/definitions/EmailCounts"
        description: Various counts for this email
        example:
          attachments: 0
          clicks: 2
          replies: 1
          unique_devices: 4
          unique_locations: 3
          views: 3
      created_at:
        description: Datetime of when the email was created
        example: 2018-02-01T15:02:39.530887-05:00
        format: date
        type: string
      crm_activity:
        $ref: "#/definitions/EmbeddedResource"
        description: CRM Activity associated with this email
        example:
          _href: https://api.salesloft.com/v2/crm_activities/1
          id: 1
      headers:
        description: "Selected headers that are included if this email used them. Available keys are: cc, bcc"
        example:
          bcc: track@salesforce.com
          cc: sb@salesloft.com
        type: object
      id:
        description: ID of Email
        example: 1
        type: integer
      mailing:
        $ref: "#/definitions/EmbeddedResource"
        description: The mailing that this email was a part of
        example:
          id: 1
      recipient:
        $ref: "#/definitions/EmbeddedResource"
        description: The person whom received this email
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      recipient_email_address:
        description: Email address of the recipient
        example: bob.smith@example.com
        type: string
      send_after:
        description: When this email will be sent, or null if already sent
        example: 2018-02-01T15:02:39.543784-05:00
        format: date
        type: string
      sent_at:
        description: When this email was sent, or null if it was not sent
        example: 2018-02-01T15:02:39.543843-05:00
        format: date
        type: string
      status:
        description: "Status of this email through the sending process. Possible values are: sent, sent_from_gmail, sent_from_external, pending, pending_reply_check, scheduled, sending, delivering, failed, cancelled, pending_through_gmail, pending_through_external"
        example: sent
        type: string
      updated_at:
        description: Datetime of when the email was last updated
        example: 2018-02-01T15:02:39.530975-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that sent this email
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      view_tracking:
        description: Whether this email had view tracking enabled
        example: true
        type: boolean
  EmailCounts:
    properties:
      attachments:
        description: The number of attachments on the email
        example: 0
        type: integer
      clicks:
        description: The number of times links in the email were clicked
        example: 2
        type: integer
      replies:
        description: The number of replies the email received
        example: 1
        type: integer
      unique_devices:
        description: The number of unique devices that opened the email
        example: 4
        type: integer
      unique_locations:
        description: The number of unique locations that opened the email
        example: 3
        type: integer
      views:
        description: The number of times the email was opened
        example: 3
        type: integer
  EmailTemplate:
    properties:
      archived_at:
        description: Datetime of when the email template was archived, if archived
        example: 2018-02-01T15:02:39.443876-05:00
        format: date
        type: string
      body:
        description: Sanitized body of the email template without email signature
        example: <div><div>Welcome to the SalesLoft family! My name is Sarah and I’m your implementation consultant. I’m here to get you up and running. It's my job to help you configure your team's SalesLoft access, provide customized training for your specific goals, and make sure that you and your team are ready to crush your goals.</div><div dir="ltr"><br></div>Thank you,<br></div>
        type: string
      cadence_template:
        description: Whether this email template is only used on a cadence step. These templates are not visible in the SalesLoft application template list. If false, this email template is visible in the SalesLoft application, and may be used when composing an email or creating a cadence step.
        example: true
        type: boolean
      click_tracking_enabled:
        description: Whether click tracking is enabled for this email template
        example: true
        type: boolean
      counts:
        $ref: "#/definitions/EmailTemplateCounts"
        description: Various counts for this team template
        example:
          bounces: 10
          clicks: 20
          replies: 1
          sent_emails: 59
          views: 3
      created_at:
        description: Datetime of when the email template was created
        example: 2018-02-01T15:02:39.443757-05:00
        format: date
        type: string
      id:
        description: ID of email template
        example: 5
        type: integer
      last_used_at:
        description: Datetime of when the email template was last used
        example: 2018-02-01T15:02:39.443850-05:00
        format: date
        type: string
      open_tracking_enabled:
        description: Whether open tracking is enabled for this email template
        example: true
        type: boolean
      shared:
        description: Whether this email template is visible to team members (shared)
        example: false
        type: boolean
      subject:
        description: Subject of the email template
        example: Welcome to SalesLoft!
        type: string
      team_template:
        $ref: "#/definitions/EmbeddedResource"
        description: Associated team template, if any
        example:
          _href: https://api.salesloft.com/v2/team_templates/00000000-0000-0000-0000-000000000000
          id: 00000000-0000-0000-0000-000000000000
      template_owner:
        $ref: "#/definitions/EmbeddedResource"
        description: User that owns this email template
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      title:
        description: Title of the email template
        example: Welcome email
        type: string
      updated_at:
        description: Datetime of when the email template was last updated
        example: 2018-02-01T15:02:39.443798-05:00
        format: date
        type: string
  EmailTemplateCounts:
    properties:
      bounces:
        description: The number of bounces the email template received
        example: 10
        type: integer
      clicks:
        description: The number of times links in the email template were clicked
        example: 20
        type: integer
      replies:
        description: The number of replies the email template received
        example: 1
        type: integer
      sent_emails:
        description: The number of times the email template was sent out
        example: 59
        type: integer
      views:
        description: The number of times the email template was opened
        example: 3
        type: integer
  EmbeddedRecordingResource:
    properties:
      status:
        description: The processing status of the recording. A completed status means that the recording is fully available
        example: completed
        type: string
      url:
        description: The url of the recording
        example: http://example.com/recording/1
        type: string
  EmbeddedResource:
    properties:
      _href:
        description: Resource URL, pointed at your API version, present if this resource is available in the API
        example: https://api.salesloft.com/v2/widgets/10
        type: string
      id:
        description: ID of the resource
        example: 10
        type: integer
  Import:
    properties:
      created_at:
        description: Datetime of when the import was created
        example: 2018-02-01T15:02:39.450608-05:00
        format: date
        type: string
      current_people_count:
        description: Count of People that have not been deleted
        example: 5
        type: integer
      id:
        description: Import ID
        example: 1
        type: integer
      imported_people_count:
        description: Count of People that have ever been on this Import
        example: 7
        type: integer
      name:
        description: Name of Import
        example: DataProvider -> SalesLoft 9/1/17
        type: string
      updated_at:
        description: Datetime of when the import was last updated, ignoring relationship changes
        example: 2018-02-01T15:02:39.450663-05:00
        format: date
        type: string
  Note:
    properties:
      associated_with:
        $ref: "#/definitions/EmbeddedResource"
        description: Item on which the note was made
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      call:
        $ref: "#/definitions/EmbeddedResource"
        description: Call linked to the note
        example:
          _href: https://api.salesloft.com/v2/activities/calls/1
          id: 1
      content:
        description: The content of the note
        example: Was very interested in a demo at a later time
        type: string
      created_at:
        description: Datetime of when the note was created
        example: 2018-02-01T15:02:39.465679-05:00
        format: date
        type: string
      id:
        description: Note ID
        example: 1
        type: integer
      updated_at:
        description: Datetime of when the note was last updated
        example: 2018-02-01T15:02:39.465758-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that wrote this note
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
  Person:
    properties:
      account:
        $ref: "#/definitions/EmbeddedResource"
        description: Account that this person is associated to
        example:
          _href: https://api.salesloft.com/v2/accounts/1
          id: 1
      bouncing:
        description: Whether this person's current email address has bounced
        example: false
        type: boolean
      city:
        description: City
        example: Atlanta
        type: string
      country:
        description: Country
        example: United States
        type: string
      counts:
        $ref: "#/definitions/PersonCounts"
        description: Various counts for this person
        example:
          calls: 4
          emails_bounced: 0
          emails_clicked: 1
          emails_replied_to: 0
          emails_sent: 3
          emails_viewed: 2
      created_at:
        description: Datetime of when the person was created
        example: 2018-02-01T15:02:39.476041-05:00
        format: date
        type: string
      crm_id:
        description: CRM ID, currently Salesforce.com only
        example: 003i000001mnhpD
        type: string
      crm_object_type:
        description: CRM object type, currently Salesforce.com only
        example: Lead
        type: string
      crm_url:
        description: CRM url, currently Salesforce.com only
        example: https://na15.salesforce.com/003i000001mnhpD
        type: string
      custom_fields:
        description: Custom fields are defined by the user's team. Only fields with values are presented in the API.
        example:
          MyField: A Value
          Other: Field
        type: object
      display_name:
        description: Either the full name or the email address. Use this when showing a person's name
        example: Pat Johnson
        type: string
      do_not_contact:
        description: Whether or not this person has opted out of communications. Do not contact someone when this is set to true
        example: true
        type: boolean
      email_address:
        description: Email address
        example: pat.johnson@example.com
        type: string
      first_name:
        description: First name
        example: Pat
        type: string
      home_phone:
        description: Home phone without formatting
        example: +1 444 555 6666
        type: string
      id:
        description: Person ID
        example: 1
        type: integer
      import:
        $ref: "#/definitions/EmbeddedResource"
        description: Import that this person was a part of
        example:
          _href: https://api.salesloft.com/v2/imports/1
          id: 1
      last_contacted_at:
        description: Last datetime this person was contacted
        example: 2018-02-01T15:02:39.476168-05:00
        format: date
        type: string
      last_contacted_by:
        $ref: "#/definitions/EmbeddedResource"
        description: User that last contacted this person
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      last_contacted_type:
        description: The type of the last touch to this person. Can be call, email, other
        example: call
        type: string
      last_name:
        description: Last name
        example: Johnson
        type: string
      last_replied_at:
        description: Last datetime this person replied to an email
        example: 2018-02-01T15:02:39.476192-05:00
        format: date
        type: string
      linkedin_url:
        description: Linkedin URL
        example: https://www.linkedin.com/in/username
        type: string
      locale:
        description: Time locale of the person
        example: US/Eastern
        type: string
      mobile_phone:
        description: Mobile phone without formatting
        example: +1 444 555 6666
        type: string
      owner:
        $ref: "#/definitions/EmbeddedResource"
        description: User that is marked as the owner of this person
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      owner_crm_id:
        description: Mapped owner field from the CRM, currently Salesforce.com only
        example: 003i000001mnhpD
        type: string
      person_company_industry:
        description: Company industry. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
        example: Information Technology
        type: string
      person_company_name:
        description: Company name. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
        example: SalesLoft
        type: string
      person_company_website:
        description: Company website. This property is specific to this person, unrelated to the company object. Updating the company object associated with this person is recommended
        example: https://salesloft.com
        type: string
      person_stage:
        $ref: "#/definitions/EmbeddedResource"
        description: Person stage that this person has set
        example:
          _href: https://api.salesloft.com/v2/person_stages/1
          id: 1
      personal_email_address:
        description: Personal email address
        example: pat.johnson@example.com
        type: string
      personal_website:
        description: The website of this person
        example: https://salesloft.com
        type: string
      phone:
        description: Phone without formatting
        example: +1 444 555 6666
        type: string
      phone_extension:
        description: Phone extension without formatting
        example: x123
        type: string
      secondary_email_address:
        description: Alternate email address
        example: pat.johnson@example.com
        type: string
      state:
        description: State
        example: Georgia
        type: string
      tags:
        description: All tags applied to this person
        example:
          - 7-23-2017
          - dreamforce
        items:
          type: string
        type: array
      title:
        description: Job title
        example: Sales Development Representative
        type: string
      twitter_handle:
        description: The twitter handle of this person
        example: "@kyleporter"
        type: string
      updated_at:
        description: Datetime of when the person was last updated
        example: 2018-02-01T15:02:39.476136-05:00
        format: date
        type: string
      work_city:
        description: Work location - city
        example: Atlanta
        type: string
      work_country:
        description: Work location - country
        example: United States
        type: string
      work_state:
        description: Work location - state
        example: Georgia
        type: string
  PersonCounts:
    properties:
      calls:
        description: The number of calls logged to this person
        example: 4
        type: integer
      emails_bounced:
        description: The number of unique emails sent to this person that bounced
        example: 0
        type: integer
      emails_clicked:
        description: The number of unique emails clicked by this person
        example: 1
        type: integer
      emails_replied_to:
        description: The number of unique emails replied to by this person
        example: 0
        type: integer
      emails_sent:
        description: The number of emails sent to this person
        example: 3
        type: integer
      emails_viewed:
        description: The number of unique emails viewed by this person
        example: 2
        type: integer
  PersonStage:
    properties:
      created_at:
        description: Datetime of when the Person Stage was created
        example: 2018-02-01T15:02:39.490199-05:00
        format: date
        type: string
      id:
        description: ID of Person Stage
        example: 1
        type: integer
      name:
        description: Name of Person Stage
        example: Entry Stage
        type: string
      updated_at:
        description: Datetime of when the Person Stage was last updated
        example: 2018-02-01T15:02:39.490254-05:00
        format: date
        type: string
  RecordingSetting:
    properties:
      recording_default:
        description: Whether this phone number should record by default
        example: true
        type: boolean
  Step:
    properties:
      cadence:
        $ref: "#/definitions/EmbeddedResource"
        description: The cadence of the step
        example:
          _href: https://api.salesloft.com/v2/cadences/1
          id: 1
      created_at:
        description: Datetime of when the Step was created
        example: 2018-02-01T15:02:39.565505-05:00
        format: date
        type: string
      day:
        description: Day this step is associated with up
        example: 1
        type: integer
      details:
        $ref: "#/definitions/EmbeddedResource"
        description: Details pertaining to the specific step type
        example:
          _href: https://api.salesloft.com/v2/action_details/call_instructions/1
          id: 1
      disabled:
        description: Whether this step is currently active
        example: true
        type: boolean
      display_name:
        description: Display name of the step
        example: "Day 1: Step 2 - Phone"
        type: string
      id:
        description: ID of Step
        example: 1
        type: integer
      step_number:
        description: The number of the step for this day
        example: 1
        type: integer
      type:
        description: |
          The type of the action scheduled by this step. Valid types are: email, phone, other. New types may be added in the future.
        example: phone
        type: string
      updated_at:
        description: Datetime of when the Step was last updated
        example: 2018-02-01T15:02:39.565572-05:00
        format: date
        type: string
  Success:
    properties:
      counts:
        $ref: "#/definitions/SuccessCounts"
        description: Various counts for this success
        example:
          total_calls: 5
          total_emails: 2
          total_other_touches: 3
      created_at:
        description: Datetime of when the success was created
        example: 2018-02-01T15:02:39.500168-05:00
        format: date
        type: string
      id:
        description: ID of success
        example: 1
        type: integer
      latest_action:
        $ref: "#/definitions/EmbeddedResource"
        description: The action that was most recently completed on this person before the success
        example:
          id: 3
      latest_call:
        $ref: "#/definitions/EmbeddedResource"
        description: The call that was most recently made to this person before the success
        example:
          _href: https://api.salesloft.com/v2/activities/calls/2
          id: 2
      latest_email:
        $ref: "#/definitions/EmbeddedResource"
        description: The email that was most recently sent to this person before the success
        example:
          _href: https://api.salesloft.com/v2/activities/emails/1
          id: 1
      person:
        $ref: "#/definitions/EmbeddedResource"
        description: The person who a success occurred on
        example:
          _href: https://api.salesloft.com/v2/people/1
          id: 1
      succeeded_at:
        description: Datetime of when the success was recorded
        example: 2018-02-01T15:02:39.500274-05:00
        format: date
        type: string
      success_window_started_at:
        description: Datetime of when this person was first worked, leading up to the success
        example: 2018-02-01T15:02:39.500302-05:00
        format: date
        type: string
      updated_at:
        description: Datetime of when the success was last updated
        example: 2018-02-01T15:02:39.500224-05:00
        format: date
        type: string
      user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that created this success
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
  SuccessCounts:
    properties:
      total_calls:
        description: The total number of calls made in this success window
        example: 5
        type: integer
      total_emails:
        description: The total number of emails made in this success window
        example: 2
        type: integer
      total_other_touches:
        description: The total number of other touches made in this success window
        example: 3
        type: integer
  Team:
    properties:
      allow_automated_email_steps:
        description: Whether team members are allowed to have automated email steps
        example: true
        type: boolean
      call_recording_disabled:
        description: Whether all call recording is disabled
        example: false
        type: boolean
      click_tracking_default:
        description: The team default for click tracking when composing emails
        example: true
        type: boolean
      created_at:
        description: Datetime of when the team was created
        example: 2018-02-01T15:02:39.506235-05:00
        format: date
        type: string
      custom_tracking_domain:
        description: The domain click and open tracking will be proxied through
        example: examplecompany.com
        type: string
      dispositions_required:
        description: Whether team members are required to mark disposition at the end of calls
        example: false
        type: boolean
      email_daily_limit:
        description: Daily email limit for each member on the team
        example: 1000
        type: integer
      group_privacy_setting:
        description: |
          Visibility setting for resources across the team. Possible values are: group_public, all_public.
          When the value is group_public, certain resources will only be visible to members of the same group.
          When the value is all_public, all resources are visible to all users on this team.
        example: all_public
        type: string
      id:
        description: Team ID
        example: 1
        type: integer
      license_limit:
        description: Count of seats that this team has licensed
        example: 100
        type: integer
      local_dial_enabled:
        description: Whether this team has local dial enabled
        example: true
        type: boolean
      name:
        description: Team name
        example: The A-Team
        type: string
      plan:
        description: "Plan type of the team, Possible values are: group, professional, enterprise"
        example: professional
        type: string
      record_by_default:
        description: Whether calls will record by default
        example: true
        type: boolean
      sentiments_required:
        description: Whether team members are required to log sentiments
        example: false
        type: boolean
      team_visibility_default:
        description: |
          The default visibility of resources on the team, in the UI only. The API does not utilize this default.
          Possible values are: public, private.
        example: public
        type: string
      updated_at:
        description: Datetime of when the team was last updated
        example: 2018-02-01T15:02:39.506288-05:00
        format: date
        type: string
  TeamTemplate:
    properties:
      archived_at:
        description: Datetime of when the team template was archived, if archived
        example: 2018-02-01T15:02:39.511488-05:00
        format: date
        type: string
      body:
        description: Body of the team template
        example: <div>Do you know about birds?</div><div>You can find them here: <a href="https://www.allaboutbirds.org/guide/search/" target="_blank">https://www.allaboutbirds.org/guide/search/</a></div>
        type: string
      click_tracking_enabled:
        description: Whether click tracking is enabled for this team template
        example: true
        type: boolean
      counts:
        $ref: "#/definitions/TeamTemplateCounts"
        description: Various counts for this team template. Counts will update over time but will not affect the 'updated at' field for the team template.
        example:
          bounces: 10
          clicks: 20
          replies: 1
          sent_emails: 59
          views: 3
      created_at:
        description: Datetime of when the team template was created
        example: 2018-02-01T15:02:39.511362-05:00
        format: date
        type: string
      id:
        description: ID of team template
        example: 51226150-3108-4dea-883b-0c0d7388f456
        type: string
      last_modified_at:
        description: Datetime of when the team template was last modified
        example: 2018-02-01T15:02:39.511548-05:00
        format: date
        type: string
      last_modified_user:
        $ref: "#/definitions/EmbeddedResource"
        description: User that last modified this team template
        example:
          _href: https://api.salesloft.com/v2/users/1
          id: 1
      last_used_at:
        description: Datetime of when the team template was last used
        example: 2018-02-01T15:02:39.511464-05:00
        format: date
        type: string
      open_tracking_enabled:
        description: Whether open tracking is enabled for this team template
        example: true
        type: boolean
      subject:
        description: Subject of the team template
        example: It’s time to say goodbye
        type: string
      title:
        description: Title of the team template
        example: VP Breakup Email
        type: string
      updated_at:
        description: Datetime of when the team template was last updated
        example: 2018-02-01T15:02:39.511438-05:00
        format: date
        type: string
  TeamTemplateCounts:
    properties:
      bounces:
        description: The number of bounces the team template received
        example: 10
        type: integer
      clicks:
        description: The number of times links in the team template were clicked
        example: 20
        type: integer
      replies:
        description: The number of replies the team template received
        example: 1
        type: integer
      sent_emails:
        description: The number of times the team template was sent out
        example: 59
        type: integer
      views:
        description: The number of times the team template was opened
        example: 3
        type: integer
  User:
    properties:
      active:
        description: Whether an user is currently active in SalesLoft
        example: true
        type: boolean
      bcc_email_address:
        description: Address that will be BBC'd on all emails from this user
        example: fake@salesloft.com
        type: string
      click_to_call_enabled:
        description: Whether this user has click to call enabled
        example: true
        type: boolean
      created_at:
        description: Datetime of when the user was created
        example: 2018-02-01T15:02:39.460736-05:00
        format: date
        type: string
      crm_connected:
        description: Whether the user has a crm connected
        example: true
        type: boolean
      email:
        description: Email address provided to accounts.salesloft.com
        example: fake@salesloft.com
        type: string
      email_client_configured:
        description: Whether this user has a email client configured
        example: true
        type: boolean
      email_client_email_address:
        description: Email address associated with the email client of the user
        example: fake@salesloft.com
        type: string
      email_signature:
        description: Email signature
        example: Benjamin Franklin<div></div><div></div>
        type: string
      email_signature_click_tracking_disabled:
        description: Whether this user has click tracking disabled in email signature
        example: false
        type: boolean
      email_signature_type:
        description: Email signature type
        example: html
        type: string
      first_name:
        description: First name of user
        example: Benjamin
        type: string
      from_address:
        description: The from address of this user
        example: fake@salesloft.com
        type: string
      full_email_address:
        description: RFC 5322 compliant email address
        example: '"Benjamin Franklin" <Benjamin@salesloft.com>'
        type: string
      group:
        $ref: "#/definitions/EmbeddedResource"
        description: Group of user
        example:
          id: 1
      id:
        description: User ID
        example: 1
        type: integer
      last_name:
        description: Last name of user
        example: Franklin
        type: string
      local_dial_enabled:
        description: Whether this user has Local Dial enabled
        example: true
        type: boolean
      name:
        description: Display name of user
        example: Benjamin Franklin
        type: string
      phone_client:
        $ref: "#/definitions/EmbeddedResource"
        description: Phone Client of user
        example:
          id: 1
      phone_number_assignment:
        $ref: "#/definitions/EmbeddedResource"
        description: Phone number assignment of user
        example:
          id: 1
      sending_email_address:
        description: "The email address that email of the user will be sent from, resolved in the following resolution order: from_user, email_client_email_address, email"
        example: fake@salesloft.com
        type: string
      slack_username:
        description: Slack username
        example: benjamin-franklin
        type: string
      team:
        $ref: "#/definitions/EmbeddedResource"
        description: Team of user
        example:
          _href: https://api.salesloft.com/v2/team
          id: 1
      team_admin:
        description: Team Admin
        example: true
        type: boolean
      time_zone:
        description: User Time Zone
        example: US/Eastern
        type: string
      twitter_handle:
        description: Twitter handle
        example: "@benjamin-franklin"
        type: string
      updated_at:
        description: Datetime of when the user was last updated
        example: 2018-02-01T15:02:39.460810-05:00
        format: date
        type: string
