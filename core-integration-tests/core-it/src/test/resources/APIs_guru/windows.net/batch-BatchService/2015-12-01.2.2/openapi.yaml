openapi: 3.0.0
servers:
  - url: https://batch.core.windows.net
info:
  description: A client for issuing REST requests to the Azure Batch service.
  title: BatchService
  version: 2015-12-01.2.2
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-ms-code-generation-settings:
    name: BatchServiceClient
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/batch/data-plane/Microsoft.Batch/stable/2015-12-01.2.2/BatchService.json
      version: "3.0"
  x-preferred: false
  x-providerName: windows.net
  x-serviceName: batch-BatchService
paths:
  /applications:
    get:
      description: Lists all of the applications available in the specified account.
      operationId: Application_List
      parameters:
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Applications
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/applications/{applicationId}":
    get:
      description: Gets information about the specified application.
      operationId: Application_Get
      parameters:
        - description: The id of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSummary"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Applications
      x-ms-request-id: request-id
  /certificates:
    get:
      description: Lists all of the certificates that have been added to the specified account.
      operationId: Certificate_List
      parameters:
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateListResult"
          description: Gets the list of certificates.
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Certificates
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: Adds a certificate to the specified account.
      operationId: Certificate_Add
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/CertificateAddParameter"
        description: Specifies the certificate to be added.
        required: true
      responses:
        "201":
          description: Initial response
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Certificates
      x-ms-request-id: request-id
  "/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})":
    delete:
      description: Deletes a certificate from the specified account.
      operationId: Certificate_Delete
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the certificate to be deleted.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Certificates
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified certificate.
      operationId: Certificate_Get
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the certificate to get.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Certificates
      x-ms-request-id: request-id
  "/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete":
    post:
      description: Cancels a failed deletion of a certificate from the specified account.
      operationId: Certificate_CancelDeletion
      parameters:
        - description: The algorithm used to derive the thumbprint parameter. This must be sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the certificate being deleted.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "204":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Certificates
      x-ms-request-id: request-id
  /jobs:
    get:
      description: Lists all of the jobs in the specified account.
      operationId: Job_List
      parameters:
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJobListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: Adds a job to the specified account.
      operationId: Job_Add
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobAddParameter"
        description: Specifies the job to be added.
        required: true
      responses:
        "201":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  "/jobs/{jobId}":
    delete:
      description: Deletes a job.
      operationId: Job_Delete
      parameters:
        - description: The id of the job to delete.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified job.
      operationId: Job_Get
      parameters:
        - description: The id of the job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJob"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
    patch:
      description: Updates the properties of a job.
      operationId: Job_Patch
      parameters:
        - description: The id of the job whose properties you want to update.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobPatchParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
    put:
      description: Updates the properties of a job.
      operationId: Job_Update
      parameters:
        - description: The id of the job whose properties you want to update.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobUpdateParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  "/jobs/{jobId}/disable":
    post:
      description: Disables the specified job, preventing new tasks from running.
      operationId: Job_Disable
      parameters:
        - description: The id of the job to disable.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobDisableParameter"
        description: The parameters for the request.
        required: true
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  "/jobs/{jobId}/enable":
    post:
      description: Enables the specified job, allowing new tasks to run.
      operationId: Job_Enable
      parameters:
        - description: The id of the job to enable.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  "/jobs/{jobId}/jobpreparationandreleasetaskstatus":
    get:
      description: Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
      operationId: Job_ListPreparationAndReleaseTaskStatus
      parameters:
        - description: The id of the job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJobListPreparationAndReleaseTaskStatusResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks":
    get:
      description: Lists all of the tasks that are associated with the specified job.
      operationId: Task_List
      parameters:
        - description: The id of the job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudTaskListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: Adds a task to the specified job.
      operationId: Task_Add
      parameters:
        - description: The id of the job to which the task is to be added.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/TaskAddParameter"
        description: Specifies the task to be added.
        required: true
      responses:
        "201":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks/{taskId}":
    delete:
      description: Deletes a task from the specified job.
      operationId: Task_Delete
      parameters:
        - description: The id of the job from which to delete the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task to delete.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified task.
      operationId: Task_Get
      parameters:
        - description: The id of the job that contains the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task to get information about.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudTask"
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
    put:
      description: Updates the properties of the specified task.
      operationId: Task_Update
      parameters:
        - description: The id of the job containing the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task to update.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/TaskUpdateParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks/{taskId}/files":
    get:
      description: Lists the files in a task's directory on its compute node.
      operationId: File_ListFromTask
      parameters:
        - description: The id of the job that contains the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task whose files you want to list.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets whether to list children of a directory.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeFileListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks/{taskId}/files/{fileName}":
    delete:
      description: Deletes the specified task file from the compute node where the task ran.
      operationId: File_DeleteFromTask
      parameters:
        - description: The id of the job that contains the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task whose file you want to delete.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the task file that you want to delete.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
    get:
      description: Gets the content of the specified task file.
      operationId: File_GetFromTask
      parameters:
        - description: The id of the job that contains the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task whose file you want to retrieve.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the task file that you want to get the content of.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies the byte range to be retrieved. The default is to retrieve the entire file.  The format is startRange-endRange.
          in: header
          name: ocp-range
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
          headers:
            Content-Length:
              description: Gets the length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: Gets the content type of the file.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            ocp-batch-file-isdirectory:
              description: Gets whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-url:
              description: Gets the URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: Gets the file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
    head:
      description: Gets the properties of the specified task file.
      operationId: File_GetNodeFilePropertiesFromTask
      parameters:
        - description: The id of the job that contains the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task whose file you want to get the properties of.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the task file that you want to get the properties of.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Found the file
          headers:
            Content-Length:
              description: Gets the length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: Gets the content type of the file.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            ocp-batch-file-isdirectory:
              description: Gets whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-url:
              description: Gets the URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: Gets the file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks/{taskId}/subtasksinfo":
    get:
      description: Lists all of the subtasks that are associated with the specified multi-instance task.
      operationId: Task_ListSubtasks
      parameters:
        - description: The id of the job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudTaskListSubtasksResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
  "/jobs/{jobId}/tasks/{taskId}/terminate":
    post:
      description: Terminates the specified task.
      operationId: Task_Terminate
      parameters:
        - description: The id of the job containing the task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The id of the task to terminate.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "204":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Tasks
      x-ms-request-id: request-id
  "/jobs/{jobId}/terminate":
    post:
      description: Terminates the specified job, marking it as completed.
      operationId: Job_Terminate
      parameters:
        - description: The id of the job to terminate.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobTerminateParameter"
        description: The parameters for the request.
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  /jobschedules:
    get:
      description: Lists all of the job schedules in the specified account.
      operationId: JobSchedule_List
      parameters:
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJobScheduleListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: Adds a job schedule to the specified account.
      operationId: JobSchedule_Add
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobScheduleAddParameter"
        description: Specifies the job schedule to be added.
        required: true
      responses:
        "201":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
  "/jobschedules/{jobScheduleId}":
    delete:
      description: Deletes a job schedule from the specified account.
      operationId: JobSchedule_Delete
      parameters:
        - description: The id of the job schedule to delete.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified job schedule.
      operationId: JobSchedule_Get
      parameters:
        - description: The id of the job schedule to get.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJobSchedule"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
    head:
      description: Checks the specified job schedule exists.
      operationId: JobSchedule_Exists
      parameters:
        - description: The id of the job schedule which you want to check.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Found the jobschedule.
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        "404":
          description: JobSchedules not found
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
    patch:
      description: Updates the properties of the specified job schedule.
      operationId: JobSchedule_Patch
      parameters:
        - description: The id of the job schedule to update.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobSchedulePatchParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
    put:
      description: Updates the properties of the specified job schedule.
      operationId: JobSchedule_Update
      parameters:
        - description: The id of the job schedule to update.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/JobScheduleUpdateParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
  "/jobschedules/{jobScheduleId}/disable":
    post:
      description: Disables a job schedule.
      operationId: JobSchedule_Disable
      parameters:
        - description: The id of the job schedule to disable.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "204":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
  "/jobschedules/{jobScheduleId}/enable":
    post:
      description: Enables a job schedule.
      operationId: JobSchedule_Enable
      parameters:
        - description: The id of the job schedule to enable.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "204":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
  "/jobschedules/{jobScheduleId}/jobs":
    get:
      description: Lists the jobs that have been created under the specified job schedule.
      operationId: Job_ListFromJobSchedule
      parameters:
        - description: The id of the job schedule from which you want to get a list of jobs.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudJobListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/jobschedules/{jobScheduleId}/terminate":
    post:
      description: Terminates a job schedule.
      operationId: JobSchedule_Terminate
      parameters:
        - description: The id of the job schedule to terminates.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - JobSchedules
      x-ms-request-id: request-id
  /lifetimejobstats:
    get:
      description: Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
      operationId: Job_GetAllJobsLifetimeStatistics
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobStatistics"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Jobs
      x-ms-request-id: request-id
  /lifetimepoolstats:
    get:
      description: Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
      operationId: Pool_GetAllPoolsLifetimeStatistics
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoolStatistics"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  /pools:
    get:
      description: Lists all of the pools in the specified account.
      operationId: Pool_List
      parameters:
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudPoolListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      description: Adds a pool to the specified account.
      operationId: Pool_Add
      parameters:
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolAddParameter"
        description: Specifies the pool to be added.
        required: true
      responses:
        "201":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}":
    delete:
      description: Deletes a pool from the specified account.
      operationId: Pool_Delete
      parameters:
        - description: The id of the pool to delete.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
    get:
      description: Gets information about the specified pool.
      operationId: Pool_Get
      parameters:
        - description: The id of the pool to get.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudPool"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
    head:
      description: Gets basic properties of a pool.
      operationId: Pool_Exists
      parameters:
        - description: The id of the pool to get.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        "404":
          description: Pool not found
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
    patch:
      description: Updates the properties of a pool.
      operationId: Pool_Patch
      parameters:
        - description: The id of the pool to update.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolPatchParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/disableautoscale":
    post:
      description: Disables automatic scaling for a pool.
      operationId: Pool_DisableAutoScale
      parameters:
        - description: The id of the pool on which to disable automatic scaling.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/enableautoscale":
    post:
      description: Enables automatic scaling for a pool.
      operationId: Pool_EnableAutoScale
      parameters:
        - description: The id of the pool on which to enable automatic scaling.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolEnableAutoScaleParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/evaluateautoscale":
    post:
      description: Gets the result of evaluating an automatic scaling formula on the pool.
      operationId: Pool_EvaluateAutoScale
      parameters:
        - description: The id of the pool on which to evaluate the automatic scaling formula.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolEvaluateAutoScaleParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoScaleRun"
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes":
    get:
      description: Lists the compute nodes in the specified pool.
      operationId: ComputeNode_List
      parameters:
        - description: The id of the pool from which you want to list nodes.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputeNodeListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}":
    get:
      description: Gets information about the specified compute node.
      operationId: ComputeNode_Get
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that you want to get information about.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets an OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputeNode"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/disablescheduling":
    post:
      description: Disable task scheduling of the specified compute node.
      operationId: ComputeNode_DisableScheduling
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that you want to disable task scheduling.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/NodeDisableSchedulingParameter"
        description: The parameters for the request.
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/enablescheduling":
    post:
      description: Enable task scheduling of the specified compute node.
      operationId: ComputeNode_EnableScheduling
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that you want to enable task scheduling.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/files":
    get:
      description: Lists all of the files in task directories on the specified compute node.
      operationId: File_ListFromComputeNode
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node whose files you want to list.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets whether to list children of a directory.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeFileListResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/files/{fileName}":
    delete:
      description: Deletes the specified task file from the compute node.
      operationId: File_DeleteFromComputeNode
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node from which you want to delete the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The path to the file that you want to delete.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
    get:
      description: Gets the content of the specified task file.
      operationId: File_GetFromComputeNode
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that contains the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The path to the task file that you want to get the content of.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies the byte range to be retrieved. The default is to retrieve the entire file.  The format is startRange-endRange.
          in: header
          name: ocp-range
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
          headers:
            Content-Length:
              description: Gets the length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: Gets the content type of the file.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            ocp-batch-file-isdirectory:
              description: Gets whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-url:
              description: Gets the URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: Gets the file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
    head:
      description: Gets the properties of the specified compute node file.
      operationId: File_GetNodeFilePropertiesFromComputeNode
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that contains the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The path to the compute node file that you want to get the properties of.
          in: path
          name: fileName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Found the file
          headers:
            Content-Length:
              description: Gets the length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: Gets the content type of the file.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            ocp-batch-file-isdirectory:
              description: Gets whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-url:
              description: Gets the URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: Gets the file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Files
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/rdp":
    get:
      description: Gets the Remote Desktop Protocol file for the specified compute node.
      operationId: ComputeNode_GetRemoteDesktop
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node for which you want to get the Remote Desktop Protocol file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/reboot":
    post:
      description: Restarts the specified compute node.
      operationId: ComputeNode_Reboot
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that you want to restart.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/NodeRebootParameter"
        description: The parameters for the request.
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/reimage":
    post:
      description: Reinstalls the operating system on the specified compute node.
      operationId: ComputeNode_Reimage
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the compute node that you want to restart.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/NodeReimageParameter"
        description: The parameters for the request.
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/users":
    post:
      description: Adds a user account to the specified compute node.
      operationId: ComputeNode_AddUser
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the machine on which you want to create a user account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/ComputeNodeUser"
        description: Specifies the user account to be created.
        required: true
      responses:
        "201":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/nodes/{nodeId}/users/{userName}":
    delete:
      description: Deletes a user account from the specified compute node.
      operationId: ComputeNode_DeleteUser
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the machine on which you want to delete a user account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The name of the user account to delete.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: ""
          headers:
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
    put:
      description: Updates the password or expiration time of a user account on the specified compute node.
      operationId: ComputeNode_UpdateUser
      parameters:
        - description: The id of the pool that contains the compute node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The id of the machine on which you want to update a user account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The name of the user account to update.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/NodeUpdateUserParameter"
        description: The parameters for the request.
        required: true
      responses:
        "200":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/removenodes":
    post:
      description: Removes compute nodes from the specified pool.
      operationId: Pool_RemoveNodes
      parameters:
        - description: The id of the pool from which you want to remove nodes.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/NodeRemoveParameter"
        description: The parameters for the request.
        required: true
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - ComputeNodes
      x-ms-request-id: request-id
  "/pools/{poolId}/resize":
    post:
      description: Changes the number of compute nodes that are assigned to a pool.
      operationId: Pool_Resize
      parameters:
        - description: The id of the pool to resize.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolResizeParameter"
        description: The parameters for the request.
        required: true
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/stopresize":
    post:
      description: "Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state."
      operationId: Pool_StopResize
      parameters:
        - description: The id of the pool whose resizing you want to stop.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/updateproperties":
    post:
      description: Updates the properties of a pool.
      operationId: Pool_UpdateProperties
      parameters:
        - description: The id of the pool to update.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolUpdatePropertiesParameter"
        description: The parameters for the request.
        required: true
      responses:
        "204":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  "/pools/{poolId}/upgradeos":
    post:
      description: Upgrades the operating system of the specified pool.
      operationId: Pool_UpgradeOS
      parameters:
        - description: The id of the pool to upgrade.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has been modified since the specified date/time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: "#/components/schemas/PoolUpgradeOSParameter"
        description: The parameters for the request.
        required: true
      responses:
        "202":
          description: ""
          headers:
            DataServiceId:
              description: Gets the OData id of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-request-id: request-id
  /poolusagemetrics:
    get:
      description: Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.
      operationId: Pool_ListPoolUsageMetrics
      parameters:
        - description: The earliest time from which to include metrics. This must be at least two and a half hours before the current time.
          in: query
          name: starttime
          required: false
          schema:
            format: date-time
            type: string
          x-ms-client-name: startTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: The latest time from which to include metrics. This must be at least two hours before the current time.
          in: query
          name: endtime
          required: false
          schema:
            format: date-time
            type: string
          x-ms-client-name: endTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets an OData $filter clause.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            format: int32
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: Specifies if the server should return the client-request-id identifier in the response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoolListPoolUsageMetricsResult"
          description: ""
          headers:
            ETag:
              description: Gets the content of the ETag HTTP response header.
              schema:
                type: string
            Last-Modified:
              description: Gets the content of the Last-Modified HTTP response header.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: Gets the ClientRequestId provided by the client during the request, if present and requested to be returned.
              schema:
                type: string
            request-id:
              description: Gets the value that uniquely identifies a request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
          description: Error from the Batch service
      tags:
        - Pools
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
components:
  parameters:
    ApiVersionParameter:
      description: Client API Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
  schemas:
    AffinityInformation:
      description: A locality hint that can be used by the Batch service to select a compute node on which to start a task.
      properties:
        affinityId:
          description: Gets or sets an opaque string representing the location of a compute node or a task that has run previously.  You can pass the AffinityId of a compute node or task to indicate that this task needs to be placed close to the node or task.
          type: string
    ApplicationListResult:
      description: Response to a ApplicationOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of applications available in the account.
          items:
            $ref: "#/components/schemas/ApplicationSummary"
          type: array
    ApplicationPackageReference:
      description: A reference to an application package to be installed on compute nodes in a pool.
      properties:
        applicationId:
          description: Gets or sets the application package id.
          type: string
        version:
          description: Gets or sets the application package version. If not specified, the default is used.
          type: string
      required:
        - applicationId
    ApplicationSummary:
      description: Contains information about an application in an Azure Batch account.
      properties:
        displayName:
          description: Gets or sets the display name for the application.
          type: string
        id:
          description: Gets or sets a string that uniquely identifies the application within the account.
          type: string
        versions:
          items:
            type: string
          type: array
      required:
        - id
        - displayName
        - versions
    AutoPoolSpecification:
      description: Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the tasks for the job on it, and will delete the pool once the job has completed.
      properties:
        autoPoolIdPrefix:
          description: Gets or sets a prefix to be added to the unique identifier when a pool is automatically created. The prefix can be up to 20 characters long.
          type: string
        keepAlive:
          description: Gets or sets whether to keep an auto pool alive after its lifetime expires.
          type: boolean
        pool:
          $ref: "#/components/schemas/PoolSpecification"
        poolLifetimeOption:
          description: Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
          enum:
            - jobschedule
            - job
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: PoolLifetimeOption
      required:
        - poolLifetimeOption
    AutoScaleRun:
      description: The results and errors from an execution of a pool autoscale formula.
      properties:
        error:
          $ref: "#/components/schemas/AutoScaleRunError"
        results:
          description: Gets or sets the final values of all variables used in the evaluation of the autoscale formula.  Each variable value is returned in the form $variable=value, and variables are separated by semicolons.
          type: string
        timestamp:
          description: Gets or sets the time at which the autoscale formula was last evaluated.
          format: date-time
          type: string
      required:
        - timestamp
    AutoScaleRunError:
      description: An error that occurred when executing or evaluating a pool autoscale formula.
      properties:
        code:
          description: Gets or sets an identifier for the autoscale error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          description: Gets or sets a message describing the autoscale error, intended to be suitable for display in a user interface.
          type: string
        values:
          description: Gets or sets a list of additional error details related to the autoscale error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
    BatchError:
      description: An error response received from the Azure Batch service.
      properties:
        code:
          description: Gets or sets an identifier for the error. Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          $ref: "#/components/schemas/ErrorMessage"
        values:
          description: Gets or sets a collection of key-value pairs containing additional details about the error.
          items:
            $ref: "#/components/schemas/BatchErrorDetail"
          type: array
    BatchErrorDetail:
      description: An item of additional information included in an Azure Batch error response.
      properties:
        key:
          description: Gets or sets an identifier specifying the meaning of the Value property.
          type: string
        value:
          description: Gets or sets the additional information included with the error response.
          type: string
    Certificate:
      description: A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
      properties:
        deleteCertificateError:
          $ref: "#/components/schemas/DeleteCertificateError"
        previousState:
          description: Gets or sets the previous state of the certificate. This property is not set if the certificate is in its initial Active state.
          enum:
            - active
            - deleting
            - deletefailed
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateState
        previousStateTransitionTime:
          description: Gets or sets the time at which the certificate entered its previous state.  This property is not set if the certificate is in its initial Active state.
          format: date-time
          type: string
        publicData:
          description: Gets or sets the public part of the certificate as a base-64 encoded .cer file.
          type: string
        state:
          description: Gets or sets the current state of the certificate.
          enum:
            - active
            - deleting
            - deletefailed
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateState
        stateTransitionTime:
          description: Gets or sets the time at which the certificate entered its current state.
          format: date-time
          type: string
        thumbprint:
          description: Get or sets the X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
          type: string
        thumbprintAlgorithm:
          description: Gets or sets the algorithm used to derive the thumbprint. This must be sha1.
          type: string
        url:
          description: Gets or sets the URL of the certificate.
          type: string
    CertificateAddParameter:
      description: A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
      properties:
        certificateFormat:
          description: Gets or sets the format of the certificate data. This must be pfx.
          enum:
            - pfx
            - cer
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateFormat
        data:
          description: Gets or sets the base64-encoded contents of the .pfx file containing the certificate. The maximum size is 10KB. This property is not populated by the Get Certificate operation.
          type: string
        password:
          description: Gets or sets the password to access the certificate's private key. This property is not populated by the Get Certificate operation.
          type: string
        thumbprint:
          description: Get or sets the X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
          type: string
        thumbprintAlgorithm:
          description: Gets or sets the algorithm used to derive the thumbprint. This must be sha1.
          type: string
      required:
        - thumbprint
        - thumbprintAlgorithm
        - data
    CertificateListResult:
      description: Response to a CertificateOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of certificates.
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
    CertificateReference:
      description: A reference to a certificate to be installed on compute nodes in a pool.
      properties:
        storeLocation:
          description: Gets or sets the location of the certificate store on the compute node into which to install the certificate. The default value is CurrentUser.
          enum:
            - currentuser
            - localmachine
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateStoreLocation
        storeName:
          description: Gets or sets the name of the certificate store on the compute node into which to install the certificate. The default value is My.
          type: string
        thumbprint:
          description: Gets or sets the thumbprint of the certificate.
          type: string
        thumbprintAlgorithm:
          description: Gets or sets the algorithm with which the thumbprint is associated.  This must be sha1.
          type: string
        visibility:
          description: Gets or sets which user accounts on the compute node should have access to the private data of the certificate. This may be any subset of the values 'starttask', 'task' and 'rdp', separated by commas. The default is all accounts, corresponding to the string 'starttask,task,rdp'.
          type: string
      required:
        - thumbprint
        - thumbprintAlgorithm
    CloudJob:
      description: An Azure Batch job.
      properties:
        commonEnvironmentSettings:
          description: Gets or sets the list of common environment variable settings.  These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        constraints:
          $ref: "#/components/schemas/JobConstraints"
        creationTime:
          description: Gets or sets the creation time of the job.
          format: date-time
          type: string
        displayName:
          description: Gets or sets the display name for the job.
          type: string
        eTag:
          description: Gets or sets the ETag of the job.
          type: string
        executionInfo:
          $ref: "#/components/schemas/JobExecutionInformation"
        id:
          description: Gets or sets a string that uniquely identifies the job within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
          type: string
        jobManagerTask:
          $ref: "#/components/schemas/JobManagerTask"
        jobPreparationTask:
          $ref: "#/components/schemas/JobPreparationTask"
        jobReleaseTask:
          $ref: "#/components/schemas/JobReleaseTask"
        lastModified:
          description: Gets or sets the last modified time of the job.
          format: date-time
          type: string
        metadata:
          description: Gets or sets a list of name-value pairs associated with the job as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        poolInfo:
          $ref: "#/components/schemas/PoolInformation"
        previousState:
          description: Gets or sets the previous state of the job. This property is not set if the job is in its initial Active state.
          enum:
            - active
            - disabling
            - disabled
            - enabling
            - terminating
            - completed
            - deleting
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobState
        previousStateTransitionTime:
          description: Gets or sets the time at which the job entered its previous state. This property is not set if the job is in its initial Active state.
          format: date-time
          type: string
        priority:
          description: Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
          format: int32
          type: integer
        state:
          description: Gets or sets the current state of the job.
          enum:
            - active
            - disabling
            - disabled
            - enabling
            - terminating
            - completed
            - deleting
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobState
        stateTransitionTime:
          description: Gets or sets the time at which the job entered its current state.
          format: date-time
          type: string
        stats:
          $ref: "#/components/schemas/JobStatistics"
        url:
          description: Gets or sets the URL of the job.
          type: string
        usesTaskDependencies:
          description: Gets or sets the flag that determines if this job will use tasks with dependencies.
          type: boolean
    CloudJobListPreparationAndReleaseTaskStatusResult:
      description: Response to a CloudJobOperations.ListPreparationAndReleaseTaskStatus request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets a list of Job Preparation and Job Release task execution information.
          items:
            $ref: "#/components/schemas/JobPreparationAndReleaseTaskExecutionInformation"
          type: array
    CloudJobListResult:
      description: Response to a CloudJobOperations.List or ListFromJobSchedule request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of jobs.
          items:
            $ref: "#/components/schemas/CloudJob"
          type: array
    CloudJobSchedule:
      description: A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
      properties:
        creationTime:
          description: Gets or sets the creation time of the job schedule.
          format: date-time
          type: string
        displayName:
          description: Gets or sets the display name for the schedule.
          type: string
        eTag:
          description: Gets or sets the ETag of the job schedule.
          type: string
        executionInfo:
          $ref: "#/components/schemas/JobScheduleExecutionInformation"
        id:
          description: Gets or sets a string that uniquely identifies the schedule within the account. A GUID is recommended.
          type: string
        jobSpecification:
          $ref: "#/components/schemas/JobSpecification"
        lastModified:
          description: Gets or sets the last modified time of the job schedule.
          format: date-time
          type: string
        metadata:
          description: Gets or sets a list of name-value pairs associated with the schedule as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        previousState:
          description: Gets or sets the previous state of the job schedule.
          enum:
            - active
            - completed
            - disabled
            - terminating
            - deleting
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobScheduleState
        previousStateTransitionTime:
          description: Gets or sets the time at which the job schedule entered its previous state.
          format: date-time
          type: string
        schedule:
          $ref: "#/components/schemas/Schedule"
        state:
          description: Gets or sets the current state of the job schedule.
          enum:
            - active
            - completed
            - disabled
            - terminating
            - deleting
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobScheduleState
        stateTransitionTime:
          description: Gets or sets the time at which the job schedule entered the current state.
          format: date-time
          type: string
        stats:
          $ref: "#/components/schemas/JobScheduleStatistics"
        url:
          description: Gets or sets the URL of the job schedule.
          type: string
    CloudJobScheduleListResult:
      description: Response to a CloudJobScheduleOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of job schedules.
          items:
            $ref: "#/components/schemas/CloudJobSchedule"
          type: array
    CloudPool:
      description: A pool in the Azure Batch service.
      properties:
        allocationState:
          description: Gets or sets whether the pool is resizing.
          enum:
            - steady
            - resizing
            - stopping
          type: string
          x-ms-enum:
            modelAsString: false
            name: AllocationState
        allocationStateTransitionTime:
          description: Gets or sets the time at which the pool entered its current allocation state.
          format: date-time
          type: string
        applicationPackageReferences:
          description: Gets or sets the list of application packages to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/ApplicationPackageReference"
          type: array
        autoScaleEvaluationInterval:
          description: Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
          format: duration
          type: string
        autoScaleFormula:
          description: Gets or sets a formula for the desired number of compute nodes in the pool.
          type: string
        autoScaleRun:
          $ref: "#/components/schemas/AutoScaleRun"
        certificateReferences:
          description: Gets or sets the list of certificates to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        creationTime:
          description: Gets or sets the creation time of the pool.
          format: date-time
          type: string
        currentDedicated:
          description: Gets or sets the number of compute nodes currently in the pool.
          format: int32
          type: integer
        currentOSVersion:
          description: Gets or sets the Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from TargetOSVersion if the pool state is Upgrading.
          type: string
        displayName:
          description: Gets or sets the display name for the pool.
          type: string
        eTag:
          description: Gets or sets the ETag of the pool.
          type: string
        enableAutoScale:
          description: Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
          type: boolean
        enableInterNodeCommunication:
          description: Gets or sets whether the pool permits direct communication between nodes.
          type: boolean
        id:
          description: Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
          type: string
        lastModified:
          description: Gets or sets the last modified time of the pool.
          format: date-time
          type: string
        maxTasksPerNode:
          description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
          format: int32
          type: integer
        metadata:
          description: Gets or sets a list of name-value pairs associated with the pool as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        osFamily:
          description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
          type: string
        resizeError:
          $ref: "#/components/schemas/ResizeError"
        resizeTimeout:
          description: Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
          format: duration
          type: string
        startTask:
          $ref: "#/components/schemas/StartTask"
        state:
          description: Gets or sets the current state of the pool.
          enum:
            - active
            - deleting
            - upgrading
          type: string
          x-ms-enum:
            modelAsString: false
            name: PoolState
        stateTransitionTime:
          description: Gets or sets the time at which the pool entered its current state.
          format: date-time
          type: string
        stats:
          $ref: "#/components/schemas/PoolStatistics"
        targetDedicated:
          description: Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
          format: int32
          type: integer
        targetOSVersion:
          description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
          type: string
        taskSchedulingPolicy:
          $ref: "#/components/schemas/TaskSchedulingPolicy"
        url:
          description: Gets or sets the URL of the pool.
          type: string
        vmSize:
          description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
          type: string
    CloudPoolListResult:
      description: Response to a CloudPoolOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of pools.
          items:
            $ref: "#/components/schemas/CloudPool"
          type: array
    CloudTask:
      description: An Azure Batch task.
      properties:
        affinityInfo:
          $ref: "#/components/schemas/AffinityInformation"
        commandLine:
          description: Gets or sets the command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordination command line.
          type: string
        constraints:
          $ref: "#/components/schemas/TaskConstraints"
        creationTime:
          description: Gets or sets the creation time of the task.
          format: date-time
          type: string
        dependsOn:
          $ref: "#/components/schemas/TaskDependencies"
        displayName:
          description: Gets or sets a display name for the task.
          type: string
        eTag:
          description: Gets or sets the ETag of the task.
          type: string
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        executionInfo:
          $ref: "#/components/schemas/TaskExecutionInformation"
        id:
          description: Gets or sets a string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
          type: string
        lastModified:
          description: Gets or sets the last modified time of the task.
          format: date-time
          type: string
        multiInstanceSettings:
          $ref: "#/components/schemas/MultiInstanceSettings"
        nodeInfo:
          $ref: "#/components/schemas/ComputeNodeInformation"
        previousState:
          description: Gets or sets the previous state of the task. This property is not set if the task is in its initial Active state.
          enum:
            - active
            - preparing
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskState
        previousStateTransitionTime:
          description: Gets or sets the time at which the task entered its previous state. This property is not set if the task is in its initial Active state.
          format: date-time
          type: string
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        runElevated:
          description: Gets or sets whether to run the task in elevated mode.
          type: boolean
        state:
          description: Gets or sets the current state of the task.
          enum:
            - active
            - preparing
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskState
        stateTransitionTime:
          description: Gets or sets the time at which the task entered its current state.
          format: date-time
          type: string
        stats:
          $ref: "#/components/schemas/TaskStatistics"
        url:
          description: Gets or sets the URL of the task.
          type: string
    CloudTaskListResult:
      description: Response to a CloudTaskOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of tasks.
          items:
            $ref: "#/components/schemas/CloudTask"
          type: array
    CloudTaskListSubtasksResult:
      description: Response to a CloudTaskOperations.ListSubtasks request.
      properties:
        value:
          description: Gets or sets the list of information of subtasks.
          items:
            $ref: "#/components/schemas/SubtaskInformation"
          type: array
    ComputeNode:
      description: A compute node in the Batch service.
      properties:
        affinityId:
          description: Gets or sets an identifier which can be passed in the Add Task API to request that the task be scheduled close to this compute node.
          type: string
        allocationTime:
          description: Gets or sets the time at which this compute node was allocated to the pool.
          format: date-time
          type: string
        certificateReferences:
          description: Gets or sets the list of certificates installed on the compute node.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        errors:
          description: Gets or sets the list of errors that are currently being encountered by the compute node.
          items:
            $ref: "#/components/schemas/ComputeNodeError"
          type: array
        id:
          description: Gets or sets the id of the compute node.
          type: string
        ipAddress:
          description: Gets or sets the IP address that other compute nodes can use to communicate with this compute node.
          type: string
        lastBootTime:
          description: Gets or sets the time at which the compute node was started.
          format: date-time
          type: string
        recentTasks:
          description: Gets or sets the list of tasks that are currently running on the compute node.
          items:
            $ref: "#/components/schemas/TaskInformation"
          type: array
        schedulingState:
          description: Gets or sets whether the compute node should be available for task scheduling.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: SchedulingState
        startTask:
          $ref: "#/components/schemas/StartTask"
        startTaskInfo:
          $ref: "#/components/schemas/StartTaskInformation"
        state:
          description: Gets or sets the current state of the compute node.
          enum:
            - idle
            - rebooting
            - reimaging
            - running
            - unusable
            - creating
            - starting
            - waitingforstarttask
            - starttaskfailed
            - unknown
            - leavingpool
            - offline
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeState
        stateTransitionTime:
          description: Gets or sets the time at which the compute node entered its current state.
          format: date-time
          type: string
        totalTasksRun:
          description: Gets or sets the total number of job tasks completed on the compute node. This includes Job Preparation, Job Release and Job Manager tasks, but not the pool start task.
          format: int32
          type: integer
        url:
          description: Gets or sets the URL of the compute node.
          type: string
        vmSize:
          description: Gets or sets the size of the virtual machine hosting the compute node.
          type: string
    ComputeNodeError:
      description: An error encountered by a compute node.
      properties:
        code:
          description: Gets or sets an identifier for the compute node error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        errorDetails:
          description: Gets or sets the list of additional error details related to the compute node error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
        message:
          description: Gets or sets a message describing the compute node error, intended to be suitable for display in a user interface.
          type: string
    ComputeNodeInformation:
      description: Information about the compute node on which a task ran.
      properties:
        affinityId:
          description: Gets or sets an identifier for the compute node on which the task ran, which can be passed when adding a task to request that the task be scheduled close to this compute node.
          type: string
        nodeId:
          description: Gets or sets the id of the node on which the task ran.
          type: string
        nodeUrl:
          description: "Gets or sets the URL of the node on which the task ran. "
          type: string
        poolId:
          description: Gets or sets the id of the pool on which the task ran.
          type: string
        taskRootDirectory:
          description: Gets or sets the root directory of the task on the compute node.
          type: string
        taskRootDirectoryUrl:
          description: Gets or sets the URL to the root directory of the task on the compute node.
          type: string
    ComputeNodeListResult:
      description: Response to a ComputeNodeOperations.List request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of compute nodes.
          items:
            $ref: "#/components/schemas/ComputeNode"
          type: array
    ComputeNodeUser:
      description: An user account on a compute node.
      properties:
        expiryTime:
          description: Gets or sets the time at which the account should expire. If omitted, the default is 1 day from the current time.
          format: date-time
          type: string
        isAdmin:
          description: Gets or sets whether the account should be an administrator on the compute node.
          type: boolean
        name:
          description: Gets or sets the user name of the account.
          type: string
        password:
          description: Gets or sets the password of the account.
          type: string
      required:
        - name
        - password
    DeleteCertificateError:
      description: An error encountered by the Batch service when deleting a certificate.
      properties:
        code:
          description: Gets or sets an identifier for the certificate deletion error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          description: Gets or sets a message describing the certificate deletion error, intended to be suitable for display in a user interface.
          type: string
        values:
          description: Gets or sets a list of additional error details related to the certificate deletion error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
    EnvironmentSetting:
      description: An environment variable to be set on a task process.
      properties:
        name:
          description: Gets or sets the name of the environment variable.
          type: string
        value:
          description: Gets or sets the value of the environment variable.
          type: string
    ErrorMessage:
      description: An error message received in an Azure Batch error response.
      properties:
        lang:
          description: Gets or sets the language code of the error message
          type: string
        value:
          description: Gets or sets the text of the message.
          type: string
    FileProperties:
      description: The properties of a file on a compute node.
      properties:
        contentLength:
          description: Gets or sets the length of the file.
          format: int64
          type: integer
        contentType:
          description: Gets or sets the content type of the file.
          type: string
        creationTime:
          description: Gets or sets the file creation time.
          format: date-time
          type: string
        lastModified:
          description: Gets or sets the time at which the file was last modified.
          format: date-time
          type: string
      required:
        - lastModified
        - contentLength
    JobAddParameter:
      description: An Azure Batch job to add.
      properties:
        commonEnvironmentSettings:
          description: Gets or sets the list of common environment variable settings.  These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        constraints:
          $ref: "#/components/schemas/JobConstraints"
        displayName:
          description: Gets or sets the display name for the job.
          type: string
        id:
          description: Gets or sets a string that uniquely identifies the job within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.
          type: string
        jobManagerTask:
          $ref: "#/components/schemas/JobManagerTask"
        jobPreparationTask:
          $ref: "#/components/schemas/JobPreparationTask"
        jobReleaseTask:
          $ref: "#/components/schemas/JobReleaseTask"
        metadata:
          description: Gets or sets a list of name-value pairs associated with the job as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        poolInfo:
          $ref: "#/components/schemas/PoolInformation"
        priority:
          description: Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
          format: int32
          type: integer
        usesTaskDependencies:
          description: Gets or sets the flag that determines if this job will use tasks with dependencies.
          type: boolean
      required:
        - id
        - poolInfo
    JobConstraints:
      description: Specifies the execution constraints for jobs created on a schedule.
      properties:
        maxTaskRetryCount:
          description: Gets or sets the maximum number of times each task may be retried. The Batch service retries a task if its exit code is nonzero.
          format: int32
          type: integer
        maxWallClockTime:
          description: Gets or sets the maximum elapsed time that the job may run, measured from the time the job starts. If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running.
          format: duration
          type: string
    JobDisableParameter:
      description: Parameters for a CloudJobOperations.Disable request.
      properties:
        disableTasks:
          description: Sets what to do with active tasks associated with the job.
          enum:
            - requeue
            - terminate
            - wait
          type: string
          x-ms-enum:
            modelAsString: false
            name: DisableJobOption
      required:
        - disableTasks
    JobExecutionInformation:
      description: Contains information about the execution of a job in the Azure Batch service.
      properties:
        endTime:
          description: Gets or sets the completion time of the job. This property is set only if the job is in the completed state.
          format: date-time
          type: string
        poolId:
          description: Gets or sets the id of the pool to which this job is assigned.
          type: string
        schedulingError:
          $ref: "#/components/schemas/JobSchedulingError"
        startTime:
          description: Gets or sets the start time of the job.
          format: date-time
          type: string
        terminateReason:
          description: Gets or sets a string describing the reason the job ended.
          type: string
      required:
        - startTime
    JobManagerTask:
      description: Specifies details of a Job Manager task.
      properties:
        commandLine:
          description: Gets or sets the command line of the Job Manager task.
          type: string
        constraints:
          $ref: "#/components/schemas/TaskConstraints"
        displayName:
          description: Gets or sets the display name of the Job Manager task.
          type: string
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the Job Manager task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        id:
          description: Gets or sets a string that uniquely identifies the Job Manager task. A GUID is recommended.
          type: string
        killJobOnCompletion:
          description: Gets or sets whether completion of the Job Manager task signifies completion of the entire job.
          type: boolean
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        runElevated:
          description: Gets or sets whether to run the Job Manager task in elevated mode. The default value is false.
          type: boolean
        runExclusive:
          description: Gets or sets whether the Job Manager task requires exclusive use of the compute node where it runs.
          type: boolean
    JobPatchParameter:
      description: Parameters for a CloudJobOperations.Patch request.
      properties:
        constraints:
          $ref: "#/components/schemas/JobConstraints"
        metadata:
          description: Sets a list of name-value pairs associated with the job as metadata. If omitted, the existing job metadata is left unchanged.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        poolInfo:
          $ref: "#/components/schemas/PoolInformation"
        priority:
          description: Sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.
          format: int32
          type: integer
    JobPreparationAndReleaseTaskExecutionInformation:
      description: The status of the Job Preparation and Job Release tasks on a particular compute node.
      properties:
        jobPreparationTaskExecutionInfo:
          $ref: "#/components/schemas/JobPreparationTaskExecutionInformation"
        jobReleaseTaskExecutionInfo:
          $ref: "#/components/schemas/JobReleaseTaskExecutionInformation"
        nodeId:
          description: Gets or sets the id of the compute node to which this entry refers.
          type: string
        nodeUrl:
          description: Gets or sets the URL of the compute node to which this entry refers.
          type: string
        poolId:
          description: Gets or sets the id of the pool containing the compute node to which this entry refers.
          type: string
    JobPreparationTask:
      description: A Job Preparation task to run before any tasks of the job on any given compute node.
      properties:
        commandLine:
          description: Gets or sets the command line of the Job Preparation task.
          type: string
        constraints:
          $ref: "#/components/schemas/TaskConstraints"
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the Job Preparation task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        id:
          description: Gets or sets a string that uniquely identifies the job preparation task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
          type: string
        rerunOnNodeRebootAfterSuccess:
          description: Gets or sets whether the Batch service should rerun the Job Preparation task after a compute node reboots. The default value is true.
          type: boolean
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        runElevated:
          description: Gets or sets whether to run the Job Preparation task in elevated mode. The default value is false.
          type: boolean
        waitForSuccess:
          description: Gets or sets whether the Batch Service should wait for the Job Preparation task to complete successfully before scheduling any other tasks of the job on the compute node.
          type: boolean
    JobPreparationTaskExecutionInformation:
      description: Contains information about the execution of a Job Preparation task on a compute node.
      properties:
        endTime:
          description: Gets or sets the time at which the Job Preparation task completed. This property is set only if the task is in the Completed state.
          format: date-time
          type: string
        exitCode:
          description: Gets or sets the exit code of the Job Preparation task. This property is set only if the task is in the Completed state.
          format: int32
          type: integer
        lastRetryTime:
          description: Gets or sets the most recent time at which a retry of the Job Preparation task started running. This property is set only if the task was retried (i.e. retryCount is nonzero).
          format: date-time
          type: string
        retryCount:
          description: Gets or sets the number of times the Job Preparation task has been retried by the Batch service.
          format: int32
          type: integer
        schedulingError:
          $ref: "#/components/schemas/TaskSchedulingError"
        startTime:
          description: Gets or sets the time at which the Job Preparation task started running.
          format: date-time
          type: string
        state:
          description: Gets or sets the current running state of the Job Preparation task on the compute node.
          enum:
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobPreparationTaskState
        taskRootDirectory:
          description: Gets or sets the root directory of the Job Preparation task on the compute node.
          type: string
        taskRootDirectoryUrl:
          description: Gets or sets the URL to the root directory of the Job Preparation task on the compute node.
          type: string
      required:
        - startTime
        - retryCount
        - state
    JobReleaseTask:
      description: A Job Release task to run on job completion on any compute node where the job has run.
      properties:
        commandLine:
          description: Gets or sets the command line of the Job Release task.
          type: string
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the Job Release task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        id:
          description: Gets or sets a string that uniquely identifies the Job Release task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
          type: string
        maxWallClockTime:
          description: Gets or sets the maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.
          format: duration
          type: string
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        retentionTime:
          description: Gets or sets the minimum time to retain the working directory for the Job Release task on the compute node.  After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
          format: duration
          type: string
        runElevated:
          description: Gets or sets whether to run the Job Release task in elevated mode. The default value is false.
          type: boolean
    JobReleaseTaskExecutionInformation:
      description: Contains information about the execution of a Job Release task on a compute node.
      properties:
        endTime:
          description: Gets or sets the time at which the Job Release task completed. This property is set only if the task is in the Completed state.
          format: date-time
          type: string
        exitCode:
          description: Gets or sets the exit code of the Job Release task. This property is set only if the task is in the Completed state.
          format: int32
          type: integer
        schedulingError:
          $ref: "#/components/schemas/TaskSchedulingError"
        startTime:
          description: Gets or sets the time at which the Job Release task started running.
          format: date-time
          type: string
        state:
          description: Gets or sets the current running state of the Job Release task on the compute node.
          enum:
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobReleaseTaskState
        taskRootDirectory:
          description: Gets or sets the root directory of the Job Release task on the compute node.
          type: string
        taskRootDirectoryUrl:
          description: Gets or sets the URL to the root directory of the Job Release task on the compute node.
          type: string
      required:
        - startTime
        - state
    JobScheduleAddParameter:
      description: A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
      properties:
        displayName:
          description: Gets or sets the display name for the schedule.
          type: string
        id:
          description: Gets or sets a string that uniquely identifies the schedule within the account. A GUID is recommended.
          type: string
        jobSpecification:
          $ref: "#/components/schemas/JobSpecification"
        metadata:
          description: Gets or sets a list of name-value pairs associated with the schedule as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        schedule:
          $ref: "#/components/schemas/Schedule"
      required:
        - id
        - schedule
        - jobSpecification
    JobScheduleExecutionInformation:
      description: Specifies how tasks should be run in a job associated with a job schedule.
      properties:
        endTime:
          description: Gets or sets the time at which the schedule ended. This property is set only if the job schedule is in the completed state.
          format: date-time
          type: string
        nextRunTime:
          description: Gets or sets the next time at which a job will be created under this schedule.
          format: date-time
          type: string
        recentJob:
          $ref: "#/components/schemas/RecentJob"
    JobSchedulePatchParameter:
      description: Parameters for a CloudJobScheduleOperations.Patch request.
      properties:
        jobSpecification:
          $ref: "#/components/schemas/JobSpecification"
        metadata:
          description: Sets a list of name-value pairs associated with the job schedule as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        schedule:
          $ref: "#/components/schemas/Schedule"
    JobScheduleStatistics:
      description: The lifetime resource usage statistics for a job schedule.
      properties:
        kernelCPUTime:
          description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
          format: duration
          type: string
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
          format: date-time
          type: string
        numFailedTasks:
          description: Gets or sets the total number of tasks that failed during the given time range in jobs created under the schedule. A task fails if it exhausts its maximum retry count without returning exit code 0.
          format: int64
          type: integer
        numSucceededTasks:
          description: Gets or sets the total number of tasks successfully completed during the given time range in jobs created under the schedule.  A task completes successfully if it returns exit code 0.
          format: int64
          type: integer
        numTaskRetries:
          description: Gets or sets the total number of retries during the given time range on all the tasks in jobs created under the schedule.
          format: int64
          type: integer
        readIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O read by all the tasks in all the jobs created under the schedule.
          format: double
          type: number
        readIOps:
          description: Gets or sets the total number of I/O read operations performed by all the tasks in all the jobs created under the schedule.
          format: int64
          type: integer
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
        url:
          description: Gets or sets the URL for the statistics.
          type: string
        userCPUTime:
          description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
          format: duration
          type: string
        waitTime:
          description: Gets or sets the total wait time of all the tasks in jobs created under the schedule.
          format: duration
          type: string
        wallClockTime:
          description: Gets or sets the total wall clock time of all the tasks in all the jobs created under the schedule.
          format: duration
          type: string
        writeIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O written by all the tasks in all the jobs created under the schedule.
          format: double
          type: number
        writeIOps:
          description: Gets or sets the total number of I/O write operations performed by all the tasks in all the jobs created under the schedule.
          format: int64
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - numSucceededTasks
        - numFailedTasks
        - numTaskRetries
        - waitTime
    JobScheduleUpdateParameter:
      description: Parameters for a CloudJobScheduleOperations.Update request.
      properties:
        jobSpecification:
          $ref: "#/components/schemas/JobSpecification"
        metadata:
          description: Sets a list of name-value pairs associated with the job schedule as metadata. If you do not specify this element, it takes the default value of an empty list; in effect, any existing metadata is deleted.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        schedule:
          $ref: "#/components/schemas/Schedule"
      required:
        - schedule
        - jobSpecification
    JobSchedulingError:
      description: An error encountered by the Batch service when scheduling a job.
      properties:
        category:
          description: Gets or sets the category of the job scheduling error.
          enum:
            - usererror
            - servererror
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: SchedulingErrorCategory
        code:
          description: Gets or sets an identifier for the job scheduling error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        details:
          description: Gets or sets a list of additional error details related to the scheduling error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
        message:
          description: Gets or sets a message describing the job scheduling error, intended to be suitable for display in a user interface.
          type: string
      required:
        - category
    JobSpecification:
      description: Specifies details of the jobs to be created on a schedule.
      properties:
        commonEnvironmentSettings:
          description: Gets or sets a list of common environment variable settings.  These environment variables are set for all tasks in jobs created under this schedule (including the Job Manager, Job Preparation and Job Release tasks).
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        constraints:
          $ref: "#/components/schemas/JobConstraints"
        displayName:
          description: Gets or sets the display name for jobs created under this schedule. It need not be unique and can contain any Unicode characters up to a maximum length of 1024.
          type: string
        jobManagerTask:
          $ref: "#/components/schemas/JobManagerTask"
        jobPreparationTask:
          $ref: "#/components/schemas/JobPreparationTask"
        jobReleaseTask:
          $ref: "#/components/schemas/JobReleaseTask"
        metadata:
          description: Gets or sets a list of name-value pairs associated with each job created under this schedule as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        poolInfo:
          $ref: "#/components/schemas/PoolInformation"
        priority:
          description: Gets or sets the priority of jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
          format: int32
          type: integer
        usesTaskDependencies:
          description: Gets or sets the flag that determines if this job will use tasks with dependencies.
          type: boolean
    JobStatistics:
      description: Resource usage statistics for a job.
      properties:
        kernelCPUTime:
          description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in the job.
          format: duration
          type: string
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between StartTime and LastUpdateTime.
          format: date-time
          type: string
        numFailedTasks:
          description: Gets or sets the total number of tasks in the job that failed during the given time range.
          format: int64
          type: integer
        numSucceededTasks:
          description: Gets or sets the total number of tasks successfully completed in the job during the given time range.
          format: int64
          type: integer
        numTaskRetries:
          description: Gets or sets the total number of retries on all the tasks in the job during the given time range.
          format: int64
          type: integer
        readIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O read by all the tasks in the job.
          format: double
          type: number
        readIOps:
          description: Gets or sets the total number of I/O read operations performed by all the tasks in the job.
          format: int64
          type: integer
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
        url:
          description: Gets or sets the URL for the statistics.
          type: string
        userCPUTime:
          description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in the job.
          format: duration
          type: string
        waitTime:
          description: Gets or sets the total wait time of all the tasks in the job.  The wait time for a task is defined as the elapsed time between the creation of the task creation and the start of task execution.  This value is reported only in the account lifetime statistics; it is not included in individual job statistics.
          format: duration
          type: string
        wallClockTime:
          description: Gets or sets the total wall clock time of all the tasks in the job.
          format: duration
          type: string
        writeIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O written by all the tasks in the job.
          format: double
          type: number
        writeIOps:
          description: Gets or sets the total number of I/O write operations performed by all the tasks in the job.
          format: int64
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - numSucceededTasks
        - numFailedTasks
        - numTaskRetries
        - waitTime
    JobTerminateParameter:
      description: Parameters for a CloudJobOperations.Terminate request.
      properties:
        terminateReason:
          description: Sets the text you want to appear as the job's TerminateReason. The default is 'UserTerminate'.
          type: string
    JobUpdateParameter:
      description: Parameters for a CloudJobOperations.Update request.
      properties:
        constraints:
          $ref: "#/components/schemas/JobConstraints"
        metadata:
          description: Sets a list of name-value pairs associated with the job as metadata. If omitted, the existing job metadata is left unchanged.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        poolInfo:
          $ref: "#/components/schemas/PoolInformation"
        priority:
          description: Sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged.
          format: int32
          type: integer
      required:
        - poolInfo
    MetadataItem:
      description: A metadata item associated with an Azure Batch resource. The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
      properties:
        name:
          description: Gets or sets the name of the metadata item.
          type: string
        value:
          description: Gets or sets the value of the metadata item.
          type: string
    MultiInstanceSettings:
      description: Information about the settings required for multi-instance task.
      properties:
        commonResourceFiles:
          description: Gets or sets a list of files that Batch will download on all subtasks.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        coordinationCommandLine:
          description: Gets or sets the command to be run on the compute node instances to setup coordination among the subtasks.
          type: string
        numberOfInstances:
          description: Gets or sets the number of compute node instances used for multi-instance task.
          format: int32
          type: integer
      required:
        - numberOfInstances
    NameValuePair:
      description: Represents a name-value pair.
      properties:
        name:
          description: Gets or sets the name in the name-value pair.
          type: string
        value:
          description: Gets or sets the value in the name-value pair.
          type: string
    NodeDisableSchedulingParameter:
      description: Parameters for a ComputeNodeOperations.DisableScheduling request.
      properties:
        nodeDisableSchedulingOption:
          description: Gets or sets what to do with currently running tasks when disable task scheduling on the compute node. The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
          type: string
          x-ms-enum:
            modelAsString: false
            name: DisableComputeNodeSchedulingOption
    NodeFile:
      description: Information about a file or directory on a compute node.
      properties:
        isDirectory:
          description: Gets or sets whether the object represents a directory.
          type: boolean
        name:
          description: Gets or sets the file path.
          type: string
        properties:
          $ref: "#/components/schemas/FileProperties"
        url:
          description: Gets or sets the URL of the file.
          type: string
    NodeFileListResult:
      description: Response to a NodeFileOperations.ListFromComputeNode or NodeFileOperations.ListFromTask request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the list of files.
          items:
            $ref: "#/components/schemas/NodeFile"
          type: array
    NodeRebootParameter:
      description: Parameters for a ComputeNodeOperations.Reboot request.
      properties:
        nodeRebootOption:
          description: Sets when to reboot the compute node and what to do with currently running tasks. The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeRebootOption
    NodeReimageParameter:
      description: Parameters for a ComputeNodeOperations.Reimage request.
      properties:
        nodeReimageOption:
          description: Sets when to reimage the compute node and what to do with currently running tasks. The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeReimageOption
    NodeRemoveParameter:
      description: Parameters for a ComputeNodeOperations.Remove request.
      properties:
        nodeDeallocationOption:
          description: Sets when compute nodes may be removed from the pool.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeDeallocationOption
        nodeList:
          description: Sets a list containing the id of the compute nodes to be removed from the specified pool.
          items:
            type: string
          type: array
        resizeTimeout:
          description: Sets the timeout for removal of compute nodes to the pool. The default value is 10 minutes.
          format: duration
          type: string
      required:
        - nodeList
    NodeUpdateUserParameter:
      description: Parameters for a ComputeNodeOperations.UpdateUser request.
      properties:
        expiryTime:
          description: Sets the time at which the account should expire. If omitted, the default is 1 day from the current time.
          format: date-time
          type: string
        password:
          description: Sets the password of the account.
          type: string
      required:
        - password
    PoolAddParameter:
      description: A pool in the Azure Batch service to add.
      properties:
        applicationPackageReferences:
          description: Gets or sets the list of application packages to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/ApplicationPackageReference"
          type: array
        autoScaleEvaluationInterval:
          description: Gets or sets a time interval for the desired autoscale evaluation period in the pool.
          format: duration
          type: string
        autoScaleFormula:
          description: Gets or sets a formula for the desired number of compute nodes in the pool.
          type: string
        certificateReferences:
          description: Gets or sets the list of certificates to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        displayName:
          description: Gets or sets the display name for the pool.
          type: string
        enableAutoScale:
          description: Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
          type: boolean
        enableInterNodeCommunication:
          description: Gets or sets whether the pool permits direct communication between nodes.
          type: boolean
        id:
          description: Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
          type: string
        maxTasksPerNode:
          description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
          format: int32
          type: integer
        metadata:
          description: Gets or sets a list of name-value pairs associated with the pool as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        osFamily:
          description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
          type: string
        resizeTimeout:
          description: Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
          format: duration
          type: string
        startTask:
          $ref: "#/components/schemas/StartTask"
        targetDedicated:
          description: Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
          format: int32
          type: integer
        targetOSVersion:
          description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
          type: string
        taskSchedulingPolicy:
          $ref: "#/components/schemas/TaskSchedulingPolicy"
        vmSize:
          description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
          type: string
      required:
        - id
        - vmSize
        - osFamily
    PoolEnableAutoScaleParameter:
      description: Parameters for a CloudPoolOperations.EnableAutoScale request.
      properties:
        autoScaleEvaluationInterval:
          description: Gets or sets a time interval for the desired autoscale evaluation period in the pool.
          format: duration
          type: string
        autoScaleFormula:
          description: Sets the formula for the desired number of compute nodes in the pool.
          type: string
    PoolEvaluateAutoScaleParameter:
      description: Parameters for a CloudJobOperations.EvaluateAutoScale request.
      properties:
        autoScaleFormula:
          description: Sets a formula for the desired number of compute nodes in the pool.
          type: string
      required:
        - autoScaleFormula
    PoolInformation:
      description: Specifies how a job should be assigned to a pool.
      properties:
        autoPoolSpecification:
          $ref: "#/components/schemas/AutoPoolSpecification"
        poolId:
          description: Gets or sets the id of an existing pool. All the tasks of the job will run on the specified pool. You must specify either PoolId or AutoPoolSpecification, but not both.
          type: string
    PoolListPoolUsageMetricsResult:
      description: Response to an AccountOperations.ListPoolUsageMetrics request.
      properties:
        odata.nextLink:
          description: Gets or sets the URL to get the next set of results.
          type: string
        value:
          description: Gets or sets the pool usage metrics data.
          items:
            $ref: "#/components/schemas/PoolUsageMetrics"
          type: array
    PoolPatchParameter:
      description: Parameters for a CloudPoolOperations.Patch request.
      properties:
        applicationPackageReferences:
          description: Sets a list of application packages to be installed on each compute node in the pool. If omitted, any existing application package references are left unchanged.
          items:
            $ref: "#/components/schemas/ApplicationPackageReference"
          type: array
        certificateReferences:
          description: Sets a list of certificates to be installed on each compute node in the pool. If omitted, any existing certificate references are left unchanged.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        metadata:
          description: Sets a list of name-value pairs associated with the pool as metadata. If omitted, any existing metadata is left unchanged.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        startTask:
          $ref: "#/components/schemas/StartTask"
    PoolResizeParameter:
      description: Parameters for a CloudPoolOperations.Resize request.
      properties:
        nodeDeallocationOption:
          description: Sets when nodes may be removed from the pool, if the pool size is decreasing.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeDeallocationOption
        resizeTimeout:
          description: Sets the timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. The default value is 10 minutes.
          format: duration
          type: string
        targetDedicated:
          description: Sets the desired number of compute nodes in the pool.
          format: int32
          type: integer
      required:
        - targetDedicated
    PoolSpecification:
      description: Specification for creating a new pool.
      properties:
        applicationPackageReferences:
          description: Gets or sets the list of application packages to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/ApplicationPackageReference"
          type: array
        autoScaleEvaluationInterval:
          description: Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
          format: duration
          type: string
        autoScaleFormula:
          description: Gets or sets the formula for the desired number of compute nodes in the pool.
          type: string
        certificateReferences:
          description: Gets or sets a list of certificates to be installed on each compute node in the pool.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        displayName:
          description: Gets or sets the display name for the pool.
          type: string
        enableAutoScale:
          description: Gets or sets whether the pool size should automatically adjust over time.
          type: boolean
        enableInterNodeCommunication:
          description: Gets or sets whether the pool permits direct communication between nodes.
          type: boolean
        maxTasksPerNode:
          description: Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
          format: int32
          type: integer
        metadata:
          description: Gets or sets a list of name-value pairs associated with the pool as metadata.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        osFamily:
          description: Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
          type: string
        resizeTimeout:
          description: Gets or sets the timeout for allocation of compute nodes to the pool.
          format: duration
          type: string
        startTask:
          $ref: "#/components/schemas/StartTask"
        targetDedicated:
          description: Gets or sets the desired number of compute nodes in the pool.
          format: int32
          type: integer
        targetOSVersion:
          description: Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
          type: string
        taskSchedulingPolicy:
          $ref: "#/components/schemas/TaskSchedulingPolicy"
        vmSize:
          description: Gets or sets the size of the virtual machines in the pool. All VMs in a pool are the same size.
          type: string
    PoolStatistics:
      description: Contains utilization and resource usage statistics for the lifetime of a pool.
      properties:
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
          format: date-time
          type: string
        resourceStats:
          $ref: "#/components/schemas/ResourceStatistics"
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
        url:
          description: Gets or sets the URL for the statistics.
          type: string
        usageStats:
          $ref: "#/components/schemas/UsageStatistics"
      required:
        - url
        - startTime
        - lastUpdateTime
    PoolUpdatePropertiesParameter:
      description: Parameters for a CloudPoolOperations.UpdateProperties request.
      properties:
        applicationPackageReferences:
          description: Sets a list of application packages to be installed on each compute node in the pool. If you specify an empty collection, any existing application packages references are removed from the pool.
          items:
            $ref: "#/components/schemas/ApplicationPackageReference"
          type: array
        certificateReferences:
          description: Sets a list of certificates to be installed on each compute node in the pool. If you specify an empty collection, any existing certificate references are removed from the pool.
          items:
            $ref: "#/components/schemas/CertificateReference"
          type: array
        metadata:
          description: Sets a list of name-value pairs associated with the pool as metadata. If you specify an empty collection, any existing metadata is removed from the pool.
          items:
            $ref: "#/components/schemas/MetadataItem"
          type: array
        startTask:
          $ref: "#/components/schemas/StartTask"
      required:
        - certificateReferences
        - metadata
        - applicationPackageReferences
    PoolUpgradeOSParameter:
      description: Parameters for a CloudPoolOperations.UpgradeOS request.
      properties:
        targetOSVersion:
          description: Sets the Azure Guest OS version to be installed on the virtual machines in the pool.
          type: string
      required:
        - targetOSVersion
    PoolUsageMetrics:
      description: Usage metrics for a pool across an aggregation interval.
      properties:
        dataEgressGiB:
          description: Gets or sets the cross data center network egress in GiB from the pool during this interval.
          format: double
          type: number
        dataIngressGiB:
          description: Gets or sets the cross data center network ingress in GiB to the pool during this interval.
          format: double
          type: number
        endTime:
          description: Gets or sets the end time of the aggregation interval.
          format: date-time
          type: string
        poolId:
          description: Gets or sets the id of the pool whose metrics are being aggregated.
          type: string
        startTime:
          description: Gets or sets the start time of the aggregation interval.
          format: date-time
          type: string
        totalCoreHours:
          description: Gets or sets the total core hours used in the pool during this aggregation interval.
          format: double
          type: number
        vmSize:
          description: Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
          type: string
      required:
        - poolId
        - startTime
        - endTime
        - vmSize
        - totalCoreHours
        - dataIngressGiB
        - dataEgressGiB
    RecentJob:
      description: Information about the most recent job to run under the job schedule.
      properties:
        id:
          description: Gets or sets the id of the job.
          type: string
        url:
          description: Gets or sets the URL of the job.
          type: string
    ResizeError:
      description: An error that occurred when resizing a pool.
      properties:
        code:
          description: Gets or sets an identifier for the pool resize error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          description: Gets or sets a message describing the pool resize error, intended to be suitable for display in a user interface.
          type: string
        values:
          description: Gets or sets a list of additional error details related to the pool resize error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
    ResourceFile:
      description: A file to be downloaded from Azure blob storage to a compute node.
      properties:
        blobSource:
          description: Gets or sets the URL of a blob in Azure storage. The Batch service downloads the blob to the specified file path. The URL must be readable using anonymous access.
          type: string
        filePath:
          description: Gets or sets the location on the compute node to which the file should be downloaded.
          type: string
    ResourceStatistics:
      description: Statistics related to resource consumption by compute nodes in a pool.
      properties:
        avgCPUPercentage:
          description: Gets or sets the average CPU usage across all nodes in the pool (percentage per node).
          format: double
          type: number
        avgDiskGiB:
          description: Gets or sets the average used disk space in GiB across all nodes in the pool.
          format: double
          type: number
        avgMemoryGiB:
          description: Gets or sets the average memory usage in GiB across all nodes in the pool.
          format: double
          type: number
        diskReadGiB:
          description: Gets or sets the total amount of data in GiB of disk reads across all nodes in the pool.
          format: double
          type: number
        diskReadIOps:
          description: Gets or sets the total number of disk read operations across all nodes in the pool.
          format: int64
          type: integer
        diskWriteGiB:
          description: Gets or sets the total amount of data in GiB of disk writes across all nodes in the pool.
          format: double
          type: number
        diskWriteIOps:
          description: Gets or sets the total number of disk write operations across all nodes in the pool.
          format: int64
          type: integer
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
          format: date-time
          type: string
        networkReadGiB:
          description: Gets or sets the total amount of data in GiB of network reads across all nodes in the pool.
          format: double
          type: number
        networkWriteGiB:
          description: Gets or sets the total amount of data in GiB of network writes across all nodes in the pool.
          format: double
          type: number
        peakDiskGiB:
          description: Gets or sets the peak used disk space in GiB across all nodes in the pool.
          format: double
          type: number
        peakMemoryGiB:
          description: Gets or sets the peak memory usage in GiB across all nodes in the pool.
          format: double
          type: number
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
      required:
        - startTime
        - lastUpdateTime
        - avgCPUPercentage
        - avgMemoryGiB
        - peakMemoryGiB
        - avgDiskGiB
        - peakDiskGiB
        - diskReadIOps
        - diskWriteIOps
        - diskReadGiB
        - diskWriteGiB
        - networkReadGiB
        - networkWriteGiB
    Schedule:
      description: The schedule according to which jobs will be created
      properties:
        doNotRunAfter:
          description: Gets or sets a time after which no job will be created under this job schedule.  The schedule will move to the completed state as soon as this deadline is past and there is no active job under this job schedule.
          format: date-time
          type: string
        doNotRunUntil:
          description: Gets or sets the earliest time at which any job may be created under this job schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately.
          format: date-time
          type: string
        recurrenceInterval:
          description: Gets or sets the time interval between the start times of two successive jobs under the job schedule. A job schedule can have at most one active job under it at any given time.
          format: duration
          type: string
        startWindow:
          description: Gets or sets the time interval, starting from the time at which the schedule indicates a job should be created, within which a job must be created.  If a job is not created within the startWindow interval, then the 'opportunity' is lost; no job will be created until the next recurrence of the schedule.
          format: duration
          type: string
    StartTask:
      description: A task defined on a pool and run by compute nodes when they join the pool.
      properties:
        commandLine:
          description: Gets or sets the command line of the start task.
          type: string
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the start task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        maxTaskRetryCount:
          description: Gets or sets the maximum number of times the task may be retried.
          format: int32
          type: integer
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        runElevated:
          description: Gets or sets whether to run the start task in elevated mode. The default value is false.
          type: boolean
        waitForSuccess:
          description: Gets or sets whether the Batch Service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
          type: boolean
    StartTaskInformation:
      description: Information about a start task running on a compute node.
      properties:
        endTime:
          description: Gets or sets the time at which the start task stopped running.
          format: date-time
          type: string
        exitCode:
          description: Gets or sets the exit code of the start task.
          format: int32
          type: integer
        lastRetryTime:
          description: Gets or sets the most recent time at which a retry of the task started running.
          format: date-time
          type: string
        retryCount:
          description: Gets or sets the number of times the task has been retried by the Batch service.
          format: int32
          type: integer
        schedulingError:
          $ref: "#/components/schemas/TaskSchedulingError"
        startTime:
          description: Gets or sets the time at which the start task started running.
          format: date-time
          type: string
        state:
          description: Gets or sets the state of the start task on the compute node.
          enum:
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: StartTaskState
      required:
        - state
        - startTime
        - retryCount
    SubtaskInformation:
      description: Information about an Azure Batch subtask.
      properties:
        endTime:
          description: Gets or sets the time at which the subtask completed. This property is set only if the subtask is in the Completed state.
          format: date-time
          type: string
        exitCode:
          description: Gets or sets the exit code of the subtask. This property is set only if the subtask is in the Completed state.
          format: int32
          type: integer
        id:
          description: Gets or sets the id of the subtask.
          format: int32
          type: integer
        nodeInfo:
          $ref: "#/components/schemas/ComputeNodeInformation"
        previousState:
          description: Gets or sets the previous state of the subtask. This property is not set if the subtask is in its initial Active state.
          enum:
            - active
            - preparing
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskState
        previousStateTransitionTime:
          description: Gets or sets the time at which the subtask entered its previous state. This property is not set if the subtask is in its initial Active state.
          format: date-time
          type: string
        schedulingError:
          $ref: "#/components/schemas/TaskSchedulingError"
        startTime:
          description: Gets or sets the time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running.
          format: date-time
          type: string
        state:
          description: Gets or sets the current state of the subtask.
          enum:
            - active
            - preparing
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskState
        stateTransitionTime:
          description: Gets or sets the time at which the subtask entered its current state.
          format: date-time
          type: string
    TaskAddParameter:
      description: An Azure Batch task to add.
      properties:
        affinityInfo:
          $ref: "#/components/schemas/AffinityInformation"
        commandLine:
          description: Gets or sets the command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordination command line.
          type: string
        constraints:
          $ref: "#/components/schemas/TaskConstraints"
        dependsOn:
          $ref: "#/components/schemas/TaskDependencies"
        displayName:
          description: Gets or sets a display name for the task.
          type: string
        environmentSettings:
          description: Gets or sets a list of environment variable settings for the task.
          items:
            $ref: "#/components/schemas/EnvironmentSetting"
          type: array
        id:
          description: Gets or sets a string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
          type: string
        multiInstanceSettings:
          $ref: "#/components/schemas/MultiInstanceSettings"
        resourceFiles:
          description: Gets or sets a list of files that Batch will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
          items:
            $ref: "#/components/schemas/ResourceFile"
          type: array
        runElevated:
          description: Gets or sets whether to run the task in elevated mode.
          type: boolean
      required:
        - id
        - commandLine
    TaskConstraints:
      description: Constraints to apply to the Job Manager task.
      properties:
        maxTaskRetryCount:
          description: Gets or sets the maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.
          format: int32
          type: integer
        maxWallClockTime:
          description: Gets or sets the maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.
          format: duration
          type: string
        retentionTime:
          description: Gets or sets the minimum time to retain the working directory for the task on the compute node where it ran. After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
          format: duration
          type: string
    TaskDependencies:
      description: Specifies any dependencies of a task.  Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.
      properties:
        taskIdRanges:
          description: Gets or sets the list of task ranges that must complete before this task can be scheduled.
          items:
            $ref: "#/components/schemas/TaskIdRange"
          type: array
        taskIds:
          description: Gets or sets the list of task ids that must complete before this task can be scheduled.
          items:
            type: string
          type: array
    TaskExecutionInformation:
      description: Information about the execution of a task.
      properties:
        endTime:
          description: Gets or sets the time at which the task completed. This property is set only if the task is in the Completed state.
          format: date-time
          type: string
        exitCode:
          description: Gets or sets the exit code of the task. This property is set only if the task is in completed state.
          format: int32
          type: integer
        lastRequeueTime:
          description: Gets or sets the most recent time at which the task has been requeued by the Batch service as the result of a user request.
          format: date-time
          type: string
        lastRetryTime:
          description: Gets or sets the most recent time at which a retry of the task started running.
          format: date-time
          type: string
        requeueCount:
          description: Gets or sets the number of times the task has been requeued by the Batch service as the result of a user request.
          format: int32
          type: integer
        retryCount:
          description: Gets or sets the number of times the task has been retried by the Batch service.
          format: int32
          type: integer
        schedulingError:
          $ref: "#/components/schemas/TaskSchedulingError"
        startTime:
          description: Gets or sets the time at which the task started running. If the task has been restarted or retried, this is the most recent time at which the task started running.
          format: date-time
          type: string
      required:
        - requeueCount
        - retryCount
    TaskIdRange:
      properties:
        end:
          description: Gets or sets the last task id in the range.
          format: int32
          type: integer
        start:
          description: Gets or sets the first task id in the range.
          format: int32
          type: integer
      required:
        - start
        - end
    TaskInformation:
      description: Information about a task running on a compute node.
      properties:
        executionInfo:
          $ref: "#/components/schemas/TaskExecutionInformation"
        jobId:
          description: Gets or sets the id of the job to which the task belongs.
          type: string
        subtaskId:
          description: Gets or sets the id of the subtask if the task is a multi-instance task.
          format: int32
          type: integer
        taskId:
          description: Gets or sets the id of the task.
          type: string
        taskState:
          description: Gets or sets the current state of the task.
          enum:
            - active
            - preparing
            - running
            - completed
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskState
        taskUrl:
          description: Gets or sets the URL of the task.
          type: string
      required:
        - taskState
    TaskSchedulingError:
      description: Information about an error when scheduling a task.
      properties:
        category:
          description: Gets or sets the category of the task scheduling error.
          enum:
            - usererror
            - servererror
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: SchedulingErrorCategory
        code:
          description: Gets or sets an identifier for the task scheduling error.  Codes are invariant and are intended to be consumed programmatically.
          type: string
        details:
          description: Gets or sets the list of additional error details related to the scheduling error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
        message:
          description: Gets or sets a message describing the task scheduling error, intended to be suitable for display in a user interface.
          type: string
      required:
        - category
    TaskSchedulingPolicy:
      description: Specifies how tasks should be distributed across compute nodes.
      properties:
        nodeFillType:
          description: Gets or sets how tasks should be distributed across compute nodes
          enum:
            - spread
            - pack
            - unmapped
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeFillType
      required:
        - nodeFillType
    TaskStatistics:
      description: Resource usage statistics for a task.
      properties:
        kernelCPUTime:
          description: Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by the task.
          format: duration
          type: string
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
          format: date-time
          type: string
        readIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O read by the task.
          format: double
          type: number
        readIOps:
          description: Gets or sets the total number of I/O read operations performed by the task.
          format: int64
          type: integer
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
        url:
          description: Gets or sets the URL for the statistics.
          type: string
        userCPUTime:
          description: Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by the task.
          format: duration
          type: string
        waitTime:
          description: Gets or sets the elapsed time between the creation of the task and the start of task execution.
          format: duration
          type: string
        wallClockTime:
          description: Gets or sets the total wall clock time of the task.
          format: duration
          type: string
        writeIOGiB:
          description: Gets or sets the total amount of data in GiB of I/O written by the task.
          format: double
          type: number
        writeIOps:
          description: Gets or sets the total number of I/O write operations performed by the task.
          format: int64
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - waitTime
    TaskUpdateParameter:
      description: Parameters for a CloudTaskOperations.Update request.
      properties:
        constraints:
          $ref: "#/components/schemas/TaskConstraints"
    UsageStatistics:
      description: Statistics related to pool usage information.
      properties:
        dedicatedCoreTime:
          description: Gets or sets the aggregated wall-clock time of the dedicated compute node cores being part of the pool.
          format: duration
          type: string
        lastUpdateTime:
          description: Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
          format: date-time
          type: string
        startTime:
          description: Gets or sets the start time of the time range covered by the statistics.
          format: date-time
          type: string
      required:
        - startTime
        - lastUpdateTime
        - dedicatedCoreTime
