openapi: 3.0.0
servers:
  - url: https://test-api.osf.io/v2
info:
  contact:
    email: support@osf.io
    name: OSF
    url: https://osf.io/support
    x-twitter: OSFramework
  description: "## https://api.osf.io/v2/"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: OSF APIv2 Documentation
  version: "2.0"
  x-apisguru-categories:
    - open_data
  x-logo:
    backgroundColor: transparent
    url: https://cdn.cos.io/media/images/cos_center_logo_small.original.png
  x-origin:
    - format: openapi
      url: http://developer.osf.io/swagger.json
      version: "3.0"
  x-providerName: osf.io
tags:
  - description: |-
      Welcome to the Open Science Framework API. With this API you can access users, projects, components, logs, and files from the [Open Science Framework](https://osf.io/). The Open Science Framework (OSF) is a free, open-source service maintained by the [Center for Open Science](http://cos.io/).

      The OSF serves as a repository and archive for study designs, materials, data, manuscripts, or anything else associated with your research during the research process. Every project and file on the OSF has a permanent unique identifier, and every registration (a permanent, time-stamped version of your projects and files) can be assigned a DOI/ARK. You can use the OSF to measure your impact by monitoring the traffic to projects and files you make public. With the OSF you have full control of what parts of your research are public and what remains private.
    name: Introduction
    x-traitTag: true
  - description: |-
      The OSF API generally conforms to the [JSON-API v1.0 spec](http://jsonapi.org/format/1.0/). Where exceptions exist, they will be noted. Each endpoint will have its own documentation, but there are some general principles.

      Note: Assume undocumented routes/features/fields are unstable.

      #### Canonical URLs
      All canonical URLs have trailing slashes.  A request to an endpoint without a trailing slash will result in a **301 Redirect** to the canonical URL.  There are some exceptions when working with the Files API, so if a URL in a response does not have a slash, do not append one.
      #### Plurals
      Endpoints are always pluralized.  `/users/`, not `/user/`, `/nodes/`, not `/node/`.

      The only exception are the node and preprint citation endpoints, which are `/citation/`, not `/citations/`.
      #### Common Actions
      Every endpoint in the OSF API responds to `GET`, `HEAD`, and `OPTION` requests.

      You must have adequate permissions to interact with any endpoint. Unauthorized use will result in **401 Unauthorized** or **403 Forbidden** responses.

      Use `HEAD` to probe an endpoint and make sure your headers are well-formed.

      A `GET` request will return a representation of the entity or entity collection referenced by the endpoint.

      An `OPTIONS` request will return a JSON object that describes the endpoint, including the name, a description, the acceptable request formats, the allowed response formats, and any actions available via the endpoint.

      #### Testing
      ##### Testing Server
      The test-* subdomains of the osf are intended to match, at any given time, the current production environment of the Open Science Framework.

      We have staging servers that will have newer features, including newer API features, that aren't ready for production. However, because those servers are subject to the whims of QA and whichever group needs to do specific testing, they aren't particular stable for API developers.

      The test servers linked below are primarily for developing your API application on a stable system.

      https://test.osf.io/

      https://test-api.osf.io/v2/
      ##### Ephemerality Notice
      Expect the server to be down from time to time while we update software, and don't expect that anything you create on here to exist long-term.

      While this is more stable than a staging server, we won't necessarily run data migrations if anything major happens to our database schema, so we may clear out the data on the test servers periodically.
    name: General Usage
    x-traitTag: true
  - description: |-
      #### Token Auth
      To use a Personal Access Token, make an `Authorization` header with the contents `Bearer <token>` as shown in the example below, replacing `<token>` with your token.

          curl -X "GET" "https://api.osf.io/v2/users/me/" \
          -H "Authorization: Bearer <token>"

      To make a Personal Access Token, visit your OSF settings page (either on the [OSF](https://osf.io/settings/tokens/) or our [testing server](https://test.osf.io/settings/tokens/)) to create one. You can limit the scope of the token, but remember that it has access to all of the information that you do within the limits of the scope, so be careful with your tokens.
      #### OAuth
      The OSF allows third-party web applications to connect to the OSF on behalf of other users via the OAuth 2.0 web application flow.
      You can add a developer application from the OSF settings page (either on the [OSF](https://osf.io/settings/tokens/) or our [testing server](https://test.osf.io/settings/tokens/)).

      We will be adding narrative documentation for handling OAuth flows, but for now, if you're familiar with OAuth, you can check out the [CAS overlay documentation](https://github.com/CenterForOpenScience/cas-overlay#web-server-authorization) for options.
      We've also created a [test application](https://github.com/abought/osf_oauth2_demo) for verifying that our OAuth workflow works correctly. If you set up an OAuth application on https://test.osf.io/, you should be able to add the client secret and client id to the settings file and it should work properly. If it does not, please let us know.
    name: Authentication
    x-traitTag: true
  - description: |-
      All entity collection endpoints respond to the `page` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-pagination).

      However, links to the first, last, previous, and next pages of results are provided in the `links` key of the response, and you are encouraged to use those rather than adding query parameters by hand.

      If there are only enough results to fill one page, the `first`, `last`, `prev`, and `next` links will be null.
      #### Versioning
      As of version `2.3`, pagination links conform to the JSON API specification. Meta information was pulled out of the `links` object and placed in a top-level `meta` object.

      The `meta` key contains the total number of entities available, as well as the current number of results displayed per page.
    name: Pagination
    x-traitTag: true
  - description: |-
      Versioning can be specified in three different ways:

      #### URL Path Versioning
      + `/v2/` or `/v3/`
      + A version specified via the URL path is a **required** part of the URL.
      + Only a major version can be specified via the URL path, i.e. `/v2.0.6/` is invalid, additionally, paths such as `/v2.0/` are invalid.
      + If the default version of the API is within the major version specified in the URL path, the default version will be applied (i.e. if the default version is `2.3` and the URL path is `/v2/`, then version returned will be `2.3`).
      + If the default version of the API is not within the major version specified in the URL path, the URL path version will be applied (i.e. if the default version is `3.0` and the URL path is `/v2/`, then the version returned will be `2.0`)

      #### Query Parameter Versioning
      + `/v2/nodes/?version=2.1.6`
      + Pinning to a specific version via a query parameter is **optional**.
      + A specific version (major, minor, or patch) for a single request can be specified via the `version` query parameter, as long as it is an allowed version.
      + If the version specified in the query parameter does not fall within the same major version specified in the URL path, i.e `/v2/nodes/?version=3.1.4` a 409 Conflict response will be returned.

      #### Header Versioning
      + `Accept-Header=application/vnd.api+json;version=3.0.1`
      + Pinning to a specific version via request header is **optional**.
      + A specific version (major, minor, or patch) for a single request can be specified via the `Accept Header` of the request, as long as it is an allowed version.
      + If the version specified in the header does not fall within the same major version specified in the URL path a 409 Conflict response will be returned.
      + If both a header version and query parameter version are specified, the versions must match exactly or a 409 Conflict response will be returned (i.e. one does not take precedence over the other).

      #### CHANGELOG
      `v2.1`
      + Pagination links conform to JSON API specification, i.e. `meta` information was pulled out of the `links` object and placed in a top-level `meta` object.
      + Deprecate the `node_links` field in the **Node** and **Registration** serializers in favor of `linked_nodes` and `linked_registrations`.

      `v2.2`
      + Modify institution nodes list so that affiliated components are also returned from `/v2/institutions/<id>/nodes/`.
      + Ensure all existing date fields are standardized on UTC.

      `v2.3`
      + Handle merged users more correctly on `/v2/users/`.

      `v2.4`
      + Deprecate the `parents` field in the **Taxonomies** serializer.
      + Deprecate the following fields in the **Preprint Provider** serializer:
          + `social_facebook`, `social_instagram`, and `social_twitter`
          + `banner_path`, `logo_path`, and `header_text`
          + `email_contact`
    name: Versioning
    x-traitTag: true
  - description: |-
      Entity collections can be filtered by adding a query parameter in the form:

      &nbsp;&nbsp;&nbsp;&nbsp;`filter[<fieldname>]=<matching information>`

      String queries are filtered using substring matching. For example, if you were trying to find [Lise Meitner](http://en.wikipedia.org/wiki/Lise_Meitner):

      &nbsp;&nbsp;&nbsp;&nbsp;`/users/?filter[full_name]=meitn`

      You can filter on multiple fields, or the same field in different ways, by &-ing the query parameters together.

      &nbsp;&nbsp;&nbsp;&nbsp;`/users/?filter[full_name]=lise&filter[family_name]=mei`

      Boolean fields should be queried with `true` or `false`.

      &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[registered]=true`

      You can request multiple resources by filtering on id and placing comma-separated values in your query parameter.

      &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[id]=aegu6,me23a`

      You can filter with case-sensitivity or case-insensitivity by using `contains` and `icontains`, respectively.

      &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[tags][icontains]=help`
    name: Filtering
    x-traitTag: true
  - description: |
      All endpoints respond to the `fields` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-sparse-fieldsets).


      From the specification:

      <blockquote>
        <p>A client MAY request that an endpoint return only specific fields in the response on a per-type basis by including a fields[TYPE] parameter.</p>
        <p>The value of the fields parameter MUST be a comma-separated (U+002C COMMA, “,”) list that refers to the name(s) of the fields to be returned.</p>
        <p>If a client requests a restricted set of fields for a given resource type, an endpoint MUST NOT include additional fields in resource objects of that type in its response.</p>
      </blockquote>

      #### Basic Usage

      When making a request to an endpoint that returns a serialized object of some `type`, you can specify `fields[<type>]=<comma,separated,list,of,fields>` to receive a subset of the object's fields in the response.


      For example, the request below will serialize only the `title` attribute and `children` relationship for each node in the response.


      https://api.osf.io/v2/nodes/?fields[nodes]=title,children


      Sparse fieldsets can be used to restrict both attribute and relationship fields.
      Note that top-level objects (such as `type`, `id`, `attributes`, `relationships`, and `links`) will always be serialized and cannot be excluded.

      #### Advanced Usage

      Sparse fieldsets can be used to restrict any entity returned in the response.


      For example, the request below will serialize only the `full_name` attribute for each user (auto-embedded by the `embed=contributors` query parameter), and the `title` attribute for each node.


      https://api.osf.io/v2/nodes/?fields[nodes]=title,contributors&embed=contributors&fields[users]=full_name


      Any field specified in another query parameters used by the serializer (e.g. `embed`) must also be included in the sparse fieldset.
      For example, fields that are being embedded on the sparse type (e.g. `nodes`) must also be included in `fields[<type>]` when using embeds, or the embed will be invalid.


      A request to embed contributors and restrict nodes to only return the `title` attribute should have the form:


      https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title,contributors


      **NOT**


      https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title
    name: Sparse Fieldsets
    x-traitTag: true
  - description: |-
      All related resources that appear in the `relationships` attribute are embeddable, meaning it is possible to fetch a node and its contributors in a single request by adding a query parameter like:

      &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?embed=contributors`

      The embedded results will have the following structure:

      &nbsp;&nbsp;&nbsp;&nbsp;`{relationship_name}: {full_embedded_response}`

      Where `full_embedded_response` means the full API response resulting from a **GET** request to the `href` link of the corresponding related resource.

      This means if there are no errors in processing the embedded request the response will have the format:

      &nbsp;&nbsp;&nbsp;&nbsp;`data: {response}`

      And if there are errors processing the embedded request the response will have the format:

      &nbsp;&nbsp;&nbsp;&nbsp;`errors: {errors}`

      Multiple embeds can be achieved with multiple query parameters separated by "&".

      &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?embed=contributors&embed=comments`

      Some endpoints are automatically embedded, such as the [node contributors](#operation/nodes_contributors_list) endpoint, which automatically embeds user information.
    name: Embedding
    x-traitTag: true
  - description: |-
      ## Attribute Validation
      Endpoints that allow creation or modification of entities generally limit updates to certain attributes of the entity.

      If you attempt to set an attribute that does not permit updates (such as a `date_created` timestamp), the API will silently ignore that attribute.

      This will not affect the response from the API: if the request would have succeeded without the updated attribute, it will still report as successful. Likewise, if the request would have failed without the attribute update, the API will still report a failure.

      Typoed or non-existent attributes will behave the same as non-updatable attributes and will be silently ignored. If a request is not working the way you expect, make sure to double check your spelling.
      ## Create/Update Requests
      #### Formatting POST/PUT/PATCH Request Bodies
      The OSF API follows the JSON-API spec for [create and update requests](http://jsonapi.org/format/1.0/#crud). This means all request bodies must be wrapped with some metadata.

      Each request body must be an object with a `data` key containing at least a `type` member. The value of the `type` member must agree with the `type` of the entities represented by the endpoint. If not, a **409 Conflict** will be returned.

      The request should also contain an `attributes` member with an object containing the key-value pairs to be created/updated.

      **PUT/PATCH** requests must also have an `id` key that matches the ID part of the endpoint you are making a request to. If the `id` key does not match the ID part of the URL path, a **409 Conflict** error will be returned.

      #### Creating a Node via POST Example

          POST /v2/nodes/
          {
            "data": {
              "type": "nodes",
              "attributes": {
                "title" : "A Phylogenetic Tree of Famous Internet Cats",
                "category" : "project",
                "description" : "How closely related are Grumpy Cat and C.H. Cheezburger? Is memefulness inheritable?"
              }
            }
          }


      #### Updating a User via PUT Example

          PUT /v2/users/me/
          {
            "data": {
              "id": "3rqxc",
              "type": "users",
              "attributes": {
                "full_name" : "Henrietta Swan Leavitt",
                "given_name" : "Henrietta",
                "middle_names" : "Swan",
                "family_name" : "Leavitt"
              }
            }
          }

      **Note:** If you PUT/PATCH to the `/users/me/` endpoint, you must still provide your full user id in the `id` field of the request.  We do not support using the `me` alias in request bodies at this time.

      #### PUT vs. PATCH
      For most endpoints that support updates via **PUT** requests, we also allow **PATCH** updates.

      **PUT** requests require all mandatory attributes to be set, even if their value is unchanged. **PATCH** requests may omit mandatory attributes, whose value will be unchanged.
    name: Request Formatting
    x-traitTag: true
  - description: |-
      ## Errors
      When a request fails for any reason, the OSF API will return an appropriate HTTP response code and include a descriptive error in the body of the response.

      The response body will be a JSON object with a key, `errors`, pointing to an array of error objects.

      In general, these error objects will consist of a `detail` key with a detailed error message and a `source` object that may contain a field `pointer` that is a [JSON Pointer](https://tools.ietf.org/html/rfc6901) to the error-causing attribute.

      The `error` objects may include additional information in accordance with the [JSON-API error spec](http://jsonapi.org/format/1.0/#error-objects).

      #### Example
      An error response from an incorrect create node request:

          {
            "errors": [
              {
                "source": {
                  "pointer": "/data/attributes/category"
                },
                "detail": "This field is required."
              },
              {
                "source": {
                  "pointer": "/data/type"
                },
                "detail": "This field may not be null."
              },
              {
                "source": {
                  "pointer": "/data/attributes/title"
                },
                "detail": "This field is required."
              }
            ]
          }

      ## Error Codes
      The OSF API uses conventional HTTP response codes to indicate the success or failure of an API request.

      In general, codes in the `2xx` range indicate success, codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, invalid authentication credentials were provided, etc.), and codes in the `5xx` range indicate an error with our API servers (these are rare, and if they occur consistently, should be [reported](mailto:support@osf.io)).

      `200` **OK**

      The request was successful and everything worked as expected.

      `201` **Created**

      The request was successful and a new resource was created. The newly created resource can be referenced by the ID returned in the response.

      `204` **No Content**

      The request was sucessful but does not need to return an entity-body.

      `400` **Bad Request**

      The request was unacceptable, often due to a missing required parameter or malformed data.

      `401` **Unauthorized**

      The request requires user authentication, which was not provided.

      `403` **Forbidden**

      The request was understood but not fulfilled, most likely due to invalid permissions.

      `404` **Not Found**

      The requested resource does not exist.

      `405` **Method Not Allowed**

      The method specified in the request is not allowed for the resource.

      `409` **Conflict**

      The request could not be completed due to a conflict with the current state of the resource or within the request data.

      `410` **Gone**

      The requested resource is no longer available, most likely because it was deleted.

      `429` **Too Many Requests**

      The user has sent too many requests in a given amount of time.

      Wait at least the amount of time specified in the `Retry-After` header of the response before sending another request.

      Authenticated requests have a rate limit of 10,000/day.

      Unauthenticated requests have a rate limit of 100/hour.

      `5xx` **Server Errors**

      The API server encountered an unexpected error.
    name: Errors & Error Codes
    x-traitTag: true
  - description: |-
      ## Entities
      An entity is a single resource that has been retrieved from the API, usually from an endpoint with the entity's ID as the final path part. A successful response from an entity request will be a JSON object with a top level `data` key pointing to a sub-object with the following members:
      #### ID
      The identifier for the entity.  This **MUST** be included with all PUT and PATCH requests.
      #### Type
      The type identifier of this entity.  This **MUST** be included with all create and update requests.
      #### Attributes
      The properties of the entity.  Names, descriptions, etc.
      #### Relationships
      Relationships are URLs to other entities or entity collections that have a relationship to the entity.

      For example, the node entity provides a `contributors` relationship that points to the endpoint to retrieve all contributors to that node. It is recommended to use these links rather than to filter general entity collection endpoints by IDs. They'll be faster, easier, and less error-prone.

      Generally a relationship will have the following structure:


          {relationship_name}: {
            "links": {
              "related": {
                "href": {url_to_related_entity_or_entity_collection},
                "meta": {}
              }
            }
          }


      If there are no related entities, `href` will be null.
      #### Embeds
      Please see the [embedding](#tag/Embedding) documentation.
      #### Links
      Links are urls to alternative representations of the entity or actions that may be performed on the entity.

      Most entities will provide a `self` link that is the canonical endpoint for the entity where update and delete requests should be sent. Most entities will also provide an `html` link that directs to the entity's page on the Open Science Framework.
      ## Entity Collections
      Entity collection endpoints return a list of entities and an additional data structure with pagination links, such as `next`, `prev`, `first`, and `last`.

      The OSF API limits all entity collection responses to a maximum of 10 entities.

      The response object has two keys:
      #### Data
      The `data` key is an array of entities that match the query.

      Each entity in the array is the same representation that is returned from that entity's `self` link, meaning that refetching the entity is unnecessary.
      #### Links
      The `links` key contains pagination information, including links to the previous, next, first, and last pages of results.

      The `meta` key contains the total number of entities available, as well as the current number of results displayed per page.

      If there are only enough results to fill one page, the `first`, `last`, `prev`, and `next` values will be null.
    name: Entities & Entity Collections
    x-traitTag: true
paths:
  /:
    get:
      description: |-
        Welcome to the Open Science Framework API. With this API you can access users, projects, components, logs, and files from the [Open Science Framework](https://osf.io/). The Open Science Framework (OSF) is a free, open-source service maintained by the [Center for Open Science](http://cos.io/).

        #### Returns
        A JSON object with `meta` and `links` keys.

        The `meta` key contains information such as a welcome message from the API, the specified version of the request, and the full representation of the current user, if authentication credentials were provided in the request.

        The `links` key contains links to the following entity collections: [addons](#tag/Addons), [collections](), [institutions](#tag/Institutions), [licenses](#tag/Licenses), [metaschemas](#tag/Metaschemas), [nodes](#tag/Nodes), [registrations](#tag/Registrations), [users](#tag/Users)
      operationId: base_read
      responses:
        "200":
          description: OK
      summary: Root
      tags:
        - Base
  /actions/:
    get:
      description: |-
        
        A log can have one of many actions. The complete list of loggable actions (in the format {identifier}: {description}) is as follows:
        * `project_created`: A Node is created
        * `project_registered`: A Node is registered
        * `project_deleted`: A Node is deleted
        * `created_from`: A Node is created using an existing Node as a template
        * `pointer_created`: A Pointer is created
        * `pointer_forked`: A Pointer is forked
        * `pointer_removed`: A Pointer is removed
        * `node_removed`: A component is deleted
        * `node_forked`: A Node is forked
        ---
        * `made_public`: A Node is made public
        * `made_private`: A Node is made private
        * `tag_added`: A tag is added to a Node
        * `tag_removed`: A tag is removed from a Node
        * `edit_title`: A Node's title is changed
        * `edit_description`: A Node's description is changed
        * `updated_fields`: One or more of a Node's fields are changed
        * `external_ids_added`: An external identifier is added to a Node (e.g. DOI, ARK)
        * `view_only_link_added`: A view-only link was added to a Node
        * `view_only_link_removed`:  A view-only link was removed from a Node
        ---
        * `contributor_added`: A Contributor is added to a Node
        * `contributor_removed`: A Contributor is removed from a Node
        * `contributors_reordered`: A Contributor's position in a Node's bibliography is changed
        * `permissions_updated`: A Contributor`s permissions on a Node are changed
        * `made_contributor_visible`: A Contributor is made bibliographically visible on a Node
        * `made_contributor_invisible`: A Contributor is made bibliographically invisible on a Node
        ---
        * `wiki_updated`: A Node's wiki is updated
        * `wiki_deleted`: A Node's wiki is deleted
        * `wiki_renamed`: A Node's wiki is renamed
        * `made_wiki_public`: A Node's wiki is made public
        * `made_wiki_private`: A Node's wiki is made private
        ---
        * `addon_added`: An add-on is linked to a Node
        * `addon_removed`: An add-on is unlinked from a Node
        * `addon_file_moved`: A File in a Node's linked add-on is moved
        * `addon_file_copied`: A File in a Node's linked add-on is copied
        * `addon_file_renamed`: A File in a Node's linked add-on is renamed
        * `node_authorized`: An addon is authorized for a project
        * `node_deauthorized`: An addon is deauthorized for a project
        * `folder_created`: A Folder is created in a Node's linked add-on
        * `file_added`: A File is added to a Node's linked add-on
        * `file_updated`: A File is updated on a Node's linked add-on
        * `file_removed`: A File is removed from a Node's linked add-on
        * `file_restored`: A File is restored in a Node's linked add-on
        ---
        * `comment_added`: A Comment is added to some item
        * `comment_removed`: A Comment is removed from some item
        * `comment_updated`: A Comment is updated on some item
        ---
        * `embargo_initiated`: An embargoed Registration is proposed on a Node
        * `embargo_approved`: A proposed Embargo of a Node is approved
        * `embargo_cancelled`: A proposed Embargo of a Node is cancelled
        * `embargo_completed`: A proposed Embargo of a Node is completed
        * `retraction_initiated`: A Withdrawal of a Registration is proposed
        * `retraction_approved`: A Withdrawal of a Registration is approved
        * `retraction_cancelled`: A Withdrawal of a Registration is cancelled
        * `registration_initiated`: A Registration of a Node is proposed
        * `registration_approved`: A proposed Registration is approved
        * `registration_cancelled`: A proposed Registration is cancelled
      operationId: logs_actions
      responses:
        "200":
          description: OK
      summary: Actions
      tags:
        - Logs
  /addons/:
    get:
      description: |-
        
        A paginated list of addons configurable with the OSF
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 addons. Each resource in the array is a separate addon object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
      operationId: addons_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the addon entity.
                      properties:
                        categories:
                          description: List of categories this addon belongs to.
                          items:
                            enum:
                              - documentation
                              - storage
                              - bibliography
                              - other
                              - security
                              - citations
                            type: string
                          readOnly: true
                          type: array
                        description:
                          description: The description of the service provider.
                          readOnly: true
                          type: string
                        name:
                          description: The name of the third-party service provider.
                          readOnly: true
                          type: string
                        url:
                          description: The URL to the third-party service provider.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the addon entity.
                      readOnly: true
                      type: string
                    type:
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                      type: string
                  title: Addon
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          categories:
                            - storage
                          description: Box is a file storage add-on. Connect your Box account to an OSF project to interact with files hosted on Box via the OSF.
                          name: Box
                          url: http://www.box.com
                        id: box
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: Dataverse is an open source software application to share, cite, and archive data. Connect your Dataverse account to share your Dataverse datasets via the OSF.
                          name: Dataverse
                          url: https://dataverse.harvard.edu/
                        id: dataverse
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: Dropbox is a file storage add-on. Connect your Dropbox account to an OSF project to interact with files hosted on Dropbox via the OSF.
                          name: Dropbox
                          url: http://www.dropbox.com
                        id: dropbox
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: Figshare is an online digital repository. Connect your figshare account to share your figshare files along with other materials in your OSF project.
                          name: figshare
                          url: http://www.figshare.com
                        id: figshare
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: GitHub is a web-based Git repository hosting service. Connect your GitHub repo to your OSF project to share your code alongside other materials in your OSF project.
                          name: GitHub
                          url: http://www.github.com
                        id: github
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - citations
                          description: Mendeley is a reference management tool. Connecting Mendeley folders to OSF projects allows you and others to view, copy, and download citations that are relevant to your project from the Project Overview page.
                          name: Mendeley
                          url: http://www.mendeley.com
                        id: mendeley
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - citations
                          description: Zotero is a reference management tool. Connecting Zotero folders to OSF projects allows you and others to view, copy, and download citations that are relevant to your project from the Project Overview page.
                          name: Zotero
                          url: http://www.zotero.org
                        id: zotero
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: ownCloud is an open source, self-hosted file sync and share app platform. Connect your ownCloud account to an OSF project to interact with files hosted on ownCloud via the OSF.
                          name: ownCloud
                          url: https://owncloud.org/
                        id: owncloud
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: Amazon S3 is a file storage add-on. Connect your S3 account to an OSF project to interact with files hosted on S3 via the OSF.
                          name: Amazon S3
                          url: https://aws.amazon.com/s3/
                        id: s3
                        links: {}
                        type: addon
                      - attributes:
                          categories:
                            - storage
                          description: Google Drive is a file storage add-on. Connect your Google Drive account to an OSF project to interact with files hosted on Google Drive via the OSF.
                          name: Google Drive
                          url: https://drive.google.com
                        id: googledrive
                        links: {}
                        type: addon
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 1000
                      prev: null
                      total: 10
          description: OK
      summary: List all addons
      tags:
        - Addons
      x-response-schema: Addon
  /citations/styles/:
    get:
      description: |-
        
        A paginated list of all standard citation styles available for rendering citations.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 citation styles. Each resource in the array is a separate citation syle and contains the full representation of the citation style object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include citation styles that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/citations/styles/?filter[title]=open.

        Citation styles may be filtered by their `id`, `title`, `short-title`, and `summary`.
      operationId: citations_styles_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the citation style entity.
                      properties:
                        date_parsed:
                          description: The time at which the citation style was first parsed, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        short_title:
                          description: The short name for the citation style.
                          readOnly: true
                          type: string
                        summary:
                          description: The summary of the citation style.
                          readOnly: true
                          type: string
                        title:
                          description: The official name of the citation style.
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - date_parsed
                        - title
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the citation style, e.g. APA.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the citation style entity.
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the citation style entity (`citation-styles`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                  title: Citation Style
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_parsed: 2015-02-16T04:16:25.732000
                          short_title: AMR
                          summary: null
                          title: Academy of Management Review
                        id: academy-of-management-review
                        links: {}
                        type: citation-styles
                    links:
                      first: null
                      last: https://api.osf.io/v2/citations/styles/?page=115
                      meta:
                        per_page: 10
                        total: 1149
                      next: https://api.osf.io/v2/citations/styles/?page=2
                      prev: null
          description: OK
      summary: List all citation styles
      tags:
        - Citations
      x-response-schema: Citation Style
  "/citations/styles/{style_id}/":
    get:
      description: |-
        Retrieves the details of a citation style.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested citation style, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: citations_styles_read
      parameters:
        - description: The unique identifier of the citation style.
          in: path
          name: style_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation style entity.
                    properties:
                      date_parsed:
                        description: The time at which the citation style was first parsed, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      short_title:
                        description: The short name for the citation style.
                        readOnly: true
                        type: string
                      summary:
                        description: The summary of the citation style.
                        readOnly: true
                        type: string
                      title:
                        description: The official name of the citation style.
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - date_parsed
                      - title
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the citation style, e.g. APA.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the citation style entity.
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the citation style entity (`citation-styles`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                title: Citation Style
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        date_parsed: 2015-02-16T04:16:26.233000
                        short_title: APA
                        summary: null
                        title: American Psychological Association 6th edition
                      id: apa
                      links: {}
                      type: citation-styles
          description: OK
      summary: Retrieve a citation style
      tags:
        - Citations
      x-response-schema: Citation Style
  /collections/:
    get:
      description: |-
        Retrieves a list collections, either public or related to the user
        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the collection.
                      properties:
                        bookmarks:
                          description: This attribute indicates if a collection is being used as part of the bookmarking feature that allows each user to create a personal collection.
                          readOnly: true
                          type: boolean
                        collected_type_choices:
                          description: A list of the acceptable entity `collected_type` metadata options acceptable for entities in the a collection. This indicates the collected types of entities within a collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the collection was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the collection was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        is_promoted:
                          description: ???
                          readOnly: true
                          type: boolean
                        is_public:
                          description: This attribute indicates if a collection is viewable to a user with no special permissions.
                          readOnly: true
                          type: boolean
                        issue_choices:
                          description: A list of the acceptable entity `issue` metadata options acceptable for entities in the a collection.  This indicates what issues exist of a multi-issue collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        program_area_choices:
                          description: A list of the acceptable entity `program_area` metadata options acceptable for entities in the a collection.  This indicates what program areas a collection is composed of .
                          items:
                            type: string
                          readOnly: true
                          type: array
                        status_choices:
                          description: A list of the acceptable entity `status` metadata options acceptable for entities in the a collection. This indicates the status of a entity within a collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        title:
                          description: The title of the collection.
                          readOnly: false
                          type: string
                        volume_choices:
                          description: A list of the acceptable entity `volume` metadata options acceptable for entities in the a collection.  This indicates what volumes exist of a multi-volume collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the collection.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the entity.
                      properties:
                        self:
                          description: A link to the canonical API endpoint of this collection.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        collected_metadata:
                          description: A link to the list of metadata entries that are linked to the current collections.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current collection.
                          readOnly: true
                          type: string
                        linked_preprints:
                          description: A link to the list of preprints that are linked to the current collection.
                          readOnly: true
                          type: string
                        linked_registrations:
                          description: A link to the list of registrations that are linked to the current collection.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current collection.
                          readOnly: true
                          type: string
                        provider:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the entity (`collections`).
                      readOnly: false
                      type: string
                  required:
                    - type
                  title: Collection
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          bookmarks": false
                          collected_type_choices:
                            - Research
                            - Teaching
                            - Community Activity
                            - Meeting
                            - Other
                          date_created: 2019-09-18T19:24:28.751486Z
                          date_modified: 2019-09-18T19:24:28.886438Z
                          is_promoted": true
                          is_public: true
                          issue_choices": []
                          program_area_choices: []
                          status_choices:
                            - Proposed
                            - Active
                            - Completed
                            - Archived
                          title: Metascience's Collection
                          volume_choices: []
                        links:
                          self: https://api.osf.io/v2/collections/
                        relationships:
                          collected_metadata:
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ezcuj/collected_metadata/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ezcuj/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_nodes/
                                meta: {}
                          linked_preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ezcuj/linked_preprints/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_preprints/
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ezcuj/linked_registrations/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_registrations/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ezcuj/node_links/
                                meta: {}
                          provider:
                            links:
                              related:
                                href: https://api.osf.io/v2/providers/collections/metascience/
                                meta: {}
                    links:
                      first: null
                      last: https://api.osf.io/v2/collections/?page=2
                      next: https://api.osf.io/v2/collections/?page=2
                      prev: null
                      self: https://api.osf.io/v2/collections/
                    meta:
                      per_page: 10
                      total: 11
                      version: 2.2
          description: OK
      summary: List all Collections
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        Retrieves a list collections, either public or related to the user
        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_create
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    title: An Excellent Collection Title
                  type: collections
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value: null
          description: Created
      summary: Create a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/":
    delete:
      description: |-
        Deletes a collection, if the user has appropriate permissions.
        #### Permissions
        Users must have write permissions on a collection in order to delete it
        #### Returns
        Nothing is returned in the body
      operationId: collections_delete
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Delete a Collection
      tags:
        - Collections
      x-response-schema: Collection
    get:
      description: |-
        Retrieves a collection, if the user has appropriate permissions.

        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_detail
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the collection.
                      properties:
                        bookmarks:
                          description: This attribute indicates if a collection is being used as part of the bookmarking feature that allows each user to create a personal collection.
                          readOnly: true
                          type: boolean
                        collected_type_choices:
                          description: A list of the acceptable entity `collected_type` metadata options acceptable for entities in the a collection. This indicates the collected types of entities within a collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the collection was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the collection was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        is_promoted:
                          description: ???
                          readOnly: true
                          type: boolean
                        is_public:
                          description: This attribute indicates if a collection is viewable to a user with no special permissions.
                          readOnly: true
                          type: boolean
                        issue_choices:
                          description: A list of the acceptable entity `issue` metadata options acceptable for entities in the a collection.  This indicates what issues exist of a multi-issue collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        program_area_choices:
                          description: A list of the acceptable entity `program_area` metadata options acceptable for entities in the a collection.  This indicates what program areas a collection is composed of .
                          items:
                            type: string
                          readOnly: true
                          type: array
                        status_choices:
                          description: A list of the acceptable entity `status` metadata options acceptable for entities in the a collection. This indicates the status of a entity within a collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        title:
                          description: The title of the collection.
                          readOnly: false
                          type: string
                        volume_choices:
                          description: A list of the acceptable entity `volume` metadata options acceptable for entities in the a collection.  This indicates what volumes exist of a multi-volume collection.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the collection.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the entity.
                      properties:
                        self:
                          description: A link to the canonical API endpoint of this collection.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        collected_metadata:
                          description: A link to the list of metadata entries that are linked to the current collections.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current collection.
                          readOnly: true
                          type: string
                        linked_preprints:
                          description: A link to the list of preprints that are linked to the current collection.
                          readOnly: true
                          type: string
                        linked_registrations:
                          description: A link to the list of registrations that are linked to the current collection.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current collection.
                          readOnly: true
                          type: string
                        provider:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the entity (`collections`).
                      readOnly: false
                      type: string
                  required:
                    - type
                  title: Collection
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        bookmarks": false
                        collected_type_choices:
                          - Research
                          - Teaching
                          - Community Activity
                          - Meeting
                          - Other
                        date_created: 2019-09-18T19:24:28.751486Z
                        date_modified: 2019-09-18T19:24:28.886438Z
                        is_promoted": true
                        is_public: true
                        issue_choices": []
                        program_area_choices: []
                        status_choices:
                          - Proposed
                          - Active
                          - Completed
                          - Archived
                        title: Metascience's Collection
                        volume_choices: []
                      links:
                        self: https://api.osf.io/v2/collections/
                      relationships:
                        collected_metadata:
                          links:
                            related:
                              href: https://api.osf.io/v2/collections/ezcuj/collected_metadata/
                              meta: {}
                        linked_nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/collections/ezcuj/linked_nodes/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_nodes/
                              meta: {}
                        linked_preprints:
                          links:
                            related:
                              href: https://api.osf.io/v2/collections/ezcuj/linked_preprints/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_preprints/
                              meta: {}
                        linked_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/collections/ezcuj/linked_registrations/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_registrations/
                              meta: {}
                        node_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/collections/ezcuj/node_links/
                              meta: {}
                        provider:
                          links:
                            related:
                              href: https://api.osf.io/v2/providers/collections/metascience/
                              meta: {}
                    meta:
                      version: 2.2
                    type: collections
          description: OK
      summary: Retrieve a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/collected_metadata/":
    get:
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        In order to view this metadata it must be public or a user must have read permissions for collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_registrations_list
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          collected_type: Document Analysis
                          issue: ""
                          program_area: N/A
                          status: ""
                          subjects: []
                          volume: ""
                        embeds:
                          guid:
                            data:
                              attributes:
                                access_requests_enabled: true
                                analytics_key: c438e67a7680113ee310cad8121e520bab632f3df95d443a4fadb0cbf3af890acc0d91ab6499297ec622bb827979c6005f13a80b3eddcf87a081667e6b2ac3da6eff414dc659b19e3a473f8bf7ef295bff3c036c955c8313fa6ce1da1253e74592e0b399940ca9f099b36923df8c11622d0a1768ae53f79a6061da76007061207f299a0e507f1ff47baeb902f2c403f0
                                category: project
                                collection: false
                                current_user_can_comment: false
                                current_user_is_contributor: false
                                current_user_is_contributor_or_group_member: false
                                current_user_permissions:
                                  - read
                                custom_citation: null
                                date_created: 2020-05-11T17:57:58.725950
                                date_modified: 2020-11-20T14:31:59.946554
                                description: A Good Node Description
                                fork: false
                                node_license:
                                  copyright_holders:
                                    - Test User
                                  year: "2020"
                                preprint: false
                                public: true
                                registration: false
                                subjects: []
                                tags: []
                                title: A Good Node Title
                                wiki_enabled: true
                              id: 2vewn
                              links:
                                html: https://osf.io/2vewn/
                                self: https://api.osf.io/v2/nodes/2vewn/
                              relationships:
                                affiliated_institutions:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/institutions/?format=json
                                      meta: {}
                                    self:
                                      href: https://api.osf.io/v2/nodes/2vewn/relationships/institutions/?format=json
                                      meta: {}
                                bibliographic_contributors:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/bibliographic_contributors/?format=json
                                      meta: {}
                                children:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/children/?format=json
                                      meta: {}
                                citation:
                                  data:
                                    id: 2vewn
                                    type: nodes
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/citation/?format=json
                                      meta: {}
                                comments:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/comments/?format=json&filter%5Btarget%5D=2vewn
                                      meta: {}
                                contributors:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/contributors/?format=json
                                      meta: {}
                                draft_registrations:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/draft_registrations/?format=json
                                      meta: {}
                                files:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/files/?format=json
                                      meta: {}
                                forks:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/forks/?format=json
                                      meta: {}
                                groups:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/groups/?format=json
                                      meta: {}
                                identifiers:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/identifiers/?format=json
                                      meta: {}
                                implicit_contributors:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/implicit_contributors/?format=json
                                      meta: {}
                                license:
                                  data:
                                    id: 563c1cf88c5e4a3877f9e965
                                    type: licenses
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/?format=json
                                      meta: {}
                                linked_by_nodes:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/linked_by_nodes/?format=json
                                      meta: {}
                                linked_by_registrations:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/linked_by_registrations/?format=json
                                      meta: {}
                                linked_nodes:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/linked_nodes/?format=json
                                      meta: {}
                                    self:
                                      href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_nodes/?format=json
                                      meta: {}
                                linked_registrations:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/linked_registrations/?format=json
                                      meta: {}
                                    self:
                                      href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_registrations/?format=json
                                      meta: {}
                                logs:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/logs/?format=json
                                      meta: {}
                                node_links:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/node_links/?format=json
                                      meta: {}
                                preprints:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/preprints/?format=json
                                      meta: {}
                                region:
                                  data:
                                    id: us
                                    type: regions
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/regions/us/?format=json
                                      meta: {}
                                registrations:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/registrations/?format=json
                                      meta: {}
                                root:
                                  data:
                                    id: 2vewn
                                    type: nodes
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/?format=json
                                      meta: {}
                                settings:
                                  data:
                                    id: 2vewn
                                    type: nodes
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/settings/?format=json
                                      meta: {}
                                storage:
                                  data:
                                    id: 2vewn
                                    type: nodes
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/storage/?format=json
                                      meta: {}
                                view_only_links:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/view_only_links/?format=json
                                      meta: {}
                                wikis:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/nodes/2vewn/wikis/?format=json
                                      meta: {}
                              type: nodes
                        id: 2vewn
                        links: {}
                        relationships:
                          collection:
                            data:
                              id: ux3nq
                              type: collections
                            links:
                              related:
                                href: https://api.osf.io/v2/collections/ux3nq/?format=json
                                meta: {}
                          creator:
                            data:
                              id: 794j8
                              type: users
                            links:
                              related:
                                href: https://api.osf.io/v2/users/794j8/?format=json
                                meta: {}
                          guid:
                            links:
                              related:
                                href: https://api.osf.io/v2/guids/2vewn/?format=json
                                meta: {}
                        type: collected-metadata
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: Retrieve a list of collected metadata for a collection
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        To edit this collection a user must have collections write permissions
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_add_metadata
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_add_metadataBody"
      responses:
        "201":
          description: OK
      summary: Add Metadata or Subjects to a Entitiy in a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/collected_metadata/{cgm_id}":
    delete:
      description: |-
        
        #### Permissions
        Only a user with collection admin permissions can delete collected metadata
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_delete
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: NO CONTENT
      summary: Delete Collection Metadata from entitiy
      tags:
        - Collections
      x-response-schema: Collection
    get:
      description: |-
        
        #### Permissions
        In order to view this metadata it must be public or a user must have read permissions for collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_registrations_detail
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            data:
              examples:
                response:
                  value:
                    attributes:
                      collected_type: Action Research
                      issue: ""
                      program_area: Child Welfare
                      status: ""
                      volume: ""
                    embeds:
                      guid:
                        data:
                          attributes:
                            analytics_key: ""
                            category: project
                            collection: false
                            current_user_can_comment: false
                            current_user_is_contributor: false
                            current_user_is_contributor_or_group_member: false
                            current_user_permissions: []
                            custom_citation: null
                            date_created: 2020-06-05T18:02:28.254638Z
                            date_modified: 2020-10-21T15:47:17.646448Z
                            description: flaksdjfasdlkfj lkjdf aslkdfj sdlfkj
                            fork: false
                            node_license:
                              copyright_holders: []
                              year: null
                            preprint: false
                            public: false
                            registration: false
                            tags: []
                            title: test
                            wiki_enabled: true
                          id: zw4sh
                          links:
                            html: https://osf.io/zw4sh/
                            self: https://api.osf.io/v2/nodes/zw4sh/
                          relationships:
                            affiliated_institutions:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/institutions/
                                  meta: {}
                                self:
                                  href: https://api.osf.io/v2/nodes/zw4sh/relationships/institutions/
                                  meta: {}
                            bibliographic_contributors:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/bibliographic_contributors/
                                  meta: {}
                            children:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/children/
                                  meta: {}
                            citation:
                              data:
                                id: zw4sh
                                type: nodes
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/citation/
                                  meta: {}
                            comments:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/comments/?filter%5Btarget%5D=zw4sh
                                  meta: {}
                            contributors:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/contributors/
                                  meta: {}
                            draft_registrations:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/draft_registrations/
                                  meta: {}
                            files:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/files/
                                  meta: {}
                            forked_from:
                              data: null
                            forks:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/forks/
                                  meta: {}
                            groups:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/groups/
                                  meta: {}
                            identifiers:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/identifiers/
                                  meta: {}
                            implicit_contributors:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/implicit_contributors/
                                  meta: {}
                            license:
                              data:
                                id: 563c1cf88c5e4a3877f9e96a
                                type: licenses
                              links:
                                related:
                                  href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                  meta: {}
                            linked_by_nodes:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/linked_by_nodes/
                                  meta: {}
                            linked_by_registrations:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/linked_by_registrations/
                                  meta: {}
                            linked_nodes:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/linked_nodes/
                                  meta: {}
                                self:
                                  href: https://api.osf.io/v2/nodes/zw4sh/relationships/linked_nodes/
                                  meta: {}
                            linked_registrations:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/linked_registrations/
                                  meta: {}
                                self:
                                  href: https://api.osf.io/v2/nodes/zw4sh/relationships/linked_registrations/
                                  meta: {}
                            logs:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/logs/
                                  meta: {}
                            parent:
                              data: null
                            preprints:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/preprints/
                                  meta: {}
                            region:
                              data:
                                id: us
                                type: regions
                              links:
                                related:
                                  href: https://api.osf.io/v2/regions/us/
                                  meta: {}
                            registrations:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/registrations/
                                  meta: {}
                            root:
                              data:
                                id: zw4sh
                                type: nodes
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/
                                  meta: {}
                            settings:
                              data:
                                id: zw4sh
                                type: nodes
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/settings/
                                  meta: {}
                            storage:
                              data:
                                id: zw4sh
                                type: nodes
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/storage/
                                  meta: {}
                            subjects:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/subjects/
                                  meta: {}
                                self:
                                  href: https://api.osf.io/v2/nodes/zw4sh/relationships/subjects/
                                  meta: {}
                            template_node:
                              data: null
                            view_only_links:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/view_only_links/
                                  meta: {}
                            wikis:
                              links:
                                related:
                                  href: https://api.osf.io/v2/nodes/zw4sh/wikis/
                                  meta: {}
                          type: nodes
                    id: zw4sh
                    links: {}
                    relationships:
                      collection:
                        data:
                          id: ux3nq
                          type: collections
                        links:
                          related:
                            href: https://api.osf.io/v2/collections/ux3nq/
                            meta: {}
                      creator:
                        data:
                          id: nsx26
                          type: users
                        links:
                          related:
                            href: https://api.osf.io/v2/users/nsx26/
                            meta: {}
                      guid:
                        links:
                          related:
                            href: https://api.osf.io/v2/guids/zw4sh/
                            meta: {}
                      subjects:
                        links:
                          related:
                            href: https://api.osf.io/v2/collections/ux3nq/collected_metadata/zw4sh/subjects/
                            meta: {}
                          self:
                            href: https://api.osf.io/v2/collections/ux3nq/collected_metadata/zw4sh/relationships/subjects/
                            meta: {}
                    type: collected-metadata
            meta:
              examples:
                response:
                  value:
                    version: "2.20"
          description: OK
      summary: Retrieve Specific Metadata for a Collection
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        To edit this collection a user must have collections write permissions
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_detail
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_add_metadataBody"
      responses:
        "201":
          description: OK
      summary: Add Metadata or Subjects to an Entity in a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/collected_metadata/{cgm_id}/relationships/subjects/":
    get:
      description: |-
        
        #### Permissions
        This is public for a logged out user when an entity is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_subjects_relationships
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - id: 5fd228b7e64e1300aa99ee15
                        type: subjects
                    links:
                      html: https://api.osf.io/v2/collections/nywr6/collected_metadata/zjxhs/subjects/
                      self: https://api.osf.io/v2/collections/nywr6/collected_metadata/zjxhs/relationships/subjects/
                    meta:
                      version: "2.20"
          description: OK
      summary: Retrieve subject metadata for a specific piece of metadata in a collection
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        
        #### Permissions
        This is editable for a user with a write permission for this collection.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_subjects_relationships_update
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                application/json:
                  data:
                    id: 5fd228b7e64e1300aa99ee15
                    type: subjects
              type: object
        required: true
      responses:
        "201":
          description: OK
      summary: Update subjects for a specific piece of metadata in a collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/collected_metadata/{cgm_id}/subjects/":
    get:
      description: |-
        
        #### Permissions
        In order to view these subject it must be a public collection or a user must have read permissions for collection.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_collected_metadata
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
        - description: A short id for that piece of metadata
          in: path
          name: cgm_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          taxonomy_name: ""
                          text: "Example Subject #0"
                        embeds:
                          parent:
                            errors:
                              - detail: Not found.
                        id: 5fd228b7e64e1300aa99ee15
                        links:
                          self: http://localhost:8000/v2/subjects/5fd228b7e64e1300aa99ee15/
                        relationships:
                          children:
                            links:
                              related:
                                href: http://localhost:8000/v2/subjects/5fd228b7e64e1300aa99ee15/children/
                                meta: {}
                          parent:
                            data: null
                        type: subjects
                    links:
                      first: null
                      last: null
                      next: null
                      prev: null
                      self: http://localhost:8000/v2/collections/nywr6/collected_metadata/zjxhs/subjects/
                    meta:
                      per_page: 10
                      total: 1
                      version: "2.20"
          description: OK
      summary: Retrieve subject data for a specific piece of metadata info for a collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/linked_nodes":
    get:
      description: |-
        List of all nodes linked to the given collection.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_list
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          analytics_key: c438e67a7680113ee310cad8121e520bab632f3df95d443a4fadb0cbf3af890acc0d91ab6499297ec622bb827979c6005f13a80b3eddcf87a081667e6b2ac3da6eff414dc659b19e3a473f8bf7ef295bff3c036c955c8313fa6ce1da1253e74592e0b399940ca9f099b36923df8c11622d0a1768ae53f79a6061da76007061207f299a0e507f1ff47baeb902f2c403f0
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_is_contributor: false
                          current_user_is_contributor_or_group_member: false
                          current_user_permissions: []
                          custom_citation: null
                          date_created: 2020-05-11T17:57:58.725950Z
                          date_modified: 2020-11-20T14:31:59.946554Z
                          description: A good Node description.
                          fork: false
                          node_license:
                            copyright_holders:
                              - Test User
                            year: "2020"
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: A Good Node Title
                          wiki_enabled: true
                        id: 2vewn
                        links:
                          html: https://osf.io/2vewn/
                          self: https://api.osf.io/v2/nodes/2vewn/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/institutions/
                                meta: {}
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/bibliographic_contributors/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/children/
                                meta: {}
                          citation:
                            data:
                              id: 2vewn
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/comments/?filter%5Btarget%5D=2vewn
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/files/
                                meta: {}
                          forked_from:
                            data: null
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/forks/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/groups/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/identifiers/
                                meta: {}
                          implicit_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/implicit_contributors/
                                meta: {}
                          license:
                            data:
                              id: 563c1cf88c5e4a3877f9e965
                              type: licenses
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/
                                meta: {}
                          linked_by_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_by_nodes/
                                meta: {}
                          linked_by_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_by_registrations/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_nodes/
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_registrations/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_registrations/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/logs/
                                meta: {}
                          parent:
                            data: null
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/preprints/
                                meta: {}
                          region:
                            data:
                              id: us
                              type: regions
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/registrations/
                                meta: {}
                          root:
                            data:
                              id: 2vewn
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/
                                meta: {}
                          settings:
                            data:
                              id: 2vewn
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/settings/
                                meta: {}
                          storage:
                            data:
                              id: 2vewn
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/storage/
                                meta: {}
                          subjects:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/subjects/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/subjects/
                                meta: {}
                          template_node:
                            data: null
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: null
                      next: null
                      prev: null
                      self: https://api.osf.io/v2/collections/ux3nq/linked_nodes/
                    meta:
                      per_page: 10
                      total: 1
                      version: "2.20"
          description: OK
      summary: List All Linked Nodes for a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/linked_nodes/relationships/":
    delete:
      description: |-
        
        This removes associated nodes from a collection
        #### Permissions
        Any user with write permissions on this collection should be to remove nodes from this collection.
        #### Returns
        Nothing in the response body.
      operationId: collections_linked_nodes_relationships_delete
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_linked_nodes_relationshipsBody"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: null
          description: OK
      summary: Remove Nodes From Collection
      tags:
        - Collections
      x-response-schema: Collection
    get:
      description: |-
        List of all the node ids linked to the given collection.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_relationships_create
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - id: guid0
                        type: nodes
                      - id: newid
                        type: nodes
                      - id: test2
                        type: nodes
                      - id: guid4
                        type: nodes
                    links:
                      html: https://api.osf.io/v2/collections/dse23/linked_nodes/
                      self: https://api.osf.io/v2/collections/dse23/relationships/linked_nodes/
                    meta:
                      version: "2.20"
          description: OK
      summary: Give a Sparse List of Node Ids
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        This endpoint allow users to a add a node to a collection by issuing a POST request.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_relationships
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_linked_nodes_relationshipsBody"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value: null
          description: Created
      summary: Link Nodes to Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/linked_preprints/":
    get:
      description: |-
        List of all preprints linked to the given collection.
        #### Permissions
        This returns all public preprints associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_preprints_list
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          current_user_permissions: []
                          date_created: 2020-12-10T13:55:03.994648Z
                          date_last_transitioned: 2020-12-10T13:55:05.046084Z
                          date_modified: 2020-12-10T13:55:05.252565Z
                          date_published: 2020-12-10T13:55:05.046084Z
                          date_withdrawn: null
                          description: Research physical language morning consumer front population.
                          doi: 10.123/0
                          is_preprint_orphan: false
                          is_published: true
                          license_record: null
                          original_publication_date: null
                          preprint_doi_created: 2020-12-10T13:55:05.230155Z
                          public: true
                          reviews_state: accepted
                          tags: []
                          title: A Good Preprint Title
                        id: zjxhs
                        links:
                          doi: https://doi.org/10.123/0
                          html: https://osf.io/preprints/slug1/zjxhs/
                          preprint_doi: https://doi.org/None/FK2osf.io/zjxhs
                          self: https://api.osf.io/v2/preprints/zjxhs/
                        relationships:
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/bibliographic_contributors/
                                meta: {}
                          citation:
                            data:
                              id: zjxhs
                              type: preprints
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/citation/
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/files/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/identifiers/
                                meta: {}
                          license:
                            data: null
                          node:
                            links:
                              self:
                                href: https://api.osf.io/v2/preprints/zjxhs/relationships/node/
                                meta: {}
                          primary_file:
                            data:
                              id: 5fd228b8e64e1300aa99ee17
                              type: files
                            links:
                              related:
                                href: https://api.osf.io/v2/files/5fd228b8e64e1300aa99ee17/
                                meta: {}
                          provider:
                            data:
                              id: slug1
                              type: preprint-providers
                            links:
                              related:
                                href: https://api.osf.io/v2/providers/preprints/slug1/
                                meta: {}
                          requests:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/requests/
                                meta: {}
                          review_actions:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/review_actions/
                                meta: {}
                          subjects:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/zjxhs/subjects/
                                meta: {}
                        type: preprints
            links:
              examples:
                response:
                  value:
                    first: null
                    last: null
                    next: null
                    prev: null
                    self: https://api.osf.io/v2/collections/nywr6/linked_preprints/
            meta:
              examples:
                response:
                  value:
                    per_page: 10
                    total: 1
                    version: "2.20"
          description: OK
      summary: List All Linked Preprints for a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/linked_registrations/":
    get:
      description: |-
        List of all registrations linked to the given collection.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_list
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          access_requests_enabled: false
                          analytics_key: null
                          archiving: false
                          article_doi: null
                          category: project
                          collection: false
                          current_user_can_comment: true
                          current_user_is_contributor: false
                          current_user_is_contributor_or_group_member: false
                          current_user_permissions: []
                          custom_citation: ""
                          date_created: 2020-12-10T14:36:42.195364Z
                          date_modified: 2020-12-10T14:36:39.925278Z
                          date_registered: 2020-12-10T14:36:42.166193Z
                          date_withdrawn: null
                          description: Half believe though on significant.
                          embargo_end_date: null
                          embargoed: false
                          fork: false
                          node_license: null
                          pending_embargo_approval: false
                          pending_embargo_termination_approval: false
                          pending_registration_approval: false
                          pending_withdrawal: false
                          preprint: false
                          public: true
                          registered_meta: {}
                          registration: true
                          registration_responses:
                            summary: ""
                          registration_supplement: Open-Ended Registration
                          reviews_state: initial
                          tags: []
                          title: A Good Registration Title
                          wiki_enabled: true
                          withdrawal_justification: null
                          withdrawn: false
                        id: qrwhu
                        links:
                          html: https://osf.io/qrwhu/
                          self: https://api.osf.io/v2/registrations/qrwhu/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/qrwhu/relationships/institutions/
                                meta: {}
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/bibliographic_contributors/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/children/
                                meta: {}
                          citation:
                            data:
                              id: qrwhu
                              type: registrations
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/comments/?filter%5Btarget%5D=qrwhu
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/files/
                                meta: {}
                          forked_from:
                            data: null
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/identifiers/
                                meta: {}
                          implicit_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/implicit_contributors/
                                meta: {}
                          license:
                            data: null
                          linked_by_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/linked_by_nodes/
                                meta: {}
                          linked_by_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/linked_by_registrations/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/qrwhu/relationships/linked_nodes/
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/linked_registrations/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/qrwhu/relationships/linked_registrations/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/logs/
                                meta: {}
                          parent:
                            data: null
                          provider:
                            data:
                              id: osf
                              type: registration-providers
                            links:
                              related:
                                href: https://api.osf.io/v2/providers/registrations/osf/
                                meta: {}
                          region:
                            data:
                              id: us
                              type: regions
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                          registered_by:
                            data:
                              id: 9hr6c
                              type: users
                            links:
                              related:
                                href: https://api.osf.io/v2/users/9hr6c/
                                meta: {}
                          registered_from:
                            data:
                              id: 4gnbx
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/4gnbx/
                                meta: {}
                          registration_schema:
                            data:
                              id: 5fa1bb678ccd39001e96c32b
                              type: registration-schemas
                            links:
                              related:
                                href: https://api.osf.io/v2/schemas/registrations/5fa1bb678ccd39001e96c32b/
                                meta: {}
                          requests:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/requests/
                                meta: {}
                          review_actions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/actions/
                                meta: {}
                          root:
                            data:
                              id: qrwhu
                              type: registrations
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/
                                meta: {}
                          storage:
                            data:
                              id: qrwhu
                              type: nodes
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qrwhu/storage/
                                meta: {}
                          subjects:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/subjects/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/qrwhu/relationships/subjects/
                                meta: {}
                          template_node:
                            data: null
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/qrwhu/wikis/
                                meta: {}
                        type: registrations
            links:
              examples:
                response:
                  value:
                    first: null
                    last: null
                    next: null
                    prev: null
                    self: https://api.osf.io/v2/collections/nywr6/linked_registrations/
            meta:
              examples:
                response:
                  value:
                    per_page: 10
                    total: 1
                    version: "2.20"
          description: OK
      summary: List All Linked Registrations for a Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/collections/{collection_id}/linked_registrations/relationships/":
    delete:
      description: |-
        
        This removes associated registrations from a collection
        #### Permissions
        Any user with write permissions on this collection should be to remove registrations from this collection.
        #### Returns
        Nothing in the response body.
      operationId: collections_linked_registrations_relationships_delete
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_linked_registrations_relationshipsBody"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value: null
          description: OK
      summary: Remove Registrations From Collection
      tags:
        - Collections
      x-response-schema: Collection
    get:
      description: |-
        List of all the registration ids linked to the given collection.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_relationships_create
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - id: guid0
                        type: registrations
                      - id: newid
                        type: registrations
                      - id: test2
                        type: registrations
                      - id: guid4
                        type: registrations
                    links:
                      html: https://api.osf.io/v2/collections/dse23/linked_registrations/
                      self: https://api.osf.io/v2/collections/dse23/relationships/linked_registrations/
                    meta:
                      version: "2.20"
          description: OK
      summary: Give a Sparse List of Registrations Ids
      tags:
        - Collections
      x-response-schema: Collection
    post:
      description: |-
        This endpoint allow users to a add a registration to a collection by issuing a POST request.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_relationships
      parameters:
        - description: A short id for that collection
          in: path
          name: collection_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/collections_linked_registrations_relationshipsBody"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value: null
          description: Created
      summary: Link Registrations to Collection
      tags:
        - Collections
      x-response-schema: Collection
  "/comments/{comment_id}/":
    delete:
      description: |-
        Deletes a comment. This action can be undone by setting deleted to False in a comment update request.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_delete
      parameters:
        - description: The unique identifier of the comment you wish to delete.
          in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
      summary: Delete a comment
      tags:
        - Comments
    get:
      description: |-
        Retrieves the details of a comment
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested comment, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_read
      parameters:
        - description: The unique identifier of the comment you wish to retrieve.
          in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      content: comment content
                    relationships:
                      target:
                        data:
                          id: "{target_id}"
                          type: "{target_type}"
                    type: comments
                properties:
                  attributes:
                    description: The properties of the comment entity.
                    properties:
                      can_edit:
                        description: Whether or not the current user has permission to edit this comment
                        readOnly: true
                        type: boolean
                      content:
                        description: The content of the comment.
                        readOnly: false
                        type: string
                      date_created:
                        description: The time at which the comment was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the comment was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      deleted:
                        description: Whether or not the comment is deleted.
                        readOnly: true
                        type: boolean
                      has_children:
                        description: Whether or not the comment has replies.
                        readOnly: true
                        type: boolean
                      has_report:
                        description: Whether or not the comment the current user reported this as spam.
                        readOnly: true
                        type: boolean
                      is_abuse:
                        description: Whether or not the comment is flagged or confirmed spam.
                        readOnly: true
                        type: boolean
                      is_ham:
                        description: Whether or not an admin checked the legitimacy of this comment.
                        readOnly: true
                        type: boolean
                      modified:
                        description: Whether or not the comment has been edited.
                        readOnly: true
                        type: boolean
                      page:
                        description: The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
                        readOnly: true
                        type: string
                    readOnly: false
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the comment entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the comment entity.
                    properties:
                      self:
                        description: A link to the detail page for the comment.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the comment entity.
                    properties:
                      node:
                        description: A relationship to the node the comment is on.
                        format: URL
                        readOnly: true
                        type: string
                      replies:
                        description: A relationship to the replies to the comment.
                        format: URL
                        readOnly: true
                        type: string
                      reports:
                        description: A relationship to the reports connected to the comment.
                        format: URL
                        readOnly: true
                        type: string
                      target:
                        description: A relationship to the target of the comment.
                        format: URL
                        readOnly: true
                        type: string
                      user:
                        description: A relationship to the user who created the comment.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: false
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the comment entity (`comments`).
                    readOnly: true
                    type: string
                required:
                  - id
                title: Comment
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        can_edit: true
                        content: comments about things
                        date_created: 2017-02-10T20:44:03.185000
                        date_modified: 2017-02-10T20:44:03.193000
                        deleted: false
                        has_children: false
                        has_report: false
                        is_abuse: false
                        is_ham: false
                        modified: false
                        page: node
                      id: twpgrpv78d8s
                      links:
                        self: https://api.osf.io/v2/comments/twpgrpv78d8s/
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/gvuew/
                              meta: {}
                        replies:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/gvuew/comments/?filter%5Btarget%5D=twpgrpv78d8s
                              meta: {}
                        reports:
                          links:
                            related:
                              href: https://api.osf.io/v2/comments/twpgrpv78d8s/reports/
                              meta: {}
                        target:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/gvuew/
                              meta:
                                type: nodes
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/rnizy/
                              meta: {}
                      type: comments
          description: OK
      summary: Retrieve a comment
      tags:
        - Comments
      x-response-schema: Comment
    put:
      description: |-
        Updates the specified comment by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns JSON with a `data` key containing the new representation of the updated comment, if the request is successful.

        If the request is unsuccessful, JSON with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_put
      parameters:
        - description: The unique identifier of the comment you wish to update.
          in: path
          name: comment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    content: changed comment content
                  id: "{comment_id}"
                  type: comments
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update a comment
      tags:
        - Comments
  "/files/{file_id}/":
    get:
      description: |-
        Retrieves the details of a file (or folder)
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        ###Waterbutler API actions

        Files can be modified through the Waterbutler API routes found in `links` (`new_folder`, `move`, `upload`, `download`, and `delete`).

        #### Download (files)

        To download a file, issue a GET request against the download link. The response will have the Content-Disposition header set, which will will trigger a download in a browser.

        #### Create Subfolder (folders)

        You can create a subfolder of an existing folder by issuing a PUT request against the new_folder link. The ?kind=folder portion of the query parameter is already included in the new_folder link. The name of the new subfolder should be provided in the name query parameter. The response will contain a WaterButler folder entity. If a folder with that name already exists in the parent directory, the server will return a 409 Conflict error response.

        #### Upload New File (folders)


          To upload a file to a folder, issue a PUT request to the folder's upload link with the raw file data in the request body, and the kind and name query parameters set to 'file' and the desired name of the file. The response will contain a WaterButler file entity that describes the new file. If a file with the same name already exists in the folder, the server will return a 409 Conflict error response.


        #### Update Existing File (file)

        To update an existing file, issue a PUT request to the file's upload link with the raw file data in the request body and the kind query parameter set to "file". The update action will create a new version of the file. The response will contain a WaterButler file entity that describes the updated file.

        #### Rename (files, folders)

        To rename a file or folder, issue a POST request to the move link with the action body parameter set to "rename" and the rename body parameter set to the desired name. The response will contain either a folder entity or file entity with the new name.

        #### Move & Copy (files, folders)

        Move and copy actions both use the same request structure, a POST to the move url, but with different values for the action body parameters. The path parameter is also required and should be the OSF path attribute of the folder being written to. The rename and conflict parameters are optional. If you wish to change the name of the file or folder at its destination, set the rename parameter to the new name. The conflict param governs how name clashes are resolved. Possible values are replace and keep. replace is the default and will overwrite the file that already exists in the target folder. keep will attempt to keep both by adding a suffix to the new file's name until it no longer conflicts. The suffix will be ' (x)' where x is a increasing integer starting from 1. This behavior is intended to mimic that of the OS X Finder. The response will contain either a folder entity or file entity with the new name.
        Files and folders can also be moved between nodes and providers. The resource parameter is the id of the node under which the file/folder should be moved. It must agree with the path parameter, that is the path must identify a valid folder under the node identified by resource. Likewise, the provider parameter may be used to move the file/folder to another storage provider, but both the resource and path parameters must belong to a node and folder already extant on that provider. Both resource and provider default to the current node and providers.
        If a moved/copied file is overwriting an existing file, a 200 OK response will be returned. Otherwise, a 201 Created will be returned.

        #### Delete (file, folders)

        To delete a file or folder send a DELETE request to the delete link. Nothing will be returned in the response body.
      operationId: files_detail
      parameters:
        - description: The unique identifier of the file you wish to retrieve.
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file entity.
                      properties:
                        checkout:
                          description: SOON TO BE DEPRECATED, see relationships checkout.
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether or not the current user is allowed to post comments.
                          readOnly: true
                          type: boolean
                        current_version:
                          description: Version number of the file.
                          readOnly: true
                          type: integer
                        date_created:
                          description: The time at which the file was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        delete_allowed:
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                          type: boolean
                        extra:
                          description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                          readOnly: true
                          type: object
                        guid:
                          description: Global unique identifier (GUID) for this file (if one has been assigned).
                          readOnly: true
                          type: string
                        kind:
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                          type: string
                        last_touched:
                          description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Unix-style path to the file relative to the provider root.
                          readOnly: true
                          type: string
                        name:
                          description: Name of the file
                          readOnly: false
                          type: string
                        path:
                          description: The unique identifier for this file entity for this project and storage provider.
                          readOnly: true
                          type: string
                        provider:
                          description: The id of the file provider (e.g., `osfstorage`)
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                        tags:
                          description: A list of strings that describe this file, as entered by project contributors.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the file entity.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file entity.
                      properties:
                        delete:
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                          type: string
                        download:
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the page to view a file's information or a folder's contents.
                          format: URL
                          readOnly: true
                          type: string
                        move:
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                          type: string
                        new_folder:
                          description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                          type: string
                        upload:
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: Links to other entities or entity collections that have a relationship to the file entity.
                      properties:
                        checkout:
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                          type: string
                        node:
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                          type: string
                        versions:
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                      type: string
                  title: File
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        checkout: null
                        current_user_can_comment: true
                        current_version: 1
                        date_created: 2014-10-17T19:24:12.264Z
                        date_modified: 2014-10-17T19:24:12.264Z
                        delete_allowed: true
                        extra:
                          downloads: 442
                          hashes:
                            md5: 44325d4f13b09f3769ede09d7c20a82c
                            sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        guid: sejcv
                        kind: file
                        last_touched: 2015-09-18T01:11:16.328000
                        materialized_path: /OSC2012.pdf
                        name: OSC2012.pdf
                        path: /553e69248c5e4a219919ea54
                        provider: osfstorage
                        size: 216945
                        tags: []
                      id: 553e69248c5e4a219919ea54
                      links:
                        delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                      relationships:
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                              meta: {}
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        versions:
                          links:
                            related:
                              href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                              meta: {}
                      type: files
          description: OK
      summary: Retrieve a file
      tags:
        - Files
      x-response-schema: File
    patch:
      description: |-
        Updates the specified file by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns JSON with a `data` key containing the new representation of the updated file, if the request is successful.

        If the request is unsuccessful, JSON with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_patch
      parameters:
        - description: The unique identifier of the file you wish to update.
          in: path
          name: file_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    name: new file name.jpg
                  id: "{file_id}"
                  type: files
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update a file
      tags:
        - Files
  "/files/{file_id}/versions/":
    get:
      description: |-
        
        A paginated list of all file versions.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 file versions. Each resource in the array is a separate file version object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_versions
      parameters:
        - description: The unique identifier of the file from which you want to retrieve versions.
          in: path
          name: file_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file versions entity.
                      properties:
                        content_type:
                          description: MIME content-type for the file (null if unavailable).
                          readOnly: true
                          type: object
                        date_created:
                          description: The date of the file version creation, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                    id:
                      description: The identifier of the file version.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file version entity.
                      properties:
                        html:
                          description: A link to the html version page.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for a file version.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      type: object
                    type:
                      description: The type identifier of the file versions entity (`file_versions`).
                      readOnly: true
                      type: string
                  title: File Version
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          content_type: application/octet-stream
                          date_created: 2017-01-01T12:34:56.78910
                          size: 216945
                        id: "1"
                        links:
                          html: https://osf.io/ezcuj/files/osfstorage/553e69248c5e4a219919ea54?revision=1
                          self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/1/
                        type: file_versions
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all file versions
      tags:
        - Files
      x-response-schema: File Version
  "/files/{file_id}/versions/{version_id}/":
    get:
      description: |-
        Retrieves the details of a file version
        #### Returns

        Returns a JSON object with a `data` key containing the representation of the requested file, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_version_detail
      parameters:
        - description: The unique identifier of the file from which you want to retrieve versions.
          in: path
          name: file_id
          required: true
          schema:
            type: string
        - description: The file version number you want to retrieve.
          in: path
          name: version_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file versions entity.
                      properties:
                        content_type:
                          description: MIME content-type for the file (null if unavailable).
                          readOnly: true
                          type: object
                        date_created:
                          description: The date of the file version creation, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                      readOnly: true
                      type: object
                    id:
                      description: The identifier of the file version.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file version entity.
                      properties:
                        html:
                          description: A link to the html version page.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for a file version.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      type: object
                    type:
                      description: The type identifier of the file versions entity (`file_versions`).
                      readOnly: true
                      type: string
                  title: File Version
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        content_type: application/octet-stream
                        date_created: 2017-01-01T12:34:56.78910
                        size: 216945
                      id: "1"
                      links:
                        html: https://osf.io/ezcuj/files/osfstorage/553e69248c5e4a219919ea54?revision=1
                        self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/1/
                      type: file_versions
          description: OK
      summary: Retrieve a file version
      tags:
        - Files
      x-response-schema: File Version
  /institutions/:
    get:
      description: |-
        
        A paginated list of all verified institutions.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include institutions that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/?filter[id]=cos.

        Institutions may be filtered by their `id`, `name`, and `auth_url`
      operationId: institutions_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the institution entity.
                      properties:
                        auth_url:
                          description: Url used to authenticate institution specific login.
                          readOnly: true
                          type: string
                        description:
                          description: Description of the institution.
                          readOnly: true
                          type: string
                        logo_path:
                          description: Static path to the institution specific logo.
                          readOnly: true
                          type: string
                        name:
                          description: Full name of the institution.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the institution entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the institutions entity.
                      properties:
                        self:
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the institution entity.
                      properties:
                        nodes:
                          description: A relationship to the nodes affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        registrations:
                          description: A relationship to the registrations affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        users:
                          description: A relationship to the users affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                      type: string
                  title: Institution
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          auth_url: null
                          description: COS is a non-profit technology company providing free and open services to increase inclusivity and transparency of research. Find out more at <a href="https://cos.io">cos.io</a>.
                          logo_path: /static/img/institutions/shields/cos-shield.png
                          name: Center For Open Science
                        id: cos
                        links:
                          self: https://api.osf.io/v2/institutions/cos/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/users/
                                meta: {}
                        type: institutions
                    links:
                      first: null
                      last: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                      meta:
                        per_page: 10
                        total: 15
                      next: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                      prev: null
          description: OK
      summary: List all institutions
      tags:
        - Institutions
      x-response-schema: Institution
  "/institutions/{institution_id}/":
    get:
      description: |-
        Retrieves the details of an institution
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested institution, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: institutions_detail
      parameters:
        - description: The unique identifier of the institution you wish to retrieve.
          in: path
          name: institution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the institution entity.
                      properties:
                        auth_url:
                          description: Url used to authenticate institution specific login.
                          readOnly: true
                          type: string
                        description:
                          description: Description of the institution.
                          readOnly: true
                          type: string
                        logo_path:
                          description: Static path to the institution specific logo.
                          readOnly: true
                          type: string
                        name:
                          description: Full name of the institution.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the institution entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the institutions entity.
                      properties:
                        self:
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the institution entity.
                      properties:
                        nodes:
                          description: A relationship to the nodes affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        registrations:
                          description: A relationship to the registrations affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        users:
                          description: A relationship to the users affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                      type: string
                  title: Institution
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        auth_url: null
                        description: COS is a non-profit technology company providing free and open services to increase inclusivity and transparency of research. Find out more at <a href="https://cos.io">cos.io</a>.
                        logo_path: /static/img/institutions/shields/cos-shield.png
                        name: Center For Open Science
                      id: cos
                      links:
                        self: https://api.osf.io/v2/institutions/cos/
                      relationships:
                        nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/institutions/cos/nodes/
                              meta: {}
                        registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/institutions/cos/registrations/
                              meta: {}
                        users:
                          links:
                            related:
                              href: https://api.osf.io/v2/institutions/cos/users/
                              meta: {}
                      type: institutions
          description: OK
      summary: Retrieve an institution
      tags:
        - Institutions
      x-response-schema: Institution
  "/institutions/{institution_id}/nodes/":
    get:
      description: |-
        A paginated list of all nodes affiliated with an institution.
        #### Versioning
        As of version `2.2`, affiliated components (in addition to affiliated top-level projects) are returned from this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate nodes object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/nodes?filter[title]=science.

        Nodes may be filtered by their `id`, `title`, `description`, `public`, `tags`, `category`, `date_created`, `date_modified`, `root`, `parent`, `contributors`, and `preprint`
      operationId: institutions_node_list
      parameters:
        - description: The unique identifier of the institution you wish to retrieve.
          in: path
          name: institution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: true
                          current_user_permissions:
                            - read
                          date_created: 2017-02-08T18:27:00.135000
                          date_modified: 2017-02-09T14:19:23.054000
                          description: A project storing mp4 files of all the webinar videos posted to the COS youtube channel
                          fork: false
                          node_license:
                            copyright_holders:
                              - ""
                            year: "2017"
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: COS Webinar Videos
                        id: qpxv2
                        links:
                          html: https://osf.io/qpxv2/
                          self: https://api.osf.io/v2/nodes/qpxv2/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/qpxv2/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/comments/?filter%5Btarget%5D=qpxv2
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/qpxv2/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qpxv2/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: https://api.osf.io/v2/institutions/cos/nodes/?page=330
                      meta:
                        per_page: 10
                        total: 337
                      next: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                      prev: null
          description: OK
      summary: List all affiliated nodes
      tags:
        - Institutions
      x-response-schema: Node
  "/institutions/{institution_id}/registrations/":
    get:
      description: |-
        A paginated list of all registrations affiliated with an institution.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate users object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/registrations?filter[title]=science.

        Registrations may be filtered by their  `id`, `title`, `description`, `public`, `tags`, `category`, `date_created`, `date_modified`, `root`, `parent`, `contributors`, and `preprint`
      operationId: institutions_registration_list
      parameters:
        - description: The unique identifier of the institution you wish to retrieve.
          in: path
          name: institution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: true
                          current_user_permissions:
                            - read
                          date_created: 2016-05-26T14:56:27.310000
                          date_modified: 2016-12-14T20:48:58.147000
                          description: This project contains the materials and proposal for the upcoming OASPA 2016 Conference
                          fork: false
                          node_license:
                            copyright_holders:
                              - ""
                            year: "2016"
                          preprint: false
                          public: true
                          registration: true
                          tags:
                            - TOP Guidelines
                            - Open Practice Badges
                            - Registered Reports
                            - Prereg Challenge
                          title: COASPA 2016, Center for Open Science
                        id: xemzv
                        links:
                          html: https://osf.io/xemzv/
                          self: https://api.osf.io/v2/registrations/xemzv/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/xemzv/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/comments/?filter%5Btarget%5D=xemzv
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/xemzv/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/node_links/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/xemzv/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: https://api.osf.io/v2/institutions/cos/registrations/?page=3
                      meta:
                        per_page: 10
                        total: 22
                      next: https://api.osf.io/v2/institutions/cos/registrations/?page=2
                      prev: null
          description: OK
      summary: List all affiliated registrations
      tags:
        - Institutions
      x-response-schema: Registration
  "/institutions/{institution_id}/users/":
    get:
      description: |-
        A paginated list of all users affiliated with an institution.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 users. Each resource in the array is a separate users object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include users that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/users?filter[family_name]=Nosek.

        Users may be filtered by their `id`, `full_name`, `given_name`, `middle_names`, and `family_name`
      operationId: institutions_users_list
      parameters:
        - description: The unique identifier of the institution you wish to retrieve.
          in: path
          name: institution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        full_name: Casey M. Rollins
                        middle_names: Marie
                      id: "{user_id}"
                      type: users
                  properties:
                    attributes:
                      description: The properties of the user entity.
                      properties:
                        active:
                          description: Whether or not the user is an active user.
                          readOnly: true
                          type: boolean
                        date_registered:
                          description: The time at which the user registered their account, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        family_name:
                          description: The family name of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        full_name:
                          description: The full name of the user, used for display on the OSF.
                          readOnly: false
                          type: string
                        given_name:
                          description: The given name of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        locale:
                          description: The user's locale, e.g. 'en_US'.
                          readOnly: false
                          type: string
                        middle_names:
                          description: The middle names of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        suffix:
                          description: The suffix of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        timezone:
                          description: The user's timezone, e.g. 'Etc/UTC'.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - active
                        - date_registered
                        - full_name
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the user entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the user entity.
                      properties:
                        html:
                          description: A link to the user's profile page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        profile_image:
                          description: A link to the user's profile image.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the user entity.
                      properties:
                        institutions:
                          description: A link to the list of institutions the user is affiliated with.
                          readOnly: true
                          type: string
                        nodes:
                          description: A link to the list of nodes the user is a contributor to.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the user entity (`users`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: User
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          active: true
                          date_registered: 2012-05-31T05:29:01.320000
                          family_name: Nosek
                          full_name: Brian A. Nosek
                          given_name: Brian
                          locale: en_US
                          middle_names: A.
                          suffix: ""
                          timezone: America/New_York
                        id: cdi38
                        links:
                          html: https://osf.io/cdi38/
                          profile_image: https://secure.gravatar.com/avatar/37fc491096861dae49fe23ba665af56b?d=identicon
                          self: https://api.osf.io/v2/users/cdi38/
                        relationships:
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/cdi38/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/cdi38/relationships/institutions/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/cdi38/nodes/
                                meta: {}
                        type: users
                    links:
                      first: null
                      last: https://api.osf.io/v2/institutions/cos/users/?page=8
                      meta:
                        per_page: 10
                        total: 77
                      next: https://api.osf.io/v2/institutions/cos/users/?page=2
                      prev: null
          description: OK
      summary: List all affiliated users
      tags:
        - Institutions
      x-response-schema: User
  "/license/{license_id}/":
    get:
      description: |-
        Retrieves the details of a license.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested license, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: licenses_read
      parameters:
        - description: The unique identifier of the license.
          in: path
          name: license_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the license.
                    properties:
                      name:
                        description: Name of the license.
                        readOnly: true
                        type: string
                      required_fields:
                        description: Fields required for this license (provided to help front-end validators). Maps to properties on the NodeLicense model.
                        items:
                          description: Individual fields required by this license.
                          readOnly: true
                          type: string
                        readOnly: true
                        type: array
                      text:
                        description: Full text of the license.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the license.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the license.
                    properties:
                      self:
                        description: A link to the detail page for the license.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the license (`license`).
                    readOnly: true
                    type: string
                title: License
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        name: BSD 2-Clause "Simplified" License
                        required_fields:
                          - year
                          - copyrightHolders
                        text: |
                          Copyright (c) {{year}}, {{copyrightHolders}}
                          All rights reserved.

                          The full descriptive text of the License
                      id: 563c1cf88c5e4a3877f9e968
                      links:
                        self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e968/
                      type: licenses
          description: OK
      summary: Retrieve a license
      tags:
        - Licenses
      x-response-schema: License
  /licenses/:
    get:
      description: |-
        A paginated list of licenses. The returned licenses are sorted by their name.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of 10 licenses. Each resource in the array is a separate license object and contains the full representation of the license, meaning additional requests to a license's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include licenses that match your filters by utilizing the `filter` query parameter, e.g. [https://api.osf.io/v2/licenses/?filter[name]=apache](https://api.osf.io/v2/licenses/?filter[name]=apache).

        Licenses may be filtered by their `id`, and `name`.
      operationId: license_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the license.
                      properties:
                        name:
                          description: Name of the license.
                          readOnly: true
                          type: string
                        required_fields:
                          description: Fields required for this license (provided to help front-end validators). Maps to properties on the NodeLicense model.
                          items:
                            description: Individual fields required by this license.
                            readOnly: true
                            type: string
                          readOnly: true
                          type: array
                        text:
                          description: Full text of the license.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the license.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the license.
                      properties:
                        self:
                          description: A link to the detail page for the license.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the license (`license`).
                      readOnly: true
                      type: string
                  title: License
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          name: BSD 2-Clause "Simplified" License
                          required_fields:
                            - year
                            - copyrightHolders
                          text: |
                            Copyright (c) {{year}}, {{copyrightHolders}}
                            All rights reserved.

                            The full descriptive text of the License.
                        id: 563c1cf88c5e4a3877f9e968
                        links:
                          self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e968/
                        type: licenses
                    links:
                      first: ""
                      last: https://api.osf.io/v2/licenses/?page=2
                      meta:
                        per_page: 10
                        total: 16
                      next: https://api.osf.io/v2/licenses/?page=2
                      prev: ""
          description: OK
      summary: List all licenses
      tags:
        - Licenses
      x-response-schema: License
  "/logs/{log_id}/":
    get:
      description: |-
        Retrieves the details of a log.
        A log is permanent immutable record of a node's history. A log is created when a user performs one of many actions. See the [actions](#Logs_logs_actions) section for more details.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested log, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: logs_read
      parameters:
        - description: The unique identifier of the log you wish to retrieve.
          in: path
          name: log_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      action: contributor_added
                      date: 2012-05-31T05:50:32.083000
                      params:
                        contributors:
                          - active: true
                            family_name: Nosek
                            full_name: Brian A. Nosek
                            given_name: Brian
                            id: cdi38
                            middle_names: A.
                        params_node:
                          id: ezcuj
                          title: "Reproducibility Project: Psychology"
                    id: 4fc706a80b6e9118ef000122
                    links:
                      self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                    relationships:
                      node:
                        links:
                          related:
                            href: https://api.osf.io/v2/nodes/ezcuj/
                            meta: {}
                      original_node:
                        links:
                          related:
                            href: https://api.osf.io/v2/nodes/ezcuj/
                            meta: {}
                      user:
                        links:
                          related:
                            href: https://api.osf.io/v2/users/jk5cv/
                            meta: {}
                    type: logs
                properties:
                  attributes:
                    description: The properties of the log.
                    properties:
                      action:
                        description: The type of action performed on the OSF. See actions section for full list of possible actions.
                        readOnly: true
                        type: string
                      date:
                        description: The date and time at which the log was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      params:
                        description: The type of action performed on the OSF. See description for full list of possible actions.
                        properties:
                          addon:
                            description: The addon associated with the connected node.
                            readOnly: true
                            type: string
                          anonymous_link:
                            description: The view only link added to the node was anonymous.
                            readOnly: true
                            type: boolean
                          bucket:
                            description: The Amazon s3 bucket connected to the connected node.
                            readOnly: true
                            type: string
                          citation_name:
                            description: Name of citation associated with the connected node.
                            readOnly: true
                            type: string
                          contributors:
                            description: List of contributors on the connected node involved in the action represented by this node log.
                            readOnly: true
                            type: string
                          data_set:
                            description: The dataset associated with the connected node.
                            readOnly: true
                            type: string
                          destination:
                            description: A dictionary with information about the destination for the move of the item on the node associated with this log. Details include the path, url, addon, node_url and node_title.
                            readOnly: true
                            type: string
                          figshare_title:
                            description: Title of the fighshare project associated with this node log
                            readOnly: true
                            type: string
                          file:
                            description: Dictionary with information about the file involved with the log.
                            readOnly: true
                            type: string
                          filename:
                            description: Filename for the file associated with the log.
                            readOnly: true
                            type: string
                          folder:
                            description: Folder associated with the log.
                            readOnly: true
                            type: string
                          folder_name:
                            description: Name of the folder associated with the log.
                            readOnly: true
                            type: string
                          forward_url:
                            description: URL that the connected node forwards to.
                            readOnly: true
                            type: string
                          github_repo:
                            description: The github repository involved with the action represented by this node log.
                            readOnly: true
                            type: string
                          github_user:
                            description: The github user involved with the action represented by this node log.
                            readOnly: true
                            type: string
                          identifiers:
                            description: Dictionary containing the DOI and ARK ID for a preprint associated with the log.
                            readOnly: true
                            type: string
                          institution:
                            description: Dictionary containing the ID and Name of the institution associated with the log.
                            readOnly: true
                            type: string
                          kind:
                            description: Kind of the object associated with the log.
                            readOnly: true
                            type: string
                          license:
                            description: License for the associated node.
                            readOnly: true
                            type: string
                          old_page:
                            description: Old name of wiki page for a wiki rename log action.
                            readOnly: true
                            type: string
                          page:
                            description: Current name of wiki page for rename log action.
                            readOnly: true
                            type: string
                          page_id:
                            description: Primary key of the wiki page associated with the log.
                            readOnly: true
                            type: string
                          params_node:
                            description: Node that is refered to in the params of the log.
                            readOnly: true
                            type: string
                          params_project:
                            description: Project that is refered to in the params of the log.
                            readOnly: true
                            type: string
                          path:
                            description: Path for a file associated with the log.
                            readOnly: true
                            type: string
                          pointer:
                            description: A dictionary with information about the node that is linked to the associated node.
                            readOnly: true
                            type: string
                          preprint:
                            description: Preprint related to the associated node.
                            readOnly: true
                            type: string
                          preprint_provider:
                            description: Preprint provider for the associated node.
                            readOnly: true
                            type: string
                          previous_institution:
                            description: If a primary institution for the associated node is changed, this will show the previous institution.
                            readOnly: true
                            type: string
                          source:
                            description: A dictionary with information about the source of a move related event for a log. Details include the path, url, addon, node_url and node_title.
                            readOnly: true
                            type: string
                          study:
                            description: Dataverse study linked to the associated node.
                            readOnly: true
                            type: string
                          tag:
                            description: Tag associated with the associated node.
                            readOnly: true
                            type: string
                          tags:
                            description: Tags associated with the associated node.
                            readOnly: true
                            type: string
                          target:
                            description: A dictionary containing details about the target of the log. Details include the path, url, addon, node_url and node_title.
                            readOnly: true
                            type: string
                          template_node:
                            description: A dictionary containing information about the node that was used as a template for the associated node.
                            readOnly: true
                            type: string
                          title_new:
                            description: The new title for the associated node.
                            readOnly: true
                            type: string
                          title_original:
                            description: The original title for the associated node
                            readOnly: true
                            type: string
                          updated_fields:
                            description: A dictionary containing all of the fields updated on the associated node.
                            readOnly: true
                            type: string
                          urls:
                            description: Links to access information about the file associated with this log.
                            readOnly: true
                            type: string
                          version:
                            description: Version of the wiki page associated with this log.
                            readOnly: true
                            type: string
                          wiki:
                            description: A dictionary with information about the wiki page associated with the log.
                            readOnly: true
                            type: string
                        readOnly: true
                        title: Log Params
                        type: object
                    readOnly: true
                    required:
                      - action
                      - date
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the log.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the log entity.
                    properties:
                      self:
                        description: A link to the detail page for the log.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - self
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the log.
                    properties:
                      linked_node:
                        description: A relationship to the node linked to this log.
                        readOnly: true
                        type: string
                      node:
                        description: A relationship to the node associated with this log.
                        readOnly: true
                        type: string
                      original_node:
                        description: A relationship to the original node that was associated with this log, in case this log was copied from a node to a fork or registration.
                        readOnly: true
                        type: string
                      template_node:
                        description: A relationship to the node used as a template for this log.
                        readOnly: true
                        type: string
                      user:
                        description: A relationship to the user who performed the log action.
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - node
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the log (`logs`)
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                  - links
                title: Log
                type: object
          description: ""
      summary: Retrieve a log
      tags:
        - Logs
      x-response-schema: Log
  /metaschemas/:
    get:
      description: |-
        
        A paginated list of all active metaschemas.
        Metaschemas describe the supplemental questions that accompany a registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 metaschemas. Each resource in the array is a separate metaschema object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
      operationId: metaschemas_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the metaschema entity.
                      properties:
                        name:
                          description: The name of the metaschema
                          readOnly: true
                          type: string
                        schema:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: The details of the metaschema which contains the supplemental questions to accompany a registration
                          readOnly: true
                          type: object
                        schema_version:
                          description: The latest version of the schema
                          readOnly: true
                          type: integer
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the metaschema entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the metaschema entity.
                      properties:
                        self:
                          description: A link to the detail page for a metaschema.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the metaschema entity (`metaschemas`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - links
                  title: Metaschema
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          name: OSF-Standard Pre-Data Collection Registration
                          schema:
                            description: You will be asked if data collection is underway and if you have looked at your data already. You will be provided an opportunity to post other comments about your project. This registration form is not a valid submission for the Pre-registration Prize.
                            name: OSF-Standard Pre-Data Collection Registration
                            pages:
                              - id: page1
                                questions:
                                  - description: Please choose
                                    format: singleselect
                                    nav: Data Completion
                                    options:
                                      - No, data collection has not begun
                                      - Yes, data collection is underway or complete
                                    qid: datacompletion
                                    title: Has data collection begun for this project?
                                    type: choose
                                  - description: Please choose
                                    format: singleselect
                                    nav: Looked at Data
                                    options:
                                      - Yes
                                      - No
                                    qid: looked
                                    title: Have you looked at the data?
                                    type: choose
                                  - format: textarea
                                    nav: Comments
                                    qid: comments
                                    title: Other Comments
                                    type: string
                                title: OSF-Standard Pre-Data Collection Registration
                            title: OSF-Standard Pre-Data Collection Registration
                            version: 2
                          schema_version: 2
                        id: 564d31db8c5e4a7c9694b2c0
                        links:
                          self: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                        type: metaschemas
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 10
                      prev: null
                      total: 1
          description: OK
      summary: List all metaschemas
      tags:
        - Metaschemas
      x-response-schema: Metaschema
  "/metaschemas/{metaschema_id}":
    get:
      description: |-
        Retrieves the details of a given metaschema.

        Metaschemas describe the supplemental questions that accompany a registration.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested metaschema, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: metaschemas_read
      parameters:
        - description: The unique identifier of the metaschema.
          in: path
          name: metaschema_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the metaschema entity.
                    properties:
                      name:
                        description: The name of the metaschema
                        readOnly: true
                        type: string
                      schema:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: The details of the metaschema which contains the supplemental questions to accompany a registration
                        readOnly: true
                        type: object
                      schema_version:
                        description: The latest version of the schema
                        readOnly: true
                        type: integer
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the metaschema entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the metaschema entity.
                    properties:
                      self:
                        description: A link to the detail page for a metaschema.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the metaschema entity (`metaschemas`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - links
                title: Metaschema
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        name: OSF-Standard Pre-Data Collection Registration
                        schema:
                          description: You will be asked if data collection is underway and if you have looked at your data already. You will be provided an opportunity to post other comments about your project. This registration form is not a valid submission for the Pre-registration Prize.
                          name: OSF-Standard Pre-Data Collection Registration
                          pages:
                            - id: page1
                              questions:
                                - description: Please choose
                                  format: singleselect
                                  nav: Data Completion
                                  options:
                                    - No, data collection has not begun
                                    - Yes, data collection is underway or complete
                                  qid: datacompletion
                                  title: Has data collection begun for this project?
                                  type: choose
                                - description: Please choose
                                  format: singleselect
                                  nav: Looked at Data
                                  options:
                                    - Yes
                                    - No
                                  qid: looked
                                  title: Have you looked at the data?
                                  type: choose
                                - format: textarea
                                  nav: Comments
                                  qid: comments
                                  title: Other Comments
                                  type: string
                              title: OSF-Standard Pre-Data Collection Registration
                          title: OSF-Standard Pre-Data Collection Registration
                          version: 2
                        schema_version: 2
                      id: 564d31db8c5e4a7c9694b2c0
                      links:
                        self: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                      type: metaschemas
          description: OK
      summary: Retrieve a metaschema
      tags:
        - Metaschemas
      x-response-schema: Metaschema
  /nodes/:
    get:
      description: |-
        
        A paginated list of nodes, representing projects and components, on the OSF.

        The returned nodes are those which are public or which the user has access to view.

        The returned nodes are sorted by their `date_modified`, with the most recently updated nodes appearing first.

        Registrations cannot be accessed through this endpoint (use the [registrations](#tag/Registrations) endpoints instead).
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/?filter[title]=reproducibility.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: nodes_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: true
                          current_user_permissions:
                            - read
                          date_created: 2012-04-01T15:49:07.702000
                          date_modified: 2016-12-08T21:45:17.058000
                          description: ""
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags:
                            - replication
                            - reproducibility
                            - open science
                            - reproduction
                            - psychological science
                            - psychology
                            - metascience
                            - crowdsource
                          title: "Reproducibility Project: Psychology"
                        id: ezcuj
                        links:
                          html: https://osf.io/ezcuj/
                          self: https://api.osf.io/v2/nodes/ezcuj/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/ezcuj/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=ezcuj
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/ezcuj/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: https://api.osf.io/v2/nodes/?page=1954
                      meta:
                        per_page: 10
                        total: 19536
                      next: https://api.osf.io/v2/nodes/?page=2
                      prev: null
          description: OK
      summary: List all nodes
      tags:
        - Nodes
      x-response-schema: Node
    post:
      description: |-
        Creates a new node.

        On the OSF, nodes are considered **projects** or **components**. The difference between a project and a component is that a project is a top-level node, and a component is a child of a project.

        Additionally, nodes have a `category` field that includes **project** as an option. The categorization determines what icon is displayed with the node on the OSF, and helps with search organization. Projects (top-level nodes) may have a category other than project, and components (children) may have a category of **project**.
        #### Required
        Required fields for creating a node include:

        &nbsp;&nbsp;&nbsp;&nbsp`title`

        &nbsp;&nbsp;&nbsp;&nbsp`category`

        Note: Nodes default to **private** unless the `public` field is explicitly set to **true** in the request payload.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_create
      requestBody:
        $ref: "#/components/requestBodies/nodes_createBody"
      responses:
        "201":
          description: Success
      summary: Create a node
      tags:
        - Nodes
      x-response-schema: Node
  "/nodes/{node_id}/":
    delete:
      description: |-
        
        Permanently deletes a node. This action cannot be undone.
        #### Permissions
        Only project administrators may delete a node. Attempting to delete a node for which you are not an administrator will result in a **403 Forbidden** response.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_delete
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
      summary: Delete a node
      tags:
        - Nodes
    get:
      description: |-
        Retrieves the details of a given node (project or component).
        #### Permissions
        Only project contributors may retrieve the details of a private node. Attempting to retreive a private node for which you are not a contributor will result in a **403 Forbidden** response.

        Authentication is not required to view the details of a public node, as public nodes give read-only access to everyone.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      category: software
                      title: An Excellent Project Title
                    type: nodes
                properties:
                  attributes:
                    description: The properties of the node entity.
                    properties:
                      category:
                        description: The category of the node, as selected by project contributors.
                        enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        readOnly: false
                        type: string
                      collection:
                        description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                        readOnly: true
                        type: boolean
                      current_user_can_comment:
                        description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                        readOnly: true
                        type: boolean
                      current_user_permissions:
                        description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                        items:
                          type: string
                        readOnly: true
                        type: array
                      date_created:
                        description: The time at which the node was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      description:
                        description: The description of the node.
                        readOnly: false
                        type: string
                      fork:
                        description: Whether or not this node represents a fork of another node.
                        readOnly: true
                        type: boolean
                      forked_date:
                        description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      node_license:
                        description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                        readOnly: false
                        type: string
                      preprint:
                        description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                        readOnly: true
                        type: boolean
                      public:
                        description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                        readOnly: false
                        type: boolean
                      registration:
                        description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                        readOnly: true
                        type: boolean
                      tags:
                        description: A list of strings that describe this node, as entered by project contributors.
                        items:
                          type: string
                        readOnly: false
                        type: array
                      template_from:
                        description: The unique ID of the node from which this node was templated, if this node was created from a template.
                        readOnly: false
                        type: string
                      title:
                        description: The title of the node.
                        readOnly: false
                        type: string
                    readOnly: false
                    required:
                      - title
                      - category
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the node entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the node entity.
                    properties:
                      html:
                        description: A link to the node's page on the OSF.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the canonical API endpoint of this node.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the node entity.
                    properties:
                      affiliated_institutions:
                        description: A link to the list of institutions this node is affiliated with.
                        readOnly: true
                        type: string
                      children:
                        description: A link to the list of this node's children (components).
                        readOnly: true
                        type: string
                      citation:
                        description: A link to the citation details of this node.
                        readOnly: true
                        type: string
                      comments:
                        description: A link to the list of comments on this node.
                        readOnly: true
                        type: string
                      contributors:
                        description: A link to the list of contributors on this node.
                        readOnly: true
                        type: string
                      draft_registrations:
                        description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                        readOnly: true
                        type: string
                      files:
                        description: A link to the list of storage providers that have been enabled on this node.
                        readOnly: true
                        type: string
                      forked_from:
                        description: A link to the node which this node was forked from, if this node is a fork.
                        readOnly: true
                        type: string
                      forks:
                        description: A link to the list of nodes that are forks of this node.
                        readOnly: true
                        type: string
                      identifiers:
                        description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                        readOnly: true
                        type: string
                      license:
                        description: A link to the license that has been applied to this node.
                        readOnly: true
                        type: string
                      linked_nodes:
                        description: A link to the list of nodes that are linked to the current node.
                        readOnly: true
                        type: string
                      logs:
                        description: A link to the list of log actions pertaining to this node.
                        readOnly: true
                        type: string
                      node_links:
                        description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                        readOnly: true
                        type: string
                      parent:
                        description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                        readOnly: true
                        type: string
                      preprints:
                        description: A link to the list of preprints that this node relates to.
                        readOnly: true
                        type: string
                      registrations:
                        description: A link to the list of registrations that have been created from this node.
                        readOnly: true
                        type: string
                      root:
                        description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                        readOnly: true
                        type: string
                      template_node:
                        description: A link to the node that the current node was templated from, if the current node was created from a template.
                        readOnly: true
                        type: string
                      view_only_links:
                        description: A link to the list of view only links that have been created for this node.
                        readOnly: true
                        type: string
                      wikis:
                        description: A link to the list of wiki pages for this node.
                        readOnly: true
                        type: string
                    readOnly: false
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the node entity (`nodes`).
                    readOnly: false
                    type: string
                required:
                  - type
                  - attributes
                title: Node
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        category: project
                        collection: false
                        current_user_can_comment: true
                        current_user_permissions:
                          - read
                        date_created: 2013-10-08T23:31:56.153000
                        date_modified: 2017-01-18T20:46:11.076000
                        description: We are conducting a study to investigate the replicability of cancer biology studies. Selected results from a substantial number of high-profile papers in the field of cancer biology published between 2010-2012 are being replicated by the Science Exchange network.
                        fork: false
                        node_license: null
                        preprint: false
                        public: true
                        registration: false
                        tags:
                          - cancer biology
                          - reproducibility
                          - replication
                          - open science
                        title: "Reproducibility Project: Cancer Biology"
                      id: e81xl
                      links:
                        html: https://osf.io/e81xl/
                        self: https://api.osf.io/v2/nodes/e81xl/
                      relationships:
                        affiliated_institutions:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/institutions/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/e81xl/relationships/institutions/
                              meta: {}
                        children:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/children/
                              meta: {}
                        citation:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/citation/
                              meta: {}
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/comments/?filter%5Btarget%5D=e81xl
                              meta: {}
                        contributors:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/contributors/
                              meta: {}
                        draft_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/draft_registrations/
                              meta: {}
                        files:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/files/
                              meta: {}
                        forks:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/forks/
                              meta: {}
                        identifiers:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/identifiers/
                              meta: {}
                        linked_nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/linked_nodes/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/e81xl/relationships/linked_nodes/
                              meta: {}
                        logs:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/logs/
                              meta: {}
                        node_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/node_links/
                              meta: {}
                        preprints:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/preprints/
                              meta: {}
                        registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/registrations/
                              meta: {}
                        root:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/
                              meta: {}
                        view_only_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/view_only_links/
                              meta: {}
                        wikis:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/e81xl/wikis/
                              meta: {}
                      type: nodes
          description: OK
      summary: Retrieve a node
      tags:
        - Nodes
      x-response-schema: Node
    patch:
      description: |-
        Updates a node by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Nodes can be updated with either a **PUT** or **PATCH** request. The `title` and `category` fields are mandatory in a **PUT** request, and optional in a **PATCH**.
        #### Permissions
        Only write contributors may update a node. Attempting to update a node for which you do not have write access will result in a **403 Forbidden** response.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_partial_update
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    description: An updated abstract.
                    public: true
                    tags:
                      - cancer biology
                      - reproducibility
                  id: "{node_id}"
                  type: nodes
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update a node
      tags:
        - Nodes
      x-response-schema: Node
  "/nodes/{node_id}/addons/":
    get:
      description: |-
        
        A paginated list of addons connected to the given node or project.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of at most 10 addon objects. Each resource in the array is a separate addon object and contains the full representation of the addon, meaning additional requests to a addon's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_addons_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the addon entity.
                      properties:
                        categories:
                          description: List of categories this addon belongs to.
                          items:
                            enum:
                              - documentation
                              - storage
                              - bibliography
                              - other
                              - security
                              - citations
                            type: string
                          readOnly: true
                          type: array
                        description:
                          description: The description of the service provider.
                          readOnly: true
                          type: string
                        name:
                          description: The name of the third-party service provider.
                          readOnly: true
                          type: string
                        url:
                          description: The URL to the third-party service provider.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the addon entity.
                      readOnly: true
                      type: string
                    type:
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                      type: string
                  title: Addon
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          configured: false
                          external_account_id: null
                          folder_id: null
                          folder_path: null
                          node_has_auth: false
                        id: <provider_id>
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/addons/<provider_id>/
                        type: node_addons
                      - attributes:
                          configured: false
                          external_account_id: null
                          folder_id: null
                          folder_path: null
                          node_has_auth: false
                        id: <another_provider_id>
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/addons/<another_provider_id>/
                        type: node_addons
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all addons
      tags:
        - Nodes
      x-response-schema: Addon
  "/nodes/{node_id}/addons/{provider}/":
    get:
      description: |-
        Retrieve details of an individual addon connected to this node.
        #### Permissions
        NodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.
        Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.
        #### Returns
        Returns a JSON object with a `data` key containing the details of the requested addon, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_addon_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the node addon entity.
                    properties:
                      configured:
                        description: Whether or not this node has been configured with an addon folder.
                        readOnly: true
                        type: boolean
                      enabled:
                        description: Whether or not this node has a NodeSettings object associated with it.
                        readOnly: true
                        type: boolean
                      external_account_id:
                        description: The ID of the associated node addon account, if any.
                        readOnly: true
                        type: string
                      folder_id:
                        description: The ID of the linked folder from the addon provider.
                        readOnly: true
                        type: string
                      folder_path:
                        description: The folder path of the linked folder from the addon provider. Google Drive specific
                        readOnly: true
                        type: string
                      label:
                        description: A label specific to the addon provider.
                        readOnly: true
                        type: string
                      node_has_auth:
                        description: Whether or not this node is fully authorized to use this node addon.
                        readOnly: true
                        type: boolean
                      url:
                        description: An external link specific to the addon provider.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the node addon entity.
                    properties:
                      self:
                        description: A link to the the canonical API endpoint for this node addon.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - self
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the node addon entity (`node_addons`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                title: Node Addon
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        configured: false
                        external_account_id: null
                        folder_id: null
                        folder_path: null
                        node_has_auth: false
                      id: box
                      links:
                        self: http://api.osf.io/v2/nodes/gaz5n/addons/box/
                      type: node_addons
          description: OK
      summary: Retrieve an addon
      tags:
        - Nodes
      x-response-schema: Addon
    patch:
      description: |-
        Updates a node addon by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Node addon can be updated with either a **PUT** or **PATCH** request. The `external_account_id`, `enabled`, and `folder_id` fields are mandatory in a **PUT**, and optional in **PATCH**. Non-string values will be accepted and stringified, however we make no promises about the stringification output.

        To delete or deauthorize a node addon, issue a **PUT** with all fields set to `null` or `False`, or a **PATCH** with enabled set `False`.
        #### Permissions
        NodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.
        Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.

        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node addon, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_node_addon_update
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon.
          in: path
          name: provider
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    external_account_id: "{account_id}"
                    folder_id: "{folder_id}"
                    folder_path: "{folder_path}"
                    label: "{label}"
                    url: "{url}"
                  id: "{provider}"
                  type: node_addons
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update an addon
      tags:
        - Nodes
  "/nodes/{node_id}/addons/{provider}/folders/":
    get:
      description: |-
        
        A paginated list of folders retrieved from the associated third-party (provider) service.
        #### Permissions
        Folders are visible only to the user that authorized the addon.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of addon folder objects. Each resource in the array is a separate addon folder object and contains the full representation of the addon folder, meaning additional requests to a addon folder's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_addons_folders_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the provider
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the addon entity.
                      properties:
                        categories:
                          description: List of categories this addon belongs to.
                          items:
                            enum:
                              - documentation
                              - storage
                              - bibliography
                              - other
                              - security
                              - citations
                            type: string
                          readOnly: true
                          type: array
                        description:
                          description: The description of the service provider.
                          readOnly: true
                          type: string
                        name:
                          description: The name of the third-party service provider.
                          readOnly: true
                          type: string
                        url:
                          description: The URL to the third-party service provider.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the addon entity.
                      readOnly: true
                      type: string
                    type:
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                      type: string
                  title: Addon
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          folder_id: /
                          kind: folder
                          name: / ()
                          path: /
                          provider: <provider_id>
                        id: /
                        links:
                          children: https://api.osf.io/v2/nodes/<node_id>/addons/<provider_id>/folders/?path=/&id=/
                          root: https://api.osf.io/v2/nodes/<node_id>/addons/<provider_id>/folders/
                        type: node_addon_folders
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 1000
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all addon folders
      tags:
        - Nodes
      x-response-schema: Addon Folder
  "/nodes/{node_id}/children/":
    get:
      description: |-
        
        A paginated list of the next level child nodes for the given node. The returned nodes are sorted by their `date_modified`, with the most recently updated child nodes appearing first.

        The list will include child nodes that are public, as well as child nodes that are private, if the authenticated user has permission to view them.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 child nodes. If the given node has zero child nodes, the `data` key will contain an empty array. Each resource in the array is a separate node object and contains the full representation of the child node, meaning additional requests to the child node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/children/?filter[title]=reproducibility.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: nodes_children_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: communication
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2015-07-20T17:42:16.496000
                          date_modified: 2016-11-02T21:25:12.572000
                          description: Reproducibility is a defining feature of science, but the extent to which it characterizes current research is unknown. We conducted replications of 100 experimental and correlational studies published in three psychology journals using high-powered designs and original materials when available. Replication effects were half the magnitude of original effects, representing a substantial decline. Ninety-seven percent of original studies had statistically significant results. Thirty-six percent of replications had statistically significant results; 47% of original effect sizes were in the 95% confidence interval of the replication effect size; 39% of effects were subjectively rated to have replicated the original result; and if no bias in original results is assumed, combining original and replication results left 68% with statistically significant effects. Correlational tests suggest that replication success was better predicted by the strength of original evidence than by characteristics of the original and replication teams.
                          fork: false
                          node_license: null
                          preprint: true
                          public: true
                          registration: false
                          tags:
                            - replication
                            - reproducibility
                            - effect size
                          title: Estimating the Reproducibility of Psychological Science
                        id: ezum7
                        links:
                          html: https://osf.io/ezum7/
                          self: https://api.osf.io/v2/nodes/ezum7/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/ezum7/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/comments/?filter%5Btarget%5D=ezum7
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/ezum7/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/node_links/
                                meta: {}
                          parent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezum7/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: https://api.osf.io/v2/nodes/ezcuj/children/?page=5
                      meta:
                        per_page: 10
                        total: 49
                      next: https://api.osf.io/v2/nodes/ezcuj/children/?page=2
                      prev: null
          description: OK
      summary: List all child nodes
      tags:
        - Nodes
      x-response-schema: Node
    post:
      description: |-
        Creates a new child node.

        Note: Creating a child node via this endpoint will function the same as creating a node via the node list endpoint, but the child node will have the given node set as its parent.
        #### Permissions
        Only write contributors may create children nodes.
        #### Required
        Required fields for creating a node include:

        &nbsp;&nbsp;&nbsp;&nbsp`title`

        &nbsp;&nbsp;&nbsp;&nbsp`category`

        Note: nodes default to **private** unless the `public` field is explicitly set to **true** in the request payload.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_children_create
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_createBody"
      responses:
        "201":
          description: Created
      summary: Create a child node
      tags:
        - Nodes
      x-response-schema: Node
  "/nodes/{node_id}/citation/":
    get:
      description: |-
        The citation details for a node, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the node citation.
      operationId: nodes_citation_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation entity.
                    properties:
                      author:
                        description: The list of bibliographic authors, represented as dictionaries of their given and family names, for the entitiy being cited.
                        readOnly: true
                        type: string
                      doi:
                        description: The DOI for the entity being cited, if one exists.
                        readOnly: true
                        type: string
                      publisher:
                        description: The publisher of the entity being cited. For nodes and registrations, the publisher is the 'Open Science Framework'. For preprints, the publisher is the same as the preprint provider.
                        readOnly: true
                        type: string
                      title:
                        description: The title of the entity being cited.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the entity being cited.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the citation entity.
                    properties:
                      self:
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the citation entity (either `node-citation`, `preprint-citation`, or `registration-citation`).
                    readOnly: false
                    type: string
                title: Citation Detail
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        author:
                          - family: Errington
                            given: Timothy M
                          - family: Vasilevsky
                            given: Nicole
                          - family: Haendel
                            given: Melissa A
                        publisher: Open Science Framework
                        title: Identification Analysis of RP:CB
                        type: webpage
                      id: bg4di
                      links:
                        self: osf.io/bg4di
                      type: node-citation
          description: OK
      summary: Retrieve citation details
      tags:
        - Nodes
      x-response-schema: Citation Detail
  "/nodes/{node_id}/citation/{style_id}/":
    get:
      description: |-
        The citation for a node in a specific style.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the node citation, in the requested style.
      operationId: nodes_citation_read
      parameters:
        - description: The unique identifier of the citation style.
          in: path
          name: style_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation style entity.
                    properties:
                      citation:
                        description: The complete entity citation in the requested style.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the citation style, e.g. APA.
                    readOnly: true
                    type: string
                  type:
                    description: The type identifier of the citation style entity (`styled-citations`).
                    readOnly: false
                    type: string
                title: Styled Citation
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        citation: "Aarts, A. A., Anderson, C. J., Anderson, J., van Assen, M. A. L. M., Attridge, P. R., Attwood, A. S., … Grange, J. (2016, December 8). Reproducibility Project: Psychology. Retrieved from osf.io/ezcuj"
                      id: apa
                      links: {}
                      type: styled-citations
          description: OK
      summary: Retrieve a styled citation
      tags:
        - Nodes
      x-response-schema: Styled Citation
  "/nodes/{node_id}/comments/":
    get:
      description: |-
        
        A paginated list of comments related to a given node.

        The returned comments are sorted by their creation date, with the most recent comments appearing first.
        #### Permissions
        Comments on public nodes are given read-only access to everyone.

        If the node comment-level is `private`, only contributors have permission to comment.

        If the comment-level is `public`, any logged-in OSF user can comment.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include comments that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/comments/?filter[target_id]=jg7sezmdnt93

        Nodes may be filtered by their `deleted`, `target_id`, `date_created`, `date_modified`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting `true` or `false` in the query will cause the match to fail.
      operationId: nodes_comments_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        content: comment content
                      relationships:
                        target:
                          data:
                            id: "{target_id}"
                            type: "{target_type}"
                      type: comments
                  properties:
                    attributes:
                      description: The properties of the comment entity.
                      properties:
                        can_edit:
                          description: Whether or not the current user has permission to edit this comment
                          readOnly: true
                          type: boolean
                        content:
                          description: The content of the comment.
                          readOnly: false
                          type: string
                        date_created:
                          description: The time at which the comment was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the comment was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        deleted:
                          description: Whether or not the comment is deleted.
                          readOnly: true
                          type: boolean
                        has_children:
                          description: Whether or not the comment has replies.
                          readOnly: true
                          type: boolean
                        has_report:
                          description: Whether or not the comment the current user reported this as spam.
                          readOnly: true
                          type: boolean
                        is_abuse:
                          description: Whether or not the comment is flagged or confirmed spam.
                          readOnly: true
                          type: boolean
                        is_ham:
                          description: Whether or not an admin checked the legitimacy of this comment.
                          readOnly: true
                          type: boolean
                        modified:
                          description: Whether or not the comment has been edited.
                          readOnly: true
                          type: boolean
                        page:
                          description: The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the comment entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the comment entity.
                      properties:
                        self:
                          description: A link to the detail page for the comment.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the comment entity.
                      properties:
                        node:
                          description: A relationship to the node the comment is on.
                          format: URL
                          readOnly: true
                          type: string
                        replies:
                          description: A relationship to the replies to the comment.
                          format: URL
                          readOnly: true
                          type: string
                        reports:
                          description: A relationship to the reports connected to the comment.
                          format: URL
                          readOnly: true
                          type: string
                        target:
                          description: A relationship to the target of the comment.
                          format: URL
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the user who created the comment.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the comment entity (`comments`).
                      readOnly: true
                      type: string
                  required:
                    - id
                  title: Comment
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          can_edit: false
                          content: |-
                            We have published a Bayesian reanalysis of this project at PLOS ONE: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0149794

                            I explain some of the context on my blog: http://alexanderetz.com/2016/02/26/the-bayesian-rpp-take-2/

                            Please note that the analysis we use in this paper is very different from the analysis used in the blog I posted in the previous comment, so the results are different as well.
                          date_created: 2016-02-27T13:50:24.240000
                          date_modified: 2016-04-01T04:45:44.123000
                          deleted: false
                          has_children: false
                          has_report: false
                          is_abuse: false
                          is_ham: false
                          modified: false
                          page: node
                        id: jg7sezmdnt93
                        links:
                          self: https://api.osf.io/v2/comments/jg7sezmdnt93/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          replies:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=jg7sezmdnt93
                                meta: {}
                          reports:
                            links:
                              related:
                                href: https://api.osf.io/v2/comments/jg7sezmdnt93/reports/
                                meta: {}
                          target:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta:
                                  type: nodes
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/6yc8z/
                                meta: {}
                        type: comments
                      - attributes:
                          can_edit: false
                          content: In this blog http://wp.me/p4sgtg-o6 I conduct a Bayesian Re-analysis of the Reproducibility Project that gives a graded measure of replication success. In an attempt to avoid dichotomous success/fail replication outcomes, I calculate a continous outcome (Bayes factor) that answers the question, does the replication result fit more with the original reported effect or a null effect? Many replications are strong successes, many are strong failures, and there are many that lie somewhere in between.
                          date_created: 2015-08-30T14:50:21.093000
                          date_modified: 2016-04-01T04:45:37.437000
                          deleted: false
                          has_children: false
                          has_report: false
                          is_abuse: false
                          is_ham: false
                          modified: null
                          page: node
                        id: 23pk9
                        links:
                          self: https://api.osf.io/v2/comments/23pk9/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          replies:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=23pk9
                                meta: {}
                          reports:
                            links:
                              related:
                                href: https://api.osf.io/v2/comments/23pk9/reports/
                                meta: {}
                          target:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta:
                                  type: nodes
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/6yc8z/
                                meta: {}
                        type: comments
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all comments
      tags:
        - Nodes
      x-response-schema: Comment
    post:
      description: |-
        Create a comment on a given node overview page or a reply to a comment on that node.

        To create a comment on the node overview page, the target `type` would be "nodes" and the target `id` would be the node `id`.

        To reply to a comment on this node, the target `type` would be "comments" and the target `id` would be the `id` of the comment to reply to.
        ####Required
        A relationship object with a `data` key, containing the target (`comments` or `nodes`) type and a target `id` is required.
        In addition, the `content` attribute describing the relationship between the node and the comment is required.
        #### Returns
        Returns a JSON object with a data key containing the representation of the new comment, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_comment_create
      parameters:
        - description: The unique identifier of the node you want to comment on.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    content: comment content
                  relationships:
                    target:
                      data:
                        id: "{target_id}"
                        type: "{target_type}"
                  type: comments
              properties:
                attributes:
                  description: The properties of the comment entity.
                  properties:
                    can_edit:
                      description: Whether or not the current user has permission to edit this comment
                      readOnly: true
                      type: boolean
                    content:
                      description: The content of the comment.
                      readOnly: false
                      type: string
                    date_created:
                      description: The time at which the comment was created, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    date_modified:
                      description: The time at which the comment was last modified, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    deleted:
                      description: Whether or not the comment is deleted.
                      readOnly: true
                      type: boolean
                    has_children:
                      description: Whether or not the comment has replies.
                      readOnly: true
                      type: boolean
                    has_report:
                      description: Whether or not the comment the current user reported this as spam.
                      readOnly: true
                      type: boolean
                    is_abuse:
                      description: Whether or not the comment is flagged or confirmed spam.
                      readOnly: true
                      type: boolean
                    is_ham:
                      description: Whether or not an admin checked the legitimacy of this comment.
                      readOnly: true
                      type: boolean
                    modified:
                      description: Whether or not the comment has been edited.
                      readOnly: true
                      type: boolean
                    page:
                      description: The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
                      readOnly: true
                      type: string
                  readOnly: false
                  title: Attributes
                  type: object
                id:
                  description: The identifier of the comment entity.
                  readOnly: true
                  type: string
                links:
                  description: URLs to alternative representations of the comment entity.
                  properties:
                    self:
                      description: A link to the detail page for the comment.
                      format: URL
                      readOnly: true
                      type: string
                  readOnly: true
                  title: Links
                  type: object
                relationships:
                  description: URLs to other entities or entity collections that have a relationship to the comment entity.
                  properties:
                    node:
                      description: A relationship to the node the comment is on.
                      format: URL
                      readOnly: true
                      type: string
                    replies:
                      description: A relationship to the replies to the comment.
                      format: URL
                      readOnly: true
                      type: string
                    reports:
                      description: A relationship to the reports connected to the comment.
                      format: URL
                      readOnly: true
                      type: string
                    target:
                      description: A relationship to the target of the comment.
                      format: URL
                      readOnly: true
                      type: string
                    user:
                      description: A relationship to the user who created the comment.
                      format: URL
                      readOnly: true
                      type: string
                  readOnly: false
                  title: Relationships
                  type: object
                type:
                  description: The type identifier of the comment entity (`comments`).
                  readOnly: true
                  type: string
              required:
                - id
              title: Comment
              type: object
        required: true
      responses:
        "201":
          description: Success
      summary: Create a comment
      tags:
        - Nodes
      x-response-schema: Comment
  "/nodes/{node_id}/contributors/":
    get:
      description: |-
        A paginated list of the node's contributors, sorted by their index.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 contributors. Each resource in the array contains the full representation of the contributor, meaning additional requests to a contributor's detail view are not necessary. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/y9jdt/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: nodes_contributors_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        user:
                          data:
                            id: "{user_id}"
                            type: users
                      type: contributors
                  properties:
                    attributes:
                      description: The properties of the contributor entity.
                      properties:
                        bibliographic:
                          description: Whether or not the contributor will be included in citations for the node. The default value is true.
                          readOnly: false
                          type: boolean
                        index:
                          description: The position of this contributor in the list of project contributors and in project citations.
                          readOnly: false
                          type: integer
                        permission:
                          description: The permission level of the contributor. The default value is 'write'.
                          enum:
                            - read
                            - write
                            - admin
                          readOnly: false
                          type: string
                        unregistered_contributor:
                          description: The assigned name of the contributor if the contributor has not yet claimed their account.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the contributor entity. Contributor identifiers have the form {node_id}-{user_id}.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the contributor entity.
                      properties:
                        self:
                          description: A link to the the canonical API endpoint for the contributor.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the contributor entity.
                      properties:
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                      type: string
                  required:
                    - type
                    - relationships
                  title: Contributor
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          bibliographic: true
                          index: 0
                          permission: admin
                          unregistered_contributor: null
                        embeds:
                          users:
                            data:
                              attributes:
                                active: true
                                date_registered: 2014-03-18T19:11:57.252000
                                family_name: Geiger
                                full_name: Brian J. Geiger
                                given_name: Brian
                                locale: en_us
                                middle_names: J.
                                suffix: ""
                                timezone: America/New_York
                              id: typ46
                              links:
                                html: https://osf.io/typ46/
                                profile_image: https://secure.gravatar.com/avatar/3dd8757ba100b8406413706886243811?d=identicon
                                self: https://api.osf.io/v2/users/typ46/
                              relationships:
                                institutions:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/users/typ46/institutions/
                                      meta: {}
                                    self:
                                      href: https://api.osf.io/v2/users/typ46/relationships/institutions/
                                      meta: {}
                                nodes:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/users/typ46/nodes/
                                      meta: {}
                              type: users
                        id: y9jdt-typ46
                        links:
                          self: https://api.osf.io/v2/nodes/y9jdt/contributors/typ46/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/y9jdt/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/typ46/
                                meta: {}
                        type: contributors
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 9
                        total_bibliographic: 1
                      next: null
                      prev: null
          description: OK
      summary: List all contributors
      tags:
        - Nodes
      x-response-schema: Contributor
    post:
      description: |-
        Adds a contributor to a node, effectively creating a relationship between the node and a user.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic" contributors. From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Permissions
        Only project administrators can add contributors to a node.
        #### Required
        A relationship object with a `data` key, containing the `users` type and valid user ID is required.

        All attributes describing the relationship between the node and the user are optional.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the new contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_create
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_contributors_createBody"
      responses:
        "201":
          description: Success
      summary: Create a contributor
      tags:
        - Nodes
      x-response-schema: Contributor
  "/nodes/{node_id}/contributors/{user_id}/":
    delete:
      description: |-
        Removes a contributor from a node. This request only removes the relationship between the node and the user, it does not delete the user itself.

        A node must always have at least one admin, and attempting to remove the only admin from a node will result in a **400 Bad Request** response.
        #### Permissions
        A user can remove themselves as a node contributor. Otherwise, only project administrators can remove contributors.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_delete
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
      summary: Delete a contributor
      tags:
        - Nodes
    get:
      description: |-
        Retrieves the details of a given contributor.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        user:
                          data:
                            id: "{user_id}"
                            type: users
                      type: contributors
                  properties:
                    attributes:
                      description: The properties of the contributor entity.
                      properties:
                        bibliographic:
                          description: Whether or not the contributor will be included in citations for the node. The default value is true.
                          readOnly: false
                          type: boolean
                        index:
                          description: The position of this contributor in the list of project contributors and in project citations.
                          readOnly: false
                          type: integer
                        permission:
                          description: The permission level of the contributor. The default value is 'write'.
                          enum:
                            - read
                            - write
                            - admin
                          readOnly: false
                          type: string
                        unregistered_contributor:
                          description: The assigned name of the contributor if the contributor has not yet claimed their account.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the contributor entity. Contributor identifiers have the form {node_id}-{user_id}.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the contributor entity.
                      properties:
                        self:
                          description: A link to the the canonical API endpoint for the contributor.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the contributor entity.
                      properties:
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                      type: string
                  required:
                    - type
                    - relationships
                  title: Contributor
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        bibliographic: true
                        index: 0
                        permission: admin
                        unregistered_contributor: null
                      embeds:
                        users:
                          data:
                            attributes:
                              active: true
                              date_registered: 2014-03-18T19:11:57.252000
                              family_name: Geiger
                              full_name: Brian J. Geiger
                              given_name: Brian
                              locale: en_us
                              middle_names: J.
                              suffix: ""
                              timezone: America/New_York
                            id: typ46
                            links:
                              html: https://osf.io/typ46/
                              profile_image: https://secure.gravatar.com/avatar/3dd8757ba100b8406413706886243811?d=identicon
                              self: https://api.osf.io/v2/users/typ46/
                            relationships:
                              institutions:
                                links:
                                  related:
                                    href: https://api.osf.io/v2/users/typ46/institutions/
                                    meta: {}
                                  self:
                                    href: https://api.osf.io/v2/users/typ46/relationships/institutions/
                                    meta: {}
                              nodes:
                                links:
                                  related:
                                    href: https://api.osf.io/v2/users/typ46/nodes/
                                    meta: {}
                            type: users
                      id: y9jdt-typ46
                      links:
                        self: https://api.osf.io/v2/nodes/y9jdt/contributors/typ46/
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/y9jdt/
                              meta: {}
                        users:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/typ46/
                              meta: {}
                      type: contributors
          description: OK
      summary: Retrieve a contributor
      tags:
        - Nodes
      x-response-schema: Contributor
    patch:
      description: |-
        Updates a contributor by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Contributors can be updated with either a **PUT** or **PATCH** request. Since this endpoint has no mandatory attributes, PUT and PATCH are functionally the same.
        #### Permissions
        Only project administrators can update the contributors on a node.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        If the given user is not already in the contributor list, a 404 Not Found error will be returned. A node must always have at least one admin, and any attempt to downgrade the permissions of a sole admin will result in a 400 Bad Request error.
      operationId: nodes_contributors_partial_update
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_contributors_createBody"
      responses:
        "200":
          description: OK
      summary: Update a contributor
      tags:
        - Nodes
      x-response-schema: Contributor
  "/nodes/{node_id}/draft_registrations/":
    get:
      description: |-
        A paginated list of all of the draft registrations of a given node.

        Draft registrations contain the supplemental registration questions that accompany a registration. A registration is a frozen version of the project that can never be edited or deleted, but can be withdrawn.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view draft registrations.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 draft registrations. Each resource in the array is a separate draft registration object and contains the full representation of the draft registration, meaning additional requests to a draft registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_draft_registrations_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        registration_supplement: "{schema_id}"
                      type: draft_registrations
                  properties:
                    attributes:
                      description: The properties of the draft registration entity.
                      properties:
                        datetime_initiated:
                          description: The time at which the draft registration was first initiated, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        datetime_updated:
                          description: The time at which the draft registration was last updated, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        registration_metadata:
                          description: A dictionary of question IDs and responses from the registration schema.
                          readOnly: false
                          type: string
                        registration_supplement:
                          description: The ID of an active registration schema that this registration will conform to.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - datetime_initiated
                        - datetime_updated
                        - registration_supplement
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the draft registration entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the draft registration entity.
                      properties:
                        html:
                          description: A link to the draft registration's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - html
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the draft registration entity.
                      properties:
                        branched_from:
                          description: A link to the node that this draft registration was created from.
                          readOnly: true
                          type: string
                        initiator:
                          description: A link to the user who initiated the draft registration.
                          readOnly: true
                          type: string
                        registration_schema:
                          description: A link to the detailed registration schema that this draft conforms to.
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - branched_from
                        - initiator
                        - registration_schema
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the draft registration entity (`draft_registrations`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Draft Registration
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          datetime_initiated: ""
                          datetime_updated: ""
                          registration_metadata: {}
                          registration_supplement: ""
                        id: ""
                        links:
                          html: ""
                        relationships:
                          branched_from:
                            links:
                              related:
                                href: ""
                                meta: {}
                          initiator:
                            links:
                              related:
                                href: ""
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: ""
                                meta: {}
                        type: draft_registrations
                    links:
                      first: ""
                      last: ""
                      meta:
                        per_page: 10
                        total: ""
                      next: ""
                      prev: ""
          description: OK
      summary: List all draft registrations
      tags:
        - Nodes
      x-response-schema: Draft Registration
    post:
      description: |-
        Initiate a draft registration of the current node.
        Draft registrations contain the supplemental registration questions that accompany a registration. A registration is a frozen version of the project that can never be edited or deleted, but can be withdrawn.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view create registrations.
        #### Required
        Required fields for creating a draft registration include:

        &nbsp;&nbsp;&nbsp;&nbsp`registration_supplement`
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_create
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_draft_registrations_createBody"
      responses:
        "201":
          description: Created
      summary: Create a draft registration
      tags:
        - Nodes
      x-response-schema: Draft Registration
  "/nodes/{node_id}/draft_registrations/{draft_id}/":
    delete:
      description: |-
        Permanently deletes a draft registration. A draft that has already been registered cannot be deleted.
        #### Permissions
        Only project administrators may delete draft registrations.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: nodes_draft_registrations_delete
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the draft registration.
          in: path
          name: draft_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Delete a draft registration
      tags:
        - Nodes
    get:
      description: |-
        Retrieve the details of a given draft registration.
        Draft registrations contain the supplemental registration questions that accompany a registration. A registration is a frozen version of the project that can never be edited or deleted, but can be withdrawn.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the draft registration.
          in: path
          name: draft_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      registration_supplement: "{schema_id}"
                    type: draft_registrations
                properties:
                  attributes:
                    description: The properties of the draft registration entity.
                    properties:
                      datetime_initiated:
                        description: The time at which the draft registration was first initiated, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      datetime_updated:
                        description: The time at which the draft registration was last updated, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      registration_metadata:
                        description: A dictionary of question IDs and responses from the registration schema.
                        readOnly: false
                        type: string
                      registration_supplement:
                        description: The ID of an active registration schema that this registration will conform to.
                        readOnly: false
                        type: string
                    readOnly: false
                    required:
                      - datetime_initiated
                      - datetime_updated
                      - registration_supplement
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the draft registration entity.
                    properties:
                      html:
                        description: A link to the draft registration's page on the OSF.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - html
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the draft registration entity.
                    properties:
                      branched_from:
                        description: A link to the node that this draft registration was created from.
                        readOnly: true
                        type: string
                      initiator:
                        description: A link to the user who initiated the draft registration.
                        readOnly: true
                        type: string
                      registration_schema:
                        description: A link to the detailed registration schema that this draft conforms to.
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - branched_from
                      - initiator
                      - registration_schema
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the draft registration entity (`draft_registrations`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                  - links
                title: Draft Registration
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          datetime_initiated: ""
                          datetime_updated: ""
                          registration_metadata: {}
                          registration_supplement: ""
                        id: ""
                        links:
                          html: ""
                        relationships:
                          branched_from:
                            links:
                              related:
                                href: ""
                                meta: {}
                          initiator:
                            links:
                              related:
                                href: ""
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: ""
                                meta: {}
                        type: draft_registrations
                    links:
                      first: ""
                      last: ""
                      meta:
                        per_page: 10
                        total: ""
                      next: ""
                      prev: ""
          description: OK
      summary: Retrieve a draft registration
      tags:
        - Nodes
      x-response-schema: Draft Registration
    patch:
      description: |-
        Updates a draft registration by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Draft registrations contain the supplemental registration questions that accompany a registration. Answer the questions in the draft registration supplement by sending update requests until you are ready to submit the draft.

        The registration supplement of a draft registration cannot be updated after the draft has been created.

        When updating a draft registration, `registration_metadata` is required. It must be a dictionary with keys as question ids in the registration form, and values as nested dictionaries matching the specific format in the [registration schema](TODO: link me pls).

        If a question is multiple-choice, the question response must exactly match one of the possible choices.
        #### Permissions
        Only project administrators may update draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_partial_update
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the draft registration.
          in: path
          name: draft_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_draft_registrations_createBody"
      responses:
        "200":
          description: OK
      summary: Update a draft registration
      tags:
        - Nodes
      x-response-schema: Draft Registration
  "/nodes/{node_id}/files/":
    get:
      description: |-
        List of all storage providers that are configured for this node

        Users of the OSF may access their data on a [number of cloud-storage services](https://api.osf.io/v2/#storage-providers) that have integrations with the OSF. We call these **providers**. By default, every node has access to the OSF-provided storage but may use as many of the supported providers as desired.


        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        Note: In the OSF filesystem model, providers are treated as folders, but with special properties that distinguish them from regular folders. Every provider folder is considered a root folder, and may not be deleted through the regular file API.
      operationId: nodes_providers_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file entity.
                      properties:
                        checkout:
                          description: SOON TO BE DEPRECATED, see relationships checkout.
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether or not the current user is allowed to post comments.
                          readOnly: true
                          type: boolean
                        current_version:
                          description: Version number of the file.
                          readOnly: true
                          type: integer
                        date_created:
                          description: The time at which the file was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        delete_allowed:
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                          type: boolean
                        extra:
                          description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                          readOnly: true
                          type: object
                        guid:
                          description: Global unique identifier (GUID) for this file (if one has been assigned).
                          readOnly: true
                          type: string
                        kind:
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                          type: string
                        last_touched:
                          description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Unix-style path to the file relative to the provider root.
                          readOnly: true
                          type: string
                        name:
                          description: Name of the file
                          readOnly: false
                          type: string
                        path:
                          description: The unique identifier for this file entity for this project and storage provider.
                          readOnly: true
                          type: string
                        provider:
                          description: The id of the file provider (e.g., `osfstorage`)
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                        tags:
                          description: A list of strings that describe this file, as entered by project contributors.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the file entity.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file entity.
                      properties:
                        delete:
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                          type: string
                        download:
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the page to view a file's information or a folder's contents.
                          format: URL
                          readOnly: true
                          type: string
                        move:
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                          type: string
                        new_folder:
                          description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                          type: string
                        upload:
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: Links to other entities or entity collections that have a relationship to the file entity.
                      properties:
                        checkout:
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                          type: string
                        node:
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                          type: string
                        versions:
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                      type: string
                  title: File
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          kind: folder
                          name: osfstorage
                          node: ezcuj
                          path: /
                          provider: osfstorage
                        id: ezcuj:osfstorage
                        links:
                          new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                          storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                          upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                        relationships:
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                                meta: {}
                        type: files
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all storage providers
      tags:
        - Nodes
      x-response-schema: File
  "/nodes/{node_id}/files/providers/{provider}/":
    get:
      description: |-
        Retrieves the details of a storage provider enabled on this node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_providers_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the storage provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the file entity.
                    properties:
                      checkout:
                        description: SOON TO BE DEPRECATED, see relationships checkout.
                        readOnly: true
                        type: string
                      current_user_can_comment:
                        description: Whether or not the current user is allowed to post comments.
                        readOnly: true
                        type: boolean
                      current_version:
                        description: Version number of the file.
                        readOnly: true
                        type: integer
                      date_created:
                        description: The time at which the file was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      delete_allowed:
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                        type: boolean
                      extra:
                        description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                        readOnly: true
                        type: object
                      guid:
                        description: Global unique identifier (GUID) for this file (if one has been assigned).
                        readOnly: true
                        type: string
                      kind:
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                        type: string
                      last_touched:
                        description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                        type: string
                      materialized_path:
                        description: Unix-style path to the file relative to the provider root.
                        readOnly: true
                        type: string
                      name:
                        description: Name of the file
                        readOnly: false
                        type: string
                      path:
                        description: The unique identifier for this file entity for this project and storage provider.
                        readOnly: true
                        type: string
                      provider:
                        description: The id of the file provider (e.g., `osfstorage`)
                        readOnly: true
                        type: string
                      size:
                        description: Size of the file in bytes.
                        readOnly: true
                        type: integer
                      tags:
                        description: A list of strings that describe this file, as entered by project contributors.
                        items:
                          type: string
                        readOnly: true
                        type: array
                    readOnly: false
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the file entity.
                    readOnly: true
                    type: string
                  links:
                    description: Links to alternative representations of the file entity.
                    properties:
                      delete:
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                        type: string
                      download:
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                        type: string
                      info:
                        description: A link to the page to view a file's information or a folder's contents.
                        format: URL
                        readOnly: true
                        type: string
                      move:
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                        type: string
                      new_folder:
                        description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                        type: string
                      upload:
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: Links to other entities or entity collections that have a relationship to the file entity.
                    properties:
                      checkout:
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                        type: string
                      comments:
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                        type: string
                      node:
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                        type: string
                      versions:
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                    type: string
                title: File
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          kind: folder
                          name: osfstorage
                          node: ezcuj
                          path: /
                          provider: osfstorage
                        id: ezcuj:osfstorage
                        links:
                          new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                          storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                          upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                        relationships:
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                                meta: {}
                        type: files
          description: OK
      summary: Retrieve a storage provider
      tags:
        - Nodes
      x-response-schema: File
  "/nodes/{node_id}/files/{provider}/":
    get:
      description: |-
        List of all the files/folders that are attached to your project for a given storage provider.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object and contains the full representation of the file.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering

        You can optionally request that the response only include files that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/?filter[kind]=file

        Node files may be filtered by `id`, `name`, `node`, `kind`, `path`, `provider`, `size`, and `last_touched`.

        ###Waterbutler API actions

        Files can be modified through the Waterbutler API routes found in `links` (`new_folder`, `move`, `upload`, `download`, and `delete`).

        #### Download (files)

        To download a file, issue a GET request against the download link. The response will have the Content-Disposition header set, which will will trigger a download in a browser.

        #### Create Subfolder (folders)

        You can create a subfolder of an existing folder by issuing a PUT request against the new_folder link. The ?kind=folder portion of the query parameter is already included in the new_folder link. The name of the new subfolder should be provided in the name query parameter. The response will contain a WaterButler folder entity. If a folder with that name already exists in the parent directory, the server will return a 409 Conflict error response.

        #### Upload New File (folders)

        To upload a file to a folder, issue a PUT request to the folder's upload link with the raw file data in the request body, and the kind and name query parameters set to 'file' and the desired name of the file. The response will contain a WaterButler file entity that describes the new file. If a file with the same name already exists in the folder, the server will return a 409 Conflict error response.

        #### Update Existing File (file)

        To update an existing file, issue a PUT request to the file's upload link with the raw file data in the request body and the kind query parameter set to "file". The update action will create a new version of the file. The response will contain a WaterButler file entity that describes the updated file.

        #### Rename (files, folders)

        To rename a file or folder, issue a POST request to the move link with the action body parameter set to "rename" and the rename body parameter set to the desired name. The response will contain either a folder entity or file entity with the new name.

        #### Move & Copy (files, folders)

        Move and copy actions both use the same request structure, a POST to the move url, but with different values for the action body parameters. The path parameter is also required and should be the OSF path attribute of the folder being written to. The rename and conflict parameters are optional. If you wish to change the name of the file or folder at its destination, set the rename parameter to the new name. The conflict param governs how name clashes are resolved. Possible values are replace and keep. replace is the default and will overwrite the file that already exists in the target folder. keep will attempt to keep both by adding a suffix to the new file's name until it no longer conflicts. The suffix will be ' (x)' where x is a increasing integer starting from 1. This behavior is intended to mimic that of the OS X Finder. The response will contain either a folder entity or file entity with the new name.
        Files and folders can also be moved between nodes and providers. The resource parameter is the id of the node under which the file/folder should be moved. It must agree with the path parameter, that is the path must identify a valid folder under the node identified by resource. Likewise, the provider parameter may be used to move the file/folder to another storage provider, but both the resource and path parameters must belong to a node and folder already extant on that provider. Both resource and provider default to the current node and providers.
        If a moved/copied file is overwriting an existing file, a 200 OK response will be returned. Otherwise, a 201 Created will be returned.

        #### Delete (file, folders)

        To delete a file or folder send a DELETE request to the delete link. Nothing will be returned in the response body.
      operationId: nodes_files_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the storage provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file entity.
                      properties:
                        checkout:
                          description: SOON TO BE DEPRECATED, see relationships checkout.
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether or not the current user is allowed to post comments.
                          readOnly: true
                          type: boolean
                        current_version:
                          description: Version number of the file.
                          readOnly: true
                          type: integer
                        date_created:
                          description: The time at which the file was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        delete_allowed:
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                          type: boolean
                        extra:
                          description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                          readOnly: true
                          type: object
                        guid:
                          description: Global unique identifier (GUID) for this file (if one has been assigned).
                          readOnly: true
                          type: string
                        kind:
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                          type: string
                        last_touched:
                          description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Unix-style path to the file relative to the provider root.
                          readOnly: true
                          type: string
                        name:
                          description: Name of the file
                          readOnly: false
                          type: string
                        path:
                          description: The unique identifier for this file entity for this project and storage provider.
                          readOnly: true
                          type: string
                        provider:
                          description: The id of the file provider (e.g., `osfstorage`)
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                        tags:
                          description: A list of strings that describe this file, as entered by project contributors.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the file entity.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file entity.
                      properties:
                        delete:
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                          type: string
                        download:
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the page to view a file's information or a folder's contents.
                          format: URL
                          readOnly: true
                          type: string
                        move:
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                          type: string
                        new_folder:
                          description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                          type: string
                        upload:
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: Links to other entities or entity collections that have a relationship to the file entity.
                      properties:
                        checkout:
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                          type: string
                        node:
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                          type: string
                        versions:
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                      type: string
                  title: File
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          checkout: null
                          current_user_can_comment: true
                          current_version: 1
                          date_created: 2014-10-17T19:24:12.264Z
                          date_modified: 2014-10-17T19:24:12.264Z
                          delete_allowed: true
                          extra:
                            downloads: 447
                            hashes:
                              md5: 44325d4f13b09f3769ede09d7c20a82c
                              sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                          guid: sejcv
                          kind: file
                          last_touched: 2015-09-18T01:11:16.328000
                          materialized_path: /OSC2012.pdf
                          name: OSC2012.pdf
                          path: /553e69248c5e4a219919ea54
                          provider: osfstorage
                          size: 216945
                          tags: []
                        id: 553e69248c5e4a219919ea54
                        links:
                          delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                          move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                          upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        relationships:
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          versions:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                                meta: {}
                        type: files
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all node files
      tags:
        - Nodes
      x-response-schema: File
  "/nodes/{node_id}/files/{provider}/{path}/":
    get:
      description: |-
        Retrieves the details of a file attached to given node (project or component) for the given storage provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_files_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the storage provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: The unique identifier of the file path.
          in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the file entity.
                    properties:
                      checkout:
                        description: SOON TO BE DEPRECATED, see relationships checkout.
                        readOnly: true
                        type: string
                      current_user_can_comment:
                        description: Whether or not the current user is allowed to post comments.
                        readOnly: true
                        type: boolean
                      current_version:
                        description: Version number of the file.
                        readOnly: true
                        type: integer
                      date_created:
                        description: The time at which the file was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      delete_allowed:
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                        type: boolean
                      extra:
                        description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                        readOnly: true
                        type: object
                      guid:
                        description: Global unique identifier (GUID) for this file (if one has been assigned).
                        readOnly: true
                        type: string
                      kind:
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                        type: string
                      last_touched:
                        description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                        type: string
                      materialized_path:
                        description: Unix-style path to the file relative to the provider root.
                        readOnly: true
                        type: string
                      name:
                        description: Name of the file
                        readOnly: false
                        type: string
                      path:
                        description: The unique identifier for this file entity for this project and storage provider.
                        readOnly: true
                        type: string
                      provider:
                        description: The id of the file provider (e.g., `osfstorage`)
                        readOnly: true
                        type: string
                      size:
                        description: Size of the file in bytes.
                        readOnly: true
                        type: integer
                      tags:
                        description: A list of strings that describe this file, as entered by project contributors.
                        items:
                          type: string
                        readOnly: true
                        type: array
                    readOnly: false
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the file entity.
                    readOnly: true
                    type: string
                  links:
                    description: Links to alternative representations of the file entity.
                    properties:
                      delete:
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                        type: string
                      download:
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                        type: string
                      info:
                        description: A link to the page to view a file's information or a folder's contents.
                        format: URL
                        readOnly: true
                        type: string
                      move:
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                        type: string
                      new_folder:
                        description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                        type: string
                      upload:
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: Links to other entities or entity collections that have a relationship to the file entity.
                    properties:
                      checkout:
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                        type: string
                      comments:
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                        type: string
                      node:
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                        type: string
                      versions:
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                    type: string
                title: File
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        checkout: null
                        current_user_can_comment: true
                        current_version: 1
                        date_created: 2014-10-17T19:24:12.264Z
                        date_modified: 2014-10-17T19:24:12.264Z
                        delete_allowed: true
                        extra:
                          downloads: 447
                          hashes:
                            md5: 44325d4f13b09f3769ede09d7c20a82c
                            sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        guid: sejcv
                        kind: file
                        last_touched: 2015-09-18T01:11:16.328000
                        materialized_path: /OSC2012.pdf
                        name: OSC2012.pdf
                        path: /553e69248c5e4a219919ea54
                        provider: osfstorage
                        size: 216945
                        tags: []
                      id: 553e69248c5e4a219919ea54
                      links:
                        delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                      relationships:
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                              meta: {}
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        versions:
                          links:
                            related:
                              href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                              meta: {}
                      type: files
          description: OK
      summary: Retrieve a file
      tags:
        - Nodes
      x-response-schema: File
  "/nodes/{node_id}/forks/":
    get:
      description: |-
        
        A paginated list of the current node's forks. The returned fork nodes are sorted by their `forked_date`, with the most recently forked nodes appearing first.

        Forking a project creates a copy of an existing node and all of its contents. The fork always points back to the original node, forming a network of nodes.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 forked nodes. If the current node has zero forked nodes, the `data` key will contain an empty array. Each resource in the array is a separate node object and contains the full representation of the forked node, meaning additional requests to the forked node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
      operationId: nodes_forks_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: true
                          current_user_permissions:
                            - read
                            - write
                            - admin
                          date_created: 2012-04-01T15:49:07.702000
                          date_modified: 2016-07-23T00:21:05.371000
                          description: ""
                          fork: true
                          forked_date: 2016-11-08T15:59:03.114000
                          node_license: null
                          preprint: false
                          public: false
                          registration: false
                          tags:
                            - replication
                            - reproducibility
                            - open science
                            - reproduction
                            - psychological science
                            - psychology
                            - metascience
                            - crowdsource
                          title: "Fork of Reproducibility Project: Psychology"
                        id: 95q3e
                        links:
                          html: https://osf.io/95q3e/
                          self: https://api.osf.io/v2/nodes/95q3e/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/95q3e/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/comments/?filter%5Btarget%5D=95q3e
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/files/
                                meta: {}
                          forked_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/95q3e/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/95q3e/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all forks of this node
      tags:
        - Nodes
      x-response-schema: Node
    post:
      description: |-
        Creates a fork of the given node.

        Forking a project creates a copy of an existing node and all of its contents. The fork always points back to the original node, forming a network of nodes.

        You might use a fork to copy another's work to build on and extend. For example, a professor may create an OSF project of materials for individual student use. Each student forks the project to have his or her own copy of the materials to start his/her own work.

        When creating a fork, your fork will only contain public components of the current node and components for which you are a contributor. Private components that you do not have access to will not be forked.
        #### Required
        There are no required attributes when creating a fork, as all of the forked node's attributes will be copied from the current node.

        The `title` field is optional, with the default title being "Fork of " prepended to the current node's title.
        #### Returns
        Returns a JSON object with a `data` key containing the complete srepresentation of the forked node, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_forks_create
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/nodes_createBody"
      responses:
        "201":
          description: Created
      summary: Create a fork of this node
      tags:
        - Nodes
      x-response-schema: Node
  "/nodes/{node_id}/identifiers/":
    get:
      description: |-
        List all identifiers associated with a given node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of identifiers. Each resource in the array is a separate identifier object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/identifiers/?filter[category]=ark

        Identifiers may be filtered by their `category` e.g `ark` or `doi`.
      operationId: nodes_identifiers_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the identifier entity.
                      properties:
                        category:
                          description: The category of the identifier
                          enum:
                            - ark
                            - doi
                          readOnly: true
                          type: string
                        value:
                          description: The identifier value itself
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the identifier entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the identifier entity.
                      properties:
                        self:
                          description: A link to the detail page for the identifier.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the identifier entity.
                      properties:
                        referent:
                          description: A relationship to the node the identifier refers to.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the identifier entity (`identifiers`).
                      readOnly: true
                      type: string
                  title: Identifier
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: doi
                          value: 10.17605/OSF.IO/73PND
                        id: 57f1641db83f6901ed94b459
                        links:
                          self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b459/
                        relationships:
                          referent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                        type: identifiers
                      - attributes:
                          category: ark
                          value: c7605/osf.io/73pnd
                        id: 57f1641db83f6901ed94b45a
                        links:
                          self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b45a/
                        relationships:
                          referent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                        type: identifiers
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all identifiers
      tags:
        - Nodes
      x-response-schema: Identifier
  "/nodes/{node_id}/institutions/":
    get:
      description: |-
        List of all institutions affiliated with this node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 affilited institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_institutions_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the institution entity.
                      properties:
                        auth_url:
                          description: Url used to authenticate institution specific login.
                          readOnly: true
                          type: string
                        description:
                          description: Description of the institution.
                          readOnly: true
                          type: string
                        logo_path:
                          description: Static path to the institution specific logo.
                          readOnly: true
                          type: string
                        name:
                          description: Full name of the institution.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the institution entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the institutions entity.
                      properties:
                        self:
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the institution entity.
                      properties:
                        nodes:
                          description: A relationship to the nodes affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        registrations:
                          description: A relationship to the registrations affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        users:
                          description: A relationship to the users affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                      type: string
                  title: Institution
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          auth_url: null
                          description: COS is a non-profit technology company providing free and open services to increase inclusivity and transparency of research. Find out more at <a href="https://cos.io">cos.io</a>.
                          logo_path: /static/img/institutions/shields/cos-shield.png
                          name: Center For Open Science
                        id: cos
                        links:
                          self: https://api.osf.io/v2/institutions/cos/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/users/
                                meta: {}
                        type: institutions
                      - attributes:
                          auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                          description: In partnership with the <a href="http://www.virginia.edu/vpr/">Vice President for Research</a>, <a href="http://dsi.virginia.edu">Data Science Institute</a>, <a href="https://www.hsl.virginia.edu">Health Sciences Library</a>, and <a href="http://data.library.virginia.edu">University Library</a>. Learn more about <a href="http://cadre.virginia.edu">UVA resources for computational and data-driven research</a>. Projects must abide by the <a href="http://www.virginia.edu/informationpolicy/security.html">University Security and Data Protection Policies</a>.
                          logo_path: /static/img/institutions/shields/uva-shield.png
                          name: University of Virginia
                        id: uva
                        links:
                          self: https://api.osf.io/v2/institutions/uva/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/users/
                                meta: {}
                        type: institutions
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all institutions
      tags:
        - Nodes
      x-response-schema: Institution
  "/nodes/{node_id}/linked_nodes/":
    get:
      description: |-
        List of all nodes linked to the given node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/?filter[title]=reproducibility.

        Nodes may be filtered by their `title`, `category`, `description`, `public`, `registration`, or `tags`. `title`, `description`, and `category` are string fields and will be filteres using simple substring matching. `public`, `registration` are boolean and can be filtered using truthy values, such as `true`, `false`, `0`, `1`. `tags` is an array of simple strings.
      operationId: nodes_linked_nodes_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2014-07-28T13:53:04.508000
                          date_modified: 2017-03-03T05:00:31.512000
                          description: "This is an independent replication as part of the Reproducibility Project: Psychology."
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: Replication of WA Cunningham, JJ Van Bavel, IR Johnsen (2008, PS 19(2))
                        id: bifc7
                        links:
                          html: https://osf.io/bifc7/
                          self: https://api.osf.io/v2/nodes/bifc7/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/wikis/
                                meta: {}
                        type: nodes
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2012-10-31T18:50:46.111000
                          date_modified: 2016-10-02T19:50:23.605000
                          description: null
                          fork: true
                          node_license:
                            copyright_holders:
                              - ""
                            year: "2016"
                          preprint: false
                          public: true
                          registration: false
                          tags:
                            - anxiety
                            - EMG
                            - EEG
                            - motivation
                            - ERN
                          title: Replication of Hajcak &amp; Foti (2008, PS, Study 1)
                        id: 73pnd
                        links:
                          html: https://osf.io/73pnd/
                          self: https://api.osf.io/v2/nodes/73pnd/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/files/
                                meta: {}
                          forked_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/kxhz5/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all linked nodes
      tags:
        - Nodes
      x-response-schema: Node
  "/nodes/{node_id}/logs/":
    get:
      description: |-
        A paginated list of all logs associated with a given node.

        The returned logs are sorted by their `date`, with the most recents logs appearing first.

        This list includes the logs of the specified node as well as the logs of that node's children to which the current user has read-only access.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 logs. Each resource in the array is a separate logs object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include logs that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/logs/?filter[action]=made_private.

        Nodes may be filtered by their `action`, and `date`.
      operationId: nodes_logs_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        action: contributor_added
                        date: 2012-05-31T05:50:32.083000
                        params:
                          contributors:
                            - active: true
                              family_name: Nosek
                              full_name: Brian A. Nosek
                              given_name: Brian
                              id: cdi38
                              middle_names: A.
                          params_node:
                            id: ezcuj
                            title: "Reproducibility Project: Psychology"
                      id: 4fc706a80b6e9118ef000122
                      links:
                        self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        original_node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/jk5cv/
                              meta: {}
                      type: logs
                  properties:
                    attributes:
                      description: The properties of the log.
                      properties:
                        action:
                          description: The type of action performed on the OSF. See actions section for full list of possible actions.
                          readOnly: true
                          type: string
                        date:
                          description: The date and time at which the log was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        params:
                          description: The type of action performed on the OSF. See description for full list of possible actions.
                          properties:
                            addon:
                              description: The addon associated with the connected node.
                              readOnly: true
                              type: string
                            anonymous_link:
                              description: The view only link added to the node was anonymous.
                              readOnly: true
                              type: boolean
                            bucket:
                              description: The Amazon s3 bucket connected to the connected node.
                              readOnly: true
                              type: string
                            citation_name:
                              description: Name of citation associated with the connected node.
                              readOnly: true
                              type: string
                            contributors:
                              description: List of contributors on the connected node involved in the action represented by this node log.
                              readOnly: true
                              type: string
                            data_set:
                              description: The dataset associated with the connected node.
                              readOnly: true
                              type: string
                            destination:
                              description: A dictionary with information about the destination for the move of the item on the node associated with this log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            figshare_title:
                              description: Title of the fighshare project associated with this node log
                              readOnly: true
                              type: string
                            file:
                              description: Dictionary with information about the file involved with the log.
                              readOnly: true
                              type: string
                            filename:
                              description: Filename for the file associated with the log.
                              readOnly: true
                              type: string
                            folder:
                              description: Folder associated with the log.
                              readOnly: true
                              type: string
                            folder_name:
                              description: Name of the folder associated with the log.
                              readOnly: true
                              type: string
                            forward_url:
                              description: URL that the connected node forwards to.
                              readOnly: true
                              type: string
                            github_repo:
                              description: The github repository involved with the action represented by this node log.
                              readOnly: true
                              type: string
                            github_user:
                              description: The github user involved with the action represented by this node log.
                              readOnly: true
                              type: string
                            identifiers:
                              description: Dictionary containing the DOI and ARK ID for a preprint associated with the log.
                              readOnly: true
                              type: string
                            institution:
                              description: Dictionary containing the ID and Name of the institution associated with the log.
                              readOnly: true
                              type: string
                            kind:
                              description: Kind of the object associated with the log.
                              readOnly: true
                              type: string
                            license:
                              description: License for the associated node.
                              readOnly: true
                              type: string
                            old_page:
                              description: Old name of wiki page for a wiki rename log action.
                              readOnly: true
                              type: string
                            page:
                              description: Current name of wiki page for rename log action.
                              readOnly: true
                              type: string
                            page_id:
                              description: Primary key of the wiki page associated with the log.
                              readOnly: true
                              type: string
                            params_node:
                              description: Node that is refered to in the params of the log.
                              readOnly: true
                              type: string
                            params_project:
                              description: Project that is refered to in the params of the log.
                              readOnly: true
                              type: string
                            path:
                              description: Path for a file associated with the log.
                              readOnly: true
                              type: string
                            pointer:
                              description: A dictionary with information about the node that is linked to the associated node.
                              readOnly: true
                              type: string
                            preprint:
                              description: Preprint related to the associated node.
                              readOnly: true
                              type: string
                            preprint_provider:
                              description: Preprint provider for the associated node.
                              readOnly: true
                              type: string
                            previous_institution:
                              description: If a primary institution for the associated node is changed, this will show the previous institution.
                              readOnly: true
                              type: string
                            source:
                              description: A dictionary with information about the source of a move related event for a log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            study:
                              description: Dataverse study linked to the associated node.
                              readOnly: true
                              type: string
                            tag:
                              description: Tag associated with the associated node.
                              readOnly: true
                              type: string
                            tags:
                              description: Tags associated with the associated node.
                              readOnly: true
                              type: string
                            target:
                              description: A dictionary containing details about the target of the log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            template_node:
                              description: A dictionary containing information about the node that was used as a template for the associated node.
                              readOnly: true
                              type: string
                            title_new:
                              description: The new title for the associated node.
                              readOnly: true
                              type: string
                            title_original:
                              description: The original title for the associated node
                              readOnly: true
                              type: string
                            updated_fields:
                              description: A dictionary containing all of the fields updated on the associated node.
                              readOnly: true
                              type: string
                            urls:
                              description: Links to access information about the file associated with this log.
                              readOnly: true
                              type: string
                            version:
                              description: Version of the wiki page associated with this log.
                              readOnly: true
                              type: string
                            wiki:
                              description: A dictionary with information about the wiki page associated with the log.
                              readOnly: true
                              type: string
                          readOnly: true
                          title: Log Params
                          type: object
                      readOnly: true
                      required:
                        - action
                        - date
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the log.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the log entity.
                      properties:
                        self:
                          description: A link to the detail page for the log.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - self
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the log.
                      properties:
                        linked_node:
                          description: A relationship to the node linked to this log.
                          readOnly: true
                          type: string
                        node:
                          description: A relationship to the node associated with this log.
                          readOnly: true
                          type: string
                        original_node:
                          description: A relationship to the original node that was associated with this log, in case this log was copied from a node to a fork or registration.
                          readOnly: true
                          type: string
                        template_node:
                          description: A relationship to the node used as a template for this log.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the user who performed the log action.
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - node
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the log (`logs`)
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Log
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          action: pointer_created
                          date: 2017-01-23T16:30:07.321000
                          params:
                            contributors: []
                            params_node:
                              id: fejxb
                              title: Replication of Correll (2008, JPSP, Study 2)
                            params_project: null
                            pointer:
                              category: project
                              id: iraqy
                              title: "Independent Direct Replication #2 of Correll (2008, JPSP, Study 2)"
                              url: /iraqy/
                            preprint_provider: null
                        id: 58862f8f594d9001f547f484
                        links:
                          self: https://api.osf.io/v2/logs/58862f8f594d9001f547f484/
                        relationships:
                          linked_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/iraqy/
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/fejxb/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/fejxb/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/2z47w/
                                meta: {}
                        type: logs
                      - attributes:
                          action: project_registered
                          date: 2017-01-09T05:00:53.761000
                          params:
                            contributors: []
                            params_node:
                              id: rtjws
                              title: Analysis Audit
                            params_project: null
                            preprint_provider: null
                        id: 5873190554be8101d7e30b3e
                        links:
                          self: https://api.osf.io/v2/logs/5873190554be8101d7e30b3e/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/rtjws/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/rtjws/
                                meta: {}
                        type: logs
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 10
                      prev: null
                      total: 2
          description: OK
      summary: List all logs
      tags:
        - Nodes
      x-response-schema: Log
  "/nodes/{node_id}/preprints/":
    get:
      description: |-
        A paginated list of preprints related to a given node. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.

        **Note: This API endpoint is under active development, and is subject to change in the future.**
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_preprints_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            id: "{node_id}"
                            type: nodes
                        primary_file:
                          data:
                            id: "{primary_file_id}"
                            type: primary_files
                        provider:
                          data:
                            id: "{preprint_provider_id}"
                            type: providers
                  properties:
                    attributes:
                      description: The properties of the preprint entity.
                      properties:
                        date_created:
                          description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_published:
                          description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        doi:
                          description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                          readOnly: false
                          type: string
                        is_preprint_orphan:
                          description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        license_record:
                          description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                          readOnly: false
                          type: string
                        subjects:
                          description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                          items:
                            type: string
                          readOnly: false
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the preprint entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the preprint entity.
                      properties:
                        doi:
                          description: The URL representation of the DOI entered by the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                          type: string
                        html:
                          description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                          format: URL
                          readOnly: true
                          type: string
                        preprint_doi:
                          description: The URL representation of the OSF assigned DOI for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                      properties:
                        citation:
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A relationship to the identifiers associated with the preprint.
                          readOnly: true
                          type: string
                        license:
                          description: A relationship to the license that has been applied to the preprint.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: false
                          type: string
                        primary_file:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                        provider:
                          description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - primary_file
                        - provider
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the preprint entity (`preprints`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Preprint
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_created: 2016-08-29T14:53:51.185000
                          date_modified: 2016-08-29T14:53:51.185000
                          date_published: 2016-08-29T14:53:51.185000
                          doi: 10.1371/journal.pbio.1002456
                          is_preprint_orphan: false
                          is_published: true
                          license_record: null
                          subjects:
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecaab8
                                text: Public Affairs, Public Policy and Public Administration
                              - id: 584240d954be81056cecaa10
                                text: Science and Technology Policy
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecab33
                                text: Library and Information Science
                              - id: 584240db54be81056cecacd2
                                text: Scholarly Publishing
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac68
                                text: Psychology
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac68
                                text: Psychology
                        id: khbvy
                        links:
                          doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                          html: https://osf.io/khbvy/
                          self: https://api.osf.io/v2/preprints/khbvy/
                        relationships:
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/khbvy/citation/
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bnzx5/
                                meta: {}
                          primary_file:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                                meta: {}
                          provider:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/osf/
                                meta: {}
                        type: preprints
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all preprints
      tags:
        - Nodes
      x-response-schema: Preprint
  "/nodes/{node_id}/registrations/":
    get:
      description: |-
        List of all registrations of the given node.
        #### Returns

        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 registrations. Each resource in the array is a separate registrations object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include registrations that match your filters by utilizing the filter query parameter, e.g. https://api.osf.io/v2/registrations/?filter[title]=open.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: nodes_registrations_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        lift_embargo: 2017-05-10T20:44:03.185000
                        registration_choice: embargo
                      type: registrations
                  properties:
                    attributes:
                      description: The properties of the registration entity.
                      properties:
                        category:
                          description: The category of the registered node.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: true
                          type: string
                        collection:
                          description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_registered:
                          description: The time at which this registration was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_withdrawn:
                          description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the registered node.
                          readOnly: true
                          type: string
                        embargo_end_date:
                          description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        fork:
                          description: Whether or not this registration represents a fork of another node.
                          readOnly: true
                          type: boolean
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                          readOnly: true
                          type: string
                        pending_embargo_approval:
                          description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_registration_approval:
                          description: Whether or not the registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_withdrawal:
                          description: Whether or not the registration is pending approval for withdrawal from project administrators.
                          readOnly: true
                          type: boolean
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the registration is publicly visible.
                          readOnly: false
                          type: boolean
                        registered_meta:
                          description: A dictionary with supplemental registration questions and responses.
                          readOnly: true
                          type: string
                        registration:
                          description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        registration_supplement:
                          description: The title of the registration schema this registration conforms to.
                          readOnly: true
                          type: string
                        tags:
                          description: A list of strings that describe the registered node.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        template_from:
                          description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                          readOnly: true
                          type: string
                        title:
                          description: The title of the registered node.
                          readOnly: true
                          type: string
                        withdrawal_justification:
                          description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                          readOnly: true
                          type: string
                        withdrawn:
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                          type: boolean
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the registration.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the registrations entity.
                      properties:
                        html:
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this registration.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the registration entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this registration is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of the registered node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this registration.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this registration.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this registration.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this registration.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this registration.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to this registration.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this registration.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                          readOnly: true
                          type: string
                        registered_by:
                          description: A link to the user that initiated this registration.
                          readOnly: true
                          type: string
                        registered_from:
                          description: A link to the node that this registration was registered from.
                          readOnly: true
                          type: string
                        registration_schema:
                          description: A link to the metaschema that this registration conforms to.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this registration.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the registration entity (`registrations`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Registration
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        category: project
                        collection: false
                        current_user_can_comment: true
                        current_user_permissions:
                          - read
                        date_created: 2017-02-12T18:45:55.063000
                        date_modified: 2017-02-12T19:22:26.488000
                        date_registered: 2017-02-12T19:28:48.864000
                        description: ""
                        embargo_end_date: null
                        fork: false
                        node_license: null
                        node_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/node_links/
                              meta: {}
                        pending_embargo_approval: false
                        pending_registration_approval: false
                        pending_withdrawal: false
                        preprint: false
                        public: true
                        registered_meta:
                          summary:
                            comments: []
                            extra: []
                            value: This pre-registration is an updated data collection and analysis plan. See https://osf.io/ptcqw/ for original data collection rule and https://osf.io/8jyu8/ for original analysis plan. We are collecting more data given that results after original data collection were inconclusive.
                        registration: true
                        registration_supplement: Open-Ended Registration
                        tags: []
                        title: How Awareness Impacts Multiple Forms of Social Bias in Behavior (Final Data Collection and Analysis Plan)
                        withdrawal_justification: null
                        withdrawn: false
                      id: esa63
                      links:
                        html: https://osf.io/esa63/
                        self: https://api.osf.io/v2/registrations/esa63/
                      relationships:
                        affiliated_institutions:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/institutions/
                              meta: {}
                        children:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/children/
                              meta: {}
                        citation:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/citation/
                              meta: {}
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/comments/?filter%5Btarget%5D=esa63
                              meta: {}
                        contributors:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/contributors/
                              meta: {}
                        files:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/files/
                              meta: {}
                        forks:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/forks/
                              meta: {}
                        identifiers:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/identifiers/
                              meta: {}
                        linked_nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/linked_nodes/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/registrations/esa63/relationships/linked_nodes/
                              meta: {}
                        linked_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/linked_registrations/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/registrations/esa63/relationships/linked_registrations/
                              meta: {}
                        logs:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/logs/
                              meta: {}
                        registered_by:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/ztdnp/
                              meta: {}
                        registered_from:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/dpfyv/
                              meta: {}
                        registration_schema:
                          links:
                            related:
                              href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2be/
                              meta: {}
                        root:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/
                              meta: {}
                        view_only_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/view_only_links/
                              meta: {}
                        wikis:
                          links:
                            related:
                              href: https://api.osf.io/v2/registrations/esa63/wikis/
                              meta: {}
                      type: registrations
          description: OK
      summary: List all registrations
      tags:
        - Nodes
      x-response-schema: Registration
  "/nodes/{node_id}/view_only_links/":
    get:
      description: |-
        List of view only links on a node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 view only links. Each resource in the array is a view only link object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Permissions

        View only links on a node, public or private, are readable and writeable only by users that are administrators on the node.

        #### Filtering

        You can optionally request that the response only include view only links that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/view_only_links/?filter[anonymous]=true.

        View Only Links may be filtered based on their `name`, `anonymous` and `date_created` fields. Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: nodes_view_only_links_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the view only link entity.
                      properties:
                        anonymous:
                          default: true
                          description: Whether or not the view only link has anonymized contributors
                          readOnly: false
                          type: boolean
                        date_created:
                          description: The time at which the view only link was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        key:
                          description: The view only key
                          readOnly: true
                          type: string
                        name:
                          default: Shared project link
                          description: The name of the view only link
                          readOnly: false
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the view only link.
                      readOnly: true
                      type: string
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the view only link entity.
                      properties:
                        creator:
                          description: A relationship to the user who created this view only link.
                          readOnly: true
                          type: string
                        nodes:
                          description: A relationship to the nodes which this view only link gives read-only access to.
                          format: URL
                          readOnly: false
                          type: string
                      readOnly: true
                      required:
                        - nodes
                        - creator
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the view only link ('view-only-links').
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                  title: view-only-links
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          anonymous: false
                          date_created: 2017-03-20T20:15:02.488643
                          key: c1df490be3294a9bac01ff05c4097ab7
                          name: vol name
                        id: 58d03846a170c50025baae61
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d03846a170c50025baae61/
                        relationships:
                          creator:
                            links:
                              related:
                                href: http://api.osf.io/v2/users/4xpu9/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/nodes/
                                meta: {}
                              self:
                                href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/relationships/nodes/
                                meta: {}
                        type: view_only_links
                      - attributes:
                          anonymous: false
                          date_created: 2017-03-21T14:26:47.507504
                          key: 9794ac36085e4d7086ff4dab49daf1cb
                          name: vol name
                        id: 58d13827a170c50025baae6e
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d13827a170c50025baae6e/
                        relationships:
                          creator:
                            links:
                              related:
                                href: http://api.osf.io/v2/users/4xpu9/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/nodes/
                                meta: {}
                              self:
                                href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/relationships/nodes/
                                meta: {}
                        type: view_only_links
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 10
                      prev: null
                      total: 2
          description: OK
      summary: List all view only links
      tags:
        - Nodes
      x-response-schema: View Only Link
  "/nodes/{node_id}/view_only_links/{link_id}/":
    get:
      description: |-
        Retrieves the details of a view only link on a node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Permissions

        View only links on a node, public or private, are readable and writeable only by users that are administrators on the node.
      operationId: nodes_view_only_links_read
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the view only link.
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the view only link entity.
                    properties:
                      anonymous:
                        default: true
                        description: Whether or not the view only link has anonymized contributors
                        readOnly: false
                        type: boolean
                      date_created:
                        description: The time at which the view only link was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      key:
                        description: The view only key
                        readOnly: true
                        type: string
                      name:
                        default: Shared project link
                        description: The name of the view only link
                        readOnly: false
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the view only link.
                    readOnly: true
                    type: string
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the view only link entity.
                    properties:
                      creator:
                        description: A relationship to the user who created this view only link.
                        readOnly: true
                        type: string
                      nodes:
                        description: A relationship to the nodes which this view only link gives read-only access to.
                        format: URL
                        readOnly: false
                        type: string
                    readOnly: true
                    required:
                      - nodes
                      - creator
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                title: view-only-links
                type: object
            application/json:
              examples:
                response:
                  value: null
          description: OK
      summary: Retrieve a view only link
      tags:
        - Nodes
      x-response-schema: View Only Link
  "/nodes/{node_id}/wikis/":
    get:
      description: |-
        List of wiki pages on a node.
        #### Returns
        Paginated list of the node's current wiki page versions ordered by their date_modified. Each resource contains the full representation of the wiki, meaning additional requests to an individual wiki's detail view are not necessary.

        Note that if an anonymous view_only key is being used, the user relationship will not be exposed.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        Wiki pages can be filtered based on their `name` and `date_modified` fields.
        + `filter[name]=<Str>` -- filter wiki pages by name
        + `filter[date_modified][comparison_operator]=YYYY-MM-DDTH:M:S` -- filter wiki pages based on date modified.

        Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: nodes_wikis_list
      parameters:
        - description: The unique identifier of the node.
          in: path
          name: node_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the wiki.
                      properties:
                        content_type:
                          description: Content type of the wiki (`text/markdown`).
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether the current user is allowed to post comments on this wiki.
                          readOnly: true
                          type: string
                        date_modified:
                          description: The date and time at which the wiki was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        extra:
                          description: A dictionary containing additional metadata about this wiki, including version information.
                          readOnly: true
                          type: string
                        kind:
                          description: The type of object.
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Materialized path to the wiki object.
                          readOnly: true
                          type: string
                        name:
                          description: The name/title of the wiki page.
                          readOnly: true
                          type: string
                        path:
                          description: Path to the wiki object.
                          readOnly: true
                          type: string
                        size:
                          description: Size of the wiki.
                          readOnly: true
                          type: string
                      readOnly: false
                      required:
                        - kind
                        - name
                        - date_modified
                        - extra
                        - content_type
                        - path
                        - current_user_can_comment
                        - materialized_path
                        - size
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the wiki.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the wiki.
                      properties:
                        download:
                          description: The URL to download the content of the wiki.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the wiki.
                      properties:
                        comments:
                          description: A relationship to the comments related to this wiki.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the associated node.
                          readOnly: false
                          type: string
                        user:
                          description: A relationship to the user associated with this wiki.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                        - comments
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the wiki (`wikis`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Wiki
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          content_type: text/markdown
                          current_user_can_comment: true
                          date_modified: 2017-02-16T15:45:57.671957
                          extra:
                            version: 47
                          kind: file
                          materialized_path: /zveyb
                          name: home
                          path: /zveyb
                          size: 552
                        id: xu77p
                        links:
                          download: https://api.osf.io/v2/wikis/zveyb/content/
                          info: https://api.osf.io/v2/wikis/zveyb/
                          self: https://api.osf.io/v2/wikis/zveyb/
                        relationships:
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/tvyxz/comments/?filter%5Btarget%5D=zveyb
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/tvyxz/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/5k3hq/
                                meta: {}
                        type: wikis
                    links:
                      first: ""
                      last: https://api.osf.io/v2/wikis/zveyb/?page=2
                      meta:
                        per_page: 10
                        total: 12
                      next: https://api.osf.io/v2/wikis/zveyb/?page=2
                      prev: ""
          description: OK
      summary: List all wikis
      tags:
        - Nodes
      x-response-schema: Wiki
  /preprint_providers/:
    get:
      description: |-
        
        A paginated list of all preprint providers. The returned preprint providers are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include preprint providers that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprint_providers/?filter[id]=osf.

        Preprint Providers may be filtered by their `id`, `name`,  and `description`
      operationId: preprint_provider_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the preprint provider entity.
                    properties:
                      advisory_board:
                        description: The HTML representation of the preprint provider's advisory board.
                        readOnly: true
                        type: string
                      banner_path:
                        description: A static path to the preprint provider's banner image. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      description:
                        description: The description of the preprint provider.
                        readOnly: true
                        type: string
                      domain:
                        description: The preprint provider's domain, if the provider is using a domain to for their preprint service.
                        readOnly: true
                        type: string
                      domain_redirect_enabled:
                        description: Whether or not redirects are enabled for the provider's domain.
                        readOnly: true
                        type: boolean
                      email_contact:
                        description: The preprint provider's contact email address. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      email_support:
                        description: The preprint providers's support email address.
                        readOnly: true
                        type: string
                      example:
                        description: The GUID for an example preprint from this preprint provider.
                        readOnly: true
                        type: string
                      logo_path:
                        description: A static path to the preprint provider's logo image. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      name:
                        description: The name of the preprint provider.
                        readOnly: true
                        type: string
                      social_facebook:
                        description: The preprint provider's Facebook account ID. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      social_instagram:
                        description: The preprint provider's Instagram account ID. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      subjects_acceptable:
                        description: A nested array structure defining allowed subjects for this preprint provider, in the BePress taxonomy.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the preprint provider entity.
                    readOnly: true
                    type: string
                  links:
                    description: Links to alternative representations of the preprint entity.
                    properties:
                      external_url:
                        description: A link to the external website for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                      preprints:
                        description: A link to the preprint list page for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: Links to other entities or entity collections that have a relationship to the preprint provider.
                    properties:
                      licenses_acceptable:
                        description: A link to licenses the preprint provider allows.
                        format: URL
                        readOnly: true
                        type: string
                      preprints:
                        description: A link to the preprint list page for the preprint provider.
                        readOnly: true
                        type: string
                      taxonomies:
                        description: A link to the taxonomies the preprint provider allows.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the preprint provider entity (`preprint_providers`).
                    readOnly: true
                    type: string
                title: Preprint Providers
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          advisory_board: ""
                          banner_path: /static/img/preprint_providers/cos-logo.png
                          description: A scholarly commons to connect the entire research cycle
                          domain: osf.io
                          email_contact: ""
                          email_support: ""
                          example: khbvy
                          header_text: ""
                          logo_path: /static/img/preprint_providers/cos-logo.png
                          name: Open Science Framework
                          social_facebook: ""
                          social_instagram: ""
                          social_twitter: ""
                          subjects_acceptable: []
                        id: osf
                        links:
                          external_url: https://osf.io/preprints/
                          preprints: https://api.osf.io/v2/preprint_providers/osf/preprints/
                          self: https://api.osf.io/v2/preprint_providers/osf/
                        relationships:
                          licenses_acceptable:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/osf/licenses/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/osf/preprints/
                                meta: {}
                          taxonomies:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/osf/taxonomies/
                                meta: {}
                        type: preprint_providers
          description: OK
      summary: List all preprint providers
      tags:
        - Preprint Providers
      x-response-schema: Preprint Provider
  "/preprint_providers/{preprint_provider_id}/":
    get:
      description: |-
        Retrieves the details of a preprint provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested preprint provider, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        #### Acceptable Subjects Structure
        Each preprint provider specifies acceptable subjects.
        `subjects_acceptable` is an array found in `attributes`.
        Subjects consist of general parent subjects (e.g., Engineering), more specific child subjects (e.g., Aerospace Engineering), and even more specific grandchild subjects (e.g., Aerodynamics and Fluid Mechanics). Subjects can only be nested 3 deep.


            "subjects_acceptable": [
                [
                    [
                        # Parent Subject:
                        # Architecture
                        "584240d954be81056ceca9e5",

                        # Child Subject:
                        # Architectural Engineering
                        "584240da54be81056cecac87"
                    ],
                    # Include all Architectural Engineering's children:
                    true
                ],
                [
                    [
                        # Parent Subject:
                        # Engineering
                        "584240da54be81056cecaca9",

                        # Child Subject:
                        # Aerospace Engineering
                        "584240db54be81056cecacd6",

                        # Grandchild Subject:
                        # Aerodynamics and Fluid Mechanics
                        "584240da54be81056cecaa74"
                    ],
                    # All nestings 3 deep must be false
                    false
                ]
            ]

        The above structure would allow Architecture, Architectural Engineering, all of Architectural Engineering's children, Engineering, Aerospace Engineering, and Aerodynamics and Fluid Mechanics.
      operationId: preprint_provider_detail
      parameters:
        - description: The unique identifier of the preprint provider.
          in: path
          name: preprint_provider_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the preprint provider entity.
                    properties:
                      advisory_board:
                        description: The HTML representation of the preprint provider's advisory board.
                        readOnly: true
                        type: string
                      banner_path:
                        description: A static path to the preprint provider's banner image. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      description:
                        description: The description of the preprint provider.
                        readOnly: true
                        type: string
                      domain:
                        description: The preprint provider's domain, if the provider is using a domain to for their preprint service.
                        readOnly: true
                        type: string
                      domain_redirect_enabled:
                        description: Whether or not redirects are enabled for the provider's domain.
                        readOnly: true
                        type: boolean
                      email_contact:
                        description: The preprint provider's contact email address. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      email_support:
                        description: The preprint providers's support email address.
                        readOnly: true
                        type: string
                      example:
                        description: The GUID for an example preprint from this preprint provider.
                        readOnly: true
                        type: string
                      logo_path:
                        description: A static path to the preprint provider's logo image. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      name:
                        description: The name of the preprint provider.
                        readOnly: true
                        type: string
                      social_facebook:
                        description: The preprint provider's Facebook account ID. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      social_instagram:
                        description: The preprint provider's Instagram account ID. This field is deprecated as of verson 2.4.
                        readOnly: true
                        type: string
                      subjects_acceptable:
                        description: A nested array structure defining allowed subjects for this preprint provider, in the BePress taxonomy.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the preprint provider entity.
                    readOnly: true
                    type: string
                  links:
                    description: Links to alternative representations of the preprint entity.
                    properties:
                      external_url:
                        description: A link to the external website for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                      preprints:
                        description: A link to the preprint list page for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the preprint provider.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: Links to other entities or entity collections that have a relationship to the preprint provider.
                    properties:
                      licenses_acceptable:
                        description: A link to licenses the preprint provider allows.
                        format: URL
                        readOnly: true
                        type: string
                      preprints:
                        description: A link to the preprint list page for the preprint provider.
                        readOnly: true
                        type: string
                      taxonomies:
                        description: A link to the taxonomies the preprint provider allows.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the preprint provider entity (`preprint_providers`).
                    readOnly: true
                    type: string
                title: Preprint Providers
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        advisory_board: ""
                        banner_path: /static/img/preprint_providers/cos-logo.png
                        description: A scholarly commons to connect the entire research cycle
                        domain: osf.io
                        email_contact: ""
                        email_support: ""
                        example: khbvy
                        header_text: ""
                        logo_path: /static/img/preprint_providers/cos-logo.png
                        name: Open Science Framework
                        social_facebook: ""
                        social_instagram: ""
                        social_twitter: ""
                        subjects_acceptable: []
                      id: osf
                      links:
                        external_url: https://osf.io/preprints/
                        preprints: https://api.osf.io/v2/preprint_providers/osf/preprints/
                        self: https://api.osf.io/v2/preprint_providers/osf/
                      relationships:
                        licenses_acceptable:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprint_providers/osf/licenses/
                              meta: {}
                        preprints:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprint_providers/osf/preprints/
                              meta: {}
                        taxonomies:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprint_providers/osf/taxonomies/
                              meta: {}
                      type: preprint_providers
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 5
                      next: null
                      prev: null
          description: OK
      summary: Retrieve a preprint provider
      tags:
        - Preprint Providers
      x-response-schema: Preprint Provider
  "/preprint_providers/{preprint_provider_id}/licenses/":
    get:
      description: |-
        
        A paginated list of the licenses allowed bya preprint provider.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprint_provider_licenses_list
      parameters:
        - description: The unique identifier of the preprint provider.
          in: path
          name: preprint_provider_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the license.
                    properties:
                      name:
                        description: Name of the license.
                        readOnly: true
                        type: string
                      required_fields:
                        description: Fields required for this license (provided to help front-end validators). Maps to properties on the NodeLicense model.
                        items:
                          description: Individual fields required by this license.
                          readOnly: true
                          type: string
                        readOnly: true
                        type: array
                      text:
                        description: Full text of the license.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the license.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the license.
                    properties:
                      self:
                        description: A link to the detail page for the license.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the license (`license`).
                    readOnly: true
                    type: string
                title: License
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          name: No license
                          required_fields:
                            - year
                            - copyrightHolders
                          text: Copyright {{year}} {{copyrightHolders}}
                        id: 563c1cf88c5e4a3877f9e965
                        links:
                          self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/
                        type: licenses
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 3
                      next: null
                      prev: null
          description: OK
      summary: List all licenses
      tags:
        - Preprint Providers
      x-response-schema: Licenses
  "/preprint_providers/{preprint_provider_id}/preprints/":
    get:
      description: |-
        
        A paginated list of preprints from the specified preprint provider. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary with keys that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprint_providers/osf/preprints/?filter[is_published]=true.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: preprint_providers_preprints_list
      parameters:
        - description: The unique identifier of the preprint provider.
          in: path
          name: preprint_provider_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            id: "{node_id}"
                            type: nodes
                        primary_file:
                          data:
                            id: "{primary_file_id}"
                            type: primary_files
                        provider:
                          data:
                            id: "{preprint_provider_id}"
                            type: providers
                  properties:
                    attributes:
                      description: The properties of the preprint entity.
                      properties:
                        date_created:
                          description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_published:
                          description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        doi:
                          description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                          readOnly: false
                          type: string
                        is_preprint_orphan:
                          description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        license_record:
                          description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                          readOnly: false
                          type: string
                        subjects:
                          description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                          items:
                            type: string
                          readOnly: false
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the preprint entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the preprint entity.
                      properties:
                        doi:
                          description: The URL representation of the DOI entered by the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                          type: string
                        html:
                          description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                          format: URL
                          readOnly: true
                          type: string
                        preprint_doi:
                          description: The URL representation of the OSF assigned DOI for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                      properties:
                        citation:
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A relationship to the identifiers associated with the preprint.
                          readOnly: true
                          type: string
                        license:
                          description: A relationship to the license that has been applied to the preprint.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: false
                          type: string
                        primary_file:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                        provider:
                          description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - primary_file
                        - provider
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the preprint entity (`preprints`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Preprint
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_created: 2017-02-03T06:16:57.129000
                          date_modified: 2017-02-03T06:19:00.158000
                          date_published: 2017-02-03T06:18:59.788000
                          doi: null
                          is_preprint_orphan: false
                          is_published: true
                          license_record:
                            copyright_holders: []
                            year: "2017"
                          subjects:
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac1a
                                text: Political Science
                        id: hqb2p
                        links:
                          html: https://osf.io/preprints/socarxiv/hqb2p/
                          self: https://api.osf.io/v2/preprints/hqb2p/
                        relationships:
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/hqb2p/citation/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/5xuck/
                                meta: {}
                          primary_file:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/5894204f594d900200ed23f2/
                                meta: {}
                          provider:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/socarxiv/
                                meta: {}
                        type: preprints
                    links:
                      first: null
                      last: https://api.osf.io/v2/preprints/?page=172
                      meta:
                        per_page: 10
                        total: 1720
                      next: https://api.osf.io/v2/preprints/?page=2
                      prev: null
          description: OK
      summary: List all preprints
      tags:
        - Preprint Providers
      x-response-schema: Preprint
  "/preprint_providers/{preprint_provider_id}/taxonomies/":
    get:
      description: |-
        
        A paginated list of the taxonomies for a preprint provider. The returned preprint providers taxonomies are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprint_provider_taxonomies_list
      parameters:
        - description: The unique identifier of the preprint provider.
          in: path
          name: preprint_provider_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the taxonomy entity.
                    properties:
                      child_count:
                        description: The number of children this taxonomy contains.
                        readOnly: true
                        type: integer
                      parents:
                        description: An array of JSON objects containing keys for `text` (name) and `id` (unique identifier) of this taxonomy's parents
                        items:
                          type: string
                        readOnly: true
                        type: array
                      text:
                        description: The text name of the taxonomy
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the taxonomy entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the taxonomy entity.
                    properties:
                      parents:
                        description: An array of links to to this taxonomy's parents. This field is deprecated as of verson 2.4.
                        items:
                          type: string
                        readOnly: true
                        type: array
                      self:
                        description: A link to the detail page for the taxonomy.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the taxonomy entity (`taxonomies`).
                    readOnly: true
                    type: string
                title: Taxonomy
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240d954be81056ceca97a
                              text: Philosophy
                          text: History of Philosophy
                        id: 584240d854be81056ceca838
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240d954be81056ceca97a/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca838/
                        type: taxonomies
                    links:
                      first: null
                      last: https://api.osf.io/v2/preprint_providers/osf/taxonomies/?page=122
                      meta:
                        per_page: 10
                        total: 1217
                      next: https://api.osf.io/v2/preprint_providers/osf/taxonomies/?page=2
                      prev: null
          description: OK
      summary: List all taxonomies
      tags:
        - Preprint Providers
      x-response-schema: Taxonomies
  /preprints/:
    get:
      description: |-
        
        A paginated list of preprints from all preprint providers. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprints/?filter[provider]=socarxiv.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: preprints_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            id: "{node_id}"
                            type: nodes
                        primary_file:
                          data:
                            id: "{primary_file_id}"
                            type: primary_files
                        provider:
                          data:
                            id: "{preprint_provider_id}"
                            type: providers
                  properties:
                    attributes:
                      description: The properties of the preprint entity.
                      properties:
                        date_created:
                          description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_published:
                          description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        doi:
                          description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                          readOnly: false
                          type: string
                        is_preprint_orphan:
                          description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        license_record:
                          description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                          readOnly: false
                          type: string
                        subjects:
                          description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                          items:
                            type: string
                          readOnly: false
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the preprint entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the preprint entity.
                      properties:
                        doi:
                          description: The URL representation of the DOI entered by the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                          type: string
                        html:
                          description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                          format: URL
                          readOnly: true
                          type: string
                        preprint_doi:
                          description: The URL representation of the OSF assigned DOI for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                      properties:
                        citation:
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A relationship to the identifiers associated with the preprint.
                          readOnly: true
                          type: string
                        license:
                          description: A relationship to the license that has been applied to the preprint.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: false
                          type: string
                        primary_file:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                        provider:
                          description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - primary_file
                        - provider
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the preprint entity (`preprints`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Preprint
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_created: 2017-02-03T06:16:57.129000
                          date_modified: 2017-02-03T06:19:00.158000
                          date_published: 2017-02-03T06:18:59.788000
                          doi: null
                          is_preprint_orphan: false
                          is_published: true
                          license_record:
                            copyright_holders: []
                            year: "2017"
                          subjects:
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac1a
                                text: Political Science
                        id: hqb2p
                        links:
                          html: https://osf.io/preprints/socarxiv/hqb2p/
                          preprint_doi: https://dx.doi.org/10.5072/FK2OSF.IO/HQB2P
                          self: https://api.osf.io/v2/preprints/hqb2p/
                        relationships:
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/hqb2p/citation/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/hqb2p/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/5xuck/
                                meta: {}
                          primary_file:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/5894204f594d900200ed23f2/
                                meta: {}
                          provider:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/socarxiv/
                                meta: {}
                        type: preprints
                    links:
                      first: null
                      last: https://api.osf.io/v2/preprints/?page=172
                      meta:
                        per_page: 10
                        total: 1720
                      next: https://api.osf.io/v2/preprints/?page=2
                      prev: null
          description: OK
      summary: List all preprints
      tags:
        - Preprints
      x-response-schema: Preprint
    post:
      description: |-
        Creates a new preprint.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: preprints_create
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes: {}
                  relationships:
                    node:
                      data:
                        id: "{node_id}"
                        type: nodes
                    primary_file:
                      data:
                        id: "{primary_file_id}"
                        type: primary_files
                    provider:
                      data:
                        id: "{preprint_provider_id}"
                        type: providers
              properties:
                attributes:
                  description: The properties of the preprint entity.
                  properties:
                    date_created:
                      description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    date_modified:
                      description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    date_published:
                      description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    doi:
                      description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                      readOnly: false
                      type: string
                    is_preprint_orphan:
                      description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                      readOnly: true
                      type: boolean
                    license_record:
                      description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                      readOnly: false
                      type: string
                    subjects:
                      description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                      items:
                        type: string
                      readOnly: false
                      type: array
                  readOnly: false
                  title: Attributes
                  type: object
                id:
                  description: The identifier of the preprint entity.
                  readOnly: true
                  type: string
                links:
                  description: URLs to alternative representations of the preprint entity.
                  properties:
                    doi:
                      description: The URL representation of the DOI entered by the user for the preprint manuscript.
                      format: URL
                      readOnly: true
                      type: string
                    html:
                      description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                      format: URL
                      readOnly: true
                      type: string
                    preprint_doi:
                      description: The URL representation of the OSF assigned DOI for the preprint.
                      format: URL
                      readOnly: true
                      type: string
                    self:
                      description: A link to the detail page for the preprint.
                      format: URL
                      readOnly: true
                      type: string
                  readOnly: true
                  title: Links
                  type: object
                relationships:
                  description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                  properties:
                    citation:
                      description: A relationship to the citation of the preprint.
                      readOnly: true
                      type: string
                    identifiers:
                      description: A relationship to the identifiers associated with the preprint.
                      readOnly: true
                      type: string
                    license:
                      description: A relationship to the license that has been applied to the preprint.
                      readOnly: false
                      type: string
                    node:
                      description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                      readOnly: false
                      type: string
                    primary_file:
                      description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                      readOnly: false
                      type: string
                    provider:
                      description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                      readOnly: false
                      type: string
                  readOnly: false
                  required:
                    - node
                    - primary_file
                    - provider
                  title: Relationships
                  type: object
                type:
                  description: The type identifier of the preprint entity (`preprints`).
                  readOnly: false
                  type: string
              required:
                - type
                - relationships
              title: Preprint
              type: object
        required: true
      responses:
        "201":
          description: Success
      summary: Create a preprint
      tags:
        - Preprints
      x-response-schema: Preprint
  "/preprints/{preprint_id}/":
    get:
      description: |-
        Retrieves the details of a preprint.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprints_read
      parameters:
        - description: The unique identifier of the preprint.
          in: path
          name: preprint_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes: {}
                    relationships:
                      node:
                        data:
                          id: "{node_id}"
                          type: nodes
                      primary_file:
                        data:
                          id: "{primary_file_id}"
                          type: primary_files
                      provider:
                        data:
                          id: "{preprint_provider_id}"
                          type: providers
                properties:
                  attributes:
                    description: The properties of the preprint entity.
                    properties:
                      date_created:
                        description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_published:
                        description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      doi:
                        description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                        readOnly: false
                        type: string
                      is_preprint_orphan:
                        description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                        readOnly: true
                        type: boolean
                      license_record:
                        description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                        readOnly: false
                        type: string
                      subjects:
                        description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                        items:
                          type: string
                        readOnly: false
                        type: array
                    readOnly: false
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the preprint entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the preprint entity.
                    properties:
                      doi:
                        description: The URL representation of the DOI entered by the user for the preprint manuscript.
                        format: URL
                        readOnly: true
                        type: string
                      html:
                        description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                        format: URL
                        readOnly: true
                        type: string
                      preprint_doi:
                        description: The URL representation of the OSF assigned DOI for the preprint.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the preprint.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                    properties:
                      citation:
                        description: A relationship to the citation of the preprint.
                        readOnly: true
                        type: string
                      identifiers:
                        description: A relationship to the identifiers associated with the preprint.
                        readOnly: true
                        type: string
                      license:
                        description: A relationship to the license that has been applied to the preprint.
                        readOnly: false
                        type: string
                      node:
                        description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                        readOnly: false
                        type: string
                      primary_file:
                        description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                        readOnly: false
                        type: string
                      provider:
                        description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                        readOnly: false
                        type: string
                    readOnly: false
                    required:
                      - node
                      - primary_file
                      - provider
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the preprint entity (`preprints`).
                    readOnly: false
                    type: string
                required:
                  - type
                  - relationships
                title: Preprint
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        date_created: 2016-08-29T14:53:51.185000
                        date_modified: 2016-08-29T14:53:51.185000
                        date_published: 2016-08-29T14:53:51.185000
                        doi: 10.1371/journal.pbio.1002456
                        is_preprint_orphan: false
                        is_published: true
                        license_record: null
                        subjects:
                          - - id: 584240da54be81056cecac48
                              text: Social and Behavioral Sciences
                            - id: 584240da54be81056cecaab8
                              text: Public Affairs, Public Policy and Public Administration
                            - id: 584240d954be81056cecaa10
                              text: Science and Technology Policy
                          - - id: 584240da54be81056cecac48
                              text: Social and Behavioral Sciences
                            - id: 584240da54be81056cecab33
                              text: Library and Information Science
                            - id: 584240db54be81056cecacd2
                              text: Scholarly Publishing
                          - - id: 584240da54be81056cecac48
                              text: Social and Behavioral Sciences
                            - id: 584240da54be81056cecac68
                              text: Psychology
                          - - id: 584240da54be81056cecac48
                              text: Social and Behavioral Sciences
                            - id: 584240da54be81056cecac68
                              text: Psychology
                      id: khbvy
                      links:
                        doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                        html: https://osf.io/khbvy/
                        preprint_doi: https://dx.doi.org/10.5072/FK2OSF.IO/KHBVY
                        self: https://api.osf.io/v2/preprints/khbvy/
                      relationships:
                        citation:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprints/khbvy/citation/
                              meta: {}
                        identifiers:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprints/khbvy/identifiers/
                              meta: {}
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/bnzx5/
                              meta: {}
                        primary_file:
                          links:
                            related:
                              href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                              meta: {}
                        provider:
                          links:
                            related:
                              href: https://api.osf.io/v2/preprint_providers/osf/
                              meta: {}
                      type: preprints
          description: OK
      summary: Retrieve a preprint
      tags:
        - Preprints
      x-response-schema: Preprint
    patch:
      description: |-
        Updates the specified preprint by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: preprints_partial_update
      parameters:
        - description: The unique identifier of the preprint.
          in: path
          name: preprint_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    doi: "{doi}"
                  id: "{preprint_id}"
                  relationships:
                    primary_file:
                      data:
                        id: "{file_id}"
                        type: primary_files
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update a preprint
      tags:
        - Preprints
      x-response-schema: Preprint
  "/preprints/{preprint_id}/citation/":
    get:
      description: |-
        The citation details for a preprint, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the preprint citation.
      operationId: preprints_citation_list
      parameters:
        - description: The unique identifier of the preprint whose citation you wish to retrieve.
          in: path
          name: preprint_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation entity.
                    properties:
                      author:
                        description: The list of bibliographic authors, represented as dictionaries of their given and family names, for the entitiy being cited.
                        readOnly: true
                        type: string
                      doi:
                        description: The DOI for the entity being cited, if one exists.
                        readOnly: true
                        type: string
                      publisher:
                        description: The publisher of the entity being cited. For nodes and registrations, the publisher is the 'Open Science Framework'. For preprints, the publisher is the same as the preprint provider.
                        readOnly: true
                        type: string
                      title:
                        description: The title of the entity being cited.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the entity being cited.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the citation entity.
                    properties:
                      self:
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the citation entity (either `node-citation`, `preprint-citation`, or `registration-citation`).
                    readOnly: false
                    type: string
                title: Citation Detail
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        author:
                          - family: Kidwell
                            given: Mallory
                          - family: Lazarevic
                            given: Ljiljana B
                          - family: Baranski
                            given: Erica
                          - family: Hardwicke
                            given: Tom E
                          - family: Piechowski
                            given: Sarah
                          - family: Falkenberg
                            given: Lina-Sophia
                          - family: Kennett
                            given: Curtis A
                          - family: Slowik
                            given: Agnieszka
                          - family: Sonnleitner
                            given: Carina
                          - family: Hess-Holden
                            given: Chelsey L
                          - family: Errington
                            given: Timothy M
                          - family: Fiedler
                            given: Susann
                          - family: Nosek
                            given: Brian A
                        publisher: Open Science Framework
                        title: "Badges to Acknowledge Open Practices: A Simple, Low-Cost, Effective Method for Increasing Transparency"
                        type: webpage
                      id: khbvy
                      links:
                        self: osf.io/khbvy
                      type: preprint-citation
          description: ""
      summary: Retrieve citation details
      tags:
        - Preprints
      x-response-schema: Citation Detail
  "/preprints/{preprint_id}/citation/{style_id}/":
    get:
      description: |-
        The citation for a preprint in a specific style.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the preprint citation, in the requested style.
      operationId: preprints_citation_read
      parameters:
        - description: The unique identifier of the citation style.
          in: path
          name: style_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the preprint.
          in: path
          name: preprint_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation style entity.
                    properties:
                      citation:
                        description: The complete entity citation in the requested style.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the citation style, e.g. APA.
                    readOnly: true
                    type: string
                  type:
                    description: The type identifier of the citation style entity (`styled-citations`).
                    readOnly: false
                    type: string
                title: Styled Citation
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        citation: "Kidwell, M., Lazarevic, L. B., Baranski, E., Hardwicke, T. E., Piechowski, S., Falkenberg, L.-S., … Nosek, B. A. (2016, August 29). Badges to Acknowledge Open Practices: A Simple, Low-Cost, Effective Method for Increasing Transparency. http://doi.org/10.1371/journal.pbio.1002456"
                      id: apa
                      links: {}
                      type: styled-citations
          description: ""
      summary: Retrieve a styled citation
      tags:
        - Preprints
      x-response-schema: Styled Citation
  /registrations/:
    get:
      description: |-
        A paginated list of registrations on the OSF to which the user has access.

        The returned registrations are those which are public or which the user has access to view.

        Non-registered nodes cannot be accessed through this endpoint (use the [nodes](#Nodes_nodes_list) endpoints instead).

        #### Registrations
        A registration on the OSF creates a frozen, time-stamped version of a project that cannot be edited or deleted. The *original project* can still be edited, while the registered version cannot.

        Registrations can be made public immediately or embargoed for up to 4 years.

        #### Withdrawals
        Registrations cannot be deleted, but they can be withdrawn. Withdrawing a registration removes the content of the registration but leaves behind basic metadata. A withdrawn registration will display a limited subset of information, namely, title, description, date_created, date_registered, date_withdrawn, registration, withdrawn, withdrawal_justification, and registration supplement. All other fields will be displayed as null. Additionally, the only relationship that remains accesible for a withdrawn registration is the contributors. All other relationships will return a **403 Forbidden** response.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate registration object and contains the full representation of the registration, meaning additional requests to a registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/?filter[title]=open.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: registrations_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        lift_embargo: 2017-05-10T20:44:03.185000
                        registration_choice: embargo
                      type: registrations
                  properties:
                    attributes:
                      description: The properties of the registration entity.
                      properties:
                        category:
                          description: The category of the registered node.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: true
                          type: string
                        collection:
                          description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_registered:
                          description: The time at which this registration was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_withdrawn:
                          description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the registered node.
                          readOnly: true
                          type: string
                        embargo_end_date:
                          description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        fork:
                          description: Whether or not this registration represents a fork of another node.
                          readOnly: true
                          type: boolean
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                          readOnly: true
                          type: string
                        pending_embargo_approval:
                          description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_registration_approval:
                          description: Whether or not the registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_withdrawal:
                          description: Whether or not the registration is pending approval for withdrawal from project administrators.
                          readOnly: true
                          type: boolean
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the registration is publicly visible.
                          readOnly: false
                          type: boolean
                        registered_meta:
                          description: A dictionary with supplemental registration questions and responses.
                          readOnly: true
                          type: string
                        registration:
                          description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        registration_supplement:
                          description: The title of the registration schema this registration conforms to.
                          readOnly: true
                          type: string
                        tags:
                          description: A list of strings that describe the registered node.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        template_from:
                          description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                          readOnly: true
                          type: string
                        title:
                          description: The title of the registered node.
                          readOnly: true
                          type: string
                        withdrawal_justification:
                          description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                          readOnly: true
                          type: string
                        withdrawn:
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                          type: boolean
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the registration.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the registrations entity.
                      properties:
                        html:
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this registration.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the registration entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this registration is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of the registered node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this registration.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this registration.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this registration.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this registration.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this registration.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to this registration.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this registration.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                          readOnly: true
                          type: string
                        registered_by:
                          description: A link to the user that initiated this registration.
                          readOnly: true
                          type: string
                        registered_from:
                          description: A link to the node that this registration was registered from.
                          readOnly: true
                          type: string
                        registration_schema:
                          description: A link to the metaschema that this registration conforms to.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this registration.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the registration entity (`registrations`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Registration
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2015-05-21T19:38:55.398000
                          date_modified: 2016-02-04T20:58:11.042000
                          date_registered: 2015-06-01T14:47:40.064000
                          date_withdrawn: null
                          description: This investigation seeks to evaluate the impact of badges on the availability and accessibility of open data and materials.
                          embargo_end_date: null
                          fork: false
                          node_license: null
                          pending_embargo_approval: false
                          pending_registration_approval: false
                          pending_withdrawal: false
                          preprint: false
                          public: true
                          registered_meta:
                            comments:
                              value: ""
                            datacompletion:
                              value: No
                            looked:
                              value: No
                          registration: true
                          registration_supplement: OSF-Standard Pre-Data Collection Registration
                          tags:
                            - badges
                            - methodology
                            - signals
                            - open science
                            - open data
                            - open materials
                          title: The Effect of Badges on Availability of Data and Materials
                          withdrawal_justification: null
                          withdrawn: false
                        id: ipkea
                        links:
                          html: https://osf.io/ipkea/
                          self: https://api.osf.io/v2/registrations/ipkea/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/comments/?filter%5Btarget%5D=ipkea
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/ipkea/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/logs/
                                meta: {}
                          registered_by:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/z2u9w/
                                meta: {}
                          registered_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/rfgdw/
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/ipkea/wikis/
                                meta: {}
                        type: registrations
                    links:
                      first: null
                      last: https://api.osf.io/v2/registrations/?page=856
                      meta:
                        per_page: 10
                        total: 8559
                      next: https://api.osf.io/v2/registrations/?page=2
                      prev: null
          description: OK
      summary: List all registrations
      tags:
        - Registrations
      x-response-schema: Registration
  "/registrations/{registration_id}/":
    get:
      description: |-
        Retrieve the details of a given registration.
        #### Permissions
        Only project contributors may retrieve the details of a registration that is embargoed, or has not yet been made public. Attempting to retrieve a private registration for which you are not a contributor will result in a **403 Forbidden** response.

        Authentication is not required to view the details of a public registration, as public registrations give read-only access to everyone.
        #### Registrations
        A registration on the OSF creates a frozen, time-stamped version of a project that cannot be edited or deleted. The *original project* can still be edited, while the registered version cannot.

        Registrations can be made public immediately or embargoed for up to 4 years.

        #### Withdrawals
        Registrations cannot be deleted, but they can be withdrawn. Withdrawing a registration removes the content of the registration but leaves behind basic metadata. A withdrawn registration will display a limited subset of information, namely, title, description, date_created, date_registered, date_withdrawn, registration, withdrawn, withdrawal_justification, and registration supplement. All other fields will be displayed as null. Additionally, the only relationship that remains accesible for a withdrawn registration is the contributors. All other relationships will return a **403 Forbidden** response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_read
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      draft_registration: "{draft_registration_id}"
                      lift_embargo: 2017-05-10T20:44:03.185000
                      registration_choice: embargo
                    type: registrations
                properties:
                  attributes:
                    description: The properties of the registration entity.
                    properties:
                      category:
                        description: The category of the registered node.
                        enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        readOnly: true
                        type: string
                      collection:
                        description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                        readOnly: true
                        type: boolean
                      current_user_can_comment:
                        description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                        readOnly: true
                        type: boolean
                      current_user_permissions:
                        description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                        items:
                          type: string
                        readOnly: true
                        type: array
                      date_created:
                        description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_registered:
                        description: The time at which this registration was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_withdrawn:
                        description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      description:
                        description: The description of the registered node.
                        readOnly: true
                        type: string
                      embargo_end_date:
                        description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      fork:
                        description: Whether or not this registration represents a fork of another node.
                        readOnly: true
                        type: boolean
                      node_license:
                        description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                        readOnly: true
                        type: string
                      pending_embargo_approval:
                        description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                        readOnly: true
                        type: boolean
                      pending_registration_approval:
                        description: Whether or not the registration is pending approval from project administrators.
                        readOnly: true
                        type: boolean
                      pending_withdrawal:
                        description: Whether or not the registration is pending approval for withdrawal from project administrators.
                        readOnly: true
                        type: boolean
                      preprint:
                        description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                        readOnly: true
                        type: boolean
                      public:
                        description: Whether or not the registration is publicly visible.
                        readOnly: false
                        type: boolean
                      registered_meta:
                        description: A dictionary with supplemental registration questions and responses.
                        readOnly: true
                        type: string
                      registration:
                        description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                        readOnly: true
                        type: boolean
                      registration_supplement:
                        description: The title of the registration schema this registration conforms to.
                        readOnly: true
                        type: string
                      tags:
                        description: A list of strings that describe the registered node.
                        items:
                          type: string
                        readOnly: true
                        type: array
                      template_from:
                        description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                        readOnly: true
                        type: string
                      title:
                        description: The title of the registered node.
                        readOnly: true
                        type: string
                      withdrawal_justification:
                        description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                        readOnly: true
                        type: string
                      withdrawn:
                        description: Whether or not this registration has been withdrawn.
                        readOnly: true
                        type: boolean
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the registration.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the registrations entity.
                    properties:
                      html:
                        description: A link to the registration's page on the OSF.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the canonical API endpoint of this registration.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the registration entity.
                    properties:
                      affiliated_institutions:
                        description: A link to the list of institutions this registration is affiliated with.
                        readOnly: true
                        type: string
                      children:
                        description: A link to the list of the registered node's children (components).
                        readOnly: true
                        type: string
                      citation:
                        description: A link to the citation details of this registration.
                        readOnly: true
                        type: string
                      comments:
                        description: A link to the list of comments on this registration.
                        readOnly: true
                        type: string
                      contributors:
                        description: A link to the list of contributors on this registration.
                        readOnly: true
                        type: string
                      files:
                        description: A link to the list of storage providers that have been enabled on this registration.
                        readOnly: true
                        type: string
                      forks:
                        description: A link to the list of nodes that are forks of this registration.
                        readOnly: true
                        type: string
                      identifiers:
                        description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                        readOnly: true
                        type: string
                      linked_nodes:
                        description: A link to the list of nodes that are linked to this registration.
                        readOnly: true
                        type: string
                      logs:
                        description: A link to the list of log actions pertaining to this registration.
                        readOnly: true
                        type: string
                      node_links:
                        description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                        readOnly: true
                        type: string
                      parent:
                        description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                        readOnly: true
                        type: string
                      registered_by:
                        description: A link to the user that initiated this registration.
                        readOnly: true
                        type: string
                      registered_from:
                        description: A link to the node that this registration was registered from.
                        readOnly: true
                        type: string
                      registration_schema:
                        description: A link to the metaschema that this registration conforms to.
                        readOnly: true
                        type: string
                      root:
                        description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                        readOnly: true
                        type: string
                      view_only_links:
                        description: A link to the list of view only links that have been created for this registration.
                        readOnly: true
                        type: string
                      wikis:
                        description: A link to the list of wiki pages for this registration.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the registration entity (`registrations`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                  - links
                title: Registration
                type: object
          description: OK
      summary: Retrieve a registration
      tags:
        - Registrations
      x-response-schema: Registration
    patch:
      description: |-
        Updates a registration's privacy from **private** to **public**.

        Registrations can be updated with either a **PUT** or **PATCH** request. The `public` field is the only field that can be modified on a registration

        Registrations can only be turned from private to public, not vice versa.
        #### Permissions
        Only project administrators may update a registration.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_partial_update
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/registrations_partial_updateBody"
      responses:
        "200":
          description: Created
      summary: Update a registration
      tags:
        - Registrations
  "/registrations/{registration_id}/children/":
    get:
      description: |-
        
        A paginated list of children of a registration.

        The list consists of the next level child registrations for the given registration. The returned registrations are sorted by their `date_modified`, with the most recently updated child registrations appearing first.

        The list will include child registrations that are public, as well as child registrations that are private, if the authenticated user has permission to view them.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 child registrations. If the given registration has zero child registrations, the `data` key will contain an empty array. Each resource in the array is a separate registration object and contains the full representation of the child registration.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/children/?filter[title]=reproducibility.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public is a boolean field, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: registrations_children_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        lift_embargo: 2017-05-10T20:44:03.185000
                        registration_choice: embargo
                      type: registrations
                  properties:
                    attributes:
                      description: The properties of the registration entity.
                      properties:
                        category:
                          description: The category of the registered node.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: true
                          type: string
                        collection:
                          description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_registered:
                          description: The time at which this registration was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_withdrawn:
                          description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the registered node.
                          readOnly: true
                          type: string
                        embargo_end_date:
                          description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        fork:
                          description: Whether or not this registration represents a fork of another node.
                          readOnly: true
                          type: boolean
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                          readOnly: true
                          type: string
                        pending_embargo_approval:
                          description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_registration_approval:
                          description: Whether or not the registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_withdrawal:
                          description: Whether or not the registration is pending approval for withdrawal from project administrators.
                          readOnly: true
                          type: boolean
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the registration is publicly visible.
                          readOnly: false
                          type: boolean
                        registered_meta:
                          description: A dictionary with supplemental registration questions and responses.
                          readOnly: true
                          type: string
                        registration:
                          description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        registration_supplement:
                          description: The title of the registration schema this registration conforms to.
                          readOnly: true
                          type: string
                        tags:
                          description: A list of strings that describe the registered node.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        template_from:
                          description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                          readOnly: true
                          type: string
                        title:
                          description: The title of the registered node.
                          readOnly: true
                          type: string
                        withdrawal_justification:
                          description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                          readOnly: true
                          type: string
                        withdrawn:
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                          type: boolean
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the registration.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the registrations entity.
                      properties:
                        html:
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this registration.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the registration entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this registration is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of the registered node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this registration.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this registration.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this registration.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this registration.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this registration.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to this registration.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this registration.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                          readOnly: true
                          type: string
                        registered_by:
                          description: A link to the user that initiated this registration.
                          readOnly: true
                          type: string
                        registered_from:
                          description: A link to the node that this registration was registered from.
                          readOnly: true
                          type: string
                        registration_schema:
                          description: A link to the metaschema that this registration conforms to.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this registration.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the registration entity (`registrations`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Registration
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2016-05-23T12:11:14.853000
                          date_modified: 2016-05-23T14:22:03.885000
                          date_registered: 2016-05-23T14:24:25.478000
                          description: ""
                          embargo_end_date: null
                          fork: false
                          node_license: null
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/node_links/
                                meta: {}
                          pending_embargo_approval: false
                          pending_registration_approval: false
                          pending_withdrawal: false
                          preprint: false
                          public: true
                          registered_meta:
                            comments:
                              comments: []
                              extra: []
                              value: Data collection for measurement time T1 is underway, but no data has been collected for T2 (when menstrual cycle information will be assessed). Therefore, data cannot be analysed at the time of preregistration.
                            datacompletion:
                              comments: []
                              extra: []
                              value: Yes, data collection is underway or complete
                            looked:
                              comments: []
                              extra: []
                              value: No
                          registration: true
                          registration_supplement: OSF-Standard Pre-Data Collection Registration
                          tags: []
                          title: Full Project Description
                          withdrawal_justification: null
                          withdrawn: false
                        id: 4cmnz
                        links:
                          html: https://osf.io/4cmnz/
                          self: https://api.osf.io/v2/registrations/4cmnz/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/comments/?filter%5Btarget%5D=4cmnz
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/4cmnz/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/logs/
                                meta: {}
                          parent:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wucr8/
                                meta: {}
                          registered_by:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                          registered_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/5wprs/
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wucr8/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/wikis/
                                meta: {}
                        type: registrations
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all child registrations
      tags:
        - Registrations
      x-response-schema: Registration
  "/registrations/{registration_id}/citations/":
    get:
      description: |-
        
        A paginated list of the registration's alternative citation styles

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 citation styles. Each resource in the array is a separate citation styles object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include citation styles that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/citations/?filter[title]=open.

        Citation styles may be filtered by their `id`, `title`, `short-title`, and `summary`.
      operationId: registrations_citations_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the citation style entity.
                      properties:
                        date_parsed:
                          description: The time at which the citation style was first parsed, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        short_title:
                          description: The short name for the citation style.
                          readOnly: true
                          type: string
                        summary:
                          description: The summary of the citation style.
                          readOnly: true
                          type: string
                        title:
                          description: The official name of the citation style.
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - date_parsed
                        - title
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the citation style, e.g. APA.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the citation style entity.
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the citation style entity (`citation-styles`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                  title: Citation Style
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_parsed: 2015-02-16T04:16:25.732000
                          short_title: AMR
                          summary: null
                          title: Academy of Management Review
                        id: academy-of-management-review
                        links: {}
                        type: citation-styles
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all citation styles
      tags:
        - Registrations
      x-response-schema: Citation Style
  "/registrations/{registration_id}/citations/{citation_id}/":
    get:
      description: |-
        Retrieves the citation style details for a registration, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the citation style.
      operationId: registrations_citation_read
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the citation.
          in: path
          name: citation_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the citation entity.
                    properties:
                      author:
                        description: The list of bibliographic authors, represented as dictionaries of their given and family names, for the entitiy being cited.
                        readOnly: true
                        type: string
                      doi:
                        description: The DOI for the entity being cited, if one exists.
                        readOnly: true
                        type: string
                      publisher:
                        description: The publisher of the entity being cited. For nodes and registrations, the publisher is the 'Open Science Framework'. For preprints, the publisher is the same as the preprint provider.
                        readOnly: true
                        type: string
                      title:
                        description: The title of the entity being cited.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the entity being cited.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the citation entity.
                    properties:
                      self:
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the citation entity (either `node-citation`, `preprint-citation`, or `registration-citation`).
                    readOnly: false
                    type: string
                title: Citation Detail
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        author:
                          - family: Errington
                            given: Timothy M
                          - family: Vasilevsky
                            given: Nicole
                          - family: Haendel
                            given: Melissa A
                        publisher: Open Science Framework
                        title: Identification Analysis of RP:CB
                        type: webpage
                      id: bg4di
                      links:
                        self: osf.io/bg4di
                      type: node-citation
          description: OK
      summary: Retrieve a citation
      tags:
        - Registrations
      x-response-schema: Citation Detail
  "/registrations/{registration_id}/comments/":
    get:
      description: |-
        
        A paginated list of the registration's comments.

        The returned comments are sorted by their creation date, with the most recent comments appearing first.
        #### Permissions
        Comments of public registrations are given read-only access to everyone.

        If the comment-level is `private`, only registration contributors have permission to comment.

        If the comment-level is `public`, any logged-in OSF user can comment.

        Comments of private registrations are only visible to contributors and administrators on the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include comments that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wuerf/comments/?filter[target]=wuerf

        Comments may be filtered by their `deleted`, `target`, `date_created`, `date_modified`.

        Most fields are string fields and will be filtered using simple substring matching. Deleted is a boolean field, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting `true` or `false` in the query will cause the match to fail.
      operationId: registrations_comments_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        content: comment content
                      relationships:
                        target:
                          data:
                            id: "{target_id}"
                            type: "{target_type}"
                      type: comments
                  properties:
                    attributes:
                      description: The properties of the comment entity.
                      properties:
                        can_edit:
                          description: Whether or not the current user has permission to edit this comment
                          readOnly: true
                          type: boolean
                        content:
                          description: The content of the comment.
                          readOnly: false
                          type: string
                        date_created:
                          description: The time at which the comment was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the comment was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        deleted:
                          description: Whether or not the comment is deleted.
                          readOnly: true
                          type: boolean
                        has_children:
                          description: Whether or not the comment has replies.
                          readOnly: true
                          type: boolean
                        has_report:
                          description: Whether or not the comment the current user reported this as spam.
                          readOnly: true
                          type: boolean
                        is_abuse:
                          description: Whether or not the comment is flagged or confirmed spam.
                          readOnly: true
                          type: boolean
                        is_ham:
                          description: Whether or not an admin checked the legitimacy of this comment.
                          readOnly: true
                          type: boolean
                        modified:
                          description: Whether or not the comment has been edited.
                          readOnly: true
                          type: boolean
                        page:
                          description: The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the comment entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the comment entity.
                      properties:
                        self:
                          description: A link to the detail page for the comment.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the comment entity.
                      properties:
                        node:
                          description: A relationship to the node the comment is on.
                          format: URL
                          readOnly: true
                          type: string
                        replies:
                          description: A relationship to the replies to the comment.
                          format: URL
                          readOnly: true
                          type: string
                        reports:
                          description: A relationship to the reports connected to the comment.
                          format: URL
                          readOnly: true
                          type: string
                        target:
                          description: A relationship to the target of the comment.
                          format: URL
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the user who created the comment.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the comment entity (`comments`).
                      readOnly: true
                      type: string
                  required:
                    - id
                  title: Comment
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          can_edit: false
                          content: |-
                            We have published a Bayesian reanalysis of this project at PLOS ONE: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0149794

                            I explain some of the context on my blog: http://alexanderetz.com/2016/02/26/the-bayesian-rpp-take-2/

                            Please note that the analysis we use in this paper is very different from the analysis used in the blog I posted in the previous comment, so the results are different as well.
                          date_created: 2016-02-27T13:50:24.240000
                          date_modified: 2016-04-01T04:45:44.123000
                          deleted: false
                          has_children: false
                          has_report: false
                          is_abuse: false
                          is_ham: false
                          modified: false
                          page: node
                        id: jg7sezmdnt93
                        links:
                          self: https://api.osf.io/v2/comments/jg7sezmdnt93/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          replies:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=jg7sezmdnt93
                                meta: {}
                          reports:
                            links:
                              related:
                                href: https://api.osf.io/v2/comments/jg7sezmdnt93/reports/
                                meta: {}
                          target:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta:
                                  type: nodes
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/6yc8z/
                                meta: {}
                        type: comments
                      - attributes:
                          can_edit: false
                          content: In this blog http://wp.me/p4sgtg-o6 I conduct a Bayesian Re-analysis of the Reproducibility Project that gives a graded measure of replication success. In an attempt to avoid dichotomous success/fail replication outcomes, I calculate a continous outcome (Bayes factor) that answers the question, does the replication result fit more with the original reported effect or a null effect? Many replications are strong successes, many are strong failures, and there are many that lie somewhere in between.
                          date_created: 2015-08-30T14:50:21.093000
                          date_modified: 2016-04-01T04:45:37.437000
                          deleted: false
                          has_children: false
                          has_report: false
                          is_abuse: false
                          is_ham: false
                          modified: null
                          page: node
                        id: 23pk9
                        links:
                          self: https://api.osf.io/v2/comments/23pk9/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          replies:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=23pk9
                                meta: {}
                          reports:
                            links:
                              related:
                                href: https://api.osf.io/v2/comments/23pk9/reports/
                                meta: {}
                          target:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta:
                                  type: nodes
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/6yc8z/
                                meta: {}
                        type: comments
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all comments
      tags:
        - Registrations
      x-response-schema: Comment
  "/registrations/{registration_id}/contributors/":
    get:
      description: |-
        A paginated list of all contributors on this registration.
        The returned contributors are sorted by their index.

        Contributors are users who can make changes to the registration or, in the case of private registration, have read access to the registration.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed in the contributors list on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 contributors. Each resource in the array contains the full representation of the contributor. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wu3a4/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: registrations_contributors_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        user:
                          data:
                            id: "{user_id}"
                            type: users
                      type: contributors
                  properties:
                    attributes:
                      description: The properties of the contributor entity.
                      properties:
                        bibliographic:
                          description: Whether or not the contributor will be included in citations for the node. The default value is true.
                          readOnly: false
                          type: boolean
                        index:
                          description: The position of this contributor in the list of project contributors and in project citations.
                          readOnly: false
                          type: integer
                        permission:
                          description: The permission level of the contributor. The default value is 'write'.
                          enum:
                            - read
                            - write
                            - admin
                          readOnly: false
                          type: string
                        unregistered_contributor:
                          description: The assigned name of the contributor if the contributor has not yet claimed their account.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the contributor entity. Contributor identifiers have the form {node_id}-{user_id}.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the contributor entity.
                      properties:
                        self:
                          description: A link to the the canonical API endpoint for the contributor.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the contributor entity.
                      properties:
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                      type: string
                  required:
                    - type
                    - relationships
                  title: Contributor
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          bibliographic: true
                          index: 0
                          permission: admin
                          unregistered_contributor: null
                        embeds:
                          users:
                            data:
                              attributes:
                                active: true
                                date_registered: 2014-10-22T13:48:22.652000
                                family_name: Anderl
                                full_name: Christine Anderl
                                given_name: Christine
                                locale: de
                                middle_names: ""
                                suffix: ""
                                timezone: America/Los_Angeles
                              id: 7xea5
                              links:
                                html: https://osf.io/7xea5/
                                profile_image: https://secure.gravatar.com/avatar/0ddf92ef0f0a7011c21cd07d7940bc32?d=identicon
                              relationships:
                                institutions:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/users/7xea5/institutions/
                                      meta: {}
                                    self:
                                      href: https://api.osf.io/v2/users/7xea5/relationships/institutions/
                                      meta: {}
                                nodes:
                                  links:
                                    related:
                                      href: https://api.osf.io/v2/users/7xea5/nodes/
                                      meta: {}
                              type: users
                        id: wucr8-7xea5
                        links:
                          self: https://api.osf.io/v2/registrations/wucr8/contributors/7xea5/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/wucr8/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                        type: contributors
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all contributors
      tags:
        - Registrations
      x-response-schema: Contributor
  "/registrations/{registration_id}/contributors/{user_id}/":
    get:
      description: |-
        Retrieves the details of a contributor on this registration.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_contributors_read
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        user:
                          data:
                            id: "{user_id}"
                            type: users
                      type: contributors
                  properties:
                    attributes:
                      description: The properties of the contributor entity.
                      properties:
                        bibliographic:
                          description: Whether or not the contributor will be included in citations for the node. The default value is true.
                          readOnly: false
                          type: boolean
                        index:
                          description: The position of this contributor in the list of project contributors and in project citations.
                          readOnly: false
                          type: integer
                        permission:
                          description: The permission level of the contributor. The default value is 'write'.
                          enum:
                            - read
                            - write
                            - admin
                          readOnly: false
                          type: string
                        unregistered_contributor:
                          description: The assigned name of the contributor if the contributor has not yet claimed their account.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the contributor entity. Contributor identifiers have the form {node_id}-{user_id}.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the contributor entity.
                      properties:
                        self:
                          description: A link to the the canonical API endpoint for the contributor.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the contributor entity.
                      properties:
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                      type: string
                  required:
                    - type
                    - relationships
                  title: Contributor
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        bibliographic: true
                        index: 0
                        permission: admin
                        unregistered_contributor: null
                      embeds:
                        users:
                          data:
                            attributes:
                              active: true
                              date_registered: 2014-10-22T13:48:22.652000
                              family_name: Anderl
                              full_name: Christine Anderl
                              given_name: Christine
                              locale: de
                              middle_names: ""
                              suffix: ""
                              timezone: America/Los_Angeles
                            id: 7xea5
                            links:
                              html: https://osf.io/7xea5/
                              profile_image: https://secure.gravatar.com/avatar/0ddf92ef0f0a7011c21cd07d7940bc32?d=identicon
                            relationships:
                              institutions:
                                links:
                                  related:
                                    href: https://api.osf.io/v2/users/7xea5/institutions/
                                    meta: {}
                                  self:
                                    href: https://api.osf.io/v2/users/7xea5/relationships/institutions/
                                    meta: {}
                              nodes:
                                links:
                                  related:
                                    href: https://api.osf.io/v2/users/7xea5/nodes/
                                    meta: {}
                            type: users
                      id: wucr8-7xea5
                      links:
                        self: https://api.osf.io/v2/registrations/wucr8/contributors/7xea5/
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/wucr8/
                              meta: {}
                        users:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/7xea5/
                              meta: {}
                      type: contributors
          description: OK
      summary: Retrieve a contributor
      tags:
        - Registrations
      x-response-schema: Contributor
  "/registrations/{registration_id}/files/":
    get:
      description: |-
        A paginated list of storage providers enabled on the registration

        Users of the OSF may access their data on a [number of cloud-storage services](https://api.osf.io/v2/#storage-providers) that have integrations with the OSF. We call these **providers**. By default, every node has access to the OSF-provided storage but may use as many of the supported providers as desired.


        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 files. Each resource in the array is a separate file object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        Note: In the OSF filesystem model, providers are treated as folders, but with special properties that distinguish them from regular folders. Every provider folder is considered a root folder, and may not be deleted through the regular file API.
      operationId: registrations_providers_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file entity.
                      properties:
                        checkout:
                          description: SOON TO BE DEPRECATED, see relationships checkout.
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether or not the current user is allowed to post comments.
                          readOnly: true
                          type: boolean
                        current_version:
                          description: Version number of the file.
                          readOnly: true
                          type: integer
                        date_created:
                          description: The time at which the file was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        delete_allowed:
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                          type: boolean
                        extra:
                          description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                          readOnly: true
                          type: object
                        guid:
                          description: Global unique identifier (GUID) for this file (if one has been assigned).
                          readOnly: true
                          type: string
                        kind:
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                          type: string
                        last_touched:
                          description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Unix-style path to the file relative to the provider root.
                          readOnly: true
                          type: string
                        name:
                          description: Name of the file
                          readOnly: false
                          type: string
                        path:
                          description: The unique identifier for this file entity for this project and storage provider.
                          readOnly: true
                          type: string
                        provider:
                          description: The id of the file provider (e.g., `osfstorage`)
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                        tags:
                          description: A list of strings that describe this file, as entered by project contributors.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the file entity.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file entity.
                      properties:
                        delete:
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                          type: string
                        download:
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the page to view a file's information or a folder's contents.
                          format: URL
                          readOnly: true
                          type: string
                        move:
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                          type: string
                        new_folder:
                          description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                          type: string
                        upload:
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: Links to other entities or entity collections that have a relationship to the file entity.
                      properties:
                        checkout:
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                          type: string
                        node:
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                          type: string
                        versions:
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                      type: string
                  title: File
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          kind: folder
                          name: osfstorage
                          node: ezcuj
                          path: /
                          provider: osfstorage
                        id: ezcuj:osfstorage
                        links:
                          new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                          storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                          upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                        relationships:
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                                meta: {}
                        type: files
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all storage providers
      tags:
        - Registrations
      x-response-schema: File
  "/registrations/{registration_id}/files/{provider}/":
    get:
      description: |-
        List of all the registration's files/folders for a given storage provider.

        #### Returns

        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object and contains the full representation of the file.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering

        You can optionally request that the response only include files that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/files/osfstorage/?filter[kind]=file

        Files may be filtered by `id`, `name`, `node`, `kind`, `path`, `provider`, `size`, and `last_touched`.
      operationId: registrations_files_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the storage provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the file entity.
                      properties:
                        checkout:
                          description: SOON TO BE DEPRECATED, see relationships checkout.
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether or not the current user is allowed to post comments.
                          readOnly: true
                          type: boolean
                        current_version:
                          description: Version number of the file.
                          readOnly: true
                          type: integer
                        date_created:
                          description: The time at which the file was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        delete_allowed:
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                          type: boolean
                        extra:
                          description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                          readOnly: true
                          type: object
                        guid:
                          description: Global unique identifier (GUID) for this file (if one has been assigned).
                          readOnly: true
                          type: string
                        kind:
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                          type: string
                        last_touched:
                          description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Unix-style path to the file relative to the provider root.
                          readOnly: true
                          type: string
                        name:
                          description: Name of the file
                          readOnly: false
                          type: string
                        path:
                          description: The unique identifier for this file entity for this project and storage provider.
                          readOnly: true
                          type: string
                        provider:
                          description: The id of the file provider (e.g., `osfstorage`)
                          readOnly: true
                          type: string
                        size:
                          description: Size of the file in bytes.
                          readOnly: true
                          type: integer
                        tags:
                          description: A list of strings that describe this file, as entered by project contributors.
                          items:
                            type: string
                          readOnly: true
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the file entity.
                      readOnly: true
                      type: string
                    links:
                      description: Links to alternative representations of the file entity.
                      properties:
                        delete:
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                          type: string
                        download:
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the page to view a file's information or a folder's contents.
                          format: URL
                          readOnly: true
                          type: string
                        move:
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                          type: string
                        new_folder:
                          description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                          type: string
                        upload:
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: Links to other entities or entity collections that have a relationship to the file entity.
                      properties:
                        checkout:
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                          type: string
                        node:
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                          type: string
                        versions:
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                      type: string
                  title: File
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          checkout: null
                          current_user_can_comment: true
                          current_version: 1
                          date_created: 2014-10-17T19:24:12.264Z
                          date_modified: 2014-10-17T19:24:12.264Z
                          delete_allowed: true
                          extra:
                            downloads: 447
                            hashes:
                              md5: 44325d4f13b09f3769ede09d7c20a82c
                              sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                          guid: sejcv
                          kind: file
                          last_touched: 2015-09-18T01:11:16.328000
                          materialized_path: /OSC2012.pdf
                          name: OSC2012.pdf
                          path: /553e69248c5e4a219919ea54
                          provider: osfstorage
                          size: 216945
                          tags: []
                        id: 553e69248c5e4a219919ea54
                        links:
                          delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                          move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                          self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                          upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        relationships:
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/ezcuj/
                                meta: {}
                          versions:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                                meta: {}
                        type: files
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all files
      tags:
        - Registrations
      x-response-schema: File
  "/registrations/{registration_id}/files/{provider}/{path}/":
    get:
      description: |-
        Retrieves the details of a registration file for the given storage provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested registration file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_files_read
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the storage provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: The unique identifier of the file path.
          in: path
          name: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the file entity.
                    properties:
                      checkout:
                        description: SOON TO BE DEPRECATED, see relationships checkout.
                        readOnly: true
                        type: string
                      current_user_can_comment:
                        description: Whether or not the current user is allowed to post comments.
                        readOnly: true
                        type: boolean
                      current_version:
                        description: Version number of the file.
                        readOnly: true
                        type: integer
                      date_created:
                        description: The time at which the file was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      date_modified:
                        description: The time at which the file was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      delete_allowed:
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                        type: boolean
                      extra:
                        description: Extra information, contains `hashes` (`sha256`, `md5`) and `downloads` count.
                        readOnly: true
                        type: object
                      guid:
                        description: Global unique identifier (GUID) for this file (if one has been assigned).
                        readOnly: true
                        type: string
                      kind:
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                        type: string
                      last_touched:
                        description: The time at which the file external metadata was last retrieved as an iso8601 formatted timestamp (does not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                        type: string
                      materialized_path:
                        description: Unix-style path to the file relative to the provider root.
                        readOnly: true
                        type: string
                      name:
                        description: Name of the file
                        readOnly: false
                        type: string
                      path:
                        description: The unique identifier for this file entity for this project and storage provider.
                        readOnly: true
                        type: string
                      provider:
                        description: The id of the file provider (e.g., `osfstorage`)
                        readOnly: true
                        type: string
                      size:
                        description: Size of the file in bytes.
                        readOnly: true
                        type: integer
                      tags:
                        description: A list of strings that describe this file, as entered by project contributors.
                        items:
                          type: string
                        readOnly: true
                        type: array
                    readOnly: false
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the file entity.
                    readOnly: true
                    type: string
                  links:
                    description: Links to alternative representations of the file entity.
                    properties:
                      delete:
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                        type: string
                      download:
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                        type: string
                      info:
                        description: A link to the page to view a file's information or a folder's contents.
                        format: URL
                        readOnly: true
                        type: string
                      move:
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                        type: string
                      new_folder:
                        description: The Waterbutler API route for creating a new subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                        type: string
                      upload:
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: Links to other entities or entity collections that have a relationship to the file entity.
                    properties:
                      checkout:
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                        type: string
                      comments:
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                        type: string
                      node:
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                        type: string
                      versions:
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                    type: string
                title: File
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        checkout: null
                        current_user_can_comment: true
                        current_version: 1
                        date_created: 2014-10-17T19:24:12.264Z
                        date_modified: 2014-10-17T19:24:12.264Z
                        delete_allowed: true
                        extra:
                          downloads: 447
                          hashes:
                            md5: 44325d4f13b09f3769ede09d7c20a82c
                            sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        guid: sejcv
                        kind: file
                        last_touched: 2015-09-18T01:11:16.328000
                        materialized_path: /OSC2012.pdf
                        name: OSC2012.pdf
                        path: /553e69248c5e4a219919ea54
                        provider: osfstorage
                        size: 216945
                        tags: []
                      id: 553e69248c5e4a219919ea54
                      links:
                        delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                        self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                        upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                      relationships:
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                              meta: {}
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        versions:
                          links:
                            related:
                              href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                              meta: {}
                      type: files
          description: OK
      summary: Retrieve a file
      tags:
        - Registrations
      x-response-schema: File
  "/registrations/{registration_id}/forks/":
    get:
      description: |-
        
        A paginated list of the registration’s forks

        The returned forks are sorted by their `forked_date`, with the most recent forks appearing first.

        Forking a registration creates a copy of an existing registration and all of its contents.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 forks. If the current registration has no fork, the `data` key will contain an empty array. Each resource in the array is a separate registration object and contains the full representation of the registration's fork.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: registrations_forks_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        lift_embargo: 2017-05-10T20:44:03.185000
                        registration_choice: embargo
                      type: registrations
                  properties:
                    attributes:
                      description: The properties of the registration entity.
                      properties:
                        category:
                          description: The category of the registered node.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: true
                          type: string
                        collection:
                          description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_registered:
                          description: The time at which this registration was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_withdrawn:
                          description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the registered node.
                          readOnly: true
                          type: string
                        embargo_end_date:
                          description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        fork:
                          description: Whether or not this registration represents a fork of another node.
                          readOnly: true
                          type: boolean
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                          readOnly: true
                          type: string
                        pending_embargo_approval:
                          description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_registration_approval:
                          description: Whether or not the registration is pending approval from project administrators.
                          readOnly: true
                          type: boolean
                        pending_withdrawal:
                          description: Whether or not the registration is pending approval for withdrawal from project administrators.
                          readOnly: true
                          type: boolean
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the registration is publicly visible.
                          readOnly: false
                          type: boolean
                        registered_meta:
                          description: A dictionary with supplemental registration questions and responses.
                          readOnly: true
                          type: string
                        registration:
                          description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        registration_supplement:
                          description: The title of the registration schema this registration conforms to.
                          readOnly: true
                          type: string
                        tags:
                          description: A list of strings that describe the registered node.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        template_from:
                          description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                          readOnly: true
                          type: string
                        title:
                          description: The title of the registered node.
                          readOnly: true
                          type: string
                        withdrawal_justification:
                          description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                          readOnly: true
                          type: string
                        withdrawn:
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                          type: boolean
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the registration.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the registrations entity.
                      properties:
                        html:
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this registration.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the registration entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this registration is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of the registered node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this registration.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this registration.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this registration.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this registration.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this registration.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to this registration.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this registration.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                          readOnly: true
                          type: string
                        registered_by:
                          description: A link to the user that initiated this registration.
                          readOnly: true
                          type: string
                        registered_from:
                          description: A link to the node that this registration was registered from.
                          readOnly: true
                          type: string
                        registration_schema:
                          description: A link to the metaschema that this registration conforms to.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this registration.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the registration entity (`registrations`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Registration
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2016-05-23T12:11:14.853000
                          date_modified: 2016-05-23T14:22:03.885000
                          date_registered: 2016-05-23T14:24:25.478000
                          description: ""
                          embargo_end_date: null
                          fork: false
                          node_license: null
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/node_links/
                                meta: {}
                          pending_embargo_approval: false
                          pending_registration_approval: false
                          pending_withdrawal: false
                          preprint: false
                          public: true
                          registered_meta:
                            comments:
                              comments: []
                              extra: []
                              value: Data collection for measurement time T1 is underway, but no data has been collected for T2 (when menstrual cycle information will be assessed). Therefore, data cannot be analysed at the time of preregistration.
                            datacompletion:
                              comments: []
                              extra: []
                              value: Yes, data collection is underway or complete
                            looked:
                              comments: []
                              extra: []
                              value: No
                          registration: true
                          registration_supplement: OSF-Standard Pre-Data Collection Registration
                          tags: []
                          title: Full Project Description
                          withdrawal_justification: null
                          withdrawn: false
                        id: 4cmnz
                        links:
                          html: https://osf.io/4cmnz/
                          self: https://api.osf.io/v2/registrations/4cmnz/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/comments/?filter%5Btarget%5D=4cmnz
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/4cmnz/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/logs/
                                meta: {}
                          parent:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wucr8/
                                meta: {}
                          registered_by:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                          registered_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/5wprs/
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wucr8/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/wikis/
                                meta: {}
                        type: registrations
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all forks
      tags:
        - Registrations
      x-response-schema: Registration
    post:
      description: |-
        Creates a fork of the given registration.

        Forking a project creates a copy of an existing registration and all of its contents. The fork always points back to the original registration, forming a network of registrations.

        You might use a fork to copy another's work to build on and extend. For example, a professor may create an OSF project of materials for individual student use. Each student forks the project to have his or her own copy of the materials to start his/her own work.

        When creating a fork, your fork will only contain public components of the current registration and components for which you are a contributor. Private components that you do not have access to will not be forked.
        #### Required
        There are no required attributes when creating a fork, as all of the forked registration's attributes will be copied from the current registration.

        The `title` field is optional, with the default title being "Fork of " prepended to the current registration's title.
        #### Returns
        Returns a JSON object with a `data` key containing the complete representation of the forked registration, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_forks_create
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/registrations_partial_updateBody"
      responses:
        "201":
          description: Created
      summary: Create a fork
      tags:
        - Registrations
      x-response-schema: Registration
  "/registrations/{registration_id}/identifiers/":
    get:
      description: |-
        A paginated list of the registration's identifiers.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of identifiers. Each resource in the array is a separate identifier object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/identifiers/?filter[category]=ark

        Identifiers may be filtered by their `category` e.g `ark` or `doi`.
      operationId: registrations_identifiers_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the identifier entity.
                      properties:
                        category:
                          description: The category of the identifier
                          enum:
                            - ark
                            - doi
                          readOnly: true
                          type: string
                        value:
                          description: The identifier value itself
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the identifier entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the identifier entity.
                      properties:
                        self:
                          description: A link to the detail page for the identifier.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the identifier entity.
                      properties:
                        referent:
                          description: A relationship to the node the identifier refers to.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the identifier entity (`identifiers`).
                      readOnly: true
                      type: string
                  title: Identifier
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: doi
                          value: 10.17605/OSF.IO/73PND
                        id: 57f1641db83f6901ed94b459
                        links:
                          self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b459/
                        relationships:
                          referent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                        type: identifiers
                      - attributes:
                          category: ark
                          value: c7605/osf.io/73pnd
                        id: 57f1641db83f6901ed94b45a
                        links:
                          self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b45a/
                        relationships:
                          referent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                        type: identifiers
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all identifiers
      tags:
        - Registrations
      x-response-schema: Identifier
  "/registrations/{registration_id}/institutions/":
    get:
      description: |-
        A paginated list of institutions affiliated with the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 affiliated institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: registrations_institutions_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the institution entity.
                      properties:
                        auth_url:
                          description: Url used to authenticate institution specific login.
                          readOnly: true
                          type: string
                        description:
                          description: Description of the institution.
                          readOnly: true
                          type: string
                        logo_path:
                          description: Static path to the institution specific logo.
                          readOnly: true
                          type: string
                        name:
                          description: Full name of the institution.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the institution entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the institutions entity.
                      properties:
                        self:
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the institution entity.
                      properties:
                        nodes:
                          description: A relationship to the nodes affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        registrations:
                          description: A relationship to the registrations affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        users:
                          description: A relationship to the users affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                      type: string
                  title: Institution
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          auth_url: null
                          description: COS is a non-profit technology company providing free and open services to increase inclusivity and transparency of research. Find out more at <a href="https://cos.io">cos.io</a>.
                          logo_path: /static/img/institutions/shields/cos-shield.png
                          name: Center For Open Science
                        id: cos
                        links:
                          self: https://api.osf.io/v2/institutions/cos/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/cos/users/
                                meta: {}
                        type: institutions
                      - attributes:
                          auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                          description: In partnership with the <a href="http://www.virginia.edu/vpr/">Vice President for Research</a>, <a href="http://dsi.virginia.edu">Data Science Institute</a>, <a href="https://www.hsl.virginia.edu">Health Sciences Library</a>, and <a href="http://data.library.virginia.edu">University Library</a>. Learn more about <a href="http://cadre.virginia.edu">UVA resources for computational and data-driven research</a>. Projects must abide by the <a href="http://www.virginia.edu/informationpolicy/security.html">University Security and Data Protection Policies</a>.
                          logo_path: /static/img/institutions/shields/uva-shield.png
                          name: University of Virginia
                        id: uva
                        links:
                          self: https://api.osf.io/v2/institutions/uva/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/users/
                                meta: {}
                        type: institutions
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all institutions
      tags:
        - Registrations
      x-response-schema: Institution
  "/registrations/{registration_id}/linked_nodes/":
    get:
      description: |-
        List of all nodes linked to the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/linked_nodes/?filter[title]=reproducibility/?filter[title]=reproducibility.

        Nodes may be filtered by their `title`, `category`, `description`, `public`, `registration`, or `tags`. `title`, `description`, and `category` are string fields and will be filteres using simple substring matching. `public`, `registration` are boolean and can be filtered using truthy values, such as `true`, `false`, `0`, `1`. `tags` is an array of simple strings.
      operationId: registrations_linked_nodes_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2014-07-28T13:53:04.508000
                          date_modified: 2017-03-03T05:00:31.512000
                          description: "This is an independent replication as part of the Reproducibility Project: Psychology."
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: Replication of WA Cunningham, JJ Van Bavel, IR Johnsen (2008, PS 19(2))
                        id: bifc7
                        links:
                          html: https://osf.io/bifc7/
                          self: https://api.osf.io/v2/nodes/bifc7/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/wikis/
                                meta: {}
                        type: nodes
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2012-10-31T18:50:46.111000
                          date_modified: 2016-10-02T19:50:23.605000
                          description: null
                          fork: true
                          node_license:
                            copyright_holders:
                              - ""
                            year: "2016"
                          preprint: false
                          public: true
                          registration: false
                          tags:
                            - anxiety
                            - EMG
                            - EEG
                            - motivation
                            - ERN
                          title: Replication of Hajcak &amp; Foti (2008, PS, Study 1)
                        id: 73pnd
                        links:
                          html: https://osf.io/73pnd/
                          self: https://api.osf.io/v2/nodes/73pnd/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/files/
                                meta: {}
                          forked_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/kxhz5/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all linked nodes
      tags:
        - Registrations
      x-response-schema: Node
  "/registrations/{registration_id}/logs/":
    get:
      description: |-
        A paginated list of the registration's logs.

        The returned logs are sorted by their `date`, with the most recents logs appearing first.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 logs. Each resource in the array is a separate logs object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include logs that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/logs/?filter[action]=made_private.

        Logs may be filtered by their `action`, and `date`.
      operationId: registrations_logs_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        action: contributor_added
                        date: 2012-05-31T05:50:32.083000
                        params:
                          contributors:
                            - active: true
                              family_name: Nosek
                              full_name: Brian A. Nosek
                              given_name: Brian
                              id: cdi38
                              middle_names: A.
                          params_node:
                            id: ezcuj
                            title: "Reproducibility Project: Psychology"
                      id: 4fc706a80b6e9118ef000122
                      links:
                        self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        original_node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/jk5cv/
                              meta: {}
                      type: logs
                  properties:
                    attributes:
                      description: The properties of the log.
                      properties:
                        action:
                          description: The type of action performed on the OSF. See actions section for full list of possible actions.
                          readOnly: true
                          type: string
                        date:
                          description: The date and time at which the log was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        params:
                          description: The type of action performed on the OSF. See description for full list of possible actions.
                          properties:
                            addon:
                              description: The addon associated with the connected node.
                              readOnly: true
                              type: string
                            anonymous_link:
                              description: The view only link added to the node was anonymous.
                              readOnly: true
                              type: boolean
                            bucket:
                              description: The Amazon s3 bucket connected to the connected node.
                              readOnly: true
                              type: string
                            citation_name:
                              description: Name of citation associated with the connected node.
                              readOnly: true
                              type: string
                            contributors:
                              description: List of contributors on the connected node involved in the action represented by this node log.
                              readOnly: true
                              type: string
                            data_set:
                              description: The dataset associated with the connected node.
                              readOnly: true
                              type: string
                            destination:
                              description: A dictionary with information about the destination for the move of the item on the node associated with this log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            figshare_title:
                              description: Title of the fighshare project associated with this node log
                              readOnly: true
                              type: string
                            file:
                              description: Dictionary with information about the file involved with the log.
                              readOnly: true
                              type: string
                            filename:
                              description: Filename for the file associated with the log.
                              readOnly: true
                              type: string
                            folder:
                              description: Folder associated with the log.
                              readOnly: true
                              type: string
                            folder_name:
                              description: Name of the folder associated with the log.
                              readOnly: true
                              type: string
                            forward_url:
                              description: URL that the connected node forwards to.
                              readOnly: true
                              type: string
                            github_repo:
                              description: The github repository involved with the action represented by this node log.
                              readOnly: true
                              type: string
                            github_user:
                              description: The github user involved with the action represented by this node log.
                              readOnly: true
                              type: string
                            identifiers:
                              description: Dictionary containing the DOI and ARK ID for a preprint associated with the log.
                              readOnly: true
                              type: string
                            institution:
                              description: Dictionary containing the ID and Name of the institution associated with the log.
                              readOnly: true
                              type: string
                            kind:
                              description: Kind of the object associated with the log.
                              readOnly: true
                              type: string
                            license:
                              description: License for the associated node.
                              readOnly: true
                              type: string
                            old_page:
                              description: Old name of wiki page for a wiki rename log action.
                              readOnly: true
                              type: string
                            page:
                              description: Current name of wiki page for rename log action.
                              readOnly: true
                              type: string
                            page_id:
                              description: Primary key of the wiki page associated with the log.
                              readOnly: true
                              type: string
                            params_node:
                              description: Node that is refered to in the params of the log.
                              readOnly: true
                              type: string
                            params_project:
                              description: Project that is refered to in the params of the log.
                              readOnly: true
                              type: string
                            path:
                              description: Path for a file associated with the log.
                              readOnly: true
                              type: string
                            pointer:
                              description: A dictionary with information about the node that is linked to the associated node.
                              readOnly: true
                              type: string
                            preprint:
                              description: Preprint related to the associated node.
                              readOnly: true
                              type: string
                            preprint_provider:
                              description: Preprint provider for the associated node.
                              readOnly: true
                              type: string
                            previous_institution:
                              description: If a primary institution for the associated node is changed, this will show the previous institution.
                              readOnly: true
                              type: string
                            source:
                              description: A dictionary with information about the source of a move related event for a log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            study:
                              description: Dataverse study linked to the associated node.
                              readOnly: true
                              type: string
                            tag:
                              description: Tag associated with the associated node.
                              readOnly: true
                              type: string
                            tags:
                              description: Tags associated with the associated node.
                              readOnly: true
                              type: string
                            target:
                              description: A dictionary containing details about the target of the log. Details include the path, url, addon, node_url and node_title.
                              readOnly: true
                              type: string
                            template_node:
                              description: A dictionary containing information about the node that was used as a template for the associated node.
                              readOnly: true
                              type: string
                            title_new:
                              description: The new title for the associated node.
                              readOnly: true
                              type: string
                            title_original:
                              description: The original title for the associated node
                              readOnly: true
                              type: string
                            updated_fields:
                              description: A dictionary containing all of the fields updated on the associated node.
                              readOnly: true
                              type: string
                            urls:
                              description: Links to access information about the file associated with this log.
                              readOnly: true
                              type: string
                            version:
                              description: Version of the wiki page associated with this log.
                              readOnly: true
                              type: string
                            wiki:
                              description: A dictionary with information about the wiki page associated with the log.
                              readOnly: true
                              type: string
                          readOnly: true
                          title: Log Params
                          type: object
                      readOnly: true
                      required:
                        - action
                        - date
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the log.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the log entity.
                      properties:
                        self:
                          description: A link to the detail page for the log.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - self
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the log.
                      properties:
                        linked_node:
                          description: A relationship to the node linked to this log.
                          readOnly: true
                          type: string
                        node:
                          description: A relationship to the node associated with this log.
                          readOnly: true
                          type: string
                        original_node:
                          description: A relationship to the original node that was associated with this log, in case this log was copied from a node to a fork or registration.
                          readOnly: true
                          type: string
                        template_node:
                          description: A relationship to the node used as a template for this log.
                          readOnly: true
                          type: string
                        user:
                          description: A relationship to the user who performed the log action.
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - node
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the log (`logs`)
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: Log
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          action: osf_storage_file_updated
                          date: 2016-05-23T14:22:20.142000
                          params:
                            contributors: []
                            params_node:
                              id: 7eshv
                              title: Full Questionnaire [in original language]
                            params_project:
                              id: 5wprs
                              title: Full Project Description
                            path: /StudyMaterials_UEH1.pdf
                            preprint_provider: null
                            urls:
                              download: /project/7eshv/files/osfstorage/5742f41c6c613b01de5b15dd/?action=download
                              view: /project/7eshv/files/osfstorage/5742f41c6c613b01de5b15dd/
                        id: 57431299594d9001ead7174f
                        links:
                          self: https://api.osf.io/v2/logs/57431299594d9001ead7174f/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/n32tp/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/7eshv/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                        type: logs
                      - attributes:
                          action: project_created
                          date: 2016-05-23T12:13:58.371000
                          params:
                            contributors: []
                            params_node:
                              id: 7eshv
                              title: Full Questionnaire [in original language]
                            params_project: null
                            preprint_provider: null
                        id: 57431299594d9001ead7174d
                        links:
                          self: https://api.osf.io/v2/logs/57431299594d9001ead7174d/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/n32tp/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/7eshv/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                        type: logs
                      - attributes:
                          action: project_created
                          date: 2016-05-23T12:11:14.853000
                          params:
                            contributors: []
                            params_node:
                              id: 5wprs
                              title: Full Project Description
                            params_project: null
                            preprint_provider: null
                        id: 57431299594d9001ead71746
                        links:
                          self: https://api.osf.io/v2/logs/57431299594d9001ead71746/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/4cmnz/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/5wprs/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                        type: logs
                      - attributes:
                          action: project_created
                          date: 2016-05-23T12:10:48.868000
                          params:
                            contributors: []
                            params_node:
                              id: 6gbkh
                              title: Investigating fluctuations in cooperative preferences across the natural female menstrual cycle in a within-subjects-design
                            params_project: null
                            preprint_provider: null
                        id: 57431299594d9001ead71742
                        links:
                          self: https://api.osf.io/v2/logs/57431299594d9001ead71742/
                        relationships:
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wucr8/
                                meta: {}
                          original_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/6gbkh/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/
                                meta: {}
                        type: logs
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 5
                      next: null
                      prev: null
          description: OK
      summary: List all logs
      tags:
        - Registrations
      x-response-schema: Log
  "/registrations/{registration_id}/view_only_links/":
    get:
      description: |-
        A paginated list of view only links created for this registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 view only links. Each resource in the array is a view only link object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Permissions

        View only links on a registration, public or private, are readable and writeable only by users that are administrators on the registration.

        #### Filtering

        You can optionally request that the response only include view only links that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wu3a4/view_only_links/?filter[anonymous]=true.

        View Only Links may be filtered based on their `name`, `anonymous` and `date_created` fields. Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: registrations_view_only_links_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the view only link entity.
                      properties:
                        anonymous:
                          default: true
                          description: Whether or not the view only link has anonymized contributors
                          readOnly: false
                          type: boolean
                        date_created:
                          description: The time at which the view only link was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        key:
                          description: The view only key
                          readOnly: true
                          type: string
                        name:
                          default: Shared project link
                          description: The name of the view only link
                          readOnly: false
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the view only link.
                      readOnly: true
                      type: string
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the view only link entity.
                      properties:
                        creator:
                          description: A relationship to the user who created this view only link.
                          readOnly: true
                          type: string
                        nodes:
                          description: A relationship to the nodes which this view only link gives read-only access to.
                          format: URL
                          readOnly: false
                          type: string
                      readOnly: true
                      required:
                        - nodes
                        - creator
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the view only link ('view-only-links').
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                  title: view-only-links
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          anonymous: false
                          date_created: 2017-03-20T20:15:02.488643
                          key: c1df490be3294a9bac01ff05c4097ab7
                          name: vol name
                        id: 58d03846a170c50025baae61
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d03846a170c50025baae61/
                        relationships:
                          creator:
                            links:
                              related:
                                href: http://api.osf.io/v2/users/4xpu9/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/nodes/
                                meta: {}
                              self:
                                href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/relationships/nodes/
                                meta: {}
                        type: view_only_links
                      - attributes:
                          anonymous: false
                          date_created: 2017-03-21T14:26:47.507504
                          key: 9794ac36085e4d7086ff4dab49daf1cb
                          name: vol name
                        id: 58d13827a170c50025baae6e
                        links:
                          self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d13827a170c50025baae6e/
                        relationships:
                          creator:
                            links:
                              related:
                                href: http://api.osf.io/v2/users/4xpu9/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/nodes/
                                meta: {}
                              self:
                                href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/relationships/nodes/
                                meta: {}
                        type: view_only_links
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all view only links
      tags:
        - Registrations
      x-response-schema: View Only Link
  "/registrations/{registration_id}/view_only_links/{link_id}/":
    get:
      description: |-
        Retrieves the details of a view only link created from this registration.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Permissions

        View only links on a registration, public or private, are readable and writeable only by users that are administrators on the registration.
      operationId: registrations_view_only_links_read
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the view only link.
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the view only link entity.
                    properties:
                      anonymous:
                        default: true
                        description: Whether or not the view only link has anonymized contributors
                        readOnly: false
                        type: boolean
                      date_created:
                        description: The time at which the view only link was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      key:
                        description: The view only key
                        readOnly: true
                        type: string
                      name:
                        default: Shared project link
                        description: The name of the view only link
                        readOnly: false
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the view only link.
                    readOnly: true
                    type: string
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the view only link entity.
                    properties:
                      creator:
                        description: A relationship to the user who created this view only link.
                        readOnly: true
                        type: string
                      nodes:
                        description: A relationship to the nodes which this view only link gives read-only access to.
                        format: URL
                        readOnly: false
                        type: string
                    readOnly: true
                    required:
                      - nodes
                      - creator
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                title: view-only-links
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        anonymous: false
                        date_created: 2017-03-20T20:11:01.603851
                        key: <view_only_link_key>
                        name: Test View Only Link
                      id: <link_id>
                      relationships:
                        creator:
                          links:
                            related:
                              href: http://api.osf.io/v2/users/<user_id>/
                              meta: {}
                        nodes:
                          links:
                            related:
                              href: http://api.osf.io/v2/view_only_links/<link_id>/nodes/
                              meta: {}
                            self:
                              href: http://api.osf.io/v2/view_only_links/<link_id>/relationships/nodes/
                              meta: {}
                      type: view-only-links
          description: OK
      summary: Retrieve a view only link
      tags:
        - Registrations
      x-response-schema: View Only Link
  "/registrations/{registration_id}/wikis/":
    get:
      description: |-
        A paginated list of the registration's wiki pages
        #### Returns
        A list of all registration's current wiki page versions ordered by their date_modified. Each resource contains the full representation of the wiki, meaning additional requests to an individual wiki's detail view are not necessary.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        Wiki pages can be filtered based on their `name` and `date_modified` fields.
        + `filter[name]=<Str>` -- filter wiki pages by name
        + `filter[date_modified][comparison_operator]=YYYY-MM-DDTH:M:S` -- filter wiki pages based on date modified.

        Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: registrations_wikis_list
      parameters:
        - description: The unique identifier of the registration.
          in: path
          name: registration_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the wiki.
                      properties:
                        content_type:
                          description: Content type of the wiki (`text/markdown`).
                          readOnly: true
                          type: string
                        current_user_can_comment:
                          description: Whether the current user is allowed to post comments on this wiki.
                          readOnly: true
                          type: string
                        date_modified:
                          description: The date and time at which the wiki was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        extra:
                          description: A dictionary containing additional metadata about this wiki, including version information.
                          readOnly: true
                          type: string
                        kind:
                          description: The type of object.
                          readOnly: true
                          type: string
                        materialized_path:
                          description: Materialized path to the wiki object.
                          readOnly: true
                          type: string
                        name:
                          description: The name/title of the wiki page.
                          readOnly: true
                          type: string
                        path:
                          description: Path to the wiki object.
                          readOnly: true
                          type: string
                        size:
                          description: Size of the wiki.
                          readOnly: true
                          type: string
                      readOnly: false
                      required:
                        - kind
                        - name
                        - date_modified
                        - extra
                        - content_type
                        - path
                        - current_user_can_comment
                        - materialized_path
                        - size
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the wiki.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the wiki.
                      properties:
                        download:
                          description: The URL to download the content of the wiki.
                          format: URL
                          readOnly: true
                          type: string
                        info:
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the wiki.
                      properties:
                        comments:
                          description: A relationship to the comments related to this wiki.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the associated node.
                          readOnly: false
                          type: string
                        user:
                          description: A relationship to the user associated with this wiki.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - user
                        - comments
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the wiki (`wikis`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Wiki
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          content_type: text/markdown
                          current_user_can_comment: false
                          date_modified: 2015-02-11T21:16:50.918000
                          extra:
                            version: 1
                          kind: file
                          materialized_path: /9rb7g
                          name: home
                          path: /9rb7g
                          size: 1544
                        id: 9rb7g
                        links:
                          download: https://api.osf.io/v2/wikis/9rb7g/content/
                          info: https://api.osf.io/v2/wikis/9rb7g/
                          self: https://api.osf.io/v2/wikis/9rb7g/
                        relationships:
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wu3a4/comments/?filter%5Btarget%5D=9rb7g
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/wu3a4/
                                meta: {}
                          user:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/edb8y/
                                meta: {}
                        type: wikis
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all wikis
      tags:
        - Registrations
      x-response-schema: Wiki
  /taxonomies/:
    get:
      description: |-
        
        A paginated list of all [bepress disciplines taxonomies](https://www.bepress.com/wp-content/uploads/2016/12/Digital-Commons-Disciplines-taxonomy-2017-01.pdf).
        Note: this API endpoint is under active development, and is subject to change in the future.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 taxonomies. Each resource in the array is a separate taxonomy object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include taxonomies that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/taxonomies/?filter['id']='{taxonomy_id}'.

        Taxonomies may be filtered by their `id`, `parents`, and `text`.
      operationId: taxonomies_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the taxonomy entity.
                      properties:
                        child_count:
                          description: The number of children this taxonomy contains.
                          readOnly: true
                          type: integer
                        parents:
                          description: An array of JSON objects containing keys for `text` (name) and `id` (unique identifier) of this taxonomy's parents
                          items:
                            type: string
                          readOnly: true
                          type: array
                        text:
                          description: The text name of the taxonomy
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the taxonomy entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the taxonomy entity.
                      properties:
                        parents:
                          description: An array of links to to this taxonomy's parents. This field is deprecated as of verson 2.4.
                          items:
                            type: string
                          readOnly: true
                          type: array
                        self:
                          description: A link to the detail page for the taxonomy.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the taxonomy entity (`taxonomies`).
                      readOnly: true
                      type: string
                  title: Taxonomy
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240d954be81056ceca97a
                              text: Philosophy
                          text: History of Philosophy
                        id: 584240d854be81056ceca838
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240d954be81056ceca97a/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca838/
                        type: taxonomies
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240db54be81056cecacd3
                              text: Law
                          text: Animal Law
                        id: 584240d854be81056ceca839
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240db54be81056cecacd3/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca839/
                        type: taxonomies
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240db54be81056cecacd3
                              text: Law
                          text: Consumer Protection Law
                        id: 584240d854be81056ceca83a
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240db54be81056cecacd3/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83a/
                        type: taxonomies
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240da54be81056cecaa9c
                              text: Religion
                          text: Missions and World Christianity
                        id: 584240d854be81056ceca83b
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240da54be81056cecaa9c/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83b/
                        type: taxonomies
                      - attributes:
                          child_count: 0
                          parents:
                            - id: 584240d954be81056ceca8fd
                              text: Teacher Education and Professional Development
                          text: Other Teacher Education and Professional Development
                        id: 584240d854be81056ceca83c
                        links:
                          parents:
                            - https://api.osf.io/v2/taxonomies/584240d954be81056ceca8fd/
                          self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83c/
                        type: taxonomies
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 10
                      prev: null
                      total: 5
          description: OK
      summary: List all taxonomies
      tags:
        - Taxonomies
      x-response-schema: Taxonomy
  "/taxonomies/{taxonomy_id}/":
    get:
      description: |-
        Retrieves the details of a taxonomy.
        #### Returns

        Returns a JSON object with a `data` key containing the representation of the requested taxonomy, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: taxonomies_read
      parameters:
        - description: The unique identifier of the taxonomy.
          in: path
          name: taxonomy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the taxonomy entity.
                    properties:
                      child_count:
                        description: The number of children this taxonomy contains.
                        readOnly: true
                        type: integer
                      parents:
                        description: An array of JSON objects containing keys for `text` (name) and `id` (unique identifier) of this taxonomy's parents
                        items:
                          type: string
                        readOnly: true
                        type: array
                      text:
                        description: The text name of the taxonomy
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the taxonomy entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the taxonomy entity.
                    properties:
                      parents:
                        description: An array of links to to this taxonomy's parents. This field is deprecated as of verson 2.4.
                        items:
                          type: string
                        readOnly: true
                        type: array
                      self:
                        description: A link to the detail page for the taxonomy.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the taxonomy entity (`taxonomies`).
                    readOnly: true
                    type: string
                title: Taxonomy
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        child_count: 0
                        parents:
                          - id: 584240da54be81056cecab8f
                            text: Economics
                        text: Public Economics
                      id: 584240d954be81056ceca841
                      links:
                        parents:
                          - https://api.osf.io/v2/taxonomies/584240da54be81056cecab8f/
                        self: https://api.osf.io/v2/taxonomies/584240d954be81056ceca841/
                      type: taxonomies
          description: OK
      summary: Retrieve a taxonomy
      tags:
        - Taxonomies
      x-response-schema: Taxonomy
  /users/:
    get:
      description: |-
        
        A paginated list of all users registered on the OSF. The returned users are sorted by their `date_registered`, with the most recently registered users appearing first.

        The subroute `/users/me/` is a special endpoint that always points to the currently logged-in user.
        #### Versioning
        As of version `2.3`, merged users will not be returned from this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 users. Each resource in the array is a separate users object and contains the full representation of the user, meaning additional requests to a user's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/?filter[family_name]=Nosek.

        Users may be filtered by their `id`, `full_name`, `given_name`, `middle_name`, or `family_name`.
      operationId: users_list
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        full_name: Casey M. Rollins
                        middle_names: Marie
                      id: "{user_id}"
                      type: users
                  properties:
                    attributes:
                      description: The properties of the user entity.
                      properties:
                        active:
                          description: Whether or not the user is an active user.
                          readOnly: true
                          type: boolean
                        date_registered:
                          description: The time at which the user registered their account, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        family_name:
                          description: The family name of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        full_name:
                          description: The full name of the user, used for display on the OSF.
                          readOnly: false
                          type: string
                        given_name:
                          description: The given name of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        locale:
                          description: The user's locale, e.g. 'en_US'.
                          readOnly: false
                          type: string
                        middle_names:
                          description: The middle names of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        suffix:
                          description: The suffix of the user, used for bibliographic citations.
                          readOnly: false
                          type: string
                        timezone:
                          description: The user's timezone, e.g. 'Etc/UTC'.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - active
                        - date_registered
                        - full_name
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the user entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the user entity.
                      properties:
                        html:
                          description: A link to the user's profile page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        profile_image:
                          description: A link to the user's profile image.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the user entity.
                      properties:
                        institutions:
                          description: A link to the list of institutions the user is affiliated with.
                          readOnly: true
                          type: string
                        nodes:
                          description: A link to the list of nodes the user is a contributor to.
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the user entity (`users`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - relationships
                    - links
                  title: User
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          active: true
                          date_registered: 2014-06-15T17:39:06.701000
                          family_name: Rollins
                          full_name: Casey Rollins
                          given_name: Casey
                          locale: en_US
                          middle_names: ""
                          suffix: ""
                          timezone: America/New_York
                        id: q7fts
                        links:
                          html: https://osf.io/q7fts/
                          profile_image: https://secure.gravatar.com/avatar/e9d9311ab2f5ab7492a86ac9adb5c8e9?d=identicon
                          self: https://api.osf.io/v2/users/q7fts/
                        relationships:
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/q7fts/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/q7fts/relationships/institutions/
                                meta: {}
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/q7fts/nodes/
                                meta: {}
                        type: users
                    links:
                      first: null
                      last: https://api.osf.io/v2/users/?page=4337
                      meta:
                        per_page: 10
                        total: 43370
                      next: https://api.osf.io/v2/users/?page=2
                      prev: null
          description: OK
      summary: List all users
      tags:
        - Users
      x-response-schema: User
  "/users/{user_id}/":
    get:
      description: |-
        Retrieves the details of a given users.

        The returned information includes the user's bibliographic information and the date the user was registered.

        Additionally, relationships to the list of institutions with which the user is affiliated, and to the list of nodes which the user contributes to (that the requesting user has permission to see) are returned.

        If `me` is given as the `user_id` in the request path, the record of the currently logged-in user will be returned.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested user, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: users_read
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                example:
                  data:
                    attributes:
                      full_name: Casey M. Rollins
                      middle_names: Marie
                    id: "{user_id}"
                    type: users
                properties:
                  attributes:
                    description: The properties of the user entity.
                    properties:
                      active:
                        description: Whether or not the user is an active user.
                        readOnly: true
                        type: boolean
                      date_registered:
                        description: The time at which the user registered their account, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      family_name:
                        description: The family name of the user, used for bibliographic citations.
                        readOnly: false
                        type: string
                      full_name:
                        description: The full name of the user, used for display on the OSF.
                        readOnly: false
                        type: string
                      given_name:
                        description: The given name of the user, used for bibliographic citations.
                        readOnly: false
                        type: string
                      locale:
                        description: The user's locale, e.g. 'en_US'.
                        readOnly: false
                        type: string
                      middle_names:
                        description: The middle names of the user, used for bibliographic citations.
                        readOnly: false
                        type: string
                      suffix:
                        description: The suffix of the user, used for bibliographic citations.
                        readOnly: false
                        type: string
                      timezone:
                        description: The user's timezone, e.g. 'Etc/UTC'.
                        readOnly: false
                        type: string
                    readOnly: false
                    required:
                      - active
                      - date_registered
                      - full_name
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the user entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the user entity.
                    properties:
                      html:
                        description: A link to the user's profile page on the OSF.
                        format: URL
                        readOnly: true
                        type: string
                      profile_image:
                        description: A link to the user's profile image.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the user entity.
                    properties:
                      institutions:
                        description: A link to the list of institutions the user is affiliated with.
                        readOnly: true
                        type: string
                      nodes:
                        description: A link to the list of nodes the user is a contributor to.
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the user entity (`users`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                  - links
                title: User
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        active: true
                        date_registered: 2014-06-15T17:39:06.701000
                        family_name: Rollins
                        full_name: Casey Rollins
                        given_name: Casey
                        locale: en_US
                        middle_names: ""
                        suffix: ""
                        timezone: America/New_York
                      id: q7fts
                      links:
                        html: https://osf.io/q7fts/
                        profile_image: https://secure.gravatar.com/avatar/e9d9311ab2f5ab7492a86ac9adb5c8e9?d=identicon
                        self: https://api.osf.io/v2/users/q7fts/
                      relationships:
                        institutions:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/q7fts/institutions/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/users/q7fts/relationships/institutions/
                              meta: {}
                        nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/q7fts/nodes/
                              meta: {}
                      type: users
          description: OK
      summary: Retrieve a user
      tags:
        - Users
      x-response-schema: User
    patch:
      description: |-
        Updates a user by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Users can be updated with either a **PUT** or **PATCH** request. The `full_name` field is mandatory in a **PUT** request, and optional in a **PATCH**.

        **Note**: if you make a PUT/PATCH request to the `/users/me/` endpoint, you must still provide your full user ID in the ID field of the request. We do not support using the `me` alias in request bodies at this time.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: users_partial_update
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                data:
                  attributes:
                    full_name: Casey M. Rollins
                    middle_names: Marie
                  id: "{user_id}"
                  type: users
              properties:
                attributes:
                  description: The properties of the user entity.
                  properties:
                    active:
                      description: Whether or not the user is an active user.
                      readOnly: true
                      type: boolean
                    date_registered:
                      description: The time at which the user registered their account, as an iso8601 formatted timestamp.
                      format: date-time
                      readOnly: true
                      type: string
                    family_name:
                      description: The family name of the user, used for bibliographic citations.
                      readOnly: false
                      type: string
                    full_name:
                      description: The full name of the user, used for display on the OSF.
                      readOnly: false
                      type: string
                    given_name:
                      description: The given name of the user, used for bibliographic citations.
                      readOnly: false
                      type: string
                    locale:
                      description: The user's locale, e.g. 'en_US'.
                      readOnly: false
                      type: string
                    middle_names:
                      description: The middle names of the user, used for bibliographic citations.
                      readOnly: false
                      type: string
                    suffix:
                      description: The suffix of the user, used for bibliographic citations.
                      readOnly: false
                      type: string
                    timezone:
                      description: The user's timezone, e.g. 'Etc/UTC'.
                      readOnly: false
                      type: string
                  readOnly: false
                  required:
                    - active
                    - date_registered
                    - full_name
                  title: Attributes
                  type: object
                id:
                  description: The unique identifier of the user entity.
                  readOnly: true
                  type: string
                links:
                  description: URLs to alternative representations of the user entity.
                  properties:
                    html:
                      description: A link to the user's profile page on the OSF.
                      format: URL
                      readOnly: true
                      type: string
                    profile_image:
                      description: A link to the user's profile image.
                      format: URL
                      readOnly: true
                      type: string
                  readOnly: true
                  title: Links
                  type: object
                relationships:
                  description: URLs to other entities or entity collections that have a relationship to the user entity.
                  properties:
                    institutions:
                      description: A link to the list of institutions the user is affiliated with.
                      readOnly: true
                      type: string
                    nodes:
                      description: A link to the list of nodes the user is a contributor to.
                      readOnly: true
                      type: string
                  readOnly: true
                  title: Relationships
                  type: object
                type:
                  description: The type identifier of the user entity (`users`).
                  readOnly: true
                  type: string
              required:
                - id
                - type
                - attributes
                - relationships
                - links
              title: User
              type: object
        required: true
      responses:
        "200":
          description: OK
      summary: Update a user
      tags:
        - Users
      x-response-schema: User
  "/users/{user_id}/addons/":
    get:
      description: |-
        
        A paginated list of authorized user addons

        #### Permissions

        User addons are visible only to the user that authorized the addon.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 addons. Each resource in the array is a separate addon object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        Attempting to request the accounts for an addon that is not enabled will result in a **404 Not Found** response.
      operationId: users_addons_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the user addon entity.
                      properties:
                        user_has_auth:
                          description: Whether or not the user has access to this user addon.
                          readOnly: true
                          type: boolean
                      readOnly: true
                      required:
                        - user_has_auth
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the user addon entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the user addon entity.
                      properties:
                        accounts:
                          description: A dictionary with addon_account id as key, an array of connected nodes and link to user account as value
                          format: URL
                          readOnly: true
                          type: object
                        self:
                          description: The canonical API endpoint to this user addon.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the user addon entity (`user_addons`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - links
                  title: User Addon
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          user_has_auth: true
                        id: box
                        links:
                          accounts:
                            562d9acf8c5e4a14112e489e:
                              account: https://api.osf.io/v2/users/q7fts/addons/box/accounts/562d9acf8c5e4a14112e489e/
                              nodes_connected:
                                - https://api.osf.io/v2/nodes/t3y58/
                          self: https://api.osf.io/v2/users/me/addons/box/
                        type: user_addons
                      - attributes:
                          user_has_auth: true
                        id: dropbox
                        links:
                          accounts:
                            56742db88c5e4a396d689e3e:
                              account: https://api.osf.io/v2/users/q7fts/addons/dropbox/accounts/56742db88c5e4a396d689e3e/
                              nodes_connected: []
                          self: https://api.osf.io/v2/users/me/addons/dropbox/
                        type: user_addons
                      - attributes:
                          user_has_auth: true
                        id: github
                        links:
                          accounts:
                            570edf7f9ad5a101f90030f6:
                              account: https://api.osf.io/v2/users/q7fts/addons/github/accounts/570edf7f9ad5a101f90030f6/
                              nodes_connected:
                                - https://api.osf.io/v2/nodes/t3y58/
                          self: https://api.osf.io/v2/users/me/addons/github/
                        type: user_addons
                      - attributes:
                          user_has_auth: true
                        id: googledrive
                        links:
                          accounts:
                            563c1c518c5e4a36e7dc5450:
                              account: https://api.osf.io/v2/users/q7fts/addons/googledrive/accounts/563c1c518c5e4a36e7dc5450/
                              nodes_connected:
                                - https://api.osf.io/v2/nodes/6y5jf/
                                - https://api.osf.io/v2/nodes/t3y58/
                            58fe1cb59ad5a1025c8ae281:
                              account: https://api.osf.io/v2/users/q7fts/addons/googledrive/accounts/58fe1cb59ad5a1025c8ae281/
                              nodes_connected: []
                          self: https://api.osf.io/v2/users/me/addons/googledrive/
                        type: user_addons
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 4
                      next: null
                      prev: null
          description: OK
      summary: List all user addons
      tags:
        - Users
      x-response-schema: User Addon
  "/users/{user_id}/addons/{provider}/":
    get:
      description: |-
        Retrieves the details of an authorized user addon

        #### Permissions

        User addons are visible only to the user that authorized the addon.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested user addon, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        Attempting to request the accounts for an addon that is not enabled will result in a **404 Not Found** response.
      operationId: users_addons_read
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the user addon entity.
                    properties:
                      user_has_auth:
                        description: Whether or not the user has access to this user addon.
                        readOnly: true
                        type: boolean
                    readOnly: true
                    required:
                      - user_has_auth
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the user addon entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the user addon entity.
                    properties:
                      accounts:
                        description: A dictionary with addon_account id as key, an array of connected nodes and link to user account as value
                        format: URL
                        readOnly: true
                        type: object
                      self:
                        description: The canonical API endpoint to this user addon.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the user addon entity (`user_addons`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - links
                title: User Addon
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        user_has_auth: true
                      id: dropbox
                      links:
                        accounts:
                          58d16ece9ad5a10201025eb4:
                            account: https://api.osf.io/v2/users/f542f/addons/dropbox/accounts/58d16ece9ad5a10201025eb4/
                            nodes_connected: []
                        self: https://api.osf.io/v2/users/me/addons/dropbox/
                      type: user_addons
          description: OK
      summary: Retrieve a user addon
      tags:
        - Users
      x-response-schema: User Addon
  "/users/{user_id}/addons/{provider}/accounts/":
    get:
      description: |-
        
        A paginated list of addon accounts authorized by this user.

        #### Permissions

        Addon accounts are visible only to the user that authorized the account.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of at most 10 addon account objects. Each resource in the array is a separate  addon account object and contains the full representation of the addon account.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: Users_addon_accounts_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the addon account entity.
                      properties:
                        display_name:
                          description: The user's display name on the third-party service
                          readOnly: true
                          type: string
                        profile_url:
                          description: The link to user's profile on third-party service
                          readOnly: true
                          type: string
                        provider:
                          description: The short name of the third-party service
                          readOnly: true
                          type: string
                      readOnly: true
                      required:
                        - display_name
                        - provider
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the addon account entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the addon account entity.
                      properties:
                        self:
                          description: The canonical api endpoint of this addon account
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    type:
                      description: The type identifier of the addon account entity (`external_accounts`).
                      readOnly: true
                      type: string
                  required:
                    - id
                    - type
                    - attributes
                    - links
                  title: Addon Account
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          display_name: Fabrice Mizero
                          profile_url: null
                          provider: dropbox
                        id: 58d16ece9ad5a10201027eb4
                        links:
                          self: https://api.osf.io/v2/users/me/addons/dropbox/accounts/58d16ece9ad5a10201027eb4/
                        type: external_accounts
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 1
                      next: null
                      prev: null
          description: OK
      summary: List all addon accounts
      tags:
        - Users
      x-response-schema: Addon Account
  "/users/{user_id}/addons/{provider}/accounts/{account_id}/":
    get:
      description: |-
        Retrieves the details of an addon account

        #### Permissions

        Addon accounts are visible only to the user that authorized the account.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested addon account, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: Users_addon_accounts_read
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon provider.
          in: path
          name: provider
          required: true
          schema:
            type: string
        - description: The unique identifier of the addon account.
          in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the addon account entity.
                    properties:
                      display_name:
                        description: The user's display name on the third-party service
                        readOnly: true
                        type: string
                      profile_url:
                        description: The link to user's profile on third-party service
                        readOnly: true
                        type: string
                      provider:
                        description: The short name of the third-party service
                        readOnly: true
                        type: string
                    readOnly: true
                    required:
                      - display_name
                      - provider
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the addon account entity.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the addon account entity.
                    properties:
                      self:
                        description: The canonical api endpoint of this addon account
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  type:
                    description: The type identifier of the addon account entity (`external_accounts`).
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - links
                title: Addon Account
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      data:
                        attributes:
                          display_name: Fabrice Mizero
                          profile_url: null
                          provider: dropbox
                        id: 58d16ece9ad5a10201027eb4
                        links:
                          self: https://api.osf.io/v2/users/me/addons/dropbox/accounts/58d16ece9ad5a10201027eb4/
                        type: external_accounts
          description: OK
      summary: Retrieve an addon account
      tags:
        - Users
      x-response-schema: Addon Account
  "/users/{user_id}/institutions/":
    get:
      description: |-
        A paginated list of institutions that the user is affiliated with.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 institutions. Each resource in the array is a complete institution object and contains the full representation of the institution, meaning additional requests to a institution's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: users_institutions_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  properties:
                    attributes:
                      description: The properties of the institution entity.
                      properties:
                        auth_url:
                          description: Url used to authenticate institution specific login.
                          readOnly: true
                          type: string
                        description:
                          description: Description of the institution.
                          readOnly: true
                          type: string
                        logo_path:
                          description: Static path to the institution specific logo.
                          readOnly: true
                          type: string
                        name:
                          description: Full name of the institution.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the institution entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the institutions entity.
                      properties:
                        self:
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the institution entity.
                      properties:
                        nodes:
                          description: A relationship to the nodes affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        registrations:
                          description: A relationship to the registrations affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                        users:
                          description: A relationship to the users affiliated with the institution.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                      type: string
                  title: Institution
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                          description: In partnership with the <a href="http://www.virginia.edu/vpr/">Vice President for Research</a>, <a href="http://dsi.virginia.edu">Data Science Institute</a>, <a href="https://www.hsl.virginia.edu">Health Sciences Library</a>, and <a href="http://data.library.virginia.edu">University Library</a>. Learn more about <a href="http://cadre.virginia.edu">UVA resources for computational and data-driven research</a>. Projects must abide by the <a href="http://www.virginia.edu/informationpolicy/security.html">University Security and Data Protection Policies</a>.
                          logo_path: /static/img/institutions/shields/uva-shield.png
                          name: University of Virginia
                        id: uva
                        links:
                          self: https://api.osf.io/v2/institutions/uva/
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/nodes/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/registrations/
                                meta: {}
                          users:
                            links:
                              related:
                                href: https://api.osf.io/v2/institutions/uva/users/
                                meta: {}
                        type: institutions
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 2
                      next: null
                      prev: null
          description: OK
      summary: List all institutions
      tags:
        - Users
      x-response-schema: Institution
  "/users/{user_id}/nodes/":
    get:
      description: |-
        A paginated list of nodes that the user is a contributor to. The returned nodes are sorted by their `date_modified`, with the most recently updated nodes appearing first.

        If the user ID in the path is the same as the logged-in user, all nodes will be returned. Otherwise, only the user's public nodes will be returned.

        User registrations are not available at this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/nodes/?filter[title]=open.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.
      operationId: users_nodes_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2013-10-22T20:07:57.674000
                          date_modified: 2017-02-09T20:37:49.060000
                          description: null
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: "Study 8: Replication of Hatzivassiliou et al., 2010 (Nature)"
                        id: 0hezb
                        links:
                          html: https://osf.io/0hezb/
                          self: https://api.osf.io/v2/nodes/0hezb/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/0hezb/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/comments/?filter%5Btarget%5D=0hezb
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/0hezb/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/node_links/
                                meta: {}
                          parent:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/p7ayb/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/e81xl/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/0hezb/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: https://api.osf.io/v2/users/alh38/nodes/?page=23
                      meta:
                        per_page: 10
                        total: 224
                      next: https://api.osf.io/v2/users/alh38/nodes/?page=2
                      prev: null
          description: OK
      summary: List all nodes
      tags:
        - Users
      x-response-schema: Node
  "/users/{user_id}/preprints/":
    get:
      description: |-
        A paginated list of preprints that the user contributes to. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a complete preprint object and contains the full representation of the preprint, meaning additional requests to a preprint's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/preprints/?filter[provider]=psyarxiv.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: users_preprints_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            id: "{node_id}"
                            type: nodes
                        primary_file:
                          data:
                            id: "{primary_file_id}"
                            type: primary_files
                        provider:
                          data:
                            id: "{preprint_provider_id}"
                            type: providers
                  properties:
                    attributes:
                      description: The properties of the preprint entity.
                      properties:
                        date_created:
                          description: The time at which the preprint was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the preprint was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_published:
                          description: The time at which the preprint was published, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        doi:
                          description: The DOI of the associated journal article, as entered by the user, if the preprint is published.
                          readOnly: false
                          type: string
                        is_preprint_orphan:
                          description: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        license_record:
                          description: The metadata (copyright year and holder) associated with a license, required for certain licenses.
                          readOnly: false
                          type: string
                        subjects:
                          description: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
                          items:
                            type: string
                          readOnly: false
                          type: array
                      readOnly: false
                      title: Attributes
                      type: object
                    id:
                      description: The identifier of the preprint entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the preprint entity.
                      properties:
                        doi:
                          description: The URL representation of the DOI entered by the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                          type: string
                        html:
                          description: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
                          format: URL
                          readOnly: true
                          type: string
                        preprint_doi:
                          description: The URL representation of the OSF assigned DOI for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the preprint entity.
                      properties:
                        citation:
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A relationship to the identifiers associated with the preprint.
                          readOnly: true
                          type: string
                        license:
                          description: A relationship to the license that has been applied to the preprint.
                          readOnly: false
                          type: string
                        node:
                          description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                          readOnly: false
                          type: string
                        primary_file:
                          description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                          readOnly: false
                          type: string
                        provider:
                          description: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - node
                        - primary_file
                        - provider
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the preprint entity (`preprints`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - relationships
                  title: Preprint
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          date_created: 2016-08-29T14:53:51.185000
                          date_modified: 2016-08-29T14:53:51.185000
                          date_published: 2016-08-29T14:53:51.185000
                          doi: 10.1371/journal.pbio.1002456
                          is_preprint_orphan: false
                          is_published: true
                          license_record: null
                          subjects:
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecaab8
                                text: Public Affairs, Public Policy and Public Administration
                              - id: 584240d954be81056cecaa10
                                text: Science and Technology Policy
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecab33
                                text: Library and Information Science
                              - id: 584240db54be81056cecacd2
                                text: Scholarly Publishing
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac68
                                text: Psychology
                            - - id: 584240da54be81056cecac48
                                text: Social and Behavioral Sciences
                              - id: 584240da54be81056cecac68
                                text: Psychology
                        id: khbvy
                        links:
                          doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                          html: https://osf.io/khbvy/
                          self: https://api.osf.io/v2/preprints/khbvy/
                        relationships:
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprints/khbvy/citation/
                                meta: {}
                          node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bnzx5/
                                meta: {}
                          primary_file:
                            links:
                              related:
                                href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                                meta: {}
                          provider:
                            links:
                              related:
                                href: https://api.osf.io/v2/preprint_providers/osf/
                                meta: {}
                        type: preprints
                    links:
                      first: null
                      last: null
                      meta:
                        per_page: 10
                        total: 4
                      next: null
                      prev: null
          description: OK
      summary: List all preprints
      tags:
        - Users
      x-response-schema: Preprint
  "/users/{user_id}/registrations/":
    get:
      description: |-
        A paginated list of registrations that the user is a contributor to. The returned registrations are sorted by their `date_modified`, with the most recently updated registrations appearing first.

        If the user ID in the path is the same as the logged-in user, all registrations will be returned. Otherwise, only the user's public registrations will be returned.

        User nodes are not available at this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate registration object and contains the full representation of the registration, meaning additional requests to a registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/registrations/?filter[title]=replication.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: users_registrations_list
      parameters:
        - description: The unique identifier of the user.
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: communication
                          collection: false
                          current_user_can_comment: true
                          current_user_permissions:
                            - read
                          date_created: 2016-09-27T01:12:42.135000
                          date_modified: 2016-11-18T19:14:42.873000
                          date_registered: 2016-11-18T19:16:56.962000
                          description: ""
                          embargo_end_date: null
                          fork: false
                          node_license: null
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/node_links/
                                meta: {}
                          pending_embargo_approval: false
                          pending_registration_approval: false
                          pending_withdrawal: false
                          preprint: false
                          public: true
                          registered_meta:
                            comments:
                              comments: []
                              extra: []
                              value: ""
                            datacompletion:
                              comments: []
                              extra: []
                              value: No, data collection has not begun
                            looked:
                              comments: []
                              extra: []
                              value: No
                          registration: true
                          registration_supplement: OSF-Standard Pre-Data Collection Registration
                          tags: []
                          title: Replication Reports
                          withdrawal_justification: null
                          withdrawn: false
                        id: d5r99
                        links:
                          html: https://osf.io/d5r99/
                          self: https://api.osf.io/v2/registrations/d5r99/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/comments/?filter%5Btarget%5D=d5r99
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/registrations/d5r99/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/logs/
                                meta: {}
                          parent:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/sdbdx/
                                meta: {}
                          registered_by:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/dnhrw/
                                meta: {}
                          registered_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/qce75/
                                meta: {}
                          registration_schema:
                            links:
                              related:
                                href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/sdbdx/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/registrations/d5r99/wikis/
                                meta: {}
                        type: registrations
                    links:
                      first: null
                      last: https://api.osf.io/v2/users/cdi38/registrations/?page=17
                      meta:
                        per_page: 10
                        total: 170
                      next: https://api.osf.io/v2/users/cdi38/registrations/?page=2
                      prev: null
          description: OK
      summary: List all registrations
      tags:
        - Users
      x-response-schema: Registration
  "/view_only_links/{link_id}/":
    get:
      description: |-
        Retrieves details about a specific view only link.
        #### Permissions
        Only project administrators may retrieve the details of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: view_only_links_read
      parameters:
        - description: The unique identifier of the view only link.
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the view only link entity.
                    properties:
                      anonymous:
                        default: true
                        description: Whether or not the view only link has anonymized contributors
                        readOnly: false
                        type: boolean
                      date_created:
                        description: The time at which the view only link was created, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      key:
                        description: The view only key
                        readOnly: true
                        type: string
                      name:
                        default: Shared project link
                        description: The name of the view only link
                        readOnly: false
                        type: string
                    readOnly: true
                    title: Attributes
                    type: object
                  id:
                    description: The unique identifier of the view only link.
                    readOnly: true
                    type: string
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the view only link entity.
                    properties:
                      creator:
                        description: A relationship to the user who created this view only link.
                        readOnly: true
                        type: string
                      nodes:
                        description: A relationship to the nodes which this view only link gives read-only access to.
                        format: URL
                        readOnly: false
                        type: string
                    readOnly: true
                    required:
                      - nodes
                      - creator
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                    type: string
                required:
                  - id
                  - type
                  - attributes
                  - relationships
                title: view-only-links
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        anonymous: false
                        date_created: 2017-03-20T20:11:01.603851
                        key: <view_only_link_key>
                        name: Test View Only Link
                      id: <link_id>
                      relationships:
                        creator:
                          links:
                            related:
                              href: http://api.osf.io/v2/users/<user_id>/
                              meta: {}
                        nodes:
                          links:
                            related:
                              href: http://api.osf.io/v2/view_only_links/<link_id>/nodes/
                              meta: {}
                            self:
                              href: http://api.osf.io/v2/view_only_links/<link_id>/relationships/nodes/
                              meta: {}
                      type: view-only-links
          description: OK
      summary: Retrieve a view only link
      tags:
        - View Only Links
      x-response-schema: View Only Link
  "/view_only_links/{link_id}/nodes/":
    get:
      description: |-
        
        The list of nodes which this view only link gives read-only access to.
        #### Permissions
        Only project administrators may retrieve the nodes of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: view_only_links_node_list
      parameters:
        - description: The unique identifier of the view only link.
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                items:
                  example:
                    data:
                      attributes:
                        category: software
                        title: An Excellent Project Title
                      type: nodes
                  properties:
                    attributes:
                      description: The properties of the node entity.
                      properties:
                        category:
                          description: The category of the node, as selected by project contributors.
                          enum:
                            - analysis
                            - communication
                            - data
                            - hypothesis
                            - instrumentation
                            - methods and measures
                            - procedure
                            - project
                            - software
                            - other
                          readOnly: false
                          type: string
                        collection:
                          description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        current_user_can_comment:
                          description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                          readOnly: true
                          type: boolean
                        current_user_permissions:
                          description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                          items:
                            type: string
                          readOnly: true
                          type: array
                        date_created:
                          description: The time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        date_modified:
                          description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        description:
                          description: The description of the node.
                          readOnly: false
                          type: string
                        fork:
                          description: Whether or not this node represents a fork of another node.
                          readOnly: true
                          type: boolean
                        forked_date:
                          description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                          format: date-time
                          readOnly: true
                          type: string
                        node_license:
                          description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                          readOnly: false
                          type: string
                        preprint:
                          description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                          readOnly: true
                          type: boolean
                        public:
                          description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                          readOnly: false
                          type: boolean
                        registration:
                          description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                          readOnly: true
                          type: boolean
                        tags:
                          description: A list of strings that describe this node, as entered by project contributors.
                          items:
                            type: string
                          readOnly: false
                          type: array
                        template_from:
                          description: The unique ID of the node from which this node was templated, if this node was created from a template.
                          readOnly: false
                          type: string
                        title:
                          description: The title of the node.
                          readOnly: false
                          type: string
                      readOnly: false
                      required:
                        - title
                        - category
                      title: Attributes
                      type: object
                    id:
                      description: The unique identifier of the node entity.
                      readOnly: true
                      type: string
                    links:
                      description: URLs to alternative representations of the node entity.
                      properties:
                        html:
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                          type: string
                        self:
                          description: A link to the canonical API endpoint of this node.
                          format: URL
                          readOnly: true
                          type: string
                      readOnly: true
                      title: Links
                      type: object
                    relationships:
                      description: URLs to other entities or entity collections that have a relationship to the node entity.
                      properties:
                        affiliated_institutions:
                          description: A link to the list of institutions this node is affiliated with.
                          readOnly: true
                          type: string
                        children:
                          description: A link to the list of this node's children (components).
                          readOnly: true
                          type: string
                        citation:
                          description: A link to the citation details of this node.
                          readOnly: true
                          type: string
                        comments:
                          description: A link to the list of comments on this node.
                          readOnly: true
                          type: string
                        contributors:
                          description: A link to the list of contributors on this node.
                          readOnly: true
                          type: string
                        draft_registrations:
                          description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                          readOnly: true
                          type: string
                        files:
                          description: A link to the list of storage providers that have been enabled on this node.
                          readOnly: true
                          type: string
                        forked_from:
                          description: A link to the node which this node was forked from, if this node is a fork.
                          readOnly: true
                          type: string
                        forks:
                          description: A link to the list of nodes that are forks of this node.
                          readOnly: true
                          type: string
                        identifiers:
                          description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                          readOnly: true
                          type: string
                        license:
                          description: A link to the license that has been applied to this node.
                          readOnly: true
                          type: string
                        linked_nodes:
                          description: A link to the list of nodes that are linked to the current node.
                          readOnly: true
                          type: string
                        logs:
                          description: A link to the list of log actions pertaining to this node.
                          readOnly: true
                          type: string
                        node_links:
                          description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                          readOnly: true
                          type: string
                        parent:
                          description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                          readOnly: true
                          type: string
                        preprints:
                          description: A link to the list of preprints that this node relates to.
                          readOnly: true
                          type: string
                        registrations:
                          description: A link to the list of registrations that have been created from this node.
                          readOnly: true
                          type: string
                        root:
                          description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                          readOnly: true
                          type: string
                        template_node:
                          description: A link to the node that the current node was templated from, if the current node was created from a template.
                          readOnly: true
                          type: string
                        view_only_links:
                          description: A link to the list of view only links that have been created for this node.
                          readOnly: true
                          type: string
                        wikis:
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                          type: string
                      readOnly: false
                      title: Relationships
                      type: object
                    type:
                      description: The type identifier of the node entity (`nodes`).
                      readOnly: false
                      type: string
                  required:
                    - type
                    - attributes
                  title: Node
                  type: object
                type: array
            application/json:
              examples:
                response:
                  value:
                    data:
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2014-07-28T13:53:04.508000
                          date_modified: 2017-03-03T05:00:31.512000
                          description: "This is an independent replication as part of the Reproducibility Project: Psychology."
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: Replication of WA Cunningham, JJ Van Bavel, IR Johnsen (2008, PS 19(2))
                        id: bifc7
                        links:
                          html: https://osf.io/bifc7/
                          self: https://api.osf.io/v2/nodes/bifc7/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/bifc7/wikis/
                                meta: {}
                        type: nodes
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2012-10-31T18:50:46.111000
                          date_modified: 2016-10-02T19:50:23.605000
                          description: null
                          fork: true
                          node_license:
                            copyright_holders:
                              - ""
                            year: "2016"
                          preprint: false
                          public: true
                          registration: false
                          tags:
                            - anxiety
                            - EMG
                            - EEG
                            - motivation
                            - ERN
                          title: Replication of Hajcak &amp; Foti (2008, PS, Study 1)
                        id: 73pnd
                        links:
                          html: https://osf.io/73pnd/
                          self: https://api.osf.io/v2/nodes/73pnd/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/files/
                                meta: {}
                          forked_from:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/kxhz5/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                                meta: {}
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/73pnd/wikis/
                                meta: {}
                        type: nodes
                      - attributes:
                          category: project
                          collection: false
                          current_user_can_comment: false
                          current_user_permissions:
                            - read
                          date_created: 2014-09-23T18:58:54.915000
                          date_modified: 2016-08-31T18:16:25.056000
                          description: null
                          fork: false
                          node_license: null
                          preprint: false
                          public: true
                          registration: false
                          tags: []
                          title: Replication of Winawer, Huk, & Boroditsky (Psychological Science, 2008)
                        id: mjasz
                        links:
                          html: https://osf.io/mjasz/
                          self: https://api.osf.io/v2/nodes/mjasz/
                        relationships:
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/mjasz/relationships/institutions/
                                meta: {}
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/children/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/citation/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/comments/?filter%5Btarget%5D=mjasz
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/contributors/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/draft_registrations/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/files/
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/forks/
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/identifiers/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/mjasz/relationships/linked_nodes/
                                meta: {}
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/logs/
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/node_links/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/preprints/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/registrations/
                                meta: {}
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/
                                meta: {}
                          template_node:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/3mqkb/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/view_only_links/
                                meta: {}
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/mjasz/wikis/
                                meta: {}
                        type: nodes
                    links:
                      first: null
                      last: null
                      meta: null
                      next: null
                      per_page: 10
                      prev: null
                      total: 3
          description: OK
      summary: List all nodes
      tags:
        - View Only Links
      x-response-schema: Node
  "/wikis/{wiki_id}/":
    get:
      description: |-
        Retrieves the details about a specific wiki.
        A wiki is a collection of markdown text pages that can be used to describe the project or dataset of contained in the attached node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested wiki, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: wiki_read
      parameters:
        - description: The unique identifier of the wiki.
          in: path
          name: wiki_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            "*/*":
              schema:
                properties:
                  attributes:
                    description: The properties of the wiki.
                    properties:
                      content_type:
                        description: Content type of the wiki (`text/markdown`).
                        readOnly: true
                        type: string
                      current_user_can_comment:
                        description: Whether the current user is allowed to post comments on this wiki.
                        readOnly: true
                        type: string
                      date_modified:
                        description: The date and time at which the wiki was last modified, as an iso8601 formatted timestamp.
                        format: date-time
                        readOnly: true
                        type: string
                      extra:
                        description: A dictionary containing additional metadata about this wiki, including version information.
                        readOnly: true
                        type: string
                      kind:
                        description: The type of object.
                        readOnly: true
                        type: string
                      materialized_path:
                        description: Materialized path to the wiki object.
                        readOnly: true
                        type: string
                      name:
                        description: The name/title of the wiki page.
                        readOnly: true
                        type: string
                      path:
                        description: Path to the wiki object.
                        readOnly: true
                        type: string
                      size:
                        description: Size of the wiki.
                        readOnly: true
                        type: string
                    readOnly: false
                    required:
                      - kind
                      - name
                      - date_modified
                      - extra
                      - content_type
                      - path
                      - current_user_can_comment
                      - materialized_path
                      - size
                    title: Attributes
                    type: object
                  id:
                    description: The identifier of the wiki.
                    readOnly: true
                    type: string
                  links:
                    description: URLs to alternative representations of the wiki.
                    properties:
                      download:
                        description: The URL to download the content of the wiki.
                        format: URL
                        readOnly: true
                        type: string
                      info:
                        description: A link to the detail page for the wiki.
                        format: URL
                        readOnly: true
                        type: string
                      self:
                        description: A link to the detail page for the wiki.
                        format: URL
                        readOnly: true
                        type: string
                    readOnly: true
                    title: Links
                    type: object
                  relationships:
                    description: URLs to other entities or entity collections that have a relationship to the wiki.
                    properties:
                      comments:
                        description: A relationship to the comments related to this wiki.
                        readOnly: false
                        type: string
                      node:
                        description: A relationship to the associated node.
                        readOnly: false
                        type: string
                      user:
                        description: A relationship to the user associated with this wiki.
                        readOnly: false
                        type: string
                    readOnly: false
                    required:
                      - node
                      - user
                      - comments
                    title: Relationships
                    type: object
                  type:
                    description: The type identifier of the wiki (`wikis`).
                    readOnly: false
                    type: string
                required:
                  - type
                  - relationships
                title: Wiki
                type: object
            application/json:
              examples:
                response:
                  value:
                    data:
                      attributes:
                        content_type: text/markdown
                        current_user_can_comment: true
                        date_modified: 2017-02-16T15:45:57.671957
                        extra:
                          version: 47
                        kind: file
                        materialized_path: /zveyb
                        name: home
                        path: /zveyb
                        size: 552
                      id: xu77p
                      links:
                        download: https://api.osf.io/v2/wikis/zveyb/content/
                        info: https://api.osf.io/v2/wikis/zveyb/
                        self: https://api.osf.io/v2/wikis/zveyb/
                      relationships:
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/tvyxz/comments/?filter%5Btarget%5D=zveyb
                              meta: {}
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/tvyxz/
                              meta: {}
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/5k3hq/
                              meta: {}
                      type: wikis
          description: OK
      summary: Retrieve a Wiki
      tags:
        - Wikis
      x-response-schema: Wiki
  "/wikis/{wiki_id}/content/":
    get:
      description: |-
        Retrieves the plaintext content of a wiki in markdown format.
        #### Returns
        Returns `text/markdown` of the wiki content itself.
        If the request is unsuccessful, plaintext with the error message will be displayed.
      operationId: wiki_content
      parameters:
        - description: The unique identifier of the wiki.
          in: path
          name: wiki_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      summary: Retrieve the Content of a Wiki
      tags:
        - Wikis
      x-response-schema: Wiki
components:
  requestBodies:
    collections_add_metadataBody:
      content:
        application/json:
          schema:
            example:
              application/json:
                data:
                  attributes:
                    guid: test0
                    subjects: 5fd228b7e64e1300aa99ee15
                    volume: test
                  type: collected-metadata
            type: object
      required: true
    collections_linked_nodes_relationshipsBody:
      content:
        application/json:
          schema:
            example:
              data:
                - id: guid0
                  type: linked_nodes
                - id: newid
                  type: linked_nodes
                - id: test2
                  type: linked_nodes
                - id: guid4
                  type: linked_nodes
            type: object
      required: true
    collections_linked_registrations_relationshipsBody:
      content:
        application/json:
          schema:
            example:
              data:
                - id: guid0
                  type: linked_registrations
                - id: newid
                  type: linked_registrations
                - id: test2
                  type: linked_registrations
                - id: guid4
                  type: linked_registrations
            type: object
      required: true
    nodes_contributors_createBody:
      content:
        application/json:
          schema:
            example:
              data:
                attributes: {}
                relationships:
                  user:
                    data:
                      id: "{user_id}"
                      type: users
                type: contributors
            properties:
              attributes:
                description: The properties of the contributor entity.
                properties:
                  bibliographic:
                    description: Whether or not the contributor will be included in citations for the node. The default value is true.
                    readOnly: false
                    type: boolean
                  index:
                    description: The position of this contributor in the list of project contributors and in project citations.
                    readOnly: false
                    type: integer
                  permission:
                    description: The permission level of the contributor. The default value is 'write'.
                    enum:
                      - read
                      - write
                      - admin
                    readOnly: false
                    type: string
                  unregistered_contributor:
                    description: The assigned name of the contributor if the contributor has not yet claimed their account.
                    readOnly: true
                    type: string
                readOnly: false
                title: Attributes
                type: object
              id:
                description: The identifier of the contributor entity. Contributor identifiers have the form {node_id}-{user_id}.
                readOnly: true
                type: string
              links:
                description: URLs to alternative representations of the contributor entity.
                properties:
                  self:
                    description: A link to the the canonical API endpoint for the contributor.
                    format: URL
                    readOnly: true
                    type: string
                readOnly: true
                title: Links
                type: object
              relationships:
                description: URLs to other entities or entity collections that have a relationship to the contributor entity.
                properties:
                  node:
                    description: A relationship to the node that was created for the preprint, or from which the preprint was created.
                    readOnly: true
                    type: string
                  user:
                    description: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
                    readOnly: false
                    type: string
                readOnly: false
                required:
                  - node
                  - user
                title: Relationships
                type: object
              type:
                description: The type identifier of the contributor entity (`contributors`).
                readOnly: true
                type: string
            required:
              - type
              - relationships
            title: Contributor
            type: object
      required: true
    nodes_createBody:
      content:
        application/json:
          schema:
            example:
              data:
                attributes:
                  category: software
                  title: An Excellent Project Title
                type: nodes
            properties:
              attributes:
                description: The properties of the node entity.
                properties:
                  category:
                    description: The category of the node, as selected by project contributors.
                    enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    readOnly: false
                    type: string
                  collection:
                    description: Whether or not this node represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                    readOnly: true
                    type: boolean
                  current_user_can_comment:
                    description: Whether or not the current user has permission to post comments on this node. Comments on nodes can be set to allow all users to comment (if public) or restricted to only allow comments from contributors.
                    readOnly: true
                    type: boolean
                  current_user_permissions:
                    description: A list of strings representing the permissions for the current user on this node. Valid permissions are "admin", "read", and "write".
                    items:
                      type: string
                    readOnly: true
                    type: array
                  date_created:
                    description: The time at which the node was created, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  date_modified:
                    description: The time at which the node was last modified, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  description:
                    description: The description of the node.
                    readOnly: false
                    type: string
                  fork:
                    description: Whether or not this node represents a fork of another node.
                    readOnly: true
                    type: boolean
                  forked_date:
                    description: If this node is a fork of another node, the time at which the node was created, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  node_license:
                    description: A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
                    readOnly: false
                    type: string
                  preprint:
                    description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                    readOnly: true
                    type: boolean
                  public:
                    description: Whether or not the node is publicly visible. This field is only editable by project administrators.
                    readOnly: false
                    type: boolean
                  registration:
                    description: Whether or not the node represents a registration. This value should always be `false`. This field may be deprecated in future versions.
                    readOnly: true
                    type: boolean
                  tags:
                    description: A list of strings that describe this node, as entered by project contributors.
                    items:
                      type: string
                    readOnly: false
                    type: array
                  template_from:
                    description: The unique ID of the node from which this node was templated, if this node was created from a template.
                    readOnly: false
                    type: string
                  title:
                    description: The title of the node.
                    readOnly: false
                    type: string
                readOnly: false
                required:
                  - title
                  - category
                title: Attributes
                type: object
              id:
                description: The unique identifier of the node entity.
                readOnly: true
                type: string
              links:
                description: URLs to alternative representations of the node entity.
                properties:
                  html:
                    description: A link to the node's page on the OSF.
                    format: URL
                    readOnly: true
                    type: string
                  self:
                    description: A link to the canonical API endpoint of this node.
                    format: URL
                    readOnly: true
                    type: string
                readOnly: true
                title: Links
                type: object
              relationships:
                description: URLs to other entities or entity collections that have a relationship to the node entity.
                properties:
                  affiliated_institutions:
                    description: A link to the list of institutions this node is affiliated with.
                    readOnly: true
                    type: string
                  children:
                    description: A link to the list of this node's children (components).
                    readOnly: true
                    type: string
                  citation:
                    description: A link to the citation details of this node.
                    readOnly: true
                    type: string
                  comments:
                    description: A link to the list of comments on this node.
                    readOnly: true
                    type: string
                  contributors:
                    description: A link to the list of contributors on this node.
                    readOnly: true
                    type: string
                  draft_registrations:
                    description: A link to the list of registrations that have been initiated from this node and are still in a draft state.
                    readOnly: true
                    type: string
                  files:
                    description: A link to the list of storage providers that have been enabled on this node.
                    readOnly: true
                    type: string
                  forked_from:
                    description: A link to the node which this node was forked from, if this node is a fork.
                    readOnly: true
                    type: string
                  forks:
                    description: A link to the list of nodes that are forks of this node.
                    readOnly: true
                    type: string
                  identifiers:
                    description: A link to the list of identifiers for this node (i.e. ARK and DOI identifiers).
                    readOnly: true
                    type: string
                  license:
                    description: A link to the license that has been applied to this node.
                    readOnly: true
                    type: string
                  linked_nodes:
                    description: A link to the list of nodes that are linked to the current node.
                    readOnly: true
                    type: string
                  logs:
                    description: A link to the list of log actions pertaining to this node.
                    readOnly: true
                    type: string
                  node_links:
                    description: A link to the list of nodes that are linked to the current node. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                    readOnly: true
                    type: string
                  parent:
                    description: A link to the node that is the direct parent of the current node, if the current node is a child node.
                    readOnly: true
                    type: string
                  preprints:
                    description: A link to the list of preprints that this node relates to.
                    readOnly: true
                    type: string
                  registrations:
                    description: A link to the list of registrations that have been created from this node.
                    readOnly: true
                    type: string
                  root:
                    description: A link to the node that is the top-level parent of the current node. If the current node is the top-level node, the root is the current node.
                    readOnly: true
                    type: string
                  template_node:
                    description: A link to the node that the current node was templated from, if the current node was created from a template.
                    readOnly: true
                    type: string
                  view_only_links:
                    description: A link to the list of view only links that have been created for this node.
                    readOnly: true
                    type: string
                  wikis:
                    description: A link to the list of wiki pages for this node.
                    readOnly: true
                    type: string
                readOnly: false
                title: Relationships
                type: object
              type:
                description: The type identifier of the node entity (`nodes`).
                readOnly: false
                type: string
            required:
              - type
              - attributes
            title: Node
            type: object
      required: true
    nodes_draft_registrations_createBody:
      content:
        application/json:
          schema:
            example:
              data:
                attributes:
                  registration_supplement: "{schema_id}"
                type: draft_registrations
            properties:
              attributes:
                description: The properties of the draft registration entity.
                properties:
                  datetime_initiated:
                    description: The time at which the draft registration was first initiated, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  datetime_updated:
                    description: The time at which the draft registration was last updated, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  registration_metadata:
                    description: A dictionary of question IDs and responses from the registration schema.
                    readOnly: false
                    type: string
                  registration_supplement:
                    description: The ID of an active registration schema that this registration will conform to.
                    readOnly: false
                    type: string
                readOnly: false
                required:
                  - datetime_initiated
                  - datetime_updated
                  - registration_supplement
                title: Attributes
                type: object
              id:
                description: The unique identifier of the draft registration entity.
                readOnly: true
                type: string
              links:
                description: URLs to alternative representations of the draft registration entity.
                properties:
                  html:
                    description: A link to the draft registration's page on the OSF.
                    format: URL
                    readOnly: true
                    type: string
                readOnly: true
                required:
                  - html
                title: Links
                type: object
              relationships:
                description: URLs to other entities or entity collections that have a relationship to the draft registration entity.
                properties:
                  branched_from:
                    description: A link to the node that this draft registration was created from.
                    readOnly: true
                    type: string
                  initiator:
                    description: A link to the user who initiated the draft registration.
                    readOnly: true
                    type: string
                  registration_schema:
                    description: A link to the detailed registration schema that this draft conforms to.
                    readOnly: true
                    type: string
                readOnly: true
                required:
                  - branched_from
                  - initiator
                  - registration_schema
                title: Relationships
                type: object
              type:
                description: The type identifier of the draft registration entity (`draft_registrations`).
                readOnly: true
                type: string
            required:
              - id
              - type
              - attributes
              - relationships
              - links
            title: Draft Registration
            type: object
      required: true
    registrations_partial_updateBody:
      content:
        application/json:
          schema:
            example:
              data:
                attributes:
                  draft_registration: "{draft_registration_id}"
                  lift_embargo: 2017-05-10T20:44:03.185000
                  registration_choice: embargo
                type: registrations
            properties:
              attributes:
                description: The properties of the registration entity.
                properties:
                  category:
                    description: The category of the registered node.
                    enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    readOnly: true
                    type: string
                  collection:
                    description: Whether or not this registration represents a collection. This value should always be `false`. This field may be deprecated in future versions.
                    readOnly: true
                    type: boolean
                  current_user_can_comment:
                    description: Whether or not the current user has permission to post comments on this registration. Comments on registrations can be set to allow all users to comment or restricted to only contributors.
                    readOnly: true
                    type: boolean
                  current_user_permissions:
                    description: A list of strings representing the permissions for the current user on this registration. Valid permissions are "admin", "read", and "write".
                    items:
                      type: string
                    readOnly: true
                    type: array
                  date_created:
                    description: The time at which the registered node was created, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  date_modified:
                    description: The time at which the registered node was last modified, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  date_registered:
                    description: The time at which this registration was created, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  date_withdrawn:
                    description: The time at which this registration was withdrawn, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  description:
                    description: The description of the registered node.
                    readOnly: true
                    type: string
                  embargo_end_date:
                    description: The time at which the embargo on this registration will be lifted and the registration will become public, as an iso8601 formatted timestamp.
                    format: date-time
                    readOnly: true
                    type: string
                  fork:
                    description: Whether or not this registration represents a fork of another node.
                    readOnly: true
                    type: boolean
                  node_license:
                    description: A dictionary containing the metadata (copyright year and holder) associated with the registered node license (required for certain license types).
                    readOnly: true
                    type: string
                  pending_embargo_approval:
                    description: Whether or not the embargo associated with this registration is pending approval from project administrators.
                    readOnly: true
                    type: boolean
                  pending_registration_approval:
                    description: Whether or not the registration is pending approval from project administrators.
                    readOnly: true
                    type: boolean
                  pending_withdrawal:
                    description: Whether or not the registration is pending approval for withdrawal from project administrators.
                    readOnly: true
                    type: boolean
                  preprint:
                    description: Whether or not a preprint has been created from this node, or if this node was created for a preprint.
                    readOnly: true
                    type: boolean
                  public:
                    description: Whether or not the registration is publicly visible.
                    readOnly: false
                    type: boolean
                  registered_meta:
                    description: A dictionary with supplemental registration questions and responses.
                    readOnly: true
                    type: string
                  registration:
                    description: Whether or not this is a registration. This value should always be `true`. This field may be deprecated in future versions.
                    readOnly: true
                    type: boolean
                  registration_supplement:
                    description: The title of the registration schema this registration conforms to.
                    readOnly: true
                    type: string
                  tags:
                    description: A list of strings that describe the registered node.
                    items:
                      type: string
                    readOnly: true
                    type: array
                  template_from:
                    description: The unique ID of the node from which the registered node was templated, if the registered node was created from a template.
                    readOnly: true
                    type: string
                  title:
                    description: The title of the registered node.
                    readOnly: true
                    type: string
                  withdrawal_justification:
                    description: The reasoning for why this registration was withdrawn, as entered by the administrator that initiated the withdrawal.
                    readOnly: true
                    type: string
                  withdrawn:
                    description: Whether or not this registration has been withdrawn.
                    readOnly: true
                    type: boolean
                readOnly: true
                title: Attributes
                type: object
              id:
                description: The unique identifier of the registration.
                readOnly: true
                type: string
              links:
                description: URLs to alternative representations of the registrations entity.
                properties:
                  html:
                    description: A link to the registration's page on the OSF.
                    format: URL
                    readOnly: true
                    type: string
                  self:
                    description: A link to the canonical API endpoint of this registration.
                    format: URL
                    readOnly: true
                    type: string
                readOnly: true
                title: Links
                type: object
              relationships:
                description: URLs to other entities or entity collections that have a relationship to the registration entity.
                properties:
                  affiliated_institutions:
                    description: A link to the list of institutions this registration is affiliated with.
                    readOnly: true
                    type: string
                  children:
                    description: A link to the list of the registered node's children (components).
                    readOnly: true
                    type: string
                  citation:
                    description: A link to the citation details of this registration.
                    readOnly: true
                    type: string
                  comments:
                    description: A link to the list of comments on this registration.
                    readOnly: true
                    type: string
                  contributors:
                    description: A link to the list of contributors on this registration.
                    readOnly: true
                    type: string
                  files:
                    description: A link to the list of storage providers that have been enabled on this registration.
                    readOnly: true
                    type: string
                  forks:
                    description: A link to the list of nodes that are forks of this registration.
                    readOnly: true
                    type: string
                  identifiers:
                    description: A link to the list of identifiers for this registration (i.e. ARK and DOI identifiers).
                    readOnly: true
                    type: string
                  linked_nodes:
                    description: A link to the list of nodes that are linked to this registration.
                    readOnly: true
                    type: string
                  logs:
                    description: A link to the list of log actions pertaining to this registration.
                    readOnly: true
                    type: string
                  node_links:
                    description: A link to the list of nodes that are linked to this registration. This field is deprecated as of verson 2.1; use the linked_nodes link instead.
                    readOnly: true
                    type: string
                  parent:
                    description: A link to the node that is the direct parent of the current registration, if the current registration is a child registration.
                    readOnly: true
                    type: string
                  registered_by:
                    description: A link to the user that initiated this registration.
                    readOnly: true
                    type: string
                  registered_from:
                    description: A link to the node that this registration was registered from.
                    readOnly: true
                    type: string
                  registration_schema:
                    description: A link to the metaschema that this registration conforms to.
                    readOnly: true
                    type: string
                  root:
                    description: A link to the node that is the top-level parent of the current registration. If the current registration is the top-level node, the root is the current registration.
                    readOnly: true
                    type: string
                  view_only_links:
                    description: A link to the list of view only links that have been created for this registration.
                    readOnly: true
                    type: string
                  wikis:
                    description: A link to the list of wiki pages for this registration.
                    readOnly: true
                    type: string
                readOnly: true
                title: Relationships
                type: object
              type:
                description: The type identifier of the registration entity (`registrations`).
                readOnly: true
                type: string
            required:
              - id
              - type
              - attributes
              - relationships
              - links
            title: Registration
            type: object
      required: true
x-tagGroups:
  - name: Introduction
    tags:
      - Introduction
      - General Usage
      - Authentication
      - Pagination
      - Versioning
      - Filtering
      - Sparse Fieldsets
      - Embedding
      - Request Formatting
      - Errors & Error Codes
      - Entities & Entity Collections
  - name: API Reference
    tags:
      - Addons
      - Base
      - Citations
      - Comments
      - Collections
      - Files
      - Licenses
      - Logs
      - Institutions
      - Metaschemas
      - Nodes
      - Preprints
      - Preprint Providers
      - Registrations
      - Taxonomies
      - Users
      - View Only Links
