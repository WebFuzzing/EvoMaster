swagger: "2.0"
info:
  title: Credas API
  version: v1
  x-apisguru-categories:
    - security
  x-logo:
    url: https://www.credas.co.uk/wp-content/uploads/2018/02/favicon.png
  x-origin:
    - format: swagger
      url: https://pi-api.credas.co.uk/swagger/v1/swagger.json
      version: "2.0"
  x-providerName: credas.co.uk
  x-serviceName: pi
paths:
  /api/bank-accounts/verify:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: Verify
      parameters:
        - description: Object containing data required to perform bank account verification.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.BankAccounts.AccountVerificationRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Success
          examples:
            application/json:
              accountNumber: "12345678"
              accountNumberValidation: 2
              accountNumberValidationText: Valid
              accountStatus: 2
              accountStatusText: Live
              accountValid: true
              addressValidation: 2
              addressValidationText: Current address
              checkDate: 2019-08-01T12:15:22
              checkId: 12345678-1234-5678-abcd-1234567890ab
              checkStatus: 1
              error: false
              hasBeenOverridden: false
              nameValidation: 2
              nameValidationText: Valid
              referenceId: RF1234
              sortcode: "123456"
              sortcodeValidation: 2
              sortcodeValidationText: Valid
          schema:
            $ref: "#/definitions/Credas.Api.Models.BankAccounts.AccountVerificationResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Verifies bank account details.
      tags:
        - BankAccounts
  /api/companies:
    post:
      consumes: []
      description: "If a company appears multiple times within the structure, it will only be detailed in full (i.e. with significant ownership details) in its first instance. Subsequent instances will be \r

        \            marked as duplicates.\r

        \            Whilst duplicate instances of companies can and will be identified, it is not possible to categorically identify duplicated people."
      operationId: SearchCompany
      parameters:
        - description: The company registration number of the company that should be searched.
          in: query
          name: companyNumber
          required: false
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Success
          examples:
            application/json:
              addressLine1: 25 Westgate Street
              companyName: Widget Production Limited
              companyNumber: "12345678"
              dateOfRegistration: 1973-07-17T00:00:00
              duplicate: false
              id: 38eba446-0ff9-4602-9694-ee7f786ef9b1
              locality: ""
              postCode: CF101NS
              region: Cardiff
              significantParentCompanies:
                - addressLine1: null
                  companyName: Widgets International Limited
                  companyNumber: "54345678"
                  dateOfRegistration: 0001-01-01T00:00:00
                  duplicate: false
                  id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                  locality: null
                  postCode: null
                  region: null
                  significantParentCompanies: null
                  significantPeople:
                    - forename: John
                      id: b58ec846-1da1-4ac2-be27-b1dcbff8c8dd
                      regEntryId: null
                      surname: Smith
                - addressLine1: null
                  companyName: Widget Services Limited
                  companyNumber: "23232321"
                  dateOfRegistration: 0001-01-01T00:00:00
                  duplicate: false
                  id: 48641603-7593-46a9-b993-8ead4daca09e
                  locality: null
                  postCode: null
                  region: null
                  significantParentCompanies:
                    - addressLine1: 25 Westgate Street
                      companyName: Widgets International Limited
                      companyNumber: "54345678"
                      dateOfRegistration: 1973-07-17T00:00:00
                      duplicate: true
                      id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                      locality: ""
                      postCode: CF101NS
                      region: Cardiff
                      significantParentCompanies: null
                      significantPeople: null
                  significantPeople: null
              significantPeople:
                - forename: John
                  id: 108db0e1-fe11-44be-ad8f-405ed57d3fbc
                  regEntryId: a5d3b128-f65d-4e6d-a9e2-ac8f2763ec7a
                  surname: Smith
                - forename: Jane
                  id: 965f3298-da35-4906-8d9e-d346008289dc
                  regEntryId: null
                  surname: Smith
          schema:
            $ref: "#/definitions/Credas.Api.Models.Companies.CompanyDetail"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: If the consumer doesn't have the required permission to use the endpoint.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Searches for a company based on its Company Number and returns its details.
      tags:
        - Companies
  "/api/companies/{companyId}":
    get:
      consumes: []
      operationId: GetCompany
      parameters:
        - format: uuid
          in: path
          name: companyId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Success
          examples:
            application/json:
              addressLine1: 25 Westgate Street
              companyName: Widget Production Limited
              companyNumber: "12345678"
              dateOfRegistration: 1973-07-17T00:00:00
              duplicate: false
              id: 38eba446-0ff9-4602-9694-ee7f786ef9b1
              locality: ""
              postCode: CF101NS
              region: Cardiff
              significantParentCompanies:
                - addressLine1: null
                  companyName: Widgets International Limited
                  companyNumber: "54345678"
                  dateOfRegistration: 0001-01-01T00:00:00
                  duplicate: false
                  id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                  locality: null
                  postCode: null
                  region: null
                  significantParentCompanies: null
                  significantPeople:
                    - forename: John
                      id: b58ec846-1da1-4ac2-be27-b1dcbff8c8dd
                      regEntryId: null
                      surname: Smith
                - addressLine1: null
                  companyName: Widget Services Limited
                  companyNumber: "23232321"
                  dateOfRegistration: 0001-01-01T00:00:00
                  duplicate: false
                  id: 48641603-7593-46a9-b993-8ead4daca09e
                  locality: null
                  postCode: null
                  region: null
                  significantParentCompanies:
                    - addressLine1: 25 Westgate Street
                      companyName: Widgets International Limited
                      companyNumber: "54345678"
                      dateOfRegistration: 1973-07-17T00:00:00
                      duplicate: true
                      id: ebbc9433-40a6-4197-902d-d4ff2efdbaa5
                      locality: ""
                      postCode: CF101NS
                      region: Cardiff
                      significantParentCompanies: null
                      significantPeople: null
                  significantPeople: null
              significantPeople:
                - forename: John
                  id: 108db0e1-fe11-44be-ad8f-405ed57d3fbc
                  regEntryId: a5d3b128-f65d-4e6d-a9e2-ac8f2763ec7a
                  surname: Smith
                - forename: Jane
                  id: 965f3298-da35-4906-8d9e-d346008289dc
                  regEntryId: null
                  surname: Smith
          schema:
            $ref: "#/definitions/Credas.Api.Models.Companies.CompanyDetail"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: If the consumer doesn't have the required permission to use the endpoint.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      tags:
        - Companies
  /api/credit-status/perform:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: CheckCreditStatus
      parameters:
        - description: Object containing data required to perform the check.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.StatusChecks.StatusCheckRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Success
          examples:
            application/json:
              ccj:
                - address1: Flat 30
                  address2: Richmond Court, St. Peters Street
                  address3: null
                  address4: null
                  address5: null
                  amount: £5000.00
                  caseNumber: CS1113-56-33
                  courtName: CARMARTHEN COUNTY COURT
                  dateEnd: 2017-11-09T00:00:00
                  dob: 1988-12-04T00:00:00
                  judgementDate: 2017-11-09T00:00:00
                  judgementType: 2
                  judgementTypeText: Satisfaction
                  name: ANGELA ZOE SPECIMEN
                  postcode: CF24 3AZ
              checkDate: 2019-08-01T12:33:11
              companyDirector:
                - companyAppointments:
                    - address: FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                      appointmentDate: 2015-06-11T00:00:00
                      appointmentType: Current Director
                      dob: 1988-12-04T00:00:00
                      name: Angela Zoe Specimen
                      nationality: British
                      occupation: Field Agent
                      title: Ms
                  companyName: ANGELS LIMITED
                  companyRegNo: "00123456"
                  dateAppointed: 2015-06-11T00:00:00
                  matchType: 3
                  matchTypeText: Name, Address and Date of Birth
                  registeredOffice: FLAT 3, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
              hasBeenOverridden: false
              insolvency:
                - address:
                    address1: Flat 30
                    address2: Richmond Court
                    address3: St Peters Street
                    address4: null
                    address5: null
                    dps: DPS1
                    isEmpty: false
                    postcode: CF24 3AZ
                  aliases: ANGEL UK
                  assetTotal: £2000.00
                  caseNo: IC123456789-22232
                  caseType: Standard
                  court: CARMARTHEN COUNTY COURT
                  debtTotal: £20000.00
                  description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                  dob: 1988-12-04T00:00:00
                  name: ANGELA SPECIMEN
                  occupation: Field Agent
                  presentationDate: 2018-01-15T00:00:00
                  previousAddress: null
                  serviceOffice: MR JON WILLIAM JONES
                  startDate: 2017-12-01T00:00:00
                  status: CURRENT
                  telephoneNumber: "02920113244"
                  tradingNames: ANGELS LTD
                  type: 4
                  typeText: England and Wales DRO
              status: 3
          schema:
            $ref: "#/definitions/Credas.Api.Models.StatusChecks.StatusCheck"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Check includes identifying bankruptcy, insolvency, CCJ's or Company Directorship.
      tags:
        - CreditStatus
  /api/datachecks:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddDataCheck
      parameters:
        - description: Object containing data check details.
          in: body
          name: dataCheck
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.DataCheck.AddDataCheckRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of newly added data check.
          examples:
            application/json:
              id: abcdef12-abcd-abcd-beef-ab123cd12345
              regCode: QX92TAG7
          schema:
            $ref: "#/definitions/Credas.Api.Models.DataCheck.AddDataCheckResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Creates new data check against a specified registration.
      tags:
        - DataChecks
  /api/images/id-document:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddIdDocumentImage
      parameters:
        - description: Object containing the id document image and registration id.
          in: body
          name: idDocument
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.AddIdDocumentImageRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of the processed id document.
          examples:
            application/json:
              documentStatus: 1
              documentType: 1
              facialMatch: true
              id: a9c10b16-130b-4051-9d60-c0c6ee9dca76
              regCode: 57RV4345
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.AddIdDocumentImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Add an id document image to the specified registration.
      tags:
        - Images
  "/api/images/id-document/{registrationId}":
    get:
      consumes: []
      operationId: GetIdDocumentImages
      parameters:
        - description: The id of the registration.
          format: uuid
          in: path
          name: registrationId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of the id documents associated with the registration.
          examples:
            application/json:
              - addressCity: null
                addressFull: null
                addressPostcode: null
                country: United Kingdom
                countryCode: GBR
                dateCreated: 2018-02-23T17:22:11.044
                dateOfBirth: 1968-11-23T00:00:00
                description: Passport
                documentAnalysisResult: 1
                documentNumber: "123456789"
                documentSide: 1
                expiryDate: 2025-04-21T00:00:00
                facialMatch: true
                forename: Alan
                fullName: Alan Harper
                hiResUrl: https://
                id: fedcba89-dead-1278-bead-8901234abcde
                isUnderReview: false
                manuallyVerified: false
                middleName: William
                mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                mrz3: null
                nameCheck: true
                nameCheckMethod: 0
                nfcCheck: true
                nfcFacialUrl: https://
                nfcReadStatus: 0
                primaryScanId: null
                status: 1
                surname: Harper
                url: https://
              - addressCity: London
                addressFull: 10 Downing St, Westminster, London, SW1A2AA
                addressPostcode: SW1A2AA
                country: United Kingdom
                countryCode: GBR
                dateCreated: 2018-02-23T19:24:50.875
                dateOfBirth: 1968-11-23T00:00:00
                description: Driving Licence
                documentAnalysisResult: 2
                documentNumber: HARPER765453P99RT
                documentSide: 1
                expiryDate: 2025-04-21T00:00:00
                facialMatch: false
                forename: Alan
                fullName: Alan William Harper
                hiResUrl: https://
                id: fedcba89-dead-1278-bead-8901234abcde
                isUnderReview: false
                manuallyVerified: true
                middleName: William
                mrz1: null
                mrz2: null
                mrz3: null
                nameCheck: true
                nameCheckMethod: 0
                nfcCheck: false
                nfcFacialUrl: null
                nfcReadStatus: 0
                primaryScanId: null
                status: 2
                surname: Harper
                url: https://
              - addressCity: null
                addressFull: null
                addressPostcode: null
                country: United Kingdom
                countryCode: GBR
                dateCreated: 2018-02-23T19:24:51.112
                dateOfBirth: 1968-11-23T00:00:00
                description: Driving Licence
                documentAnalysisResult: 2
                documentNumber: HARPER765453P99RT
                documentSide: 2
                expiryDate: 2025-04-21T00:00:00
                facialMatch: false
                forename: Alan
                fullName: Alan William Harper
                hiResUrl: https://
                id: fedcba89-dead-1278-bead-8901234abcff
                isUnderReview: false
                manuallyVerified: false
                middleName: William
                mrz1: null
                mrz2: null
                mrz3: null
                nameCheck: false
                nameCheckMethod: 0
                nfcCheck: false
                nfcFacialUrl: null
                nfcReadStatus: 8
                primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                status: 2
                surname: Harper
                url: https://
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.GetIdDocumentImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Get all id document images associated with a registration.
      tags:
        - Images
  /api/images/liveness:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddLivenessImage
      parameters:
        - description: Object containing the liveness image and registration id.
          in: body
          name: liveness
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.AddLivenessImageRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK response indicating a successful action.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Add a liveness image (UAP) to the specified registration.
      tags:
        - Images
  "/api/images/liveness-performed/{registrationId}":
    get:
      consumes: []
      operationId: GetLivenessPerformedImage
      parameters:
        - description: The id of the registration.
          format: uuid
          in: path
          name: registrationId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Response containing Liveness performed image details.
          examples:
            application/json:
              url: https://url.to/a/liveness-performed/image.jpg
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.GetLivenessPerformedImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If the liveness performed image doesn't exist.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieve the liveness performed image associated with a registration.
      tags:
        - Images
  "/api/images/liveness/{registrationId}":
    get:
      consumes: []
      operationId: GetLivenessImage
      parameters:
        - description: The id of the registration.
          format: uuid
          in: path
          name: registrationId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Response containing Liveness image details.
          examples:
            application/json:
              description: Touch your LEFT cheek with your LEFT hand
              id: afbaa1d2-d81a-415d-bc51-092651c84bbb
              url: https://example.com/image.jpg
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.GetLivenessImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieve the liveness action image (UAP) associated with a registration.
      tags:
        - Images
  /api/images/selfie:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddSelfieImage
      parameters:
        - description: Object containing the selfie image and registration id.
          in: body
          name: selfie
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.AddSelfieImageRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Result of uploading selfie image; including liveness check indicator.
          examples:
            application/json:
              livenessConfirmed: true
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.AddSelfieImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Add a selfie image to the registration.
      tags:
        - Images
  "/api/images/selfie/{registrationId}":
    get:
      consumes: []
      operationId: GetSelfieImage
      parameters:
        - description: The id of the registration.
          format: uuid
          in: path
          name: registrationId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Response containing the selfie image details.
          examples:
            application/json:
              url: https://url.to/a/selfie/image.jpg
          schema:
            $ref: "#/definitions/Credas.Api.Models.Images.GetSelfieImageResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieve the selfie image associated with a registration.
      tags:
        - Images
  /api/property-register:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddPropertyRegisterCheck
      parameters:
        - description: Object containing check details.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of newly added data check.
          examples:
            application/json:
              checkStatus: 1
              hasBeenOverridden: false
              matchResult: 1
              matchResultText: Full Name Match
              propertyOwnership: 2
              propertyOwnershipText: Joint Ownership
              titleNumber: TMP123456
          schema:
            $ref: "#/definitions/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Creates new property registry check against the registration.
      tags:
        - PropertyRegister
  "/api/property-register/{id}":
    get:
      consumes: []
      operationId: GetPropertyRegisterCheckResult
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of the property register check.
          examples:
            application/json:
              checkStatus: 1
              hasBeenOverridden: false
              matchResult: 1
              matchResultText: Full Name Match
              propertyOwnership: 2
              propertyOwnershipText: Joint Ownership
              titleNumber: TMP123456
          schema:
            $ref: "#/definitions/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration does not have associated property register check.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieves property registry check associated with the registration.
      tags:
        - PropertyRegister
  /api/reg-types:
    get:
      consumes: []
      operationId: GetAll
      parameters:
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: A collection of available RegTypes.
          examples:
            application/json:
              - id: 12345678-1234-1234-1234-1234567890ab
                name: Standard AML Checks
          schema:
            items:
              $ref: "#/definitions/Credas.Api.Models.RegTypes.RegType"
            type: array
            uniqueItems: false
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Gets all available RegTypes.
      tags:
        - RegTypes
  /api/registrations:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: AddRegistration
      parameters:
        - description: Object containing registration details.
          in: body
          name: registration
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.AddRegistrationRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Details of newly added registration.
          examples:
            application/json:
              id: abcdef12-abcd-abcd-beef-ab123cd12345
              regCode: QX92TAG7
              webJourneyUrl:
                url: https://pi-verify.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                validUntil: 2021-08-23T09:55:18.1851291Z
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.AddRegistrationResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "402":
          description: Error code meaning that the operation was aborted due to insufficient credits.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Creates new registration.
      tags:
        - Registrations
  /api/registrations/instant:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      description: It's designed to provide a quick integration path for external systems which capture these details.
      operationId: AddInstantRegistration
      parameters:
        - description: The Credas.Api.Models.Registrations.AddInstantRegistrationRequest object containing required data.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.AddInstantRegistrationRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK response with object containing the document information.
          examples:
            application/json:
              documentStatus: 1
              documentType: 1
              facialMatch: true
              id: abcdef12-abcd-abcd-beef-ab123cd12345
              regCode: QX92TAG7
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.AddInstantRegistrationResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Creates new registration record, adds an ID document and optional selfie image in one go.
      tags:
        - Registrations
  "/api/registrations/referenceid/{referenceId}/summary":
    get:
      consumes: []
      operationId: GetRegistrationSummariesByReferenceId
      parameters:
        - description: ReferenceId - from external system to match Registrations on.
          in: path
          name: referenceId
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Collection of Registration summary objects.
          examples:
            application/json:
              - bankAccountChecks:
                  - accountNumber: "12345678"
                    accountNumberValidation: 2
                    accountNumberValidationText: Valid
                    accountStatus: 2
                    accountStatusText: Live
                    accountValid: true
                    addressValidation: 2
                    addressValidationText: Current address
                    checkDate: 2019-08-01T12:15:22
                    checkId: 12345678-1234-5678-abcd-1234567890ab
                    checkStatus: 1
                    error: false
                    hasBeenOverridden: false
                    nameValidation: 2
                    nameValidationText: Valid
                    referenceId: RF1234
                    sortcode: "123456"
                    sortcodeValidation: 2
                    sortcodeValidationText: Valid
                creditStatusCheck:
                  ccj:
                    - address1: Flat 30
                      address2: Richmond Court, St. Peters Street
                      address3: null
                      address4: null
                      address5: null
                      amount: £5000.00
                      caseNumber: CS1113-56-33
                      courtName: CARMARTHEN COUNTY COURT
                      dateEnd: 2017-11-09T00:00:00
                      dob: 1988-12-04T00:00:00
                      judgementDate: 2017-11-09T00:00:00
                      judgementType: 2
                      judgementTypeText: Satisfaction
                      name: ANGELA ZOE SPECIMEN
                      postcode: CF24 3AZ
                  checkDate: 2019-08-01T12:33:11
                  companyDirector:
                    - companyAppointments:
                        - address: FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                          appointmentDate: 2015-06-11T00:00:00
                          appointmentType: Current Director
                          dob: 1988-12-04T00:00:00
                          name: Angela Zoe Specimen
                          nationality: British
                          occupation: Field Agent
                          title: Ms
                      companyName: ANGELS LIMITED
                      companyRegNo: "00123456"
                      dateAppointed: 2015-06-11T00:00:00
                      matchType: 3
                      matchTypeText: Name, Address and Date of Birth
                      registeredOffice: FLAT 3, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                  hasBeenOverridden: false
                  insolvency:
                    - address:
                        address1: Flat 30
                        address2: Richmond Court
                        address3: St Peters Street
                        address4: null
                        address5: null
                        dps: DPS1
                        isEmpty: false
                        postcode: CF24 3AZ
                      aliases: ANGEL UK
                      assetTotal: £2000.00
                      caseNo: IC123456789-22232
                      caseType: Standard
                      court: CARMARTHEN COUNTY COURT
                      debtTotal: £20000.00
                      description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                      dob: 1988-12-04T00:00:00
                      name: ANGELA SPECIMEN
                      occupation: Field Agent
                      presentationDate: 2018-01-15T00:00:00
                      previousAddress: null
                      serviceOffice: MR JON WILLIAM JONES
                      startDate: 2017-12-01T00:00:00
                      status: CURRENT
                      telephoneNumber: "02920113244"
                      tradingNames: ANGELS LTD
                      type: 4
                      typeText: England and Wales DRO
                  status: 3
                customTermsAccepted: false
                customTermsAcceptedDateTime: null
                customTermsAcceptedVersion: null
                dataCheckResult: 1
                dataCheckSources:
                  - dateCreated: 2018-02-23T12:54:32.017
                    hasBeenOverridden: false
                    hasPepSanctionsData: false
                    label: Mortality
                    pepSanctionsData: null
                    remarks:
                      - category: 1
                        description: Halo source indicates this person is not deceased at address 1
                      - category: 4
                        description: No middle initial specified by user
                    sourceType: 3
                    status: 1
                  - dateCreated: 2018-02-23T12:54:32.017
                    hasBeenOverridden: false
                    hasPepSanctionsData: false
                    label: Address and DOB
                    pepSanctionsData: null
                    remarks:
                      - category: 1
                        description: "(Electoral Register) Address #1 details are valid"
                      - category: 2
                        description: "(Electoral Register) Surname details not matched address #1"
                    sourceType: 4
                    status: 2
                  - dateCreated: 2018-02-23T12:54:32.017
                    hasBeenOverridden: false
                    hasPepSanctionsData: true
                    label: International Sanctions
                    pepSanctionsData:
                      - addresses:
                          - lines:
                              - 44 Lowbridge Street
                              - Pasadena
                              - California
                              - USA
                        aliases: null
                        fullName: Alan Stuart Harper
                        id: null
                        positions:
                          - country: USA
                            position: Head of local gov
                        sanctionBodies: null
                        sanctionDates:
                          - date: 1937-04-03T12:00:00Z
                            day: 3
                            month: 4
                            type: 1
                            year: 1937
                    remarks:
                      - category: 1
                        description: Full name has not been matched.
                    sourceType: 7
                    status: 1
                dataChecksPerformed: true
                dateCreated: 2018-02-23T12:54:31.611
                email: alan.harper@email.com
                forename: Alan
                id: abcdef12-abcd-abcd-beef-ab123cd12345
                idDocuments:
                  - addressCity: null
                    addressFull: null
                    addressPostcode: null
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T17:22:11.044
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Passport
                    documentAnalysisResult: 1
                    documentNumber: "123456789"
                    documentSide: 1
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: true
                    forename: Alan
                    fullName: Alan Harper
                    id: fedcba89-dead-1278-bead-8901234abcde
                    isUnderReview: false
                    manuallyVerified: false
                    middleName: William
                    mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                    mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                    mrz3: null
                    nameCheck: true
                    nameCheckMethod: 0
                    nfcCheck: true
                    nfcReadStatus: 1
                    primaryScanId: null
                    status: 1
                    surname: Harper
                  - addressCity: London
                    addressFull: 10 Downing St, Westminster, London, SW1A2AA
                    addressPostcode: SW1A2AA
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T19:24:50.875
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Driving Licence
                    documentAnalysisResult: 2
                    documentNumber: HARPER765453P99RT
                    documentSide: 1
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: false
                    forename: Alan
                    fullName: Alan William Harper
                    id: fedcba89-dead-1278-bead-8901234abcde
                    isUnderReview: false
                    manuallyVerified: true
                    middleName: William
                    mrz1: null
                    mrz2: null
                    mrz3: null
                    nameCheck: true
                    nameCheckMethod: 0
                    nfcCheck: false
                    nfcReadStatus: 8
                    primaryScanId: null
                    status: 2
                    surname: Harper
                  - addressCity: null
                    addressFull: null
                    addressPostcode: null
                    country: United Kingdom
                    countryCode: GBR
                    dateCreated: 2018-02-23T19:24:51.112
                    dateOfBirth: 1968-11-23T00:00:00
                    description: Driving Licence
                    documentAnalysisResult: 2
                    documentNumber: HARPER765453P99RT
                    documentSide: 2
                    expiryDate: 2025-04-21T00:00:00
                    facialMatch: false
                    forename: Alan
                    fullName: Alan William Harper
                    id: fedcba89-dead-1278-bead-8901234abcff
                    isUnderReview: false
                    manuallyVerified: false
                    middleName: William
                    mrz1: null
                    mrz2: null
                    mrz3: null
                    nameCheck: false
                    nameCheckMethod: 0
                    nfcCheck: false
                    nfcReadStatus: 8
                    primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                    status: 2
                    surname: Harper
                idVerification: null
                isAgentLed: false
                livenessMethod: 1
                livenessStatus: 1
                livenessVerified: true
                personalDetails:
                  address:
                    addressLine1: Flat 30
                    addressLine2: Richmond Court, St. Peters Street
                    addressLine3: null
                    city: Cardiff
                    country: United Kingdom
                    county: null
                    postcode: CF24 3AZ
                  dateOfBirth: 1978-11-09T00:00:00
                  forename: Alan William
                  surname: Harper
                phoneNumber: "+4471234567890"
                proofOfOwnershipCheck:
                  checkStatus: 1
                  hasBeenOverridden: false
                  matchResult: 1
                  matchResultText: Full Name Match
                  propertyOwnership: 2
                  propertyOwnershipText: Joint Ownership
                  titleNumber: TMP123456
                referenceId: MyRef123
                regCode: QX92TAG7
                regTypeId: 12345678-1234-1234-1234-1234567890ab
                rightToWorkDocumentsProvided: 1
                status: 2
                surname: Harper
          schema:
            items:
              $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSummary"
            type: array
            uniqueItems: false
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the RegCode was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Finds registrations by the ReferenceId.
      tags:
        - Registrations
  "/api/registrations/regcode/{regCode}/summary":
    get:
      consumes: []
      operationId: GetRegistrationSummaryByRegCode
      parameters:
        - description: RegCode - short unique identifier.
          in: path
          name: regCode
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration summary object.
          examples:
            application/json:
              bankAccountChecks:
                - accountNumber: "12345678"
                  accountNumberValidation: 2
                  accountNumberValidationText: Valid
                  accountStatus: 2
                  accountStatusText: Live
                  accountValid: true
                  addressValidation: 2
                  addressValidationText: Current address
                  checkDate: 2019-08-01T12:15:22
                  checkId: 12345678-1234-5678-abcd-1234567890ab
                  checkStatus: 1
                  error: false
                  hasBeenOverridden: false
                  nameValidation: 2
                  nameValidationText: Valid
                  referenceId: RF1234
                  sortcode: "123456"
                  sortcodeValidation: 2
                  sortcodeValidationText: Valid
              creditStatusCheck:
                ccj:
                  - address1: Flat 30
                    address2: Richmond Court, St. Peters Street
                    address3: null
                    address4: null
                    address5: null
                    amount: £5000.00
                    caseNumber: CS1113-56-33
                    courtName: CARMARTHEN COUNTY COURT
                    dateEnd: 2017-11-09T00:00:00
                    dob: 1988-12-04T00:00:00
                    judgementDate: 2017-11-09T00:00:00
                    judgementType: 2
                    judgementTypeText: Satisfaction
                    name: ANGELA ZOE SPECIMEN
                    postcode: CF24 3AZ
                checkDate: 2019-08-01T12:33:11
                companyDirector:
                  - companyAppointments:
                      - address: FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                        appointmentDate: 2015-06-11T00:00:00
                        appointmentType: Current Director
                        dob: 1988-12-04T00:00:00
                        name: Angela Zoe Specimen
                        nationality: British
                        occupation: Field Agent
                        title: Ms
                    companyName: ANGELS LIMITED
                    companyRegNo: "00123456"
                    dateAppointed: 2015-06-11T00:00:00
                    matchType: 3
                    matchTypeText: Name, Address and Date of Birth
                    registeredOffice: FLAT 3, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                hasBeenOverridden: false
                insolvency:
                  - address:
                      address1: Flat 30
                      address2: Richmond Court
                      address3: St Peters Street
                      address4: null
                      address5: null
                      dps: DPS1
                      isEmpty: false
                      postcode: CF24 3AZ
                    aliases: ANGEL UK
                    assetTotal: £2000.00
                    caseNo: IC123456789-22232
                    caseType: Standard
                    court: CARMARTHEN COUNTY COURT
                    debtTotal: £20000.00
                    description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                    dob: 1988-12-04T00:00:00
                    name: ANGELA SPECIMEN
                    occupation: Field Agent
                    presentationDate: 2018-01-15T00:00:00
                    previousAddress: null
                    serviceOffice: MR JON WILLIAM JONES
                    startDate: 2017-12-01T00:00:00
                    status: CURRENT
                    telephoneNumber: "02920113244"
                    tradingNames: ANGELS LTD
                    type: 4
                    typeText: England and Wales DRO
                status: 3
              customTermsAccepted: false
              customTermsAcceptedDateTime: null
              customTermsAcceptedVersion: null
              dataCheckResult: 1
              dataCheckSources:
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: false
                  label: Mortality
                  pepSanctionsData: null
                  remarks:
                    - category: 1
                      description: Halo source indicates this person is not deceased at address 1
                    - category: 4
                      description: No middle initial specified by user
                  sourceType: 3
                  status: 1
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: false
                  label: Address and DOB
                  pepSanctionsData: null
                  remarks:
                    - category: 1
                      description: "(Electoral Register) Address #1 details are valid"
                    - category: 2
                      description: "(Electoral Register) Surname details not matched address #1"
                  sourceType: 4
                  status: 2
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: true
                  label: International Sanctions
                  pepSanctionsData:
                    - addresses:
                        - lines:
                            - 44 Lowbridge Street
                            - Pasadena
                            - California
                            - USA
                      aliases: null
                      fullName: Alan Stuart Harper
                      id: null
                      positions:
                        - country: USA
                          position: Head of local gov
                      sanctionBodies: null
                      sanctionDates:
                        - date: 1937-04-03T12:00:00Z
                          day: 3
                          month: 4
                          type: 1
                          year: 1937
                  remarks:
                    - category: 1
                      description: Full name has not been matched.
                  sourceType: 7
                  status: 1
              dataChecksPerformed: true
              dateCreated: 2018-02-23T12:54:31.611
              email: alan.harper@email.com
              forename: Alan
              id: abcdef12-abcd-abcd-beef-ab123cd12345
              idDocuments:
                - addressCity: null
                  addressFull: null
                  addressPostcode: null
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T17:22:11.044
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Passport
                  documentAnalysisResult: 1
                  documentNumber: "123456789"
                  documentSide: 1
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: true
                  forename: Alan
                  fullName: Alan Harper
                  id: fedcba89-dead-1278-bead-8901234abcde
                  isUnderReview: false
                  manuallyVerified: false
                  middleName: William
                  mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                  mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                  mrz3: null
                  nameCheck: true
                  nameCheckMethod: 0
                  nfcCheck: true
                  nfcReadStatus: 1
                  primaryScanId: null
                  status: 1
                  surname: Harper
                - addressCity: London
                  addressFull: 10 Downing St, Westminster, London, SW1A2AA
                  addressPostcode: SW1A2AA
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T19:24:50.875
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Driving Licence
                  documentAnalysisResult: 2
                  documentNumber: HARPER765453P99RT
                  documentSide: 1
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: false
                  forename: Alan
                  fullName: Alan William Harper
                  id: fedcba89-dead-1278-bead-8901234abcde
                  isUnderReview: false
                  manuallyVerified: true
                  middleName: William
                  mrz1: null
                  mrz2: null
                  mrz3: null
                  nameCheck: true
                  nameCheckMethod: 0
                  nfcCheck: false
                  nfcReadStatus: 8
                  primaryScanId: null
                  status: 2
                  surname: Harper
                - addressCity: null
                  addressFull: null
                  addressPostcode: null
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T19:24:51.112
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Driving Licence
                  documentAnalysisResult: 2
                  documentNumber: HARPER765453P99RT
                  documentSide: 2
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: false
                  forename: Alan
                  fullName: Alan William Harper
                  id: fedcba89-dead-1278-bead-8901234abcff
                  isUnderReview: false
                  manuallyVerified: false
                  middleName: William
                  mrz1: null
                  mrz2: null
                  mrz3: null
                  nameCheck: false
                  nameCheckMethod: 0
                  nfcCheck: false
                  nfcReadStatus: 8
                  primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                  status: 2
                  surname: Harper
              idVerification: null
              isAgentLed: false
              livenessMethod: 1
              livenessStatus: 1
              livenessVerified: true
              personalDetails:
                address:
                  addressLine1: Flat 30
                  addressLine2: Richmond Court, St. Peters Street
                  addressLine3: null
                  city: Cardiff
                  country: United Kingdom
                  county: null
                  postcode: CF24 3AZ
                dateOfBirth: 1978-11-09T00:00:00
                forename: Alan William
                surname: Harper
              phoneNumber: "+4471234567890"
              proofOfOwnershipCheck:
                checkStatus: 1
                hasBeenOverridden: false
                matchResult: 1
                matchResultText: Full Name Match
                propertyOwnership: 2
                propertyOwnershipText: Joint Ownership
                titleNumber: TMP123456
              referenceId: MyRef123
              regCode: QX92TAG7
              regTypeId: 12345678-1234-1234-1234-1234567890ab
              rightToWorkDocumentsProvided: 1
              status: 2
              surname: Harper
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSummary"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the RegCode was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Finds a registration by the RegCode.
      tags:
        - Registrations
  /api/registrations/search:
    get:
      consumes: []
      operationId: GetRegistrationSearch
      parameters:
        - default: 0
          description: Zero-based page number to retrieve.
          format: int32
          in: query
          name: pageNum
          required: false
          type: integer
        - default: 50
          description: Number of records to return on each request (Maximum value is 50).
          format: int32
          in: query
          name: pageSize
          required: false
          type: integer
        - description: Search by forename.
          in: query
          name: forename
          required: false
          type: string
        - description: Search by surname.
          in: query
          name: surname
          required: false
          type: string
        - description: Search by user email.
          in: query
          name: email
          required: false
          type: string
        - description: Date of birth in (yyyy-MM-dd) format
          in: query
          name: dob
          required: false
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration summary object list.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.PagedRegistrationSummary"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: "Gets paged registration list by search criteria or nothing if there are no matching fields.\r

        Optional parameters may be appended to the query string.\r

        Maximum page size is 50."
      tags:
        - Registrations
  "/api/registrations/{id}/check-submitted-id-documents":
    get:
      consumes: []
      operationId: CheckSubmittedIdDocuments
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: OK response with object containing the result of the document check.
          examples:
            application/json:
              checkCode: 3
              message: Please provide proof of address.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Checks if submitted documents are sufficient to complete registration.
      tags:
        - Registrations
  "/api/registrations/{id}/contact-details":
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: UpdateContactDetails
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: Object containing contact details.
          in: body
          name: details
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.UpdateContactDetailsRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration contact details updated.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Updates a registration's contact details.
      tags:
        - Registrations
  "/api/registrations/{id}/override-check-status":
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: OverrideCheckStatus
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: Request data.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Status of the operation.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Sets an override for a specific check on the registration.
      tags:
        - Registrations
  "/api/registrations/{id}/pdf-export":
    get:
      consumes: []
      operationId: GetRegistrationPdfExport
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: PDF document containing registration extract as byte stream.
          examples:
            application/json: ZGVmZ2hp
          schema:
            format: byte
            type: string
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Returns PDF export for a given registration.
      tags:
        - Registrations
  "/api/registrations/{id}/resend-invitation":
    post:
      consumes: []
      operationId: ResendInvitation
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Invitation sent.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Resends any invitation for the specified registration.
      tags:
        - Registrations
  "/api/registrations/{id}/settings":
    get:
      consumes: []
      operationId: GetRegistrationSettings
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration settings updated.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Gets registration settings or nothing if there are no settings associated with the registration.
      tags:
        - Registrations
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: UpdateRegistrationSettings
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: Object containing registration settings.
          in: body
          name: settings
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSettings"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration settings updated.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Updates registration settings.
      tags:
        - Registrations
  "/api/registrations/{id}/status":
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      operationId: UpdateRegistrationStatus
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: Request object containing the details.
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Update was successful.
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If the registration was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Updates the status of the registration to one specified in the request.
      tags:
        - Registrations
  "/api/registrations/{id}/summary":
    get:
      consumes: []
      operationId: GetRegistrationSummary
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Registration summary object.
          examples:
            application/json:
              bankAccountChecks:
                - accountNumber: "12345678"
                  accountNumberValidation: 2
                  accountNumberValidationText: Valid
                  accountStatus: 2
                  accountStatusText: Live
                  accountValid: true
                  addressValidation: 2
                  addressValidationText: Current address
                  checkDate: 2019-08-01T12:15:22
                  checkId: 12345678-1234-5678-abcd-1234567890ab
                  checkStatus: 1
                  error: false
                  hasBeenOverridden: false
                  nameValidation: 2
                  nameValidationText: Valid
                  referenceId: RF1234
                  sortcode: "123456"
                  sortcodeValidation: 2
                  sortcodeValidationText: Valid
              creditStatusCheck:
                ccj:
                  - address1: Flat 30
                    address2: Richmond Court, St. Peters Street
                    address3: null
                    address4: null
                    address5: null
                    amount: £5000.00
                    caseNumber: CS1113-56-33
                    courtName: CARMARTHEN COUNTY COURT
                    dateEnd: 2017-11-09T00:00:00
                    dob: 1988-12-04T00:00:00
                    judgementDate: 2017-11-09T00:00:00
                    judgementType: 2
                    judgementTypeText: Satisfaction
                    name: ANGELA ZOE SPECIMEN
                    postcode: CF24 3AZ
                checkDate: 2019-08-01T12:33:11
                companyDirector:
                  - companyAppointments:
                      - address: FLAT 30, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                        appointmentDate: 2015-06-11T00:00:00
                        appointmentType: Current Director
                        dob: 1988-12-04T00:00:00
                        name: Angela Zoe Specimen
                        nationality: British
                        occupation: Field Agent
                        title: Ms
                    companyName: ANGELS LIMITED
                    companyRegNo: "00123456"
                    dateAppointed: 2015-06-11T00:00:00
                    matchType: 3
                    matchTypeText: Name, Address and Date of Birth
                    registeredOffice: FLAT 3, RICHMOND COURT, ST. PETERS STREET, CARDIFF, CF24 3AZ
                hasBeenOverridden: false
                insolvency:
                  - address:
                      address1: Flat 30
                      address2: Richmond Court
                      address3: St Peters Street
                      address4: null
                      address5: null
                      dps: DPS1
                      isEmpty: false
                      postcode: CF24 3AZ
                    aliases: ANGEL UK
                    assetTotal: £2000.00
                    caseNo: IC123456789-22232
                    caseType: Standard
                    court: CARMARTHEN COUNTY COURT
                    debtTotal: £20000.00
                    description: ANGELA ZOE SPECIMEN TRADING AS ANGELS LIMITED
                    dob: 1988-12-04T00:00:00
                    name: ANGELA SPECIMEN
                    occupation: Field Agent
                    presentationDate: 2018-01-15T00:00:00
                    previousAddress: null
                    serviceOffice: MR JON WILLIAM JONES
                    startDate: 2017-12-01T00:00:00
                    status: CURRENT
                    telephoneNumber: "02920113244"
                    tradingNames: ANGELS LTD
                    type: 4
                    typeText: England and Wales DRO
                status: 3
              customTermsAccepted: false
              customTermsAcceptedDateTime: null
              customTermsAcceptedVersion: null
              dataCheckResult: 1
              dataCheckSources:
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: false
                  label: Mortality
                  pepSanctionsData: null
                  remarks:
                    - category: 1
                      description: Halo source indicates this person is not deceased at address 1
                    - category: 4
                      description: No middle initial specified by user
                  sourceType: 3
                  status: 1
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: false
                  label: Address and DOB
                  pepSanctionsData: null
                  remarks:
                    - category: 1
                      description: "(Electoral Register) Address #1 details are valid"
                    - category: 2
                      description: "(Electoral Register) Surname details not matched address #1"
                  sourceType: 4
                  status: 2
                - dateCreated: 2018-02-23T12:54:32.017
                  hasBeenOverridden: false
                  hasPepSanctionsData: true
                  label: International Sanctions
                  pepSanctionsData:
                    - addresses:
                        - lines:
                            - 44 Lowbridge Street
                            - Pasadena
                            - California
                            - USA
                      aliases: null
                      fullName: Alan Stuart Harper
                      id: null
                      positions:
                        - country: USA
                          position: Head of local gov
                      sanctionBodies: null
                      sanctionDates:
                        - date: 1937-04-03T12:00:00Z
                          day: 3
                          month: 4
                          type: 1
                          year: 1937
                  remarks:
                    - category: 1
                      description: Full name has not been matched.
                  sourceType: 7
                  status: 1
              dataChecksPerformed: true
              dateCreated: 2018-02-23T12:54:31.611
              email: alan.harper@email.com
              forename: Alan
              id: abcdef12-abcd-abcd-beef-ab123cd12345
              idDocuments:
                - addressCity: null
                  addressFull: null
                  addressPostcode: null
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T17:22:11.044
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Passport
                  documentAnalysisResult: 1
                  documentNumber: "123456789"
                  documentSide: 1
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: true
                  forename: Alan
                  fullName: Alan Harper
                  id: fedcba89-dead-1278-bead-8901234abcde
                  isUnderReview: false
                  manuallyVerified: false
                  middleName: William
                  mrz1: P<GBRHARPER<<ALAN<WILLIAM<<<<<<<<<<<<<<<<<<<
                  mrz2: 1234567897GBR6811233M2504214<<<<<<<<<<<<<<06
                  mrz3: null
                  nameCheck: true
                  nameCheckMethod: 0
                  nfcCheck: true
                  nfcReadStatus: 1
                  primaryScanId: null
                  status: 1
                  surname: Harper
                - addressCity: London
                  addressFull: 10 Downing St, Westminster, London, SW1A2AA
                  addressPostcode: SW1A2AA
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T19:24:50.875
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Driving Licence
                  documentAnalysisResult: 2
                  documentNumber: HARPER765453P99RT
                  documentSide: 1
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: false
                  forename: Alan
                  fullName: Alan William Harper
                  id: fedcba89-dead-1278-bead-8901234abcde
                  isUnderReview: false
                  manuallyVerified: true
                  middleName: William
                  mrz1: null
                  mrz2: null
                  mrz3: null
                  nameCheck: true
                  nameCheckMethod: 0
                  nfcCheck: false
                  nfcReadStatus: 8
                  primaryScanId: null
                  status: 2
                  surname: Harper
                - addressCity: null
                  addressFull: null
                  addressPostcode: null
                  country: United Kingdom
                  countryCode: GBR
                  dateCreated: 2018-02-23T19:24:51.112
                  dateOfBirth: 1968-11-23T00:00:00
                  description: Driving Licence
                  documentAnalysisResult: 2
                  documentNumber: HARPER765453P99RT
                  documentSide: 2
                  expiryDate: 2025-04-21T00:00:00
                  facialMatch: false
                  forename: Alan
                  fullName: Alan William Harper
                  id: fedcba89-dead-1278-bead-8901234abcff
                  isUnderReview: false
                  manuallyVerified: false
                  middleName: William
                  mrz1: null
                  mrz2: null
                  mrz3: null
                  nameCheck: false
                  nameCheckMethod: 0
                  nfcCheck: false
                  nfcReadStatus: 8
                  primaryScanId: fedcba89-dead-1278-bead-8901234abcde
                  status: 2
                  surname: Harper
              idVerification: null
              isAgentLed: false
              livenessMethod: 1
              livenessStatus: 1
              livenessVerified: true
              personalDetails:
                address:
                  addressLine1: Flat 30
                  addressLine2: Richmond Court, St. Peters Street
                  addressLine3: null
                  city: Cardiff
                  country: United Kingdom
                  county: null
                  postcode: CF24 3AZ
                dateOfBirth: 1978-11-09T00:00:00
                forename: Alan William
                surname: Harper
              phoneNumber: "+4471234567890"
              proofOfOwnershipCheck:
                checkStatus: 1
                hasBeenOverridden: false
                matchResult: 1
                matchResultText: Full Name Match
                propertyOwnership: 2
                propertyOwnershipText: Joint Ownership
                titleNumber: TMP123456
              referenceId: MyRef123
              regCode: QX92TAG7
              regTypeId: 12345678-1234-1234-1234-1234567890ab
              rightToWorkDocumentsProvided: 1
              status: 2
              surname: Harper
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSummary"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Finds a registration by the Id.
      tags:
        - Registrations
  "/api/registrations/{id}/supported-id-documents":
    get:
      consumes: []
      operationId: GetRegistrationSupportedIdDocuments
      parameters:
        - description: Id of the registration.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: List of supported id document objects.
          examples:
            application/json:
              - name: Passport
                type: 1
              - name: Driving Licence
                type: 2
              - name: National ID Card
                type: 3
              - name: CSCS Card
                type: 4
              - name: Residence Permit
                type: 5
              - name: Visa
                type: 6
          schema:
            $ref: "#/definitions/Credas.Api.Models.Registrations.SupportedIdDocument"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "403":
          description: If requesting entity have no permission to access the resource.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "404":
          description: If registration matching the Id was not found.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Get a list of supported id document for the specified registration id.
      tags:
        - Registrations
  /api/report-view/by-referenceid:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      description: "It may return none, one or many (up to 20) matching results.\r

        Each result contains a secure url; UTC date/time of when the link expires; name details of a person associated with the registration."
      operationId: GetReportViewByReferenceId
      parameters:
        - description: Request object
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Results of the query
          examples:
            application/json:
              results:
                - forename: Edward
                  surname: Roberts
                  url: https://report.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                  validUntil: 2021-08-23T09:55:18.2073822Z
          schema:
            $ref: "#/definitions/Credas.Api.Models.ReportView.GetReportViewResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieves secure links to registration details pages searching by the Reference Id.
      tags:
        - ReportView
  /api/report-view/by-registrationid:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      description: "It may return none or one matching result.\r

        Each result contains a secure url; UTC date/time of when the link expires; name details of a person associated with the registration."
      operationId: GetReportViewByRegistrationId
      parameters:
        - description: Request object
          in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Results of the query
          examples:
            application/json:
              results:
                - forename: Mike
                  surname: Jones
                  url: https://report.credas.co.uk/link/66ddf7c2-d3b1-4db3-ac13-2ef44d99da74
                  validUntil: 2021-08-23T09:55:18.2083872Z
          schema:
            $ref: "#/definitions/Credas.Api.Models.ReportView.GetReportViewResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieves secure link to registration details page searching by the Registration Id.
      tags:
        - ReportView
  /api/web-verifications/by-referenceid:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      description: "It may return none, one or many (up to 20) matching results.\r

        Each result contains a secure url; UTC date/time of when the link expires; name details of a person associated with the registration."
      operationId: GetWebVerificationsByReferenceId
      parameters:
        - in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Results of the query
          examples:
            application/json:
              results:
                - journeyUrl:
                    url: https://pi-verify.credas.co.uk/link/f7ec8ac1-d935-413b-9100-c7b9b498ca1d
                    validUntil: 2021-08-23T09:55:18.209641Z
          schema:
            $ref: "#/definitions/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieves secure links to web verification pages searching by the Reference Id.
      tags:
        - WebVerifications
  /api/web-verifications/by-registrationid:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
        - application/*+json
        - application/xml
        - text/xml
        - application/*+xml
      description: "It may return none or one matching result.\r

        Each result contains a secure url; UTC date/time of when the link expires; name details of a person associated with the registration."
      operationId: GetWebVerificationsByRegistrationId
      parameters:
        - in: body
          name: request
          required: false
          schema:
            $ref: "#/definitions/Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest"
        - description: ApiKey supplied.
          in: header
          name: apikey
          required: true
          type: string
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        "200":
          description: Results of the query
          examples:
            application/json:
              results:
                - journeyUrl:
                    url: https://verify.credas.co.uk/link/66ddf7c2-d3b1-4db3-ac13-2ef44d99da74
                    validUntil: 2021-08-23T09:55:18.2106663Z
          schema:
            $ref: "#/definitions/Credas.Api.Models.WebVerifications.GetWebVerificationsResponse"
        "400":
          description: If the service was supplied invalid data.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "401":
          description: If credentials supplied were invalid.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
        "500":
          description: If an unexpected exception occurred whilst processing the request.
          schema:
            $ref: "#/definitions/Credas.Api.Models.Errors.ErrorResponse"
      summary: Retrieves secure link to web verification page searching by the Registration Id.
      tags:
        - WebVerifications
definitions:
  Credas.Api.Models.BankAccounts.AccountDetails:
    properties:
      accountNumber:
        type: string
      sortcode:
        type: string
    required:
      - sortcode
      - accountNumber
    type: object
  Credas.Api.Models.BankAccounts.AccountVerificationRequest:
    example:
      accountDetails:
        accountNumber: "12345678"
        sortcode: "123456"
      address:
        addressLine1: 10 Downing St
        addressLine2: Westminster
        addressLine3: null
        city: London
        country: United Kingdom
        county: null
        postcode: SW1A2AA
      person:
        forename: Angela
        middleName: null
        surname: UK Specimen
      regEntryId: 141dbb24-c4ff-4658-9556-15ea25428d48
    properties:
      accountDetails:
        $ref: "#/definitions/Credas.Api.Models.BankAccounts.AccountDetails"
      address:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Address"
      person:
        $ref: "#/definitions/Credas.Api.Models.BankAccounts.Person"
      regEntryId:
        format: uuid
        type: string
    required:
      - address
      - person
      - accountDetails
      - regEntryId
    type: object
  Credas.Api.Models.BankAccounts.AccountVerificationResponse:
    properties:
      accountNumber:
        type: string
      accountNumberValidation:
        description: Unknown = 0, NoMatch = 1, Valid = 2, Invalid = 3, SevenDigitsMatched = 4, SixDigitsMatched = 5
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        format: int32
        type: integer
      accountNumberValidationText:
        readOnly: true
        type: string
      accountStatus:
        description: Unknown = 0, NoMatch = 1, Live = 2, ClosedOrSettled = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      accountStatusText:
        readOnly: true
        type: string
      accountValid:
        type: boolean
      addressValidation:
        description: Unknown = 0, NoMatch = 1, CurrentAddress = 2, PreviousAddress = 3, ForwardingAddress = 4
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      addressValidationText:
        readOnly: true
        type: string
      checkDate:
        format: date-time
        type: string
      checkId:
        format: uuid
        type: string
      checkStatus:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      error:
        type: boolean
      hasBeenOverridden:
        type: boolean
      nameValidation:
        description: Unknown = 0, NoMatch = 1, Valid = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      nameValidationText:
        readOnly: true
        type: string
      referenceId:
        type: string
      sortcode:
        type: string
      sortcodeValidation:
        description: Unknown = 0, NoMatch = 1, Valid = 2, Invalid = 3, FiveDigitsMatched = 4
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      sortcodeValidationText:
        readOnly: true
        type: string
    type: object
  Credas.Api.Models.BankAccounts.Person:
    properties:
      forename:
        type: string
      middleName:
        type: string
      surname:
        type: string
    required:
      - forename
      - surname
    type: object
  Credas.Api.Models.Companies.CompanyDetail:
    properties:
      addressLine1:
        type: string
      companyName:
        type: string
      companyNumber:
        type: string
      dateOfRegistration:
        format: date-time
        type: string
      duplicate:
        type: boolean
      id:
        format: uuid
        type: string
      locality:
        type: string
      postCode:
        type: string
      region:
        type: string
      significantParentCompanies:
        items:
          $ref: "#/definitions/Credas.Api.Models.Companies.CompanyDetail"
        type: array
        uniqueItems: false
      significantPeople:
        items:
          $ref: "#/definitions/Credas.Api.Models.Companies.SignificantPerson"
        type: array
        uniqueItems: false
    type: object
  Credas.Api.Models.Companies.SignificantPerson:
    properties:
      forename:
        type: string
      id:
        format: uuid
        type: string
      regEntryId:
        format: uuid
        type: string
      surname:
        type: string
    type: object
  Credas.Api.Models.DataCheck.AddDataCheckRequest:
    example:
      checkType: 2
      currentAddress:
        addressLine1: 25 Westgate Street
        addressLine2: ""
        addressLine3: ""
        city: Cardiff
        country: United Kingdom
        county: Cardiff
        postcode: CF101NS
      person:
        dateOfBirth: 1988-12-04T00:00:00
        forename: Angela
        middleName: null
        surname: UK Specimen
      regEntryId: 141dbb24-c4ff-4658-9556-15ea25428d48
    properties:
      checkType:
        description: The value of checkType dictates what checks are performed. <br/>The StandardAml check (value = 1) will check DOB & Mortality. <br/>The InternationalPepSanctions check (value = 3) will check just International PEP & Sanctions. <br/>The EnhancedAml check (value = 2) will perform both these checks and is equivalent to making two calls with values of 1 then 3 and will be charged accordingly. <br />  values=> None = 0, StandardAml = 1, EnhancedAml = 2, InternationalPepSanctions = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      currentAddress:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Address"
      person:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Person"
      regEntryId:
        format: uuid
        type: string
    required:
      - regEntryId
      - checkType
      - person
      - currentAddress
    type: object
  Credas.Api.Models.DataCheck.AddDataCheckResponse:
    properties:
      id:
        format: uuid
        type: string
      regCode:
        type: string
    required:
      - id
      - regCode
    type: object
  Credas.Api.Models.DataCheck.Address:
    properties:
      addressLine1:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      addressLine2:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      addressLine3:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      city:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      country:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      county:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      postcode:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
    required:
      - addressLine1
      - city
      - postcode
      - country
    type: object
  Credas.Api.Models.DataCheck.CheckRemark:
    properties:
      category:
        description: Match = 1, Mismatch = 2, Warning = 3, Comment = 4
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      description:
        type: string
    type: object
  Credas.Api.Models.DataCheck.PepSanctions.PepSanctionItem:
    properties:
      addresses:
        items:
          $ref: "#/definitions/Credas.Api.Models.DataCheck.PepSanctions.SanctionAddress"
        type: array
        uniqueItems: false
      aliases:
        items:
          type: string
        type: array
        uniqueItems: false
      fullName:
        type: string
      id:
        type: string
      positions:
        items:
          $ref: "#/definitions/Credas.Api.Models.DataCheck.PepSanctions.SanctionPosition"
        type: array
        uniqueItems: false
      sanctionBodies:
        items:
          type: string
        type: array
        uniqueItems: false
      sanctionDates:
        items:
          $ref: "#/definitions/Credas.Api.Models.DataCheck.PepSanctions.SanctionDate"
        type: array
        uniqueItems: false
    type: object
  Credas.Api.Models.DataCheck.PepSanctions.SanctionAddress:
    properties:
      lines:
        items:
          type: string
        type: array
        uniqueItems: false
    type: object
  Credas.Api.Models.DataCheck.PepSanctions.SanctionDate:
    properties:
      date:
        format: date-time
        readOnly: true
        type: string
      day:
        format: int32
        type: integer
      month:
        format: int32
        type: integer
      type:
        description: Unknown = 0, Birth = 1, Death = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      year:
        format: int32
        type: integer
    type: object
  Credas.Api.Models.DataCheck.PepSanctions.SanctionPosition:
    properties:
      country:
        type: string
      position:
        type: string
    type: object
  Credas.Api.Models.DataCheck.Person:
    properties:
      dateOfBirth:
        format: date-time
        type: string
      forename:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      middleName:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
      surname:
        pattern: ^([A-Za-z0-9 '\.,&\(\)\/-]*)$
        type: string
    required:
      - forename
      - surname
      - dateOfBirth
    type: object
  Credas.Api.Models.Errors.ErrorResponse:
    properties:
      details:
        type: object
      message:
        type: string
    type: object
  Credas.Api.Models.Images.AddIdDocumentImageRequest:
    example:
      documentParameters: null
      documentType: 1
      imageData: Base64EncodedJpegImage
      registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
    properties:
      documentParameters:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.KeyValueItem"
        type: array
        uniqueItems: false
      documentType:
        description: Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
        format: int32
        type: integer
      imageData:
        type: string
      registrationId:
        format: uuid
        type: string
    required:
      - documentType
      - registrationId
      - imageData
    type: object
  Credas.Api.Models.Images.AddIdDocumentImageResponse:
    properties:
      documentStatus:
        description: Active = 1, Deleted = 2, UnderReview = 3
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
      documentType:
        description: Unknown = 0, Passport = 1, DrivingLicense = 2, IdentificationCard = 3, TaxLetter = 4, NIC_Letter = 5, TV_Licence = 6, UtilityBill = 7, HighRiskWorkLicence = 8, TravelPermit = 9, BankLetter = 10, BenefitLetter = 11, BankStatement = 12, NINO_Letter = 13, CouncilTax = 14, ResidentPermit = 15, PhotoCard = 16, RepaymentLetter = 17, Invoice = 18, Visa = 19, AgeIdentificationCard = 20, MedicareCard = 21, MilitaryIdentificationCard = 22, UtilityLetter = 23, CouncilDocument = 24, JobLicence = 25, MembershipIDCard = 26, MilitaryIDCard = 27, ProofOfAgeCard = 28, TravelPermitNew = 29, WeaponsLicence = 30, AccountStatement = 41, TenancyAgreement = 42, BankDocument = 43, BankLetterNew = 44, BankStatementNew = 45, BenefitLetterNew = 46, CouncilDocumentNew = 48, CouncilLetter = 49, CouncilTaxNew = 50, DWPDocument = 51, HMRCDocument = 52, InformationSheet = 53, InsuranceDocument = 54, InsuranceLetter = 55, InvoiceNew = 56, NICLetter = 57, NINOLetter = 58, OfficialDocument = 59, OfficialLetter = 60, RepaymentLetterNew = 61, TaxLetterNew = 62, TaxStatement = 63, TelBill = 64, TelLetter = 65, TelecommunicationDocument = 66, TVLicence = 67, UniversityLetter = 68, UtilityBillNew = 69, UtilityDocument = 70, UtilityLetterNew = 71, WaterBill = 72, WaterDocument = 73, HighRiskWorkLicenceNew = 74, PhotoCardNew = 75, MedicareCardNew = 76, Certificate = 77
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
        format: int32
        type: integer
      facialMatch:
        type: boolean
      id:
        format: uuid
        type: string
      regCode:
        type: string
    required:
      - documentType
      - documentStatus
      - facialMatch
      - id
      - regCode
    type: object
  Credas.Api.Models.Images.AddLivenessImageRequest:
    example:
      imageData: Base64EncodedJpegImage
      registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
    properties:
      imageData:
        type: string
      registrationId:
        format: uuid
        type: string
    required:
      - registrationId
      - imageData
    type: object
  Credas.Api.Models.Images.AddSelfieImageRequest:
    example:
      imageData: Base64EncodedJpegImage
      registrationId: 141dbb24-c4ff-4658-9556-15ea25428d48
    properties:
      imageData:
        type: string
      registrationId:
        format: uuid
        type: string
    required:
      - registrationId
      - imageData
    type: object
  Credas.Api.Models.Images.AddSelfieImageResponse:
    properties:
      livenessConfirmed:
        type: boolean
    required:
      - livenessConfirmed
    type: object
  Credas.Api.Models.Images.GetIdDocumentImageResponse:
    properties:
      addressCity:
        type: string
      addressFull:
        type: string
      addressPostcode:
        type: string
      country:
        type: string
      countryCode:
        type: string
      dateCreated:
        format: date-time
        type: string
      dateOfBirth:
        format: date-time
        type: string
      description:
        type: string
      documentAnalysisResult:
        description: Unknown = 0, Passed = 1, Refer = 2, Expired = 3, NotSupported = 4, Undefined = 5, Fail = 10, NotPerformed = 11
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 10
          - 11
        format: int32
        type: integer
      documentNumber:
        type: string
      documentSide:
        description: Front = 1, Back = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      expiryDate:
        format: date-time
        type: string
      facialMatch:
        type: boolean
      forename:
        type: string
      fullName:
        type: string
      hiResUrl:
        type: string
      id:
        format: uuid
        type: string
      isUnderReview:
        type: boolean
      manuallyVerified:
        type: boolean
      middleName:
        type: string
      mrz1:
        type: string
      mrz2:
        type: string
      mrz3:
        type: string
      nameCheck:
        type: boolean
      nameCheckMethod:
        description: Unknown = 0, Automatic = 1, Manual = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      nfcCheck:
        type: boolean
      nfcFacialUrl:
        type: string
      nfcReadStatus:
        description: Unknown = 0, Passed = 1, Failed = 2, NotAttempted = 3, Skipped = 4, Unavailable = 5, NotAllowed = 6, NotTrusted = 7, NotApplicable = 8, Expired = 9
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
        format: int32
        type: integer
      primaryScanId:
        format: uuid
        type: string
      status:
        description: Indicates the verification status of the document itself by combining visual analysis and NFC verification results. </br>Note that this may be a pass even if facial or name matches have failed.<br />  values=> Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      surname:
        type: string
      url:
        type: string
    required:
      - url
      - hiResUrl
      - id
      - dateCreated
      - description
      - status
      - facialMatch
      - nameCheck
      - nameCheckMethod
      - nfcCheck
      - nfcReadStatus
    type: object
  Credas.Api.Models.Images.GetLivenessImageResponse:
    properties:
      description:
        type: string
      id:
        format: uuid
        type: string
      url:
        type: string
    type: object
  Credas.Api.Models.Images.GetLivenessPerformedImageResponse:
    properties:
      url:
        type: string
    type: object
  Credas.Api.Models.Images.GetSelfieImageResponse:
    properties:
      url:
        type: string
    type: object
  Credas.Api.Models.PropertyRegister.Address:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressLine3:
        type: string
      city:
        type: string
      country:
        type: string
      county:
        type: string
      postcode:
        type: string
    required:
      - addressLine1
      - city
      - postcode
      - country
    type: object
  Credas.Api.Models.PropertyRegister.Person:
    properties:
      forename:
        type: string
      middleName:
        type: string
      surname:
        type: string
    required:
      - forename
      - surname
    type: object
  Credas.Api.Models.PropertyRegister.PropertyRegisterCheckRequest:
    example:
      address:
        addressLine1: 25 Westgate Street
        addressLine2: null
        addressLine3: null
        city: Cardiff
        country: United Kingdom
        county: Cardiff
        postcode: CF101NS
      person:
        forename: Angela
        middleName: null
        surname: UK Specimen
      regEntryId: 12345678-1234-1234-1234-1234567890ab
    properties:
      address:
        $ref: "#/definitions/Credas.Api.Models.PropertyRegister.Address"
      person:
        $ref: "#/definitions/Credas.Api.Models.PropertyRegister.Person"
      regEntryId:
        format: uuid
        type: string
    required:
      - person
      - address
      - regEntryId
    type: object
  Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse:
    properties:
      checkStatus:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      hasBeenOverridden:
        type: boolean
      matchResult:
        description: Unknown = 0, FullNameMatch = 1, SurnameMatch = 2, NoNameMatch = 3, NoAddressMatch = 4, TitleNotRegistered = 5, Unavailable = 6, OutOfHours = 7
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        format: int32
        type: integer
      matchResultText:
        type: string
      propertyOwnership:
        description: Unknown = 0, SoleOwnership = 1, JointOwnership = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      propertyOwnershipText:
        type: string
      titleNumber:
        type: string
    type: object
  Credas.Api.Models.RegTypes.RegType:
    properties:
      id:
        format: uuid
        type: string
      name:
        type: string
    type: object
  Credas.Api.Models.Registrations.AddInstantRegistrationRequest:
    example:
      document: Base64EncodedJpegImage
      documentParameters: null
      documentType: 1
      forename: Alan
      parameters:
        - key: Param1
          value: Value 1
        - key: Param2
          value: "123456"
        - key: Param3
          value: "true"
      referenceId: MyRef123
      regTypeId: 12345678-1234-1234-1234-1234567890ab
      selfie: Base64EncodedJpegImage
      significantPersonId: null
      surname: Harper
    properties:
      document:
        type: string
      documentParameters:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.KeyValueItem"
        type: array
        uniqueItems: false
      documentType:
        description: Other = 0, Passport = 1, DrivingLicence = 2, Visa = 3, CscsCard = 4, HomeOfficeLetter = 5, BirthCertificate = 6, NationalIdCard = 7, ResidencePermit = 9, UtilityBill = 11
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 9
          - 10
          - 11
        format: int32
        type: integer
      forename:
        maxLength: 50
        minLength: 1
        type: string
      parameters:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.KeyValueItem"
        type: array
        uniqueItems: false
      referenceId:
        maxLength: 255
        minLength: 0
        type: string
      regTypeId:
        format: uuid
        type: string
      selfie:
        type: string
      significantPersonId:
        format: uuid
        type: string
      surname:
        maxLength: 50
        minLength: 1
        type: string
    required:
      - regTypeId
      - document
      - documentType
      - forename
      - surname
    type: object
  Credas.Api.Models.Registrations.AddInstantRegistrationResponse:
    properties:
      documentStatus:
        description: Active = 1, Deleted = 2, UnderReview = 3
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
      documentType:
        description: Unknown = 0, Passport = 1, DrivingLicense = 2, IdentificationCard = 3, TaxLetter = 4, NIC_Letter = 5, TV_Licence = 6, UtilityBill = 7, HighRiskWorkLicence = 8, TravelPermit = 9, BankLetter = 10, BenefitLetter = 11, BankStatement = 12, NINO_Letter = 13, CouncilTax = 14, ResidentPermit = 15, PhotoCard = 16, RepaymentLetter = 17, Invoice = 18, Visa = 19, AgeIdentificationCard = 20, MedicareCard = 21, MilitaryIdentificationCard = 22, UtilityLetter = 23, CouncilDocument = 24, JobLicence = 25, MembershipIDCard = 26, MilitaryIDCard = 27, ProofOfAgeCard = 28, TravelPermitNew = 29, WeaponsLicence = 30, AccountStatement = 41, TenancyAgreement = 42, BankDocument = 43, BankLetterNew = 44, BankStatementNew = 45, BenefitLetterNew = 46, CouncilDocumentNew = 48, CouncilLetter = 49, CouncilTaxNew = 50, DWPDocument = 51, HMRCDocument = 52, InformationSheet = 53, InsuranceDocument = 54, InsuranceLetter = 55, InvoiceNew = 56, NICLetter = 57, NINOLetter = 58, OfficialDocument = 59, OfficialLetter = 60, RepaymentLetterNew = 61, TaxLetterNew = 62, TaxStatement = 63, TelBill = 64, TelLetter = 65, TelecommunicationDocument = 66, TVLicence = 67, UniversityLetter = 68, UtilityBillNew = 69, UtilityDocument = 70, UtilityLetterNew = 71, WaterBill = 72, WaterDocument = 73, HighRiskWorkLicenceNew = 74, PhotoCardNew = 75, MedicareCardNew = 76, Certificate = 77
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 41
          - 42
          - 43
          - 44
          - 45
          - 46
          - 48
          - 49
          - 50
          - 51
          - 52
          - 53
          - 54
          - 55
          - 56
          - 57
          - 58
          - 59
          - 60
          - 61
          - 62
          - 63
          - 64
          - 65
          - 66
          - 67
          - 68
          - 69
          - 70
          - 71
          - 72
          - 73
          - 74
          - 75
          - 76
          - 77
        format: int32
        type: integer
      facialMatch:
        type: boolean
      id:
        format: uuid
        type: string
      regCode:
        type: string
    required:
      - documentType
      - documentStatus
      - facialMatch
      - id
      - regCode
    type: object
  Credas.Api.Models.Registrations.AddRegistrationRequest:
    example:
      diallingCode: "+44"
      duplicateAcknowledgement: false
      emailAddress: user@email.com
      forename: Alan
      parameters:
        - key: Param1
          value: Value 1
        - key: Param2
          value: "123456"
        - key: Param3
          value: "true"
      phoneNumber: "7123456789"
      provideWebJourneyLink: true
      referenceId: HID-12345-336-10
      regTypeId: 12345678-1234-1234-1234-1234567890ab
      returnUrls:
        returnUrl: https://www.example.com/registration-complete/123456
      sendEmail: true
      sendSms: false
      settings:
        capturePersonalDetails: true
        checkProfile: 2
        legislation: 3
        nameMatchRoutine: null
        requiredChecks: null
        skipEmailStep: true
      significantPersonId: null
      surname: Harper
    properties:
      diallingCode:
        maxLength: 10
        minLength: 1
        type: string
      duplicateAcknowledgement:
        type: boolean
      emailAddress:
        maxLength: 250
        minLength: 0
        type: string
      forename:
        maxLength: 50
        minLength: 1
        type: string
      parameters:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.KeyValueItem"
        type: array
        uniqueItems: false
      phoneNumber:
        maxLength: 20
        minLength: 1
        type: string
      provideWebJourneyLink:
        type: boolean
      referenceId:
        maxLength: 255
        minLength: 0
        type: string
      regTypeId:
        format: uuid
        type: string
      returnUrls:
        $ref: "#/definitions/Credas.Api.Models.Registrations.ReturnUrls"
      sendEmail:
        type: boolean
      sendSms:
        type: boolean
      settings:
        $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSettings"
      significantPersonId:
        format: uuid
        type: string
      surname:
        maxLength: 50
        minLength: 1
        type: string
    required:
      - forename
      - surname
      - regTypeId
      - sendSms
    type: object
  Credas.Api.Models.Registrations.AddRegistrationResponse:
    properties:
      id:
        format: uuid
        type: string
      regCode:
        type: string
      webJourneyUrl:
        $ref: "#/definitions/Credas.Api.Models.Registrations.JourneyUrl"
    required:
      - id
      - regCode
    type: object
  Credas.Api.Models.Registrations.CheckSubmittedIdDocumentsResponse:
    properties:
      checkCode:
        description: Ok = 1, MayContinue = 2, CannotContinue = 3
        enum:
          - 1
          - 2
          - 3
        format: int32
        type: integer
      message:
        type: string
    type: object
  Credas.Api.Models.Registrations.DataCheckSourceSummary:
    properties:
      dateCreated:
        format: date-time
        type: string
      hasBeenOverridden:
        type: boolean
      hasPepSanctionsData:
        readOnly: true
        type: boolean
      label:
        type: string
      pepSanctionsData:
        items:
          $ref: "#/definitions/Credas.Api.Models.DataCheck.PepSanctions.PepSanctionItem"
        type: array
        uniqueItems: false
      remarks:
        items:
          $ref: "#/definitions/Credas.Api.Models.DataCheck.CheckRemark"
        type: array
        uniqueItems: false
      sourceType:
        description: Unknown = 0, EditedElectoralRollUk = 1, LandlineAppendUk = 2, MortalityUk = 3, CreaditHeaderAmlUk = 4, NcoaAlertFlagUk = 5, NcoaAlertFullUk = 6, SanctionsEnhancedInternational = 7, PepEnhancedInternational = 8, NationalIdentityRegisterUk = 9, LandRegistry = 10
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
        format: int32
        type: integer
      status:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  Credas.Api.Models.Registrations.IdDocumentSummary:
    properties:
      addressCity:
        type: string
      addressFull:
        type: string
      addressPostcode:
        type: string
      country:
        type: string
      countryCode:
        type: string
      dateCreated:
        format: date-time
        type: string
      dateOfBirth:
        format: date-time
        type: string
      description:
        type: string
      documentAnalysisResult:
        description: Unknown = 0, Passed = 1, Refer = 2, Expired = 3, NotSupported = 4, Undefined = 5, Fail = 10, NotPerformed = 11
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 10
          - 11
        format: int32
        type: integer
      documentNumber:
        type: string
      documentSide:
        description: Front = 1, Back = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      expiryDate:
        format: date-time
        type: string
      facialMatch:
        type: boolean
      forename:
        type: string
      fullName:
        type: string
      id:
        format: uuid
        type: string
      isUnderReview:
        type: boolean
      manuallyVerified:
        type: boolean
      middleName:
        type: string
      mrz1:
        type: string
      mrz2:
        type: string
      mrz3:
        type: string
      nameCheck:
        type: boolean
      nameCheckMethod:
        description: Unknown = 0, Automatic = 1, Manual = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      nfcCheck:
        type: boolean
      nfcReadStatus:
        description: Unknown = 0, Passed = 1, Failed = 2, NotAttempted = 3, Skipped = 4, Unavailable = 5, NotAllowed = 6, NotTrusted = 7, NotApplicable = 8, Expired = 9
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
        format: int32
        type: integer
      primaryScanId:
        format: uuid
        type: string
      status:
        description: Indicates the verification status of the document itself by combining visual analysis and NFC verification results. </br>Note that this may be a pass even if facial or name matches have failed.<br />  values=> Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      surname:
        type: string
    required:
      - id
      - dateCreated
      - description
      - status
      - facialMatch
      - nameCheck
      - nameCheckMethod
      - nfcCheck
      - nfcReadStatus
    type: object
  Credas.Api.Models.Registrations.IdVerification:
    properties:
      checkStatus:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      hasBeenOverridden:
        type: boolean
    type: object
  Credas.Api.Models.Registrations.JourneyUrl:
    properties:
      url:
        type: string
      validUntil:
        format: date-time
        type: string
    type: object
  Credas.Api.Models.Registrations.KeyValueItem:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  Credas.Api.Models.Registrations.PagedRegistrationSummary:
    properties:
      registrationSummaries:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.RegistrationSummary"
        type: array
        uniqueItems: false
      totalCount:
        format: int32
        type: integer
    type: object
  Credas.Api.Models.Registrations.PersonalDetails:
    properties:
      address:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Address"
      dateOfBirth:
        format: date-time
        type: string
      forename:
        type: string
      surname:
        type: string
    type: object
  Credas.Api.Models.Registrations.RegistrationSettings:
    properties:
      capturePersonalDetails:
        type: boolean
      nameMatchRoutine:
        description: Fuzzy = 1, Strict = 2
        enum:
          - 1
          - 2
        format: int32
        type: integer
      requiredChecks:
        items:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          format: int32
          type: integer
        type: array
        uniqueItems: false
      skipEmailStep:
        type: boolean
    type: object
  Credas.Api.Models.Registrations.RegistrationSummary:
    properties:
      bankAccountChecks:
        items:
          $ref: "#/definitions/Credas.Api.Models.BankAccounts.AccountVerificationResponse"
        type: array
        uniqueItems: false
      creditStatusCheck:
        $ref: "#/definitions/Credas.Api.Models.StatusChecks.StatusCheck"
      customTermsAccepted:
        type: boolean
      customTermsAcceptedDateTime:
        format: date-time
        type: string
      customTermsAcceptedVersion:
        format: int32
        type: integer
      dataCheckResult:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      dataCheckSources:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.DataCheckSourceSummary"
        type: array
        uniqueItems: false
      dataChecksPerformed:
        type: boolean
      dateCreated:
        format: date-time
        type: string
      email:
        type: string
      forename:
        type: string
      id:
        format: uuid
        type: string
      idDocuments:
        items:
          $ref: "#/definitions/Credas.Api.Models.Registrations.IdDocumentSummary"
        type: array
        uniqueItems: false
      idVerification:
        $ref: "#/definitions/Credas.Api.Models.Registrations.IdVerification"
      isAgentLed:
        type: boolean
      livenessMethod:
        description: NotApplicable = 0, UniqueActionProcess = 1, Passive = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      livenessStatus:
        description: NotSubmitted = 0, Verified = 1, Unverified = 2, Unknown = 3, RetakeRequested = 4
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      livenessVerified:
        type: boolean
      personalDetails:
        $ref: "#/definitions/Credas.Api.Models.Registrations.PersonalDetails"
      phoneNumber:
        type: string
      proofOfOwnershipCheck:
        $ref: "#/definitions/Credas.Api.Models.PropertyRegister.PropertyRegisterCheckResponse"
      referenceId:
        maxLength: 255
        minLength: 0
        type: string
      regCode:
        type: string
      regTypeId:
        format: uuid
        type: string
      rightToWorkDocumentsProvided:
        description: Indicates whether sufficient right to work documents have been provided and validated. <br />This relies on the registration being submitted and the subject's liveness being confirmed. To check whether documents have been submitted, regardless of validation, please use the /api/registrations/{id}/check-submitted-id-documents endpoint.<br />  values=> Pending = 0, Pass = 1, Fail = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      status:
        description: Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
        format: int32
        type: integer
      surname:
        type: string
    required:
      - dateCreated
      - status
      - livenessVerified
      - livenessStatus
      - rightToWorkDocumentsProvided
      - dataChecksPerformed
      - dataCheckResult
      - forename
      - surname
      - regTypeId
      - id
      - regCode
    type: object
  Credas.Api.Models.Registrations.ReturnUrls:
    properties:
      returnUrl:
        type: string
    type: object
  Credas.Api.Models.Registrations.SupportedIdDocument:
    properties:
      name:
        type: string
      type:
        description: Passport = 1, DrivingLicence = 2, NationalIdCard = 3, CscsCard = 4, ResidencePermit = 5, Visa = 6, BirthCertificate = 7, HomeOfficeLetter = 8, Other = 9
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
        format: int32
        type: integer
    type: object
  Credas.Api.Models.Registrations.UpdateContactDetailsRequest:
    example:
      deliveryMethod: 1
      diallingCode: "+44"
      email: alan.harper@example.com
      forename: Alun
      phoneNumber: "07123456780"
      surname: Harpers
    properties:
      deliveryMethod:
        description: None = 0, Email = 1, Sms = 2
        enum:
          - 0
          - 1
          - 2
        format: int32
        type: integer
      diallingCode:
        maxLength: 10
        minLength: 1
        type: string
      email:
        maxLength: 250
        minLength: 0
        type: string
      forename:
        maxLength: 50
        minLength: 1
        type: string
      phoneNumber:
        maxLength: 20
        minLength: 1
        type: string
      surname:
        maxLength: 50
        minLength: 1
        type: string
    required:
      - forename
      - surname
    type: object
  Credas.Api.Models.Registrations.UpdateRegistrationStatusRequest:
    example:
      status: 2
    properties:
      status:
        description: Unknown = 0, Submitted = 1, Approved = 2, Rejected = 3, Exported = 4, Invited = 6
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
        format: int32
        type: integer
    required:
      - status
    type: object
  Credas.Api.Models.ReportView.GetReportViewByReferenceIdRequest:
    example:
      canChangeStatus: false
      canVerify: true
      referenceId: JD0387152001
      user: Emily Jones
    properties:
      canChangeStatus:
        type: boolean
      canVerify:
        type: boolean
      referenceId:
        maxLength: 255
        minLength: 0
        type: string
      user:
        maxLength: 200
        minLength: 0
        type: string
    required:
      - referenceId
    type: object
  Credas.Api.Models.ReportView.GetReportViewByRegistrationIdRequest:
    example:
      canChangeStatus: true
      canVerify: true
      registrationId: 4bf4db0a-1c0c-4acd-8e92-701f55163891
      user: Rob Starr
    properties:
      canChangeStatus:
        type: boolean
      canVerify:
        type: boolean
      registrationId:
        format: uuid
        type: string
      user:
        maxLength: 200
        minLength: 0
        type: string
    required:
      - registrationId
    type: object
  Credas.Api.Models.ReportView.GetReportViewResponse:
    properties:
      results:
        items:
          $ref: "#/definitions/Credas.Api.Models.ReportView.ReportViewItem"
        readOnly: true
        type: array
        uniqueItems: false
    type: object
  Credas.Api.Models.ReportView.ReportViewItem:
    properties:
      forename:
        type: string
      surname:
        type: string
      url:
        type: string
      validUntil:
        format: date-time
        type: string
    type: object
  Credas.Api.Models.StatusChecks.CCJ.CcjResult:
    properties:
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      address4:
        type: string
      address5:
        type: string
      amount:
        type: string
      caseNumber:
        type: string
      courtName:
        type: string
      dateEnd:
        format: date-time
        type: string
      dob:
        format: date-time
        type: string
      judgementDate:
        format: date-time
        type: string
      judgementType:
        description: Unknown = 0, Judgement = 1, Satisfaction = 2, Revocation = 3, SetAside = 4, AdministrationOrder = 5
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        format: int32
        type: integer
      judgementTypeText:
        readOnly: true
        type: string
      name:
        type: string
      postcode:
        type: string
    type: object
  Credas.Api.Models.StatusChecks.CompanyDirector.CompanyAppointment:
    properties:
      address:
        type: string
      appointmentDate:
        format: date-time
        type: string
      appointmentType:
        type: string
      dob:
        format: date-time
        type: string
      name:
        type: string
      nationality:
        type: string
      occupation:
        type: string
      title:
        type: string
    type: object
  Credas.Api.Models.StatusChecks.CompanyDirector.CompanyDirectorResult:
    properties:
      companyAppointments:
        items:
          $ref: "#/definitions/Credas.Api.Models.StatusChecks.CompanyDirector.CompanyAppointment"
        type: array
        uniqueItems: false
      companyName:
        type: string
      companyRegNo:
        type: string
      dateAppointed:
        format: date-time
        type: string
      matchType:
        description: Unknown = 0, NameAndDateOfBirth = 1, NameAndAddress = 2, NameAndAddressAndDateOfBirth = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
      matchTypeText:
        readOnly: true
        type: string
      registeredOffice:
        type: string
    type: object
  Credas.Api.Models.StatusChecks.Insolvency.Address:
    properties:
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      address4:
        type: string
      address5:
        type: string
      dps:
        type: string
      isEmpty:
        readOnly: true
        type: boolean
      postcode:
        type: string
    type: object
  Credas.Api.Models.StatusChecks.Insolvency.InsolvencyResult:
    properties:
      address:
        $ref: "#/definitions/Credas.Api.Models.StatusChecks.Insolvency.Address"
      aliases:
        type: string
      assetTotal:
        type: string
      caseNo:
        type: string
      caseType:
        type: string
      court:
        type: string
      debtTotal:
        type: string
      description:
        type: string
      dob:
        format: date-time
        type: string
      name:
        type: string
      occupation:
        type: string
      presentationDate:
        format: date-time
        type: string
      previousAddress:
        $ref: "#/definitions/Credas.Api.Models.StatusChecks.Insolvency.Address"
      serviceOffice:
        type: string
      startDate:
        format: date-time
        type: string
      status:
        type: string
      telephoneNumber:
        type: string
      tradingNames:
        type: string
      type:
        description: Unknown = 0, NorthernIrelandBankruptcy = 1, ScottishSequestrationBankruptcy = 2, EnglandAndWalesIVA = 3, EnglandAndWalesDRO = 4, EnglandAndWalesBankruptcy = 5
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        format: int32
        type: integer
      typeText:
        readOnly: true
        type: string
    type: object
  Credas.Api.Models.StatusChecks.StatusCheck:
    properties:
      ccj:
        items:
          $ref: "#/definitions/Credas.Api.Models.StatusChecks.CCJ.CcjResult"
        type: array
        uniqueItems: false
      checkDate:
        format: date-time
        type: string
      companyDirector:
        items:
          $ref: "#/definitions/Credas.Api.Models.StatusChecks.CompanyDirector.CompanyDirectorResult"
        type: array
        uniqueItems: false
      hasBeenOverridden:
        type: boolean
      insolvency:
        items:
          $ref: "#/definitions/Credas.Api.Models.StatusChecks.Insolvency.InsolvencyResult"
        type: array
        uniqueItems: false
      status:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
    type: object
  Credas.Api.Models.StatusChecks.StatusCheckRequest:
    properties:
      address:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Address"
      person:
        $ref: "#/definitions/Credas.Api.Models.DataCheck.Person"
      regEntryId:
        format: uuid
        type: string
    required:
      - regEntryId
      - person
      - address
    type: object
  Credas.Api.Models.StatusOverrides.OverrideCheckStatusRequest:
    example:
      checkType: 1
      comment: Documents look genuine.
      status: 1
    properties:
      checkType:
        description: IdDocuments = 1, StandardChecks = 2, InternationalSanctionsAndPep = 3, CreditStatusCheck = 4, BankAccountCheck = 5, ProofOfOwnership = 6
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        format: int32
        type: integer
      comment:
        type: string
      status:
        description: Unknown = 0, Pass = 1, Refer = 2, Fail = 3
        enum:
          - 0
          - 1
          - 2
          - 3
        format: int32
        type: integer
    required:
      - checkType
      - status
      - comment
    type: object
  Credas.Api.Models.WebVerifications.GetWebVerificationsByReferenceIdRequest:
    example:
      referenceId: JD0387152001
      returnUrls:
        returnUrl: https://www.company.co.uk/registration-completed
    properties:
      referenceId:
        maxLength: 255
        minLength: 0
        type: string
      returnUrls:
        $ref: "#/definitions/Credas.Api.Models.Registrations.ReturnUrls"
    required:
      - referenceId
    type: object
  Credas.Api.Models.WebVerifications.GetWebVerificationsByRegistrationIdRequest:
    example:
      registrationId: 4bf4db0a-1c0c-4acd-8e92-701f55163891
      returnUrls:
        returnUrl: https://www.company.co.uk/registration-completed
    properties:
      registrationId:
        format: uuid
        type: string
      returnUrls:
        $ref: "#/definitions/Credas.Api.Models.Registrations.ReturnUrls"
    required:
      - registrationId
    type: object
  Credas.Api.Models.WebVerifications.GetWebVerificationsResponse:
    properties:
      results:
        items:
          $ref: "#/definitions/Credas.Api.Models.WebVerifications.WebVerificationsItem"
        readOnly: true
        type: array
        uniqueItems: false
    type: object
  Credas.Api.Models.WebVerifications.WebVerificationsItem:
    properties:
      journeyUrl:
        $ref: "#/definitions/Credas.Api.Models.Registrations.JourneyUrl"
    type: object
