openapi: 3.0.0
servers:
  - url: https://www.daniweb.com/connect/api/v4
info:
  contact:
    email: dani@daniwebmail.com
    name: Dani Horowitz
    url: https://www.daniweb.com/members/1/dani
    x-twitter: DaniWeb
  description: User Recommendation Engine and Chat Network
  termsOfService: https://www.daniweb.com/connect/welcome/privacy
  title: DaniWeb Connect API
  version: "4"
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://twitter.com/DaniWeb/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://www.daniweb.com/connect/developers/swagger
      version: "3.0"
  x-providerName: daniweb.com
externalDocs:
  description: DaniWeb Connect API Documentation
  url: https://www.daniweb.com/connect/developers
tags:
  - description: Operations involving Apps
    name: apps
  - description: Operations involving Audiences
    name: audiences
  - description: Operations involving Autocompletes
    name: autocompletes
  - description: Operations involving Conversations
    name: conversations
  - description: Operations involving Groups
    name: groups
  - description: Operations involving Industries
    name: industries
  - description: Operations involving Markdown
    name: markdown
  - description: Operations involving Messages
    name: messages
  - description: Operations involving Users
    name: users
  - description: Operations involving Positions
    name: positions
  - description: Operations involving Webhooks
    name: webhooks
paths:
  /apps:
    get:
      description: Fetch all Daniapps that are currently in production mode.
      parameters:
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-apps"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - apps
  "/apps/{ID}":
    get:
      description: Fetch an array of Daniapps that are currently in production mode.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-apps-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - apps
  /audiences:
    get:
      description: Fetch all Daniapp audience segments that comprise the current access token's bubble.
      parameters:
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-audiences"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - audiences
  "/audiences/{ID}":
    get:
      description: Fetch an array of Daniapp audience segments that comprise the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-audiences-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - audiences
  "/audiences/{ID}/memberships":
    post:
      description: Create a membership record for the OAuth'ed end-user based on the current audience segment/bubble combination.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-audiences-ID-memberships"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - audiences
  /autocompletes:
    get:
      description: "Retrieve an array of names and locations, filtered by category, that begin with the query string passed in. Ideally used for search autocomplete dropdowns, as the search functionality filters against name and location. The four potential categories are: `conversations` for names of users you are in existing conversations with; `matches` for names of users you have previously skipped over; `people` for names of all other users; `locations` for locations of users. Only users and their locations who exist with the current access token's bubble are considered."
      parameters:
        - allowEmptyValue: true
          in: query
          name: query
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-autocompletes"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - autocompletes
  /conversations/schedules:
    post:
      description: Paginated report of information about messages contributed by conversation and date. Only conversations that exist within the current access token's bubble are considered in the calculations. Optionally roll up all conversations to retrieve one record per date. Optionally specify a date formatted as YYYY-MM-DD to retrieve information just from the single date, along with additional navigational information, which is useful when generating a transcript for a single day and wanting to reference the previous and next days there were messages.
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSchedules"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-conversations-schedules"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  /conversations/searches:
    post:
      description: Fetch messages authored from within the current bubble that match a query string passed in as a search parameter along with their relevancy score.
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSearches"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-conversations-searches"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  /conversations/statuses:
    get:
      description: "Retrieve conversations that you are participating in with users who exists within the same bubble, along with your current relationship with the conversations. The user_a / user_b properties of the conversation are populated with as much data as is available if the user is not you. If the user is you, only the id field is populated. There is a separate status endpoint to retrieve relationship information for individual conversations. Optionally filter: 'new' to only show conversations with messages you haven't yet seen; 'introductions' to only show conversations where users have introduced themselves to you but nothing more; 'unreplied' to only show conversations where you have introduced yourself to other users but nothing more; 'notifications' to show all conversations where the other user was the last person to message. Optionally only show conversations engaging within the existing access token's bubble. This report is limited to your ~500-1000 most recently active conversations you've engaged in within current the access token's bubble."
      parameters:
        - allowEmptyValue: true
          in: query
          name: filter
          required: false
          schema:
            enum:
              - new
              - introductions
              - unreplied
              - notifications
            type: string
        - allowEmptyValue: true
          in: query
          name: include_archived
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: bubbled
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-conversations-statuses"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  "/conversations/{ID}":
    get:
      description: Fetch an array of conversations. You can only retrieve conversations with users who exist within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-conversations-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  "/conversations/{ID}/messages":
    get:
      description: Retrieve the last {limit} messages in the conversation, provided the conversations exist within the current access token's bubble. If a timeout is 0 or greater, the batch is sorted oldest first. Otherwise, if timeout is a negative number, the transcript is paginated and sorted newest first. Specify a timeout for long polling (which delays the server sending back results for up to n seconds or until results are available, whichever comes first), or default to 0 for immediate results. Optionally record your status as online along with sharing the latest message you've seen with the other conversation participant. Optionally specify a gt_message_id to retrieve only messages with an ID greater than that specified (such as greater than the latest message ID received in the last poll). Optionally only poll for messages authored by the other person in the conversation, and echo messages authored by you when sending, for a perceived increase in performance. Optionally only retrieve messages that were posted from within the current access token's bubble. Optionally specify a date formatted as YYYY-MM-DD to retrieve a transcript of messages from a single day. When record_seen is set to true, the new message count for the conversation is reset to zero.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: gt_message_id
          required: false
          schema:
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: exclude_self
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: date
          required: false
          schema:
            type: string
        - allowEmptyValue: true
          in: query
          name: bubbled
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: record_seen
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: timeout
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-conversations-ID-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
    post:
      description: Post a message to a conversation that is with a user who exists within the current access token's bubble. Optionally specify whether emoticons should be parsed into smiley images. Optionally specify whether the message should be bubbled within the app. Additionally, optionally attach a single metadata key/value pair to the message upon submission.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                bubbled:
                  default: false
                  type: boolean
                metadata_0_key:
                  type: string
                metadata_0_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_0_values[]":
                  items:
                    type: string
                  type: array
                metadata_1_key:
                  type: string
                metadata_1_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_1_values[]":
                  items:
                    type: string
                  type: array
                metadata_2_key:
                  type: string
                metadata_2_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_2_values[]":
                  items:
                    type: string
                  type: array
                text_emoticons:
                  default: false
                  type: boolean
                text_raw:
                  type: string
              required:
                - text_raw
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-conversations-ID-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
            - conversations_write
        - implicit_flow:
            - conversations_read
            - conversations_write
      tags:
        - conversations
  "/conversations/{ID}/schedules":
    post:
      description: Paginated report of information about messages contributed by conversation and date. Only conversations that exist within the current access token's bubble are considered in the calculations. Optionally roll up all conversations to retrieve one record per date. Optionally specify a date formatted as YYYY-MM-DD to retrieve information just from the single date, along with additional navigational information, which is useful when generating a transcript for a single day and wanting to reference the previous and next days there were messages within the conversation(s).
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSchedules"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-conversations-ID-schedules"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  "/conversations/{ID}/searches":
    post:
      description: Fetch messages authored from within specified conversations that match a query string passed in as a search parameter along with their relevancy score.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSearches"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-conversations-ID-searches"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
  "/conversations/{ID}/statuses":
    get:
      description: Status information about your current relationship with one or more conversations you participating in, provided the conversations exist within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-conversations-ID-statuses"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - conversations
    patch:
      description: Archive or unarchive a conversation that is with a user who exists within the same bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                archived_status:
                  type: boolean
              required:
                - archived_status
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-conversations-ID-statuses"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
            - conversations_write
        - implicit_flow:
            - conversations_read
            - conversations_write
      tags:
        - conversations
  /groups:
    get:
      description: Fetch an array of all groups that were created by users existing within the current access token's bubble. The groups must be either Public or you must be a member of them. Unlisted and Private groups that you are not a member of are not listed.
      parameters:
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    post:
      description: Create a new group for other members to join. Any user who is using an access token whose bubble you exist in can join your group provided it is not a private group. Private groups can only be joined by members who know its passphrase. Unlisted groups can be joined by anybody as long as they know the Group ID, but they are not referenced anywhere to non-members. Public groups can be joined by anybody, are discoverable, and anyone can see the public groups a user is a member of, provided the group owner exists in their access token's bubble. Groups each have their own discussions, transcripts, schedules, and ability to list and search their members.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                description:
                  type: string
                name:
                  type: string
                passphrase:
                  type: string
                privacy:
                  enum:
                    - Public
                    - Unlisted
                    - Private
                  type: string
                slug:
                  type: string
              required:
                - name
                - slug
                - description
                - privacy
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
  /groups/messages/metadata/filters:
    post:
      description: Paginated listing of messages filtered by arbitrary metadata criteria. Messages must match on all key/value pairs passed in. Messages may only match on one value of an array passed in. However, messages are sorted based on how many distinct values they match on (most matches first).
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessagesMetadataFilters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-messages-metadata-filters"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - groups
  "/groups/messages/{ID}":
    delete:
      description: Delete an array of group messages. You must be the owner or moderator of the group.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-delete-groups-messages-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
    get:
      description: Fetch an array of group messages. You can only retrieve messages authored by you or by users existing within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-messages-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  "/groups/messages/{ID}/metadata":
    get:
      description: Retrieve all key/value pairs attached to the current message that you have access to, so long as the user who created the group exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-messages-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    post:
      description: "Attach one-to-many key/value pairs of metadata to a group message, so long as the user who authored the message exists within the current access token's bubble and you are a member of their group. A key is unique for each author/bubble combination. Attaching metadata with an existing key that was previously created by you, from within the same bubble, overwrites the key with the new value or set of values. The privacy setting allows you to specify who will have access to the metadata: Public metadata by anyone using an access token which grants them access to the user who authored the message and who is also a member of the group the message belongs to; Bubbled metadata by anyone using an access token existing within the current bubble who is also a member of the group the message belongs to; User metadata by you, so long as you are using an access token which grants you access to the user who authored the message and you remain a member of the group; Private metadata by you, so long as you are using an access token existing within the current bubble and you remain a member of the group."
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessages_id_metadata"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-messages-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  "/groups/messages/{ID}/metadata/collections":
    get:
      description: Retrieve all key/value pairs attached to the current message that you have access to, so long as the user who created the group exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble. Metadata will be grouped by key.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-messages-ID-metadata-collections"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  /groups/schedules:
    post:
      description: Paginated report of information about messages contributed by group and date. Only groups you're a member of and group messages authored by users the current access token has access to are considered in the calculations. Optionally roll up all groups to retrieve one record per date. Optionally specify a date formatted as YYYY-MM-DD to retrieve information just from the single date, along with additional navigational information, which is useful when generating a transcript for a single day and wanting to reference the previous and next days there were messages.
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSchedules"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-schedules"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  /groups/statuses:
    get:
      description: Retrieve groups that were created by users within the current access token's bubble, along with your current relationship with the groups. The groups must be either Public or you must be a member of them. Unlisted and Private groups that you are not a member of are not listed. Optionally only retrieve groups that you are a member of.
      parameters:
        - allowEmptyValue: true
          in: query
          name: existing_membership
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-statuses"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  "/groups/{ID}":
    get:
      description: Fetch an array of groups. You can only retrieve groups created by users existing within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    patch:
      description: Modify a group you previously created.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                description:
                  type: string
                name:
                  type: string
                passphrase:
                  type: string
                privacy:
                  enum:
                    - Public
                    - Unlisted
                    - Private
                  type: string
                slug:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-groups-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
  "/groups/{ID}/memberships":
    delete:
      description: Leave a group that you are a member of and that was created by a user who exists within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-delete-groups-ID-memberships"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
    get:
      description: Fetch an array of users who are members of specific groups that you are also a member of. You can only retrieve users existing within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
        - allowEmptyValue: true
          in: query
          name: moderators_only
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-ID-memberships"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    patch:
      description: Promote or demote a member's privileges within a group that you created. The user must exist within the current access token's bubble and be an existing member of the group.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                moderator:
                  default: false
                  type: boolean
                user_id:
                  format: int32
                  type: integer
              required:
                - user_id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-groups-ID-memberships"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    post:
      description: Join a group that was created by a user who exists within the current access token's bubble, or join other users into a group that you created. If you are the group owner, you can pass in a user_id to create membership records for a user you are in a conversation with. The user must exist within the current access token's bubble. If the group is private, you must successfully pass in its passphrase in order to join. You can obtain the passphrase from the group's owner.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                passphrase:
                  type: string
                user_id:
                  format: int32
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-ID-memberships"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
  "/groups/{ID}/messages":
    get:
      description: Retrieve the last {limit} messages in the group, for messages authored by users within the current access token's bubble. If a timeout is 0 or greater, the batch is sorted oldest first. Otherwise, if timeout is a negative number, the transcript is paginated and sorted newest first. Specify a timeout for long polling (which delays the server sending back results for up to n seconds or until results are available, whichever comes first), or default to 0 for immediate results. Optionally record your status as online along with sharing the latest message you've seen with other group members. Optionally specify a gt_message_id to retrieve only messages with an ID greater than that specified (such as greater than the latest message ID received in the last poll). Optionally only poll for messages authored by other members of the group, and echo messages authored by you when sending, for a perceived increase in performance. Optionally only retrieve messages that were posted from within the current access token's bubble. Optionally specify a date formatted as YYYY-MM-DD to retrieve a transcript of messages from a single day. When record_seen is set to true, the new message count for the group is reset to zero.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: gt_message_id
          required: false
          schema:
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: exclude_self
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: include_deleted
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: date
          required: false
          schema:
            type: string
        - allowEmptyValue: true
          in: query
          name: bubbled
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: record_seen
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: timeout
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-ID-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
    post:
      description: Post a message to a group that you are a member of and that was created by a user who exists within the current access token's bubble. Optionally specify whether emoticons should be parsed into smiley images. Additionally, optionally attach a single metadata key/value pair to the group message upon submission.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                metadata_0_key:
                  type: string
                metadata_0_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_0_values[]":
                  items:
                    type: string
                  type: array
                metadata_1_key:
                  type: string
                metadata_1_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_1_values[]":
                  items:
                    type: string
                  type: array
                metadata_2_key:
                  type: string
                metadata_2_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_2_values[]":
                  items:
                    type: string
                  type: array
                text_emoticons:
                  default: false
                  type: boolean
                text_raw:
                  type: string
              required:
                - text_raw
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-ID-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
            - groups_write
        - implicit_flow:
            - groups_read
            - groups_write
      tags:
        - groups
  "/groups/{ID}/schedules":
    post:
      description: Paginated report of information about group messages contributed by conversation and date. Only groups you're a member of and group messages authored by users existing within the current access token's bubble are considered in the calculations. Optionally roll up all groups to retrieve one record per date. Optionally specify a date formatted as YYYY-MM-DD to retrieve information just from the single date, along with additional navigational information, which is useful when generating a transcript for a single day and wanting to reference the previous and next days there were messages within the group discussion(s).
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      requestBody:
        $ref: "#/components/requestBodies/postConversationsSchedules"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-groups-ID-schedules"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  "/groups/{ID}/statuses":
    get:
      description: Status information about your current relationship with one or more groups you are a member of, provided the users who created the groups exist within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-groups-ID-statuses"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - groups
  /industries:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-industries"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - industries
  /markdown:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                text_emoticons:
                  default: false
                  type: boolean
                text_raw:
                  type: string
              required:
                - text_raw
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-markdown"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - markdown
  /markdown/emoticons:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-markdown-emoticons"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - markdown
  /messages/metadata/filters:
    post:
      description: Paginated listing of messages filtered by arbitrary metadata criteria. Messages must match on all key/value pairs passed in. Messages may only match on one value of an array passed in. However, messages are sorted based on how many distinct values they match on (most matches first).
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessagesMetadataFilters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-messages-metadata-filters"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - messages
  "/messages/{ID}":
    get:
      description: Fetch an array of messages. You can only retrieve messages authored by you or by users who exist within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-messages-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - messages
  "/messages/{ID}/metadata":
    get:
      description: Retrieve all key/value pairs attached to the current message that you have access to, so long as the user who authored the message exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-messages-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - messages
    post:
      description: "Attach one-to-many key/value pairs of metadata to a message, so long as the user who authored the message exists within the current access token's bubble. A key is unique for each author/bubble combination. Attaching metadata with an existing key that was previously created by you, from within the same bubble, overwrites the key with the new value or set of values. The privacy setting allows you to specify who will have access to the metadata: Public metadata by you or the other user in the message's conversation, using an access token which grants you access to the user who authored the message, if it wasn't you; Bubbled metadata by you or the other user in the message's conversation, using an access token existing within the current bubble; User metadata by you, so long as you are using an access token which grants you access to the user who authored the message, if it wasn't you; Private metadata by you, so long as you are using an access token existing within the current bubble."
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessages_id_metadata"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-messages-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - messages
  "/messages/{ID}/metadata/collections":
    get:
      description: Retrieve all key/value pairs attached to the current message that you have access to, so long as the user who authored the message exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble. Metadata will be grouped by key.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-messages-ID-metadata-collections"
          description: Valid Response
      security:
        - explicit_flow:
            - conversations_read
        - implicit_flow:
            - conversations_read
      tags:
        - messages
  /positions:
    post:
      description: Update the OAuth'ed end user's Curriculum Vitae by adding a position.
      requestBody:
        $ref: "#/components/requestBodies/postPositions"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-positions"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - profile_write
        - implicit_flow:
            - profile_read
            - profile_write
      tags:
        - positions
  "/positions/{ID}":
    delete:
      description: Remove an item from the OAuth'ed end user's Curriculum Vitae.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-delete-positions-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - profile_write
        - implicit_flow:
            - profile_read
            - profile_write
      tags:
        - positions
    patch:
      description: Update the OAuth'ed end user's Curriculum Vitae by modifying an existing position.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/postPositions"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-positions-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - profile_write
        - implicit_flow:
            - profile_read
            - profile_write
      tags:
        - positions
  /users:
    get:
      description: "Fetch an array of users that you've been matched with, connected with, skipped, or muted. You can only retrieve users existing within the current access token's bubble. This report may be limited to the last ~500-1000 users you've communicated with within the access token's bubble. Matches are always ordered by synergy, and the order_by parameter is ignored. You can only retrieve bubbled users when retrieving matches, and the bubbled parameter is ignored otherwise. Your 100 best algorithmic matches are based on: Complementary data submitted to Profiles, CVs, and Metadata; Complementary data acquired from third-parties; Location information; Many behavioral data points, such as how responsive users are to connections; Degrees of separation (mutual connections); etc. You may connect with 3 of these algorithmic matches per day for free. However, new members are allowed a grace period of additional daily matches. Each time you choose to meet or mute one of your algorithmic matches, a new match is introduced."
      parameters:
        - allowEmptyValue: true
          in: query
          name: filter
          required: false
          schema:
            default: connections
            enum:
              - connections
              - matches
              - skipped
              - muted
            type: string
        - allowEmptyValue: true
          in: query
          name: order_by
          required: false
          schema:
            default: id
            enum:
              - id
              - last_activity
              - first_name
              - last_name
              - industry
            type: string
        - allowEmptyValue: true
          in: query
          name: bubbled
          required: false
          schema:
            default: false
            type: boolean
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - users
  /users/invites:
    post:
      description: "Invite users to into your current access token's bubble by having Dazah send out email invitations on your behalf. The invitation sends users to begin the OAuth flow for the current application (based on the settings specified in the application's profile), and therefore they will be redirected to the application upon signing up / logging in. Upon doing so, if they aren't already, they will automatically be connected with you as well. If your current access token does not escape the bubble, the invitation will specify you wish to connect within the application's name. If your current access token escapes the bubble, the invitation will specify you wish to connect within Dazah. Submit either a list of emails, or a LinkedIn or Outlook CSV file. You can retrieve your LinkedIn CSV file by exporting your LinkedIn Connections at https://www.linkedin.com/people/export-settings. You can retrieve your Outlook CSV file by using the Outlook Import and Export Wizard. This endpoint buckets the invitations into four categories: Existing invites are existing users who are already connected with you within the current bubble, and are therefore not emailed; Discovered invites are existing Dazah users who are available to be connected with within the current bubble, and are therefore not emailed. Now that they have been discovered, the users/{:ID}/meet API endpoint may be used to connect with them; Invalid invites are existing Dazah users who are unavailable to be connected with, because they have deactivated accounts, are muting you, etc., and are therefore not emailed; Emailed invites are queued to receive an invitation within approximately 1 hour. Note that if you are attempting to invite an existing Dazah user who does not currently exist within your current access token's bubble, they will fall within the Discovered bucket if your current access token escapes the bubble, but will be emailed an invitation to join the application if your current access token does not escape the bubble."
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                csv:
                  format: binary
                  type: string
                "emails[]":
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-users-invites"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - conversations_write
        - implicit_flow:
            - profile_read
            - conversations_write
      tags:
        - users
  /users/metadata/filters:
    post:
      description: Paginated listing of users filtered by arbitrary metadata criteria. Users must match on all key/value pairs passed in. Users may only match on one value of an array passed in. However, users are sorted based on how many distinct values they match on (most matches first).
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessagesMetadataFilters"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-users-metadata-filters"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  /users/nearby:
    get:
      description: Fetch an array of users that are geographically close to a set of coordinates. You can only retrieve users existing within the current access token's bubble.
      parameters:
        - allowEmptyValue: true
          in: query
          name: latitude
          required: false
          schema:
            format: float
            type: number
        - allowEmptyValue: true
          in: query
          name: longitude
          required: false
          schema:
            format: float
            type: number
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-nearby"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - users
  /users/searches:
    post:
      description: Filter and perform a weighted search against user profile fields, CV fields, and metadata by specifying a string to search on for each individual field. By default, results are filtered such that all words in the string must exist, unless you seprate the words with OR. To perform a weighted search (as opposed to filtering), specify the weight (from 0-100) the search algorithm should assign to the field. You can optionally exclude users who you are already in or not in conversations with, exclude users who you previously skipped, or exclude users who you are muting. By doing so, you can effectively customize your own matching algorithm. You can specify geo coordinates to only find users a certain distance away from a specific location, or only find users within a certain distance from the OAuth'ed end-user's last known location. If your app utilizes multiple audience segments, you can specify which audiences you would like to search. You can also limit users to just those who have been recently active. You can also choose to only receive users originating from the current access token's bubble. Only users existing within the current access token's bubble will be matched, and you can only search within a group created by a bubbled user.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active_within_x_days:
                  format: int32
                  type: integer
                "audience_ids[]":
                  items:
                    format: int32
                    type: integer
                  type: array
                bubbled:
                  default: false
                  type: boolean
                exclude_connections:
                  default: false
                  type: boolean
                exclude_matches:
                  default: false
                  type: boolean
                exclude_muted:
                  default: false
                  type: boolean
                exclude_skipped:
                  default: false
                  type: boolean
                geo_latitude:
                  format: float
                  type: number
                geo_longitude:
                  format: float
                  type: number
                geo_miles_away:
                  format: float
                  type: number
                group_id:
                  format: int32
                  type: integer
                limit:
                  default: 50
                  format: int32
                  type: integer
                location_city_query:
                  type: string
                location_city_weight:
                  format: int32
                  type: integer
                location_country_query:
                  type: string
                location_country_weight:
                  format: int32
                  type: integer
                location_region_query:
                  type: string
                location_region_weight:
                  format: int32
                  type: integer
                metadata_0_key:
                  type: string
                metadata_0_query:
                  type: string
                metadata_0_weight:
                  format: int32
                  type: integer
                metadata_1_key:
                  type: string
                metadata_1_query:
                  type: string
                metadata_1_weight:
                  format: int32
                  type: integer
                metadata_2_key:
                  type: string
                metadata_2_query:
                  type: string
                metadata_2_weight:
                  format: int32
                  type: integer
                offset:
                  default: 0
                  format: int32
                  type: integer
                position_organization_query:
                  type: string
                position_organization_weight:
                  format: int32
                  type: integer
                position_role_query:
                  type: string
                position_role_weight:
                  format: int32
                  type: integer
                position_summary_query:
                  type: string
                position_summary_weight:
                  format: int32
                  type: integer
                profile_first_name_query:
                  type: string
                profile_first_name_weight:
                  format: int32
                  type: integer
                profile_goals_query:
                  type: string
                profile_goals_weight:
                  type: string
                profile_headline_query:
                  type: string
                profile_headline_weight:
                  format: int32
                  type: integer
                profile_industry_query:
                  type: string
                profile_industry_weight:
                  format: int32
                  type: integer
                profile_last_name_query:
                  type: string
                profile_last_name_weight:
                  format: int32
                  type: integer
                profile_pitch_query:
                  type: string
                profile_pitch_weight:
                  format: int32
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-users-searches"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  "/users/{ID}":
    get:
      description: Fetch an array of users. You can only retrieve users existing within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  "/users/{ID}/groups":
    get:
      description: You can only retrieve groups that were created by users existing within the current access token's bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-groups"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  "/users/{ID}/groups/messages":
    get:
      description: Paginated transcript of group messages authored by an individual user who exists within the current access token's bubble. Messages are sorted oldest to newest.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-groups-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - groups_read
        - implicit_flow:
            - groups_read
      tags:
        - users
  "/users/{ID}/messages":
    post:
      description: Initiate a conversation with a user who exists within the current access token's bubble by sending them an introductory message. If you aren't already in a conversation with them, this endpoint meets them first, and then sends the message. Note that if you aren't in an existing conversation, you still must meet the criteria to meet them, meaning the user must currently be free for you to meet. You will receive an error message unless it is currently free for you to meet the user. You can use the users/{:IDS}/synergies endpoint to first determine if the user isn't already in a conversation with you and is free for you to meet and, if they aren't, how to pay to meet them. If you don't specify a message, it defaults to your custom introductory message defined in your settings.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                bubbled:
                  default: false
                  type: boolean
                metadata_0_key:
                  type: string
                metadata_0_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_0_values[]":
                  items:
                    type: string
                  type: array
                metadata_1_key:
                  type: string
                metadata_1_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_1_values[]":
                  items:
                    type: string
                  type: array
                metadata_2_key:
                  type: string
                metadata_2_privacy:
                  enum:
                    - Public
                    - Private
                    - Bubbled
                    - User
                  type: string
                "metadata_2_values[]":
                  items:
                    type: string
                  type: array
                text_emoticons:
                  default: false
                  type: boolean
                text_raw:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-users-ID-messages"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - conversations_write
        - implicit_flow:
            - profile_read
            - conversations_write
      tags:
        - users
  "/users/{ID}/metadata":
    get:
      description: Retrieve all key/value pairs attached to the current user that you have access to, so long as the user exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble. You will receive an error message unless either the current access token is bubbled, the user is an algorithmic match for you and you have not reached your quota of new introductions for the day, or you have paid to meet them. However, you can always use the /users/metadata/filters endpoint to filter across all users, including those that are unmatched, existing within the current access token's bubble based on preknown metadata key/value pairs.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - allowEmptyValue: true
          in: query
          name: limit
          required: false
          schema:
            default: 50
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
    post:
      description: "Attach one-to-many key/value pairs of metadata to a user, so long as the user exists within the current access token's bubble. You can set one key at a time, with one or many values. A key is unique for each author/bubble combination. Attaching metadata with an existing key that was previously created by you, from within the same bubble, overwrites the key with the new value or set of values. The privacy setting allows you to specify who will have access to the metadata: Public metadata by anyone using an access token which grants them access to the user; Bubbled metadata by anyone using an access token existing within the current bubble; User metadata by you, so long as you are using an access token which grants you access to the user; Private metadata by you, so long as you are using an access token existing within the current bubble."
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/postGroupsMessages_id_metadata"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-users-ID-metadata"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  "/users/{ID}/metadata/collections":
    get:
      description: Retrieve all key/value pairs attached to the current user that you have access to, so long as the user exists within the current access token's bubble. This includes all public metadata, bubbled metadata that was created by an access token existing within the current bubble, user metadata that was created by you, or private metadata created by you from an access token existing within the current bubble. You will receive an error message unless either the current access token is bubbled, the user is an algorithmic match for you and you have not reached your quota of new introductions for the day, or you have paid to meet them. However, you can always use the /users/metadata/filters endpoint to filter across all users, including those that are unmatched, existing within the current access token's bubble based on preknown metadata key/value pairs. Metadata will be grouped by key.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-metadata-collections"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  "/users/{ID}/positions":
    get:
      description: Retrieve the CV of a user who exists within the current access token's bubble. You will receive an error message unless either the current access token is bubbled, the user is an algorithmic match for you and you have not reached your quota of new introductions for the day, or you have paid to meet them. You can only record CV data to your own account. However, any app that you have OAuth'ed against can do so. By default, you will receive CV data that all apps have recorded for the user. Optionally, you can choose to only receive data that the current access token's bubble has recorded.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
        - allowEmptyValue: true
          in: query
          name: bubbled
          required: false
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-positions"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - users
  "/users/{ID}/synergies":
    get:
      description: Determine your match relationship with one or more users who exist within the current access token's bubble. Under some conditions, the price to meet the user will be $0. However, if this is not the case, the PayPal URL payment method will be provided along with the price to meet the user. The PayPal API can be leveraged to send payments programatically, provided the parameters passed in remain the same to ensure that the payment is correctly recorded. Once the payment has been recorded via PayPal IPN, the price to meet the user changes to $0. You can then call the users/{:ID}/meet endpoint to meet the user.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            items:
              exclusiveMinimum: false
              format: int32
              minimum: 1
              type: integer
            maxItems: 100
            type: array
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users-ID-synergies"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - users
    patch:
      description: Skip, mute or unmute a user you've been matched with. Skipped matches are only presented as algorithmic matches after all other candidates have been exhausted. You cannot be matched with or meet muted users. You can only skip, mute or unmute users existing within the same bubble.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                relationship_muted:
                  type: boolean
                relationship_skipped:
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-users-ID-synergies"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - users
  /users/~:
    get:
      description: Retrieve the currently OAuth'ed end-user, based on the access token being used, including private information and settings such as their email address.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-users--"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
        - implicit_flow:
            - profile_read
      tags:
        - users
    patch:
      description: Update the OAuth'ed end user's account profile. At this time, for anti-spam reasons, restrictions preclude the ability to update email address and some other settings via the API.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                company:
                  type: string
                company_size:
                  enum:
                    - Self-employed
                    - 2 - 9 Employees
                    - 10 - 49 Employees
                    - 50 - 99 Employees
                    - 100 - 499 Employees
                    - 500 - 999 Employees
                    - 1000 - 4999 Employees
                    - 5000+ Employees
                    - Don't Know
                  type: string
                first_name:
                  type: string
                "goals[]":
                  enum:
                    - Find business partnerships
                    - Find prospective clients
                    - Hire employees
                    - Find a job
                    - Find a co-founder
                    - Receive mentorship from others
                    - Mentor others
                  items:
                    enum:
                      - Find business partnerships
                      - Find prospective clients
                      - Hire employees
                      - Find a job
                      - Find a co-founder
                      - Receive mentorship from others
                      - Mentor others
                    type: string
                  type: array
                headline:
                  type: string
                industry:
                  enum:
                    - Accounting
                    - Airlines/Aviation
                    - Alternative Dispute Resolution
                    - Alternative Medicine
                    - Animation
                    - Apparel & Fashion
                    - Architecture & Planning
                    - Arts and Crafts
                    - Automotive
                    - Aviation & Aerospace
                    - Banking
                    - Biotechnology
                    - Broadcast Media
                    - Building Materials
                    - Business Supplies and Equipment
                    - Capital Markets
                    - Chemicals
                    - Civic & Social Organization
                    - Civil Engineering
                    - Commercial Real Estate
                    - Computer & Network Security
                    - Computer Games
                    - Computer Hardware
                    - Computer Networking
                    - Computer Software
                    - Construction
                    - Consumer Electronics
                    - Consumer Goods
                    - Consumer Services
                    - Cosmetics
                    - Dairy
                    - Defense & Space
                    - Design
                    - E-Learning
                    - Education Management
                    - Electrical/Electronic Manufacturing
                    - Entertainment
                    - Environmental Services
                    - Events Services
                    - Executive Office
                    - Facilities Services
                    - Farming
                    - Financial Services
                    - Fine Art
                    - Fishery
                    - Food & Beverages
                    - Food Production
                    - Fund-Raising
                    - Furniture
                    - Gambling & Casinos
                    - Glass, Ceramics & Concrete
                    - Government Administration
                    - Government Relations
                    - Graphic Design
                    - Health, Wellness and Fitness
                    - Higher Education
                    - Hospital & Health Care
                    - Hospitality
                    - Human Resources
                    - Import and Export
                    - Individual & Family Services
                    - Industrial Automation
                    - Information Services
                    - Information Technology and Services
                    - Insurance
                    - International Affairs
                    - International Trade and Development
                    - Internet
                    - Investment Banking
                    - Investment Management
                    - Judiciary
                    - Law Enforcement
                    - Law Practice
                    - Legal Services
                    - Legislative Office
                    - Leisure, Travel & Tourism
                    - Libraries
                    - Logistics and Supply Chain
                    - Luxury Goods & Jewelry
                    - Machinery
                    - Management Consulting
                    - Maritime
                    - Market Research
                    - Marketing and Advertising
                    - Mechanical or Industrial Engineering
                    - Media Production
                    - Medical Devices
                    - Medical Practice
                    - Mental Health Care
                    - Military
                    - Mining & Metals
                    - Motion Pictures and Film
                    - Museums and Institutions
                    - Music
                    - Nanotechnology
                    - Newspapers
                    - Non-Profit Organization Management
                    - Oil & Energy
                    - Online Media
                    - Outsourcing/Offshoring
                    - Package/Freight Delivery
                    - Packaging and Containers
                    - Paper & Forest Products
                    - Performing Arts
                    - Pharmaceuticals
                    - Philanthropy
                    - Photography
                    - Plastics
                    - Political Organization
                    - Primary/Secondary Education
                    - Printing
                    - Professional Training & Coaching
                    - Program Development
                    - Public Policy
                    - Public Relations and Communications
                    - Public Safety
                    - Publishing
                    - Railroad Manufacture
                    - Ranching
                    - Real Estate
                    - Recreational Facilities and Services
                    - Religious Institutions
                    - Renewables & Environment
                    - Research
                    - Restaurants
                    - Retail
                    - Security and Investigations
                    - Semiconductors
                    - Shipbuilding
                    - Sporting Goods
                    - Sports
                    - Staffing and Recruiting
                    - Supermarkets
                    - Telecommunications
                    - Textiles
                    - Think Tanks
                    - Tobacco
                    - Translation and Localization
                    - Transportation/Trucking/Railroad
                    - Utilities
                    - Venture Capital & Private Equity
                    - Veterinary
                    - Warehousing
                    - Wholesale
                    - Wine and Spirits
                    - Wireless
                    - Writing and Editing
                  type: string
                introduction:
                  type: string
                job_position:
                  enum:
                    - Executive Management (C-level)
                    - VP-level Executive
                    - Manager / Director / Supervisor
                    - Systems Development
                    - Software Development
                    - Web Developer
                    - IT Consultant
                    - Technical Support
                    - Sales
                    - Other technology related
                    - Other non-technology related
                    - Student
                    - Retired
                  type: string
                last_name:
                  type: string
                location_importance:
                  enum:
                    - Yes
                    - Somewhat
                    - No
                  type: string
                "match_tags[]":
                  items:
                    type: string
                  type: array
                pitch:
                  type: string
                "tags[]":
                  items:
                    type: string
                  type: array
                targeted_industry:
                  enum:
                    - Accounting
                    - Airlines/Aviation
                    - Alternative Dispute Resolution
                    - Alternative Medicine
                    - Animation
                    - Apparel & Fashion
                    - Architecture & Planning
                    - Arts and Crafts
                    - Automotive
                    - Aviation & Aerospace
                    - Banking
                    - Biotechnology
                    - Broadcast Media
                    - Building Materials
                    - Business Supplies and Equipment
                    - Capital Markets
                    - Chemicals
                    - Civic & Social Organization
                    - Civil Engineering
                    - Commercial Real Estate
                    - Computer & Network Security
                    - Computer Games
                    - Computer Hardware
                    - Computer Networking
                    - Computer Software
                    - Construction
                    - Consumer Electronics
                    - Consumer Goods
                    - Consumer Services
                    - Cosmetics
                    - Dairy
                    - Defense & Space
                    - Design
                    - E-Learning
                    - Education Management
                    - Electrical/Electronic Manufacturing
                    - Entertainment
                    - Environmental Services
                    - Events Services
                    - Executive Office
                    - Facilities Services
                    - Farming
                    - Financial Services
                    - Fine Art
                    - Fishery
                    - Food & Beverages
                    - Food Production
                    - Fund-Raising
                    - Furniture
                    - Gambling & Casinos
                    - Glass, Ceramics & Concrete
                    - Government Administration
                    - Government Relations
                    - Graphic Design
                    - Health, Wellness and Fitness
                    - Higher Education
                    - Hospital & Health Care
                    - Hospitality
                    - Human Resources
                    - Import and Export
                    - Individual & Family Services
                    - Industrial Automation
                    - Information Services
                    - Information Technology and Services
                    - Insurance
                    - International Affairs
                    - International Trade and Development
                    - Internet
                    - Investment Banking
                    - Investment Management
                    - Judiciary
                    - Law Enforcement
                    - Law Practice
                    - Legal Services
                    - Legislative Office
                    - Leisure, Travel & Tourism
                    - Libraries
                    - Logistics and Supply Chain
                    - Luxury Goods & Jewelry
                    - Machinery
                    - Management Consulting
                    - Maritime
                    - Market Research
                    - Marketing and Advertising
                    - Mechanical or Industrial Engineering
                    - Media Production
                    - Medical Devices
                    - Medical Practice
                    - Mental Health Care
                    - Military
                    - Mining & Metals
                    - Motion Pictures and Film
                    - Museums and Institutions
                    - Music
                    - Nanotechnology
                    - Newspapers
                    - Non-Profit Organization Management
                    - Oil & Energy
                    - Online Media
                    - Outsourcing/Offshoring
                    - Package/Freight Delivery
                    - Packaging and Containers
                    - Paper & Forest Products
                    - Performing Arts
                    - Pharmaceuticals
                    - Philanthropy
                    - Photography
                    - Plastics
                    - Political Organization
                    - Primary/Secondary Education
                    - Printing
                    - Professional Training & Coaching
                    - Program Development
                    - Public Policy
                    - Public Relations and Communications
                    - Public Safety
                    - Publishing
                    - Railroad Manufacture
                    - Ranching
                    - Real Estate
                    - Recreational Facilities and Services
                    - Religious Institutions
                    - Renewables & Environment
                    - Research
                    - Restaurants
                    - Retail
                    - Security and Investigations
                    - Semiconductors
                    - Shipbuilding
                    - Sporting Goods
                    - Sports
                    - Staffing and Recruiting
                    - Supermarkets
                    - Telecommunications
                    - Textiles
                    - Think Tanks
                    - Tobacco
                    - Translation and Localization
                    - Transportation/Trucking/Railroad
                    - Utilities
                    - Venture Capital & Private Equity
                    - Veterinary
                    - Warehousing
                    - Wholesale
                    - Wine and Spirits
                    - Wireless
                    - Writing and Editing
                  type: string
                url:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-patch-users--"
          description: Valid Response
      security:
        - explicit_flow:
            - profile_read
            - profile_write
        - implicit_flow:
            - profile_read
            - profile_write
      tags:
        - users
  /webhooks:
    get:
      description: Fetch a listing of all webhooks owned by the current user/bubble combination.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-get-webhooks"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - webhooks
    post:
      description: Register a new webhook for the current user/bubble combination. Specify an object_id to only be notified on an event related to that specific Conversation ID, Group ID, or User ID. Your access token must have access to the user being tracked, user you are in the conversation with, or user who created the group. You must be connected with a user in order to keep track of their online status. Alternatively, do not specify an object_id to be notified on all events that are related to conversations you're in, groups you're a member of, or users you are in conversations with. You may only have one webhook for each object_id/event. The webhook URI must reside on your own server. Webhooks do not expire when the access token used to create them expires. However, they will temporarily cease to function if the user who created them deauthorizes access to the application (effectively no longer existing within the bubble), unless/until the user reauthorizes the application using OAuth.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                bubbled:
                  default: false
                  type: boolean
                event:
                  enum:
                    - conversation_message
                    - conversation_seen
                    - group_update
                    - group_message
                    - group_seen
                    - user_online
                    - user_update
                  type: string
                name:
                  type: string
                object_id:
                  format: int32
                  type: integer
                uri:
                  type: string
              required:
                - name
                - event
                - uri
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-post-webhooks"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - webhooks
  "/webhooks/{ID}":
    delete:
      description: Delete a webhook that was previously registered by the current user/bubble combination.
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            exclusiveMinimum: false
            format: int32
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Endpoint-delete-webhooks-ID"
          description: Valid Response
      security:
        - explicit_flow:
            - basic
        - implicit_flow:
            - basic
      tags:
        - webhooks
components:
  requestBodies:
    postConversationsSchedules:
      content:
        multipart/form-data:
          schema:
            properties:
              date:
                type: string
              limit:
                default: 50
                format: int32
                type: integer
              offset:
                default: 0
                format: int32
                type: integer
              roll_up:
                default: false
                type: boolean
              sort:
                default: desc
                enum:
                  - asc
                  - desc
                type: string
            type: object
    postConversationsSearches:
      content:
        multipart/form-data:
          schema:
            properties:
              date:
                type: string
              gt_message_id:
                format: int32
                type: integer
              limit:
                default: 50
                format: int32
                type: integer
              offset:
                default: 0
                format: int32
                type: integer
              query:
                type: string
            required:
              - query
            type: object
      required: true
    postGroupsMessagesMetadataFilters:
      content:
        multipart/form-data:
          schema:
            properties:
              limit:
                default: 50
                format: int32
                type: integer
              metadata_0_key:
                type: string
              "metadata_0_values[]":
                items:
                  type: string
                type: array
              metadata_1_key:
                type: string
              "metadata_1_values[]":
                items:
                  type: string
                type: array
              metadata_2_key:
                type: string
              "metadata_2_values[]":
                items:
                  type: string
                type: array
              offset:
                default: 0
                format: int32
                type: integer
            type: object
    postGroupsMessages_id_metadata:
      content:
        multipart/form-data:
          schema:
            properties:
              metadata_0_key:
                type: string
              metadata_0_privacy:
                enum:
                  - Public
                  - Private
                  - Bubbled
                  - User
                type: string
              "metadata_0_values[]":
                items:
                  type: string
                type: array
              metadata_1_key:
                type: string
              metadata_1_privacy:
                enum:
                  - Public
                  - Private
                  - Bubbled
                  - User
                type: string
              "metadata_1_values[]":
                items:
                  type: string
                type: array
              metadata_2_key:
                type: string
              metadata_2_privacy:
                enum:
                  - Public
                  - Private
                  - Bubbled
                  - User
                type: string
              "metadata_2_values[]":
                items:
                  type: string
                type: array
            type: object
    postPositions:
      content:
        multipart/form-data:
          schema:
            properties:
              category:
                enum:
                  - Experience
                  - Education
                  - Awards
                  - Affiliations
                  - Portfolio
                type: string
              end_date:
                type: string
              organization:
                type: string
              organization_size:
                enum:
                  - Self-employed
                  - 2 - 9 Employees
                  - 10 - 49 Employees
                  - 50 - 99 Employees
                  - 100 - 499 Employees
                  - 500 - 999 Employees
                  - 1000 - 4999 Employees
                  - 5000+ Employees
                  - Don't Know
                type: string
              position:
                enum:
                  - Executive Management (C-level)
                  - VP-level Executive
                  - Manager / Director / Supervisor
                  - Systems Development
                  - Software Development
                  - Web Developer
                  - IT Consultant
                  - Technical Support
                  - Sales
                  - Other technology related
                  - Other non-technology related
                  - Student
                  - Retired
                type: string
              role:
                type: string
              start_date:
                type: string
              summary:
                type: string
              url:
                type: string
            required:
              - category
              - role
              - organization
              - start_date
            type: object
      required: true
  schemas:
    Api-pagination:
      properties:
        limit:
          format: int32
          type: number
        offset:
          format: int32
          type: number
        total_records:
          format: int32
          type: number
      type: object
    App:
      properties:
        about:
          properties:
            description:
              type: string
            name:
              type: string
            website:
              properties:
                thumbshot:
                  type: string
                url:
                  format: uri
                  type: string
              type: object
          type: object
        id:
          format: int32
          type: number
        legal:
          properties:
            privacy_url:
              format: uri
              type: string
            tos_url:
              format: uri
              type: string
          type: object
      required:
        - id
      type: object
    Bubble:
      properties:
        about:
          properties:
            name:
              type: string
          type: object
        id:
          format: int32
          type: number
      required:
        - id
      type: object
    Conversation:
      properties:
        first_message:
          properties:
            author:
              $ref: "#/components/schemas/User"
            timestamp:
              format: date-time
              type: string
          type: object
        id:
          format: int32
          type: number
        latest_message:
          $ref: "#/components/schemas/Message"
        user_a:
          $ref: "#/components/schemas/User"
        user_b:
          $ref: "#/components/schemas/User"
      required:
        - id
      type: object
    Endpoint-delete-groups-ID-memberships:
      properties:
        success:
          type: boolean
      type: object
    Endpoint-delete-groups-messages-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message"
          type: array
        status:
          type: boolean
      type: object
    Endpoint-delete-positions-ID:
      properties:
        success:
          type: boolean
      type: object
    Endpoint-delete-webhooks-ID:
      properties:
        success:
          type: boolean
      type: object
    Endpoint-get-apps:
      properties:
        data:
          items:
            $ref: "#/components/schemas/App"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-apps-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/App"
          type: array
      type: object
    Endpoint-get-audiences:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Bubble"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-audiences-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Bubble"
          type: array
      type: object
    Endpoint-get-autocompletes:
      properties:
        data:
          properties:
            conversations:
              items:
                type: string
              type: array
            locations:
              items:
                type: string
              type: array
            matches:
              items:
                type: string
              type: array
            people:
              items:
                type: string
              type: array
          type: object
      type: object
    Endpoint-get-conversations-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Conversation"
          type: array
      type: object
    Endpoint-get-conversations-ID-messages:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Message"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-conversations-ID-statuses:
      properties:
        data:
          items:
            properties:
              archived_status:
                type: boolean
              bubbled:
                properties:
                  latest_message:
                    $ref: "#/components/schemas/Message"
                type: object
              conversation:
                $ref: "#/components/schemas/Conversation"
              earliest_unseen_message:
                $ref: "#/components/schemas/Message"
              new_message_count:
                format: int32
                type: number
            type: object
          type: array
      type: object
    Endpoint-get-conversations-statuses:
      properties:
        data:
          items:
            properties:
              archived_status:
                type: boolean
              bubbled:
                properties:
                  latest_message:
                    $ref: "#/components/schemas/Message"
                type: object
              conversation:
                $ref: "#/components/schemas/Conversation"
              earliest_unseen_message:
                $ref: "#/components/schemas/Message"
              new_message_count:
                format: int32
                type: number
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-groups:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-groups-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group"
          type: array
      type: object
    Endpoint-get-groups-ID-memberships:
      properties:
        data:
          items:
            properties:
              group:
                $ref: "#/components/schemas/Group"
              member:
                $ref: "#/components/schemas/User"
              privileges:
                properties:
                  moderator:
                    type: boolean
                  owner:
                    type: boolean
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-groups-ID-messages:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-groups-ID-statuses:
      properties:
        data:
          items:
            properties:
              earliest_unseen_message:
                $ref: "#/components/schemas/Group_message"
              group:
                $ref: "#/components/schemas/Group"
              membership_status:
                type: boolean
              new_message_count:
                format: int32
                type: number
            type: object
          type: array
      type: object
    Endpoint-get-groups-messages-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message"
          type: array
      type: object
    Endpoint-get-groups-messages-ID-metadata:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message_data"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-groups-messages-ID-metadata-collections:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    Endpoint-get-groups-statuses:
      properties:
        data:
          items:
            properties:
              earliest_unseen_message:
                $ref: "#/components/schemas/Group_message"
              group:
                $ref: "#/components/schemas/Group"
              new_message_count:
                format: int32
                type: number
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-industries:
      properties:
        data:
          items:
            type: string
          type: array
      type: object
    Endpoint-get-markdown-emoticons:
      properties:
        data:
          items:
            properties:
              alt:
                type: string
              emoticon:
                type: string
              image:
                type: string
            type: object
          type: array
      type: object
    Endpoint-get-messages-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Message"
          type: array
      type: object
    Endpoint-get-messages-ID-metadata:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Message_data"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-messages-ID-metadata-collections:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    Endpoint-get-users:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-users--:
      properties:
        data:
          $ref: "#/components/schemas/Me"
      type: object
    Endpoint-get-users-ID:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object
    Endpoint-get-users-ID-groups:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group"
          type: array
      type: object
    Endpoint-get-users-ID-groups-messages:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-users-ID-metadata:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User_data"
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-users-ID-metadata-collections:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    Endpoint-get-users-ID-positions:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Position"
          type: array
      type: object
    Endpoint-get-users-ID-synergies:
      properties:
        data:
          items:
            properties:
              additional:
                properties:
                  metadata_count:
                    format: int32
                    type: number
                  positions_count:
                    format: int32
                    type: number
                type: object
              conversation:
                $ref: "#/components/schemas/Conversation"
              match:
                properties:
                  algorithmic_match:
                    type: boolean
                  complementary_goals:
                    items:
                      type: string
                    type: array
                  distance_away:
                    properties:
                      miles:
                        format: float
                        type: number
                    type: object
                  industry:
                    properties:
                      complementary:
                        type: boolean
                      mutual_match:
                        type: boolean
                      similar:
                        type: boolean
                    type: object
                  mutual_connections:
                    properties:
                      count:
                        format: int32
                        type: number
                    type: object
                  recommendation_strength:
                    format: float
                    type: number
                type: object
              meet:
                properties:
                  payment:
                    properties:
                      paypal:
                        properties:
                          url:
                            format: uri
                            type: string
                        type: object
                    type: object
                  price_usd:
                    format: float
                    type: number
                type: object
              relationship:
                properties:
                  existing_bubbled_conversation:
                    type: boolean
                  existing_conversation:
                    type: boolean
                  muted:
                    type: boolean
                  skipped:
                    type: boolean
                type: object
            type: object
          type: array
      type: object
    Endpoint-get-users-nearby:
      properties:
        data:
          items:
            properties:
              distance_away:
                properties:
                  miles:
                    format: float
                    type: number
                type: object
              user:
                $ref: "#/components/schemas/User"
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-get-webhooks:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Webhook"
          type: array
      type: object
    Endpoint-patch-conversations-ID-statuses:
      properties:
        data:
          properties:
            archived_status:
              type: boolean
            conversation:
              $ref: "#/components/schemas/Conversation"
          type: object
        success:
          type: boolean
      type: object
    Endpoint-patch-groups-ID:
      properties:
        data:
          $ref: "#/components/schemas/Group"
        success:
          type: boolean
      type: object
    Endpoint-patch-groups-ID-memberships:
      properties:
        data:
          items:
            properties:
              group:
                $ref: "#/components/schemas/Group"
              member:
                $ref: "#/components/schemas/User"
              privileges:
                properties:
                  moderator:
                    type: boolean
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
        success:
          type: boolean
      type: object
    Endpoint-patch-positions-ID:
      properties:
        data:
          $ref: "#/components/schemas/Position"
        success:
          type: boolean
      type: object
    Endpoint-patch-users--:
      properties:
        data:
          $ref: "#/components/schemas/Me"
        success:
          type: boolean
      type: object
    Endpoint-patch-users-ID-synergies:
      properties:
        data:
          properties:
            relationship:
              properties:
                muted:
                  type: boolean
                skipped:
                  type: boolean
              type: object
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-audiences-ID-memberships:
      properties:
        data:
          properties:
            audience:
              properties:
                id:
                  format: int32
                  type: number
              type: object
            member:
              $ref: "#/components/schemas/User"
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-conversations-ID-messages:
      properties:
        data:
          $ref: "#/components/schemas/Message"
        success:
          type: boolean
      type: object
    Endpoint-post-conversations-ID-schedules:
      properties:
        data:
          items:
            properties:
              author_count:
                format: int32
                type: number
              conversation_count:
                format: int32
                type: number
              conversation_id:
                format: int32
                type: number
              date:
                format: date
                type: string
              first_message:
                $ref: "#/components/schemas/Message"
              last_message:
                $ref: "#/components/schemas/Message"
              message_count:
                format: int32
                type: number
              my_message_count:
                format: int32
                type: number
              navigation:
                properties:
                  earliest_date:
                    format: date
                    type: string
                  next_date:
                    format: date
                    type: string
                  previous_date:
                    format: date
                    type: string
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-conversations-ID-searches:
      properties:
        data:
          items:
            properties:
              message:
                $ref: "#/components/schemas/Message"
              relevance:
                properties:
                  score:
                    format: float
                    type: number
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-conversations-schedules:
      properties:
        data:
          items:
            properties:
              author_count:
                format: int32
                type: number
              conversation_count:
                format: int32
                type: number
              conversation_id:
                format: int32
                type: number
              date:
                format: date
                type: string
              first_message:
                $ref: "#/components/schemas/Message"
              last_message:
                $ref: "#/components/schemas/Message"
              message_count:
                format: int32
                type: number
              my_message_count:
                format: int32
                type: number
              navigation:
                properties:
                  earliest_date:
                    format: date
                    type: string
                  next_date:
                    format: date
                    type: string
                  previous_date:
                    format: date
                    type: string
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-conversations-searches:
      properties:
        data:
          items:
            properties:
              message:
                $ref: "#/components/schemas/Message"
              relevance:
                properties:
                  score:
                    format: float
                    type: number
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-groups:
      properties:
        data:
          $ref: "#/components/schemas/Group"
        success:
          type: boolean
      type: object
    Endpoint-post-groups-ID-memberships:
      properties:
        data:
          properties:
            group:
              $ref: "#/components/schemas/Group"
            member:
              $ref: "#/components/schemas/User"
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-groups-ID-messages:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Group_message"
          type: array
        success:
          type: boolean
      type: object
    Endpoint-post-groups-ID-schedules:
      properties:
        data:
          items:
            properties:
              author_count:
                format: int32
                type: number
              date:
                format: date
                type: string
              first_message:
                $ref: "#/components/schemas/Group_message"
              group_count:
                format: int32
                type: number
              group_id:
                format: int32
                type: number
              last_message:
                $ref: "#/components/schemas/Group_message"
              message_count:
                format: int32
                type: number
              my_message_count:
                format: int32
                type: number
              navigation:
                properties:
                  earliest_date:
                    format: date
                    type: string
                  next_date:
                    format: date
                    type: string
                  previous_date:
                    format: date
                    type: string
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-groups-messages-ID-metadata:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-groups-messages-metadata-filters:
      properties:
        data:
          items:
            properties:
              matched_metadata:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              message:
                $ref: "#/components/schemas/Group_message"
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-groups-schedules:
      properties:
        data:
          items:
            properties:
              author_count:
                format: int32
                type: number
              date:
                format: date
                type: string
              first_message:
                $ref: "#/components/schemas/Group_message"
              group_count:
                format: int32
                type: number
              group_id:
                format: int32
                type: number
              last_message:
                $ref: "#/components/schemas/Group_message"
              message_count:
                format: int32
                type: number
              my_message_count:
                format: int32
                type: number
              navigation:
                properties:
                  earliest_date:
                    format: date
                    type: string
                  next_date:
                    format: date
                    type: string
                  previous_date:
                    format: date
                    type: string
                type: object
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-markdown:
      properties:
        data:
          properties:
            parsed:
              type: string
            raw:
              type: string
          type: object
      type: object
    Endpoint-post-messages-ID-metadata:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-messages-metadata-filters:
      properties:
        data:
          items:
            properties:
              matched_metadata:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              message:
                $ref: "#/components/schemas/Message"
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-positions:
      properties:
        data:
          $ref: "#/components/schemas/Position"
        success:
          type: boolean
      type: object
    Endpoint-post-users-ID-messages:
      properties:
        data:
          $ref: "#/components/schemas/Message"
        success:
          type: boolean
      type: object
    Endpoint-post-users-ID-metadata:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-users-invites:
      properties:
        data:
          properties:
            discovered:
              properties:
                users:
                  items:
                    $ref: "#/components/schemas/User"
                  type: array
              type: object
            emailed:
              properties:
                emails:
                  items:
                    type: string
                  type: array
              type: object
            existing:
              properties:
                conversations:
                  items:
                    $ref: "#/components/schemas/User"
                  type: array
              type: object
            invalid:
              properties:
                emails:
                  items:
                    type: string
                  type: array
              type: object
          type: object
        success:
          type: boolean
      type: object
    Endpoint-post-users-metadata-filters:
      properties:
        data:
          items:
            properties:
              matched_metadata:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              user:
                $ref: "#/components/schemas/User"
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-users-searches:
      properties:
        data:
          items:
            properties:
              relevance:
                properties:
                  score:
                    format: float
                    type: number
                type: object
              user:
                $ref: "#/components/schemas/User"
            type: object
          type: array
        pagination:
          $ref: "#/components/schemas/Api-pagination"
      type: object
    Endpoint-post-webhooks:
      properties:
        data:
          $ref: "#/components/schemas/Webhook"
        success:
          type: boolean
      type: object
    Group:
      properties:
        first_message:
          properties:
            timestamp:
              format: date-time
              type: string
          type: object
        id:
          format: int32
          type: number
        latest_message:
          $ref: "#/components/schemas/Group_message"
        member_count:
          format: int32
          type: number
        owner:
          $ref: "#/components/schemas/User"
        properties:
          properties:
            description:
              type: string
            name:
              type: string
            privacy:
              type: string
            slug:
              type: string
          type: object
      required:
        - id
      type: object
    Group_message:
      properties:
        author:
          $ref: "#/components/schemas/User"
        group:
          $ref: "#/components/schemas/Group"
        id:
          format: int32
          type: number
        last_seen:
          properties:
            timestamp:
              format: date-time
              type: string
            user:
              $ref: "#/components/schemas/User"
          type: object
        moderated:
          properties:
            deleted_status:
              type: boolean
          type: object
        text:
          properties:
            parsed:
              type: string
          type: object
        timestamp:
          format: date-time
          type: string
      required:
        - id
      type: object
    Group_message_data:
      properties:
        app:
          $ref: "#/components/schemas/App"
        content:
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        id:
          format: int32
          type: number
        message:
          $ref: "#/components/schemas/Group_message"
        owner:
          $ref: "#/components/schemas/User"
        settings:
          properties:
            privacy:
              type: string
          type: object
        status:
          properties:
            last_updated_timestamp:
              format: date-time
              type: string
          type: object
      required:
        - id
      type: object
    Me:
      properties:
        business_card:
          properties:
            company_name:
              type: string
            company_size:
              type: string
            headline:
              type: string
            industry:
              type: string
            interest_tags:
              items:
                type: string
              type: array
            job_position:
              type: string
            summary:
              type: string
            website:
              properties:
                thumbshot_uri:
                  format: uri
                  type: string
                url:
                  format: uri
                  type: string
              type: object
          type: object
        community_persona:
          $ref: "#/components/schemas/Member"
        id:
          format: int32
          type: number
        location:
          properties:
            city:
              type: string
            country:
              format: int32
              type: number
            ip_address:
              type: string
            latitude:
              type: string
            longitude:
              type: string
            region:
              type: string
          type: object
        matching:
          properties:
            goals:
              items:
                type: string
              type: array
            interest_tags:
              items:
                type: string
              type: array
            location_importance:
              type: string
            targeted_industry:
              type: string
          type: object
        profile:
          properties:
            first_name:
              type: string
            introduction:
              type: string
            last_name:
              type: string
          type: object
        settings:
          properties:
            email:
              type: string
            email_verified:
              type: boolean
            notifications:
              type: string
            timezone:
              format: int32
              type: number
          type: object
        usage:
          properties:
            available_status:
              type: boolean
            joined_timestamp:
              format: date-time
              type: string
            last_activity_timestamp:
              format: date-time
              type: string
            online_status:
              type: boolean
          type: object
      required:
        - id
      type: object
    Member:
      properties:
        id:
          format: int32
          type: number
        identity:
          properties:
            avatar_uri:
              format: uri
              type: string
            badge:
              type: string
            profile_url:
              format: uri
              type: string
            username:
              type: string
          type: object
        location:
          properties:
            free_form:
              type: string
          type: object
        personal:
          properties:
            about_me:
              type: string
            birthday:
              type: string
            interests:
              type: string
            pc_specs:
              type: string
          type: object
        signature:
          properties:
            parsed:
              type: string
            raw:
              type: string
          type: object
        stats:
          properties:
            answered_count:
              format: int32
              type: number
            endorsements_count:
              format: int32
              type: number
            posts_count:
              format: int32
              type: number
            reputation_count:
              format: int32
              type: number
          type: object
      required:
        - id
      type: object
    Message:
      properties:
        author:
          $ref: "#/components/schemas/User"
        conversation:
          $ref: "#/components/schemas/Conversation"
        id:
          format: int32
          type: number
        last_seen:
          properties:
            timestamp:
              format: date-time
              type: string
            user:
              $ref: "#/components/schemas/User"
          type: object
        text:
          properties:
            parsed:
              type: string
          type: object
        timestamp:
          format: date-time
          type: string
      required:
        - id
      type: object
    Message_data:
      properties:
        app:
          $ref: "#/components/schemas/App"
        content:
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        id:
          format: int32
          type: number
        message:
          $ref: "#/components/schemas/Message"
        owner:
          $ref: "#/components/schemas/User"
        settings:
          properties:
            privacy:
              type: string
          type: object
        status:
          properties:
            last_updated_timestamp:
              format: date-time
              type: string
          type: object
      required:
        - id
      type: object
    Position:
      properties:
        app:
          $ref: "#/components/schemas/App"
        category:
          type: string
        id:
          format: int32
          type: number
        organization:
          properties:
            industry:
              type: string
            name:
              type: string
            size:
              type: string
            ticker:
              type: string
            type:
              type: string
            url:
              format: uri
              type: string
          type: object
        role:
          properties:
            end_date:
              format: date
              type: string
            start_date:
              format: date
              type: string
            summary:
              type: string
            title:
              type: string
          type: object
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
      type: object
    User:
      properties:
        business_card:
          properties:
            company_name:
              type: string
            company_size:
              type: string
            headline:
              type: string
            industry:
              type: string
            interest_tags:
              items:
                type: string
              type: array
            job_position:
              type: string
            summary:
              type: string
            website:
              properties:
                thumbshot_uri:
                  format: uri
                  type: string
                url:
                  format: uri
                  type: string
              type: object
          type: object
        community_persona:
          $ref: "#/components/schemas/Member"
        id:
          format: int32
          type: number
        profile:
          properties:
            first_name:
              type: string
            last_name:
              type: string
          type: object
        usage:
          properties:
            available_status:
              type: boolean
            joined_timestamp:
              format: date-time
              type: string
            last_activity_timestamp:
              format: date-time
              type: string
            online_status:
              type: boolean
          type: object
      required:
        - id
      type: object
    User_data:
      properties:
        app:
          $ref: "#/components/schemas/App"
        content:
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        id:
          format: int32
          type: number
        owner:
          $ref: "#/components/schemas/User"
        settings:
          properties:
            privacy:
              type: string
          type: object
        status:
          properties:
            last_updated_timestamp:
              format: date-time
              type: string
          type: object
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
      type: object
    Webhook:
      properties:
        app:
          $ref: "#/components/schemas/App"
        event:
          properties:
            action:
              type: string
          type: object
        id:
          format: int32
          type: number
        name:
          type: string
        object:
          properties:
            id:
              format: int32
              type: number
            type:
              type: string
          type: object
        uri:
          format: uri
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
      type: object
  securitySchemes:
    explicit_flow:
      flows:
        authorizationCode:
          authorizationUrl: https://www.daniweb.com/connect/oauth/auth
          scopes:
            basic: "*Originally missing*"
            conversations_read: Access your DaniWeb conversations
            conversations_write: Manage your DaniWeb conversations
            groups_read: Access your DaniWeb groups
            groups_write: Manage your DaniWeb groups
            profile_read: Access your DaniWeb user profile
            profile_write: Manage your DaniWeb user profile
          tokenUrl: https://www.daniweb.com/connect/oauth/access_token
      type: oauth2
    implicit_flow:
      flows:
        implicit:
          authorizationUrl: https://www.daniweb.com/connect/oauth/auth
          scopes:
            basic: "*Originally missing*"
            conversations_read: Access your DaniWeb conversations
            conversations_write: Manage your DaniWeb conversations
            groups_read: Access your DaniWeb groups
            groups_write: Manage your DaniWeb groups
            profile_read: Access your DaniWeb user profile
            profile_write: Manage your DaniWeb user profile
      type: oauth2
