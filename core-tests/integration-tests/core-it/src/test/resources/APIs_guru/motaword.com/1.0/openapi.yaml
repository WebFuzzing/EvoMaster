openapi: 3.0.0
servers:
  - url: https://api.motaword.com
  - url: https://sandbox.motaword.com
  - url: http://localhost
info:
  description: Use MotaWord API to post and track your translation projects.
  title: MotaWord API
  version: "1.0"
  x-apiClientRegistration:
    url: https://www.motaword.com/developer/register
  x-apisguru-categories:
    - text
  x-cli-description: Use MotaWord CLI to interact with your MotaWord account in many ways to manage your translation and localization needs. Visit motaword.com/developer for details.
  x-cli-name: motaword
  x-logo:
    url: https://dentycj2qhk72.cloudfront.net/new/images/new_logo_horizontal.png
  x-origin:
    - format: openapi
      url: https://api.motaword.com/swagger
      version: "3.0"
  x-providerName: motaword.com
externalDocs:
  url: https://www.motaword.com/developer
security:
  - mwoAuth:
      - default
paths:
  /:
    get:
      description: |
        The root endpoint will provide you a JSON Swagger definition.
      operationId: getEndpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: JSON representation of our Swagger API definition.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Authentication error
      security: []
      summary: Available endpoints
      tags:
        - Static
      x-cli-cmd-group: static
    x-internal: true
  /async/download:
    get:
      description: Download async request files
      operationId: downloadAsync
      parameters:
        - description: Async operation key
          in: query
          name: async_request_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: File
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Download async request files
      tags:
        - Async
      x-cli-cmd-group: async
  /blogs:
    get:
      operationId: getBlogPosts
      parameters:
        - description: Article language, default `en`. When no blog article is available and `fallback=true` is specified, it falls back to `en`.
          in: query
          name: locale
          required: false
          schema:
            type: string
        - description: When `true`, and no article is found in the locale, it falls back to `locale=en`.
          in: query
          name: fallback
          required: false
          schema:
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogArticleList"
          description: List of blog articles
      summary: Get blog posts - ordered by created desc by default
      tags:
        - Blog
      x-cli-cmd-group: blog
    x-internal: true
  "/cache/{key}":
    delete:
      operationId: deleteCache
      parameters:
        - description: Cache key
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Operation status
      summary: Clear cache by key
  /commissions:
    get:
      operationId: getCommissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommissionList"
          description: Commissions for client.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnauthorizedUser
      summary: Returns a commission list of current client.
      tags:
        - Commission
      x-cli-cmd-group: commissions
    post:
      operationId: getCommissionsByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommissionList"
          description: Commissions for client.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnauthorizedUser
      summary: Returns a commission list of current client.
      tags:
        - Commission
      x-cli-cmd-group: commissions
    x-internal: true
  /continuous_projects:
    get:
      description: Get a list of continuous projects
      operationId: getContinuousProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContinuousProjectsList"
          description: Newly created continuous project
      summary: Get a list of continuous projects
      tags:
        - ContinuousProject
      x-cli-aliases:
        - list
      x-cli-cmd-group: continuous-projects
    post:
      description: Create a new continuous project
      operationId: createContinuousProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContinuousProject"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContinuousProject"
          description: Newly created continuous project
      summary: Create a new continuous project
      tags:
        - ContinuousProject
      x-cli-aliases:
        - create
      x-cli-cmd-group: continuous-projects
  "/continuous_projects/{id}":
    delete:
      description: Delete single continuous project
      operationId: deleteContinuousProject
      parameters:
        - description: Continuous project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Continuous project deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Delete single continuous project
      tags:
        - ContinuousProject
      x-cli-aliases:
        - delete
      x-cli-cmd-group: continuous-projects
    get:
      description: Get single continuous project
      operationId: getContinuousProject
      parameters:
        - description: Continuous Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContinuousProject"
          description: ContinuousProject model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get single continuous project
      tags:
        - ContinuousProject
      x-cli-aliases:
        - get
      x-cli-cmd-group: continuous-projects
    post:
      description: Update continuous project
      operationId: updateContinuousProject
      parameters:
        - description: Continuous project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContinuousProjectUpdateContent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContinuousProject"
          description: Update continuous project operation status
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Update continuous project
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
  "/continuous_projects/{id}/analytics-token":
    get:
      description: Get JWT token to be used in analytics dashboards
      operationId: getAnalyticsToken
      parameters:
        - description: Continuous project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsToken"
          description: JWT token result
      summary: Get JWT token to be used in analytics dashboards
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
    x-internal: true
  "/continuous_projects/{id}/collect-analytics":
    post:
      description: Save/collect analytics data from Active widget
      operationId: collectAnalytics
      parameters:
        - description: Continuous project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyticsCollection"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Analytics data collection result
      summary: Save/collect analytics data from Active widget
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
    x-internal: true
  "/continuous_projects/{id}/translate/{targetLanguage}":
    post:
      description: Instantly translate your content with your existing TM and MT resources.
      operationId: translate
      parameters:
        - description: Continuous project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Target language that you want to instantly translate your file into.
          in: path
          name: targetLanguage
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contents:
                  description: Simple list of strings to be translated. You can also choose to upload files instead of strings.
                  items:
                    type: string
                  type: array
                documents:
                  description: You can add as many files as you want in documents parameter.
                  items:
                    $ref: "#/components/schemas/FileAsData"
                  type: array
                meta:
                  description: Free-form meta data to attach to your instant translation request. This can be used in statistics and analytical dashboards.
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  results:
                    oneOf:
                      - $ref: "#/components/schemas/InstantContentsTranslationResult"
                      - $ref: "#/components/schemas/InstantFilesTranslationResult"
                type: object
          description: Instant translation result. It may return a list of translated strings, or a list of translated files.
      summary: Instantly translate your content with your existing TM and MT resources.
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
  "/continuous_projects/{projectId}/widgets":
    get:
      description: Get widgets for this Active project
      operationId: getActiveWidgets
      parameters:
        - description: Continuous Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWidgetList"
          description: List of widgets
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get widgets for this Active project
      tags:
        - ContinuousProject
      x-cli-aliases:
        - widgets
      x-cli-cmd-group: continuous-projects
    post:
      description: Create a new Active widget. This does not create a new Active project, just a separate widget.
      operationId: createActiveWidget
      parameters:
        - description: Continuous project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActiveWidget"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWidget"
          description: Updated widget details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound | ActiveWidgetNotFound | UnauthorizedUser
      summary: Create a new Active widget. This does not create a new Active project, just a separate widget.
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
  "/continuous_projects/{projectId}/widgets/{widgetId}":
    delete:
      description: Delete a single widget for this Active project
      operationId: deleteActiveWidget
      parameters:
        - description: Continuous Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Active widget ID belonging to this Continuous Project
          in: path
          name: widgetId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Delete operation result
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound | ActiveWidgetNotFound | UnauthorizedUser
      summary: Delete a single widget for this Active project
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
    get:
      description: Get a single widget for this Active project
      operationId: getActiveWidget
      parameters:
        - description: Continuous Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Active widget ID belonging to this Continuous Project
          in: path
          name: widgetId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWidget"
          description: Active widget details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound | ActiveWidgetNotFound
      summary: Get a single widget for this Active project
      tags:
        - ContinuousProject
      x-cli-aliases:
        - widget
      x-cli-cmd-group: continuous-projects
    post:
      description: Update Active widget settings.
      operationId: updateActiveWidget
      parameters:
        - description: Continuous Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Active widget ID belonging to this Continuous Project
          in: path
          name: widgetId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActiveWidget"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWidget"
          description: Updated widget details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound | ActiveWidgetNotFound | UnauthorizedUser
      summary: Update Active widget settings.
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
  "/continuous_projects/{projectId}/widgets/{widgetId}/reset-token":
    post:
      description: Resets the access token of the Active widget.
      operationId: resetActiveWidgetToken
      parameters:
        - description: Continuous Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Active widget ID belonging to this Continuous Project
          in: path
          name: widgetId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveWidget"
          description: Updated widget details
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound | ActiveWidgetNotFound | UnauthorizedUser
      summary: Resets the access token of the Active widget.
      tags:
        - ContinuousProject
      x-cli-cmd-group: continuous-projects
  /corporate:
    get:
      description: Get details of my corporate account
      operationId: getCorporate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorporateAccount"
          description: Corporate account details
      summary: Get details of my corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
  /corporate/permissions:
    get:
      description: Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
      operationId: getAvailableCorporatePermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionList"
          description: List of permission strings
      summary: Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
      tags:
        - Corporate
      x-cli-cmd-group: corporates
  /corporate/user-groups:
    get:
      description: Get a list of user groups for my corporate account
      operationId: getCorporateUserGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupList"
          description: User group list
      summary: Get a list of user groups for my corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    post:
      description: Create or update a corporate user group
      operationId: saveCorporateUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserGroup"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroup"
          description: User group list
      summary: Create or update a corporate user group
      tags:
        - Corporate
      x-cli-cmd-group: corporates
  /corporate/users:
    get:
      description: Get a list of users for my corporate account
      operationId: getCorporateUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
          description: User list
      summary: Get a list of users for my corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    post:
      description: Create or update a corporate user
      operationId: saveCorporateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Created or updated user
      summary: Create or update a corporate user
      tags:
        - Corporate
      x-cli-cmd-group: corporates
  "/corporates/{corporateId}":
    get:
      description: Get details of this corporate account
      operationId: getCorporateById
      parameters:
        - description: Corporate ID
          in: path
          name: corporateId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorporateAccount"
          description: Corporate account details
      summary: Get details of this corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    x-internal: true
  "/corporates/{corporateId}/permissions":
    get:
      description: Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
      operationId: getAvailableCorporatePermissionsById
      parameters:
        - description: Corporate ID
          in: path
          name: corporateId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionList"
          description: List of permission strings
      summary: Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    x-internal: true
  "/corporates/{corporateId}/user-groups":
    get:
      description: Get a list of user groups for this corporate account
      operationId: getCorporateUserGroupsById
      parameters:
        - description: Corporate ID
          in: path
          name: corporateId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupList"
          description: User group list
      summary: Get a list of user groups for this corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    post:
      description: Create or update a corporate user group for this corporate account
      operationId: saveCorporateUserGroupById
      parameters:
        - description: Corporate ID
          in: path
          name: corporateId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserGroup"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroup"
          description: User group list
      summary: Create or update a corporate user group for this corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    x-internal: true
  "/corporates/{corporateId}/users":
    get:
      description: Get a list of users for this corporate account
      operationId: getCorporateUsersById
      parameters:
        - description: Corporate ID
          in: path
          name: corporateId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
          description: User list
      summary: Get a list of users for this corporate account
      tags:
        - Corporate
      x-cli-cmd-group: corporates
    x-internal: true
  /delete-account:
    delete:
      operationId: deleteAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Delete requester account
      tags:
        - User
      x-cli-cmd-group: users
  /documents:
    get:
      description: Get a list of your documents
      operationId: getDocuments
      parameters:
        - description: When true, this will return the most 4 recent active documents.
          in: query
          name: recent
          required: false
          schema:
            default: 0
            type: boolean
        - in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: type_filter
          required: false
          schema:
            default: ALL
            enum:
              - ALL
              - TEXT_DOCUMENTS
              - PRESENTATIONS
              - SPREADSHEETS
              - PDFS
              - IMAGES
              - SUBTITLES
              - DESIGNS
              - LOCALIZATION
              - WEB
              - STYLE_GUIDES
              - GLOSSARIES
            type: string
        - description: searches in source language of documents, in source and target languages of document's quote
          in: query
          name: language_code
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
        - in: query
          name: order_by
          required: false
          schema:
            default: updated_at
            enum:
              - id
              - updated_at
              - created_at
              - name
            type: string
        - in: query
          name: order_type
          required: false
          schema:
            $ref: "#/components/schemas/ListOrderType"
            default: desc
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
                - editors
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
          description: Document list
      summary: Get a list of your documents
      tags:
        - Document
      x-cli-cmd-group: documents
  "/documents/{documentId}/regenerate_preview":
    post:
      description: Regenerate preview and return preview URL for given file
      operationId: regeneratePreview
      parameters:
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegeneratePreviewResponse"
          description: RegeneratePreviewResponse
      summary: Regenerate preview and return preview URL for given file
      tags:
        - Document
      x-cli-cmd-group: documents
    x-internal: true
  "/documents/{documentId}/similars":
    get:
      description: Find documents similar to this document. Optionally, include translation information.
      operationId: getSimilarDocuments
      parameters:
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
        - description: Determines the number of similar documents to return.
          in: query
          name: per_page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
                - editors
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
          description: Document list
      summary: Find documents similar to this document.
      tags:
        - Document
      x-cli-cmd-group: documents
    x-internal: true
  "/documents/{documentId}/use_as_draft":
    post:
      description: Use the translation of given source manual document as manual draft source for the given target document.
      operationId: useAsDraft
      parameters:
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UseAsDraftPayload"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Operation status
      summary: Use the translation of given source manual document as manual draft source for the given target document.
      tags:
        - Document
      x-cli-cmd-group: documents
    x-internal: true
  "/documents/{documentId}/use_as_regular":
    post:
      description: Use the translation of the given manual document as a regular file.
      operationId: useAsRegular
      parameters:
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UseAsRegularPayload"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Operation status
      summary: Use the translation of the given manual document as a regular file.
      tags:
        - Document
      x-cli-cmd-group: documents
    x-internal: true
  /downgrade-proofreader:
    post:
      operationId: downgradeProofreader
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Vendor is already a translator
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  /earnings:
    get:
      operationId: getEarnings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Earnings"
          description: Earnings for vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns your vendor earnings. Includes real-time earnings from ongoing projects, and fixed earnings from completed projects. Also includes total earnings and string edits.
      tags:
        - User
      x-cli-cmd-group: users
  /formats:
    get:
      description: |
        Get a list of supported formats for documents, style guides and extensions.
      operationId: getFormats
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Formats"
                type: object
          description: A list of supported formats
      security: []
      summary: Get a list of supported formats
      tags:
        - Static
      x-cli-cmd-group: static
  /freeze-account:
    post:
      operationId: freezeAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Account is already frozen for notifications
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Freeze requester account for project notifications
      tags:
        - User
      x-cli-cmd-group: users
  /glossary:
    get:
      description: Download your corporate account's global glossary. This endpoint is available only for corporate account customers.
      operationId: downloadGlobalGlossary
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Glossary file streamed.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: GlossaryNotFound
      summary: Download the global glossary.
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
    post:
      description: Update your corporate account's global glossary. This endpoint is available only for corporate account customers.
      operationId: updateGlobalGlossary
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                glossary:
                  description: |
                    Glossary file. Currently supported formats: .xlsx, .tbx
                  format: binary
                  type: string
              required:
                - glossary
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall NoFileUploaded
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedGlossaryFormat
      summary: Create or update the global glossary.
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
  /invitation/vendors:
    post:
      description: Get vendor list for compiled invitation needs
      operationId: getInvitationVendors
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/FileNeedsVendor"
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendorInvitationList"
          description: Invitation need grouped by vendor
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall NoFileUploaded
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedGlossaryFormat
      summary: Get vendor list for compiled invitation needs
      tags:
        - Invitation
  /languages:
    get:
      description: Get a list of supported languages
      operationId: getLanguages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Language"
                type: array
          description: A list of supported languages
      security: []
      summary: Get a list of supported languages
      tags:
        - Static
      x-cli-cmd-group: static
  /location:
    post:
      operationId: logLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateContent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Log user's current location. This data is used in our Intelligent Project Manager for various data analysis, including project prioritization for vendors and account validation.
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  /make-proofreader:
    post:
      operationId: makeProofreader
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Vendor is already a proofreader
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  /me:
    get:
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User summary
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Get your user information, including client or vendor specific info.
      tags:
        - User
      x-cli-cmd-group: users
    post:
      operationId: updateMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateContent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User info
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Update your user information.
      tags:
        - User
      x-cli-cmd-group: users
  /notifications/subscribe:
    post:
      operationId: subscribeNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSubscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Saved notification subscription information
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingParameter | Failed to save subscription
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      tags:
        - User
      x-cli-cmd-group: users
  /notifications/unsubscribe:
    post:
      operationId: unsubscribeNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSubscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Deleted notification subscription information
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingParameter | Failed to delete subscription
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      tags:
        - User
      x-cli-cmd-group: users
  "/pam/profiles/client/{clientId}":
    get:
      description: Get the Pam  profile of a client for this client ID
      operationId: getClientProfileForPam
      parameters:
        - description: Client ID
          in: path
          name: clientId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientProfile"
          description: Client profile
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ClientProfileNotFound
      summary: Get the Pam profile of a client for this client ID
      tags:
        - Pam
      x-cli-cmd-group: pam
    x-internal: true
  /password:
    post:
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordUpdateContent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Update user password. Password should contain at least one uppercase, lowercase character and one number
      tags:
        - User
      x-cli-cmd-group: users
  /payment:
    get:
      operationId: getPaymentInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInfo"
          description: Returns billing and saved card information for user, and their corporate if present.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound UnauthorizedUser
      summary: Get your payment Info
      tags:
        - User
      x-cli-cmd-group: users
    post:
      operationId: updatePaymentInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePaymentInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInfo"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Update payment info
      tags:
        - User
      x-cli-cmd-group: users
  /payment/reset-corporate-payment-code:
    get:
      operationId: resetCorporatePaymentCode
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditCard"
          description: Credit card content
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound UnauthorizedUser MissingCorporateAccount
      summary: Reset corporate credit card payment code.
      tags:
        - Payment
      x-cli-cmd-group: payment
  /payment/toggle-corporate-auto-charge:
    get:
      operationId: toggleCorporateAutoCharge
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound UnauthorizedUser MissingCorporateAccount
      summary: Toggle corporate auto charge option.
      tags:
        - Payment
      x-cli-cmd-group: payment
  "/payment/{cardId}":
    get:
      operationId: getCreditCard
      parameters:
        - description: Credit Card ID
          in: path
          name: cardId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditCard"
          description: Credit card content
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingCreditCard
      summary: Get credit card by cardId
      tags:
        - Payment
      x-cli-cmd-group: payment
  "/payment/{cardId}/delete":
    delete:
      operationId: deleteCreditCard
      parameters:
        - description: Credit Card ID
          in: path
          name: cardId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound MissingCorporateAccount MissingParameter MissingCreditCard UnauthorizedUser
      summary: Delete credit card.
      tags:
        - Payment
      x-cli-cmd-group: payment
  "/payment/{cardId}/reset-payment-code":
    post:
      operationId: resetCardPaymentCode
      parameters:
        - description: Credit Card ID
          in: path
          name: cardId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditCard"
          description: Credit card content
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound MissingCorporateAccount MissingParameter MissingCreditCard UnauthorizedUser
      summary: Reset credit card payment code.
      tags:
        - Payment
      x-cli-cmd-group: payment
  /permissions:
    get:
      operationId: getPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionList"
          description: List of permission strings
      summary: Returns a list of permissions that this user is authorized for.
      tags:
        - User
      x-cli-cmd-group: users
  /profile-picture:
    post:
      operationId: uploadProfilePicture
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                profile_picture:
                  description: Profile picture file contents. Accepted extensions are png, jpg.
                  format: binary
                  type: string
              required:
                - profile_picture
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Email already exists
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      tags:
        - User
      x-cli-cmd-group: users
  /projects:
    get:
      description: Get a list of your projects
      operationId: getProjects
      parameters:
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
        - description: Filter projects by status. Accepts multiple statuses. Possible values 'pending', 'started', 'completed'
          in: query
          name: status[]
          required: false
          schema:
            items:
              $ref: "#/components/schemas/ProjectStatus"
              description: progress-related project status enums are not supported, such as "translated", "proofread".
            type: array
        - deprecated: true
          description: deprecated. use `status[]` param.
          in: query
          name: with_pending
          required: false
          schema:
            default: true
            type: boolean
        - deprecated: true
          description: deprecated. use `status[]` param.
          in: query
          name: with_started
          required: false
          schema:
            default: true
            type: boolean
        - deprecated: true
          description: deprecated. use `status[]` param.
          in: query
          name: with_completed
          required: false
          schema:
            default: true
            type: boolean
        - in: query
          name: order_by
          required: false
          schema:
            default: id
            enum:
              - id
              - status
              - delivery
              - price
            type: string
        - in: query
          name: order_type
          required: false
          schema:
            $ref: "#/components/schemas/ListOrderType"
            default: desc
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
          description: Project list
      summary: Get a list of your projects
      tags:
        - Project
      x-cli-cmd-group: projects
    post:
      description: Create a new project
      operationId: createProject
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                callback_url:
                  description: Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
                  type: string
                coupon_code:
                  description: Coupon code to redeem
                  type: string
                custom:
                  description: Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value.
                  items:
                    type: string
                  type: array
                "documents[]":
                  description: Optional. You can add as many files as you want in documents[] parameter. Or you add your documents later in separate calls.
                  format: binary
                  type: string
                "glossaries[]":
                  description: Optional. Only one glossary is supported at the moment.
                  format: binary
                  type: string
                source_language:
                  type: string
                "styleguides[]":
                  description: Optional. You can add as many files as you want in styleguides[] parameter. Or you add your style guides later in separate calls.
                  format: binary
                  type: string
                "target_languages[]":
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Newly created project
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedDocumentFormat UnsupportedStyleGuideFormat UnsupportedGlossaryFormat
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedLanguage TooManyGlossaries ProjectAlreadyHasGlossary
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectInsertFailed
      summary: Get a new quote
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/from-internal-id/{projectId}":
    get:
      description: Get Quote Id
      operationId: getQuoteIdFromInternalId
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  internal-id:
                    format: int64
                    type: integer
                  public-id:
                    format: int64
                    type: integer
                type: object
          description: QuoteId
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get Quote Id
      tags:
        - Project
      x-cli-cmd-group: projects
    x-internal: true
  /projects/vendor:
    get:
      description: Get a list of your vendor projects
      operationId: getVendorProjects
      parameters:
        - description: Return only projects that this user has already joined
          in: query
          name: joined
          required: false
          schema:
            type: boolean
        - description: Return only projects that have been completed. When `true`, this makes `joined` true as well.
          in: query
          name: completed
          required: false
          schema:
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
          description: Vendor project list
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound - this is not a vendor user account
      summary: Get a list of your vendor projects
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}":
    delete:
      description: Delete(cancel) a project.
      operationId: deleteProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Project canceled successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Delete a project
      tags:
        - Project
      x-cli-cmd-group: projects
    get:
      description: Get single project
      operationId: getProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Include detailed information. Possible values 'client', 'vendor', 'score'
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - client
                - vendor
                - score
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Project model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get single project
      tags:
        - Project
      x-cli-cmd-group: projects
    put:
      description: Update project language pairs
      operationId: updateProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                callback_url:
                  description: Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
                  type: string
                coupon_code:
                  description: Coupon code to redeem
                  type: string
                custom:
                  description: Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value. If you previously provided one, it will be replaced.
                  items:
                    type: string
                  type: array
                source_language:
                  type: string
                "target_languages[]":
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Updated project
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedLanguage
      summary: Update project language pairs
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/callback/{actionType}":
    get:
      description: Trigger a call to your callback URL related to this project.
      operationId: triggerCallback
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Callback type
          in: path
          name: actionType
          required: true
          schema:
            enum:
              - translated
              - proofread
              - completed
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallbackResult"
          description: Callback result
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Trigger a call to your callback URL related to this project.
      tags:
        - Project
      x-cli-cmd-group: projects
    x-internal: true
  "/projects/{id}/cancel":
    post:
      operationId: cancelProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                reason:
                  description: Cancellation reason
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Project canceled successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Cancel your translation project
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/deliver":
    post:
      operationId: deliverProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Operation started successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Deliver project
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/download":
    get:
      description: Download the latest translation package. You must have given a /package call beforehand and wait until the packaging status is 'completed'.
      operationId: download
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: TranslationPackageNotFound
      summary: Download the latest translation package.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/download/{language}":
    get:
      description: Download only the translation package of this language. You must have given a /package call beforehand and wait until the packaging status is 'completed'.
      operationId: downloadLanguage
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Language code. You can download the translation of only a specific language.
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: TranslationPackageNotFound
      summary: Download the latest translation package.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/invoice":
    get:
      description: Get invoice details
      operationId: getInvoice
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
          description: Invoice
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound or InvoiceNotFound
      summary: Get invoice details
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/invoice.html":
    get:
      description: Download invoice as html by project id.
      operationId: downloadHtmlInvoice
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Invoice
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound or InvoiceNotFound
      summary: Download invoice as hmtl
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/invoice.pdf":
    get:
      description: Download invoice as pdf by project id.
      operationId: downloadPdfInvoice
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Invoice
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound or InvoiceNotFound
      summary: Download invoice as pdf
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/launch":
    post:
      operationId: launchProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                bin:
                  description: Last 4 digits of the credit card you are using one-time. This parameter is only required when stripe_token is provided.
                  type: string
                budget_code:
                  description: Optional with corporate accounts. Not available for others.
                  type: string
                card_id:
                  description: Optional. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin.
                  format: int64
                  type: integer
                payment_code:
                  description: Optional. `corporate` payment method requires this.s
                  type: string
                payment_method:
                  description: Optional. Determines which method to use for payment. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin. `corporate` method follows corporate account policy automatically, either follows invoicing flow or automatically charges corporate's primary card.
                  enum:
                    - corporate
                    - client
                    - app
                    - credit
                    - corporate_card
                  type: string
                stripe_token:
                  description: This is required if you are using a one-time credit card. This is the token generted from frontend via Stripe SDK. If you are using a one-time card with `stripe_token`, you must also provide `bin`, last 4 digits of the card.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectLaunchResponse"
          description: Project launched successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingPaymentCode MissingCorporateAccount MissingPaymentMethod
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: CorporateAccountNotAllowedForApiPayment ApiClientMissingPaymentInformation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Launch your translation project
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/package":
    post:
      description: Package the translation project, make it ready to be downloaded.
      operationId: package
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
          in: query
          name: async
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Packaged translation streamed.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: TranslationPackageNotFound
      summary: Package the translation of all languages to be downloaded.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/package/check":
    get:
      description: This request will tell you the current progress of the translation packaging. You will use the 'key' provided by the /package call.
      operationId: trackPackage
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: This is the package tracking key provided in the response of a /package call.
          in: query
          name: key
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageStatus"
          description: Current status of packaging process.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: PackagingStatusMissing
      summary: Track the status of translation packaging.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/package/{language}":
    post:
      description: Package the translation project, make it ready to be downloaded.
      operationId: packageLanguage
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Language code. You can package the translation of only a specific language.
          in: path
          name: language
          required: true
          schema:
            type: string
        - description: If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
          in: query
          name: async
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Packaging status and tracking code. With the package key, you can track the progress of translation packaging.Also packaged translation streamed.
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: TranslationPackageNotFound
      summary: Package the translation of a specific target language to be downloaded.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/progress":
    get:
      description: Get the progress of an already launched project.
      operationId: getProgress
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: This will return a more raw progress information for translation and proofreading. For instance, when completed, we will return 100% for both tasks by default, whereas their actual progress may be lower than 100%.
          in: query
          name: raw
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Progress"
          description: Progress information
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get project progress
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/recreate":
    post:
      operationId: recreateProject
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Project recreation process started successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnauthorizedUser
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Recreate your translation project from scratch. This is a risky action, you will lose current translations.
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/reports":
    post:
      operationId: submitProjectReports
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                activity_type:
                  description: Activity Type
                  type: string
                message:
                  description: Report Message
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Report submitted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingMessage
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Submit reports for a project
      tags:
        - Project
      x-cli-cmd-group: projects
  "/projects/{id}/sales/activities":
    get:
      operationId: getSalesActivities
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: excludeOwner
          required: false
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            $ref: "#/components/schemas/SalesActivityType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesActivities"
          description: Activities fetched successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get sales activities for a project
      tags:
        - Activity
      x-cli-cmd-group: activities
    post:
      operationId: insertSalesActivity
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                subject:
                  type: string
                timestamp:
                  format: int64
                  type: integer
                type:
                  description: Activity Type
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Acvitity inserted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: BadRequest
      summary: Insert sales activity for a project
      tags:
        - Activity
      x-cli-cmd-group: activities
    x-internal: true
  "/projects/{id}/webhooks":
    delete:
      description: Delete project webhooks. Projects currently support registering only 1 webhook. This endpoint deletes the previously registered webhook.
      operationId: deleteProjectWebhook
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Project webhook deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Delete project webhooks
      tags:
        - Project Webhooks
      x-cli-cmd-group: webhooks
    get:
      description: Get project information (includes callback_url for webhook). Currently projects can have only 1 webhook registered.
      operationId: getProjectWebhooks
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Project model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get project information (includes callback_url for webhook)
      tags:
        - Project Webhooks
      x-cli-cmd-group: webhooks
    post:
      description: Update project webhook URL
      operationId: postProjectWebhook
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                callback_url:
                  description: Webhook URL. We will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Updated project
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Update project webhook URL
      tags:
        - Project Webhooks
      x-cli-cmd-group: webhooks
    put:
      description: Update project webhook URL
      operationId: updateProjectWebhook
      parameters:
        - description: Project ID
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                callback_url:
                  description: Webhook URL. We will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
          description: Updated project
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Update project webhook URL
      tags:
        - Project Webhooks
      x-cli-cmd-group: webhooks
  "/projects/{projectId}/activities":
    get:
      description: Get a list of realtime activities on the project, such as translation suggestion and translation approval.
      operationId: getActivities
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          schema:
            default: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityList"
          description: A list of activity models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of realtime activities.
      tags:
        - Activity
      x-cli-cmd-group: activities
  "/projects/{projectId}/activities/{activityId}":
    get:
      description: Get a single realtime activity.
      operationId: getActivity
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Activity ID
          in: path
          name: activityId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
          description: Activity model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectActivityNotFound
      summary: Get a single realtime activity.
      tags:
        - Activity
      x-cli-cmd-group: activities
    post:
      description: Submit a comment to an activity.
      operationId: submitComment
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Activity ID
          in: path
          name: activityId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                comment:
                  description: Comment text.
                  type: string
              required:
                - comment
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
          description: Comment model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectActivityNotFound
      summary: Submit a comment to an activity.
      tags:
        - Activity
      x-cli-cmd-group: activities
  "/projects/{projectId}/activities/{activityId}/comments":
    get:
      description: Get a list of comments belonging to this activity.
      operationId: getActivityComments
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Activity ID
          in: path
          name: activityId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentList"
          description: A list of Comment models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectActivityNotFound
      summary: Get a list of comments belonging to this activity.
      tags:
        - Activity
      x-cli-cmd-group: activities
  "/projects/{projectId}/comments":
    get:
      description: Get a list of activity comments throughout the whole project.
      operationId: getComments
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          schema:
            default: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentList"
          description: A list of Comment models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of activity comments throughout the whole project.
      tags:
        - Activity
      x-cli-cmd-group: activities
  "/projects/{projectId}/documents":
    get:
      description: Get a list of documents
      operationId: getProjectDocuments
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
                - editors
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
          description: A list of document models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of documents
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
    post:
      description: Upload a new document
      operationId: createProjectDocument
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                "documents[]":
                  description: You can add as many files as you want in documents[] parameter.
                  items:
                    format: binary
                    type: string
                  type: array
                "schemes[]":
                  description: JSON string. If your documents have a scheme, as in cases of CSV files, use the same array index keys for `schemes` parameter to specify their schemes. See `Document Schemes` title in the API documentation.
                  type: string
                "source-links[]":
                  description: When provided, we will download the files from these URLs, in addition to files provded in `documents` parameter and then save as source documents
                  items:
                    $ref: "#/components/schemas/LinkedSourceDocument"
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
          description: A list of successfully added new documents.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedDocumentFormat
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: InvalidDocumentScheme
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Upload a new document
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
  "/projects/{projectId}/documents/{documentId}":
    delete:
      description: Delete the document
      operationId: deleteProjectDocument
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Document deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: DocumentNotFound
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Delete the document
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
    get:
      description: Get single document
      operationId: getProjectDocument
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
                - editors
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: Document model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: DocumentNotFound
      summary: Get single document
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
    post:
      description: Update the document. File name and contents will replaced with the new one.
      operationId: updateProjectDocument
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                documents:
                  description: Single file data. The name is plural to provide a consistent naming convention.
                  format: binary
                  type: string
                schemes:
                  description: JSON string. If your documents have a scheme, as in cases of CSV files, use the same array index keys for `schemes` parameter to specify their schemes. See `Document Schemes` title in the API documentation.
                  type: string
                source-link:
                  $ref: "#/components/schemas/LinkedSourceDocument"
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          description: Updated document model
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: DocumentNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedDocumentFormat
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: InvalidDocumentScheme
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Update the document.
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
  "/projects/{projectId}/documents/{documentId}/download":
    get:
      description: Download a document
      operationId: downloadProjectDocument
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Document streamed
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: DocumentNotFound
      summary: Download a document
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
  "/projects/{projectId}/documents/{documentId}/translations":
    get:
      operationId: getDocumentTranslations
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Get a list of strings and its translations in the document.
      tags:
        - Translations
      x-cli-cmd-group: translations
  "/projects/{projectId}/documents/{documentId}/translations/download/{language}":
    get:
      operationId: downloadTranslatedDocumentForLanguage
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
        - description: Target language code.
          in: path
          name: language
          required: true
          schema:
            type: string
        - description: Download certified translation
          in: query
          name: certified
          required: false
          schema:
            default: 0
            type: boolean
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: File
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: DocumentNotFound
      summary: Download single translated file
      tags:
        - Project Document
      x-cli-cmd-group: project-documents
  "/projects/{projectId}/documents/{documentId}/translations/{language}":
    get:
      operationId: getDocumentTranslationsForLanguage
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Document ID
          in: path
          name: documentId
          required: true
          schema:
            format: int64
            type: integer
        - description: Target language code.
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Get a list of strings and its translations in the document for this target language of the project.
      tags:
        - Translations
      x-cli-cmd-group: translations
  "/projects/{projectId}/glossaries":
    get:
      description: Get a list of glossaries
      operationId: getGlossaries
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlossaryList"
          description: A list of glossary models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of glossaries
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
    post:
      description: Upload a new glossary
      operationId: createGlossary
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                glossaries:
                  description: You can only add one glossary, even though the name suggests multiple glossaries. This may be updated in the future to support multiple glossaries.
                  format: binary
                  type: string
              required:
                - glossaries
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Glossary"
          description: Newly created glossary model.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedGlossaryFormat
        "406":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyHasGlossary
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Upload a new glossary
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
  "/projects/{projectId}/glossaries/{glossaryId}":
    delete:
      description: Delete the glossary
      operationId: deleteGlossary
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Glossary ID
          in: path
          name: glossaryId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Glossary deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: GlossaryNotFound
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Delete the glossary
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
    get:
      description: Get single glossary
      operationId: getGlossary
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Glossary ID
          in: path
          name: glossaryId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Glossary"
          description: Glossary model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: GlossaryNotFound
      summary: Get single glossary
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
    put:
      description: Update the glossary. File name and contents will replaced with the new one.
      operationId: updateGlossary
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Glossary ID
          in: path
          name: glossaryId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                glossaries:
                  description: Single file data. The name is plural to provide a consistent naming convention.
                  format: binary
                  type: string
              required:
                - glossaries
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Glossary"
          description: Updated glossary model
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: GlossaryNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedGlossaryFormat
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Update the glossary.
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
  "/projects/{projectId}/glossaries/{glossaryId}/download":
    get:
      description: Download a glossary
      operationId: downloadGlossary
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Glossary ID
          in: path
          name: glossaryId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Glossary streamed
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: GlossaryNotFound
      summary: Download a glossary
      tags:
        - Glossary
      x-cli-cmd-group: glossaries
  "/projects/{projectId}/strings":
    get:
      operationId: getProjectStrings
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Get a list of strings and its translations in the project.
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/strings/package":
    post:
      operationId: packageProjectTranslationMemory
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: If you want to package and download the translation memory synchronously, mark this parameter as '0'. It will package the translation memory and then return the packaged file in the response, identical to async/download call after an asynchronous /package call.
          in: query
          name: async
          schema:
            default: 0
            format: int64
            type: integer
        - description: Translation Memory file format
          in: query
          name: format
          required: false
          schema:
            default: tmx
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
            application/xml:
              schema:
                format: binary
                type: string
          description: Response in TMX or async request
      summary: Get the translation memory of a project in TMX format
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/strings/package/status":
    get:
      operationId: packageProjectTranslationMemoryStatus
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Async operation key
          in: query
          name: async_request_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
          description: Async operation status. Use the key to query status of this operation.
      summary: If package call was async, check the status of the request
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/strings/{languageCode}/package":
    post:
      operationId: packageProjectTranslationMemoryForLanguage
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Language Code
          in: path
          name: languageCode
          required: true
          schema:
            type: string
        - description: If you want to package and download the translation memory synchronously, mark this parameter as '0'. It will package the translation memory and then return the packaged file in the response, identical to async/download call after an asynchronous /package call.
          in: query
          name: async
          schema:
            default: 0
            format: int64
            type: integer
        - description: Translation Memory file format
          in: query
          name: format
          required: false
          schema:
            default: tmx
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
            application/xml:
              schema:
                format: binary
                type: string
          description: Response in TMX or async request
      summary: Get the translation memory of a project in TMX format
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/strings/{languageCode}/package/status":
    get:
      operationId: packageProjectTranslationMemoryForLanguageStatus
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Language Code
          in: path
          name: languageCode
          required: true
          schema:
            type: string
        - description: Async operation key
          in: query
          name: async_request_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
          description: Async operation status. Use the key to query status of this operation.
      summary: If package call was async, check the status of the request
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/strings/{language}":
    get:
      operationId: getProjectStringsForLanguage
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Target language code
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Get a list of strings and its translations in the project for this target language in the project.
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/projects/{projectId}/styleguides":
    get:
      description: Get a list of style guides
      operationId: getStyleGuides
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StyleGuideList"
          description: A list of style guide models
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of style guides
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
    post:
      description: Upload a new style guide
      operationId: createStyleGuide
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                "styleguides[]":
                  description: You can add as many files as you want in styleguides[] parameter.
                  format: binary
                  type: string
              required:
                - styleguides[]
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StyleGuideList"
          description: Newly created style guide model or a list of new style guide models
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedStyleGuideFormat
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Upload a new style guide
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
  "/projects/{projectId}/styleguides/{styleGuideId}":
    delete:
      description: Delete the style guide
      operationId: deleteStyleGuide
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Style Guide ID
          in: path
          name: styleGuideId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Style guide deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: StyleGuideNotFound
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Delete the style guide
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
    get:
      description: Get single style guide
      operationId: getStyleGuide
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Style Guide ID
          in: path
          name: styleGuideId
          required: true
          schema:
            format: int64
            type: integer
        - description: Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - preview
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StyleGuide"
          description: Style guide model
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: StyleGuideNotFound
      summary: Get single style guide
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
    put:
      description: Update the style guide. File name and contents will replaced with the new one.
      operationId: updateStyleGuide
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Style guide ID
          in: path
          name: styleGuideId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                styleguides:
                  description: Single file data. The name is plural to provide a consistent naming convention.
                  format: binary
                  type: string
              required:
                - styleguides
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StyleGuide"
          description: Updated style guide model
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: StyleGuideNotFound
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedStyleGuideFormat
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectAlreadyStarted
      summary: Update the style guide.
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
  "/projects/{projectId}/styleguides/{styleGuideId}/download":
    get:
      description: Download a style guide
      operationId: downloadStyleGuide
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Style Guide ID
          in: path
          name: styleGuideId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Style guide streamed
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: StyleGuideNotFound
      summary: Download a style guide
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
  "/projects/{projectId}/translations":
    get:
      deprecated: true
      operationId: getProjectTranslations
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Deprecated. Use /projects/{projectId}/strings instead.
      tags:
        - Translations
      x-cli-cmd-group: translations
  "/projects/{projectId}/translations/{language}":
    get:
      deprecated: true
      operationId: getProjectTranslationsForLanguage
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
        - description: Target language code
          in: path
          name: language
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringList"
          description: Response for strings and their translations
      summary: Deprecated. use /projects/{projectId}/strings/{language} instead.
      tags:
        - Translations
      x-cli-cmd-group: translations
  "/projects/{projectId}/vendors":
    get:
      description: Get a list of vendors.
      operationId: getProjectVendors
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
          description: User list
        "402":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotLaunchedYet
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: ProjectNotFound
      summary: Get a list of vendors.
      tags:
        - Project
      x-cli-cmd-group: projects
    x-internal: true
  /reports/language-pairs:
    post:
      operationId: getLanguagePairsReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanguagePairsReport"
          description: Language pairs stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns a report of language pairs.
      tags:
        - Report
      x-cli-cmd-group: reports
  /reports/projects:
    post:
      operationId: getProjectsReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns a report of corporate account users.
      tags:
        - Report
      x-cli-cmd-group: reports
  /reports/users:
    post:
      operationId: getUsersReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersReport"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns a report of corporate account users.
      tags:
        - Report
      x-cli-cmd-group: reports
  /resend-email-confirmation:
    post:
      operationId: sendEmailConfirmation
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OperationStatus"
                  - properties:
                      status:
                        default: success
                        enum:
                          - success
                          - already_confirmed
                        type: string
                    type: object
          description: When confirmation email is sent, status is `success`, or `already_confirmed` when user has already confirmed their email address.
      summary: Sends email confirmation email for current user
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  /responsivity:
    get:
      operationId: getResponsivity
      parameters:
        - description: Period for calcualtion.
          in: query
          name: period
          schema:
            default: monthly
            enum:
              - monthly
              - weekly
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponsivityList"
          description: Vendor responsivity stats
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound - this is not a vendor user account
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns your vendor responsivity stats
      tags:
        - User
      x-cli-cmd-group: users
  /search:
    get:
      operationId: searchEverywhere
      parameters:
        - description: Search query term
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: Search in these entities. Current oprions are projects, documents, strings. Can be multiple. When not provided, we'll search through all entities.
          in: query
          name: include[]
          required: false
          schema:
            items:
              enum:
                - projects
                - documents
                - strings
              type: string
            type: array
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchEverywhereResult"
          description: Search result for multiple entities and paging
      summary: Search everywhere! Including projects, documents, translations...
      tags:
        - Search
      x-cli-cmd-group: search
  /search/documents/reindex:
    post:
      operationId: reindexDocuments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
          description: Async operation status. Use the key to query status of this operation.
      summary: Reindex for search all of the client source and translation documents.
      tags:
        - Search
      x-cli-cmd-group: search
    x-internal: true
  /search/documents/reindex/status:
    get:
      operationId: checkDocumentsReindex
      parameters:
        - description: Async operation key
          in: query
          name: async_request_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
          description: Async operation status. Use the key to query status of this operation.
      summary: Check reindex status of the client source and translation documents.
      tags:
        - Search
      x-cli-cmd-group: search
    x-internal: true
  /stats:
    get:
      operationId: getStats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stats"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns your client and vendor statistics. This used to be called "summary" (\@deprecated).
      tags:
        - User
      x-cli-cmd-group: users
  /stats/commissions:
    get:
      operationId: getCommissionStats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommissionStats"
          description: User's commission stats
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnauthorizedUser
      summary: Returns the total commissions stats.
      tags:
        - Stats
      x-cli-cmd-group: commissions
    post:
      operationId: getCommissionStatsByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommissionStats"
          description: User's commission stats
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnauthorizedUser
      summary: Returns the total commissions stats by report filter.
      tags:
        - Stats
      x-cli-cmd-group: commissions
    x-internal: true
  /stats/popular-pairs:
    get:
      operationId: getPopularPairs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopularLanguagePairs"
          description: User's most ordered language pairs
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns the language pairs that you have ordered most.
      tags:
        - Stats
      x-cli-cmd-group: stats
  /stats/projects:
    get:
      operationId: getProjectStats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientProjectStats"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns your project statistics.
      tags:
        - Stats
      x-cli-cmd-group: stats
  /stats/strings:
    get:
      operationId: getStringStats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientStringStats"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Returns your string statistics.
      tags:
        - Stats
      x-cli-cmd-group: stats
  /strings:
    get:
      operationId: getStrings
      parameters:
        - description: Source Language Code
          in: query
          name: source_language
          required: false
          schema:
            type: string
        - description: Requested page
          in: query
          name: page
          required: false
          schema:
            default: 0
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientStrings"
          description: List of strings in JSON
      summary: Get a list of client/corporate strings (20 per page)
      tags:
        - Strings
      x-cli-cmd-group: strings
    post:
      operationId: postStrings
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contents:
                  items:
                    type: string
                  type: array
                source_language:
                  type: string
                target_languages:
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MachineTranslatedStrings"
          description: Machine Translated Strings in JSON
      summary: Translate Strings with MT
      tags:
        - Strings
      x-cli-cmd-group: strings
    put:
      description: Update a translation by adding a new translation memory unit item
      operationId: updateTranslationMemoryUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TranslationMemoryUnit"
      responses:
        "200":
          description: Translation updated by adding new translation memory unit
        "400":
          description: Corporate id, source language, target language, source string or target string is not provided
        "404":
          description: Source language or target language is not found
        "500":
          description: Something went wrong and translation unit is not updated
      summary: Update translation
      tags:
        - Strings
  "/strings/{languageCode}/package":
    post:
      operationId: packageUserTranslationMemory
      parameters:
        - description: Source Language Code
          in: path
          name: languageCode
          required: true
          schema:
            type: string
        - description: If you want to package and download the translation memory synchronously, mark this parameter as '0'. It will package the translation memory and then return the packaged file in the response, identical to async/download call after an asynchronous /package call.
          in: query
          name: async
          schema:
            default: 0
            format: int64
            type: integer
        - description: If you don't need us to email the TMX, set this to '0'. Default is 1.
          in: query
          name: email
          schema:
            default: 1
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
            application/xml:
              schema:
                format: binary
                type: string
          description: Response in TMX or async request
      summary: Get the translation memory of a client or corporate in TMX format
      tags:
        - Strings
      x-cli-cmd-group: strings
  "/strings/{languageCode}/package/status":
    get:
      operationId: packageUserTranslationMemoryForLanguageStatus
      parameters:
        - description: Language Code
          in: path
          name: languageCode
          required: true
          schema:
            type: string
        - description: Async operation key
          in: query
          name: async_request_key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
          description: Async operation status. Use the key to query status of this operation.
      summary: If package call was async, check the status of the request
      tags:
        - Strings
      x-cli-cmd-group: strings
  /styleguide:
    get:
      description: Download your corporate account's global style guide. This endpoint is available only for corporate account customers.
      operationId: downloadGlobalStyleGuide
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Style guide file streamed.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: StyleGuideNotFound
      summary: Download the global style guide.
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
    post:
      description: Update your corporate account's global style guide. This endpoint is available only for corporate account customers.
      operationId: updateGlobalStyleGuide
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                styleguide:
                  description: |
                    Style guide file. Currently supported formats: .pdf, .docx, .txt
                  format: binary
                  type: string
              required:
                - styleguide
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: FileTooLarge FileTooSmall NoFileUploaded MissingCorporateAccount
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UnsupportedStyleGuideFormat
      summary: Create or update the global style guide.
      tags:
        - Style Guide
      x-cli-cmd-group: styleguides
  /swagger:
    get:
      description: Get Swagger JSON
      operationId: getSwaggerJson
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Swagger JSON
      summary: Get Swagger JSON
      tags:
        - Static
      x-cli-cmd-group: static
  /token:
    post:
      description: |
        MotaWord API is using OAuth2 procedures when authenticating or authorizing your API call. Currently, we only allow Client Credential type flow.
      operationId: getAccessToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                grant_type:
                  description: OAuth2 grant type. Supports 'client_credentials', 'password' or 'refresh_token', 'user_id' available.
                  type: string
                password:
                  description: MW Account password (to be used in password grant type)
                  type: string
                refresh_token:
                  description: Refresh token value for refresh token flow.
                  type: string
                scope:
                  description: Authorization scope. Use 'privileged' for private endpoints.
                  type: string
                user_id:
                  description: Value for user_id grant type flow.
                  format: int64
                  type: integer
                username:
                  description: MW Account email (to be used in password grant type)
                  type: string
              required:
                - grant_type
                - scope
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Authentication response
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenError"
          description: Authentication error - for vendor auth, it will also fail if their account is not approved yet. In that case, the error response will include "account_status" key.
      security:
        - basicAuth: []
      summary: Retrieve an access token to interact with the API.
      tags:
        - Auth
      x-cli-cmd-group: auth
  /unfreeze-account:
    post:
      operationId: unfreezeAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Account is already unfrozen for notifications
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Unfreeze requester account for project notifications
      tags:
        - User
      x-cli-cmd-group: users
  /user-groups:
    get:
      operationId: getUserGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupList"
          description: List of user groups
      summary: Returns a list of user groups that this user belongs to.
      tags:
        - User
      x-cli-cmd-group: users
  /users:
    get:
      description: Get a list of platform users
      operationId: getUsers
      parameters:
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
        - in: query
          name: user_type
          required: false
          schema:
            default: all
            enum:
              - vendor
              - all
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
          description: User list
      summary: Get a list of platform users
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  /users/available-vendors:
    post:
      description: Get a list of vendors available for the criteria given
      operationId: getAvailableVendors
      parameters:
        - description: Include detailed information. Possible values 'user'. Requesting user info enrichment takes much longer.
          in: query
          name: with[]
          required: false
          schema:
            items:
              enum:
                - user
              type: string
            type: array
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailableVendorsFilter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
          description: User list
      summary: Get a list of vendors available for the criteria given
      tags:
        - Vendor
      x-cli-cmd-group: vendors
    x-internal: true
  /users/send-password-reminder:
    post:
      operationId: sendPasswordReminder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Email"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Reminder already sent, wait for a while before new request!
      summary: Sends password reset email to the user's registered email address
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}":
    get:
      operationId: getUser
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User summary
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Get user information, including client or vendor specific info.
      tags:
        - User
      x-cli-cmd-group: users
    post:
      operationId: updateUser
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateContent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User info
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/approve":
    post:
      operationId: approveVendorApplication
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Vendor application of this user is approved. User is ready to work with us.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/delete-account":
    delete:
      operationId: deleteUserAccount
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Delete requester account
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/documents":
    get:
      description: Get a list of your documents
      operationId: getUserDocuments
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
        - description: When true, this will return the most 4 recent active documents.
          in: query
          name: recent
          required: false
          schema:
            default: 0
            type: boolean
        - in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: type_filter
          required: false
          schema:
            default: ALL
            enum:
              - ALL
              - TEXT_DOCUMENTS
              - PRESENTATIONS
              - SPREADSHEETS
              - PDFS
              - IMAGES
              - SUBTITLES
              - DESIGNS
              - LOCALIZATION
              - WEB
              - STYLE_GUIDES
              - GLOSSARIES
            type: string
        - description: searches in source language of documents, in source and target languages of document's quote
          in: query
          name: language_code
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
        - in: query
          name: order_by
          required: false
          schema:
            default: updated_at
            enum:
              - id
              - updated_at
              - created_at
              - name
            type: string
        - in: query
          name: order_type
          required: false
          schema:
            $ref: "#/components/schemas/ListOrderType"
            default: desc
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
          description: Document list
      summary: Get a list of your documents
      tags:
        - Document
      x-cli-cmd-group: documents
    x-internal: true
  "/{userId}/downgrade-proofreader":
    post:
      operationId: downgradeUserProofreader
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Vendor is already a translator
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/earnings":
    get:
      operationId: getUserEarnings
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Earnings"
          description: Earnings for vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Returns your vendor earnings. Includes real-time earnings from ongoing projects, and fixed earnings from completed projects. Also includes total earnings and string edits.
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/freeze-account":
    post:
      operationId: freezeUserAccount
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Account is already frozen for notifications
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Freeze requester account for project notifications
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/make-proofreader":
    post:
      operationId: makeUserProofreader
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Vendor is already a proofreader
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/notifications/subscribe":
    post:
      operationId: subscribeUserNotification
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSubscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Saved notification subscription information
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingParameter | Failed to save subscription
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/notifications/unsubscribe":
    post:
      operationId: unsubscribeUserNotification
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSubscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Deleted notification subscription information
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: MissingParameter | Failed to delete subscription
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/payment":
    get:
      operationId: getUserPaymentInfo
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentInfo"
          description: Returns billing and saved card information for user, and their corporate if present.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound UnauthorizedUser
      summary: Get user payment Info
      tags:
        - User
      x-cli-cmd-group: users
    post:
      operationId: updateUserPaymentInfo
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInfo"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Update user payment info
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/permissions":
    get:
      operationId: getUserPermissions
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionList"
          description: List of permission strings
      summary: Returns a list of permissions that this user is authorized for.
      tags:
        - User
      x-cli-cmd-group: corporates
    x-internal: true
  "/{userId}/profile-picture":
    post:
      operationId: uploadUserProfilePicture
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                profile_picture:
                  description: Profile picture file contents. Accepted extensions are png, jpg.
                  format: binary
                  type: string
              required:
                - profile_picture
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: NoFileUploaded
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/projects/vendor":
    get:
      description: Get a list of user/vendor projects
      operationId: getVendorProjectsByUserId
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
        - description: Return only projects that this user has already joined
          in: query
          name: joined
          required: false
          schema:
            type: boolean
        - description: Return only projects that have been completed. When `true`, this makes `joined` true as well.
          in: query
          name: completed
          required: false
          schema:
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            default: 1
            format: int64
            type: integer
        - in: query
          name: per_page
          required: false
          schema:
            default: 10
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectList"
          description: Vendor project list
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound - this is not a vendor user account
      summary: Get a list of user/vendor projects
      tags:
        - Project
      x-cli-cmd-group: projects
    x-internal: true
  "/{userId}/reject":
    post:
      operationId: rejectVendorApplication
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Vendor application of this user is rejected.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/resend-email-confirmation":
    post:
      operationId: sendUserEmailConfirmation
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OperationStatus"
                  - properties:
                      status:
                        default: success
                        enum:
                          - success
                        type: string
                    type: object
          description: confirmation email has been sent
        "202":
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OperationStatus"
                  - properties:
                      status:
                        default: already_confirmed
                        enum:
                          - already_confirmed
                        type: string
                    type: object
          description: status is `already_confirmed` when user has already confirmed their email address.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound - this is not a vendor user account
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Sends email confirmation email for a user
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/responsivity":
    get:
      operationId: getUserResponsivity
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
        - description: Period for calcualtion.
          in: query
          name: period
          schema:
            default: monthly
            enum:
              - monthly
              - weekly
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponsivityList"
          description: Vendor responsivity stats
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: VendorNotFound - this is not a vendor user account
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Returns a user's vendor responsivity stats
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/stats":
    get:
      operationId: getUserStats
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stats"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Returns a user's client and vendor statistics. This used to be called "summary" (\@deprecated).
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/stats/popular-pairs":
    get:
      operationId: getUserPopularPairs
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopularLanguagePairs"
          description: User's most ordered language pairs
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Returns the language pairs that the user has ordered most.
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/stats/projects":
    get:
      operationId: getUserProjectStats
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientProjectStats"
          description: User stats for client and vendors
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      summary: Returns a user's project statistics.
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/suspend":
    post:
      operationId: suspendUser
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  description: Suspension reason for vendor
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Suspended user account.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      security:
        - mwoAuth:
            - privileged
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/unfreeze-account":
    post:
      operationId: unfreezeUserAccount
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
          description: Successful operation
        "304":
          description: Account is already unfrozen for notifications
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: UserNotFound
      summary: Unfreeze requester account for project notifications
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
  "/{userId}/user-groups":
    get:
      operationId: getThisUserGroups
      parameters:
        - description: User ID
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupList"
          description: List of user groups
      summary: Returns a list of user groups that this user belongs to.
      tags:
        - User
      x-cli-cmd-group: users
    x-internal: true
components:
  schemas:
    ActiveWidget:
      properties:
        created_at:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        follow_user:
          description: Specify whether we should follow the user around in your website and automatically translate pages.
          type: boolean
        force_cache_refresh_interval:
          description: Determines whether to force-refresh local browser cache of your translations in certain period of times, no matter if there is a new activity in the project.
          type: boolean
        id:
          format: int64
          type: integer
        modify_links:
          description: We can automatically localize the same-domain URLs in your page. The way we localize the URL depends on urlMode configuration. We can either add/update the locale query parameter, or add/update the path of the URL.
          type: boolean
        name:
          type: string
        position:
          description: Options are "bottom-left", "bottom-right", "in-place"
          type: string
        theme:
          description: \"light\", \"dark\" OR custom JSON.
          type: string
        token:
          description: Token that you should use when you are using this widget on your website.
          type: string
        url_change_mode:
          description: When a user changes locale (or when we automatically detect and change it for them), we will change the URL of the page they are in. We can do this by actually redirecting the user to the new page, or by simply changing the URL in the address bar via browser's History API. When NULL, we won't apply any URL changes.
          type: string
        url_mode:
          description: When a user changes locale (or when we automatically detect and change it for them), we will change the URL of the page they are in. We can either change the path of the URL to prefix it with the locale code, or we can add a query parameter to the URL. We also use this mode to detect the locale for the current page when a user directly loads a page. When NULL, locale detection from URL will be disabled (even then, if the user has selected a locale manually, and followUser is enabled, we will still automatically translate the page in user's locale.
          type: string
        use_cache:
          description: Should we make use of local browser cache for your visitors? We will refresh the cache when Active JS detects new activity in your project.
          type: boolean
        use_dummy_translations:
          description: When enabled, we will translate your website with dummy content, rather than actually using MT/TM.
          type: boolean
      type: object
    ActiveWidgetList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        widgets:
          items:
            $ref: "#/components/schemas/ActiveWidget"
          type: array
      type: object
    Activity:
      properties:
        activity_at:
          description: Unix epoch time
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/ActivityLinks"
        source_text:
          description: Source text
          type: string
        target_text:
          description: Target text of the activity, which is actually the translation of the source text.
          type: string
        translator:
          description: Unique identifier of the translator/proofreader of this activity.
          format: int64
          type: integer
        type:
          description: Currently there are two available activity types; 'translated', 'proofread'.
          enum:
            - translated
            - proofread
          type: string
      type: object
    ActivityLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            comments:
              $ref: "#/components/schemas/Href"
            project:
              $ref: "#/components/schemas/Href"
          type: object
    ActivityList:
      properties:
        activities:
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    Address:
      properties:
        city:
          type: string
        country:
          type: string
        phone:
          type: string
        state:
          type: string
        street:
          type: string
        zip:
          type: string
      type: object
    AnalyticsCollection:
      properties:
        anonymousId:
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        sessionId:
          type: string
        type:
          type: string
        userId:
          type: string
      type: object
    AnalyticsToken:
      properties:
        jwt:
          type: string
      type: object
    AsyncOperationStatus:
      properties:
        duration:
          description: operation duration in milliseconds
          format: int64
          type: integer
        key:
          type: string
        message:
          type: object
        status:
          $ref: "#/components/schemas/AsyncOperationStatusEnum"
      type: object
    AsyncOperationStatusEnum:
      default: sent
      enum:
        - sent
        - started
        - completed
        - failed
      type: string
    AvailableVendorsFilter:
      properties:
        corporateId:
          description: Corporate account ID to filter for vendor authorization
          type: number
        manualWorkPermission:
          default: 0
          description: Filter vendors for manual work permission
          type: boolean
        sourceLanguage:
          description: Source language code
          type: string
        targetLanguages:
          description: List of target language codes.
          items:
            type: string
          type: array
        types:
          description: List of vendor types
          items:
            enum:
              - translator
              - proofreader
              - both
            type: string
          type: array
      type: object
    BillingAddress:
      allOf:
        - $ref: "#/components/schemas/Address"
        - properties:
            name:
              default: ""
              description: addressing name, such as company name. used in billing address.
              type: string
          type: object
    BlogArticle:
      properties:
        announcement_type:
          enum:
            - article
            - case
            - famous-translators
            - sales
          type: string
        author:
          type: string
        content:
          description: Article content
          type: string
        created_at:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        excerpt:
          description: Article excerpt
          type: string
        id:
          format: int64
          type: integer
        language:
          description: language code
          type: string
        links:
          $ref: "#/components/schemas/BlogArticleLinks"
        slug:
          type: string
        title:
          type: string
        topic:
          type: string
      type: object
    BlogArticleLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            android:
              $ref: "#/components/schemas/Href"
            header_image:
              $ref: "#/components/schemas/Href"
            ios:
              $ref: "#/components/schemas/Href"
            web:
              $ref: "#/components/schemas/Href"
          type: object
    BlogArticleList:
      properties:
        articles:
          items:
            $ref: "#/components/schemas/BlogArticle"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    CallbackResult:
      properties:
        data:
          $ref: "#/components/schemas/Project"
        result:
          description: Callback response returned from `url`.
          type: string
        type:
          $ref: "#/components/schemas/ProjectStatus"
        url:
          description: The URL that received the callback.
          type: string
      type: object
    ClientProfile:
      properties:
        account_creation_date:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        client_project_count:
          description: total project count that this client sent
          type: number
        corporate:
          description: corporate name
          type: string
        corporate_id:
          description: corporate id
          type: number
        corporate_user_count:
          description: total user count in a corporation
          type: number
        frequent_file_extension:
          description: the file extension for the files that usually this client sent
          type: string
        frequent_language_pairs:
          description: frequent language pairs
          items:
            type: string
          type: array
        full_name:
          description: full name of the client
          type: string
        growth:
          description: The answer for the question "Is there any growth for this corporate's spending". The values can be true, false or null if the corporate is oour client for less than 6 months
          type: boolean
        is_complex:
          description: the answer for the question "Is this client usually sent complex projects?"
          type: boolean
        last_12_months_spending:
          description: corporate's spending in twelve months
          format: float
          type: number
        last_project:
          description: the quote number for the last project of this client
          type: number
        last_project_time:
          description: the creation date of the last project that is sent by this client
          format: date-time
          type: string
        last_proofreaders:
          description: list of prooofreaders for the target languages of last project
          items:
            $ref: "#/components/schemas/ProofreaderWithLanguage"
          type: array
        notes:
          description: notes that is submited for this client and/or with her projects
          items:
            type: string
          type: array
        nps:
          description: net promoter score info for this client
          properties:
            average:
              description: information for all nps survey that this client completed
              properties:
                completed_surveys_count:
                  description: total number of completed survey count by this client
                  type: number
                score:
                  description: average score for all coompleted surveys
                  format: float
                  type: number
              type: object
            last:
              description: last survey info
              properties:
                completion_date:
                  description: last surveys completion date
                  format: date-time
                  type: string
                score:
                  description: score that the client gave us
                  type: number
              type: object
          type: object
        user_rank_in_project_count:
          description: rank of the user in all corporate users for project count. If the user is the most active user foor sending projects her rank is 1
          type: number
        user_rank_in_spending:
          description: rank of the user in all corporate users for total spending. If the user is the most active user for spending her rank is 1
          type: number
      type: object
    ClientProjectStat:
      properties:
        languages:
          items:
            type: string
          type: array
        month:
          type: string
        number_of_projects:
          format: int64
          type: integer
        total_spending:
          format: float
          type: number
        week:
          type: string
      type: object
    ClientProjectStats:
      properties:
        stats:
          items:
            $ref: "#/components/schemas/ClientProjectStat"
          type: array
      type: object
    ClientStats:
      properties:
        document_count:
          format: int64
          type: integer
        nps:
          format: float
          type: number
        started_project_count:
          format: int64
          type: integer
        total_discounted:
          $ref: "#/components/schemas/Monetary"
        total_project_count:
          format: int64
          type: integer
        total_spending:
          format: float
          type: number
        translator_count:
          format: int64
          type: integer
      type: object
    ClientStringStats:
      properties:
        language_counts:
          items:
            $ref: "#/components/schemas/LanguageStringStat"
          type: array
        total_project_strings_count:
          format: int64
          type: integer
        total_tm_strings_count:
          format: int64
          type: integer
      type: object
    ClientStringTranslation:
      properties:
        content:
          type: string
        last_changed:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        resource:
          type: string
        resource_id:
          type: string
        state:
          enum:
            - Translated
            - Approved
          type: string
        target_language:
          type: string
      type: object
    ClientStringWithTranslations:
      properties:
        content:
          type: string
        language:
          type: string
        last_changed:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        translations:
          items:
            $ref: "#/components/schemas/ClientStringTranslation"
          type: array
      type: object
    ClientStrings:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        strings:
          items:
            $ref: "#/components/schemas/ClientStringWithTranslations"
          type: array
      type: object
    Comment:
      properties:
        comment:
          description: Comment text.
          type: string
        commented_at:
          description: Unix epoch time
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/CommentLinks"
      type: object
    CommentLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            activity:
              $ref: "#/components/schemas/Href"
              description: Link to the activity to which this comment was submitted.
            project:
              $ref: "#/components/schemas/Href"
          type: object
    CommentList:
      properties:
        activities:
          items:
            $ref: "#/components/schemas/Comment"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    Commission:
      properties:
        amount:
          $ref: "#/components/schemas/Monetary"
        date:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        project:
          $ref: "#/components/schemas/Project"
        status:
          enum:
            - completed
            - unclaimed
            - failed
            - sent
            - waiting
            - waiting_invoice
          type: string
      type: object
    CommissionList:
      properties:
        commissions:
          items:
            $ref: "#/components/schemas/Commission"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    CommissionStats:
      properties:
        balance:
          $ref: "#/components/schemas/Monetary"
        paid:
          $ref: "#/components/schemas/Monetary"
        quote_total:
          $ref: "#/components/schemas/Monetary"
        total:
          $ref: "#/components/schemas/Monetary"
      type: object
    ContinuousProject:
      properties:
        analytics_enabled:
          description: Should we collect analytics data from Active for this continuous project?
          type: boolean
        auto_start_postedit:
          description: Immediately start post-editing project for translation requests that are applied MT.
          type: boolean
        created_at:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        is_enabled:
          type: boolean
        mt_enabled:
          description: Immediately apply MT on translation requests if they are missing from TM.
          type: boolean
        name:
          type: string
        postedit_enabled:
          description: Get an instant quote for translation requests that are applied MT.
          type: boolean
        source_language:
          type: string
        target_languages:
          items:
            type: string
          type: array
        type:
          description: Continuous project type. We currently have only 2 types, NULL and "active".
          type: string
      type: object
    ContinuousProjectLanguage:
      properties:
        code:
          type: string
        is_enabled:
          type: boolean
      type: object
    ContinuousProjectUpdateContent:
      properties:
        analytics_enabled:
          type: boolean
        auto_start_postedit:
          type: boolean
        is_enabled:
          type: boolean
        languages:
          items:
            $ref: "#/components/schemas/ContinuousProjectLanguage"
          type: array
        mt_enabled:
          type: boolean
        name:
          type: string
        postedit_enabled:
          type: boolean
      type: object
    ContinuousProjectsList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        projects:
          items:
            $ref: "#/components/schemas/ContinuousProject"
          type: array
      type: object
    CorporateAccount:
      properties:
        billing:
          $ref: "#/components/schemas/BillingAddress"
        domain:
          type: string
        email:
          type: string
        id:
          format: int64
          type: integer
        logo:
          type: string
        name:
          type: string
        web_site:
          deprecated: true
          description: Deprecated, use `domain`.
          type: string
      type: object
    CreditCard:
      properties:
        bin:
          type: string
        id:
          format: int64
          type: integer
        payment_code:
          type: string
      type: object
    Document:
      properties:
        file_type:
          description: Extension of the file
          type: string
        has_custom_package:
          type: boolean
        id:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/DocumentLinks"
        manual_files:
          $ref: "#/components/schemas/ManualFiles"
        name:
          type: string
        project_id:
          format: int64
          type: integer
        review_in_manual_editor:
          type: boolean
        scheme:
          type: object
        search_score:
          format: float
          type: number
        source_language:
          type: string
        subject:
          type: string
        target_languages:
          items:
            type: string
          type: array
        uploaded_at:
          description: Unix epoch time
          format: int64
          type: integer
        word_count:
          format: int64
          type: integer
      type: object
    DocumentInSearch:
      allOf:
        - $ref: "#/components/schemas/Document"
        - properties:
            search_result_reason:
              type: string
          type: object
    DocumentLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            admins:
              additionalProperties:
                $ref: "#/components/schemas/Href"
                description: MotaWord admin link for this file, in this language code.
              type: object
            download:
              $ref: "#/components/schemas/Href"
            editors:
              additionalProperties:
                $ref: "#/components/schemas/Href"
                description: MotaWord editor link for this file, in this language code.
              type: object
            preview-box:
              $ref: "#/components/schemas/Href"
              description: Box.com URL to preview this document. This URL is temporary. You need to re-fetch the file to refresh the Box.com preview URL. Available for documents and style guides.
            preview-pdf:
              $ref: "#/components/schemas/Href"
              description: This is our fallback preview URL, providing a PDF file. Use this file to embed in your PDF viewer. Available for documents and style guides.
            preview-pdf-viewer:
              $ref: "#/components/schemas/Href"
              description: This is another version of preview-pdf, this time pointing to a preview viewer page on front application. This page requires authentication and comes with its own PDF viewer.
            project:
              $ref: "#/components/schemas/Href"
            thumbnail:
              $ref: "#/components/schemas/Href"
              description: Thumbnail preview URL of the document. If doc has a page structure, this is probably only the first page.
          type: object
    DocumentList:
      properties:
        documents:
          items:
            $ref: "#/components/schemas/Document"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    Earning:
      properties:
        amount:
          format: float
          type: number
        currency:
          default: usd
          type: string
        due_date:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        status:
          enum:
            - paid
            - pending
            - failed
          type: string
        words:
          format: int64
          type: integer
        words_approved:
          format: int64
          type: integer
        words_translated:
          format: int64
          type: integer
      type: object
    EarningWithTQS:
      allOf:
        - $ref: "#/components/schemas/Earning"
        - $ref: "#/components/schemas/ProjectTQS"
        - properties:
            project_id:
              format: int64
              type: integer
          type: object
    Earnings:
      properties:
        completed:
          items:
            $ref: "#/components/schemas/EarningWithTQS"
          type: array
        ongoing:
          items:
            $ref: "#/components/schemas/EarningWithTQS"
          type: array
        total:
          format: float
          type: number
      type: object
    Email:
      properties:
        email:
          type: string
      type: object
    Error:
      properties:
        code:
          type: string
        help:
          type: string
        http_code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    FileAsData:
      properties:
        data:
          description: Base64 encoded contents of your file.
          format: byte
          type: string
        name:
          description: Name of your file
          type: string
      type: object
    FileNeedsVendor:
      properties:
        fileId:
          format: int64
          type: integer
        projectId:
          format: int64
          type: integer
        reason:
          type: string
        targetLanguage:
          items:
            type: string
          type: array
        taskType:
          items:
            type: string
          type: array
      type: object
    Formats:
      properties:
        documents:
          properties:
            extensions:
              items:
                type: string
              type: array
            mimes:
              items:
                type: string
              type: array
          type: object
        glossaries:
          properties:
            extensions:
              items:
                type: string
              type: array
          type: object
        styleguides:
          properties:
            extensions:
              items:
                type: string
              type: array
          type: object
      type: object
    Glossary:
      properties:
        id:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/DocumentLinks"
        name:
          type: string
        uploaded_at:
          description: Unix epoch time
          format: int64
          type: integer
      type: object
    GlossaryList:
      properties:
        glossaries:
          items:
            $ref: "#/components/schemas/Glossary"
          type: array
        meta:
          $ref: "#/components/schemas/PagingMeta"
      type: object
    Href:
      properties:
        href:
          type: string
      type: object
    InstantContentsTranslationResult:
      properties:
        results:
          additionalProperties:
            type: string
          description: a map of source string > translated string.
          type: object
      type: object
    InstantFilesTranslationResult:
      properties:
        results:
          additionalProperties:
            format: byte
            type: string
          description: a map of source file name > base64-encoded translated file.
          type: object
      type: object
    InstantTranslationResult:
      oneOf:
        - $ref: "#/components/schemas/InstantContentsTranslationResult"
        - $ref: "#/components/schemas/InstantFilesTranslationResult"
    Invoice:
      properties:
        amount:
          description: Monetary amount
          format: float
          type: number
        billing:
          $ref: "#/components/schemas/BillingAddress"
        currency:
          type: string
        id:
          format: int64
          type: integer
        invoice_no:
          format: int64
          type: integer
        invoiced_at:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        links:
          $ref: "#/components/schemas/InvoiceLinks"
        status:
          type: string
      type: object
    InvoiceLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            corporate:
              $ref: "#/components/schemas/Href"
            html:
              $ref: "#/components/schemas/Href"
            json:
              $ref: "#/components/schemas/Href"
            pdf:
              $ref: "#/components/schemas/Href"
            project:
              $ref: "#/components/schemas/Href"
            view:
              $ref: "#/components/schemas/Href"
          type: object
    Language:
      properties:
        code:
          type: string
        name:
          type: string
      type: object
    LanguagePair:
      properties:
        source_language:
          type: string
        target_language:
          type: string
      type: object
    LanguagePairsReport:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        report:
          items:
            properties:
              language_pair:
                properties:
                  source_language:
                    type: string
                  target_language:
                    type: string
                type: object
              spending:
                format: float
                type: number
              word_count:
                format: int64
                type: integer
            type: object
          type: array
      type: object
    LanguageScore:
      format: float
      type: number
    LanguageStringStat:
      properties:
        project_string_count:
          format: int64
          type: integer
        source_language:
          type: string
        tm_string_count:
          format: int64
          type: integer
      type: object
    LinkedSourceDocument:
      properties:
        name:
          type: string
        size:
          description: file size in bytes. optional.
          format: int64
          type: integer
        source:
          description: Preferred source names are listed as enum. If you have a custom file type, simply enter that name.
          enum:
            - dropbox
            - googledrive
            - icloud
          type: string
        url:
          format: uri
          type: string
      type: object
    LinksMeta:
      properties:
        self:
          $ref: "#/components/schemas/Href"
      type: object
    ListOrderType:
      enum:
        - asc
        - desc
      type: string
    LocationUpdateContent:
      properties:
        lat:
          description: Latitude of location
          format: float
          type: number
        lon:
          description: Longitude of location
          format: float
          type: number
        timestamp:
          type: integer
      required:
        - lat
        - lon
      type: object
    MachineTranslatedStrings:
      properties:
        cost:
          $ref: "#/components/schemas/Monetary"
        strings:
          items:
            $ref: "#/components/schemas/ClientStringWithTranslations"
          type: array
      type: object
    ManualFile:
      properties:
        driveFileId:
          format: int64
          type: integer
        isProofread:
          type: boolean
        isTranslated:
          type: boolean
        language:
          type: string
        proofreadingFileId:
          format: int64
          type: integer
        translationFileId:
          format: int64
          type: integer
      type: object
    ManualFiles:
      items:
        $ref: "#/components/schemas/ManualFile"
      type: array
    Monetary:
      properties:
        amount:
          format: float
          type: number
        currency:
          default: usd
          type: string
      type: object
    NotificationSubscription:
      properties:
        device:
          enum:
            - iOS
            - Android
            - Chrome
            - Firefox
            - Safari
            - Edge
            - Amazon
            - WindowsPhone
            - Windows
            - MacOS
          type: string
        endpoint:
          description: OneSignal calls this "player ID".
          type: string
        type:
          default: OneSignal
          enum:
            - OneSignal
          type: string
      type: object
    OperationStatus:
      properties:
        status:
          $ref: "#/components/schemas/OperationStatusEnum"
      type: object
    OperationStatusEnum:
      default: success
      enum:
        - success
        - error
      type: string
    Package:
      allOf:
        - $ref: "#/components/schemas/PackageStatus"
        - properties:
            key:
              description: This is the unique package tracking key. You can use this key to track the current progress of the translation packaging with /package/check call.
              type: string
          type: object
    PackageStatus:
      properties:
        status:
          $ref: "#/components/schemas/PackageStatusEnum"
      type: object
    PackageStatusEnum:
      description: The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.
      enum:
        - started
        - packaging
        - completed
      type: string
    PagingLinksMeta:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            next:
              type: string
            previous:
              type: string
          type: object
    PagingMeta:
      properties:
        paging:
          properties:
            links:
              $ref: "#/components/schemas/PagingLinksMeta"
            page:
              default: 1
              format: int64
              type: integer
            per_page:
              default: 10
              format: int64
              type: integer
            total_count:
              format: int64
              type: integer
          type: object
      type: object
    PasswordUpdateContent:
      properties:
        password:
          description: New Password
          type: string
      type: object
    PaymentInfo:
      properties:
        billing:
          $ref: "#/components/schemas/BillingAddress"
        card:
          $ref: "#/components/schemas/CreditCard"
        corporate:
          properties:
            allow_api_invoicing:
              type: boolean
            allow_payment_code:
              type: boolean
            auto_charge:
              type: boolean
            billing:
              $ref: "#/components/schemas/BillingAddress"
            card:
              $ref: "#/components/schemas/CreditCard"
            contact_email_address:
              type: string
            payment_code:
              type: string
          type: object
        shared_card:
          $ref: "#/components/schemas/CreditCard"
      type: object
    Permission:
      type: string
    PermissionList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        permissions:
          items:
            $ref: "#/components/schemas/Permission"
          type: array
      type: object
    PopularLanguagePairs:
      properties:
        pairs:
          items:
            $ref: "#/components/schemas/LanguagePair"
          type: array
      type: object
    Progress:
      allOf:
        - properties:
            languages:
              additionalProperties:
                $ref: "#/components/schemas/ProgressSub"
              type: object
            links:
              $ref: "#/components/schemas/ProgressLink"
            project_status:
              $ref: "#/components/schemas/ProjectStatus"
          type: object
        - $ref: "#/components/schemas/ProgressSub"
    ProgressLink:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            project:
              $ref: "#/components/schemas/Href"
          type: object
    ProgressSub:
      properties:
        proofreading:
          format: float
          type: number
        total:
          format: float
          type: number
        translation:
          format: float
          type: number
      type: object
    Project:
      properties:
        average_scores:
          additionalProperties:
            $ref: "#/components/schemas/LanguageScore"
          type: object
        budget_code:
          type: string
        callback_url:
          description: Callback URL to notify when project status changed.
          type: string
        client:
          $ref: "#/components/schemas/User"
          description: User entity for Client. This is only given when project is requested with detailed=true
        completed_on:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        continuous_project_type:
          type: string
        created_at:
          description: Unix epoch time
          format: int64
          type: integer
        custom:
          description: Custom data provided while creating a new project.
          type: object
        delivery_at:
          description: Unix epoch time
          format: int64
          type: integer
        errors:
          description: A list of errors. Visible when creating a project and uploading your documents at the same time, in case of multiple errors.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        id:
          format: int64
          type: integer
        is_api_project:
          type: boolean
        is_certified:
          type: boolean
        is_continuous:
          type: boolean
        is_manual:
          type: boolean
        links:
          $ref: "#/components/schemas/ProjectLinks"
        pairs:
          $ref: "#/components/schemas/VendorProjectPairs"
          description: Currently authed vendor's available working language pairs in this project. Includes rates per language pair. Includes complex pair logic such as bilingualism, project reverse pair enforcement etc.
        price:
          properties:
            amount:
              format: float
              type: number
            currency:
              default: usd
              type: string
            usd_amount:
              description: USD is our base pricing currency. If `currency` is different, this will help.
              format: float
              type: number
          type: object
        price_without_discount:
          properties:
            amount:
              format: float
              type: number
            currency:
              default: usd
              type: string
            usd_amount:
              description: USD is our base pricing currency. If `currency` is different, this will help.
              format: float
              type: number
          type: object
        role:
          $ref: "#/components/schemas/VendorProjectRole"
        should_send_client_survey:
          type: boolean
        source:
          $ref: "#/components/schemas/ProjectSource"
          descriptipon: The source platform where this project was first created. Current options are "api", "web".
        source_language:
          type: string
        status:
          $ref: "#/components/schemas/ProjectStatus"
        subjects:
          items:
            type: string
          type: array
        target_languages:
          items:
            type: string
          type: array
        tms_name:
          description: TMS project name for this MW project. Requires privileged scope.
          type: string
        valid_until:
          description: Unix epoch time. Available only if status is `pending`.
          format: int64
          type: integer
        vendor_word_count:
          format: int64
          type: integer
        word_count:
          format: int64
          type: integer
      type: object
    ProjectInSearch:
      allOf:
        - $ref: "#/components/schemas/Project"
        - properties:
            search_result_reason:
              type: string
          type: object
    ProjectLaunchResponse:
      properties:
        status:
          $ref: "#/components/schemas/ProjectLaunchResponseEnum"
      type: object
    ProjectLaunchResponseEnum:
      enum:
        - started
      type: string
    ProjectLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            documents:
              $ref: "#/components/schemas/Href"
            glossaries:
              $ref: "#/components/schemas/Href"
            payment:
              $ref: "#/components/schemas/Href"
            quote-pdf:
              $ref: "#/components/schemas/Href"
            styleguides:
              $ref: "#/components/schemas/Href"
          type: object
    ProjectList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        projects:
          items:
            $ref: "#/components/schemas/Project"
          type: array
      type: object
    ProjectSource:
      enum:
        - api
        - web
      type: string
    ProjectStatus:
      enum:
        - pending
        - started
        - completed
        - translated
        - proofread
      type: string
    ProjectTQS:
      properties:
        is_above_average:
          description: Is this score above or below the average among other vendors in the same project?
          type: boolean
        score:
          format: float
          type: number
        strings_edited:
          description: The number of translated strings by this translator which was edited by a proofreader.
          format: int64
          type: integer
        strings_translated:
          description: The number of translated strings by this translator.
          format: int64
          type: integer
      type: object
    ProofreaderWithLanguage:
      properties:
        full_name:
          description: full name of the proofreader
          type: string
        id:
          description: proofreader id
          format: int64
          type: number
        language:
          description: language code (i.e en-US)
          type: string
        vendor_link:
          description: link to the vendor that can be only used in motaword admin application
          type: string
      type: object
    RegeneratePreviewResponse:
      properties:
        link:
          $ref: "#/components/schemas/Href"
        source:
          type: string
      type: object
    ReportFilter:
      properties:
        budget_code:
          description: budget code filter. valid for corporate accounts only.
          type: string
        date_from:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        date_to:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        source_languages:
          description: List of source language codes.
          items:
            type: string
          type: array
        target_languages:
          description: List of target language codes.
          items:
            type: string
          type: array
        users:
          description: List of corporate user IDs. Valid for corporate accounts only.
          items:
            format: int64
            type: integer
          type: array
      type: object
    Responsivity:
      properties:
        invited:
          format: int64
          type: integer
        month:
          type: string
        notEntered:
          format: int64
          type: integer
        onlyEntered:
          format: int64
          type: integer
        score:
          format: float
          type: number
        week:
          type: string
        worked:
          format: int64
          type: integer
      type: object
    ResponsivityList:
      properties:
        links:
          allOf:
            - $ref: "#/components/schemas/LinksMeta"
        responsivity:
          items:
            $ref: "#/components/schemas/Responsivity"
          type: array
      type: object
    SalesActivities:
      properties:
        activities:
          items:
            $ref: "#/components/schemas/SalesActivity"
          type: array
      type: object
    SalesActivity:
      properties:
        body:
          type: string
        created_at:
          description: timestamp
          format: int64
          type: integer
        created_by:
          type: string
        type:
          type: string
      type: object
    SalesActivityType:
      enum:
        - EMAIL
        - NOTE
        - INCOMING_EMAIL
        - TASK
      type: string
    SearchEverywhereResult:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        result:
          properties:
            documents:
              items:
                $ref: "#/components/schemas/DocumentInSearch"
              type: array
            projects:
              items:
                $ref: "#/components/schemas/ProjectInSearch"
              type: array
            strings:
              items:
                $ref: "#/components/schemas/StringInSearch"
              type: array
          type: object
      type: object
    SingleString:
      properties:
        content:
          description: source string content
          type: string
        file_id:
          format: int64
          type: integer
        id:
          type: string
      type: object
    SocialMedia:
      properties:
        facebook_url:
          type: string
        linkedIn_url:
          type: string
        twitter_url:
          type: string
      type: object
    Stats:
      properties:
        client:
          $ref: "#/components/schemas/ClientStats"
        vendor:
          $ref: "#/components/schemas/VendorStats"
      type: object
    StringInSearch:
      properties:
        file_id:
          format: int64
          type: integer
        internal_project_id:
          format: int64
          type: integer
        last_updated:
          description: the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
          format: date-time
          type: string
        project_id:
          format: int64
          type: integer
        search_score:
          format: float
          type: number
        source:
          type: string
        status:
          $ref: "#/components/schemas/StringTranslationState"
        string_id:
          format: int64
          type: integer
        target:
          type: string
        targets:
          items:
            type: string
          type: array
        tm_name:
          type: string
        type:
          description: String search result typ from ZNT. Options are LOCAL_PROJECT, IMPORTED_TM. Imported TM results should probably not be visible to end users.
          enum:
            - LOCAL_PROJECT
            - IMPORTED_TM
          type: string
      type: object
    StringList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        translations:
          items:
            $ref: "#/components/schemas/StringWithTranslations"
          type: array
      type: object
    StringTranslation:
      properties:
        content:
          description: source string content
          type: string
        id:
          type: string
        state:
          $ref: "#/components/schemas/StringTranslationState"
      type: object
    StringTranslationState:
      enum:
        - Approved
        - Translated
      type: string
    StringWithTranslations:
      allOf:
        - $ref: "#/components/schemas/SingleString"
        - properties:
            translations:
              additionalProperties:
                $ref: "#/components/schemas/StringTranslation"
              type: object
          type: object
    StyleGuide:
      properties:
        id:
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/DocumentLinks"
        name:
          type: string
        uploaded_at:
          description: Unix epoch time
          format: int64
          type: integer
      type: object
    StyleGuideList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        styleguides:
          items:
            $ref: "#/components/schemas/StyleGuide"
          type: array
      type: object
    Tag:
      type: string
    Token:
      properties:
        access_token:
          type: string
        expires_in:
          format: int64
          type: integer
        refresh_token:
          type: string
        scope:
          type: string
        token_type:
          type: string
        user_id:
          format: int64
          type: integer
    TokenError:
      allOf:
        - $ref: "#/components/schemas/Error"
        - properties:
            account_status:
              enum:
                - registered
                - email_confirmed
                - deleted
                - suspended
                - rejected
                - approved
                - resume
                - webinar
                - course
              type: string
          type: object
    TranslationMemoryUnit:
      properties:
        sourceLanguage:
          type: string
        sourceText:
          type: string
        targetLanguage:
          type: string
        targetText:
          type: string
      type: object
    UpdatePaymentInfo:
      allOf:
        - $ref: "#/components/schemas/Address"
        - properties:
            bin:
              type: string
            save_as_corporate_primary:
              type: boolean
            share_with_corporate_users:
              type: boolean
            stripeToken:
              type: string
          type: object
    UseAsDraftPayload:
      properties:
        fromFileId:
          type: number
        fromManualTranslationFileId:
          type: number
        toManualTranslationFileId:
          type: number
      type: object
    UseAsRegularPayload:
      properties:
        allowOriginalFilePreview:
          type: boolean
        allowReviewInManualEditor:
          type: boolean
        disableInvitations:
          type: boolean
        fromManualTranslationFileId:
          type: number
        hideNumbers:
          type: boolean
        recreate:
          type: boolean
      type: object
    User:
      properties:
        billing:
          $ref: "#/components/schemas/BillingAddress"
        birthday:
          format: date
          type: string
        can_work_manual_files:
          deprecated: true
          description: \@deprecated. use `vendor` key
          type: boolean
        city:
          deprecated: true
          description: \@deprecated. use mailing or billing key.
          type: string
        client:
          properties:
            corporate:
              properties:
                email:
                  type: string
                id:
                  format: int64
                  type: integer
                logo:
                  type: string
                name:
                  type: string
              type: object
            nps:
              format: float
              type: number
            subjects:
              additionalProperties:
                format: int64
                type: integer
              type: object
          type: object
        corporate_id:
          format: int64
          type: integer
        country:
          deprecated: true
          description: \@deprecated. use mailing or billing key.
          type: string
        created_at:
          description: Unix epoch time
          format: int64
          type: integer
        do_not_contact:
          type: boolean
        email:
          type: string
        first_name:
          type: string
        has_pwd:
          type: boolean
        id:
          format: int64
          type: integer
        is_client:
          type: boolean
        is_developer:
          type: boolean
        is_proofreader:
          deprecated: true
          description: \@deprecated. use `vendor` key
          type: boolean
        is_prospect:
          type: boolean
        is_sales_person:
          type: boolean
        is_vendor:
          type: boolean
        language_pairs:
          deprecated: true
          description: \@deprecated. use `vendor` key
          items:
            $ref: "#/components/schemas/LanguagePair"
          type: array
        last_name:
          type: string
        last_seen_online_at:
          description: Unix epoch time
          format: int64
          type: integer
        links:
          $ref: "#/components/schemas/UserLinks"
        locale:
          description: User Locale
          type: string
        mailing:
          $ref: "#/components/schemas/Address"
        name:
          type: string
        native_language:
          deprecated: true
          description: \@deprecated. Native language of user
          type: string
        nps:
          deprecated: true
          description: \@deprecated. use /stats endpoint for the current nps value.
          format: float
          type: number
        phone_number:
          type: string
        profile_picture_path:
          type: string
        social_media:
          $ref: "#/components/schemas/SocialMedia"
        state:
          deprecated: true
          description: \@deprecated. use mailing or billing key.
          type: string
        status:
          type: string
        street:
          deprecated: true
          description: \@deprecated. use mailing or billing key.
          type: string
        timezone:
          type: string
        tms_user_name:
          deprecated: true
          description: \@deprecated. use `vendor` key
          type: string
        user_groups:
          items:
            $ref: "#/components/schemas/UserGroup"
          type: array
        vendor:
          properties:
            can_work_manual_files:
              type: boolean
            is_frozen:
              type: boolean
            is_proofreader:
              type: boolean
            language_pairs:
              items:
                $ref: "#/components/schemas/LanguagePair"
              type: array
            native_language:
              description: Native language of user
              type: string
            paypal_email:
              type: string
            require_1099:
              type: boolean
            tags:
              items:
                $ref: "#/components/schemas/Tag"
              type: array
            tms_user_name:
              type: string
          type: object
        zip_code:
          deprecated: true
          description: \@deprecated. use mailing or billing key. new key name is "zip".
          type: string
      type: object
    UserGroup:
      properties:
        corporate_id:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
      type: object
    UserGroupList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        user_groups:
          items:
            $ref: "#/components/schemas/UserGroup"
          type: array
      type: object
    UserLinks:
      allOf:
        - $ref: "#/components/schemas/LinksMeta"
        - properties:
            projects:
              $ref: "#/components/schemas/Href"
              description: client users only
            responsivity:
              $ref: "#/components/schemas/Href"
              description: vendor users only
            stats:
              $ref: "#/components/schemas/Href"
          type: object
    UserList:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        users:
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object
    UserUpdateContent:
      allOf:
        - $ref: "#/components/schemas/Address"
        - properties:
            birthday:
              format: date
              type: string
            email:
              description: Optional. User e-mail.
              type: string
            first_name:
              description: Optional. User first name.
              type: string
            id:
              description: Optional. ID of the user being updated.
              format: int64
              type: integer
            last_name:
              description: Optional. User last name.
              type: string
            notifications:
              description: Notification settings
              properties:
                phone_number:
                  description: User phone number
                  type: string
                sms_enabled:
                  description: User sms notification setting
                  type: boolean
              type: object
            notify:
              description: Notify new user account creation with login information and MotaWord introduction.
              type: boolean
            paypal_email:
              description: Optional. Vendor paypal e-mail
              type: string
            require_1099:
              description: Optional. Whether this vendor requires 1099 form in US for their earnings.
              type: boolean
            user_groups:
              description: A list of user group IDs
              items:
                format: int64
                type: integer
              type: array
          type: object
    UsersReport:
      properties:
        meta:
          $ref: "#/components/schemas/PagingMeta"
        report:
          items:
            properties:
              spending:
                format: float
                type: number
              user:
                $ref: "#/components/schemas/User"
              word_count:
                format: int64
                type: integer
            type: object
          type: array
      type: object
    VendorEarningStats:
      properties:
        total:
          description: total amount of USD that this user has earned in the platform so far.
          format: float
          type: number
      type: object
    VendorInvitationList:
      properties:
        vendors:
          items:
            $ref: "#/components/schemas/VendorWithNeeds"
          type: array
      type: object
    VendorProjectPair:
      properties:
        currency:
          default: usd
          type: string
        is_proofreader:
          description: Indicates if the vendor be able to proofred this pair
          type: boolean
        proofreader:
          $ref: "#/components/schemas/User"
        proofreading_rate:
          format: float
          type: number
        source_language:
          description: Source language code
          type: string
        target_language:
          description: Target language code
          type: string
        translation_rate:
          format: float
          type: number
      type: object
    VendorProjectPairs:
      items:
        $ref: "#/components/schemas/VendorProjectPair"
      type: array
    VendorProjectRole:
      description: Currently authed vendor's role in this project. If vendor has already joined, this contains the role they joined the project with. If not joined yet, this is the role that they can join the project with.
      enum:
        - translator
        - proofreader
      type: string
    VendorProjectStats:
      properties:
        invited:
          description: total number of projects that this user was invited to. TODO this key is to replace "total" key due to naming ambiguity.
          format: int64
          type: integer
        total:
          description: total number of projects that this user was invited to.
          format: int64
          type: integer
        worked:
          description: total number of projects that this user actually worked on.
          format: int64
          type: integer
      type: object
    VendorStats:
      properties:
        earnings:
          $ref: "#/components/schemas/VendorEarningStats"
        projects:
          $ref: "#/components/schemas/VendorProjectStats"
        words:
          $ref: "#/components/schemas/VendorWordStats"
      type: object
    VendorWithNeeds:
      properties:
        matchedNeeds:
          items:
            $ref: "#/components/schemas/FileNeedsVendor"
          type: array
        userId:
          format: int64
          type: integer
      type: object
    VendorWordStats:
      properties:
        approved:
          description: total number of words that this user has approved so far.
          format: int64
          type: integer
        translated:
          description: total number of words that this user has translated so far.
          format: int64
          type: integer
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    mwoAuth:
      description: OAuth2 authentication, Client Credentials flow.
      flows:
        authorizationCode:
          authorizationUrl: /token
          refreshUrl: /token
          scopes:
            default: default
            privileged: privileged
          tokenUrl: /token
        clientCredentials:
          scopes:
            default: default
            privileged: privileged
          tokenUrl: /token
        password:
          refreshUrl: /token
          scopes:
            default: default
            privileged: privileged
          tokenUrl: /token
      type: oauth2
x-cli-cmd-groups:
  activities:
    long: Manage activities
    parent: projects
    short: Manage activities
  async:
    long: Manage async operations
    short: Manage async operations
  blog:
    long: Manage blog articles
    short: Manage blog articles
  clients:
    long: Manage client account
    short: Manage client account
  commissions:
    long: Manage commissions
    short: Manage commissions
    x-internal: true
  continuous-projects:
    long: Manage your continuous localization or translation projects
    short: Manage your continuous projects
  corporates:
    long: Manage corporate account
    parent: clients
    short: Manage corporate account
  documents:
    long: Manage documents
    short: Manage documents
  glossaries:
    long: Manage glossaries
    short: Manage glossaries
  pam:
    long: Endpoints for PAM
    short: Endpoints for PAM
    x-internal: true
  project-documents:
    long: Manage project source documents
    parent: projects
    short: Manage project source documents
  projects:
    long: Manage projects
    short: Manage projects
  reports:
    long: Manage reports
    short: Manage reports
  search:
    long: Manage search operations
    short: Manage search operations
  static:
    long: Manage static endpoints
    short: Manage static endpoints
  stats:
    long: Manage stats
    short: Manage stats
  strings:
    long: Manage strings
    short: Manage strings
  styleguides:
    long: Manage styleguides
    short: Manage styleguides
  token:
    long: Manage token operations
    short: Manage token operations
  translations:
    long: Manage translations
    parent: projects
    short: Manage translations
  users:
    long: Manage users
    short: Manage users
  vendors:
    long: Manage vendors
    parent: users
    short: Manage vendors
  webhooks:
    long: Manage webhooks
    short: Manage webhooks
