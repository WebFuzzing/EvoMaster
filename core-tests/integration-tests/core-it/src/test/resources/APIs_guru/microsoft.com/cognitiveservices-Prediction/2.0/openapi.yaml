openapi: 3.0.0
servers:
  - url: https://southcentralus.api.cognitive.microsoft.com/customvision/v2.0/Prediction
  - url: "{Endpoint}/customvision/v2.0/Prediction"
    variables:
      Endpoint:
        default: ""
        description: Supported Cognitive Services endpoints
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
info:
  contact:
    x-twitter: microsoft
  title: Custom Vision Prediction Client
  version: "2.0"
  x-apisguru-categories:
    - developer_tools
    - cloud
  x-logo:
    url: https://twitter.com/microsoft/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Prediction/stable/v2.0/Prediction.json
      version: "3.0"
  x-preferred: false
  x-providerName: microsoft.com
  x-serviceName: cognitiveservices-Prediction
  x-tags:
    - Microsoft
paths:
  "/{projectId}/image":
    post:
      operationId: PredictImage
      parameters:
        - description: The project id
          examples:
            Successful PredictImage request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified"
          examples:
            Successful PredictImage request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: Optional. Specifies the name of application using the endpoint
          in: query
          name: application
          required: false
          schema:
            type: string
          x-nullable: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/PredictImage"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful PredictImage request:
                  $ref: "#/components/examples/Successful_PredictImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful PredictImage request:
                  $ref: "#/components/examples/Successful_PredictImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/json:
              examples:
                Successful PredictImage request:
                  $ref: "#/components/examples/Successful_PredictImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful PredictImage request:
                  $ref: "#/components/examples/Successful_PredictImage_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
      summary: Predict an image and saves the result
      tags:
        - ImagePredictionApi
  "/{projectId}/image/nostore":
    post:
      operationId: PredictImageWithNoStore
      parameters:
        - description: The project id
          examples:
            Successful PredictImageWithNoStore request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified"
          examples:
            Successful PredictImageWithNoStore request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: Optional. Specifies the name of application using the endpoint
          in: query
          name: application
          required: false
          schema:
            type: string
          x-nullable: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/PredictImage"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful PredictImageWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful PredictImageWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/json:
              examples:
                Successful PredictImageWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful PredictImageWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
      summary: Predict an image without saving the result
      tags:
        - ImagePredictionApi
  "/{projectId}/url":
    post:
      operationId: PredictImageUrl
      parameters:
        - description: The project id
          examples:
            Successful PredictImageUrl request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified"
          examples:
            Successful PredictImageUrl request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: Optional. Specifies the name of application using the endpoint
          in: query
          name: application
          required: false
          schema:
            type: string
          x-nullable: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/ImageUrl"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful PredictImageUrl request:
                  $ref: "#/components/examples/Successful_PredictImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful PredictImageUrl request:
                  $ref: "#/components/examples/Successful_PredictImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/json:
              examples:
                Successful PredictImageUrl request:
                  $ref: "#/components/examples/Successful_PredictImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful PredictImageUrl request:
                  $ref: "#/components/examples/Successful_PredictImageUrl_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
      summary: Predict an image url and saves the result
      tags:
        - ImagePredictionApi
  "/{projectId}/url/nostore":
    post:
      operationId: PredictImageUrlWithNoStore
      parameters:
        - description: The project id
          examples:
            Successful PredictImageUrlWithNoStore request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r

            \            The default iteration for the project will be used when not specified"
          examples:
            Successful PredictImageUrlWithNoStore request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: Optional. Specifies the name of application using the endpoint
          in: query
          name: application
          required: false
          schema:
            type: string
          x-nullable: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/ImageUrl"
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful PredictImageUrlWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageUrlWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            application/xml:
              examples:
                Successful PredictImageUrlWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageUrlWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/json:
              examples:
                Successful PredictImageUrlWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageUrlWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
            text/xml:
              examples:
                Successful PredictImageUrlWithNoStore request:
                  $ref: "#/components/examples/Successful_PredictImageUrlWithNoStore_request"
              schema:
                $ref: "#/components/schemas/ImagePrediction"
          description: OK
      summary: Predict an image url without saving the result
      tags:
        - ImagePredictionApi
components:
  examples:
    Successful_PredictImageUrlWithNoStore_request:
      value:
        created: 2017-12-19T14:21:41.6789561Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0.000193528482
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_PredictImageUrl_request:
      value:
        created: 2017-12-19T14:21:41.6789561Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0.000193528482
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_PredictImageWithNoStore_request:
      value:
        created: 2017-12-19T14:21:41.6789561Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0.000193528482
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_PredictImage_request:
      value:
        created: 2017-12-19T14:21:41.6789561Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0.000193528482
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
  parameters:
    ApiKey:
      examples:
        Successful PredictImage request:
          value: "{API Key}"
        Successful PredictImageUrl request:
          value: "{API Key}"
        Successful PredictImageUrlWithNoStore request:
          value: "{API Key}"
        Successful PredictImageWithNoStore request:
          value: "{API Key}"
      in: header
      name: Prediction-Key
      required: true
      schema:
        type: string
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
    Endpoint:
      description: Supported Cognitive Services endpoints
      in: path
      name: Endpoint
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    ImageUrl:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ImageUrl"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ImageUrl"
        application/xml:
          schema:
            $ref: "#/components/schemas/ImageUrl"
        text/json:
          schema:
            $ref: "#/components/schemas/ImageUrl"
        text/xml:
          schema:
            $ref: "#/components/schemas/ImageUrl"
      description: An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated
      required: true
    PredictImage:
      content:
        multipart/form-data:
          schema:
            properties:
              imageData:
                format: binary
                type: string
            required:
              - imageData
            type: object
      required: true
  schemas:
    BoundingBox:
      nullable: true
      properties:
        height:
          format: float
          nullable: false
          type: number
        left:
          format: float
          nullable: false
          type: number
        top:
          format: float
          nullable: false
          type: number
        width:
          format: float
          nullable: false
          type: number
      type: object
    ImagePrediction:
      nullable: true
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        predictions:
          items:
            $ref: "#/components/schemas/Prediction"
          nullable: true
          readOnly: true
          type: array
        project:
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageUrl:
      nullable: true
      properties:
        url:
          nullable: true
          type: string
      type: object
    Prediction:
      nullable: true
      properties:
        boundingBox:
          $ref: "#/components/schemas/BoundingBox"
        probability:
          format: float
          nullable: false
          readOnly: true
          type: number
        tagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagName:
          nullable: true
          readOnly: true
          type: string
      type: object
