openapi: 3.0.0
info:
  version: '2018-11-07'
  x-release: v4
  title: AWS Elemental MediaPackage VOD
  description: AWS Elemental MediaPackage VOD
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage-vod
  x-aws-signingName: mediapackage-vod
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-vod-2018-11-07.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediapackage-vod/'
servers:
  - url: 'http://mediapackage-vod.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaPackage Vod multi-region endpoint
  - url: 'https://mediapackage-vod.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaPackage Vod multi-region endpoint
  - url: 'http://mediapackage-vod.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage Vod endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mediapackage-vod.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage Vod endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/packaging_groups/{id}/configure_logs':
    put:
      operationId: ConfigureLogs
      description: Changes the packaging group's properities to configure log subscription
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a MediaPackage VOD PackagingGroup resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                egressAccessLogs:
                  description: Configure egress access logging.
                  type: object
                  properties:
                    LogGroupName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: logGroupName
                          description: Customize the log group name.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /assets:
    post:
      operationId: CreateAsset
      description: Creates a new MediaPackage VOD Asset resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssetResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - packagingGroupId
                - sourceArn
                - sourceRoleArn
              properties:
                id:
                  description: The unique identifier for the Asset.
                  type: string
                packagingGroupId:
                  description: The ID of the PackagingGroup for the Asset.
                  type: string
                resourceId:
                  description: The resource ID to include in SPEKE key requests.
                  type: string
                sourceArn:
                  description: ARN of the source object in S3.
                  type: string
                sourceRoleArn:
                  description: The IAM role ARN used to access the source S3 bucket.
                  type: string
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAssets
      description: Returns a collection of MediaPackage VOD Asset resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: packagingGroupId
          in: query
          required: false
          description: Returns Assets associated with the specified PackagingGroup.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /packaging_configurations:
    post:
      operationId: CreatePackagingConfiguration
      description: Creates a new MediaPackage VOD PackagingConfiguration resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackagingConfigurationResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - packagingGroupId
              properties:
                cmafPackage:
                  description: A CMAF packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/CmafEncryption'
                        - xml:
                            name: encryption
                    HlsManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfHlsManifest'
                        - xml:
                            name: hlsManifests
                          description: A list of HLS manifest configurations.
                    IncludeEncoderConfigurationInSegments:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: includeEncoderConfigurationInSegments
                          description: |
                            When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each fragment. Actual fragments will be
                            rounded to the nearest multiple of the source fragment duration.
                dashPackage:
                  description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
                  type: object
                  properties:
                    DashManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfDashManifest'
                        - xml:
                            name: dashManifests
                          description: A list of DASH manifest configurations.
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/DashEncryption'
                        - xml:
                            name: encryption
                    IncludeEncoderConfigurationInSegments:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: includeEncoderConfigurationInSegments
                          description: |
                            When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
                    PeriodTriggers:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
                        - xml:
                            name: periodTriggers
                          description: |
                            A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                            Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                            be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                            the Asset contains SCTE-35 ad markers.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each segment. Actual segments will be
                            rounded to the nearest multiple of the source segment duration.
                    SegmentTemplateFormat:
                      allOf:
                        - $ref: '#/components/schemas/SegmentTemplateFormat'
                        - xml:
                            name: segmentTemplateFormat
                          description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
                hlsPackage:
                  description: An HTTP Live Streaming (HLS) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/HlsEncryption'
                        - xml:
                            name: encryption
                    HlsManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfHlsManifest'
                        - xml:
                            name: hlsManifests
                          description: A list of HLS manifest configurations.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each fragment. Actual fragments will be
                            rounded to the nearest multiple of the source fragment duration.
                    UseAudioRenditionGroup:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: useAudioRenditionGroup
                          description: 'When enabled, audio streams will be placed in rendition groups in the output.'
                id:
                  description: The ID of the PackagingConfiguration.
                  type: string
                mssPackage:
                  description: A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/MssEncryption'
                        - xml:
                            name: encryption
                    MssManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfMssManifest'
                        - xml:
                            name: mssManifests
                          description: A list of MSS manifest configurations.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: The duration (in seconds) of each segment.
                packagingGroupId:
                  description: The ID of a PackagingGroup.
                  type: string
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPackagingConfigurations
      description: Returns a collection of MediaPackage VOD PackagingConfiguration resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagingConfigurationsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: packagingGroupId
          in: query
          required: false
          description: Returns MediaPackage VOD PackagingConfigurations associated with the specified PackagingGroup.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /packaging_groups:
    post:
      operationId: CreatePackagingGroup
      description: Creates a new MediaPackage VOD PackagingGroup resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackagingGroupResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                authorization:
                  description: CDN Authorization credentials
                  type: object
                  properties:
                    CdnIdentifierSecret:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: cdnIdentifierSecret
                          description: The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
                    SecretsRoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretsRoleArn
                          description: The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
                egressAccessLogs:
                  description: Configure egress access logging.
                  type: object
                  properties:
                    LogGroupName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: logGroupName
                          description: Customize the log group name.
                id:
                  description: The ID of the PackagingGroup.
                  type: string
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPackagingGroups
      description: Returns a collection of MediaPackage VOD PackagingGroup resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagingGroupsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/assets/{id}':
    delete:
      operationId: DeleteAsset
      description: Deletes an existing MediaPackage VOD Asset resource.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssetResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the MediaPackage VOD Asset resource to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAsset
      description: Returns a description of a MediaPackage VOD Asset resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssetResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of an MediaPackage VOD Asset resource.
          schema:
            type: string
  '/packaging_configurations/{id}':
    delete:
      operationId: DeletePackagingConfiguration
      description: Deletes a MediaPackage VOD PackagingConfiguration resource.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackagingConfigurationResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the MediaPackage VOD PackagingConfiguration resource to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribePackagingConfiguration
      description: Returns a description of a MediaPackage VOD PackagingConfiguration resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagingConfigurationResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a MediaPackage VOD PackagingConfiguration resource.
          schema:
            type: string
  '/packaging_groups/{id}':
    delete:
      operationId: DeletePackagingGroup
      description: Deletes a MediaPackage VOD PackagingGroup resource.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackagingGroupResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the MediaPackage VOD PackagingGroup resource to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribePackagingGroup
      description: Returns a description of a MediaPackage VOD PackagingGroup resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagingGroupResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a MediaPackage VOD PackagingGroup resource.
          schema:
            type: string
    put:
      operationId: UpdatePackagingGroup
      description: Updates a specific packaging group. You can't change the id attribute or any other system-generated attributes.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackagingGroupResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a MediaPackage VOD PackagingGroup resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorization:
                  description: CDN Authorization credentials
                  type: object
                  properties:
                    CdnIdentifierSecret:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: cdnIdentifierSecret
                          description: The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
                    SecretsRoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretsRoleArn
                          description: The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
  '/tags/{resource-arn}':
    get:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds tags to the specified resource. You can specify one or more tags to add.
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/tags/{resource-arn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes tags from the specified resource. You can specify one or more tags to remove.
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: A comma-separated list of the tag keys to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ConfigureLogsResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingGroup.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        DomainName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: domainName
              description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    __string:
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateAssetResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the Asset.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: The time the Asset was initially submitted for Ingest.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The list of egress endpoints available for the Asset.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceRoleArn
              description: The IAM role_arn used to access the source S3 bucket.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    CreatePackagingConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingConfiguration.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingConfiguration.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of a PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    CmafEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don''t specify a value, then MediaPackage creates the constant initialization vector (IV).'
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A CMAF encryption configuration.
    __listOfHlsManifest:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifest'
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfDashManifest:
      type: array
      items:
        $ref: '#/components/schemas/DashManifest'
    DashEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    __listOf__PeriodTriggersElement:
      type: array
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
    SegmentTemplateFormat:
      enum:
        - NUMBER_WITH_TIMELINE
        - TIME_WITH_TIMELINE
        - NUMBER_WITH_DURATION
      type: string
    HlsEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: |
                A constant initialization vector for encryption (optional).
                When not specified the initialization vector will be periodically rotated.
        EncryptionMethod:
          allOf:
            - $ref: '#/components/schemas/EncryptionMethod'
            - xml:
                name: encryptionMethod
              description: The encryption method to use.
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: An HTTP Live Streaming (HLS) encryption configuration.
    MssEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
    __listOfMssManifest:
      type: array
      items:
        $ref: '#/components/schemas/MssManifest'
    CreatePackagingGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingGroup.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        DomainName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: domainName
              description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    DeleteAssetResponse:
      type: object
      properties: {}
    DeletePackagingConfigurationResponse:
      type: object
      properties: {}
    DeletePackagingGroupResponse:
      type: object
      properties: {}
    DescribeAssetResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the Asset.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: The time the Asset was initially submitted for Ingest.
        EgressEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfEgressEndpoint'
            - xml:
                name: egressEndpoints
              description: The list of egress endpoints available for the Asset.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceRoleArn
              description: The IAM role_arn used to access the source S3 bucket.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    DescribePackagingConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingConfiguration.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingConfiguration.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of a PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    DescribePackagingGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingGroup.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        DomainName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: domainName
              description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    ListAssetsResponse:
      type: object
      properties:
        Assets:
          allOf:
            - $ref: '#/components/schemas/__listOfAssetShallow'
            - xml:
                name: assets
              description: A list of MediaPackage VOD Asset resources.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
    ListPackagingConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
        PackagingConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfPackagingConfiguration'
            - xml:
                name: packagingConfigurations
              description: A list of MediaPackage VOD PackagingConfiguration resources.
    ListPackagingGroupsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
        PackagingGroups:
          allOf:
            - $ref: '#/components/schemas/__listOfPackagingGroup'
            - xml:
                name: packagingGroups
              description: A list of MediaPackage VOD PackagingGroup resources.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: A collection of tags associated with a resource
    UpdatePackagingGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingGroup.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        DomainName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: domainName
              description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    AdMarkers:
      enum:
        - NONE
        - SCTE35_ENHANCED
        - PASSTHROUGH
      type: string
    Tags:
      type: object
      description: A collection of tags associated with a resource
      additionalProperties:
        $ref: '#/components/schemas/__string'
    AssetShallow:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the Asset.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: The time the Asset was initially submitted for Ingest.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceRoleArn
              description: The IAM role ARN used to access the source S3 bucket.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A MediaPackage VOD Asset resource.
    Authorization:
      required:
        - SecretsRoleArn
        - CdnIdentifierSecret
      type: object
      properties:
        CdnIdentifierSecret:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: cdnIdentifierSecret
              description: The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
        SecretsRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretsRoleArn
              description: The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
      description: CDN Authorization credentials
    SpekeKeyProvider:
      required:
        - SystemIds
        - Url
        - RoleArn
      type: object
      properties:
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: |
                An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
                MediaPackage will assume when accessing the key provider service.
        SystemIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: systemIds
              description: The system IDs to include in key requests.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the external key provider service.
      description: A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
    CmafPackage:
      required:
        - HlsManifests
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/CmafEncryption'
            - xml:
                name: encryption
        HlsManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfHlsManifest'
            - xml:
                name: hlsManifests
              description: A list of HLS manifest configurations.
        IncludeEncoderConfigurationInSegments:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeEncoderConfigurationInSegments
              description: |
                When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each fragment. Actual fragments will be
                rounded to the nearest multiple of the source fragment duration.
      description: A CMAF packaging configuration.
    EgressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: logGroupName
              description: Customize the log group name.
      description: Configure egress access logging.
    ConfigureLogsRequest:
      type: object
      title: ConfigureLogsRequest
      properties:
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
      description: The option to configure log subscription.
    CreateAssetRequest:
      required:
        - SourceArn
        - Id
        - PackagingGroupId
        - SourceRoleArn
      type: object
      title: CreateAssetRequest
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceRoleArn
              description: The IAM role ARN used to access the source S3 bucket.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A new MediaPackage VOD Asset configuration.
    __listOfEgressEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/EgressEndpoint'
    DashPackage:
      required:
        - DashManifests
      type: object
      properties:
        DashManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfDashManifest'
            - xml:
                name: dashManifests
              description: A list of DASH manifest configurations.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/DashEncryption'
            - xml:
                name: encryption
        IncludeEncoderConfigurationInSegments:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeEncoderConfigurationInSegments
              description: |
                When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
        PeriodTriggers:
          allOf:
            - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
            - xml:
                name: periodTriggers
              description: |
                A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                the Asset contains SCTE-35 ad markers.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each segment. Actual segments will be
                rounded to the nearest multiple of the source segment duration.
        SegmentTemplateFormat:
          allOf:
            - $ref: '#/components/schemas/SegmentTemplateFormat'
            - xml:
                name: segmentTemplateFormat
              description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    HlsPackage:
      required:
        - HlsManifests
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/HlsEncryption'
            - xml:
                name: encryption
        HlsManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfHlsManifest'
            - xml:
                name: hlsManifests
              description: A list of HLS manifest configurations.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each fragment. Actual fragments will be
                rounded to the nearest multiple of the source fragment duration.
        UseAudioRenditionGroup:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: useAudioRenditionGroup
              description: 'When enabled, audio streams will be placed in rendition groups in the output.'
      description: An HTTP Live Streaming (HLS) packaging configuration.
    MssPackage:
      required:
        - MssManifests
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/MssEncryption'
            - xml:
                name: encryption
        MssManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfMssManifest'
            - xml:
                name: mssManifests
              description: A list of MSS manifest configurations.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: The duration (in seconds) of each segment.
      description: A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
    CreatePackagingConfigurationRequest:
      required:
        - Id
        - PackagingGroupId
      type: object
      title: CreatePackagingConfigurationRequest
      properties:
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingConfiguration.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of a PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A new MediaPackage VOD PackagingConfiguration resource configuration.
    CreatePackagingGroupRequest:
      required:
        - Id
      type: object
      title: CreatePackagingGroupRequest
      properties:
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A new MediaPackage VOD PackagingGroup resource configuration.
    ManifestLayout:
      enum:
        - FULL
        - COMPACT
      type: string
    Profile:
      enum:
        - NONE
        - HBBTV_1_5
      type: string
    StreamSelection:
      type: object
      properties:
        MaxVideoBitsPerSecond:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxVideoBitsPerSecond
              description: The maximum video bitrate (bps) to include in output.
        MinVideoBitsPerSecond:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minVideoBitsPerSecond
              description: The minimum video bitrate (bps) to include in output.
        StreamOrder:
          allOf:
            - $ref: '#/components/schemas/StreamOrder'
            - xml:
                name: streamOrder
              description: A directive that determines the order of streams in the output.
      description: A StreamSelection configuration.
    DashManifest:
      type: object
      properties:
        ManifestLayout:
          allOf:
            - $ref: '#/components/schemas/ManifestLayout'
            - xml:
                name: manifestLayout
              description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: An optional string to include in the name of the manifest.
        MinBufferTimeSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minBufferTimeSeconds
              description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
        Profile:
          allOf:
            - $ref: '#/components/schemas/Profile'
            - xml:
                name: profile
              description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: A DASH manifest configuration.
    DeleteAssetRequest:
      type: object
      title: DeleteAssetRequest
      properties: {}
    DeletePackagingConfigurationRequest:
      type: object
      title: DeletePackagingConfigurationRequest
      properties: {}
    DeletePackagingGroupRequest:
      type: object
      title: DeletePackagingGroupRequest
      properties: {}
    DescribeAssetRequest:
      type: object
      title: DescribeAssetRequest
      properties: {}
    DescribePackagingConfigurationRequest:
      type: object
      title: DescribePackagingConfigurationRequest
      properties: {}
    DescribePackagingGroupRequest:
      type: object
      title: DescribePackagingGroupRequest
      properties: {}
    EgressEndpoint:
      type: object
      properties:
        PackagingConfigurationId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingConfigurationId
              description: The ID of the PackagingConfiguration being applied to the Asset.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the parent manifest for the repackaged Asset.
      description: The endpoint URL used to access an Asset using one PackagingConfiguration.
    EncryptionMethod:
      enum:
        - AES_128
        - SAMPLE_AES
      type: string
    HlsManifest:
      type: object
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/AdMarkers'
            - xml:
                name: adMarkers
              description: |
                This setting controls how ad markers are included in the packaged OriginEndpoint.
                "NONE" will omit all SCTE-35 ad markers from the output.
                "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                messages in the input source.
        IncludeIframeOnlyStream:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeIframeOnlyStream
              description: 'When enabled, an I-Frame only stream will be included in the output.'
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: An optional string to include in the name of the manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programDateTimeIntervalSeconds
              description: |
                The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                inserted into manifests. Additionally, when an interval is specified
                ID3Timed Metadata messages will be generated every 5 seconds using the
                ingest time of the content.
                If the interval is not specified, or set to 0, then
                no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                ID3Timed Metadata messages will be generated. Note that irrespective
                of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                it will be passed through to HLS output.
        RepeatExtXKey:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: repeatExtXKey
              description: 'When enabled, the EXT-X-KEY tag will be repeated in output manifests.'
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: An HTTP Live Streaming (HLS) manifest configuration.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListAssetsRequest:
      type: object
      title: ListAssetsRequest
      properties: {}
    __listOfAssetShallow:
      type: array
      items:
        $ref: '#/components/schemas/AssetShallow'
    ListPackagingConfigurationsRequest:
      type: object
      title: ListPackagingConfigurationsRequest
      properties: {}
    __listOfPackagingConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/PackagingConfiguration'
    ListPackagingGroupsRequest:
      type: object
      title: ListPackagingGroupsRequest
      properties: {}
    __listOfPackagingGroup:
      type: array
      items:
        $ref: '#/components/schemas/PackagingGroup'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    MssManifest:
      type: object
      properties:
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: An optional string to include in the name of the manifest.
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: A Microsoft Smooth Streaming (MSS) manifest configuration.
    PackagingConfiguration:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingConfiguration.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingConfiguration.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        PackagingGroupId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: packagingGroupId
              description: The ID of a PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A MediaPackage VOD PackagingConfiguration resource.
    PackagingGroup:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The ARN of the PackagingGroup.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        DomainName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: domainName
              description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the PackagingGroup.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A MediaPackage VOD PackagingGroup resource.
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    StreamOrder:
      enum:
        - ORIGINAL
        - VIDEO_BITRATE_ASCENDING
        - VIDEO_BITRATE_DESCENDING
      type: string
    TagResourceRequest:
      required:
        - Tags
      type: object
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: A collection of tags associated with a resource
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdatePackagingGroupRequest:
      type: object
      title: UpdatePackagingGroupRequest
      properties:
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
      description: A MediaPackage VOD PackagingGroup resource configuration.
    __PeriodTriggersElement:
      enum:
        - ADS
      type: string
security:
  - hmac: []
