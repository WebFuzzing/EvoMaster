openapi: 3.0.0
info:
  version: '2018-11-14'
  x-release: v4
  title: AWS MediaConnect
  description: API for AWS Elemental MediaConnect
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediaconnect
  x-aws-signingName: mediaconnect
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediaconnect-2018-11-14.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediaconnect/'
servers:
  - url: 'http://mediaconnect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS MediaConnect multi-region endpoint
  - url: 'https://mediaconnect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS MediaConnect multi-region endpoint
  - url: 'http://mediaconnect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mediaconnect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS MediaConnect endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/v1/flows/{flowArn}/mediaStreams':
    post:
      operationId: AddFlowMediaStreams
      description: 'Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowMediaStreamsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the flow.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mediaStreams
              properties:
                mediaStreams:
                  description: The media streams that you want to add to the flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddMediaStreamRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/outputs':
    post:
      operationId: AddFlowOutputs
      description: Adds outputs to an existing flow. You can create up to 50 outputs per flow.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputsResponse'
        '480':
          description: AddFlowOutputs420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowOutputs420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to add outputs to.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - outputs
              properties:
                outputs:
                  description: A list of outputs that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOutputRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/source':
    post:
      operationId: AddFlowSources
      description: Adds Sources to flow
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowSourcesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to mutate.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sources
              properties:
                sources:
                  description: A list of sources that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/SetSourceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/vpcInterfaces':
    post:
      operationId: AddFlowVpcInterfaces
      description: Adds VPC interfaces to flow
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFlowVpcInterfacesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to mutate.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vpcInterfaces
              properties:
                vpcInterfaces:
                  description: A list of VPC interfaces that you want to add.
                  type: array
                  items:
                    $ref: '#/components/schemas/VpcInterfaceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/flows:
    post:
      operationId: CreateFlow
      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowResponse'
        '480':
          description: CreateFlow420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlow420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                availabilityZone:
                  description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.
                  type: string
                entitlements:
                  description: The entitlements that you want to grant on a flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/GrantEntitlementRequest'
                mediaStreams:
                  description: The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddMediaStreamRequest'
                name:
                  description: The name of the flow.
                  type: string
                outputs:
                  description: The outputs that you want to add to this flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/AddOutputRequest'
                source:
                  description: The settings for the source of the flow.
                  type: object
                  properties:
                    Decryption:
                      allOf:
                        - $ref: '#/components/schemas/Encryption'
                        - xml:
                            name: decryption
                          description: The type of encryption that is used on the content ingested from this source.
                    Description:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: description
                          description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
                    EntitlementArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: entitlementArn
                          description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
                    IngestPort:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: ingestPort
                          description: The port that the flow will be listening on for incoming content.
                    MaxBitrate:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxBitrate
                          description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
                    MaxLatency:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxLatency
                          description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
                    MaxSyncBuffer:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: maxSyncBuffer
                          description: The size of the buffer (in milliseconds) to use to sync incoming source data.
                    MediaStreamSourceConfigurations:
                      allOf:
                        - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
                        - xml:
                            name: mediaStreamSourceConfigurations
                          description: 'The media streams that are associated with the source, and the parameters for those associations.'
                    MinLatency:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: minLatency
                          description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: name
                          description: The name of the source.
                    Protocol:
                      allOf:
                        - $ref: '#/components/schemas/Protocol'
                        - xml:
                            name: protocol
                          description: The protocol that is used by the source.
                    StreamId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: streamId
                          description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                    VpcInterfaceName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: vpcInterfaceName
                          description: The name of the VPC interface to use for this source.
                    WhitelistCidr:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: whitelistCidr
                          description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                sourceFailoverConfig:
                  description: The settings for source failover
                  type: object
                  properties:
                    FailoverMode:
                      allOf:
                        - $ref: '#/components/schemas/FailoverMode'
                        - xml:
                            name: failoverMode
                          description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'
                    RecoveryWindow:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: recoveryWindow
                          description: Search window time to look for dash-7 packets
                    SourcePriority:
                      allOf:
                        - $ref: '#/components/schemas/SourcePriority'
                        - xml:
                            name: sourcePriority
                          description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
                    State:
                      allOf:
                        - $ref: '#/components/schemas/State'
                        - xml:
                            name: state
                sources:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/SetSourceRequest'
                vpcInterfaces:
                  description: The VPC interfaces you want on the flow.
                  type: array
                  items:
                    $ref: '#/components/schemas/VpcInterfaceRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFlows
      description: Displays a list of flows that are associated with this account. This request returns a paginated result.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListFlows request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/v1/flows/{flowArn}':
    delete:
      operationId: DeleteFlow
      description: 'Deletes a flow. Before you can delete a flow, you must stop the flow.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeFlow
      description: 'Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to describe.
          schema:
            type: string
    put:
      operationId: UpdateFlow
      description: Updates flow
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceFailoverConfig:
                  description: The settings for source failover
                  type: object
                  properties:
                    FailoverMode:
                      allOf:
                        - $ref: '#/components/schemas/FailoverMode'
                        - xml:
                            name: failoverMode
                          description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'
                    RecoveryWindow:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: recoveryWindow
                          description: Recovery window time to look for dash-7 packets
                    SourcePriority:
                      allOf:
                        - $ref: '#/components/schemas/SourcePriority'
                        - xml:
                            name: sourcePriority
                          description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
                    State:
                      allOf:
                        - $ref: '#/components/schemas/State'
                        - xml:
                            name: state
  '/v1/offerings/{offeringArn}':
    get:
      operationId: DescribeOffering
      description: 'Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOfferingResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: offeringArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the offering.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PurchaseOffering
      description: 'Submits a request to purchase an offering. If you already have an active reservation, you can''t purchase another offering.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOfferingResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: offeringArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the offering.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reservationName
                - start
              properties:
                reservationName:
                  description: The name that you want to use for the reservation.
                  type: string
                start:
                  description: 'The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). You can specify any date and time between 12:00am on the first day of the current month to the current time on today''s date, inclusive. Specify the start in a 24-hour notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and Z are literal characters. For example, to specify 11:30pm on March 5, 2020, enter 2020-03-05T23:30:00Z.'
                  type: string
  '/v1/reservations/{reservationArn}':
    get:
      operationId: DescribeReservation
      description: 'Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: reservationArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the reservation.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/entitlements':
    post:
      operationId: GrantFlowEntitlements
      description: Grants entitlements to an existing flow.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlementsResponse'
        '480':
          description: GrantFlowEntitlements420Exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantFlowEntitlements420Exception'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to grant entitlements on.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entitlements
              properties:
                entitlements:
                  description: The list of entitlements that you want to grant.
                  type: array
                  items:
                    $ref: '#/components/schemas/GrantEntitlementRequest'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/entitlements:
    get:
      operationId: ListEntitlements
      description: Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitlementsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListEntitlements request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 20 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/offerings:
    get:
      operationId: ListOfferings
      description: 'Displays a list of all offerings that are available to this account in the current AWS Region. If you have an active reservation (which means you''ve purchased an offering that has already started and hasn''t expired yet), your account isn''t eligible for other offerings.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListOfferings request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListOfferings request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/reservations:
    get:
      operationId: ListReservations
      description: Displays a list of all reservations that have been purchased by this account in the current AWS Region. This list includes all reservations in all states (such as active and expired).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return per API request. For example, you submit a ListReservations request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) The service might return fewer results than the MaxResults value. If MaxResults is not included in the request, the service defaults to pagination with a maximum of 10 results per page.'
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListReservations request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: List all tags on an AWS Elemental MediaConnect resource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource for which to list the tags.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.'
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource to which to add tags.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/v1/flows/{flowArn}/mediaStreams/{mediaStreamName}':
    delete:
      operationId: RemoveFlowMediaStream
      description: Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowMediaStreamResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the flow.
          schema:
            type: string
        - name: mediaStreamName
          in: path
          required: true
          description: The name of the media stream that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowMediaStream
      description: Updates an existing media stream.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowMediaStreamResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the flow.
          schema:
            type: string
        - name: mediaStreamName
          in: path
          required: true
          description: The name of the media stream that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  description: Attributes that are related to the media stream.
                  type: object
                  properties:
                    Fmtp:
                      allOf:
                        - $ref: '#/components/schemas/FmtpRequest'
                        - xml:
                            name: fmtp
                          description: The settings that you want to use to define the media stream.
                    Lang:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: lang
                          description: 'The audio language, in a format that is recognized by the receiver.'
                clockRate:
                  description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'
                  type: integer
                description:
                  description: Description
                  type: string
                mediaStreamType:
                  description: The type of media stream.
                  type: string
                  enum:
                    - video
                    - audio
                    - ancillary-data
                videoFormat:
                  description: The resolution of the video.
                  type: string
  '/v1/flows/{flowArn}/outputs/{outputArn}':
    delete:
      operationId: RemoveFlowOutput
      description: 'Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowOutputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove an output from.
          schema:
            type: string
        - name: outputArn
          in: path
          required: true
          description: The ARN of the output that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowOutput
      description: Updates an existing flow output.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowOutputResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the output that you want to update.
          schema:
            type: string
        - name: outputArn
          in: path
          required: true
          description: The ARN of the output that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cidrAllowList:
                  description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                description:
                  description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
                  type: string
                destination:
                  description: The IP address where you want to send the output.
                  type: string
                encryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                maxLatency:
                  description: The maximum latency in milliseconds for Zixi-based streams.
                  type: integer
                mediaStreamOutputConfigurations:
                  description: 'The media streams that are associated with the output, and the parameters for those associations.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'
                minLatency:
                  description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
                  type: integer
                port:
                  description: The port to use when content is distributed to this output.
                  type: integer
                protocol:
                  description: The protocol to use for the output.
                  type: string
                  enum:
                    - zixi-push
                    - rtp-fec
                    - rtp
                    - zixi-pull
                    - rist
                    - st2110-jpegxs
                    - cdi
                    - srt-listener
                remoteId:
                  description: The remote ID for the Zixi-pull stream.
                  type: string
                smoothingLatency:
                  description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
                  type: integer
                streamId:
                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                  type: string
                vpcInterfaceAttachment:
                  description: The settings for attaching a VPC interface to an output.
                  type: object
                  properties:
                    VpcInterfaceName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: vpcInterfaceName
                          description: The name of the VPC interface to use for this output.
  '/v1/flows/{flowArn}/source/{sourceArn}':
    delete:
      operationId: RemoveFlowSource
      description: Removes a source from an existing flow. This request can be made only if there is more than one source on the flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove a source from.
          schema:
            type: string
        - name: sourceArn
          in: path
          required: true
          description: The ARN of the source that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowSource
      description: Updates the source of a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the source that you want to update.
          schema:
            type: string
        - name: sourceArn
          in: path
          required: true
          description: The ARN of the source that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                decryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                description:
                  description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
                  type: string
                entitlementArn:
                  description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
                  type: string
                ingestPort:
                  description: The port that the flow will be listening on for incoming content.
                  type: integer
                maxBitrate:
                  description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
                  type: integer
                maxLatency:
                  description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
                  type: integer
                maxSyncBuffer:
                  description: The size of the buffer (in milliseconds) to use to sync incoming source data.
                  type: integer
                mediaStreamSourceConfigurations:
                  description: 'The media streams that are associated with the source, and the parameters for those associations.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'
                minLatency:
                  description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
                  type: integer
                protocol:
                  description: The protocol that is used by the source.
                  type: string
                  enum:
                    - zixi-push
                    - rtp-fec
                    - rtp
                    - zixi-pull
                    - rist
                    - st2110-jpegxs
                    - cdi
                    - srt-listener
                streamId:
                  description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
                  type: string
                vpcInterfaceName:
                  description: The name of the VPC interface to use for this source.
                  type: string
                whitelistCidr:
                  description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
                  type: string
  '/v1/flows/{flowArn}/vpcInterfaces/{vpcInterfaceName}':
    delete:
      operationId: RemoveFlowVpcInterface
      description: 'Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFlowVpcInterfaceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to remove a VPC interface from.
          schema:
            type: string
        - name: vpcInterfaceName
          in: path
          required: true
          description: The name of the VPC interface that you want to remove.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/{flowArn}/entitlements/{entitlementArn}':
    delete:
      operationId: RevokeFlowEntitlement
      description: 'Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeFlowEntitlementResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: entitlementArn
          in: path
          required: true
          description: The ARN of the entitlement that you want to revoke.
          schema:
            type: string
        - name: flowArn
          in: path
          required: true
          description: The flow that you want to revoke an entitlement from.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFlowEntitlement
      description: 'You can change an entitlement''s description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowEntitlementResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: entitlementArn
          in: path
          required: true
          description: The ARN of the entitlement that you want to update.
          schema:
            type: string
        - name: flowArn
          in: path
          required: true
          description: The flow that is associated with the entitlement that you want to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
                  type: string
                encryption:
                  description: Information about the encryption of the flow.
                  type: object
                  properties:
                    Algorithm:
                      allOf:
                        - $ref: '#/components/schemas/Algorithm'
                        - xml:
                            name: algorithm
                          description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
                    ConstantInitializationVector:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: constantInitializationVector
                          description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
                    DeviceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: deviceId
                          description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    KeyType:
                      allOf:
                        - $ref: '#/components/schemas/KeyType'
                        - xml:
                            name: keyType
                          description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
                    Region:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: region
                          description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    ResourceId:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: resourceId
                          description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
                    SecretArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretArn
                          description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
                    Url:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: url
                          description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
                entitlementStatus:
                  description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                subscribers:
                  description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
  '/v1/flows/start/{flowArn}':
    post:
      operationId: StartFlow
      description: Starts a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to start.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/flows/stop/{flowArn}':
    post:
      operationId: StopFlow
      description: Stops a flow.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: flowArn
          in: path
          required: true
          description: The ARN of the flow that you want to stop.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Deletes specified tags from a resource.
      responses:
        '204':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) that identifies the AWS Elemental MediaConnect resource from which to delete tags.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The keys of the tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddFlowMediaStreamsResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you added media streams to.
        MediaStreams:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStream'
            - xml:
                name: mediaStreams
              description: The media streams that you added to the flow.
    AddMediaStreamRequest:
      type: object
      required:
        - MediaStreamType
        - MediaStreamId
        - MediaStreamName
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MediaStreamAttributesRequest'
            - xml:
                name: attributes
              description: The attributes that you want to assign to the new media stream.
        ClockRate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: clockRate
              description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description that can help you quickly identify what your media stream is used for.
        MediaStreamId:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: mediaStreamId
              description: A unique identifier for the media stream.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: A name that helps you distinguish one media stream from another.
        MediaStreamType:
          allOf:
            - $ref: '#/components/schemas/MediaStreamType'
            - xml:
                name: mediaStreamType
              description: The type of media stream.
        VideoFormat:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoFormat
              description: The resolution of the video.
      description: The media stream that you want to add to the flow.
    BadRequestException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    AddFlowOutputsResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these outputs were added to.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfOutput'
            - xml:
                name: outputs
              description: The details of the newly added outputs.
    AddOutputRequest:
      type: object
      required:
        - Protocol
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The IP address from which video will be sent to output destinations.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds for Zixi-based streams.
        MediaStreamOutputConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'
            - xml:
                name: mediaStreamOutputConfigurations
              description: 'The media streams that are associated with the output, and the parameters for those associations.'
        MinLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minLatency
              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the output. This value must be unique within the current flow.
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol to use for the output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull output stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The output that you want to add to this flow.
    AddFlowOutputs420Exception: {}
    AddFlowSourcesResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these sources were added to.
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSource'
            - xml:
                name: sources
              description: The details of the newly added sources.
    SetSourceRequest:
      type: object
      properties:
        Decryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: decryption
              description: The type of encryption that is used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        MaxSyncBuffer:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxSyncBuffer
              description: The size of the buffer (in milliseconds) to use to sync incoming source data.
        MediaStreamSourceConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
            - xml:
                name: mediaStreamSourceConfigurations
              description: 'The media streams that are associated with the source, and the parameters for those associations.'
        MinLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minLatency
              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the source.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source.
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface to use for this source.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: The settings for the source of the flow.
    AddFlowVpcInterfacesResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these VPC interfaces were added to.
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterface'
            - xml:
                name: vpcInterfaces
              description: The details of the newly added VPC interfaces.
    VpcInterfaceRequest:
      type: object
      required:
        - SubnetId
        - SecurityGroupIds
        - RoleArn
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the VPC Interface. This value must be unique within the current flow.
        NetworkInterfaceType:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceType'
            - xml:
                name: networkInterfaceType
              description: 'The type of network interface. If this value is not included in the request, MediaConnect uses ENA as the networkInterfaceType.'
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: Role Arn MediaConnect can assumes to create ENIs in customer's account
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: Security Group IDs to be used on ENI.
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: subnetId
              description: Subnet must be in the AZ of the Flow
      description: Desired VPC Interface for a Flow
    CreateFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
    GrantEntitlementRequest:
      type: object
      required:
        - Subscribers
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output that is associated with this entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: 'An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the entitlement. This value must be unique within the current flow.
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.
      description: The entitlements that you want to grant on a flow.
    Encryption:
      type: object
      required:
        - RoleArn
      properties:
        Algorithm:
          allOf:
            - $ref: '#/components/schemas/Algorithm'
            - xml:
                name: algorithm
              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: deviceId
              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        KeyType:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - xml:
                name: keyType
              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
        SecretArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretArn
              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
      description: Information about the encryption of the flow.
    __string:
      type: string
    __integer:
      type: integer
    __listOfMediaStreamSourceConfigurationRequest:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamSourceConfigurationRequest'
    Protocol:
      type: string
      enum:
        - zixi-push
        - rtp-fec
        - rtp
        - zixi-pull
        - rist
        - st2110-jpegxs
        - cdi
        - srt-listener
    FailoverMode:
      type: string
      enum:
        - MERGE
        - FAILOVER
    SourcePriority:
      type: object
      properties:
        PrimarySource:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: primarySource
              description: The name of the source you choose as the primary source for this flow.
      description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
    State:
      type: string
      enum:
        - ENABLED
        - DISABLED
    CreateFlow420Exception: {}
    DeleteFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that was deleted.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the DeleteFlow process begins.
    DescribeFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
        Messages:
          allOf:
            - $ref: '#/components/schemas/Messages'
            - xml:
                name: messages
    DescribeOfferingResponse:
      type: object
      properties:
        Offering:
          allOf:
            - $ref: '#/components/schemas/Offering'
            - xml:
                name: offering
    DescribeReservationResponse:
      type: object
      properties:
        Reservation:
          allOf:
            - $ref: '#/components/schemas/Reservation'
            - xml:
                name: reservation
    GrantFlowEntitlementsResponse:
      type: object
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfEntitlement'
            - xml:
                name: entitlements
              description: The entitlements that were just granted.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that these entitlements were granted to.
    GrantFlowEntitlements420Exception: {}
    ListEntitlementsResponse:
      type: object
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfListedEntitlement'
            - xml:
                name: entitlements
              description: A list of entitlements that have been granted to you from other AWS accounts.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.'
    ListFlowsResponse:
      type: object
      properties:
        Flows:
          allOf:
            - $ref: '#/components/schemas/__listOfListedFlow'
            - xml:
                name: flows
              description: A list of flow summaries.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.'
    ListOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListOfferings request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListOfferings request a second time and specify the NextToken value.'
        Offerings:
          allOf:
            - $ref: '#/components/schemas/__listOfOffering'
            - xml:
                name: offerings
              description: A list of offerings that are available to this account in the current AWS Region.
    ListReservationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: 'The token that identifies which batch of results that you want to see. For example, you submit a ListReservations request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListReservations request a second time and specify the NextToken value.'
        Reservations:
          allOf:
            - $ref: '#/components/schemas/__listOfReservation'
            - xml:
                name: reservations
              description: A list of all reservations that have been purchased by this account in the current AWS Region.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
    PurchaseOfferingResponse:
      type: object
      properties:
        Reservation:
          allOf:
            - $ref: '#/components/schemas/Reservation'
            - xml:
                name: reservation
    RemoveFlowMediaStreamResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The Amazon Resource Name (ARN) of the flow.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: The name of the media stream that was removed.
    RemoveFlowOutputResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the output you removed.
        OutputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: outputArn
              description: The ARN of the output that was removed.
    RemoveFlowSourceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the source you removed.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: The ARN of the source that was removed.
    RemoveFlowVpcInterfaceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the VPC interface you removed.
        NonDeletedNetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: nonDeletedNetworkInterfaceIds
              description: IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface that was removed.
    RevokeFlowEntitlementResponse:
      type: object
      properties:
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement that was revoked.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that the entitlement was revoked from.
    StartFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you started.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the StartFlow process begins.
    StopFlowResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you stopped.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The status of the flow when the StopFlow process begins.
    UpdateFlowResponse:
      type: object
      properties:
        Flow:
          allOf:
            - $ref: '#/components/schemas/Flow'
            - xml:
                name: flow
    UpdateFlowEntitlementResponse:
      type: object
      properties:
        Entitlement:
          allOf:
            - $ref: '#/components/schemas/Entitlement'
            - xml:
                name: entitlement
              description: The new configuration of the entitlement that you updated.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that this entitlement was granted on.
    Algorithm:
      type: string
      enum:
        - aes128
        - aes192
        - aes256
    KeyType:
      type: string
      enum:
        - speke
        - static-key
        - srt-password
    UpdateFlowMediaStreamResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the media stream that you updated.
        MediaStream:
          allOf:
            - $ref: '#/components/schemas/MediaStream'
            - xml:
                name: mediaStream
              description: The media stream that you updated.
    FmtpRequest:
      type: object
      properties:
        ChannelOrder:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelOrder
              description: The format of the audio channel.
        Colorimetry:
          allOf:
            - $ref: '#/components/schemas/Colorimetry'
            - xml:
                name: colorimetry
              description: The format that is used for the representation of color.
        ExactFramerate:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: exactFramerate
              description: 'The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the exactFramerate.'
        Par:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: par
              description: The pixel aspect ratio (PAR) of the video.
        Range:
          allOf:
            - $ref: '#/components/schemas/Range'
            - xml:
                name: range
              description: The encoding range of the video.
        ScanMode:
          allOf:
            - $ref: '#/components/schemas/ScanMode'
            - xml:
                name: scanMode
              description: The type of compression that was used to smooth the video’s appearance.
        Tcs:
          allOf:
            - $ref: '#/components/schemas/Tcs'
            - xml:
                name: tcs
              description: The transfer characteristic system (TCS) that is used in the video.
      description: The settings that you want to use to define the media stream.
    UpdateFlowOutputResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that is associated with the updated output.
        Output:
          allOf:
            - $ref: '#/components/schemas/Output'
            - xml:
                name: output
              description: The new settings of the output that you updated.
    MediaStreamOutputConfigurationRequest:
      type: object
      required:
        - MediaStreamName
        - EncodingName
      properties:
        DestinationConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfDestinationConfigurationRequest'
            - xml:
                name: destinationConfigurations
              description: The transport parameters that you want to associate with the media stream.
        EncodingName:
          allOf:
            - $ref: '#/components/schemas/EncodingName'
            - xml:
                name: encodingName
              description: 'The format that will be used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'
        EncodingParameters:
          allOf:
            - $ref: '#/components/schemas/EncodingParametersRequest'
            - xml:
                name: encodingParameters
              description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: The name of the media stream that is associated with the output.
      description: 'The media stream that you want to associate with the output, and the parameters for that association.'
    UpdateFlowSourceResponse:
      type: object
      properties:
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow that you want to update.
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - xml:
                name: source
              description: The settings for the source of the flow.
    MediaStreamSourceConfigurationRequest:
      type: object
      required:
        - MediaStreamName
        - EncodingName
      properties:
        EncodingName:
          allOf:
            - $ref: '#/components/schemas/EncodingName'
            - xml:
                name: encodingName
              description: 'The format you want to use to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'
        InputConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputConfigurationRequest'
            - xml:
                name: inputConfigurations
              description: The transport parameters that you want to associate with the media stream.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: The name of the media stream.
      description: The definition of a media stream that you want to associate with the source.
    __listOfAddMediaStreamRequest:
      type: array
      items:
        $ref: '#/components/schemas/AddMediaStreamRequest'
    AddFlowMediaStreamsRequest:
      type: object
      required:
        - MediaStreams
      title: AddFlowMediaStreamsRequest
      properties:
        MediaStreams:
          allOf:
            - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'
            - xml:
                name: mediaStreams
              description: The media streams that you want to add to the flow.
      description: A request to add media streams to the flow.
    __listOfMediaStream:
      type: array
      items:
        $ref: '#/components/schemas/MediaStream'
    __listOfAddOutputRequest:
      type: array
      items:
        $ref: '#/components/schemas/AddOutputRequest'
    AddFlowOutputsRequest:
      type: object
      required:
        - Outputs
      title: AddFlowOutputsRequest
      properties:
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfAddOutputRequest'
            - xml:
                name: outputs
              description: A list of outputs that you want to add.
      description: A request to add outputs to the specified flow.
    __listOfOutput:
      type: array
      items:
        $ref: '#/components/schemas/Output'
    __listOfSetSourceRequest:
      type: array
      items:
        $ref: '#/components/schemas/SetSourceRequest'
    AddFlowSourcesRequest:
      type: object
      required:
        - Sources
      title: AddFlowSourcesRequest
      properties:
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSetSourceRequest'
            - xml:
                name: sources
              description: A list of sources that you want to add.
      description: A request to add sources to the flow.
    __listOfSource:
      type: array
      items:
        $ref: '#/components/schemas/Source'
    __listOfVpcInterfaceRequest:
      type: array
      items:
        $ref: '#/components/schemas/VpcInterfaceRequest'
    AddFlowVpcInterfacesRequest:
      type: object
      required:
        - VpcInterfaces
      title: AddFlowVpcInterfacesRequest
      properties:
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
            - xml:
                name: vpcInterfaces
              description: A list of VPC interfaces that you want to add.
      description: A request to add VPC interfaces to the flow.
    __listOfVpcInterface:
      type: array
      items:
        $ref: '#/components/schemas/VpcInterface'
    MediaStreamAttributesRequest:
      type: object
      properties:
        Fmtp:
          allOf:
            - $ref: '#/components/schemas/FmtpRequest'
            - xml:
                name: fmtp
              description: The settings that you want to use to define the media stream.
        Lang:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: lang
              description: 'The audio language, in a format that is recognized by the receiver.'
      description: Attributes that are related to the media stream.
    MediaStreamType:
      type: string
      enum:
        - video
        - audio
        - ancillary-data
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __listOfMediaStreamOutputConfigurationRequest:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamOutputConfigurationRequest'
    VpcInterfaceAttachment:
      type: object
      properties:
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface to use for this output.
      description: The settings for attaching a VPC interface to an output.
    Colorimetry:
      type: string
      enum:
        - BT601
        - BT709
        - BT2020
        - BT2100
        - ST2065-1
        - ST2065-3
        - XYZ
    __listOfGrantEntitlementRequest:
      type: array
      items:
        $ref: '#/components/schemas/GrantEntitlementRequest'
    FailoverConfig:
      type: object
      properties:
        FailoverMode:
          allOf:
            - $ref: '#/components/schemas/FailoverMode'
            - xml:
                name: failoverMode
              description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'
        RecoveryWindow:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: recoveryWindow
              description: Search window time to look for dash-7 packets
        SourcePriority:
          allOf:
            - $ref: '#/components/schemas/SourcePriority'
            - xml:
                name: sourcePriority
              description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
        State:
          allOf:
            - $ref: '#/components/schemas/State'
            - xml:
                name: state
      description: The settings for source failover
    CreateFlowRequest:
      type: object
      required:
        - Name
      title: CreateFlowRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
            - xml:
                name: entitlements
              description: The entitlements that you want to grant on a flow.
        MediaStreams:
          allOf:
            - $ref: '#/components/schemas/__listOfAddMediaStreamRequest'
            - xml:
                name: mediaStreams
              description: The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfAddOutputRequest'
            - xml:
                name: outputs
              description: The outputs that you want to add to this flow.
        Source:
          allOf:
            - $ref: '#/components/schemas/SetSourceRequest'
            - xml:
                name: source
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/FailoverConfig'
            - xml:
                name: sourceFailoverConfig
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSetSourceRequest'
            - xml:
                name: sources
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterfaceRequest'
            - xml:
                name: vpcInterfaces
              description: The VPC interfaces you want on the flow.
      description: Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).
    Flow:
      type: object
      required:
        - Status
        - Entitlements
        - Outputs
        - AvailabilityZone
        - FlowArn
        - Source
        - Name
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EgressIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: egressIp
              description: The IP address from which video will be sent to output destinations.
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfEntitlement'
            - xml:
                name: entitlements
              description: The entitlements in this flow.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: 'The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.'
        MediaStreams:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStream'
            - xml:
                name: mediaStreams
              description: 'The media streams that are associated with the flow. After you associate a media stream with a source, you can also associate it with outputs on the flow.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        Outputs:
          allOf:
            - $ref: '#/components/schemas/__listOfOutput'
            - xml:
                name: outputs
              description: The outputs in this flow.
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - xml:
                name: source
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/FailoverConfig'
            - xml:
                name: sourceFailoverConfig
        Sources:
          allOf:
            - $ref: '#/components/schemas/__listOfSource'
            - xml:
                name: sources
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The current status of the flow.
        VpcInterfaces:
          allOf:
            - $ref: '#/components/schemas/__listOfVpcInterface'
            - xml:
                name: vpcInterfaces
              description: The VPC Interfaces for this flow.
      description: 'The settings for a flow, including its source, outputs, and entitlements.'
    DeleteFlowRequest:
      type: object
      title: DeleteFlowRequest
      properties: {}
    Status:
      type: string
      enum:
        - STANDBY
        - ACTIVE
        - UPDATING
        - DELETING
        - STARTING
        - STOPPING
        - ERROR
    DescribeFlowRequest:
      type: object
      title: DescribeFlowRequest
      properties: {}
    Messages:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: errors
              description: A list of errors that might have been generated from processes on this flow.
      description: Messages that provide the state of the flow.
    DescribeOfferingRequest:
      type: object
      title: DescribeOfferingRequest
      properties: {}
    Offering:
      type: object
      required:
        - CurrencyCode
        - OfferingArn
        - OfferingDescription
        - DurationUnits
        - Duration
        - PricePerUnit
        - ResourceSpecification
        - PriceUnits
      properties:
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: The type of currency that is used for billing. The currencyCode used for all reservations is US dollars.
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: The length of time that your reservation would be active.
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/DurationUnits'
            - xml:
                name: durationUnits
              description: The unit of measurement for the duration of the offering.
        OfferingArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringArn
              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: A description of the offering.
        PricePerUnit:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pricePerUnit
              description: 'The cost of a single unit. This value, in combination with priceUnits, makes up the rate.'
        PriceUnits:
          allOf:
            - $ref: '#/components/schemas/PriceUnits'
            - xml:
                name: priceUnits
              description: 'The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate.'
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ResourceSpecification'
            - xml:
                name: resourceSpecification
              description: A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering.
      description: A savings plan that reserves a certain amount of outbound bandwidth usage at a discounted rate each month over a period of time.
    DescribeReservationRequest:
      type: object
      title: DescribeReservationRequest
      properties: {}
    Reservation:
      type: object
      required:
        - CurrencyCode
        - ReservationState
        - OfferingArn
        - ReservationArn
        - Start
        - OfferingDescription
        - ReservationName
        - End
        - Duration
        - DurationUnits
        - PricePerUnit
        - ResourceSpecification
        - PriceUnits
      properties:
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: currencyCode
              description: The type of currency that is used for billing. The currencyCode used for your reservation is US dollars.
        Duration:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: duration
              description: The length of time that this reservation is active. MediaConnect defines this value in the offering.
        DurationUnits:
          allOf:
            - $ref: '#/components/schemas/DurationUnits'
            - xml:
                name: durationUnits
              description: The unit of measurement for the duration of the reservation. MediaConnect defines this value in the offering.
        End:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: end
              description: The day and time that this reservation expires. This value is calculated based on the start date and time that you set and the offering's duration.
        OfferingArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringArn
              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.
        OfferingDescription:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: offeringDescription
              description: A description of the offering. MediaConnect defines this value in the offering.
        PricePerUnit:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: pricePerUnit
              description: 'The cost of a single unit. This value, in combination with priceUnits, makes up the rate. MediaConnect defines this value in the offering.'
        PriceUnits:
          allOf:
            - $ref: '#/components/schemas/PriceUnits'
            - xml:
                name: priceUnits
              description: 'The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate. MediaConnect defines this value in the offering.'
        ReservationArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationArn
              description: The Amazon Resource Name (ARN) that MediaConnect assigns to the reservation when you purchase an offering.
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationName
              description: The name that you assigned to the reservation when you purchased the offering.
        ReservationState:
          allOf:
            - $ref: '#/components/schemas/ReservationState'
            - xml:
                name: reservationState
              description: The status of your reservation.
        ResourceSpecification:
          allOf:
            - $ref: '#/components/schemas/ResourceSpecification'
            - xml:
                name: resourceSpecification
              description: A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering. MediaConnect defines the values that make up the resourceSpecification in the offering.
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: The day and time that the reservation becomes active. You set this value when you purchase the offering.
      description: 'A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.'
    Interface:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the VPC interface.
      description: The VPC interface that is used for the media stream associated with the source or output.
    DestinationConfiguration:
      type: object
      required:
        - DestinationIp
        - DestinationPort
        - Interface
        - OutboundIp
      properties:
        DestinationIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destinationIp
              description: The IP address where contents of the media stream will be sent.
        DestinationPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: destinationPort
              description: The port to use when the content of the media stream is distributed to the output.
        Interface:
          allOf:
            - $ref: '#/components/schemas/Interface'
            - xml:
                name: interface
              description: The VPC interface that is used for the media stream associated with the output.
        OutboundIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: outboundIp
              description: The IP address that the receiver requires in order to establish a connection with the flow. This value is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the CDI or ST 2110 JPEG XS protocol.
      description: The transport parameters that are associated with an outbound media stream.
    InterfaceRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the VPC interface.
      description: The VPC interface that you want to designate where the media stream is coming from or going to.
    DestinationConfigurationRequest:
      type: object
      required:
        - DestinationIp
        - DestinationPort
        - Interface
      properties:
        DestinationIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destinationIp
              description: The IP address where you want MediaConnect to send contents of the media stream.
        DestinationPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: destinationPort
              description: The port that you want MediaConnect to use when it distributes the media stream to the output.
        Interface:
          allOf:
            - $ref: '#/components/schemas/InterfaceRequest'
            - xml:
                name: interface
              description: The VPC interface that you want to use for the media stream associated with the output.
      description: The transport parameters that you want to associate with an outbound media stream.
    DurationUnits:
      type: string
      enum:
        - MONTHS
    EncoderProfile:
      type: string
      enum:
        - main
        - high
    EncodingName:
      type: string
      enum:
        - jxsv
        - raw
        - smpte291
        - pcm
    __double:
      type: number
      format: double
    EncodingParameters:
      type: object
      required:
        - EncoderProfile
        - CompressionFactor
      properties:
        CompressionFactor:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: compressionFactor
              description: 'A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.'
        EncoderProfile:
          allOf:
            - $ref: '#/components/schemas/EncoderProfile'
            - xml:
                name: encoderProfile
              description: 'A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.'
      description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.
    EncodingParametersRequest:
      type: object
      required:
        - EncoderProfile
        - CompressionFactor
      properties:
        CompressionFactor:
          allOf:
            - $ref: '#/components/schemas/__double'
            - xml:
                name: compressionFactor
              description: 'A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.'
        EncoderProfile:
          allOf:
            - $ref: '#/components/schemas/EncoderProfile'
            - xml:
                name: encoderProfile
              description: 'A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, if at least one source on the flow uses the CDI protocol.'
      description: A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.
    EntitlementStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Entitlement:
      type: object
      required:
        - EntitlementArn
        - Subscribers
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output that is associated with this entitlement.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: An indication of whether the entitlement is enabled.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the entitlement.
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
      description: The settings for a flow entitlement.
    __listOfEntitlement:
      type: array
      items:
        $ref: '#/components/schemas/Entitlement'
    Source:
      type: object
      required:
        - SourceArn
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Decryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: decryption
              description: The type of encryption that is used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
        IngestIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: ingestIp
              description: The IP address that the flow will be listening on for incoming content.
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        MediaStreamSourceConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfiguration'
            - xml:
                name: mediaStreamSourceConfigurations
              description: 'The media streams that are associated with the source, and the parameters for those associations.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the source.
        SourceArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: sourceArn
              description: The ARN of the source.
        Transport:
          allOf:
            - $ref: '#/components/schemas/Transport'
            - xml:
                name: transport
              description: Attributes related to the transport stream that are used in the source.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface that is used for this source.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: The settings for the source of the flow.
    Range:
      type: string
      enum:
        - NARROW
        - FULL
        - FULLPROTECT
    ScanMode:
      type: string
      enum:
        - progressive
        - interlace
        - progressive-segmented-frame
    Tcs:
      type: string
      enum:
        - SDR
        - PQ
        - HLG
        - LINEAR
        - BT2100LINPQ
        - BT2100LINHLG
        - ST2065-1
        - ST428-1
        - DENSITY
    Fmtp:
      type: object
      properties:
        ChannelOrder:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelOrder
              description: The format of the audio channel.
        Colorimetry:
          allOf:
            - $ref: '#/components/schemas/Colorimetry'
            - xml:
                name: colorimetry
              description: The format that is used for the representation of color.
        ExactFramerate:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: exactFramerate
              description: 'The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the exactFramerate.'
        Par:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: par
              description: The pixel aspect ratio (PAR) of the video.
        Range:
          allOf:
            - $ref: '#/components/schemas/Range'
            - xml:
                name: range
              description: The encoding range of the video.
        ScanMode:
          allOf:
            - $ref: '#/components/schemas/ScanMode'
            - xml:
                name: scanMode
              description: The type of compression that was used to smooth the video’s appearance
        Tcs:
          allOf:
            - $ref: '#/components/schemas/Tcs'
            - xml:
                name: tcs
              description: The transfer characteristic system (TCS) that is used in the video.
      description: FMTP
    GrantFlowEntitlementsRequest:
      type: object
      required:
        - Entitlements
      title: GrantFlowEntitlementsRequest
      properties:
        Entitlements:
          allOf:
            - $ref: '#/components/schemas/__listOfGrantEntitlementRequest'
            - xml:
                name: entitlements
              description: The list of entitlements that you want to grant.
      description: A request to grant entitlements on a flow.
    InputConfiguration:
      type: object
      required:
        - InputPort
        - InputIp
        - Interface
      properties:
        InputIp:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: inputIp
              description: The IP address that the flow listens on for incoming content for a media stream.
        InputPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: inputPort
              description: The port that the flow listens on for an incoming media stream.
        Interface:
          allOf:
            - $ref: '#/components/schemas/Interface'
            - xml:
                name: interface
              description: The VPC interface where the media stream comes in from.
      description: The transport parameters that are associated with an incoming media stream.
    InputConfigurationRequest:
      type: object
      required:
        - InputPort
        - Interface
      properties:
        InputPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: inputPort
              description: The port that you want the flow to listen on for an incoming media stream.
        Interface:
          allOf:
            - $ref: '#/components/schemas/InterfaceRequest'
            - xml:
                name: interface
              description: The VPC interface that you want to use for the incoming media stream.
      description: The transport parameters that you want to associate with an incoming media stream.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListEntitlementsRequest:
      type: object
      title: ListEntitlementsRequest
      properties: {}
    __listOfListedEntitlement:
      type: array
      items:
        $ref: '#/components/schemas/ListedEntitlement'
    ListFlowsRequest:
      type: object
      title: ListFlowsRequest
      properties: {}
    __listOfListedFlow:
      type: array
      items:
        $ref: '#/components/schemas/ListedFlow'
    ListOfferingsRequest:
      type: object
      title: ListOfferingsRequest
      properties: {}
    __listOfOffering:
      type: array
      items:
        $ref: '#/components/schemas/Offering'
    ListReservationsRequest:
      type: object
      title: ListReservationsRequest
      properties: {}
    __listOfReservation:
      type: array
      items:
        $ref: '#/components/schemas/Reservation'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    ListedEntitlement:
      type: object
      required:
        - EntitlementArn
        - EntitlementName
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement.
        EntitlementName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementName
              description: The name of the entitlement.
      description: An entitlement that has been granted to you from other AWS accounts.
    SourceType:
      type: string
      enum:
        - OWNED
        - ENTITLED
    ListedFlow:
      type: object
      required:
        - Status
        - Description
        - SourceType
        - AvailabilityZone
        - FlowArn
        - Name
      properties:
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: availabilityZone
              description: The Availability Zone that the flow was created in.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the flow.
        FlowArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: flowArn
              description: The ARN of the flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the flow.
        SourceType:
          allOf:
            - $ref: '#/components/schemas/SourceType'
            - xml:
                name: sourceType
              description: The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: The current status of the flow.
      description: 'Provides a summary of a flow, including its ARN, Availability Zone, and source type.'
    MediaStreamAttributes:
      type: object
      required:
        - Fmtp
      properties:
        Fmtp:
          allOf:
            - $ref: '#/components/schemas/Fmtp'
            - xml:
                name: fmtp
              description: A set of parameters that define the media stream.
        Lang:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: lang
              description: 'The audio language, in a format that is recognized by the receiver.'
      description: Attributes that are related to the media stream.
    MediaStream:
      type: object
      required:
        - MediaStreamType
        - MediaStreamId
        - MediaStreamName
        - Fmt
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MediaStreamAttributes'
            - xml:
                name: attributes
              description: Attributes that are related to the media stream.
        ClockRate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: clockRate
              description: The sample rate for the stream. This value is measured in Hz.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description that can help you quickly identify what your media stream is used for.
        Fmt:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: fmt
              description: 'The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.'
        MediaStreamId:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: mediaStreamId
              description: A unique identifier for the media stream.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: A name that helps you distinguish one media stream from another.
        MediaStreamType:
          allOf:
            - $ref: '#/components/schemas/MediaStreamType'
            - xml:
                name: mediaStreamType
              description: The type of media stream.
        VideoFormat:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoFormat
              description: The resolution of the video.
      description: 'A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.'
    __listOfDestinationConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/DestinationConfiguration'
    MediaStreamOutputConfiguration:
      type: object
      required:
        - MediaStreamName
        - EncodingName
      properties:
        DestinationConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfDestinationConfiguration'
            - xml:
                name: destinationConfigurations
              description: The transport parameters that are associated with each outbound media stream.
        EncodingName:
          allOf:
            - $ref: '#/components/schemas/EncodingName'
            - xml:
                name: encodingName
              description: 'The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'
        EncodingParameters:
          allOf:
            - $ref: '#/components/schemas/EncodingParameters'
            - xml:
                name: encodingParameters
              description: Encoding parameters
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: The name of the media stream.
      description: 'The media stream that is associated with the output, and the parameters for that association.'
    __listOfDestinationConfigurationRequest:
      type: array
      items:
        $ref: '#/components/schemas/DestinationConfigurationRequest'
    __listOfInputConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/InputConfiguration'
    MediaStreamSourceConfiguration:
      type: object
      required:
        - MediaStreamName
        - EncodingName
      properties:
        EncodingName:
          allOf:
            - $ref: '#/components/schemas/EncodingName'
            - xml:
                name: encodingName
              description: 'The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.'
        InputConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfInputConfiguration'
            - xml:
                name: inputConfigurations
              description: The transport parameters that are associated with an incoming media stream.
        MediaStreamName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaStreamName
              description: The name of the media stream.
      description: 'The media stream that is associated with the source, and the parameters for that association.'
    __listOfInputConfigurationRequest:
      type: array
      items:
        $ref: '#/components/schemas/InputConfigurationRequest'
    NetworkInterfaceType:
      type: string
      enum:
        - ena
        - efa
    PriceUnits:
      type: string
      enum:
        - HOURLY
    ResourceSpecification:
      type: object
      required:
        - ResourceType
      properties:
        ReservedBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: reservedBitrate
              description: The amount of outbound bandwidth that is discounted in the offering.
        ResourceType:
          allOf:
            - $ref: '#/components/schemas/ResourceType'
            - xml:
                name: resourceType
              description: The type of resource and the unit that is being billed for.
      description: 'A definition of what is being billed for, including the type and amount.'
    __listOfMediaStreamOutputConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamOutputConfiguration'
    Transport:
      type: object
      required:
        - Protocol
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        MaxSyncBuffer:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxSyncBuffer
              description: The size of the buffer (in milliseconds) to use to sync incoming source data.
        MinLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minLatency
              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source or output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
      description: Attributes related to the transport stream that are used in a source or output.
    Output:
      type: object
      required:
        - OutputArn
        - Name
      properties:
        DataTransferSubscriberFeePercent:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: dataTransferSubscriberFeePercent
              description: Percentage from 0-100 of the data transfer cost to be billed to the subscriber.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The address where you want to send the output.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/Encryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.
        ListenerAddress:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: listenerAddress
              description: 'The IP address that the receiver requires in order to establish a connection with the flow. For public networking, the ListenerAddress is represented by the elastic IP address of the flow. For private networking, the ListenerAddress is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the Zixi pull or SRT listener protocol.'
        MediaLiveInputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: mediaLiveInputArn
              description: The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.
        MediaStreamOutputConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfiguration'
            - xml:
                name: mediaStreamOutputConfigurations
              description: The configuration for each media stream that is associated with the output.
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: The name of the output. This value must be unique within the current flow.
        OutputArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: outputArn
              description: The ARN of the output.
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Transport:
          allOf:
            - $ref: '#/components/schemas/Transport'
            - xml:
                name: transport
              description: Attributes related to the transport stream that are used in the output.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The settings for an output.
    PurchaseOfferingRequest:
      type: object
      required:
        - Start
        - ReservationName
      title: PurchaseOfferingRequest
      properties:
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: reservationName
              description: The name that you want to use for the reservation.
        Start:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: start
              description: 'The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). You can specify any date and time between 12:00am on the first day of the current month to the current time on today''s date, inclusive. Specify the start in a 24-hour notation. Use the following format: YYYY-MM-DDTHH:mm:SSZ, where T and Z are literal characters. For example, to specify 11:30pm on March 5, 2020, enter 2020-03-05T23:30:00Z.'
      description: A request to purchase a offering.
    RemoveFlowMediaStreamRequest:
      type: object
      title: RemoveFlowMediaStreamRequest
      properties: {}
    RemoveFlowOutputRequest:
      type: object
      title: RemoveFlowOutputRequest
      properties: {}
    RemoveFlowSourceRequest:
      type: object
      title: RemoveFlowSourceRequest
      properties: {}
    RemoveFlowVpcInterfaceRequest:
      type: object
      title: RemoveFlowVpcInterfaceRequest
      properties: {}
    ReservationState:
      type: string
      enum:
        - ACTIVE
        - EXPIRED
        - PROCESSING
        - CANCELED
    ResourceType:
      type: string
      enum:
        - Mbps_Outbound_Bandwidth
    RevokeFlowEntitlementRequest:
      type: object
      title: RevokeFlowEntitlementRequest
      properties: {}
    __listOfMediaStreamSourceConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamSourceConfiguration'
    StartFlowRequest:
      type: object
      title: StartFlowRequest
      properties: {}
    StopFlowRequest:
      type: object
      title: StopFlowRequest
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
              description: 'A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
      description: 'The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateEncryption:
      type: object
      properties:
        Algorithm:
          allOf:
            - $ref: '#/components/schemas/Algorithm'
            - xml:
                name: algorithm
              description: 'The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).'
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.'
        DeviceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: deviceId
              description: The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        KeyType:
          allOf:
            - $ref: '#/components/schemas/KeyType'
            - xml:
                name: keyType
              description: 'The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        Region:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: region
              description: The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
        SecretArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretArn
              description: The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.
      description: Information about the encryption of the flow.
    UpdateFailoverConfig:
      type: object
      properties:
        FailoverMode:
          allOf:
            - $ref: '#/components/schemas/FailoverMode'
            - xml:
                name: failoverMode
              description: 'The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.'
        RecoveryWindow:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: recoveryWindow
              description: Recovery window time to look for dash-7 packets
        SourcePriority:
          allOf:
            - $ref: '#/components/schemas/SourcePriority'
            - xml:
                name: sourcePriority
              description: The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
        State:
          allOf:
            - $ref: '#/components/schemas/State'
            - xml:
                name: state
      description: The settings for source failover
    UpdateFlowEntitlementRequest:
      type: object
      title: UpdateFlowEntitlementRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: encryption
              description: The type of encryption that will be used on the output associated with this entitlement.
        EntitlementStatus:
          allOf:
            - $ref: '#/components/schemas/EntitlementStatus'
            - xml:
                name: entitlementStatus
              description: 'An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the entitlementStatus field in your request, MediaConnect leaves the value unchanged.'
        Subscribers:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: subscribers
              description: The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.
      description: The entitlement fields that you want to update.
    UpdateFlowMediaStreamRequest:
      type: object
      title: UpdateFlowMediaStreamRequest
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MediaStreamAttributesRequest'
            - xml:
                name: attributes
              description: The attributes that you want to assign to the media stream.
        ClockRate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: clockRate
              description: 'The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: Description
        MediaStreamType:
          allOf:
            - $ref: '#/components/schemas/MediaStreamType'
            - xml:
                name: mediaStreamType
              description: The type of media stream.
        VideoFormat:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: videoFormat
              description: The resolution of the video.
      description: The fields that you want to update in the media stream.
    UpdateFlowOutputRequest:
      type: object
      title: UpdateFlowOutputRequest
      properties:
        CidrAllowList:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: cidrAllowList
              description: 'The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.
        Destination:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: destination
              description: The IP address where you want to send the output.
        Encryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: encryption
              description: 'The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds for Zixi-based streams.
        MediaStreamOutputConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamOutputConfigurationRequest'
            - xml:
                name: mediaStreamOutputConfigurations
              description: 'The media streams that are associated with the output, and the parameters for those associations.'
        MinLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minLatency
              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
        Port:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: port
              description: The port to use when content is distributed to this output.
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol to use for the output.
        RemoteId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: remoteId
              description: The remote ID for the Zixi-pull stream.
        SmoothingLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: smoothingLatency
              description: 'The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.'
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceAttachment:
          allOf:
            - $ref: '#/components/schemas/VpcInterfaceAttachment'
            - xml:
                name: vpcInterfaceAttachment
              description: The name of the VPC interface attachment to use for this output.
      description: The fields that you want to update in the output.
    UpdateFlowRequest:
      type: object
      title: UpdateFlowRequest
      properties:
        SourceFailoverConfig:
          allOf:
            - $ref: '#/components/schemas/UpdateFailoverConfig'
            - xml:
                name: sourceFailoverConfig
      description: A request to update flow.
    UpdateFlowSourceRequest:
      type: object
      title: UpdateFlowSourceRequest
      properties:
        Decryption:
          allOf:
            - $ref: '#/components/schemas/UpdateEncryption'
            - xml:
                name: decryption
              description: The type of encryption used on the content ingested from this source.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: entitlementArn
              description: 'The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator''s flow.'
        IngestPort:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: ingestPort
              description: The port that the flow will be listening on for incoming content.
        MaxBitrate:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxBitrate
              description: 'The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.'
        MaxLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxLatency
              description: The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
        MaxSyncBuffer:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxSyncBuffer
              description: The size of the buffer (in milliseconds) to use to sync incoming source data.
        MediaStreamSourceConfigurations:
          allOf:
            - $ref: '#/components/schemas/__listOfMediaStreamSourceConfigurationRequest'
            - xml:
                name: mediaStreamSourceConfigurations
              description: 'The media streams that are associated with the source, and the parameters for those associations.'
        MinLatency:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minLatency
              description: 'The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.'
        Protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
            - xml:
                name: protocol
              description: The protocol that is used by the source.
        StreamId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: streamId
              description: The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
        VpcInterfaceName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: vpcInterfaceName
              description: The name of the VPC interface to use for this source.
        WhitelistCidr:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: whitelistCidr
              description: 'The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.'
      description: A request to update the source of a flow.
    VpcInterface:
      type: object
      required:
        - NetworkInterfaceType
        - NetworkInterfaceIds
        - SubnetId
        - SecurityGroupIds
        - RoleArn
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: name
              description: Immutable and has to be a unique against other VpcInterfaces in this Flow
        NetworkInterfaceIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: networkInterfaceIds
              description: IDs of the network interfaces created in customer's account by MediaConnect.
        NetworkInterfaceType:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaceType'
            - xml:
                name: networkInterfaceType
              description: The type of network interface.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: Role Arn MediaConnect can assumes to create ENIs in customer's account
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: securityGroupIds
              description: Security Group IDs to be used on ENI.
        SubnetId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: subnetId
              description: Subnet must be in the AZ of the Flow
      description: The settings for a VPC Source.
security:
  - hmac: []
