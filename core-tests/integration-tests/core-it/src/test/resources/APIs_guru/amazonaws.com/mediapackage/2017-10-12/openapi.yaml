openapi: 3.0.0
info:
  version: '2017-10-12'
  x-release: v4
  title: AWS Elemental MediaPackage
  description: AWS Elemental MediaPackage
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage
  x-aws-signingName: mediapackage
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-2017-10-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediapackage/'
servers:
  - url: 'http://mediapackage.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: 'https://mediapackage.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: 'http://mediapackage.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mediapackage.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/channels/{id}/configure_logs':
    put:
      operationId: ConfigureLogs
      description: Changes the Channel's properities to configure log subscription
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel to log subscription.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                egressAccessLogs:
                  description: Configure egress access logging.
                  type: object
                  properties:
                    LogGroupName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: logGroupName
                          description: Customize the log group name.
                ingressAccessLogs:
                  description: Configure ingress access logging.
                  type: object
                  properties:
                    LogGroupName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: logGroupName
                          description: Customize the log group name.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels:
    post:
      operationId: CreateChannel
      description: Creates a new Channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                description:
                  description: A short text description of the Channel.
                  type: string
                id:
                  description: |
                    The ID of the Channel. The ID must be unique within the region and it
                    cannot be changed after a Channel is created.
                  type: string
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannels
      description: Returns a collection of Channels.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /harvest_jobs:
    post:
      operationId: CreateHarvestJob
      description: Creates a new HarvestJob record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHarvestJobResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - endTime
                - id
                - originEndpointId
                - s3Destination
                - startTime
              properties:
                endTime:
                  description: |
                    The end of the time-window which will be harvested
                  type: string
                id:
                  description: |
                    The ID of the HarvestJob. The ID must be unique within the region
                    and it cannot be changed after the HarvestJob is submitted
                  type: string
                originEndpointId:
                  description: |
                    The ID of the OriginEndpoint that the HarvestJob will harvest from.
                    This cannot be changed after the HarvestJob is submitted.
                  type: string
                s3Destination:
                  description: |
                    Configuration parameters for where in an S3 bucket to place the harvested content
                  type: object
                  properties:
                    BucketName:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: bucketName
                          description: |
                            The name of an S3 bucket within which harvested content will be exported
                    ManifestKey:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: manifestKey
                          description: |
                            The key in the specified S3 bucket where the harvested top-level manifest will be placed.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: roleArn
                          description: |
                            The IAM role used to write to the specified S3 bucket
                startTime:
                  description: |
                    The start of the time-window which will be harvested
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListHarvestJobs
      description: Returns a collection of HarvestJob records.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHarvestJobsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: includeChannelId
          in: query
          required: false
          description: 'When specified, the request will return only HarvestJobs associated with the given Channel ID.'
          schema:
            type: string
        - name: includeStatus
          in: query
          required: false
          description: 'When specified, the request will return only HarvestJobs in the given status.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /origin_endpoints:
    post:
      operationId: CreateOriginEndpoint
      description: Creates a new OriginEndpoint record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channelId
                - id
              properties:
                authorization:
                  description: CDN Authorization credentials
                  type: object
                  properties:
                    CdnIdentifierSecret:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: cdnIdentifierSecret
                          description: |
                            The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
                    SecretsRoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretsRoleArn
                          description: |
                            The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
                channelId:
                  description: |
                    The ID of the Channel that the OriginEndpoint will be associated with.
                    This cannot be changed after the OriginEndpoint is created.
                  type: string
                cmafPackage:
                  description: A Common Media Application Format (CMAF) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/CmafEncryption'
                        - xml:
                            name: encryption
                    HlsManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
                        - xml:
                            name: hlsManifests
                          description: A list of HLS manifest configurations
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each segment. Actual segments will be
                            rounded to the nearest multiple of the source segment duration.
                    SegmentPrefix:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: segmentPrefix
                          description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                dashPackage:
                  description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
                  type: object
                  properties:
                    AdTriggers:
                      allOf:
                        - $ref: '#/components/schemas/AdTriggers'
                        - xml:
                            name: adTriggers
                    AdsOnDeliveryRestrictions:
                      allOf:
                        - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
                        - xml:
                            name: adsOnDeliveryRestrictions
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/DashEncryption'
                        - xml:
                            name: encryption
                    ManifestLayout:
                      allOf:
                        - $ref: '#/components/schemas/ManifestLayout'
                        - xml:
                            name: manifestLayout
                          description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
                    ManifestWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: manifestWindowSeconds
                          description: Time window (in seconds) contained in each manifest.
                    MinBufferTimeSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: minBufferTimeSeconds
                          description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
                    MinUpdatePeriodSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: minUpdatePeriodSeconds
                          description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
                    PeriodTriggers:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
                        - xml:
                            name: periodTriggers
                          description: |
                            A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                            Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                            be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                            the Channel source contains SCTE-35 ad markers.
                    Profile:
                      allOf:
                        - $ref: '#/components/schemas/Profile'
                        - xml:
                            name: profile
                          description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each segment. Actual segments will be
                            rounded to the nearest multiple of the source segment duration.
                    SegmentTemplateFormat:
                      allOf:
                        - $ref: '#/components/schemas/SegmentTemplateFormat'
                        - xml:
                            name: segmentTemplateFormat
                          description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                    SuggestedPresentationDelaySeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: suggestedPresentationDelaySeconds
                          description: Duration (in seconds) to delay live content before presentation.
                    UtcTiming:
                      allOf:
                        - $ref: '#/components/schemas/UtcTiming'
                        - xml:
                            name: utcTiming
                          description: Determines the type of UTCTiming included in the Media Presentation Description (MPD)
                    UtcTimingUri:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: utcTimingUri
                          description: Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
                description:
                  description: A short text description of the OriginEndpoint.
                  type: string
                hlsPackage:
                  description: An HTTP Live Streaming (HLS) packaging configuration.
                  type: object
                  properties:
                    AdMarkers:
                      allOf:
                        - $ref: '#/components/schemas/AdMarkers'
                        - xml:
                            name: adMarkers
                          description: |
                            This setting controls how ad markers are included in the packaged OriginEndpoint.
                            "NONE" will omit all SCTE-35 ad markers from the output.
                            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                            markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                            "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                            messages in the input source.
                            "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events 
                            in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value 
                            that is greater than 0.
                    AdTriggers:
                      allOf:
                        - $ref: '#/components/schemas/AdTriggers'
                        - xml:
                            name: adTriggers
                    AdsOnDeliveryRestrictions:
                      allOf:
                        - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
                        - xml:
                            name: adsOnDeliveryRestrictions
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/HlsEncryption'
                        - xml:
                            name: encryption
                    IncludeIframeOnlyStream:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: includeIframeOnlyStream
                          description: 'When enabled, an I-Frame only stream will be included in the output.'
                    PlaylistType:
                      allOf:
                        - $ref: '#/components/schemas/PlaylistType'
                        - xml:
                            name: playlistType
                          description: |
                            The HTTP Live Streaming (HLS) playlist type.
                            When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                            entry will be included in the media playlist.
                    PlaylistWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: playlistWindowSeconds
                          description: Time window (in seconds) contained in each parent manifest.
                    ProgramDateTimeIntervalSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: programDateTimeIntervalSeconds
                          description: |
                            The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                            inserted into manifests. Additionally, when an interval is specified
                            ID3Timed Metadata messages will be generated every 5 seconds using the
                            ingest time of the content.
                            If the interval is not specified, or set to 0, then
                            no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                            ID3Timed Metadata messages will be generated. Note that irrespective
                            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                            it will be passed through to HLS output.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each fragment. Actual fragments will be
                            rounded to the nearest multiple of the source fragment duration.
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                    UseAudioRenditionGroup:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: useAudioRenditionGroup
                          description: 'When enabled, audio streams will be placed in rendition groups in the output.'
                id:
                  description: |
                    The ID of the OriginEndpoint.  The ID must be unique within the region
                    and it cannot be changed after the OriginEndpoint is created.
                  type: string
                manifestName:
                  description: A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").
                  type: string
                mssPackage:
                  description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/MssEncryption'
                        - xml:
                            name: encryption
                    ManifestWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: manifestWindowSeconds
                          description: The time window (in seconds) contained in each manifest.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: The duration (in seconds) of each segment.
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                origination:
                  description: |
                    Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                    may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                    requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                  enum:
                    - ALLOW
                    - DENY
                  type: string
                startoverWindowSeconds:
                  description: |
                    Maximum duration (seconds) of content to retain for startover playback.
                    If not specified, startover playback will be disabled for the OriginEndpoint.
                  type: integer
                tags:
                  description: A collection of tags associated with a resource
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                timeDelaySeconds:
                  description: |
                    Amount of delay (seconds) to enforce on the playback of live content.
                    If not specified, there will be no time delay in effect for the OriginEndpoint.
                  type: integer
                whitelist:
                  description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListOriginEndpoints
      description: Returns a collection of OriginEndpoint records.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginEndpointsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: channelId
          in: query
          required: false
          description: 'When specified, the request will return only OriginEndpoints associated with the given Channel ID.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/channels/{id}':
    delete:
      operationId: DeleteChannel
      description: Deletes an existing Channel.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannel
      description: Gets details about a Channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a Channel.
          schema:
            type: string
    put:
      operationId: UpdateChannel
      description: Updates an existing Channel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A short text description of the Channel.
                  type: string
  '/origin_endpoints/{id}':
    delete:
      operationId: DeleteOriginEndpoint
      description: Deletes an existing OriginEndpoint.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeOriginEndpoint
      description: Gets details about an existing OriginEndpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint.
          schema:
            type: string
    put:
      operationId: UpdateOriginEndpoint
      description: Updates an existing OriginEndpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorization:
                  description: CDN Authorization credentials
                  type: object
                  properties:
                    CdnIdentifierSecret:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: cdnIdentifierSecret
                          description: |
                            The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
                    SecretsRoleArn:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: secretsRoleArn
                          description: |
                            The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
                cmafPackage:
                  description: A Common Media Application Format (CMAF) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/CmafEncryption'
                        - xml:
                            name: encryption
                    HlsManifests:
                      allOf:
                        - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
                        - xml:
                            name: hlsManifests
                          description: A list of HLS manifest configurations
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each segment. Actual segments will be
                            rounded to the nearest multiple of the source segment duration.
                    SegmentPrefix:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: segmentPrefix
                          description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                dashPackage:
                  description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
                  type: object
                  properties:
                    AdTriggers:
                      allOf:
                        - $ref: '#/components/schemas/AdTriggers'
                        - xml:
                            name: adTriggers
                    AdsOnDeliveryRestrictions:
                      allOf:
                        - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
                        - xml:
                            name: adsOnDeliveryRestrictions
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/DashEncryption'
                        - xml:
                            name: encryption
                    ManifestLayout:
                      allOf:
                        - $ref: '#/components/schemas/ManifestLayout'
                        - xml:
                            name: manifestLayout
                          description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
                    ManifestWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: manifestWindowSeconds
                          description: Time window (in seconds) contained in each manifest.
                    MinBufferTimeSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: minBufferTimeSeconds
                          description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
                    MinUpdatePeriodSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: minUpdatePeriodSeconds
                          description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
                    PeriodTriggers:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
                        - xml:
                            name: periodTriggers
                          description: |
                            A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                            Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                            be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                            the Channel source contains SCTE-35 ad markers.
                    Profile:
                      allOf:
                        - $ref: '#/components/schemas/Profile'
                        - xml:
                            name: profile
                          description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each segment. Actual segments will be
                            rounded to the nearest multiple of the source segment duration.
                    SegmentTemplateFormat:
                      allOf:
                        - $ref: '#/components/schemas/SegmentTemplateFormat'
                        - xml:
                            name: segmentTemplateFormat
                          description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                    SuggestedPresentationDelaySeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: suggestedPresentationDelaySeconds
                          description: Duration (in seconds) to delay live content before presentation.
                    UtcTiming:
                      allOf:
                        - $ref: '#/components/schemas/UtcTiming'
                        - xml:
                            name: utcTiming
                          description: Determines the type of UTCTiming included in the Media Presentation Description (MPD)
                    UtcTimingUri:
                      allOf:
                        - $ref: '#/components/schemas/__string'
                        - xml:
                            name: utcTimingUri
                          description: Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
                description:
                  description: A short text description of the OriginEndpoint.
                  type: string
                hlsPackage:
                  description: An HTTP Live Streaming (HLS) packaging configuration.
                  type: object
                  properties:
                    AdMarkers:
                      allOf:
                        - $ref: '#/components/schemas/AdMarkers'
                        - xml:
                            name: adMarkers
                          description: |
                            This setting controls how ad markers are included in the packaged OriginEndpoint.
                            "NONE" will omit all SCTE-35 ad markers from the output.
                            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                            markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                            "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                            messages in the input source.
                            "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events 
                            in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value 
                            that is greater than 0.
                    AdTriggers:
                      allOf:
                        - $ref: '#/components/schemas/AdTriggers'
                        - xml:
                            name: adTriggers
                    AdsOnDeliveryRestrictions:
                      allOf:
                        - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
                        - xml:
                            name: adsOnDeliveryRestrictions
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/HlsEncryption'
                        - xml:
                            name: encryption
                    IncludeIframeOnlyStream:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: includeIframeOnlyStream
                          description: 'When enabled, an I-Frame only stream will be included in the output.'
                    PlaylistType:
                      allOf:
                        - $ref: '#/components/schemas/PlaylistType'
                        - xml:
                            name: playlistType
                          description: |
                            The HTTP Live Streaming (HLS) playlist type.
                            When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                            entry will be included in the media playlist.
                    PlaylistWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: playlistWindowSeconds
                          description: Time window (in seconds) contained in each parent manifest.
                    ProgramDateTimeIntervalSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: programDateTimeIntervalSeconds
                          description: |
                            The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                            inserted into manifests. Additionally, when an interval is specified
                            ID3Timed Metadata messages will be generated every 5 seconds using the
                            ingest time of the content.
                            If the interval is not specified, or set to 0, then
                            no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                            ID3Timed Metadata messages will be generated. Note that irrespective
                            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                            it will be passed through to HLS output.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: |
                            Duration (in seconds) of each fragment. Actual fragments will be
                            rounded to the nearest multiple of the source fragment duration.
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                    UseAudioRenditionGroup:
                      allOf:
                        - $ref: '#/components/schemas/__boolean'
                        - xml:
                            name: useAudioRenditionGroup
                          description: 'When enabled, audio streams will be placed in rendition groups in the output.'
                manifestName:
                  description: A short string that will be appended to the end of the Endpoint URL.
                  type: string
                mssPackage:
                  description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                  type: object
                  properties:
                    Encryption:
                      allOf:
                        - $ref: '#/components/schemas/MssEncryption'
                        - xml:
                            name: encryption
                    ManifestWindowSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: manifestWindowSeconds
                          description: The time window (in seconds) contained in each manifest.
                    SegmentDurationSeconds:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - xml:
                            name: segmentDurationSeconds
                          description: The duration (in seconds) of each segment.
                    StreamSelection:
                      allOf:
                        - $ref: '#/components/schemas/StreamSelection'
                        - xml:
                            name: streamSelection
                origination:
                  description: |
                    Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                    may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                    requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                  enum:
                    - ALLOW
                    - DENY
                  type: string
                startoverWindowSeconds:
                  description: |
                    Maximum duration (in seconds) of content to retain for startover playback.
                    If not specified, startover playback will be disabled for the OriginEndpoint.
                  type: integer
                timeDelaySeconds:
                  description: |
                    Amount of delay (in seconds) to enforce on the playback of live content.
                    If not specified, there will be no time delay in effect for the OriginEndpoint.
                  type: integer
                whitelist:
                  description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
  '/harvest_jobs/{id}':
    get:
      operationId: DescribeHarvestJob
      description: Gets details about an existing HarvestJob.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHarvestJobResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the HarvestJob.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resource-arn}':
    get:
      operationId: ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: ''
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/channels/{id}/credentials':
    put:
      deprecated: true
      operationId: RotateChannelCredentials
      description: Changes the Channel's first IngestEndpoint's username and password. WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials instead
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateChannelCredentialsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel to update.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials':
    put:
      operationId: RotateIngestEndpointCredentials
      description: 'Rotate the IngestEndpoint''s username and password, as specified by the IngestEndpoint''s id.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateIngestEndpointCredentialsResponse'
        '480':
          description: UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel the IngestEndpoint is on.
          schema:
            type: string
        - name: ingest_endpoint_id
          in: path
          required: true
          description: The id of the IngestEndpoint whose credentials should be rotated
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resource-arn}#tagKeys':
    delete:
      operationId: UntagResource
      description: ''
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The key(s) of tag to be deleted
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ConfigureLogsResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    __string:
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    CreateHarvestJobResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: |
                The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: |
                The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: |
                The time the HarvestJob was submitted
        EndTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: endTime
              description: |
                The end of the time-window which will be harvested.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the HarvestJob. The ID must be unique within the region
                and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: originEndpointId
              description: |
                The ID of the OriginEndpoint that the HarvestJob will harvest from.
                This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          allOf:
            - $ref: '#/components/schemas/S3Destination'
            - xml:
                name: s3Destination
        StartTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: startTime
              description: |
                The start of the time-window which will be harvested.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: |
                The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
                HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
                include an explanation of why the HarvestJob failed.
    CreateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
    CmafEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: 'An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don''t specify a value, then MediaPackage creates the constant initialization vector (IV).'
        KeyRotationIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: keyRotationIntervalSeconds
              description: Time (in seconds) between each encryption key rotation.
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A Common Media Application Format (CMAF) encryption configuration.
    __listOfHlsManifestCreateOrUpdateParameters:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifestCreateOrUpdateParameters'
    __integer:
      type: integer
    StreamSelection:
      type: object
      properties:
        MaxVideoBitsPerSecond:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: maxVideoBitsPerSecond
              description: The maximum video bitrate (bps) to include in output.
        MinVideoBitsPerSecond:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minVideoBitsPerSecond
              description: The minimum video bitrate (bps) to include in output.
        StreamOrder:
          allOf:
            - $ref: '#/components/schemas/StreamOrder'
            - xml:
                name: streamOrder
              description: A directive that determines the order of streams in the output.
      description: A StreamSelection configuration.
    AdTriggers:
      type: array
      description: |
        A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no
        ad markers are output.  Specify multiple items to create ad markers for all of the included
        message types.
      items:
        $ref: '#/components/schemas/__AdTriggersElement'
    AdsOnDeliveryRestrictions:
      enum:
        - NONE
        - RESTRICTED
        - UNRESTRICTED
        - BOTH
      type: string
      description: |
        This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to
        determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become
        ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that
        contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35
        messages of the types specified in AdTriggers that do not contain delivery restrictions will
        be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in
        AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags
        and are always treated as ads if specified in AdTriggers.
    DashEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        KeyRotationIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: keyRotationIntervalSeconds
              description: Time (in seconds) between each encryption key rotation.
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    ManifestLayout:
      enum:
        - FULL
        - COMPACT
      type: string
    __listOf__PeriodTriggersElement:
      type: array
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
    Profile:
      enum:
        - NONE
        - HBBTV_1_5
      type: string
    SegmentTemplateFormat:
      enum:
        - NUMBER_WITH_TIMELINE
        - TIME_WITH_TIMELINE
        - NUMBER_WITH_DURATION
      type: string
    UtcTiming:
      enum:
        - NONE
        - HTTP-HEAD
        - HTTP-ISO
      type: string
    AdMarkers:
      enum:
        - NONE
        - SCTE35_ENHANCED
        - PASSTHROUGH
        - DATERANGE
      type: string
    HlsEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: constantInitializationVector
              description: |
                A constant initialization vector for encryption (optional).
                When not specified the initialization vector will be periodically rotated.
        EncryptionMethod:
          allOf:
            - $ref: '#/components/schemas/EncryptionMethod'
            - xml:
                name: encryptionMethod
              description: The encryption method to use.
        KeyRotationIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: keyRotationIntervalSeconds
              description: Interval (in seconds) between each encryption key rotation.
        RepeatExtXKey:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: repeatExtXKey
              description: 'When enabled, the EXT-X-KEY tag will be repeated in output manifests.'
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: An HTTP Live Streaming (HLS) encryption configuration.
    __boolean:
      type: boolean
    PlaylistType:
      enum:
        - NONE
        - EVENT
        - VOD
      type: string
    MssEncryption:
      required:
        - SpekeKeyProvider
      type: object
      properties:
        SpekeKeyProvider:
          allOf:
            - $ref: '#/components/schemas/SpekeKeyProvider'
            - xml:
                name: spekeKeyProvider
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteOriginEndpointResponse:
      type: object
      properties: {}
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    DescribeHarvestJobResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: |
                The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: |
                The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: |
                The time the HarvestJob was submitted
        EndTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: endTime
              description: |
                The end of the time-window which will be harvested.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the HarvestJob. The ID must be unique within the region
                and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: originEndpointId
              description: |
                The ID of the OriginEndpoint that the HarvestJob will harvest from.
                This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          allOf:
            - $ref: '#/components/schemas/S3Destination'
            - xml:
                name: s3Destination
        StartTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: startTime
              description: |
                The start of the time-window which will be harvested.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: |
                The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
                HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
                include an explanation of why the HarvestJob failed.
    DescribeOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/__listOfChannel'
            - xml:
                name: channels
              description: A list of Channel records.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
    ListHarvestJobsResponse:
      type: object
      properties:
        HarvestJobs:
          allOf:
            - $ref: '#/components/schemas/__listOfHarvestJob'
            - xml:
                name: harvestJobs
              description: A list of HarvestJob records.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
    ListOriginEndpointsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: nextToken
              description: A token that can be used to resume pagination from the end of the collection.
        OriginEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfOriginEndpoint'
            - xml:
                name: originEndpoints
              description: A list of OriginEndpoint records.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
    RotateChannelCredentialsResponse:
      deprecated: true
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    RotateIngestEndpointCredentialsResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
    UpdateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
    __AdTriggersElement:
      enum:
        - SPLICE_INSERT
        - BREAK
        - PROVIDER_ADVERTISEMENT
        - DISTRIBUTOR_ADVERTISEMENT
        - PROVIDER_PLACEMENT_OPPORTUNITY
        - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
        - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
        - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      type: string
    Authorization:
      required:
        - SecretsRoleArn
        - CdnIdentifierSecret
      type: object
      properties:
        CdnIdentifierSecret:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: cdnIdentifierSecret
              description: |
                The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
        SecretsRoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: secretsRoleArn
              description: |
                The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
      description: CDN Authorization credentials
    EgressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: logGroupName
              description: Customize the log group name.
      description: Configure egress access logging.
    HlsIngest:
      type: object
      properties:
        IngestEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfIngestEndpoint'
            - xml:
                name: ingestEndpoints
              description: A list of endpoints to which the source stream should be sent.
      description: An HTTP Live Streaming (HLS) ingest resource configuration.
    IngressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: logGroupName
              description: Customize the log group name.
      description: Configure ingress access logging.
    Tags:
      type: object
      description: A collection of tags associated with a resource
      additionalProperties:
        $ref: '#/components/schemas/__string'
    Channel:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the Channel.
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        HlsIngest:
          allOf:
            - $ref: '#/components/schemas/HlsIngest'
            - xml:
                name: hlsIngest
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the Channel.
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A Channel resource configuration.
    SpekeKeyProvider:
      required:
        - ResourceId
        - SystemIds
        - Url
        - RoleArn
      type: object
      properties:
        CertificateArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: certificateArn
              description: |
                An Amazon Resource Name (ARN) of a Certificate Manager certificate
                that MediaPackage will use for enforcing secure end-to-end data
                transfer with the key provider service.
        EncryptionContractConfiguration:
          allOf:
            - $ref: '#/components/schemas/EncryptionContractConfiguration'
            - xml:
                name: encryptionContractConfiguration
        ResourceId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: resourceId
              description: The resource ID to include in key requests.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: |
                An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
                MediaPackage will assume when accessing the key provider service.
        SystemIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: systemIds
              description: The system IDs to include in key requests.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the external key provider service.
      description: A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
    __listOfHlsManifest:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifest'
    CmafPackage:
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/CmafEncryption'
            - xml:
                name: encryption
        HlsManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfHlsManifest'
            - xml:
                name: hlsManifests
              description: A list of HLS manifest configurations
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each segment. Actual segments will be
                rounded to the nearest multiple of the source segment duration.
        SegmentPrefix:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: segmentPrefix
              description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: A Common Media Application Format (CMAF) packaging configuration.
    CmafPackageCreateOrUpdateParameters:
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/CmafEncryption'
            - xml:
                name: encryption
        HlsManifests:
          allOf:
            - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
            - xml:
                name: hlsManifests
              description: A list of HLS manifest configurations
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each segment. Actual segments will be
                rounded to the nearest multiple of the source segment duration.
        SegmentPrefix:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: segmentPrefix
              description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: A Common Media Application Format (CMAF) packaging configuration.
    ConfigureLogsRequest:
      type: object
      title: ConfigureLogsRequest
      properties:
        EgressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/EgressAccessLogs'
            - xml:
                name: egressAccessLogs
        IngressAccessLogs:
          allOf:
            - $ref: '#/components/schemas/IngressAccessLogs'
            - xml:
                name: ingressAccessLogs
      description: the option to configure log subscription.
    CreateChannelRequest:
      required:
        - Id
      type: object
      title: CreateChannelRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the Channel. The ID must be unique within the region and it
                cannot be changed after a Channel is created.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
      description: A new Channel configuration.
    S3Destination:
      required:
        - ManifestKey
        - BucketName
        - RoleArn
      type: object
      properties:
        BucketName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: bucketName
              description: |
                The name of an S3 bucket within which harvested content will be exported
        ManifestKey:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestKey
              description: |
                The key in the specified S3 bucket where the harvested top-level manifest will be placed.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: roleArn
              description: |
                The IAM role used to write to the specified S3 bucket
      description: |
        Configuration parameters for where in an S3 bucket to place the harvested content
    CreateHarvestJobRequest:
      required:
        - S3Destination
        - EndTime
        - OriginEndpointId
        - StartTime
        - Id
      type: object
      title: CreateHarvestJobRequest
      properties:
        EndTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: endTime
              description: |
                The end of the time-window which will be harvested
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the HarvestJob. The ID must be unique within the region
                and it cannot be changed after the HarvestJob is submitted
        OriginEndpointId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: originEndpointId
              description: |
                The ID of the OriginEndpoint that the HarvestJob will harvest from.
                This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          allOf:
            - $ref: '#/components/schemas/S3Destination'
            - xml:
                name: s3Destination
        StartTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: startTime
              description: |
                The start of the time-window which will be harvested
      description: Configuration parameters used to create a new HarvestJob.
    Status:
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
      type: string
    DashPackage:
      type: object
      properties:
        AdTriggers:
          allOf:
            - $ref: '#/components/schemas/AdTriggers'
            - xml:
                name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
            - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
            - xml:
                name: adsOnDeliveryRestrictions
        Encryption:
          allOf:
            - $ref: '#/components/schemas/DashEncryption'
            - xml:
                name: encryption
        ManifestLayout:
          allOf:
            - $ref: '#/components/schemas/ManifestLayout'
            - xml:
                name: manifestLayout
              description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
        ManifestWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: manifestWindowSeconds
              description: Time window (in seconds) contained in each manifest.
        MinBufferTimeSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minBufferTimeSeconds
              description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
        MinUpdatePeriodSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: minUpdatePeriodSeconds
              description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
        PeriodTriggers:
          allOf:
            - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
            - xml:
                name: periodTriggers
              description: |
                A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                the Channel source contains SCTE-35 ad markers.
        Profile:
          allOf:
            - $ref: '#/components/schemas/Profile'
            - xml:
                name: profile
              description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each segment. Actual segments will be
                rounded to the nearest multiple of the source segment duration.
        SegmentTemplateFormat:
          allOf:
            - $ref: '#/components/schemas/SegmentTemplateFormat'
            - xml:
                name: segmentTemplateFormat
              description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
        SuggestedPresentationDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: suggestedPresentationDelaySeconds
              description: Duration (in seconds) to delay live content before presentation.
        UtcTiming:
          allOf:
            - $ref: '#/components/schemas/UtcTiming'
            - xml:
                name: utcTiming
              description: Determines the type of UTCTiming included in the Media Presentation Description (MPD)
        UtcTimingUri:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: utcTimingUri
              description: Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    HlsPackage:
      type: object
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/AdMarkers'
            - xml:
                name: adMarkers
              description: |
                This setting controls how ad markers are included in the packaged OriginEndpoint.
                "NONE" will omit all SCTE-35 ad markers from the output.
                "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                messages in the input source.
                "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events 
                in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value 
                that is greater than 0.
        AdTriggers:
          allOf:
            - $ref: '#/components/schemas/AdTriggers'
            - xml:
                name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
            - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
            - xml:
                name: adsOnDeliveryRestrictions
        Encryption:
          allOf:
            - $ref: '#/components/schemas/HlsEncryption'
            - xml:
                name: encryption
        IncludeIframeOnlyStream:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeIframeOnlyStream
              description: 'When enabled, an I-Frame only stream will be included in the output.'
        PlaylistType:
          allOf:
            - $ref: '#/components/schemas/PlaylistType'
            - xml:
                name: playlistType
              description: |
                The HTTP Live Streaming (HLS) playlist type.
                When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                entry will be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: playlistWindowSeconds
              description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programDateTimeIntervalSeconds
              description: |
                The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                inserted into manifests. Additionally, when an interval is specified
                ID3Timed Metadata messages will be generated every 5 seconds using the
                ingest time of the content.
                If the interval is not specified, or set to 0, then
                no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                ID3Timed Metadata messages will be generated. Note that irrespective
                of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                it will be passed through to HLS output.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: |
                Duration (in seconds) of each fragment. Actual fragments will be
                rounded to the nearest multiple of the source fragment duration.
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
        UseAudioRenditionGroup:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: useAudioRenditionGroup
              description: 'When enabled, audio streams will be placed in rendition groups in the output.'
      description: An HTTP Live Streaming (HLS) packaging configuration.
    MssPackage:
      type: object
      properties:
        Encryption:
          allOf:
            - $ref: '#/components/schemas/MssEncryption'
            - xml:
                name: encryption
        ManifestWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: manifestWindowSeconds
              description: The time window (in seconds) contained in each manifest.
        SegmentDurationSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: segmentDurationSeconds
              description: The duration (in seconds) of each segment.
        StreamSelection:
          allOf:
            - $ref: '#/components/schemas/StreamSelection'
            - xml:
                name: streamSelection
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
    Origination:
      enum:
        - ALLOW
        - DENY
      type: string
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    CreateOriginEndpointRequest:
      required:
        - ChannelId
        - Id
      type: object
      title: CreateOriginEndpointRequest
      properties:
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: |
                The ID of the Channel that the OriginEndpoint will be associated with.
                This cannot be changed after the OriginEndpoint is created.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the OriginEndpoint.  The ID must be unique within the region
                and it cannot be changed after the OriginEndpoint is created.
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
      description: Configuration parameters used to create a new OriginEndpoint.
    DeleteChannelRequest:
      type: object
      title: DeleteChannelRequest
      properties: {}
    DeleteOriginEndpointRequest:
      type: object
      title: DeleteOriginEndpointRequest
      properties: {}
    DescribeChannelRequest:
      type: object
      title: DescribeChannelRequest
      properties: {}
    DescribeHarvestJobRequest:
      type: object
      title: DescribeHarvestJobRequest
      properties: {}
    DescribeOriginEndpointRequest:
      type: object
      title: DescribeOriginEndpointRequest
      properties: {}
    PresetSpeke20Audio:
      enum:
        - PRESET-AUDIO-1
      type: string
    PresetSpeke20Video:
      enum:
        - PRESET-VIDEO-1
      type: string
    EncryptionContractConfiguration:
      required:
        - PresetSpeke20Audio
        - PresetSpeke20Video
      type: object
      properties:
        PresetSpeke20Audio:
          allOf:
            - $ref: '#/components/schemas/PresetSpeke20Audio'
            - xml:
                name: presetSpeke20Audio
              description: A collection of audio encryption presets.
        PresetSpeke20Video:
          allOf:
            - $ref: '#/components/schemas/PresetSpeke20Video'
            - xml:
                name: presetSpeke20Video
              description: A collection of video encryption presets.
      description: |
        Use encryptionContractConfiguration to configure one or more content encryption keys for your endpoints that use SPEKE 2.0. 
        The encryption contract defines which content keys are used to encrypt the audio and video tracks in your stream. 
        To configure the encryption contract, specify which audio and video encryption presets to use.
        Note the following considerations when using encryptionContractConfiguration:
        encryptionContractConfiguration can be used for DASH or CMAF endpoints that use SPEKE 2.0. SPEKE 2.0 relies on the CPIX 2.3 specification.
        You must disable key rotation for this endpoint by setting keyRotationIntervalSeconds to 0.
    EncryptionMethod:
      enum:
        - AES_128
        - SAMPLE_AES
      type: string
    HarvestJob:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: |
                The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: |
                The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: createdAt
              description: |
                The time the HarvestJob was submitted
        EndTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: endTime
              description: |
                The end of the time-window which will be harvested.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: |
                The ID of the HarvestJob. The ID must be unique within the region
                and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: originEndpointId
              description: |
                The ID of the OriginEndpoint that the HarvestJob will harvest from.
                This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          allOf:
            - $ref: '#/components/schemas/S3Destination'
            - xml:
                name: s3Destination
        StartTime:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: startTime
              description: |
                The start of the time-window which will be harvested.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - xml:
                name: status
              description: |
                The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
                HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
                include an explanation of why the HarvestJob failed.
      description: A HarvestJob resource configuration
    __listOfIngestEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/IngestEndpoint'
    HlsManifest:
      required:
        - Id
      type: object
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/AdMarkers'
            - xml:
                name: adMarkers
              description: |
                This setting controls how ad markers are included in the packaged OriginEndpoint.
                "NONE" will omit all SCTE-35 ad markers from the output.
                "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                messages in the input source.
                "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events 
                in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value 
                that is greater than 0.
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
        IncludeIframeOnlyStream:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeIframeOnlyStream
              description: 'When enabled, an I-Frame only stream will be included in the output.'
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: 'An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.'
        PlaylistType:
          allOf:
            - $ref: '#/components/schemas/PlaylistType'
            - xml:
                name: playlistType
              description: |
                The HTTP Live Streaming (HLS) playlist type.
                When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                entry will be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: playlistWindowSeconds
              description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programDateTimeIntervalSeconds
              description: |
                The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                inserted into manifests. Additionally, when an interval is specified
                ID3Timed Metadata messages will be generated every 5 seconds using the
                ingest time of the content.
                If the interval is not specified, or set to 0, then
                no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                ID3Timed Metadata messages will be generated. Note that irrespective
                of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                it will be passed through to HLS output.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the packaged OriginEndpoint for consumption.
      description: A HTTP Live Streaming (HLS) manifest configuration.
    HlsManifestCreateOrUpdateParameters:
      required:
        - Id
      type: object
      properties:
        AdMarkers:
          allOf:
            - $ref: '#/components/schemas/AdMarkers'
            - xml:
                name: adMarkers
              description: |
                This setting controls how ad markers are included in the packaged OriginEndpoint.
                "NONE" will omit all SCTE-35 ad markers from the output.
                "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                messages in the input source.
                "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events 
                in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value 
                that is greater than 0.
        AdTriggers:
          allOf:
            - $ref: '#/components/schemas/AdTriggers'
            - xml:
                name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
            - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
            - xml:
                name: adsOnDeliveryRestrictions
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
        IncludeIframeOnlyStream:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - xml:
                name: includeIframeOnlyStream
              description: 'When enabled, an I-Frame only stream will be included in the output.'
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: 'An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.'
        PlaylistType:
          allOf:
            - $ref: '#/components/schemas/PlaylistType'
            - xml:
                name: playlistType
              description: |
                The HTTP Live Streaming (HLS) playlist type.
                When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                entry will be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: playlistWindowSeconds
              description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: programDateTimeIntervalSeconds
              description: |
                The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                inserted into manifests. Additionally, when an interval is specified
                ID3Timed Metadata messages will be generated every 5 seconds using the
                ingest time of the content.
                If the interval is not specified, or set to 0, then
                no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                ID3Timed Metadata messages will be generated. Note that irrespective
                of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                it will be passed through to HLS output.
      description: A HTTP Live Streaming (HLS) manifest configuration.
    IngestEndpoint:
      type: object
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The system generated unique identifier for the IngestEndpoint
        Password:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: password
              description: The system generated password for ingest authentication.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The ingest URL to which the source stream should be sent.
        Username:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: username
              description: The system generated username for ingest authentication.
      description: An endpoint for ingesting source content for a Channel.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListChannelsRequest:
      type: object
      title: ListChannelsRequest
      properties: {}
    __listOfChannel:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    ListHarvestJobsRequest:
      type: object
      title: ListHarvestJobsRequest
      properties: {}
    __listOfHarvestJob:
      type: array
      items:
        $ref: '#/components/schemas/HarvestJob'
    ListOriginEndpointsRequest:
      type: object
      title: ListOriginEndpointsRequest
      properties: {}
    __listOfOriginEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/OriginEndpoint'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    OriginEndpoint:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: channelId
              description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackage'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        Id:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: id
              description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - xml:
                name: tags
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Url:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: url
              description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
      description: An OriginEndpoint resource configuration.
    RotateChannelCredentialsRequest:
      deprecated: true
      type: object
      title: RotateChannelCredentialsRequest
      properties: {}
    RotateIngestEndpointCredentialsRequest:
      type: object
      title: RotateIngestEndpointCredentialsRequest
      properties: {}
    StreamOrder:
      enum:
        - ORIGINAL
        - VIDEO_BITRATE_ASCENDING
        - VIDEO_BITRATE_DESCENDING
      type: string
    TagResourceRequest:
      required:
        - Tags
      type: object
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__string'
            - xml:
                name: tags
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateChannelRequest:
      type: object
      title: UpdateChannelRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the Channel.
      description: Configuration parameters used to update the Channel.
    UpdateOriginEndpointRequest:
      type: object
      title: UpdateOriginEndpointRequest
      properties:
        Authorization:
          allOf:
            - $ref: '#/components/schemas/Authorization'
            - xml:
                name: authorization
        CmafPackage:
          allOf:
            - $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
            - xml:
                name: cmafPackage
        DashPackage:
          allOf:
            - $ref: '#/components/schemas/DashPackage'
            - xml:
                name: dashPackage
        Description:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: description
              description: A short text description of the OriginEndpoint.
        HlsPackage:
          allOf:
            - $ref: '#/components/schemas/HlsPackage'
            - xml:
                name: hlsPackage
        ManifestName:
          allOf:
            - $ref: '#/components/schemas/__string'
            - xml:
                name: manifestName
              description: A short string that will be appended to the end of the Endpoint URL.
        MssPackage:
          allOf:
            - $ref: '#/components/schemas/MssPackage'
            - xml:
                name: mssPackage
        Origination:
          allOf:
            - $ref: '#/components/schemas/Origination'
            - xml:
                name: origination
              description: |
                Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        StartoverWindowSeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: startoverWindowSeconds
              description: |
                Maximum duration (in seconds) of content to retain for startover playback.
                If not specified, startover playback will be disabled for the OriginEndpoint.
        TimeDelaySeconds:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - xml:
                name: timeDelaySeconds
              description: |
                Amount of delay (in seconds) to enforce on the playback of live content.
                If not specified, there will be no time delay in effect for the OriginEndpoint.
        Whitelist:
          allOf:
            - $ref: '#/components/schemas/__listOf__string'
            - xml:
                name: whitelist
              description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
      description: Configuration parameters used to update an existing OriginEndpoint.
    __PeriodTriggersElement:
      enum:
        - ADS
      type: string
security:
  - hmac: []
