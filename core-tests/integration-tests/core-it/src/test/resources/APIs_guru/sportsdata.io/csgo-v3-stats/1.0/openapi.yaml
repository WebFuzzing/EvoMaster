openapi: 3.0.0
servers:
  - url: http://api.sportsdata.io
  - url: https://api.sportsdata.io
  - url: http://azure-api.sportsdata.io
  - url: https://azure-api.sportsdata.io
info:
  contact:
    x-twitter: nfldata
  description: CS:GO v3 Stats
  title: CS:GO v3 Stats
  version: "1.0"
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: https://twitter.com/nfldata/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://fantasydata.com/downloads/swagger/csgo-v3-stats.json
      version: "2.0"
  x-providerName: sportsdata.io
  x-serviceName: csgo-v3-stats
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
tags: []
paths:
  "/{format}/ActiveMemberships":
    get:
      description: Memberships (Active)
      operationId: MembershipsActive
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Membership"
                type: array
          description: ""
      summary: Memberships (Active)
  "/{format}/Areas":
    get:
      description: Areas (Countries)
      operationId: AreasCountries
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Area"
                type: array
          description: ""
      summary: Areas (Countries)
  "/{format}/BoxScore/{gameid}":
    get:
      description: Box Scores by Date
      operationId: BoxScore
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: "Unique GameId for the desired box scores. Examples: <code>100000091</code>"
          in: path
          name: gameid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BoxScore"
                type: array
          description: ""
      summary: Box Score
  "/{format}/BoxScores/{date}":
    get:
      description: Box Scores by Date
      operationId: BoxScoresByDate
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-01-13</code>, <code>2018-06-13</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BoxScore"
                type: array
          description: ""
      summary: Box Scores by Date
  "/{format}/CompetitionDetails/{competitionid}":
    get:
      description: Competition Fixtures (League Details)
      operationId: CompetitionFixturesLeagueDetails
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: "A CS:GO competition/league unique CompetitionId. Possible values include: <code>100000009</code>, etc."
          in: path
          name: competitionid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompetitionDetail"
          description: ""
      summary: Competition Fixtures (League Details)
  "/{format}/Competitions":
    get:
      description: Competitions (Leagues)
      operationId: CompetitionsLeagues
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Competition"
                type: array
          description: ""
      summary: Competitions (Leagues)
  "/{format}/GamesByDate/{date}":
    get:
      description: Games by Date
      operationId: GamesByDate
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-01-13</code>, <code>2018-06-13</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Game"
                type: array
          description: ""
      summary: Games by Date
  "/{format}/HistoricalMemberships":
    get:
      description: Memberships (Historical)
      operationId: MembershipsHistorical
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Membership"
                type: array
          description: ""
      summary: Memberships (Historical)
  "/{format}/HistoricalMembershipsByTeam/{teamid}":
    get:
      description: Memberships by Team (Historical)
      operationId: MembershipsByTeamHistorical
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Membership"
                type: array
          description: ""
      summary: Memberships by Team (Historical)
  "/{format}/MembershipsByTeam/{teamid}":
    get:
      description: Memberships by Team (Active)
      operationId: MembershipsByTeamActive
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Membership"
                type: array
          description: ""
      summary: Memberships by Team (Active)
  "/{format}/Player/{playerid}":
    get:
      description: Player
      operationId: Player
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>100000576</code>.
          in: path
          name: playerid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
          description: ""
      summary: Player
  "/{format}/Players":
    get:
      description: Players
      operationId: Players
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Player"
                type: array
          description: ""
      summary: Players
  "/{format}/PlayersByTeam/{teamid}":
    get:
      description: Players by Team
      operationId: PlayersByTeam
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Player"
                type: array
          description: ""
      summary: Players by Team
  "/{format}/Schedule/{roundid}":
    get:
      description: Schedule
      operationId: Schedule
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Round ID. RoundIDs can be found in the Competitions and Competition Details endpoints. 
            Examples: <code>100000138</code>, <code>1000001412</code>, etc
          in: path
          name: roundid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Game"
                type: array
          description: ""
      summary: Schedule
  "/{format}/SeasonTeams/{seasonid}":
    get:
      description: Season Teams
      operationId: SeasonTeams
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Season ID. SeasonIDs can be found in the Competitions and Competition Details endpoints. 
            Examples: <code>100000023</code>, <code>100000024</code>, etc
          in: path
          name: seasonid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SeasonTeam"
                type: array
          description: ""
      summary: Season Teams
  "/{format}/Standings/{roundid}":
    get:
      description: Schedule
      operationId: Standings
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
        - description: |-
            Unique FantasyData Round ID. RoundIDs can be found in the Competitions and Competition Details endpoints. 
            Example: <code>100000138</code>, etc
          in: path
          name: roundid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Standing"
                type: array
          description: ""
      summary: Standings
  "/{format}/Teams":
    get:
      description: Teams
      operationId: Teams
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Team"
                type: array
          description: ""
      summary: Teams
  "/{format}/Venues":
    get:
      description: Venues
      operationId: Venues
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            default: xml
            enum:
              - xml
              - json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Venue"
                type: array
          description: ""
      summary: Venues
components:
  schemas:
    Area:
      properties:
        AreaId:
          nullable: false
          type: integer
        CountryCode:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
    BoxScore:
      properties:
        Game:
          $ref: "#/components/schemas/Game"
        Maps:
          items:
            $ref: "#/components/schemas/Map"
          type: array
    Competition:
      properties:
        AreaId:
          nullable: false
          type: integer
        AreaName:
          nullable: true
          type: string
        CompetitionId:
          nullable: false
          type: integer
        Format:
          nullable: true
          type: string
        Gender:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        PlayerStatsCoverage:
          nullable: true
          type: boolean
        Seasons:
          items:
            $ref: "#/components/schemas/Season"
          type: array
        Type:
          nullable: true
          type: string
    CompetitionDetail:
      properties:
        AreaId:
          nullable: false
          type: integer
        AreaName:
          nullable: true
          type: string
        CompetitionId:
          nullable: false
          type: integer
        CurrentSeason:
          $ref: "#/components/schemas/Season"
        Format:
          nullable: true
          type: string
        Games:
          items:
            $ref: "#/components/schemas/Game"
          type: array
        Gender:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        PlayerStatsCoverage:
          nullable: true
          type: boolean
        Seasons:
          items:
            $ref: "#/components/schemas/Season"
          type: array
        Teams:
          items:
            $ref: "#/components/schemas/TeamDetail"
          type: array
        Type:
          nullable: true
          type: string
    Game:
      properties:
        BestOf:
          nullable: true
          type: string
        DateTime:
          nullable: true
          type: string
        Day:
          nullable: true
          type: string
        DrawMoneyLine:
          nullable: true
          type: integer
        GameId:
          nullable: false
          type: integer
        Group:
          nullable: true
          type: string
        IsClosed:
          nullable: true
          type: boolean
        PointSpread:
          nullable: true
          type: number
        RoundId:
          nullable: false
          type: integer
        Season:
          nullable: false
          type: integer
        SeasonType:
          nullable: false
          type: integer
        Status:
          nullable: true
          type: string
        TeamAId:
          nullable: true
          type: integer
        TeamAKey:
          nullable: true
          type: string
        TeamAMoneyLine:
          nullable: true
          type: integer
        TeamAName:
          nullable: true
          type: string
        TeamAPointSpreadPayout:
          nullable: true
          type: integer
        TeamAScore:
          nullable: true
          type: integer
        TeamBId:
          nullable: true
          type: integer
        TeamBKey:
          nullable: true
          type: string
        TeamBMoneyLine:
          nullable: true
          type: integer
        TeamBName:
          nullable: true
          type: string
        TeamBPointSpreadPayout:
          nullable: true
          type: integer
        TeamBScore:
          nullable: true
          type: integer
        Updated:
          nullable: true
          type: string
        UpdatedUtc:
          nullable: true
          type: string
        VenueId:
          nullable: true
          type: integer
        VenueType:
          nullable: true
          type: string
        Week:
          nullable: true
          type: integer
        Winner:
          nullable: true
          type: string
    Leaderboard:
      properties:
        Aces:
          nullable: true
          type: number
        Assists:
          nullable: true
          type: number
        AverageDamagePerRound:
          nullable: true
          type: number
        Clutch1v2s:
          nullable: true
          type: number
        Clutch1v3s:
          nullable: true
          type: number
        Clutch1v4s:
          nullable: true
          type: number
        Clutch1v5s:
          nullable: true
          type: number
        DateTime:
          nullable: true
          type: string
        Day:
          nullable: true
          type: string
        Deaths:
          nullable: true
          type: number
        EntryKills:
          nullable: true
          type: number
        FantasyPoints:
          nullable: true
          type: number
        GameId:
          nullable: true
          type: integer
        Games:
          nullable: true
          type: integer
        Headshots:
          nullable: true
          type: number
        IsClosed:
          nullable: false
          type: boolean
        Kast:
          nullable: true
          type: number
        Kills:
          nullable: true
          type: number
        Maps:
          nullable: true
          type: number
        MatchName:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Opponent:
          nullable: true
          type: string
        OpponentId:
          nullable: true
          type: integer
        PlayerId:
          nullable: true
          type: integer
        QuadKills:
          nullable: true
          type: number
        Rating:
          nullable: true
          type: number
        Team:
          nullable: true
          type: string
        TeamId:
          nullable: true
          type: integer
        Updated:
          nullable: true
          type: string
        UpdatedUtc:
          nullable: true
          type: string
    Map:
      properties:
        CurrentRound:
          nullable: true
          type: integer
        Leaderboards:
          items:
            $ref: "#/components/schemas/Leaderboard"
          type: array
        Name:
          nullable: true
          type: string
        Number:
          nullable: true
          type: integer
        Status:
          nullable: true
          type: string
        TeamAScore:
          nullable: true
          type: integer
        TeamBScore:
          nullable: true
          type: integer
    Membership:
      properties:
        Active:
          nullable: false
          type: boolean
        EndDate:
          nullable: true
          type: string
        MembershipId:
          nullable: false
          type: integer
        PlayerId:
          nullable: false
          type: integer
        PlayerName:
          nullable: true
          type: string
        StartDate:
          nullable: true
          type: string
        TeamArea:
          nullable: true
          type: string
        TeamId:
          nullable: false
          type: integer
        TeamName:
          nullable: true
          type: string
        Updated:
          nullable: true
          type: string
    Player:
      properties:
        BirthCity:
          nullable: true
          type: string
        BirthCountry:
          nullable: true
          type: string
        BirthDate:
          nullable: true
          type: string
        CommonName:
          nullable: true
          type: string
        FirstName:
          nullable: true
          type: string
        Gender:
          nullable: true
          type: string
        LastName:
          nullable: true
          type: string
        MatchName:
          nullable: true
          type: string
        Nationality:
          nullable: true
          type: string
        PlayerId:
          nullable: false
          type: integer
        Position:
          nullable: true
          type: string
        Updated:
          nullable: true
          type: string
    Round:
      properties:
        CurrentRound:
          nullable: false
          type: boolean
        CurrentWeek:
          nullable: true
          type: integer
        EndDate:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        RoundId:
          nullable: false
          type: integer
        Season:
          nullable: false
          type: integer
        SeasonId:
          nullable: false
          type: integer
        SeasonType:
          nullable: false
          type: integer
        StartDate:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
    Season:
      properties:
        CompetitionId:
          nullable: false
          type: integer
        CompetitionName:
          nullable: true
          type: string
        CurrentSeason:
          nullable: false
          type: boolean
        EndDate:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Rounds:
          items:
            $ref: "#/components/schemas/Round"
          type: array
        Season:
          nullable: false
          type: integer
        SeasonId:
          nullable: false
          type: integer
        StartDate:
          nullable: true
          type: string
    SeasonTeam:
      properties:
        Active:
          nullable: false
          type: boolean
        Gender:
          nullable: true
          type: string
        SeasonId:
          nullable: false
          type: integer
        SeasonTeamId:
          nullable: false
          type: integer
        Team:
          $ref: "#/components/schemas/Team"
        TeamId:
          nullable: false
          type: integer
        TeamName:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
    Standing:
      properties:
        Games:
          nullable: false
          type: integer
        Group:
          nullable: true
          type: string
        Losses:
          nullable: false
          type: integer
        Name:
          nullable: true
          type: string
        Order:
          nullable: true
          type: integer
        Points:
          nullable: false
          type: integer
        RoundId:
          nullable: false
          type: integer
        ScoreAgainst:
          nullable: false
          type: integer
        ScoreDifference:
          nullable: false
          type: integer
        ScoreFor:
          nullable: false
          type: integer
        StandingId:
          nullable: false
          type: integer
        TeamId:
          nullable: false
          type: integer
        Wins:
          nullable: false
          type: integer
    Team:
      properties:
        Active:
          nullable: false
          type: boolean
        AreaId:
          nullable: true
          type: integer
        AreaName:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        Facebook:
          nullable: true
          type: string
        Founded:
          nullable: true
          type: integer
        Gender:
          nullable: true
          type: string
        Instagram:
          nullable: true
          type: string
        Key:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        PrimaryColor:
          nullable: true
          type: string
        QuaternaryColor:
          nullable: true
          type: string
        SecondaryColor:
          nullable: true
          type: string
        ShortName:
          nullable: true
          type: string
        TeamId:
          nullable: false
          type: integer
        TertiaryColor:
          nullable: true
          type: string
        Twitter:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        Website:
          nullable: true
          type: string
        YouTube:
          nullable: true
          type: string
    TeamDetail:
      properties:
        Active:
          nullable: false
          type: boolean
        AreaId:
          nullable: true
          type: integer
        AreaName:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        Facebook:
          nullable: true
          type: string
        Founded:
          nullable: true
          type: integer
        Gender:
          nullable: true
          type: string
        Instagram:
          nullable: true
          type: string
        Key:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Players:
          items:
            $ref: "#/components/schemas/Player"
          type: array
        PrimaryColor:
          nullable: true
          type: string
        QuaternaryColor:
          nullable: true
          type: string
        SecondaryColor:
          nullable: true
          type: string
        ShortName:
          nullable: true
          type: string
        TeamId:
          nullable: false
          type: integer
        TertiaryColor:
          nullable: true
          type: string
        Twitter:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        Website:
          nullable: true
          type: string
        YouTube:
          nullable: true
          type: string
    Venue:
      properties:
        Address:
          nullable: true
          type: string
        Capacity:
          nullable: true
          type: integer
        City:
          nullable: true
          type: string
        Country:
          nullable: true
          type: string
        GeoLat:
          nullable: true
          type: number
        GeoLong:
          nullable: true
          type: number
        Name:
          nullable: true
          type: string
        Nickname1:
          nullable: true
          type: string
        Nickname2:
          nullable: true
          type: string
        Open:
          nullable: false
          type: boolean
        Opened:
          nullable: true
          type: integer
        VenueId:
          nullable: false
          type: integer
        Zip:
          nullable: true
          type: string
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
    apiKeyQuery:
      in: query
      name: subscription-key
      type: apiKey
